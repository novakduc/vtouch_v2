

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 01:01:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=4,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=4,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=4,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=4,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=4,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=4,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=4,class=CODE,delta=1
   209                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   210                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   213                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   214  0000                     
   215                           ; Version 2.10
   216                           ; Generated 31/07/2019 GMT
   217                           ; 
   218                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   219                           ; All rights reserved.
   220                           ; 
   221                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   222                           ; 
   223                           ; Redistribution and use in source and binary forms, with or without modification, are
   224                           ; permitted provided that the following conditions are met:
   225                           ; 
   226                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   227                           ;        conditions and the following disclaimer.
   228                           ; 
   229                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   230                           ;        of conditions and the following disclaimer in the documentation and/or other
   231                           ;        materials provided with the distribution.
   232                           ; 
   233                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   234                           ;        software without specific prior written permission.
   235                           ; 
   236                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   237                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   238                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   239                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   240                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   241                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   242                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   243                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   244                           ; 
   245                           ; 
   246                           ; Code-generator required, PIC18F57K42 Definitions
   247                           ; 
   248                           ; SFR Addresses
   249  0000                     
   250 ;;_main$3790	offset	0
   251 ;;_main$3786	offset	2
   252 ;;_esr_temp	offset	4
   253 ;;_i_esr	offset	8
   254 ;;_shape	offset	10
   255 ;;_inp_index	offset	11
   256 ;;_k	offset	12
   257 ;;_j	offset	13
   258 ;;_i	offset	14
   259 ;;_mode	offset	15
   260 ;;_i_ror	offset	16
   261 ;;_s	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_fsm	offset=-1 (param)
   277 ;;_channel	offset=-1 (param)
   278 ;;_mode	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_cmd	offset=-1 (param)
   281 ;;_x	offset	0
   282 ;;_c	offset	0
   283 ;;_shape	offset=-1 (param)
   284 ;;_reset	offset=-2 (param)
   285 ;;_i	offset=-1 (param)
   286 ;;_a200	offset	0
   287 ;;_a100	offset	2
   288 ;;_mode	offset=-1 (param)
   289 ;;_value	offset=-2 (param)
   290 ;;_window	offset=-4 (param)
   291 ;;_standard	offset=-6 (param)
   292 ;;_i	offset	0
   293 ;;_h	offset=-2 (param)
   294 ;;_flipper	offset=-1 (param)
   295 ;;_f	offset	0
   296 ;;_ap	offset	6
   297 ;;_s	offset=-3 (param)
   298 ;;_fmt	offset=-5 (param)
   299 ;;_line	offset=-1 (param)
   300 ;;_vterm	offset=-2 (param)
   301 ;;_numMilliseconds	offset=-2 (param)
   302 ;;_vterm	offset=-1 (param)
   303 ;;_row	offset	0
   304 ;;_r	offset=-1 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_strPtr	offset=-4 (param)
   307 ;;_strPtr	offset=-1 (param)
   308 ;;_delay	offset=-4 (param)
   309 ;;_strPtr	offset=-1 (param)
   310 ;;_strPtr	offset=-2 (param)
   311 ;;__this	offset=-2 (param)
   312 ;;_clearBuffer	offset=-3 (param)
   313 ;;_s	offset	0
   314 ;;_k	offset	2
   315 ;;_dest	offset=-2 (param)
   316 ;;_c	offset=-4 (param)
   317 ;;_n	offset=-6 (param)
   318 ;;_ap	offset	0
   319 ;;_fmt	offset=-3 (param)
   320 ;;_cfmt	offset	0
   321 ;;_fp	offset=-2 (param)
   322 ;;_fmt	offset=-4 (param)
   323 ;;_ap	offset=-6 (param)
   324 ;;_vfpfcnvrt$5908	offset	0
   325 ;;_vfpfcnvrt$5919	offset	2
   326 ;;_vfpfcnvrt$5907	offset	4
   327 ;;_llu	offset	6
   328 ;;_ll	offset	14
   329 ;;_f	offset	22
   330 ;;_ct	offset	26
   331 ;;_cp	offset	29
   332 ;;_c	offset	31
   333 ;;_fp	offset=-2 (param)
   334 ;;_fmt	offset=-4 (param)
   335 ;;_ap	offset=-6 (param)
   336 ;;_xtoa$5893	offset	0
   337 ;;_xtoa$5892	offset	2
   338 ;;_n	offset	4
   339 ;;_c	offset	12
   340 ;;_i	offset	14
   341 ;;_w	offset	16
   342 ;;_p	offset	18
   343 ;;_fp	offset=-2 (param)
   344 ;;_d	offset=-10 (param)
   345 ;;_x	offset=-11 (param)
   346 ;;_toupper$6699	offset	0
   347 ;;_c	offset=-2 (param)
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_n	offset	0
   351 ;;_i	offset	8
   352 ;;_w	offset	10
   353 ;;_p	offset	12
   354 ;;_fp	offset=-2 (param)
   355 ;;_d	offset=-10 (param)
   356 ;;_counter	offset	0
   357 ;;_dividend	offset=-8 (param)
   358 ;;_divisor	offset=-16 (param)
   359 ;;_quotient	offset	0
   360 ;;_counter	offset	8
   361 ;;_dividend	offset=-8 (param)
   362 ;;_divisor	offset=-16 (param)
   363 ;;_r	offset	0
   364 ;;_l	offset	2
   365 ;;__l	offset=-2 (param)
   366 ;;__r	offset=-4 (param)
   367 ;;_n	offset=-6 (param)
   368 ;;_nuls	offset	0
   369 ;;_l	offset	7
   370 ;;_p	offset	9
   371 ;;_cp	offset	11
   372 ;;_w	offset	13
   373 ;;_i	offset	15
   374 ;;_fp	offset=-2 (param)
   375 ;;_s	offset=-4 (param)
   376 ;;_efgtoa$5865	offset	0
   377 ;;_efgtoa$5864	offset	2
   378 ;;_efgtoa$5863	offset	4
   379 ;;_efgtoa$5859	offset	6
   380 ;;_efgtoa$5855	offset	8
   381 ;;_efgtoa$5854	offset	10
   382 ;;_u	offset	12
   383 ;;_g	offset	16
   384 ;;_l	offset	20
   385 ;;_h	offset	24
   386 ;;_ou	offset	28
   387 ;;_n	offset	32
   388 ;;_e	offset	34
   389 ;;_i	offset	36
   390 ;;_w	offset	38
   391 ;;_p	offset	40
   392 ;;_sign	offset	42
   393 ;;_d	offset	44
   394 ;;_ne	offset	46
   395 ;;_m	offset	48
   396 ;;_pp	offset	50
   397 ;;_t	offset	52
   398 ;;_mode	offset	54
   399 ;;_nmode	offset	55
   400 ;;_fp	offset=-2 (param)
   401 ;;_f	offset=-6 (param)
   402 ;;_c	offset=-7 (param)
   403 ;;_tolower$6684	offset	0
   404 ;;_c	offset=-2 (param)
   405 ;;_c	offset=-2 (param)
   406 ;;_d	offset	0
   407 ;;_s	offset	2
   408 ;;_dest	offset=-2 (param)
   409 ;;_src	offset=-4 (param)
   410 ;;_u	offset	0
   411 ;;_m	offset	4
   412 ;;_e	offset	8
   413 ;;_x	offset=-4 (param)
   414 ;;_u	offset	0
   415 ;;_e	offset	4
   416 ;;_x	offset=-4 (param)
   417 ;;_exp1	offset	0
   418 ;;_sign1	offset	1
   419 ;;_f1	offset=-4 (param)
   420 ;;_f1	offset=-4 (param)
   421 ;;_ff1	offset=-4 (param)
   422 ;;_ff2	offset=-8 (param)
   423 ;;_sign	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-2 (param)
   426 ;;_divisor	offset=-4 (param)
   427 ;;_quotient	offset	0
   428 ;;_sign	offset	2
   429 ;;_counter	offset	3
   430 ;;_dividend	offset=-2 (param)
   431 ;;_divisor	offset=-4 (param)
   432 ;;_dtoa$5831	offset	0
   433 ;;_n	offset	2
   434 ;;_i	offset	10
   435 ;;_s	offset	12
   436 ;;_w	offset	14
   437 ;;_p	offset	16
   438 ;;_fp	offset=-2 (param)
   439 ;;_d	offset=-10 (param)
   440 ;;_a	offset=-2 (param)
   441 ;;_sign	offset	0
   442 ;;_counter	offset	1
   443 ;;_dividend	offset=-8 (param)
   444 ;;_divisor	offset=-16 (param)
   445 ;;_quotient	offset	0
   446 ;;_sign	offset	8
   447 ;;_counter	offset	9
   448 ;;_dividend	offset=-8 (param)
   449 ;;_divisor	offset=-16 (param)
   450 ;;_w	offset	0
   451 ;;_fp	offset=-2 (param)
   452 ;;_c	offset=-3 (param)
   453 ;;_w	offset	0
   454 ;;_i	offset	2
   455 ;;_fp	offset=-2 (param)
   456 ;;_buf	offset=-4 (param)
   457 ;;_p	offset=-6 (param)
   458 ;;_a	offset	0
   459 ;;_s	offset=-2 (param)
   460 ;;_i	offset	0
   461 ;;_c	offset	2
   462 ;;_s	offset=-2 (param)
   463 ;;_fp	offset=-4 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_fp	offset=-4 (param)
   466 ;;_c	offset=-1 (param)
   467 ;;__this	offset=-2 (param)
   468 ;;_c	offset=-3 (param)
   469 ;;_atoi$6415	offset	0
   470 ;;_atoi$6413	offset	2
   471 ;;_atoi$6414	offset	4
   472 ;;_n	offset	5
   473 ;;_neg	offset	7
   474 ;;_s	offset=-2 (param)
   475 ;;_isspace$6464	offset	0
   476 ;;_c	offset=-2 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_vterm	offset=-1 (param)
   479 ;;_new_response_info	offset=-1 (param)
   480 ;;_new_response_info	offset=-1 (param)
   481 ;;_level	offset=-2 (param)
   482 ;;_dutyValue	offset=-2 (param)
   483 ;;_timer	offset=-1 (param)
   484 ;;_timer	offset=-1 (param)
   485 ;;_count	offset=-3 (param)
   486 ;;_h	offset=-2 (param)
   487 ;;_u	offset	0
   488 ;;_x	offset=-4 (param)
   489 ;;_chan	offset=-1 (param)
   490 ;;_to_what	offset=-2 (param)
   491 ;;_u	offset	0
   492 ;;_s	offset=-2 (param)
   493 ;;_index	offset=-1 (param)
   494 ;;_arg	offset	0
   495 ;;_exp	offset	4
   496 ;;_sign	offset=-1 (param)
   497 ;;_val	offset=-5 (param)
   498 ;;_grs	offset	0
   499 ;;_rem	offset	4
   500 ;;_new_exp	offset	8
   501 ;;_aexp	offset	10
   502 ;;_bexp	offset	11
   503 ;;_sign	offset	12
   504 ;;_b	offset=-4 (param)
   505 ;;_a	offset=-8 (param)
   506 ;;_ff1	offset=-4 (param)
   507 ;;_ff2	offset=-8 (param)
   508 ;;_lp_speed	offset	0
   509 ;;_new	offset=-4 (param)
   510 ;;_bn	offset=-5 (param)
   511 ;;_slow	offset=-6 (param)
   512 ;;_b	offset=-4 (param)
   513 ;;_a	offset=-8 (param)
   514 ;;_grs	offset	0
   515 ;;_bexp	offset	1
   516 ;;_aexp	offset	2
   517 ;;_signs	offset	3
   518 ;;_b	offset=-4 (param)
   519 ;;_a	offset=-8 (param)
   520 ;;_prod	offset	0
   521 ;;_grs	offset	4
   522 ;;_temp	offset	8
   523 ;;_bexp	offset	10
   524 ;;_aexp	offset	11
   525 ;;_sign	offset	12
   526 ;;_b	offset=-4 (param)
   527 ;;_a	offset=-8 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_InterruptHandler	offset=-3 (param)
   530 ;;_InterruptHandler	offset=-3 (param)
   531 ;;_InterruptHandler	offset=-3 (param)
   532 ;;_InterruptHandler	offset=-3 (param)
   533 ;;_InterruptHandler	offset=-3 (param)
   534 ;;_state	offset	0
   535 ;;_InterruptHandler	offset=-3 (param)
   536 ;;_InterruptHandler	offset=-3 (param)
   537 ;;_InterruptHandler	offset=-3 (param)
   538 ;;_InterruptHandler	offset=-3 (param)
   539 ;;_i	offset	0
   540 ;;_sw_value	offset	1
   541 ;;_timerVal	offset=-2 (param)
   542 ;;_light	offset	0
   543 ;;_mode	offset=-1 (param)
   544 ;;_chan	offset=-1 (param)
   545 ;;_to_what	offset=-2 (param)
   546 ;;_u	offset	0
   547 ;;_s	offset=-2 (param)
   548 ;;_index	offset=-1 (param)
   549 ;;_arg	offset	0
   550 ;;_exp	offset	4
   551 ;;_sign	offset=-1 (param)
   552 ;;_val	offset=-5 (param)
   553 ;;_b	offset=-4 (param)
   554 ;;_a	offset=-8 (param)
   555 ;;_grs	offset	0
   556 ;;_bexp	offset	1
   557 ;;_aexp	offset	2
   558 ;;_signs	offset	3
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_prod	offset	0
   562 ;;_grs	offset	4
   563 ;;_temp	offset	8
   564 ;;_bexp	offset	10
   565 ;;_aexp	offset	11
   566 ;;_sign	offset	12
   567 ;;_b	offset=-4 (param)
   568 ;;_a	offset=-8 (param)
   569 ;;_grs	offset	0
   570 ;;_rem	offset	4
   571 ;;_new_exp	offset	8
   572 ;;_aexp	offset	10
   573 ;;_bexp	offset	11
   574 ;;_sign	offset	12
   575 ;;_b	offset=-4 (param)
   576 ;;_a	offset=-8 (param)
   577 ;;_ff1	offset=-4 (param)
   578 ;;_ff2	offset=-8 (param)
   579 ;;_timerVal	offset=-2 (param)
   580 ;;_adj	offset	0
   581 ;;_log_ptr	offset	4
   582 ;;_f	offset	0
   583 ;;_ap	offset	6
   584 ;;_s	offset=-3 (param)
   585 ;;_fmt	offset=-5 (param)
   586 ;;_cfmt	offset	0
   587 ;;_fp	offset=-2 (param)
   588 ;;_fmt	offset=-4 (param)
   589 ;;_ap	offset=-6 (param)
   590 ;;_vfpfcnvrt$5908	offset	0
   591 ;;_vfpfcnvrt$5919	offset	2
   592 ;;_vfpfcnvrt$5907	offset	4
   593 ;;_llu	offset	6
   594 ;;_ll	offset	14
   595 ;;_f	offset	22
   596 ;;_ct	offset	26
   597 ;;_cp	offset	29
   598 ;;_c	offset	31
   599 ;;_fp	offset=-2 (param)
   600 ;;_fmt	offset=-4 (param)
   601 ;;_ap	offset=-6 (param)
   602 ;;_xtoa$5893	offset	0
   603 ;;_xtoa$5892	offset	2
   604 ;;_n	offset	4
   605 ;;_c	offset	12
   606 ;;_i	offset	14
   607 ;;_w	offset	16
   608 ;;_p	offset	18
   609 ;;_fp	offset=-2 (param)
   610 ;;_d	offset=-10 (param)
   611 ;;_x	offset=-11 (param)
   612 ;;_toupper$6699	offset	0
   613 ;;_c	offset=-2 (param)
   614 ;;_c	offset=-2 (param)
   615 ;;_c	offset=-2 (param)
   616 ;;_n	offset	0
   617 ;;_i	offset	8
   618 ;;_w	offset	10
   619 ;;_p	offset	12
   620 ;;_fp	offset=-2 (param)
   621 ;;_d	offset=-10 (param)
   622 ;;_counter	offset	0
   623 ;;_dividend	offset=-8 (param)
   624 ;;_divisor	offset=-16 (param)
   625 ;;_quotient	offset	0
   626 ;;_counter	offset	8
   627 ;;_dividend	offset=-8 (param)
   628 ;;_divisor	offset=-16 (param)
   629 ;;_r	offset	0
   630 ;;_l	offset	2
   631 ;;__l	offset=-2 (param)
   632 ;;__r	offset=-4 (param)
   633 ;;_n	offset=-6 (param)
   634 ;;_nuls	offset	0
   635 ;;_l	offset	7
   636 ;;_p	offset	9
   637 ;;_cp	offset	11
   638 ;;_w	offset	13
   639 ;;_i	offset	15
   640 ;;_fp	offset=-2 (param)
   641 ;;_s	offset=-4 (param)
   642 ;;_efgtoa$5865	offset	0
   643 ;;_efgtoa$5864	offset	2
   644 ;;_efgtoa$5863	offset	4
   645 ;;_efgtoa$5859	offset	6
   646 ;;_efgtoa$5855	offset	8
   647 ;;_efgtoa$5854	offset	10
   648 ;;_u	offset	12
   649 ;;_g	offset	16
   650 ;;_l	offset	20
   651 ;;_h	offset	24
   652 ;;_ou	offset	28
   653 ;;_n	offset	32
   654 ;;_e	offset	34
   655 ;;_i	offset	36
   656 ;;_w	offset	38
   657 ;;_p	offset	40
   658 ;;_sign	offset	42
   659 ;;_d	offset	44
   660 ;;_ne	offset	46
   661 ;;_m	offset	48
   662 ;;_pp	offset	50
   663 ;;_t	offset	52
   664 ;;_mode	offset	54
   665 ;;_nmode	offset	55
   666 ;;_fp	offset=-2 (param)
   667 ;;_f	offset=-6 (param)
   668 ;;_c	offset=-7 (param)
   669 ;;_tolower$6684	offset	0
   670 ;;_c	offset=-2 (param)
   671 ;;_c	offset=-2 (param)
   672 ;;_d	offset	0
   673 ;;_s	offset	2
   674 ;;_dest	offset=-2 (param)
   675 ;;_src	offset=-4 (param)
   676 ;;_u	offset	0
   677 ;;_m	offset	4
   678 ;;_e	offset	8
   679 ;;_x	offset=-4 (param)
   680 ;;_u	offset	0
   681 ;;_e	offset	4
   682 ;;_x	offset=-4 (param)
   683 ;;_exp1	offset	0
   684 ;;_sign1	offset	1
   685 ;;_f1	offset=-4 (param)
   686 ;;_f1	offset=-4 (param)
   687 ;;_ff1	offset=-4 (param)
   688 ;;_ff2	offset=-8 (param)
   689 ;;_sign	offset	0
   690 ;;_counter	offset	1
   691 ;;_dividend	offset=-2 (param)
   692 ;;_divisor	offset=-4 (param)
   693 ;;_quotient	offset	0
   694 ;;_sign	offset	2
   695 ;;_counter	offset	3
   696 ;;_dividend	offset=-2 (param)
   697 ;;_divisor	offset=-4 (param)
   698 ;;_dtoa$5831	offset	0
   699 ;;_n	offset	2
   700 ;;_i	offset	10
   701 ;;_s	offset	12
   702 ;;_w	offset	14
   703 ;;_p	offset	16
   704 ;;_fp	offset=-2 (param)
   705 ;;_d	offset=-10 (param)
   706 ;;_a	offset=-2 (param)
   707 ;;_sign	offset	0
   708 ;;_counter	offset	1
   709 ;;_dividend	offset=-8 (param)
   710 ;;_divisor	offset=-16 (param)
   711 ;;_quotient	offset	0
   712 ;;_sign	offset	8
   713 ;;_counter	offset	9
   714 ;;_dividend	offset=-8 (param)
   715 ;;_divisor	offset=-16 (param)
   716 ;;_w	offset	0
   717 ;;_fp	offset=-2 (param)
   718 ;;_c	offset=-3 (param)
   719 ;;_w	offset	0
   720 ;;_i	offset	2
   721 ;;_fp	offset=-2 (param)
   722 ;;_buf	offset=-4 (param)
   723 ;;_p	offset=-6 (param)
   724 ;;_a	offset	0
   725 ;;_s	offset=-2 (param)
   726 ;;_i	offset	0
   727 ;;_c	offset	2
   728 ;;_s	offset=-2 (param)
   729 ;;_fp	offset=-4 (param)
   730 ;;_c	offset=-2 (param)
   731 ;;_fp	offset=-4 (param)
   732 ;;_c	offset=-1 (param)
   733 ;;__this	offset=-2 (param)
   734 ;;_c	offset=-3 (param)
   735 ;;_atoi$6415	offset	0
   736 ;;_atoi$6413	offset	2
   737 ;;_atoi$6414	offset	4
   738 ;;_n	offset	5
   739 ;;_neg	offset	7
   740 ;;_s	offset=-2 (param)
   741 ;;_isspace$6464	offset	0
   742 ;;_c	offset=-2 (param)
   743 ;;_c	offset=-2 (param)
   744 ;;_dsize	offset=-2 (param)
   745 ;;_u	offset	0
   746 ;;_x	offset=-4 (param)
   747 ;;_f1p	offset=-2 (param)
   748 ;;_f2	offset=-6 (param)
   749 ;;_timer	offset=-1 (param)
   750 ;;_count	offset=-3 (param)
   751 ;;_channel	offset=-1 (param)
   752 ;;_i	offset	0
   753                           
   754                           	psect	idataBIGRAM
   755  016B8E                     __pidataBIGRAM:
   756                           	opt callstack 0
   757                           
   758                           ;initializer for _port_data
   759  016B8E  FF                 	db	255
   760  016B8F  00                 	db	0
   761  016B90  FF                 	db	255
   762  016B91  00                 	db	0
   763  016B92  FF                 	db	255
   764  016B93  00                 	db	0
   765  016B94  FF                 	db	255
   766  016B95  00                 	db	0
   767  016B96  FF                 	db	255
   768  016B97  00                 	db	0
   769  016B98  FF                 	db	255
   770  016B99  00                 	db	0
   771  016B9A  FF                 	db	255
   772  016B9B  00                 	db	0
   773  016B9C  FF                 	db	255
   774  016B9D  00                 	db	0
   775  016B9E  00                 	db	0
   776  016B9F  00                 	db	0
   777  016BA0  00                 	db	0
   778  016BA1  00                 	db	0
   779  016BA2  00                 	db	0
   780  016BA3  00                 	db	0
   781  016BA4  00                 	db	0
   782  016BA5  00                 	db	0
   783  016BA6  00                 	db	0
   784  016BA7  00                 	db	0
   785  016BA8  00                 	db	0
   786  016BA9  00                 	db	0
   787  016BAA  00                 	db	0
   788  016BAB  00                 	db	0
   789  016BAC  00                 	db	0
   790  016BAD  00                 	db	0
   791  016BAE  00                 	db	0
   792  016BAF  00                 	db	0
   793  016BB0  00                 	db	0
   794  016BB1  00                 	db	0
   795  016BB2  00                 	db	0
   796  016BB3  00                 	db	0
   797  016BB4  00                 	db	0
   798  016BB5  00                 	db	0
   799  016BB6  00                 	db	0
   800  016BB7  00                 	db	0
   801  016BB8  00                 	db	0
   802  016BB9  00                 	db	0
   803  016BBA  00                 	db	0
   804  016BBB  00                 	db	0
   805  016BBC  00                 	db	0
   806  016BBD  00                 	db	0
   807  016BBE  00                 	db	0
   808  016BBF  00                 	db	0
   809  016BC0  00                 	db	0
   810  016BC1  00                 	db	0
   811  016BC2  00                 	db	0
   812  016BC3  00                 	db	0
   813  016BC4  00                 	db	0
   814  016BC5  00                 	db	0
   815  016BC6  00                 	db	0
   816  016BC7  00                 	db	0
   817  016BC8  00                 	db	0
   818  016BC9  00                 	db	0
   819  016BCA  00                 	db	0
   820  016BCB  00                 	db	0
   821  016BCC  00                 	db	0
   822  016BCD  00                 	db	0
   823  016BCE  00                 	db	0
   824  016BCF  00                 	db	0
   825  016BD0  00                 	db	0
   826  016BD1  00                 	db	0
   827  016BD2  00                 	db	0
   828  016BD3  00                 	db	0
   829  016BD4  00                 	db	0
   830  016BD5  00                 	db	0
   831  016BD6  00                 	db	0
   832  016BD7  00                 	db	0
   833  016BD8  00                 	db	0
   834  016BD9  00                 	db	0
   835  016BDA  00                 	db	0
   836  016BDB  00                 	db	0
   837  016BDC  00                 	db	0
   838  016BDD  00                 	db	0
   839  016BDE  00                 	db	0
   840  016BDF  00                 	db	0
   841  016BE0  00                 	db	0
   842  016BE1  00                 	db	0
   843  016BE2  00                 	db	0
   844  016BE3  00                 	db	0
   845  016BE4  00                 	db	0
   846  016BE5  00                 	db	0
   847  016BE6  00                 	db	0
   848  016BE7  00                 	db	0
   849  016BE8  00                 	db	0
   850  016BE9  00                 	db	0
   851  016BEA  00                 	db	0
   852  016BEB  00                 	db	0
   853  016BEC  00                 	db	0
   854  016BED  00                 	db	0
   855  016BEE  00                 	db	0
   856  016BEF  00                 	db	0
   857  016BF0  00                 	db	0
   858  016BF1  00                 	db	0
   859  016BF2  00                 	db	0
   860  016BF3  00                 	db	0
   861  016BF4  00                 	db	0
   862  016BF5  00                 	db	0
   863  016BF6  00                 	db	0
   864  016BF7  00                 	db	0
   865  016BF8  00                 	db	0
   866  016BF9  00                 	db	0
   867  016BFA  00                 	db	0
   868  016BFB  00                 	db	0
   869  016BFC  00                 	db	0
   870  016BFD  00                 	db	0
   871  016BFE  00                 	db	0
   872  016BFF  00                 	db	0
   873  016C00  00                 	db	0
   874  016C01  00                 	db	0
   875  016C02  00                 	db	0
   876  016C03  00                 	db	0
   877  016C04  00                 	db	0
   878  016C05  00                 	db	0
   879  016C06  00                 	db	0
   880  016C07  00                 	db	0
   881  016C08  00                 	db	0
   882  016C09  00                 	db	0
   883  016C0A  00                 	db	0
   884  016C0B  00                 	db	0
   885  016C0C  00                 	db	0
   886  016C0D  00                 	db	0
   887  016C0E  00                 	db	0
   888  016C0F  00                 	db	0
   889  016C10  00                 	db	0
   890  016C11  00                 	db	0
   891  016C12  00                 	db	0
   892  016C13  00                 	db	0
   893  016C14  00                 	db	0
   894  016C15  00                 	db	0
   895  016C16  00                 	db	0
   896  016C17  00                 	db	0
   897  016C18  00                 	db	0
   898  016C19  00                 	db	0
   899  016C1A  00                 	db	0
   900  016C1B  00                 	db	0
   901  016C1C  00                 	db	0
   902  016C1D  00                 	db	0
   903  016C1E  00                 	db	0
   904  016C1F  00                 	db	0
   905  016C20  00                 	db	0
   906  016C21  00                 	db	0
   907  016C22  00                 	db	0
   908  016C23  00                 	db	0
   909  016C24  00                 	db	0
   910  016C25  00                 	db	0
   911  016C26  00                 	db	0
   912  016C27  00                 	db	0
   913  016C28  00                 	db	0
   914  016C29  00                 	db	0
   915  016C2A  00                 	db	0
   916  016C2B  00                 	db	0
   917  016C2C  00                 	db	0
   918  016C2D  00                 	db	0
   919  016C2E  00                 	db	0
   920  016C2F  00                 	db	0
   921  016C30  00                 	db	0
   922  016C31  00                 	db	0
   923  016C32  00                 	db	0
   924  016C33  00                 	db	0
   925  016C34  00                 	db	0
   926  016C35  00                 	db	0
   927  016C36  00                 	db	0
   928  016C37  00                 	db	0
   929  016C38  00                 	db	0
   930  016C39  00                 	db	0
   931  016C3A  00                 	db	0
   932  016C3B  00                 	db	0
   933  016C3C  00                 	db	0
   934  016C3D  00                 	db	0
   935  016C3E  00                 	db	0
   936  016C3F  00                 	db	0
   937  016C40  00                 	db	0
   938  016C41  00                 	db	0
   939  016C42  00                 	db	0
   940  016C43  00                 	db	0
   941  016C44  00                 	db	0
   942  016C45  00                 	db	0
   943  016C46  00                 	db	0
   944  016C47  00                 	db	0
   945  016C48  00                 	db	0
   946  016C49  00                 	db	0
   947  016C4A  00                 	db	0
   948  016C4B  00                 	db	0
   949  016C4C  00                 	db	0
   950  016C4D  00                 	db	0
   951  016C4E  00                 	db	0
   952  016C4F  00                 	db	0
   953  016C50  00                 	db	0
   954  016C51  00                 	db	0
   955  016C52  00                 	db	0
   956  016C53  00                 	db	0
   957  016C54  00                 	db	0
   958  016C55  00                 	db	0
   959  016C56  00                 	db	0
   960  016C57  00                 	db	0
   961  016C58  00                 	db	0
   962  016C59  00                 	db	0
   963  016C5A  00                 	db	0
   964  016C5B  00                 	db	0
   965  016C5C  00                 	db	0
   966  016C5D  00                 	db	0
   967  016C5E  00                 	db	0
   968  016C5F  00                 	db	0
   969  016C60  00                 	db	0
   970  016C61  00                 	db	0
   971  016C62  00                 	db	0
   972  016C63  00                 	db	0
   973  016C64  00                 	db	0
   974  016C65  00                 	db	0
   975  016C66  00                 	db	0
   976  016C67  00                 	db	0
   977  016C68  00                 	db	0
   978  016C69  00                 	db	0
   979  016C6A  00                 	db	0
   980  016C6B  00                 	db	0
   981  016C6C  00                 	db	0
   982  016C6D  00                 	db	0
   983  016C6E  00                 	db	0
   984  016C6F  00                 	db	0
   985  016C70  00                 	db	0
   986  016C71  00                 	db	0
   987  016C72  00                 	db	0
   988  016C73  00                 	db	0
   989  016C74  00                 	db	0
   990  016C75  00                 	db	0
   991  016C76  00                 	db	0
   992  016C77  00                 	db	0
   993  016C78  00                 	db	0
   994  016C79  00                 	db	0
   995  016C7A  00                 	db	0
   996  016C7B  00                 	db	0
   997  016C7C  00                 	db	0
   998  016C7D  00                 	db	0
   999  016C7E  00                 	db	0
  1000  016C7F  00                 	db	0
  1001  016C80  00                 	db	0
  1002  016C81  00                 	db	0
  1003  016C82  00                 	db	0
  1004  016C83  00                 	db	0
  1005  016C84  00                 	db	0
  1006  016C85  00                 	db	0
  1007  016C86  00                 	db	0
  1008  016C87  00                 	db	0
  1009  016C88  00                 	db	0
  1010  016C89  00                 	db	0
  1011  016C8A  00                 	db	0
  1012  016C8B  00                 	db	0
  1013  016C8C  00                 	db	0
  1014  016C8D  00                 	db	0
  1015  016C8E  00                 	db	0
  1016  016C8F  00                 	db	0
  1017  016C90  00                 	db	0
  1018  016C91  00                 	db	0
  1019  016C92  00                 	db	0
  1020  016C93  00                 	db	0
  1021  016C94  00                 	db	0
  1022  016C95  00                 	db	0
  1023  016C96  00                 	db	0
  1024  016C97  00                 	db	0
  1025  016C98  00                 	db	0
  1026  016C99  00                 	db	0
  1027  016C9A  00                 	db	0
  1028  016C9B  00                 	db	0
  1029  016C9C  00                 	db	0
  1030  016C9D  00                 	db	0
  1031  016C9E  00                 	db	0
  1032  016C9F  00                 	db	0
  1033  016CA0  00                 	db	0
  1034  016CA1  00                 	db	0
  1035  016CA2  00                 	db	0
  1036  016CA3  00                 	db	0
  1037  016CA4  00                 	db	0
  1038  016CA5  00                 	db	0
  1039  016CA6  00                 	db	0
  1040  016CA7  00                 	db	0
  1041  016CA8  00                 	db	0
  1042  016CA9  00                 	db	0
  1043  016CAA  00                 	db	0
  1044  016CAB  00                 	db	0
  1045  016CAC  00                 	db	0
  1046  016CAD  00                 	db	0
  1047  016CAE  00                 	db	0
  1048  016CAF  00                 	db	0
  1049  016CB0  00                 	db	0
  1050  016CB1  00                 	db	0
  1051  016CB2  00                 	db	0
  1052  016CB3  00                 	db	0
  1053  016CB4  00                 	db	0
  1054  016CB5  00                 	db	0
  1055  016CB6  00                 	db	0
  1056  016CB7  00                 	db	0
  1057  016CB8  00                 	db	0
  1058  016CB9  00                 	db	0
  1059  016CBA  00                 	db	0
  1060  016CBB  00                 	db	0
  1061  016CBC  00                 	db	0
  1062  016CBD  00                 	db	0
  1063  016CBE  00                 	db	0
  1064  016CBF  00                 	db	0
  1065  016CC0  00                 	db	0
  1066  016CC1  00                 	db	0
  1067  016CC2  00                 	db	0
  1068  016CC3  00                 	db	0
  1069  016CC4  00                 	db	0
  1070  016CC5  00                 	db	0
  1071  016CC6  00                 	db	0
  1072  016CC7  00                 	db	0
  1073  016CC8  00                 	db	0
  1074  016CC9  00                 	db	0
  1075  016CCA  00                 	db	0
  1076  016CCB  00                 	db	0
  1077  016CCC  00                 	db	0
  1078  016CCD  00                 	db	0
  1079  016CCE  00                 	db	0
  1080  016CCF  00                 	db	0
  1081  016CD0  00                 	db	0
  1082  016CD1  00                 	db	0
  1083  016CD2  00                 	db	0
  1084  016CD3  00                 	db	0
  1085  016CD4  00                 	db	0
  1086  016CD5  00                 	db	0
  1087  016CD6  00                 	db	0
  1088  016CD7  00                 	db	0
  1089  016CD8  00                 	db	0
  1090  016CD9  00                 	db	0
  1091  016CDA  00                 	db	0
  1092  016CDB  00                 	db	0
  1093  016CDC  00                 	db	0
  1094  016CDD  00                 	db	0
  1095  016CDE  00                 	db	0
  1096  016CDF  00                 	db	0
  1097  016CE0  00                 	db	0
  1098  016CE1  00                 	db	0
  1099  016CE2  00                 	db	0
  1100  016CE3  00                 	db	0
  1101  016CE4  00                 	db	0
  1102  016CE5  00                 	db	0
  1103  016CE6  00                 	db	0
  1104  016CE7  00                 	db	0
  1105  016CE8  00                 	db	0
  1106  016CE9  00                 	db	0
  1107  016CEA  00                 	db	0
  1108  016CEB  00                 	db	0
  1109  016CEC  00                 	db	0
  1110  016CED  00                 	db	0
  1111  016CEE  00                 	db	0
  1112  016CEF  00                 	db	0
  1113  016CF0  00                 	db	0
  1114  016CF1  00                 	db	0
  1115  016CF2  00                 	db	0
  1116  016CF3  00                 	db	0
  1117  016CF4  00                 	db	0
  1118  016CF5  00                 	db	0
  1119  016CF6  00                 	db	0
  1120  016CF7  00                 	db	0
  1121  016CF8  00                 	db	0
  1122  016CF9  00                 	db	0
  1123  016CFA  00                 	db	0
  1124  016CFB  00                 	db	0
  1125  016CFC  00                 	db	0
  1126  016CFD  00                 	db	0
  1127  016CFE  00                 	db	0
  1128  016CFF  00                 	db	0
  1129  016D00  00                 	db	0
  1130  016D01  00                 	db	0
  1131  016D02  00                 	db	0
  1132  016D03  00                 	db	0
  1133  016D04  00                 	db	0
  1134  016D05  00                 	db	0
  1135  016D06  00                 	db	0
  1136  016D07  00                 	db	0
  1137  016D08  00                 	db	0
  1138  016D09  00                 	db	0
  1139  016D0A  00                 	db	0
  1140  016D0B  00                 	db	0
  1141  016D0C  00                 	db	0
  1142  016D0D  00                 	db	0
  1143  016D0E  00                 	db	0
  1144  016D0F  00                 	db	0
  1145  016D10  00                 	db	0
  1146  016D11  00                 	db	0
  1147  016D12  00                 	db	0
  1148  016D13  00                 	db	0
  1149  016D14  00                 	db	0
  1150  016D15  00                 	db	0
  1151  016D16  00                 	db	0
  1152  016D17  00                 	db	0
  1153  016D18  00                 	db	0
  1154  016D19  00                 	db	0
  1155  016D1A  00                 	db	0
  1156  016D1B  00                 	db	0
  1157  016D1C  00                 	db	0
  1158  016D1D  00                 	db	0
  1159  016D1E  00                 	db	0
  1160  016D1F  00                 	db	0
  1161  016D20  00                 	db	0
  1162  016D21  00                 	db	0
  1163  016D22  00                 	db	0
  1164  016D23  00                 	db	0
  1165  016D24  00                 	db	0
  1166  016D25  00                 	db	0
  1167  016D26  00                 	db	0
  1168  016D27  00                 	db	0
  1169  016D28  00                 	db	0
  1170  016D29  00                 	db	0
  1171  016D2A  00                 	db	0
  1172  016D2B  00                 	db	0
  1173  016D2C  00                 	db	0
  1174  016D2D  00                 	db	0
  1175  016D2E  00                 	db	0
  1176  016D2F  00                 	db	0
  1177  016D30  00                 	db	0
  1178  016D31  00                 	db	0
  1179  016D32  00                 	db	0
  1180  016D33  00                 	db	0
  1181  016D34  00                 	db	0
  1182  016D35  00                 	db	0
  1183  016D36  00                 	db	0
  1184  016D37  00                 	db	0
  1185  016D38  00                 	db	0
  1186  016D39  00                 	db	0
  1187  016D3A  00                 	db	0
  1188  016D3B  00                 	db	0
  1189  016D3C  00                 	db	0
  1190  016D3D  00                 	db	0
  1191  016D3E  00                 	db	0
  1192  016D3F  00                 	db	0
  1193  016D40  00                 	db	0
  1194  016D41  00                 	db	0
  1195  016D42  00                 	db	0
  1196  016D43  00                 	db	0
  1197  016D44  00                 	db	0
  1198  016D45  00                 	db	0
  1199  016D46  00                 	db	0
  1200  016D47  00                 	db	0
  1201  016D48  00                 	db	0
  1202  016D49  00                 	db	0
  1203  016D4A  00                 	db	0
  1204  016D4B  00                 	db	0
  1205  016D4C  00                 	db	0
  1206  016D4D  00                 	db	0
  1207  016D4E  00                 	db	0
  1208  016D4F  00                 	db	0
  1209  016D50  00                 	db	0
  1210  016D51  00                 	db	0
  1211  016D52  00                 	db	0
  1212  016D53  00                 	db	0
  1213  016D54  00                 	db	0
  1214  016D55  00                 	db	0
  1215  016D56  00                 	db	0
  1216  016D57  00                 	db	0
  1217  016D58  00                 	db	0
  1218  016D59  00                 	db	0
  1219  016D5A  00                 	db	0
  1220  016D5B  00                 	db	0
  1221  016D5C  00                 	db	0
  1222  016D5D  00                 	db	0
  1223  016D5E  00                 	db	0
  1224  016D5F  00                 	db	0
  1225  016D60  00                 	db	0
  1226  016D61  00                 	db	0
  1227  016D62  00                 	db	0
  1228  016D63  00                 	db	0
  1229  016D64  00                 	db	0
  1230  016D65  00                 	db	0
  1231  016D66  00                 	db	0
  1232  016D67  00                 	db	0
  1233  016D68  00                 	db	0
  1234  016D69  00                 	db	0
  1235  016D6A  00                 	db	0
  1236  016D6B  00                 	db	0
  1237  016D6C  00                 	db	0
  1238  016D6D  00                 	db	0
  1239  016D6E  00                 	db	0
  1240  016D6F  00                 	db	0
  1241  016D70  00                 	db	0
  1242  016D71  00                 	db	0
  1243  016D72  00                 	db	0
  1244  016D73  00                 	db	0
  1245  016D74  00                 	db	0
  1246  016D75  00                 	db	0
  1247  016D76  00                 	db	0
  1248  016D77  00                 	db	0
  1249  016D78  00                 	db	0
  1250  016D79  00                 	db	0
  1251  016D7A  00                 	db	0
  1252  016D7B  00                 	db	0
  1253  016D7C  00                 	db	0
  1254  016D7D  00                 	db	0
  1255  016D7E  00                 	db	0
  1256  016D7F  00                 	db	0
  1257  016D80  00                 	db	0
  1258  016D81  00                 	db	0
  1259  016D82  00                 	db	0
  1260  016D83  00                 	db	0
  1261  016D84  00                 	db	0
  1262  016D85  00                 	db	0
  1263  016D86  00                 	db	0
  1264  016D87  00                 	db	0
  1265  016D88  00                 	db	0
  1266  016D89  00                 	db	0
  1267  016D8A  00                 	db	0
  1268  016D8B  00                 	db	0
  1269  016D8C  00                 	db	0
  1270  016D8D  00                 	db	0
  1271                           
  1272                           ;initializer for _C
  1273  016D8E  0000               	dw	0
  1274  016D90  0000               	dw	0
  1275  016D92  0000               	dw	0
  1276  016D94  0000               	dw	0
  1277  016D96  0000               	dw	0
  1278  016D98  0000               	dw	0
  1279  016D9A  0000               	dw	0
  1280  016D9C  0000               	dw	0
  1281  016D9E  0000               	dw	0
  1282  016DA0  0000               	dw	0
  1283  016DA2  0000               	dw	0
  1284  016DA4  0000               	dw	0
  1285  016DA6  0000               	dw	0
  1286  016DA8  0000               	dw	0
  1287  016DAA  0000               	dw	0
  1288  016DAC  0000               	dw	0
  1289  016DAE  0000               	dw	0
  1290  016DB0  0000               	dw	0
  1291  016DB2  0000               	dw	0
  1292  016DB4  0000               	dw	0
  1293  016DB6  0000               	dw	0
  1294  016DB8  0000               	dw	0
  1295  016DBA  0000               	dw	0
  1296  016DBC  0000               	dw	0
  1297  016DBE  0000               	dw	0
  1298  016DC0  0000               	dw	0
  1299  016DC2  0000               	dw	0
  1300  016DC4  0000               	dw	0
  1301  016DC6  0000               	dw	0
  1302  016DC8  0000               	dw	0
  1303  016DCA  0000               	dw	0
  1304  016DCC  0000               	dw	0
  1305  016DCE  0000               	dw	0
  1306  016DD0  0000               	dw	0
  1307  016DD2  0000               	dw	0
  1308  016DD4  0000               	dw	0
  1309  016DD6  0000               	dw	0
  1310  016DD8  0000               	dw	0
  1311  016DDA  0000               	dw	0
  1312  016DDC  0000               	dw	0
  1313  016DDE  0000               	dw	0
  1314  016DE0  0000               	dw	0
  1315  016DE2  0000               	dw	0
  1316  016DE4  0000               	dw	0
  1317  016DE6  0000               	dw	0
  1318  016DE8  0000               	dw	0
  1319  016DEA  0000               	dw	0
  1320  016DEC  0000               	dw	0
  1321  016DEE  0000               	dw	0
  1322  016DF0  0000               	dw	0
  1323  016DF2  0000               	dw	0
  1324  016DF4  0000               	dw	0
  1325  016DF6  0000               	dw	0
  1326  016DF8  0000               	dw	0
  1327  016DFA  0000               	dw	0
  1328  016DFC  0000               	dw	0
  1329  016DFE  0000               	dw	0
  1330  016E00  0000               	dw	0
  1331  016E02  0000               	dw	0
  1332  016E04  0000               	dw	0
  1333  016E06  0000               	dw	0
  1334  016E08  0000               	dw	0
  1335  016E0A  0000               	dw	0
  1336  016E0C  0000               	dw	0
  1337  016E0E  0000               	dw	0
  1338  016E10  0000               	dw	0
  1339  016E12  0000               	dw	0
  1340  016E14  0000               	dw	0
  1341  016E16  0000               	dw	0
  1342  016E18  0000               	dw	0
  1343  016E1A  0000               	dw	0
  1344  016E1C  42FA               	dw	17146
  1345  016E1E  0000               	dw	0
  1346  016E20  0000               	dw	0
  1347  016E22  0000               	dw	0
  1348  016E24  0000               	dw	0
  1349  016E26  0000               	dw	0
  1350  016E28  0000               	dw	0
  1351  016E2A  0000               	dw	0
  1352  016E2C  0000               	dw	0
  1353  016E2E  0000               	dw	0
  1354  016E30  0000               	dw	0
  1355  016E32  0000               	dw	0
  1356  016E34  0000               	dw	0
  1357  016E36  0000               	dw	0
  1358  016E38  0000               	dw	0
  1359  016E3A  0000               	dw	0
  1360  016E3C  0000               	dw	0
  1361  016E3E  0000               	dw	0
  1362  016E40  0000               	dw	0
  1363  016E42  0000               	dw	0
  1364  016E44  0000               	dw	0
  1365  016E46  00                 	db	0
  1366  016E47  01                 	db	1
  1367  016E48  0000               	dw	0
  1368  016E4A  3F80               	dw	16256
  1369  016E4C  0000               	dw	0
  1370  016E4E  3F80               	dw	16256
  1371  016E50  00                 	db	0
  1372  016E51  00                 	db	0
  1373  016E52  00                 	db	0
  1374  016E53  00                 	db	0
  1375  016E54  00                 	db	0
  1376  016E55  00                 	db	0
  1377  016E56  00                 	db	0
  1378  016E57  00                 	db	0
  1379  016E58  00                 	db	0
  1380  016E59  00                 	db	0
  1381  016E5A  00                 	db	0
  1382  016E5B  00                 	db	0
  1383  016E5C  00                 	db	0
  1384  016E5D  00                 	db	0
  1385  016E5E  00                 	db	0
  1386  016E5F  00                 	db	0
  1387  016E60  00                 	db	0
  1388  016E61  00                 	db	0
  1389  016E62  00                 	db	0
  1390  016E63  00                 	db	0
  1391  016E64  00                 	db	0
  1392  016E65  00                 	db	0
  1393  016E66  00                 	db	0
  1394  016E67  00                 	db	0
  1395  016E68  00                 	db	0
  1396  016E69  00                 	db	0
  1397  016E6A  00                 	db	0
  1398  016E6B  00                 	db	0
  1399  016E6C  00                 	db	0
  1400  016E6D  00                 	db	0
  1401  016E6E  00                 	db	0
  1402  016E6F  00                 	db	0
  1403  016E70  00                 	db	0
  1404  016E71  00                 	db	0
  1405  016E72  00                 	db	0
  1406  016E73  00                 	db	0
  1407  016E74  00                 	db	0
  1408  016E75  00                 	db	0
  1409  016E76  00                 	db	0
  1410  016E77  00                 	db	0
  1411  016E78  00                 	db	0
  1412  016E79  00                 	db	0
  1413  016E7A  00                 	db	0
  1414  016E7B  00                 	db	0
  1415  016E7C  00                 	db	0
  1416  016E7D  00                 	db	0
  1417  016E7E  00                 	db	0
  1418  016E7F  00                 	db	0
  1419  016E80  00                 	db	0
  1420  016E81  00                 	db	0
  1421  016E82  00                 	db	0
  1422  016E83  00                 	db	0
  1423  016E84  00                 	db	0
  1424  016E85  00                 	db	0
  1425  016E86  00                 	db	0
  1426  016E87  00                 	db	0
  1427  016E88  00                 	db	0
  1428  016E89  00                 	db	0
  1429  016E8A  00                 	db	0
  1430  016E8B  00                 	db	0
  1431  016E8C  00                 	db	0
  1432  016E8D  00                 	db	0
  1433  016E8E  00                 	db	0
  1434  016E8F  00                 	db	0
  1435  016E90  00                 	db	0
  1436  016E91  00                 	db	0
  1437  016E92  00                 	db	0
  1438  016E93  00                 	db	0
  1439  016E94  00                 	db	0
  1440  016E95  00                 	db	0
  1441  016E96  00                 	db	0
  1442  016E97  00                 	db	0
  1443  016E98  00                 	db	0
  1444  016E99  00                 	db	0
  1445  016E9A  00                 	db	0
  1446  016E9B  00                 	db	0
  1447  016E9C  0000               	dw	0
  1448  016E9E  0000               	dw	0
  1449  016EA0  0000               	dw	0
  1450  016EA2  0000               	dw	0
  1451  016EA4  0000               	dw	0
  1452  016EA6  0000               	dw	0
  1453  016EA8  0000               	dw	0
  1454  016EAA  0000               	dw	0
  1455  016EAC  0000               	dw	0
  1456  016EAE  0000               	dw	0
  1457  016EB0  01                 	db	1
  1458  016EB1  00                 	db	0
  1459  016EB2  00                 	db	0
  1460  016EB3  00                 	db	0
  1461  016EB4  00                 	db	0
  1462  016EB5  00                 	db	0
  1463  016EB6  00                 	db	0
  1464  016EB7  00                 	db	0
  1465  016EB8  00                 	db	0
  1466                           
  1467                           	psect	idataBANK0
  1468  01C1A8                     __pidataBANK0:
  1469                           	opt callstack 0
  1470                           
  1471                           ;initializer for _R
  1472  01C1A8  0000               	dw	0
  1473  01C1AA  0000               	dw	0
  1474  01C1AC  0000               	dw	0
  1475  01C1AE  0000               	dw	0
  1476  01C1B0  0000               	dw	0
  1477  01C1B2  0000               	dw	0
  1478  01C1B4  0000               	dw	0
  1479  01C1B6  0000               	dw	0
  1480  01C1B8  0000               	dw	0
  1481  01C1BA  0000               	dw	0
  1482  01C1BC  0000               	dw	0
  1483  01C1BE  0000               	dw	0
  1484  01C1C0  0000               	dw	0
  1485  01C1C2  0000               	dw	0
  1486  01C1C4  0000               	dw	0
  1487  01C1C6  0000               	dw	0
  1488  01C1C8  0000               	dw	0
  1489  01C1CA  0000               	dw	0
  1490  01C1CC  0000               	dw	0
  1491  01C1CE  0F62               	dw	3938
  1492  01C1D0  0FA4               	dw	4004
  1493  01C1D2  2D0E               	dw	11534
  1494  01C1D4  3DB2               	dw	15794
  1495  01C1D6  DD98               	dw	56728
  1496  01C1D8  3D13               	dw	15635
  1497  01C1DA  00                 	db	0
  1498  01C1DB  0000               	dw	0
  1499  01C1DD  00                 	db	0
  1500                           
  1501                           	psect	idataBANK1
  1502  01A902                     __pidataBANK1:
  1503                           	opt callstack 0
  1504                           
  1505                           ;initializer for stoa@F1166
  1506  01A902  28                 	db	40
  1507  01A903  6E                 	db	110
  1508  01A904  75                 	db	117
  1509  01A905  6C                 	db	108
  1510  01A906  6C                 	db	108
  1511  01A907  29                 	db	41
  1512  01A908  00                 	db	0
  1513                           
  1514                           ;initializer for _V
  1515  01A909  00                 	db	0
  1516  01A90A  00                 	db	0
  1517  01A90B  00                 	db	0
  1518  01A90C  00                 	db	0
  1519  01A90D  00                 	db	0
  1520  01A90E  00                 	db	0
  1521  01A90F  00                 	db	0
  1522  01A910  00                 	db	0
  1523  01A911  00                 	db	0
  1524  01A912  00                 	db	0
  1525  01A913  00                 	db	0
  1526  01A914  00                 	db	0
  1527  01A915  00                 	db	0
  1528  01A916  00                 	db	0
  1529  01A917  00                 	db	0
  1530  01A918  00                 	db	0
  1531  01A919  00                 	db	0
  1532  01A91A  00                 	db	0
  1533  01A91B  00                 	db	0
  1534  01A91C  00                 	db	0
  1535  01A91D  00                 	db	0
  1536  01A91E  00                 	db	0
  1537  01A91F  00                 	db	0
  1538  01A920  00                 	db	0
  1539  01A921  00                 	db	0
  1540  01A922  00                 	db	0
  1541  01A923  00                 	db	0
  1542  01A924  00                 	db	0
  1543  01A925  00                 	db	0
  1544  01A926  00                 	db	0
  1545  01A927  00                 	db	0
  1546  01A928  00                 	db	0
  1547  01A929  00                 	db	0
  1548  01A92A  00                 	db	0
  1549  01A92B  00                 	db	0
  1550  01A92C  00                 	db	0
  1551  01A92D  00                 	db	0
  1552  01A92E  00                 	db	0
  1553  01A92F  00                 	db	0
  1554  01A930  00                 	db	0
  1555  01A931  00                 	db	0
  1556  01A932  00                 	db	0
  1557  01A933  00                 	db	0
  1558  01A934  00                 	db	0
  1559  01A935  00                 	db	0
  1560  01A936  00                 	db	0
  1561  01A937  00                 	db	0
  1562  01A938  00                 	db	0
  1563  01A939  00                 	db	0
  1564  01A93A  00                 	db	0
  1565  01A93B  00                 	db	0
  1566  01A93C  00                 	db	0
  1567  01A93D  00                 	db	0
  1568  01A93E  00                 	db	0
  1569  01A93F  00                 	db	0
  1570  01A940  00                 	db	0
  1571  01A941  00                 	db	0
  1572  01A942  00                 	db	0
  1573  01A943  00                 	db	0
  1574  01A944  00                 	db	0
  1575  01A945  00                 	db	0
  1576  01A946  00                 	db	0
  1577  01A947  00                 	db	0
  1578  01A948  00                 	db	0
  1579  01A949  00                 	db	0
  1580  01A94A  00                 	db	0
  1581  01A94B  00                 	db	0
  1582  01A94C  00                 	db	0
  1583  01A94D  00                 	db	0
  1584  01A94E  00                 	db	0
  1585  01A94F  00                 	db	0
  1586  01A950  00                 	db	0
  1587  01A951  00                 	db	0
  1588  01A952  00                 	db	0
  1589  01A953  00                 	db	0
  1590  01A954  00                 	db	0
  1591  01A955  00                 	db	0
  1592  01A956  00                 	db	0
  1593  01A957  00                 	db	0
  1594  01A958  00                 	db	0
  1595  01A959  00                 	db	0
  1596  01A95A  00                 	db	0
  1597  01A95B  00                 	db	0
  1598  01A95C  00                 	db	0
  1599  01A95D  00                 	db	0
  1600  01A95E  00                 	db	0
  1601  01A95F  00                 	db	0
  1602  01A960  00                 	db	0
  1603  01A961  00                 	db	0
  1604  01A962  00                 	db	0
  1605  01A963  00                 	db	0
  1606  01A964  00                 	db	0
  1607  01A965  00                 	db	0
  1608  01A966  00                 	db	0
  1609  01A967  00                 	db	0
  1610  01A968  00                 	db	0
  1611  01A969  00                 	db	0
  1612  01A96A  00                 	db	0
  1613  01A96B  00                 	db	0
  1614  01A96C  00                 	db	0
  1615  01A96D  00                 	db	0
  1616  01A96E  00                 	db	0
  1617  01A96F  00                 	db	0
  1618  01A970  00                 	db	0
  1619  01A971  00                 	db	0
  1620  01A972  00                 	db	0
  1621  01A973  00                 	db	0
  1622  01A974  00                 	db	0
  1623  01A975  00                 	db	0
  1624  01A976  00                 	db	0
  1625  01A977  00                 	db	0
  1626  01A978  00                 	db	0
  1627  01A979  00                 	db	0
  1628  01A97A  00                 	db	0
  1629  01A97B  00                 	db	0
  1630  01A97C  00                 	db	0
  1631  01A97D  00                 	db	0
  1632  01A97E  00                 	db	0
  1633  01A97F  00                 	db	0
  1634  01A980  00                 	db	0
  1635  01A981  00                 	db	0
  1636  01A982  00                 	db	0
  1637  01A983  00                 	db	0
  1638  01A984  00                 	db	0
  1639  01A985  00                 	db	0
  1640  01A986  00                 	db	0
  1641  01A987  00                 	db	0
  1642  01A988  00                 	db	0
  1643  01A989  00                 	db	0
  1644  01A98A  0000               	dw	0
  1645  01A98C  0000               	dw	0
  1646  01A98E  0000               	dw	0
  1647  01A990  0000               	dw	0
  1648  01A992  00                 	db	0
  1649  01A993  00                 	db	0
  1650  01A994  00                 	db	0
  1651  01A995  00                 	db	0
  1652  01A996  00                 	db	0
  1653  01A997  00                 	db	0
  1654  01A998  0000               	dw	0
  1655  01A99A  0000               	dw	0
  1656  01A99C  0000               	dw	0
  1657  01A99E  0000               	dw	0
  1658  01A9A0  0000               	dw	0
  1659  01A9A2  0000               	dw	0
  1660  01A9A4  00                 	db	0
  1661  01A9A5  00                 	db	0
  1662  01A9A6  00                 	db	0
  1663  01A9A7  00                 	db	0
  1664  01A9A8  00                 	db	0
  1665  01A9A9  00                 	db	0
  1666  01A9AA  00                 	db	0
  1667  01A9AB  00                 	db	0
  1668  01A9AC  00                 	db	0
  1669  01A9AD  00                 	db	0
  1670  01A9AE  00                 	db	0
  1671  01A9AF  0000               	dw	0
  1672  01A9B1  0000               	dw	0
  1673  01A9B3  2D                 	db	45
  1674  01A9B4  00                 	db	0
  1675  01A9B5  00                 	db	0
  1676  01A9B6  00                 	db	0
  1677  01A9B7  00                 	db	0
  1678  01A9B8  00                 	db	0
  1679  01A9B9  0000               	dw	0
  1680  01A9BB  0000               	dw	0
  1681  01A9BD  0000               	dw	0
  1682  01A9BF  0000               	dw	0
  1683  01A9C1  0000               	dw	0
  1684  01A9C3  0000               	dw	0
  1685  01A9C5  0000               	dw	0
  1686  01A9C7  0000               	dw	0
  1687                           
  1688                           ;initializer for _H
  1689  01A9C9  00                 	db	0
  1690  01A9CA  00                 	db	0
  1691  01A9CB  01                 	db	1
  1692  01A9CC  00                 	db	0
  1693  01A9CD  01                 	db	1
  1694  01A9CE  00                 	db	0
  1695  01A9CF  01                 	db	1
  1696  01A9D0  00                 	db	0
  1697  01A9D1  00                 	db	0
  1698                           
  1699                           	psect	mediumconst
  1700  00F936                     __pmediumconst:
  1701                           	opt callstack 0
  1702  00F936  00                 	db	0
  1703  00F937                     _BVSOC_TABLE:
  1704                           	opt callstack 0
  1705  00F937  59D8               	dw	23000
  1706  00F939  0000               	dw	0
  1707  00F93B  0005               	dw	5
  1708  00F93D  0000               	dw	0
  1709  00F93F  5B68               	dw	23400
  1710  00F941  0000               	dw	0
  1711  00F943  000A               	dw	10
  1712  00F945  0000               	dw	0
  1713  00F947  5C30               	dw	23600
  1714  00F949  0000               	dw	0
  1715  00F94B  0014               	dw	20
  1716  00F94D  0000               	dw	0
  1717  00F94F  5E38               	dw	24120
  1718  00F951  0000               	dw	0
  1719  00F953  0019               	dw	25
  1720  00F955  0000               	dw	0
  1721  00F957  5E88               	dw	24200
  1722  00F959  0000               	dw	0
  1723  00F95B  001E               	dw	30
  1724  00F95D  0000               	dw	0
  1725  00F95F  5F78               	dw	24440
  1726  00F961  0000               	dw	0
  1727  00F963  0028               	dw	40
  1728  00F965  0000               	dw	0
  1729  00F967  5FDC               	dw	24540
  1730  00F969  0000               	dw	0
  1731  00F96B  002D               	dw	45
  1732  00F96D  0000               	dw	0
  1733  00F96F  6018               	dw	24600
  1734  00F971  0000               	dw	0
  1735  00F973  0032               	dw	50
  1736  00F975  0000               	dw	0
  1737  00F977  6046               	dw	24646
  1738  00F979  0000               	dw	0
  1739  00F97B  0035               	dw	53
  1740  00F97D  0000               	dw	0
  1741  00F97F  607C               	dw	24700
  1742  00F981  0000               	dw	0
  1743  00F983  0037               	dw	55
  1744  00F985  0000               	dw	0
  1745  00F987  60AE               	dw	24750
  1746  00F989  0000               	dw	0
  1747  00F98B  0039               	dw	57
  1748  00F98D  0000               	dw	0
  1749  00F98F  60E0               	dw	24800
  1750  00F991  0000               	dw	0
  1751  00F993  003C               	dw	60
  1752  00F995  0000               	dw	0
  1753  00F997  6112               	dw	24850
  1754  00F999  0000               	dw	0
  1755  00F99B  003F               	dw	63
  1756  00F99D  0000               	dw	0
  1757  00F99F  615D               	dw	24925
  1758  00F9A1  0000               	dw	0
  1759  00F9A3  0043               	dw	67
  1760  00F9A5  0000               	dw	0
  1761  00F9A7  61A8               	dw	25000
  1762  00F9A9  0000               	dw	0
  1763  00F9AB  0046               	dw	70
  1764  00F9AD  0000               	dw	0
  1765  00F9AF  61BC               	dw	25020
  1766  00F9B1  0000               	dw	0
  1767  00F9B3  0048               	dw	72
  1768  00F9B5  0000               	dw	0
  1769  00F9B7  61D0               	dw	25040
  1770  00F9B9  0000               	dw	0
  1771  00F9BB  004B               	dw	75
  1772  00F9BD  0000               	dw	0
  1773  00F9BF  61DA               	dw	25050
  1774  00F9C1  0000               	dw	0
  1775  00F9C3  0050               	dw	80
  1776  00F9C5  0000               	dw	0
  1777  00F9C7  61E4               	dw	25060
  1778  00F9C9  0000               	dw	0
  1779  00F9CB  0055               	dw	85
  1780  00F9CD  0000               	dw	0
  1781  00F9CF  61F8               	dw	25080
  1782  00F9D1  0000               	dw	0
  1783  00F9D3  005A               	dw	90
  1784  00F9D5  0000               	dw	0
  1785  00F9D7  6208               	dw	25096
  1786  00F9D9  0000               	dw	0
  1787  00F9DB  005C               	dw	92
  1788  00F9DD  0000               	dw	0
  1789  00F9DF  6222               	dw	25122
  1790  00F9E1  0000               	dw	0
  1791  00F9E3  005D               	dw	93
  1792  00F9E5  0000               	dw	0
  1793  00F9E7  6234               	dw	25140
  1794  00F9E9  0000               	dw	0
  1795  00F9EB  005F               	dw	95
  1796  00F9ED  0000               	dw	0
  1797  00F9EF  6248               	dw	25160
  1798  00F9F1  0000               	dw	0
  1799  00F9F3  0061               	dw	97
  1800  00F9F5  0000               	dw	0
  1801  00F9F7  625C               	dw	25180
  1802  00F9F9  0000               	dw	0
  1803  00F9FB  0064               	dw	100
  1804  00F9FD  0000               	dw	0
  1805  00F9FF  6784               	dw	26500
  1806  00FA01  0000               	dw	0
  1807  00FA03  0062               	dw	98
  1808  00FA05  0000               	dw	0
  1809  00FA07                     __end_of_BVSOC_TABLE:
  1810                           	opt callstack 0
  1811  00FA07                     _T:
  1812                           	opt callstack 0
  1813  00FA07  63                 	db	99
  1814  00FA08  6F                 	db	111
  1815  00FA09  6D                 	db	109
  1816  00FA0A  6D                 	db	109
  1817  00FA0B  61                 	db	97
  1818  00FA0C  6E                 	db	110
  1819  00FA0D  64                 	db	100
  1820  00FA0E  73                 	db	115
  1821  00FA0F  20                 	db	32
  1822  00FA10  31                 	db	49
  1823  00FA11  00                 	db	0
  1824  00FA12  00                 	db	0
  1825  00FA13  00                 	db	0
  1826  00FA14  00                 	db	0
  1827  00FA15  00                 	db	0
  1828  00FA16  00                 	db	0
  1829  00FA17  00                 	db	0
  1830  00FA18  00                 	db	0
  1831  00FA19  64                 	db	100
  1832  00FA1A  69                 	db	105
  1833  00FA1B  73                 	db	115
  1834  00FA1C  70                 	db	112
  1835  00FA1D  6C                 	db	108
  1836  00FA1E  61                 	db	97
  1837  00FA1F  79                 	db	121
  1838  00FA20  73                 	db	115
  1839  00FA21  20                 	db	32
  1840  00FA22  31                 	db	49
  1841  00FA23  00                 	db	0
  1842  00FA24  00                 	db	0
  1843  00FA25  00                 	db	0
  1844  00FA26  00                 	db	0
  1845  00FA27  00                 	db	0
  1846  00FA28  00                 	db	0
  1847  00FA29  00                 	db	0
  1848  00FA2A  00                 	db	0
  1849  00FA2B  63                 	db	99
  1850  00FA2C  6F                 	db	111
  1851  00FA2D  6D                 	db	109
  1852  00FA2E  6D                 	db	109
  1853  00FA2F  61                 	db	97
  1854  00FA30  6E                 	db	110
  1855  00FA31  64                 	db	100
  1856  00FA32  73                 	db	115
  1857  00FA33  20                 	db	32
  1858  00FA34  32                 	db	50
  1859  00FA35  00                 	db	0
  1860  00FA36  00                 	db	0
  1861  00FA37  00                 	db	0
  1862  00FA38  00                 	db	0
  1863  00FA39  00                 	db	0
  1864  00FA3A  00                 	db	0
  1865  00FA3B  00                 	db	0
  1866  00FA3C  00                 	db	0
  1867  00FA3D  64                 	db	100
  1868  00FA3E  69                 	db	105
  1869  00FA3F  73                 	db	115
  1870  00FA40  70                 	db	112
  1871  00FA41  6C                 	db	108
  1872  00FA42  61                 	db	97
  1873  00FA43  79                 	db	121
  1874  00FA44  73                 	db	115
  1875  00FA45  20                 	db	32
  1876  00FA46  32                 	db	50
  1877  00FA47  00                 	db	0
  1878  00FA48  00                 	db	0
  1879  00FA49  00                 	db	0
  1880  00FA4A  00                 	db	0
  1881  00FA4B  00                 	db	0
  1882  00FA4C  00                 	db	0
  1883  00FA4D  00                 	db	0
  1884  00FA4E  00                 	db	0
  1885  00FA4F  63                 	db	99
  1886  00FA50  6F                 	db	111
  1887  00FA51  6D                 	db	109
  1888  00FA52  6D                 	db	109
  1889  00FA53  61                 	db	97
  1890  00FA54  6E                 	db	110
  1891  00FA55  64                 	db	100
  1892  00FA56  73                 	db	115
  1893  00FA57  20                 	db	32
  1894  00FA58  33                 	db	51
  1895  00FA59  00                 	db	0
  1896  00FA5A  00                 	db	0
  1897  00FA5B  00                 	db	0
  1898  00FA5C  00                 	db	0
  1899  00FA5D  00                 	db	0
  1900  00FA5E  00                 	db	0
  1901  00FA5F  00                 	db	0
  1902  00FA60  00                 	db	0
  1903  00FA61  64                 	db	100
  1904  00FA62  69                 	db	105
  1905  00FA63  73                 	db	115
  1906  00FA64  70                 	db	112
  1907  00FA65  6C                 	db	108
  1908  00FA66  61                 	db	97
  1909  00FA67  79                 	db	121
  1910  00FA68  73                 	db	115
  1911  00FA69  20                 	db	32
  1912  00FA6A  33                 	db	51
  1913  00FA6B  00                 	db	0
  1914  00FA6C  00                 	db	0
  1915  00FA6D  00                 	db	0
  1916  00FA6E  00                 	db	0
  1917  00FA6F  00                 	db	0
  1918  00FA70  00                 	db	0
  1919  00FA71  00                 	db	0
  1920  00FA72  00                 	db	0
  1921  00FA73  63                 	db	99
  1922  00FA74  6F                 	db	111
  1923  00FA75  6D                 	db	109
  1924  00FA76  6D                 	db	109
  1925  00FA77  61                 	db	97
  1926  00FA78  6E                 	db	110
  1927  00FA79  64                 	db	100
  1928  00FA7A  73                 	db	115
  1929  00FA7B  20                 	db	32
  1930  00FA7C  34                 	db	52
  1931  00FA7D  00                 	db	0
  1932  00FA7E  00                 	db	0
  1933  00FA7F  00                 	db	0
  1934  00FA80  00                 	db	0
  1935  00FA81  00                 	db	0
  1936  00FA82  00                 	db	0
  1937  00FA83  00                 	db	0
  1938  00FA84  00                 	db	0
  1939  00FA85  64                 	db	100
  1940  00FA86  69                 	db	105
  1941  00FA87  73                 	db	115
  1942  00FA88  70                 	db	112
  1943  00FA89  6C                 	db	108
  1944  00FA8A  61                 	db	97
  1945  00FA8B  79                 	db	121
  1946  00FA8C  73                 	db	115
  1947  00FA8D  20                 	db	32
  1948  00FA8E  34                 	db	52
  1949  00FA8F  00                 	db	0
  1950  00FA90  00                 	db	0
  1951  00FA91  00                 	db	0
  1952  00FA92  00                 	db	0
  1953  00FA93  00                 	db	0
  1954  00FA94  00                 	db	0
  1955  00FA95  00                 	db	0
  1956  00FA96  00                 	db	0
  1957  00FA97                     __end_of_T:
  1958                           	opt callstack 0
  1959  00FA97                     _spin:
  1960                           	opt callstack 0
  1961  00FA97  7C                 	db	124
  1962  00FA98  7C                 	db	124
  1963  00FA99  2F                 	db	47
  1964  00FA9A  2F                 	db	47
  1965  00FA9B  2D                 	db	45
  1966  00FA9C  2D                 	db	45
  1967  00FA9D  00                 	db	0
  1968  00FA9E  00                 	db	0
  1969  00FA9F  00                 	db	0
  1970  00FAA0  00                 	db	0
  1971  00FAA1  00                 	db	0
  1972  00FAA2  00                 	db	0
  1973  00FAA3  00                 	db	0
  1974  00FAA4  00                 	db	0
  1975  00FAA5  00                 	db	0
  1976  00FAA6  00                 	db	0
  1977  00FAA7  00                 	db	0
  1978  00FAA8  00                 	db	0
  1979  00FAA9  00                 	db	0
  1980  00FAAA  00                 	db	0
  1981  00FAAB  7C                 	db	124
  1982  00FAAC  7C                 	db	124
  1983  00FAAD  2F                 	db	47
  1984  00FAAE  2F                 	db	47
  1985  00FAAF  2D                 	db	45
  1986  00FAB0  2D                 	db	45
  1987  00FAB1  5C                 	db	92
  1988  00FAB2  5C                 	db	92
  1989  00FAB3  00                 	db	0
  1990  00FAB4  00                 	db	0
  1991  00FAB5  00                 	db	0
  1992  00FAB6  00                 	db	0
  1993  00FAB7  00                 	db	0
  1994  00FAB8  00                 	db	0
  1995  00FAB9  00                 	db	0
  1996  00FABA  00                 	db	0
  1997  00FABB  00                 	db	0
  1998  00FABC  00                 	db	0
  1999  00FABD  00                 	db	0
  2000  00FABE  00                 	db	0
  2001  00FABF  4F                 	db	79
  2002  00FAC0  4F                 	db	79
  2003  00FAC1  4F                 	db	79
  2004  00FAC2  4F                 	db	79
  2005  00FAC3  4F                 	db	79
  2006  00FAC4  4F                 	db	79
  2007  00FAC5  2D                 	db	45
  2008  00FAC6  2D                 	db	45
  2009  00FAC7  5F                 	db	95
  2010  00FAC8  5F                 	db	95
  2011  00FAC9  2D                 	db	45
  2012  00FACA  00                 	db	0
  2013  00FACB  00                 	db	0
  2014  00FACC  00                 	db	0
  2015  00FACD  00                 	db	0
  2016  00FACE  00                 	db	0
  2017  00FACF  00                 	db	0
  2018  00FAD0  00                 	db	0
  2019  00FAD1  00                 	db	0
  2020  00FAD2  00                 	db	0
  2021  00FAD3  76                 	db	118
  2022  00FAD4  76                 	db	118
  2023  00FAD5  3C                 	db	60
  2024  00FAD6  3C                 	db	60
  2025  00FAD7  5E                 	db	94
  2026  00FAD8  5E                 	db	94
  2027  00FAD9  3E                 	db	62
  2028  00FADA  3E                 	db	62
  2029  00FADB  00                 	db	0
  2030  00FADC  00                 	db	0
  2031  00FADD  00                 	db	0
  2032  00FADE  00                 	db	0
  2033  00FADF  00                 	db	0
  2034  00FAE0  00                 	db	0
  2035  00FAE1  00                 	db	0
  2036  00FAE2  00                 	db	0
  2037  00FAE3  00                 	db	0
  2038  00FAE4  00                 	db	0
  2039  00FAE5  00                 	db	0
  2040  00FAE6  00                 	db	0
  2041  00FAE7  2E                 	db	46
  2042  00FAE8  2E                 	db	46
  2043  00FAE9  2A                 	db	42
  2044  00FAEA  2A                 	db	42
  2045  00FAEB  78                 	db	120
  2046  00FAEC  23                 	db	35
  2047  00FAED  78                 	db	120
  2048  00FAEE  23                 	db	35
  2049  00FAEF  58                 	db	88
  2050  00FAF0  58                 	db	88
  2051  00FAF1  7C                 	db	124
  2052  00FAF2  7C                 	db	124
  2053  00FAF3  2D                 	db	45
  2054  00FAF4  2D                 	db	45
  2055  00FAF5  00                 	db	0
  2056  00FAF6  00                 	db	0
  2057  00FAF7  00                 	db	0
  2058  00FAF8  00                 	db	0
  2059  00FAF9  00                 	db	0
  2060  00FAFA  00                 	db	0
  2061  00FAFB  2E                 	db	46
  2062  00FAFC  2E                 	db	46
  2063  00FAFD  6F                 	db	111
  2064  00FAFE  6F                 	db	111
  2065  00FAFF  4F                 	db	79
  2066  00FB00  4F                 	db	79
  2067  00FB01  6F                 	db	111
  2068  00FB02  6F                 	db	111
  2069  00FB03  00                 	db	0
  2070  00FB04  00                 	db	0
  2071  00FB05  00                 	db	0
  2072  00FB06  00                 	db	0
  2073  00FB07  00                 	db	0
  2074  00FB08  00                 	db	0
  2075  00FB09  00                 	db	0
  2076  00FB0A  00                 	db	0
  2077  00FB0B  00                 	db	0
  2078  00FB0C  00                 	db	0
  2079  00FB0D  00                 	db	0
  2080  00FB0E  00                 	db	0
  2081  00FB0F                     __end_of_spin:
  2082                           	opt callstack 0
  2083  00FB0F  0000               	dw	0
  2084  00FB11  3F80               	dw	16256
  2085  00FB13  0000               	dw	0
  2086  00FB15  3FC0               	dw	16320
  2087  00FB17                     __end_of_bp:
  2088                           	opt callstack 0
  2089  00FB17  AA00               	dw	43520
  2090  00FB19  3FB8               	dw	16312
  2091  00FB1B                     __end_of_ivln2_h:
  2092                           	opt callstack 0
  2093  00FB1B  23C6               	dw	9158
  2094  00FB1D  B8F6               	dw	47350
  2095  00FB1F                     __end_of_cp_l:
  2096                           	opt callstack 0
  2097  00FB1F  4000               	dw	16384
  2098  00FB21  3F76               	dw	16246
  2099  00FB23                     __end_of_cp_h:
  2100                           	opt callstack 0
  2101  0000                     _IVTADL	set	14493
  2102  0000                     _IVTADH	set	14494
  2103  0000                     _IVTADU	set	14495
  2104  0000                     _PIR6bits	set	14758
  2105  0000                     _PIR4bits	set	14756
  2106  0000                     _PIE8bits	set	14744
  2107  0000                     _PIR8bits	set	14760
  2108  0000                     _SCANPR	set	14839
  2109  0000                     _DMA2PR	set	14836
  2110  0000                     _DMA1PR	set	14835
  2111  0000                     _MAINPR	set	14834
  2112  0000                     _ISRPR	set	14833
  2113  0000                     _PIE2bits	set	14738
  2114  0000                     _PIR2bits	set	14754
  2115  0000                     _PIE9bits	set	14745
  2116  0000                     _PIR9bits	set	14761
  2117  0000                     _PIE6bits	set	14742
  2118  0000                     _PIE3bits	set	14739
  2119  0000                     _PMD7	set	14791
  2120  0000                     _PMD6	set	14790
  2121  0000                     _PMD5	set	14789
  2122  0000                     _PMD4	set	14788
  2123  0000                     _PMD3	set	14787
  2124  0000                     _PMD2	set	14786
  2125  0000                     _PMD1	set	14785
  2126  0000                     _PMD0	set	14784
  2127  0000                     _OSCTUNE	set	14814
  2128  0000                     _OSCFRQ	set	14815
  2129  0000                     _OSCEN	set	14813
  2130  0000                     _OSCCON3	set	14811
  2131  0000                     _OSCCON1	set	14809
  2132  0000                     _IPR8bits	set	14728
  2133  0000                     _IPR9bits	set	14729
  2134  0000                     _IPR5bits	set	14725
  2135  0000                     _IPR1bits	set	14721
  2136  0000                     _IPR3bits	set	14723
  2137  0000                     _IPR6bits	set	14726
  2138  0000                     _IPR2bits	set	14722
  2139  0000                     _PIE5bits	set	14741
  2140  0000                     _PIE1bits	set	14737
  2141  0000                     _PIR5bits	set	14757
  2142  0000                     _PIR1bits	set	14753
  2143  0000                     _PLLR	set	118496
  2144  0000                     _SPI1SDIPPS	set	15071
  2145  0000                     _U1RXPPS	set	15077
  2146  0000                     _RC6PPS	set	14870
  2147  0000                     _RC5PPS	set	14869
  2148  0000                     _INT1PPS	set	15041
  2149  0000                     _RD1PPS	set	14873
  2150  0000                     _INT0PPS	set	15040
  2151  0000                     _RC3PPS	set	14867
  2152  0000                     _RB6PPS	set	14862
  2153  0000                     _SPI1SCKPPS	set	15070
  2154  0000                     _U2RXPPS	set	15080
  2155  0000                     _SLRCONF	set	14995
  2156  0000                     _SLRCONE	set	14979
  2157  0000                     _SLRCOND	set	14963
  2158  0000                     _SLRCONC	set	14947
  2159  0000                     _SLRCONB	set	14931
  2160  0000                     _SLRCONA	set	14915
  2161  0000                     _ODCOND	set	14962
  2162  0000                     _ODCONC	set	14946
  2163  0000                     _ODCONB	set	14930
  2164  0000                     _ODCONA	set	14914
  2165  0000                     _ODCONF	set	14994
  2166  0000                     _ODCONE	set	14978
  2167  0000                     _WPUC	set	14945
  2168  0000                     _WPUA	set	14913
  2169  0000                     _WPUB	set	14929
  2170  0000                     _WPUE	set	14977
  2171  0000                     _WPUF	set	14993
  2172  0000                     _WPUD	set	14961
  2173  0000                     _ANSELA	set	14912
  2174  0000                     _ANSELF	set	14992
  2175  0000                     _ANSELE	set	14976
  2176  0000                     _ANSELB	set	14928
  2177  0000                     _ANSELC	set	14944
  2178  0000                     _ANSELD	set	14960
  2179  0000                     _DMA2SSA	set	15321
  2180  0000                     _DMA1SSA	set	15353
  2181  0000                     _DMA2DSZ	set	15310
  2182  0000                     _DMA2SSZ	set	15319
  2183  0000                     _DMA2DSA	set	15312
  2184  0000                     _DMA1DSZ	set	15342
  2185  0000                     _DMA1SSZ	set	15351
  2186  0000                     _DMA1DSA	set	15344
  2187  0000                     _DMA2CON0bits	set	15324
  2188  0000                     _DMA2CON1bits	set	15325
  2189  0000                     _DMA1CON0bits	set	15356
  2190  0000                     _DMA1CON1bits	set	15357
  2191  0000                     _DMA2CON0	set	15324
  2192  0000                     _DMA2AIRQ	set	15326
  2193  0000                     _DMA2SIRQ	set	15327
  2194  0000                     _DMA2CON1	set	15325
  2195  0000                     _DMA1CON0	set	15356
  2196  0000                     _DMA1AIRQ	set	15358
  2197  0000                     _DMA1SIRQ	set	15359
  2198  0000                     _DMA1CON1	set	15357
  2199  0000                     _CLKRCON	set	15589
  2200  0000                     _CLKRCLK	set	15590
  2201  0000                     _SPI1CON1bits	set	15637
  2202  0000                     _SPI1STATUSbits	set	15639
  2203  0000                     _SPI1INTFbits	set	15642
  2204  0000                     _SPI1CON0bits	set	15636
  2205  0000                     _SPI1RXB	set	15632
  2206  0000                     _SPI1TXB	set	15633
  2207  0000                     _SPI1TCNTL	set	15634
  2208  0000                     _SPI1CON0	set	15636
  2209  0000                     _SPI1CLK	set	15644
  2210  0000                     _SPI1BAUD	set	15641
  2211  0000                     _SPI1CON2	set	15638
  2212  0000                     _SPI1CON1	set	15637
  2213  0000                     _U2RXB	set	15824
  2214  0000                     _U2TXB	set	15826
  2215  0000                     _U2ERRIE	set	15842
  2216  0000                     _U2ERRIR	set	15841
  2217  0000                     _U2UIR	set	15840
  2218  0000                     _U2FIFO	set	15839
  2219  0000                     _U2BRGH	set	15838
  2220  0000                     _U2BRGL	set	15837
  2221  0000                     _U2CON2	set	15836
  2222  0000                     _U2CON1	set	15835
  2223  0000                     _U2CON0	set	15834
  2224  0000                     _U2P3L	set	15832
  2225  0000                     _U2P2L	set	15830
  2226  0000                     _U2P1L	set	15828
  2227  0000                     _U1RXB	set	15848
  2228  0000                     _U1ERRIE	set	15866
  2229  0000                     _U1ERRIR	set	15865
  2230  0000                     _U1UIR	set	15864
  2231  0000                     _U1FIFO	set	15863
  2232  0000                     _U1BRGH	set	15862
  2233  0000                     _U1BRGL	set	15861
  2234  0000                     _U1CON2	set	15860
  2235  0000                     _U1CON1	set	15859
  2236  0000                     _U1CON0	set	15858
  2237  0000                     _U1P3H	set	15857
  2238  0000                     _U1P3L	set	15856
  2239  0000                     _U1P2H	set	15855
  2240  0000                     _U1P2L	set	15854
  2241  0000                     _U1P1H	set	15853
  2242  0000                     _U1P1L	set	15852
  2243  0000                     _FVRCON	set	16065
  2244  0000                     _ADFLTRL	set	16102
  2245  0000                     _ADFLTRH	set	16103
  2246  0000                     _ADCON0bits	set	16120
  2247  0000                     _ADCON0	set	16120
  2248  0000                     _ADCLK	set	16127
  2249  0000                     _ADACT	set	16126
  2250  0000                     _ADREF	set	16125
  2251  0000                     _ADSTAT	set	16124
  2252  0000                     _ADCON3	set	16123
  2253  0000                     _ADCON2	set	16122
  2254  0000                     _ADCON1	set	16121
  2255  0000                     _ADPREH	set	16119
  2256  0000                     _ADPREL	set	16118
  2257  0000                     _ADCAP	set	16117
  2258  0000                     _ADACQH	set	16116
  2259  0000                     _ADACQL	set	16115
  2260  0000                     _ADPCH	set	16113
  2261  0000                     _ADRPT	set	16108
  2262  0000                     _ADACCU	set	16106
  2263  0000                     _ADSTPTH	set	16101
  2264  0000                     _ADSTPTL	set	16100
  2265  0000                     _ADUTHH	set	16097
  2266  0000                     _ADUTHL	set	16096
  2267  0000                     _ADLTHH	set	16095
  2268  0000                     _ADLTHL	set	16094
  2269  0000                     _CCPTMRS1bits	set	16223
  2270  0000                     _PORTDbits	set	16333
  2271  0000                     _PORTFbits	set	16335
  2272  0000                     _LATFbits	set	16319
  2273  0000                     _LATCbits	set	16316
  2274  0000                     _LATDbits	set	16317
  2275  0000                     _PORTBbits	set	16331
  2276  0000                     _T3CONbits	set	16294
  2277  0000                     _T3CON	set	16294
  2278  0000                     _TMR3L	set	16292
  2279  0000                     _TMR3H	set	16293
  2280  0000                     _T3CLK	set	16297
  2281  0000                     _T3GATE	set	16296
  2282  0000                     _T3GCON	set	16295
  2283  0000                     _T2CON	set	16300
  2284  0000                     _T2TMR	set	16298
  2285  0000                     _T2PR	set	16299
  2286  0000                     _T2RST	set	16303
  2287  0000                     _T2HLT	set	16301
  2288  0000                     _T2CLKCON	set	16302
  2289  0000                     _PWM8DCL	set	16224
  2290  0000                     _PWM8DCH	set	16225
  2291  0000                     _PWM8CON	set	16226
  2292  0000                     _LATEbits	set	16318
  2293  0000                     _T5CONbits	set	16282
  2294  0000                     _T5CON	set	16282
  2295  0000                     _TMR5L	set	16280
  2296  0000                     _TMR5H	set	16281
  2297  0000                     _T5CLK	set	16285
  2298  0000                     _T5GATE	set	16284
  2299  0000                     _T5GCON	set	16283
  2300  0000                     _T6CON	set	16276
  2301  0000                     _T6TMR	set	16274
  2302  0000                     _T6PR	set	16275
  2303  0000                     _T6RST	set	16279
  2304  0000                     _T6HLT	set	16277
  2305  0000                     _T6CLKCON	set	16278
  2306  0000                     _TRISD	set	16325
  2307  0000                     _TRISC	set	16324
  2308  0000                     _TRISB	set	16323
  2309  0000                     _TRISA	set	16322
  2310  0000                     _TRISF	set	16327
  2311  0000                     _TRISE	set	16326
  2312  0000                     _LATC	set	16316
  2313  0000                     _LATB	set	16315
  2314  0000                     _LATF	set	16319
  2315  0000                     _LATA	set	16314
  2316  0000                     _LATD	set	16317
  2317  0000                     _LATE	set	16318
  2318  0000                     _IVTLOCKbits	set	16340
  2319  0000                     _IVTLOCK	set	16340
  2320  0000                     _INTCON0bits	set	16338
  2321  0000                     _GIE	set	130711
  2322  00FB23                     STR_75:
  2323                           
  2324                           ; BSR set to: 57
  2325  00FB23  20                 	db	32
  2326  00FB24  25                 	db	37
  2327  00FB25  63                 	db	99	;'c'
  2328  00FB26  20                 	db	32
  2329  00FB27  2C                 	db	44
  2330  00FB28  25                 	db	37
  2331  00FB29  6C                 	db	108	;'l'
  2332  00FB2A  75                 	db	117	;'u'
  2333  00FB2B  2C                 	db	44
  2334  00FB2C  25                 	db	37
  2335  00FB2D  34                 	db	52	;'4'
  2336  00FB2E  2E                 	db	46
  2337  00FB2F  34                 	db	52	;'4'
  2338  00FB30  66                 	db	102	;'f'
  2339  00FB31  2C                 	db	44
  2340  00FB32  25                 	db	37
  2341  00FB33  34                 	db	52	;'4'
  2342  00FB34  2E                 	db	46
  2343  00FB35  34                 	db	52	;'4'
  2344  00FB36  66                 	db	102	;'f'
  2345  00FB37  2C                 	db	44
  2346  00FB38  25                 	db	37
  2347  00FB39  34                 	db	52	;'4'
  2348  00FB3A  2E                 	db	46
  2349  00FB3B  34                 	db	52	;'4'
  2350  00FB3C  66                 	db	102	;'f'
  2351  00FB3D  2C                 	db	44
  2352  00FB3E  25                 	db	37
  2353  00FB3F  34                 	db	52	;'4'
  2354  00FB40  2E                 	db	46
  2355  00FB41  34                 	db	52	;'4'
  2356  00FB42  66                 	db	102	;'f'
  2357  00FB43  2C                 	db	44
  2358  00FB44  25                 	db	37
  2359  00FB45  34                 	db	52	;'4'
  2360  00FB46  2E                 	db	46
  2361  00FB47  34                 	db	52	;'4'
  2362  00FB48  66                 	db	102	;'f'
  2363  00FB49  2C                 	db	44
  2364  00FB4A  25                 	db	37
  2365  00FB4B  34                 	db	52	;'4'
  2366  00FB4C  2E                 	db	46
  2367  00FB4D  33                 	db	51	;'3'
  2368  00FB4E  66                 	db	102	;'f'
  2369  00FB4F  2C                 	db	44
  2370  00FB50  25                 	db	37
  2371  00FB51  34                 	db	52	;'4'
  2372  00FB52  2E                 	db	46
  2373  00FB53  33                 	db	51	;'3'
  2374  00FB54  66                 	db	102	;'f'
  2375  00FB55  2C                 	db	44
  2376  00FB56  25                 	db	37
  2377  00FB57  34                 	db	52	;'4'
  2378  00FB58  2E                 	db	46
  2379  00FB59  33                 	db	51	;'3'
  2380  00FB5A  66                 	db	102	;'f'
  2381  00FB5B  2C                 	db	44
  2382  00FB5C  25                 	db	37
  2383  00FB5D  34                 	db	52	;'4'
  2384  00FB5E  2E                 	db	46
  2385  00FB5F  33                 	db	51	;'3'
  2386  00FB60  66                 	db	102	;'f'
  2387  00FB61  2C                 	db	44
  2388  00FB62  25                 	db	37
  2389  00FB63  34                 	db	52	;'4'
  2390  00FB64  2E                 	db	46
  2391  00FB65  33                 	db	51	;'3'
  2392  00FB66  66                 	db	102	;'f'
  2393  00FB67  2C                 	db	44
  2394  00FB68  25                 	db	37
  2395  00FB69  34                 	db	52	;'4'
  2396  00FB6A  2E                 	db	46
  2397  00FB6B  33                 	db	51	;'3'
  2398  00FB6C  66                 	db	102	;'f'
  2399  00FB6D  2C                 	db	44
  2400  00FB6E  25                 	db	37
  2401  00FB6F  64                 	db	100	;'d'
  2402  00FB70  2C                 	db	44
  2403  00FB71  25                 	db	37
  2404  00FB72  64                 	db	100	;'d'
  2405  00FB73  2C                 	db	44
  2406  00FB74  25                 	db	37
  2407  00FB75  32                 	db	50	;'2'
  2408  00FB76  2E                 	db	46
  2409  00FB77  36                 	db	54	;'6'
  2410  00FB78  66                 	db	102	;'f'
  2411  00FB79  2C                 	db	44
  2412  00FB7A  25                 	db	37
  2413  00FB7B  34                 	db	52	;'4'
  2414  00FB7C  2E                 	db	46
  2415  00FB7D  33                 	db	51	;'3'
  2416  00FB7E  66                 	db	102	;'f'
  2417  00FB7F  2C                 	db	44
  2418  00FB80  25                 	db	37
  2419  00FB81  64                 	db	100	;'d'
  2420  00FB82  2C                 	db	44
  2421  00FB83  25                 	db	37
  2422  00FB84  64                 	db	100	;'d'
  2423  00FB85  2C                 	db	44
  2424  00FB86  25                 	db	37
  2425  00FB87  6C                 	db	108	;'l'
  2426  00FB88  75                 	db	117	;'u'
  2427  00FB89  2C                 	db	44
  2428  00FB8A  25                 	db	37
  2429  00FB8B  6C                 	db	108	;'l'
  2430  00FB8C  75                 	db	117	;'u'
  2431  00FB8D  2C                 	db	44
  2432  00FB8E  25                 	db	37
  2433  00FB8F  34                 	db	52	;'4'
  2434  00FB90  2E                 	db	46
  2435  00FB91  33                 	db	51	;'3'
  2436  00FB92  66                 	db	102	;'f'
  2437  00FB93  2C                 	db	44
  2438  00FB94  25                 	db	37
  2439  00FB95  34                 	db	52	;'4'
  2440  00FB96  2E                 	db	46
  2441  00FB97  33                 	db	51	;'3'
  2442  00FB98  66                 	db	102	;'f'
  2443  00FB99  2C                 	db	44
  2444  00FB9A  25                 	db	37
  2445  00FB9B  34                 	db	52	;'4'
  2446  00FB9C  2E                 	db	46
  2447  00FB9D  33                 	db	51	;'3'
  2448  00FB9E  66                 	db	102	;'f'
  2449  00FB9F  0D                 	db	13
  2450  00FBA0  0A                 	db	10
  2451  00FBA1  00                 	db	0
  2452  00FBA2                     STR_36:
  2453                           
  2454                           ; BSR set to: 57
  2455  00FBA2  53                 	db	83	;'S'
  2456  00FBA3  25                 	db	37
  2457  00FBA4  63                 	db	99	;'c'
  2458  00FBA5  43                 	db	67	;'C'
  2459  00FBA6  20                 	db	32
  2460  00FBA7  25                 	db	37
  2461  00FBA8  64                 	db	100	;'d'
  2462  00FBA9  20                 	db	32
  2463  00FBAA  52                 	db	82	;'R'
  2464  00FBAB  55                 	db	85	;'U'
  2465  00FBAC  4E                 	db	78	;'N'
  2466  00FBAD  20                 	db	32
  2467  00FBAE  25                 	db	37
  2468  00FBAF  64                 	db	100	;'d'
  2469  00FBB0  20                 	db	32
  2470  00FBB1  56                 	db	86	;'V'
  2471  00FBB2  25                 	db	37
  2472  00FBB3  32                 	db	50	;'2'
  2473  00FBB4  2E                 	db	46
  2474  00FBB5  32                 	db	50	;'2'
  2475  00FBB6  66                 	db	102	;'f'
  2476  00FBB7  20                 	db	32
  2477  00FBB8  20                 	db	32
  2478  00FBB9  20                 	db	32
  2479  00FBBA  20                 	db	32
  2480  00FBBB  20                 	db	32
  2481  00FBBC  20                 	db	32
  2482  00FBBD  20                 	db	32
  2483  00FBBE  00                 	db	0
  2484  00FBBF                     STR_17:
  2485                           
  2486                           ; BSR set to: 57
  2487  00FBBF  52                 	db	82	;'R'
  2488  00FBC0  31                 	db	49	;'1'
  2489  00FBC1  20                 	db	32
  2490  00FBC2  25                 	db	37
  2491  00FBC3  32                 	db	50	;'2'
  2492  00FBC4  2E                 	db	46
  2493  00FBC5  33                 	db	51	;'3'
  2494  00FBC6  66                 	db	102	;'f'
  2495  00FBC7  20                 	db	32
  2496  00FBC8  25                 	db	37
  2497  00FBC9  33                 	db	51	;'3'
  2498  00FBCA  2E                 	db	46
  2499  00FBCB  34                 	db	52	;'4'
  2500  00FBCC  66                 	db	102	;'f'
  2501  00FBCD  20                 	db	32
  2502  00FBCE  20                 	db	32
  2503  00FBCF  20                 	db	32
  2504  00FBD0  20                 	db	32
  2505  00FBD1  20                 	db	32
  2506  00FBD2  20                 	db	32
  2507  00FBD3  20                 	db	32
  2508  00FBD4  20                 	db	32
  2509  00FBD5  20                 	db	32
  2510  00FBD6  20                 	db	32
  2511  00FBD7  20                 	db	32
  2512  00FBD8  00                 	db	0
  2513  00FBD9                     STR_18:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FBD9  52                 	db	82	;'R'
  2517  00FBDA  32                 	db	50	;'2'
  2518  00FBDB  20                 	db	32
  2519  00FBDC  25                 	db	37
  2520  00FBDD  32                 	db	50	;'2'
  2521  00FBDE  2E                 	db	46
  2522  00FBDF  33                 	db	51	;'3'
  2523  00FBE0  66                 	db	102	;'f'
  2524  00FBE1  20                 	db	32
  2525  00FBE2  25                 	db	37
  2526  00FBE3  33                 	db	51	;'3'
  2527  00FBE4  2E                 	db	46
  2528  00FBE5  34                 	db	52	;'4'
  2529  00FBE6  66                 	db	102	;'f'
  2530  00FBE7  20                 	db	32
  2531  00FBE8  20                 	db	32
  2532  00FBE9  20                 	db	32
  2533  00FBEA  20                 	db	32
  2534  00FBEB  20                 	db	32
  2535  00FBEC  20                 	db	32
  2536  00FBED  20                 	db	32
  2537  00FBEE  20                 	db	32
  2538  00FBEF  20                 	db	32
  2539  00FBF0  20                 	db	32
  2540  00FBF1  20                 	db	32
  2541  00FBF2  00                 	db	0
  2542  00FBF3                     STR_9:
  2543                           
  2544                           ; BSR set to: 57
  2545  00FBF3  53                 	db	83	;'S'
  2546  00FBF4  20                 	db	32
  2547  00FBF5  53                 	db	83	;'S'
  2548  00FBF6  25                 	db	37
  2549  00FBF7  63                 	db	99	;'c'
  2550  00FBF8  43                 	db	67	;'C'
  2551  00FBF9  20                 	db	32
  2552  00FBFA  25                 	db	37
  2553  00FBFB  64                 	db	100	;'d'
  2554  00FBFC  20                 	db	32
  2555  00FBFD  25                 	db	37
  2556  00FBFE  32                 	db	50	;'2'
  2557  00FBFF  2E                 	db	46
  2558  00FC00  34                 	db	52	;'4'
  2559  00FC01  66                 	db	102	;'f'
  2560  00FC02  20                 	db	32
  2561  00FC03  20                 	db	32
  2562  00FC04  20                 	db	32
  2563  00FC05  20                 	db	32
  2564  00FC06  20                 	db	32
  2565  00FC07  20                 	db	32
  2566  00FC08  20                 	db	32
  2567  00FC09  20                 	db	32
  2568  00FC0A  20                 	db	32
  2569  00FC0B  20                 	db	32
  2570  00FC0C  00                 	db	0
  2571  00FC0D                     
  2572                           ; BSR set to: 57
  2573  00FC0D  20                 	db	32
  2574  00FC0E  4D                 	db	77	;'M'
  2575  00FC0F  65                 	db	101	;'e'
  2576  00FC10  73                 	db	115	;'s'
  2577  00FC11  67                 	db	103	;'g'
  2578  00FC12  20                 	db	32
  2579  00FC13  25                 	db	37
  2580  00FC14  64                 	db	100	;'d'
  2581  00FC15  20                 	db	32
  2582  00FC16  53                 	db	83	;'S'
  2583  00FC17  74                 	db	116	;'t'
  2584  00FC18  61                 	db	97	;'a'
  2585  00FC19  63                 	db	99	;'c'
  2586  00FC1A  6B                 	db	107	;'k'
  2587  00FC1B  20                 	db	32
  2588  00FC1C  25                 	db	37
  2589  00FC1D  64                 	db	100	;'d'
  2590  00FC1E  20                 	db	32
  2591  00FC1F  20                 	db	32
  2592  00FC20  20                 	db	32
  2593  00FC21  20                 	db	32
  2594  00FC22  20                 	db	32
  2595  00FC23  20                 	db	32
  2596  00FC24  00                 	db	0
  2597  00FC25                     STR_37:
  2598                           
  2599                           ; BSR set to: 57
  2600  00FC25  45                 	db	69	;'E'
  2601  00FC26  53                 	db	83	;'S'
  2602  00FC27  52                 	db	82	;'R'
  2603  00FC28  20                 	db	32
  2604  00FC29  20                 	db	32
  2605  00FC2A  25                 	db	37
  2606  00FC2B  32                 	db	50	;'2'
  2607  00FC2C  2E                 	db	46
  2608  00FC2D  36                 	db	54	;'6'
  2609  00FC2E  66                 	db	102	;'f'
  2610  00FC2F  20                 	db	32
  2611  00FC30  20                 	db	32
  2612  00FC31  20                 	db	32
  2613  00FC32  20                 	db	32
  2614  00FC33  20                 	db	32
  2615  00FC34  20                 	db	32
  2616  00FC35  20                 	db	32
  2617  00FC36  20                 	db	32
  2618  00FC37  20                 	db	32
  2619  00FC38  20                 	db	32
  2620  00FC39  20                 	db	32
  2621  00FC3A  20                 	db	32
  2622  00FC3B  00                 	db	0
  2623  00FC3C                     STR_34:
  2624                           
  2625                           ; BSR set to: 57
  2626  00FC3C  42                 	db	66	;'B'
  2627  00FC3D  41                 	db	65	;'A'
  2628  00FC3E  54                 	db	84	;'T'
  2629  00FC3F  54                 	db	84	;'T'
  2630  00FC40  20                 	db	32
  2631  00FC41  50                 	db	80	;'P'
  2632  00FC42  57                 	db	87	;'W'
  2633  00FC43  52                 	db	82	;'R'
  2634  00FC44  20                 	db	32
  2635  00FC45  25                 	db	37
  2636  00FC46  33                 	db	51	;'3'
  2637  00FC47  2E                 	db	46
  2638  00FC48  32                 	db	50	;'2'
  2639  00FC49  66                 	db	102	;'f'
  2640  00FC4A  20                 	db	32
  2641  00FC4B  20                 	db	32
  2642  00FC4C  20                 	db	32
  2643  00FC4D  20                 	db	32
  2644  00FC4E  20                 	db	32
  2645  00FC4F  20                 	db	32
  2646  00FC50  20                 	db	32
  2647  00FC51  20                 	db	32
  2648  00FC52  00                 	db	0
  2649  00FC53                     STR_38:
  2650                           
  2651                           ; BSR set to: 57
  2652  00FC53  52                 	db	82	;'R'
  2653  00FC54  31                 	db	49	;'1'
  2654  00FC55  20                 	db	32
  2655  00FC56  25                 	db	37
  2656  00FC57  32                 	db	50	;'2'
  2657  00FC58  2E                 	db	46
  2658  00FC59  33                 	db	51	;'3'
  2659  00FC5A  66                 	db	102	;'f'
  2660  00FC5B  20                 	db	32
  2661  00FC5C  25                 	db	37
  2662  00FC5D  33                 	db	51	;'3'
  2663  00FC5E  2E                 	db	46
  2664  00FC5F  34                 	db	52	;'4'
  2665  00FC60  66                 	db	102	;'f'
  2666  00FC61  20                 	db	32
  2667  00FC62  20                 	db	32
  2668  00FC63  20                 	db	32
  2669  00FC64  20                 	db	32
  2670  00FC65  20                 	db	32
  2671  00FC66  20                 	db	32
  2672  00FC67  20                 	db	32
  2673  00FC68  20                 	db	32
  2674  00FC69  00                 	db	0
  2675  00FC6A                     STR_39:
  2676                           
  2677                           ; BSR set to: 57
  2678  00FC6A  52                 	db	82	;'R'
  2679  00FC6B  32                 	db	50	;'2'
  2680  00FC6C  20                 	db	32
  2681  00FC6D  25                 	db	37
  2682  00FC6E  32                 	db	50	;'2'
  2683  00FC6F  2E                 	db	46
  2684  00FC70  33                 	db	51	;'3'
  2685  00FC71  66                 	db	102	;'f'
  2686  00FC72  20                 	db	32
  2687  00FC73  25                 	db	37
  2688  00FC74  33                 	db	51	;'3'
  2689  00FC75  2E                 	db	46
  2690  00FC76  34                 	db	52	;'4'
  2691  00FC77  66                 	db	102	;'f'
  2692  00FC78  20                 	db	32
  2693  00FC79  20                 	db	32
  2694  00FC7A  20                 	db	32
  2695  00FC7B  20                 	db	32
  2696  00FC7C  20                 	db	32
  2697  00FC7D  20                 	db	32
  2698  00FC7E  20                 	db	32
  2699  00FC7F  20                 	db	32
  2700  00FC80  00                 	db	0
  2701  00FC81                     STR_35:
  2702                           
  2703                           ; BSR set to: 57
  2704  00FC81  42                 	db	66	;'B'
  2705  00FC82  41                 	db	65	;'A'
  2706  00FC83  48                 	db	72	;'H'
  2707  00FC84  20                 	db	32
  2708  00FC85  25                 	db	37
  2709  00FC86  33                 	db	51	;'3'
  2710  00FC87  2E                 	db	46
  2711  00FC88  32                 	db	50	;'2'
  2712  00FC89  66                 	db	102	;'f'
  2713  00FC8A  20                 	db	32
  2714  00FC8B  50                 	db	80	;'P'
  2715  00FC8C  25                 	db	37
  2716  00FC8D  33                 	db	51	;'3'
  2717  00FC8E  2E                 	db	46
  2718  00FC8F  32                 	db	50	;'2'
  2719  00FC90  66                 	db	102	;'f'
  2720  00FC91  20                 	db	32
  2721  00FC92  20                 	db	32
  2722  00FC93  20                 	db	32
  2723  00FC94  20                 	db	32
  2724  00FC95  20                 	db	32
  2725  00FC96  20                 	db	32
  2726  00FC97  00                 	db	0
  2727  00FC98                     STR_16:
  2728                           
  2729                           ; BSR set to: 57
  2730  00FC98  45                 	db	69	;'E'
  2731  00FC99  53                 	db	83	;'S'
  2732  00FC9A  52                 	db	82	;'R'
  2733  00FC9B  20                 	db	32
  2734  00FC9C  20                 	db	32
  2735  00FC9D  25                 	db	37
  2736  00FC9E  32                 	db	50	;'2'
  2737  00FC9F  2E                 	db	46
  2738  00FCA0  36                 	db	54	;'6'
  2739  00FCA1  66                 	db	102	;'f'
  2740  00FCA2  20                 	db	32
  2741  00FCA3  20                 	db	32
  2742  00FCA4  20                 	db	32
  2743  00FCA5  20                 	db	32
  2744  00FCA6  20                 	db	32
  2745  00FCA7  20                 	db	32
  2746  00FCA8  20                 	db	32
  2747  00FCA9  20                 	db	32
  2748  00FCAA  20                 	db	32
  2749  00FCAB  20                 	db	32
  2750  00FCAC  20                 	db	32
  2751  00FCAD  00                 	db	0
  2752  00FCAE                     STR_10:
  2753                           
  2754                           ; BSR set to: 57
  2755  00FCAE  53                 	db	83	;'S'
  2756  00FCAF  74                 	db	116	;'t'
  2757  00FCB0  61                 	db	97	;'a'
  2758  00FCB1  74                 	db	116	;'t'
  2759  00FCB2  69                 	db	105	;'i'
  2760  00FCB3  63                 	db	99	;'c'
  2761  00FCB4  20                 	db	32
  2762  00FCB5  53                 	db	83	;'S'
  2763  00FCB6  4F                 	db	79	;'O'
  2764  00FCB7  43                 	db	67	;'C'
  2765  00FCB8  20                 	db	32
  2766  00FCB9  25                 	db	37
  2767  00FCBA  64                 	db	100	;'d'
  2768  00FCBB  20                 	db	32
  2769  00FCBC  20                 	db	32
  2770  00FCBD  20                 	db	32
  2771  00FCBE  20                 	db	32
  2772  00FCBF  20                 	db	32
  2773  00FCC0  20                 	db	32
  2774  00FCC1  20                 	db	32
  2775  00FCC2  20                 	db	32
  2776  00FCC3  00                 	db	0
  2777  00FCC4                     STR_31:
  2778                           
  2779                           ; BSR set to: 57
  2780  00FCC4  42                 	db	66	;'B'
  2781  00FCC5  41                 	db	65	;'A'
  2782  00FCC6  54                 	db	84	;'T'
  2783  00FCC7  20                 	db	32
  2784  00FCC8  49                 	db	73	;'I'
  2785  00FCC9  57                 	db	87	;'W'
  2786  00FCCA  48                 	db	72	;'H'
  2787  00FCCB  20                 	db	32
  2788  00FCCC  25                 	db	37
  2789  00FCCD  34                 	db	52	;'4'
  2790  00FCCE  2E                 	db	46
  2791  00FCCF  31                 	db	49	;'1'
  2792  00FCD0  66                 	db	102	;'f'
  2793  00FCD1  20                 	db	32
  2794  00FCD2  20                 	db	32
  2795  00FCD3  20                 	db	32
  2796  00FCD4  20                 	db	32
  2797  00FCD5  20                 	db	32
  2798  00FCD6  20                 	db	32
  2799  00FCD7  20                 	db	32
  2800  00FCD8  20                 	db	32
  2801  00FCD9  00                 	db	0
  2802  00FCDA                     STR_32:
  2803                           
  2804                           ; BSR set to: 57
  2805  00FCDA  42                 	db	66	;'B'
  2806  00FCDB  41                 	db	65	;'A'
  2807  00FCDC  54                 	db	84	;'T'
  2808  00FCDD  20                 	db	32
  2809  00FCDE  4F                 	db	79	;'O'
  2810  00FCDF  57                 	db	87	;'W'
  2811  00FCE0  48                 	db	72	;'H'
  2812  00FCE1  20                 	db	32
  2813  00FCE2  25                 	db	37
  2814  00FCE3  34                 	db	52	;'4'
  2815  00FCE4  2E                 	db	46
  2816  00FCE5  31                 	db	49	;'1'
  2817  00FCE6  66                 	db	102	;'f'
  2818  00FCE7  20                 	db	32
  2819  00FCE8  20                 	db	32
  2820  00FCE9  20                 	db	32
  2821  00FCEA  20                 	db	32
  2822  00FCEB  20                 	db	32
  2823  00FCEC  20                 	db	32
  2824  00FCED  20                 	db	32
  2825  00FCEE  20                 	db	32
  2826  00FCEF  00                 	db	0
  2827  00FCF0                     STR_33:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FCF0  42                 	db	66	;'B'
  2831  00FCF1  41                 	db	65	;'A'
  2832  00FCF2  54                 	db	84	;'T'
  2833  00FCF3  20                 	db	32
  2834  00FCF4  54                 	db	84	;'T'
  2835  00FCF5  57                 	db	87	;'W'
  2836  00FCF6  48                 	db	72	;'H'
  2837  00FCF7  20                 	db	32
  2838  00FCF8  25                 	db	37
  2839  00FCF9  34                 	db	52	;'4'
  2840  00FCFA  2E                 	db	46
  2841  00FCFB  31                 	db	49	;'1'
  2842  00FCFC  66                 	db	102	;'f'
  2843  00FCFD  20                 	db	32
  2844  00FCFE  20                 	db	32
  2845  00FCFF  20                 	db	32
  2846  00FD00  20                 	db	32
  2847  00FD01  20                 	db	32
  2848  00FD02  20                 	db	32
  2849  00FD03  20                 	db	32
  2850  00FD04  20                 	db	32
  2851  00FD05  00                 	db	0
  2852  00FD06                     STR_27:
  2853                           
  2854                           ; BSR set to: 57
  2855  00FD06  49                 	db	73	;'I'
  2856  00FD07  4E                 	db	78	;'N'
  2857  00FD08  56                 	db	86	;'V'
  2858  00FD09  20                 	db	32
  2859  00FD0A  20                 	db	32
  2860  00FD0B  57                 	db	87	;'W'
  2861  00FD0C  48                 	db	72	;'H'
  2862  00FD0D  20                 	db	32
  2863  00FD0E  25                 	db	37
  2864  00FD0F  33                 	db	51	;'3'
  2865  00FD10  2E                 	db	46
  2866  00FD11  32                 	db	50	;'2'
  2867  00FD12  66                 	db	102	;'f'
  2868  00FD13  20                 	db	32
  2869  00FD14  20                 	db	32
  2870  00FD15  20                 	db	32
  2871  00FD16  20                 	db	32
  2872  00FD17  20                 	db	32
  2873  00FD18  20                 	db	32
  2874  00FD19  20                 	db	32
  2875  00FD1A  20                 	db	32
  2876  00FD1B  00                 	db	0
  2877  00FD1C                     STR_26:
  2878                           
  2879                           ; BSR set to: 57
  2880  00FD1C  4C                 	db	76	;'L'
  2881  00FD1D  4F                 	db	79	;'O'
  2882  00FD1E  41                 	db	65	;'A'
  2883  00FD1F  44                 	db	68	;'D'
  2884  00FD20  20                 	db	32
  2885  00FD21  57                 	db	87	;'W'
  2886  00FD22  48                 	db	72	;'H'
  2887  00FD23  20                 	db	32
  2888  00FD24  25                 	db	37
  2889  00FD25  33                 	db	51	;'3'
  2890  00FD26  2E                 	db	46
  2891  00FD27  32                 	db	50	;'2'
  2892  00FD28  66                 	db	102	;'f'
  2893  00FD29  20                 	db	32
  2894  00FD2A  20                 	db	32
  2895  00FD2B  20                 	db	32
  2896  00FD2C  20                 	db	32
  2897  00FD2D  20                 	db	32
  2898  00FD2E  20                 	db	32
  2899  00FD2F  20                 	db	32
  2900  00FD30  20                 	db	32
  2901  00FD31  00                 	db	0
  2902  00FD32                     STR_25:
  2903                           
  2904                           ; BSR set to: 57
  2905  00FD32  50                 	db	80	;'P'
  2906  00FD33  56                 	db	86	;'V'
  2907  00FD34  20                 	db	32
  2908  00FD35  25                 	db	37
  2909  00FD36  63                 	db	99	;'c'
  2910  00FD37  20                 	db	32
  2911  00FD38  57                 	db	87	;'W'
  2912  00FD39  48                 	db	72	;'H'
  2913  00FD3A  20                 	db	32
  2914  00FD3B  25                 	db	37
  2915  00FD3C  33                 	db	51	;'3'
  2916  00FD3D  2E                 	db	46
  2917  00FD3E  32                 	db	50	;'2'
  2918  00FD3F  66                 	db	102	;'f'
  2919  00FD40  20                 	db	32
  2920  00FD41  20                 	db	32
  2921  00FD42  20                 	db	32
  2922  00FD43  20                 	db	32
  2923  00FD44  20                 	db	32
  2924  00FD45  20                 	db	32
  2925  00FD46  20                 	db	32
  2926  00FD47  00                 	db	0
  2927  00FD48                     STR_24:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FD48  49                 	db	73	;'I'
  2931  00FD49  4E                 	db	78	;'N'
  2932  00FD4A  56                 	db	86	;'V'
  2933  00FD4B  20                 	db	32
  2934  00FD4C  20                 	db	32
  2935  00FD4D  50                 	db	80	;'P'
  2936  00FD4E  57                 	db	87	;'W'
  2937  00FD4F  52                 	db	82	;'R'
  2938  00FD50  20                 	db	32
  2939  00FD51  25                 	db	37
  2940  00FD52  33                 	db	51	;'3'
  2941  00FD53  2E                 	db	46
  2942  00FD54  32                 	db	50	;'2'
  2943  00FD55  66                 	db	102	;'f'
  2944  00FD56  20                 	db	32
  2945  00FD57  20                 	db	32
  2946  00FD58  20                 	db	32
  2947  00FD59  20                 	db	32
  2948  00FD5A  20                 	db	32
  2949  00FD5B  20                 	db	32
  2950  00FD5C  20                 	db	32
  2951  00FD5D  00                 	db	0
  2952  00FD5E                     STR_23:
  2953                           
  2954                           ; BSR set to: 57
  2955  00FD5E  4C                 	db	76	;'L'
  2956  00FD5F  4F                 	db	79	;'O'
  2957  00FD60  41                 	db	65	;'A'
  2958  00FD61  44                 	db	68	;'D'
  2959  00FD62  20                 	db	32
  2960  00FD63  50                 	db	80	;'P'
  2961  00FD64  57                 	db	87	;'W'
  2962  00FD65  52                 	db	82	;'R'
  2963  00FD66  20                 	db	32
  2964  00FD67  25                 	db	37
  2965  00FD68  33                 	db	51	;'3'
  2966  00FD69  2E                 	db	46
  2967  00FD6A  32                 	db	50	;'2'
  2968  00FD6B  66                 	db	102	;'f'
  2969  00FD6C  20                 	db	32
  2970  00FD6D  20                 	db	32
  2971  00FD6E  20                 	db	32
  2972  00FD6F  20                 	db	32
  2973  00FD70  20                 	db	32
  2974  00FD71  20                 	db	32
  2975  00FD72  20                 	db	32
  2976  00FD73  00                 	db	0
  2977  00FD74                     STR_22:
  2978                           
  2979                           ; BSR set to: 57
  2980  00FD74  50                 	db	80	;'P'
  2981  00FD75  56                 	db	86	;'V'
  2982  00FD76  20                 	db	32
  2983  00FD77  25                 	db	37
  2984  00FD78  63                 	db	99	;'c'
  2985  00FD79  20                 	db	32
  2986  00FD7A  50                 	db	80	;'P'
  2987  00FD7B  57                 	db	87	;'W'
  2988  00FD7C  52                 	db	82	;'R'
  2989  00FD7D  20                 	db	32
  2990  00FD7E  25                 	db	37
  2991  00FD7F  33                 	db	51	;'3'
  2992  00FD80  2E                 	db	46
  2993  00FD81  32                 	db	50	;'2'
  2994  00FD82  66                 	db	102	;'f'
  2995  00FD83  20                 	db	32
  2996  00FD84  20                 	db	32
  2997  00FD85  20                 	db	32
  2998  00FD86  20                 	db	32
  2999  00FD87  20                 	db	32
  3000  00FD88  20                 	db	32
  3001  00FD89  00                 	db	0
  3002  00FD8A                     STR_11:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FD8A  42                 	db	66	;'B'
  3006  00FD8B  61                 	db	97	;'a'
  3007  00FD8C  74                 	db	116	;'t'
  3008  00FD8D  74                 	db	116	;'t'
  3009  00FD8E  65                 	db	101	;'e'
  3010  00FD8F  72                 	db	114	;'r'
  3011  00FD90  79                 	db	121	;'y'
  3012  00FD91  20                 	db	32
  3013  00FD92  41                 	db	65	;'A'
  3014  00FD93  68                 	db	104	;'h'
  3015  00FD94  20                 	db	32
  3016  00FD95  25                 	db	37
  3017  00FD96  33                 	db	51	;'3'
  3018  00FD97  2E                 	db	46
  3019  00FD98  32                 	db	50	;'2'
  3020  00FD99  66                 	db	102	;'f'
  3021  00FD9A  20                 	db	32
  3022  00FD9B  20                 	db	32
  3023  00FD9C  20                 	db	32
  3024  00FD9D  20                 	db	32
  3025  00FD9E  20                 	db	32
  3026  00FD9F  00                 	db	0
  3027  00FDA0                     STR_29:
  3028                           
  3029                           ; BSR set to: 57
  3030  00FDA0  42                 	db	66	;'B'
  3031  00FDA1  56                 	db	86	;'V'
  3032  00FDA2  20                 	db	32
  3033  00FDA3  25                 	db	37
  3034  00FDA4  32                 	db	50	;'2'
  3035  00FDA5  2E                 	db	46
  3036  00FDA6  32                 	db	50	;'2'
  3037  00FDA7  66                 	db	102	;'f'
  3038  00FDA8  20                 	db	32
  3039  00FDA9  42                 	db	66	;'B'
  3040  00FDAA  41                 	db	65	;'A'
  3041  00FDAB  20                 	db	32
  3042  00FDAC  25                 	db	37
  3043  00FDAD  32                 	db	50	;'2'
  3044  00FDAE  2E                 	db	46
  3045  00FDAF  32                 	db	50	;'2'
  3046  00FDB0  66                 	db	102	;'f'
  3047  00FDB1  20                 	db	32
  3048  00FDB2  20                 	db	32
  3049  00FDB3  20                 	db	32
  3050  00FDB4  20                 	db	32
  3051  00FDB5  00                 	db	0
  3052  00FDB6                     STR_30:
  3053                           
  3054                           ; BSR set to: 57
  3055  00FDB6  43                 	db	67	;'C'
  3056  00FDB7  56                 	db	86	;'V'
  3057  00FDB8  20                 	db	32
  3058  00FDB9  25                 	db	37
  3059  00FDBA  32                 	db	50	;'2'
  3060  00FDBB  2E                 	db	46
  3061  00FDBC  32                 	db	50	;'2'
  3062  00FDBD  66                 	db	102	;'f'
  3063  00FDBE  20                 	db	32
  3064  00FDBF  4C                 	db	76	;'L'
  3065  00FDC0  41                 	db	65	;'A'
  3066  00FDC1  20                 	db	32
  3067  00FDC2  25                 	db	37
  3068  00FDC3  32                 	db	50	;'2'
  3069  00FDC4  2E                 	db	46
  3070  00FDC5  32                 	db	50	;'2'
  3071  00FDC6  66                 	db	102	;'f'
  3072  00FDC7  20                 	db	32
  3073  00FDC8  20                 	db	32
  3074  00FDC9  20                 	db	32
  3075  00FDCA  20                 	db	32
  3076  00FDCB  00                 	db	0
  3077  00FDCC                     STR_28:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FDCC  50                 	db	80	;'P'
  3081  00FDCD  56                 	db	86	;'V'
  3082  00FDCE  20                 	db	32
  3083  00FDCF  25                 	db	37
  3084  00FDD0  32                 	db	50	;'2'
  3085  00FDD1  2E                 	db	46
  3086  00FDD2  32                 	db	50	;'2'
  3087  00FDD3  66                 	db	102	;'f'
  3088  00FDD4  20                 	db	32
  3089  00FDD5  50                 	db	80	;'P'
  3090  00FDD6  41                 	db	65	;'A'
  3091  00FDD7  20                 	db	32
  3092  00FDD8  25                 	db	37
  3093  00FDD9  32                 	db	50	;'2'
  3094  00FDDA  2E                 	db	46
  3095  00FDDB  32                 	db	50	;'2'
  3096  00FDDC  66                 	db	102	;'f'
  3097  00FDDD  20                 	db	32
  3098  00FDDE  20                 	db	32
  3099  00FDDF  20                 	db	32
  3100  00FDE0  20                 	db	32
  3101  00FDE1  00                 	db	0
  3102  00FDE2                     STR_40:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FDE2  25                 	db	37
  3106  00FDE3  64                 	db	100	;'d'
  3107  00FDE4  20                 	db	32
  3108  00FDE5  25                 	db	37
  3109  00FDE6  32                 	db	50	;'2'
  3110  00FDE7  2E                 	db	46
  3111  00FDE8  34                 	db	52	;'4'
  3112  00FDE9  66                 	db	102	;'f'
  3113  00FDEA  2C                 	db	44
  3114  00FDEB  20                 	db	32
  3115  00FDEC  25                 	db	37
  3116  00FDED  64                 	db	100	;'d'
  3117  00FDEE  20                 	db	32
  3118  00FDEF  20                 	db	32
  3119  00FDF0  54                 	db	84	;'T'
  3120  00FDF1  52                 	db	82	;'R'
  3121  00FDF2  49                 	db	73	;'I'
  3122  00FDF3  4D                 	db	77	;'M'
  3123  00FDF4  20                 	db	32
  3124  00FDF5  20                 	db	32
  3125  00FDF6  20                 	db	32
  3126  00FDF7  00                 	db	0
  3127  00FDF8                     STR_5:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FDF8  20                 	db	32
  3131  00FDF9  20                 	db	32
  3132  00FDFA  20                 	db	32
  3133  00FDFB  20                 	db	32
  3134  00FDFC  20                 	db	32
  3135  00FDFD  20                 	db	32
  3136  00FDFE  20                 	db	32
  3137  00FDFF  20                 	db	32
  3138  00FE00  20                 	db	32
  3139  00FE01  20                 	db	32
  3140  00FE02  20                 	db	32
  3141  00FE03  20                 	db	32
  3142  00FE04  20                 	db	32
  3143  00FE05  20                 	db	32
  3144  00FE06  20                 	db	32
  3145  00FE07  20                 	db	32
  3146  00FE08  20                 	db	32
  3147  00FE09  20                 	db	32
  3148  00FE0A  20                 	db	32
  3149  00FE0B  20                 	db	32
  3150  00FE0C  00                 	db	0
  3151  00FE0D                     STR_52:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FE0D  20                 	db	32
  3155  00FE0E  25                 	db	37
  3156  00FE0F  64                 	db	100	;'d'
  3157  00FE10  20                 	db	32
  3158  00FE11  25                 	db	37
  3159  00FE12  64                 	db	100	;'d'
  3160  00FE13  20                 	db	32
  3161  00FE14  20                 	db	32
  3162  00FE15  20                 	db	32
  3163  00FE16  20                 	db	32
  3164  00FE17  20                 	db	32
  3165  00FE18  20                 	db	32
  3166  00FE19  20                 	db	32
  3167  00FE1A  20                 	db	32
  3168  00FE1B  20                 	db	32
  3169  00FE1C  20                 	db	32
  3170  00FE1D  20                 	db	32
  3171  00FE1E  20                 	db	32
  3172  00FE1F  20                 	db	32
  3173  00FE20  20                 	db	32
  3174  00FE21  00                 	db	0
  3175  00FE22                     STR_44:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FE22  53                 	db	83	;'S'
  3179  00FE23  65                 	db	101	;'e'
  3180  00FE24  6E                 	db	110	;'n'
  3181  00FE25  73                 	db	115	;'s'
  3182  00FE26  6F                 	db	111	;'o'
  3183  00FE27  72                 	db	114	;'r'
  3184  00FE28  20                 	db	32
  3185  00FE29  20                 	db	32
  3186  00FE2A  20                 	db	32
  3187  00FE2B  20                 	db	32
  3188  00FE2C  20                 	db	32
  3189  00FE2D  20                 	db	32
  3190  00FE2E  20                 	db	32
  3191  00FE2F  20                 	db	32
  3192  00FE30  20                 	db	32
  3193  00FE31  20                 	db	32
  3194  00FE32  20                 	db	32
  3195  00FE33  20                 	db	32
  3196  00FE34  20                 	db	32
  3197  00FE35  20                 	db	32
  3198  00FE36  00                 	db	0
  3199  00FE37                     STR_49:
  3200                           
  3201                           ; BSR set to: 57
  3202  00FE37  53                 	db	83	;'S'
  3203  00FE38  65                 	db	101	;'e'
  3204  00FE39  6E                 	db	110	;'n'
  3205  00FE3A  73                 	db	115	;'s'
  3206  00FE3B  6F                 	db	111	;'o'
  3207  00FE3C  72                 	db	114	;'r'
  3208  00FE3D  73                 	db	115	;'s'
  3209  00FE3E  20                 	db	32
  3210  00FE3F  20                 	db	32
  3211  00FE40  20                 	db	32
  3212  00FE41  20                 	db	32
  3213  00FE42  20                 	db	32
  3214  00FE43  20                 	db	32
  3215  00FE44  20                 	db	32
  3216  00FE45  20                 	db	32
  3217  00FE46  20                 	db	32
  3218  00FE47  20                 	db	32
  3219  00FE48  20                 	db	32
  3220  00FE49  20                 	db	32
  3221  00FE4A  20                 	db	32
  3222  00FE4B  00                 	db	0
  3223  00FE4C                     STR_8:
  3224                           
  3225                           ; BSR set to: 57
  3226  00FE4C  42                 	db	66	;'B'
  3227  00FE4D  56                 	db	86	;'V'
  3228  00FE4E  20                 	db	32
  3229  00FE4F  25                 	db	37
  3230  00FE50  32                 	db	50	;'2'
  3231  00FE51  2E                 	db	46
  3232  00FE52  34                 	db	52	;'4'
  3233  00FE53  66                 	db	102	;'f'
  3234  00FE54  20                 	db	32
  3235  00FE55  20                 	db	32
  3236  00FE56  20                 	db	32
  3237  00FE57  20                 	db	32
  3238  00FE58  20                 	db	32
  3239  00FE59  20                 	db	32
  3240  00FE5A  20                 	db	32
  3241  00FE5B  20                 	db	32
  3242  00FE5C  20                 	db	32
  3243  00FE5D  20                 	db	32
  3244  00FE5E  20                 	db	32
  3245  00FE5F  20                 	db	32
  3246  00FE60  00                 	db	0
  3247  00FE61                     STR_4:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FE61  20                 	db	32
  3251  00FE62  4E                 	db	78	;'N'
  3252  00FE63  53                 	db	83	;'S'
  3253  00FE64  41                 	db	65	;'A'
  3254  00FE65  53                 	db	83	;'S'
  3255  00FE66  50                 	db	80	;'P'
  3256  00FE67  4F                 	db	79	;'O'
  3257  00FE68  4F                 	db	79	;'O'
  3258  00FE69  4B                 	db	75	;'K'
  3259  00FE6A  20                 	db	32
  3260  00FE6B  20                 	db	32
  3261  00FE6C  20                 	db	32
  3262  00FE6D  20                 	db	32
  3263  00FE6E  20                 	db	32
  3264  00FE6F  20                 	db	32
  3265  00FE70  20                 	db	32
  3266  00FE71  20                 	db	32
  3267  00FE72  20                 	db	32
  3268  00FE73  20                 	db	32
  3269  00FE74  20                 	db	32
  3270  00FE75  00                 	db	0
  3271  00FE76                     STR_12:
  3272                           
  3273                           ; BSR set to: 57
  3274  00FE76  42                 	db	66	;'B'
  3275  00FE77  61                 	db	97	;'a'
  3276  00FE78  74                 	db	116	;'t'
  3277  00FE79  74                 	db	116	;'t'
  3278  00FE7A  65                 	db	101	;'e'
  3279  00FE7B  72                 	db	114	;'r'
  3280  00FE7C  79                 	db	121	;'y'
  3281  00FE7D  20                 	db	32
  3282  00FE7E  45                 	db	69	;'E'
  3283  00FE7F  53                 	db	83	;'S'
  3284  00FE80  52                 	db	82	;'R'
  3285  00FE81  20                 	db	32
  3286  00FE82  20                 	db	32
  3287  00FE83  20                 	db	32
  3288  00FE84  20                 	db	32
  3289  00FE85  20                 	db	32
  3290  00FE86  20                 	db	32
  3291  00FE87  20                 	db	32
  3292  00FE88  20                 	db	32
  3293  00FE89  20                 	db	32
  3294  00FE8A  00                 	db	0
  3295  00FE8B                     STR_13:
  3296                           
  3297                           ; BSR set to: 57
  3298  00FE8B  43                 	db	67	;'C'
  3299  00FE8C  61                 	db	97	;'a'
  3300  00FE8D  6C                 	db	108	;'l'
  3301  00FE8E  63                 	db	99	;'c'
  3302  00FE8F  75                 	db	117	;'u'
  3303  00FE90  6C                 	db	108	;'l'
  3304  00FE91  61                 	db	97	;'a'
  3305  00FE92  74                 	db	116	;'t'
  3306  00FE93  69                 	db	105	;'i'
  3307  00FE94  6F                 	db	111	;'o'
  3308  00FE95  6E                 	db	110	;'n'
  3309  00FE96  20                 	db	32
  3310  00FE97  20                 	db	32
  3311  00FE98  20                 	db	32
  3312  00FE99  20                 	db	32
  3313  00FE9A  20                 	db	32
  3314  00FE9B  20                 	db	32
  3315  00FE9C  20                 	db	32
  3316  00FE9D  20                 	db	32
  3317  00FE9E  20                 	db	32
  3318  00FE9F  00                 	db	0
  3319  00FEA0                     STR_45:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FEA0  43                 	db	67	;'C'
  3323  00FEA1  61                 	db	97	;'a'
  3324  00FEA2  6C                 	db	108	;'l'
  3325  00FEA3  69                 	db	105	;'i'
  3326  00FEA4  62                 	db	98	;'b'
  3327  00FEA5  72                 	db	114	;'r'
  3328  00FEA6  61                 	db	97	;'a'
  3329  00FEA7  74                 	db	116	;'t'
  3330  00FEA8  69                 	db	105	;'i'
  3331  00FEA9  6F                 	db	111	;'o'
  3332  00FEAA  6E                 	db	110	;'n'
  3333  00FEAB  20                 	db	32
  3334  00FEAC  20                 	db	32
  3335  00FEAD  20                 	db	32
  3336  00FEAE  20                 	db	32
  3337  00FEAF  20                 	db	32
  3338  00FEB0  20                 	db	32
  3339  00FEB1  20                 	db	32
  3340  00FEB2  20                 	db	32
  3341  00FEB3  20                 	db	32
  3342  00FEB4  00                 	db	0
  3343  00FEB5                     STR_2:
  3344                           
  3345                           ; BSR set to: 57
  3346  00FEB5  20                 	db	32
  3347  00FEB6  56                 	db	86	;'V'
  3348  00FEB7  65                 	db	101	;'e'
  3349  00FEB8  72                 	db	114	;'r'
  3350  00FEB9  73                 	db	115	;'s'
  3351  00FEBA  69                 	db	105	;'i'
  3352  00FEBB  6F                 	db	111	;'o'
  3353  00FEBC  6E                 	db	110	;'n'
  3354  00FEBD  20                 	db	32
  3355  00FEBE  25                 	db	37
  3356  00FEBF  73                 	db	115	;'s'
  3357  00FEC0  20                 	db	32
  3358  00FEC1  20                 	db	32
  3359  00FEC2  20                 	db	32
  3360  00FEC3  20                 	db	32
  3361  00FEC4  20                 	db	32
  3362  00FEC5  20                 	db	32
  3363  00FEC6  20                 	db	32
  3364  00FEC7  20                 	db	32
  3365  00FEC8  20                 	db	32
  3366  00FEC9  00                 	db	0
  3367  00FECA                     STR_53:
  3368                           
  3369                           ; BSR set to: 57
  3370  00FECA  4F                 	db	79	;'O'
  3371  00FECB  75                 	db	117	;'u'
  3372  00FECC  74                 	db	116	;'t'
  3373  00FECD  20                 	db	32
  3374  00FECE  4F                 	db	79	;'O'
  3375  00FECF  66                 	db	102	;'f'
  3376  00FED0  20                 	db	32
  3377  00FED1  52                 	db	82	;'R'
  3378  00FED2  61                 	db	97	;'a'
  3379  00FED3  6E                 	db	110	;'n'
  3380  00FED4  67                 	db	103	;'g'
  3381  00FED5  65                 	db	101	;'e'
  3382  00FED6  20                 	db	32
  3383  00FED7  20                 	db	32
  3384  00FED8  20                 	db	32
  3385  00FED9  20                 	db	32
  3386  00FEDA  20                 	db	32
  3387  00FEDB  20                 	db	32
  3388  00FEDC  20                 	db	32
  3389  00FEDD  20                 	db	32
  3390  00FEDE  00                 	db	0
  3391  00FEDF                     STR_50:
  3392                           
  3393                           ; BSR set to: 57
  3394  00FEDF  5A                 	db	90	;'Z'
  3395  00FEE0  65                 	db	101	;'e'
  3396  00FEE1  72                 	db	114	;'r'
  3397  00FEE2  6F                 	db	111	;'o'
  3398  00FEE3  20                 	db	32
  3399  00FEE4  43                 	db	67	;'C'
  3400  00FEE5  61                 	db	97	;'a'
  3401  00FEE6  6C                 	db	108	;'l'
  3402  00FEE7  20                 	db	32
  3403  00FEE8  53                 	db	83	;'S'
  3404  00FEE9  65                 	db	101	;'e'
  3405  00FEEA  74                 	db	116	;'t'
  3406  00FEEB  20                 	db	32
  3407  00FEEC  20                 	db	32
  3408  00FEED  20                 	db	32
  3409  00FEEE  20                 	db	32
  3410  00FEEF  20                 	db	32
  3411  00FEF0  20                 	db	32
  3412  00FEF1  20                 	db	32
  3413  00FEF2  20                 	db	32
  3414  00FEF3  00                 	db	0
  3415  00FEF4                     STR_1:
  3416                           
  3417                           ; BSR set to: 57
  3418  00FEF4  20                 	db	32
  3419  00FEF5  4D                 	db	77	;'M'
  3420  00FEF6  42                 	db	66	;'B'
  3421  00FEF7  4D                 	db	77	;'M'
  3422  00FEF8  43                 	db	67	;'C'
  3423  00FEF9  20                 	db	32
  3424  00FEFA  53                 	db	83	;'S'
  3425  00FEFB  4F                 	db	79	;'O'
  3426  00FEFC  4C                 	db	76	;'L'
  3427  00FEFD  41                 	db	65	;'A'
  3428  00FEFE  52                 	db	82	;'R'
  3429  00FEFF  4D                 	db	77	;'M'
  3430  00FF00  4F                 	db	79	;'O'
  3431  00FF01  4E                 	db	78	;'N'
  3432  00FF02  20                 	db	32
  3433  00FF03  20                 	db	32
  3434  00FF04  20                 	db	32
  3435  00FF05  20                 	db	32
  3436  00FF06  20                 	db	32
  3437  00FF07  20                 	db	32
  3438  00FF08  00                 	db	0
  3439  00FF09                     STR_43:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FF09  50                 	db	80	;'P'
  3443  00FF0A  56                 	db	86	;'V'
  3444  00FF0B  20                 	db	32
  3445  00FF0C  61                 	db	97	;'a'
  3446  00FF0D  6E                 	db	110	;'n'
  3447  00FF0E  64                 	db	100	;'d'
  3448  00FF0F  20                 	db	32
  3449  00FF10  42                 	db	66	;'B'
  3450  00FF11  41                 	db	65	;'A'
  3451  00FF12  54                 	db	84	;'T'
  3452  00FF13  54                 	db	84	;'T'
  3453  00FF14  45                 	db	69	;'E'
  3454  00FF15  52                 	db	82	;'R'
  3455  00FF16  59                 	db	89	;'Y'
  3456  00FF17  20                 	db	32
  3457  00FF18  20                 	db	32
  3458  00FF19  20                 	db	32
  3459  00FF1A  20                 	db	32
  3460  00FF1B  20                 	db	32
  3461  00FF1C  20                 	db	32
  3462  00FF1D  00                 	db	0
  3463  00FF1E                     STR_15:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FF1E  43                 	db	67	;'C'
  3467  00FF1F  68                 	db	104	;'h'
  3468  00FF20  65                 	db	101	;'e'
  3469  00FF21  63                 	db	99	;'c'
  3470  00FF22  6B                 	db	107	;'k'
  3471  00FF23  69                 	db	105	;'i'
  3472  00FF24  6E                 	db	110	;'n'
  3473  00FF25  67                 	db	103	;'g'
  3474  00FF26  20                 	db	32
  3475  00FF27  25                 	db	37
  3476  00FF28  63                 	db	99	;'c'
  3477  00FF29  20                 	db	32
  3478  00FF2A  25                 	db	37
  3479  00FF2B  63                 	db	99	;'c'
  3480  00FF2C  20                 	db	32
  3481  00FF2D  20                 	db	32
  3482  00FF2E  20                 	db	32
  3483  00FF2F  20                 	db	32
  3484  00FF30  20                 	db	32
  3485  00FF31  20                 	db	32
  3486  00FF32  00                 	db	0
  3487  00FF33                     STR_14:
  3488                           
  3489                           ; BSR set to: 57
  3490  00FF33  43                 	db	67	;'C'
  3491  00FF34  68                 	db	104	;'h'
  3492  00FF35  65                 	db	101	;'e'
  3493  00FF36  63                 	db	99	;'c'
  3494  00FF37  6B                 	db	107	;'k'
  3495  00FF38  20                 	db	32
  3496  00FF39  33                 	db	51	;'3'
  3497  00FF3A  30                 	db	48	;'0'
  3498  00FF3B  20                 	db	32
  3499  00FF3C  73                 	db	115	;'s'
  3500  00FF3D  65                 	db	101	;'e'
  3501  00FF3E  63                 	db	99	;'c'
  3502  00FF3F  6F                 	db	111	;'o'
  3503  00FF40  6E                 	db	110	;'n'
  3504  00FF41  64                 	db	100	;'d'
  3505  00FF42  73                 	db	115	;'s'
  3506  00FF43  20                 	db	32
  3507  00FF44  20                 	db	32
  3508  00FF45  20                 	db	32
  3509  00FF46  20                 	db	32
  3510  00FF47  00                 	db	0
  3511  00FF48                     STR_46:
  3512                           
  3513                           ; BSR set to: 57
  3514  00FF48  52                 	db	82	;'R'
  3515  00FF49  65                 	db	101	;'e'
  3516  00FF4A  6C                 	db	108	;'l'
  3517  00FF4B  65                 	db	101	;'e'
  3518  00FF4C  61                 	db	97	;'a'
  3519  00FF4D  73                 	db	115	;'s'
  3520  00FF4E  65                 	db	101	;'e'
  3521  00FF4F  20                 	db	32
  3522  00FF50  62                 	db	98	;'b'
  3523  00FF51  75                 	db	117	;'u'
  3524  00FF52  74                 	db	116	;'t'
  3525  00FF53  74                 	db	116	;'t'
  3526  00FF54  6F                 	db	111	;'o'
  3527  00FF55  6E                 	db	110	;'n'
  3528  00FF56  20                 	db	32
  3529  00FF57  25                 	db	37
  3530  00FF58  63                 	db	99	;'c'
  3531  00FF59  20                 	db	32
  3532  00FF5A  20                 	db	32
  3533  00FF5B  00                 	db	0
  3534  00FF5C                     STR_58:
  3535                           
  3536                           ; BSR set to: 57
  3537  00FF5C  48                 	db	72	;'H'
  3538  00FF5D  45                 	db	69	;'E'
  3539  00FF5E  4C                 	db	76	;'L'
  3540  00FF5F  50                 	db	80	;'P'
  3541  00FF60  20                 	db	32
  3542  00FF61  25                 	db	37
  3543  00FF62  73                 	db	115	;'s'
  3544  00FF63  20                 	db	32
  3545  00FF64  20                 	db	32
  3546  00FF65  20                 	db	32
  3547  00FF66  20                 	db	32
  3548  00FF67  20                 	db	32
  3549  00FF68  20                 	db	32
  3550  00FF69  20                 	db	32
  3551  00FF6A  20                 	db	32
  3552  00FF6B  20                 	db	32
  3553  00FF6C  20                 	db	32
  3554  00FF6D  20                 	db	32
  3555  00FF6E  00                 	db	0
  3556  00FF6F                     
  3557                           ; BSR set to: 57
  3558  00FF6F  44                 	db	68	;'D'
  3559  00FF70  49                 	db	73	;'I'
  3560  00FF71  53                 	db	83	;'S'
  3561  00FF72  50                 	db	80	;'P'
  3562  00FF73  4C                 	db	76	;'L'
  3563  00FF74  41                 	db	65	;'A'
  3564  00FF75  59                 	db	89	;'Y'
  3565  00FF76  20                 	db	32
  3566  00FF77  25                 	db	37
  3567  00FF78  73                 	db	115	;'s'
  3568  00FF79  20                 	db	32
  3569  00FF7A  20                 	db	32
  3570  00FF7B  20                 	db	32
  3571  00FF7C  20                 	db	32
  3572  00FF7D  20                 	db	32
  3573  00FF7E  20                 	db	32
  3574  00FF7F  20                 	db	32
  3575  00FF80  20                 	db	32
  3576  00FF81  00                 	db	0
  3577  00FF82                     
  3578                           ; BSR set to: 57
  3579  00FF82  25                 	db	37
  3580  00FF83  64                 	db	100	;'d'
  3581  00FF84  20                 	db	32
  3582  00FF85  25                 	db	37
  3583  00FF86  32                 	db	50	;'2'
  3584  00FF87  2E                 	db	46
  3585  00FF88  34                 	db	52	;'4'
  3586  00FF89  66                 	db	102	;'f'
  3587  00FF8A  2C                 	db	44
  3588  00FF8B  20                 	db	32
  3589  00FF8C  25                 	db	37
  3590  00FF8D  64                 	db	100	;'d'
  3591  00FF8E  20                 	db	32
  3592  00FF8F  20                 	db	32
  3593  00FF90  20                 	db	32
  3594  00FF91  23                 	db	35
  3595  00FF92  00                 	db	0
  3596  00FF93                     STR_19:
  3597                           
  3598                           ; BSR set to: 57
  3599  00FF93  25                 	db	37
  3600  00FF94  64                 	db	100	;'d'
  3601  00FF95  20                 	db	32
  3602  00FF96  25                 	db	37
  3603  00FF97  32                 	db	50	;'2'
  3604  00FF98  2E                 	db	46
  3605  00FF99  34                 	db	52	;'4'
  3606  00FF9A  66                 	db	102	;'f'
  3607  00FF9B  20                 	db	32
  3608  00FF9C  20                 	db	32
  3609  00FF9D  20                 	db	32
  3610  00FF9E  25                 	db	37
  3611  00FF9F  64                 	db	100	;'d'
  3612  00FFA0  20                 	db	32
  3613  00FFA1  20                 	db	32
  3614  00FFA2  00                 	db	0
  3615  00FFA3                     STR_62:
  3616                           
  3617                           ; BSR set to: 57
  3618  00FFA3  76                 	db	118	;'v'
  3619  00FFA4  74                 	db	116	;'t'
  3620  00FFA5  65                 	db	101	;'e'
  3621  00FFA6  72                 	db	114	;'r'
  3622  00FFA7  6D                 	db	109	;'m'
  3623  00FFA8  20                 	db	32
  3624  00FFA9  25                 	db	37
  3625  00FFAA  78                 	db	120	;'x'
  3626  00FFAB  3A                 	db	58	;':'
  3627  00FFAC  25                 	db	37
  3628  00FFAD  78                 	db	120	;'x'
  3629  00FFAE  20                 	db	32
  3630  00FFAF  20                 	db	32
  3631  00FFB0  20                 	db	32
  3632  00FFB1  00                 	db	0
  3633  00FFB2                     STR_56:
  3634                           
  3635                           ; BSR set to: 57
  3636  00FFB2  46                 	db	70	;'F'
  3637  00FFB3  65                 	db	101	;'e'
  3638  00FFB4  62                 	db	98	;'b'
  3639  00FFB5  20                 	db	32
  3640  00FFB6  20                 	db	32
  3641  00FFB7  36                 	db	54	;'6'
  3642  00FFB8  20                 	db	32
  3643  00FFB9  32                 	db	50	;'2'
  3644  00FFBA  30                 	db	48	;'0'
  3645  00FFBB  32                 	db	50	;'2'
  3646  00FFBC  30                 	db	48	;'0'
  3647  00FFBD  00                 	db	0
  3648  00FFBE                     STR_60:
  3649                           
  3650                           ; BSR set to: 57
  3651  00FFBE  25                 	db	37
  3652  00FFBF  73                 	db	115	;'s'
  3653  00FFC0  20                 	db	32
  3654  00FFC1  20                 	db	32
  3655  00FFC2  20                 	db	32
  3656  00FFC3  20                 	db	32
  3657  00FFC4  20                 	db	32
  3658  00FFC5  20                 	db	32
  3659  00FFC6  20                 	db	32
  3660  00FFC7  00                 	db	0
  3661  00FFC8                     STR_57:
  3662                           
  3663                           ; BSR set to: 57
  3664  00FFC8  31                 	db	49	;'1'
  3665  00FFC9  36                 	db	54	;'6'
  3666  00FFCA  3A                 	db	58	;':'
  3667  00FFCB  35                 	db	53	;'5'
  3668  00FFCC  33                 	db	51	;'3'
  3669  00FFCD  3A                 	db	58	;':'
  3670  00FFCE  31                 	db	49	;'1'
  3671  00FFCF  33                 	db	51	;'3'
  3672  00FFD0  00                 	db	0
  3673  00FFD1                     STR_3:
  3674                           
  3675                           ; BSR set to: 57
  3676  00FFD1  31                 	db	49	;'1'
  3677  00FFD2  2E                 	db	46
  3678  00FFD3  31                 	db	49	;'1'
  3679  00FFD4  37                 	db	55	;'7'
  3680  00FFD5  00                 	db	0
  3681  00FFD6                     STR_76:
  3682                           
  3683                           ; BSR set to: 57
  3684  00FFD6  49                 	db	73	;'I'
  3685  00FFD7  4E                 	db	78	;'N'
  3686  00FFD8  46                 	db	70	;'F'
  3687  00FFD9  00                 	db	0
  3688  00FFDA                     STR_80:
  3689                           
  3690                           ; BSR set to: 57
  3691  00FFDA  4E                 	db	78	;'N'
  3692  00FFDB  41                 	db	65	;'A'
  3693  00FFDC  4E                 	db	78	;'N'
  3694  00FFDD  00                 	db	0
  3695  00FFDE                     STR_77:
  3696                           
  3697                           ; BSR set to: 57
  3698  00FFDE  69                 	db	105	;'i'
  3699  00FFDF  6E                 	db	110	;'n'
  3700  00FFE0  66                 	db	102	;'f'
  3701  00FFE1  00                 	db	0
  3702  00FFE2                     STR_81:
  3703                           
  3704                           ; BSR set to: 57
  3705  00FFE2  6E                 	db	110	;'n'
  3706  00FFE3  61                 	db	97	;'a'
  3707  00FFE4  6E                 	db	110	;'n'
  3708  00FFE5  00                 	db	0
  3709  00FFE6                     STR_107:
  3710                           
  3711                           ; BSR set to: 57
  3712  00FFE6  6C                 	db	108	;'l'
  3713  00FFE7  58                 	db	88	;'X'
  3714  00FFE8  00                 	db	0
  3715  00FFE9                     STR_84:
  3716                           
  3717                           ; BSR set to: 57
  3718  00FFE9  6C                 	db	108	;'l'
  3719  00FFEA  64                 	db	100	;'d'
  3720  00FFEB  00                 	db	0
  3721  00FFEC                     STR_93:
  3722                           
  3723                           ; BSR set to: 57
  3724  00FFEC  6C                 	db	108	;'l'
  3725  00FFED  66                 	db	102	;'f'
  3726  00FFEE  00                 	db	0
  3727  00FFEF                     STR_88:
  3728                           
  3729                           ; BSR set to: 57
  3730  00FFEF  6C                 	db	108	;'l'
  3731  00FFF0  69                 	db	105	;'i'
  3732  00FFF1  00                 	db	0
  3733  00FFF2                     STR_98:
  3734                           
  3735                           ; BSR set to: 57
  3736  00FFF2  6C                 	db	108	;'l'
  3737  00FFF3  75                 	db	117	;'u'
  3738  00FFF4  00                 	db	0
  3739  00FFF5                     STR_103:
  3740                           
  3741                           ; BSR set to: 57
  3742  00FFF5  6C                 	db	108	;'l'
  3743  00FFF6  78                 	db	120	;'x'
  3744  00FFF7  00                 	db	0
  3745  00FFF8                     STR_55:
  3746                           
  3747                           ; BSR set to: 57
  3748  00FFF8  25                 	db	37
  3749  00FFF9  63                 	db	99	;'c'
  3750  00FFFA  00                 	db	0
  3751  00FFFB                     STR_54:
  3752                           
  3753                           ; BSR set to: 57
  3754  00FFFB  25                 	db	37
  3755  00FFFC  73                 	db	115	;'s'
  3756  00FFFD  00                 	db	0
  3757  0000                     
  3758                           ; #config settings
  3759  00FFFE  00                 	db	0	; dummy byte at the end
  3760  0000                     
  3761                           	psect	cinit
  3762  01A74E                     __pcinit:
  3763                           	opt callstack 0
  3764  01A74E                     start_initialization:
  3765                           	opt callstack 0
  3766  01A74E                     __initialization:
  3767                           	opt callstack 0
  3768                           
  3769                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3770                           ; load TBLPTR registers with __pidataBIGRAM
  3771  01A74E  0E8E               	movlw	low __pidataBIGRAM
  3772  01A750  6EF6               	movwf	tblptrl,c
  3773  01A752  0E6B               	movlw	high __pidataBIGRAM
  3774  01A754  6EF7               	movwf	tblptrh,c
  3775  01A756  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3776  01A758  6EF8               	movwf	tblptru,c
  3777  01A75A  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3778  01A75E  EE20 F32B          	lfsr	2,811
  3779  01A762                     copy_data0:
  3780  01A762  0009               	tblrd		*+
  3781  01A764  006F FFD7 FFEE     	movff	tablat,postinc0
  3782  01A76A  50DD               	movf	postdec2,w,c
  3783  01A76C  50D9               	movf	fsr2l,w,c
  3784  01A76E  E1F9               	bnz	copy_data0
  3785  01A770  50DA               	movf	fsr2h,w,c
  3786  01A772  E1F7               	bnz	copy_data0
  3787                           
  3788                           ; Initialize objects allocated to BANK1 (208 bytes)
  3789                           ; load TBLPTR registers with __pidataBANK1
  3790  01A774  0E02               	movlw	low __pidataBANK1
  3791  01A776  6EF6               	movwf	tblptrl,c
  3792  01A778  0EA9               	movlw	high __pidataBANK1
  3793  01A77A  6EF7               	movwf	tblptrh,c
  3794  01A77C  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3795  01A77E  6EF8               	movwf	tblptru,c
  3796  01A780  EE00  F100         	lfsr	0,__pdataBANK1
  3797  01A784  EE20 F0D0          	lfsr	2,208
  3798  01A788                     copy_data1:
  3799  01A788  0009               	tblrd		*+
  3800  01A78A  006F FFD7 FFEE     	movff	tablat,postinc0
  3801  01A790  50DD               	movf	postdec2,w,c
  3802  01A792  50D9               	movf	fsr2l,w,c
  3803  01A794  E1F9               	bnz	copy_data1
  3804                           
  3805                           ; Initialize objects allocated to BANK0 (54 bytes)
  3806                           ; load TBLPTR registers with __pidataBANK0
  3807  01A796  0EA8               	movlw	low __pidataBANK0
  3808  01A798  6EF6               	movwf	tblptrl,c
  3809  01A79A  0EC1               	movlw	high __pidataBANK0
  3810  01A79C  6EF7               	movwf	tblptrh,c
  3811  01A79E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3812  01A7A0  6EF8               	movwf	tblptru,c
  3813  01A7A2  EE00  F0AF         	lfsr	0,__pdataBANK0
  3814  01A7A6  EE20 F036          	lfsr	2,54
  3815  01A7AA                     copy_data2:
  3816  01A7AA  0009               	tblrd		*+
  3817  01A7AC  006F FFD7 FFEE     	movff	tablat,postinc0
  3818  01A7B2  50DD               	movf	postdec2,w,c
  3819  01A7B4  50D9               	movf	fsr2l,w,c
  3820  01A7B6  E1F9               	bnz	copy_data2
  3821                           
  3822                           ; Clear objects allocated to BIGRAM (482 bytes)
  3823  01A7B8  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3824  01A7BC  EE20 F1E2          	lfsr	2,482
  3825  01A7C0                     clear_0:
  3826  01A7C0  6AEE               	clrf	postinc0,c
  3827  01A7C2  50DD               	movf	postdec2,w,c
  3828  01A7C4  50D9               	movf	fsr2l,w,c
  3829  01A7C6  E1FC               	bnz	clear_0
  3830  01A7C8  50DA               	movf	fsr2h,w,c
  3831  01A7CA  E1FA               	bnz	clear_0
  3832                           
  3833                           ; Clear objects allocated to BANK4 (255 bytes)
  3834  01A7CC  EE01  F000         	lfsr	0,__pbssBANK4
  3835  01A7D0  EE20 F0FF          	lfsr	2,255
  3836  01A7D4                     clear_1:
  3837  01A7D4  6AEE               	clrf	postinc0,c
  3838  01A7D6  50DD               	movf	postdec2,w,c
  3839  01A7D8  50D9               	movf	fsr2l,w,c
  3840  01A7DA  E1FC               	bnz	clear_1
  3841  01A7DC  50DA               	movf	fsr2h,w,c
  3842  01A7DE  E1FA               	bnz	clear_1
  3843                           
  3844                           ; Clear objects allocated to BANK3 (198 bytes)
  3845  01A7E0  EE00  F300         	lfsr	0,__pbssBANK3
  3846  01A7E4  0EC6               	movlw	198
  3847  01A7E6                     clear_2:
  3848  01A7E6  6AEE               	clrf	postinc0,c
  3849  01A7E8  06E8               	decf	wreg,f,c
  3850  01A7EA  E1FD               	bnz	clear_2
  3851                           
  3852                           ; Clear objects allocated to BANK2 (231 bytes)
  3853  01A7EC  EE00  F200         	lfsr	0,__pbssBANK2
  3854  01A7F0  0EE7               	movlw	231
  3855  01A7F2                     clear_3:
  3856  01A7F2  6AEE               	clrf	postinc0,c
  3857  01A7F4  06E8               	decf	wreg,f,c
  3858  01A7F6  E1FD               	bnz	clear_3
  3859                           
  3860                           ; Clear objects allocated to BANK1 (46 bytes)
  3861  01A7F8  EE00  F1D0         	lfsr	0,__pbssBANK1
  3862  01A7FC  0E2E               	movlw	46
  3863  01A7FE                     clear_4:
  3864  01A7FE  6AEE               	clrf	postinc0,c
  3865  01A800  06E8               	decf	wreg,f,c
  3866  01A802  E1FD               	bnz	clear_4
  3867                           
  3868                           ; Clear objects allocated to BANK0 (79 bytes)
  3869  01A804  EE00  F060         	lfsr	0,__pbssBANK0
  3870  01A808  0E4F               	movlw	79
  3871  01A80A                     clear_5:
  3872  01A80A  6AEE               	clrf	postinc0,c
  3873  01A80C  06E8               	decf	wreg,f,c
  3874  01A80E  E1FD               	bnz	clear_5
  3875                           
  3876                           ; Clear objects allocated to COMRAM (14 bytes)
  3877  01A810  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3878  01A814  0E0E               	movlw	14
  3879  01A816                     clear_6:
  3880  01A816  6AEE               	clrf	postinc0,c
  3881  01A818  06E8               	decf	wreg,f,c
  3882  01A81A  E1FD               	bnz	clear_6
  3883                           
  3884                           ;
  3885                           ; Setup IVTBASE
  3886                           ;
  3887  01A81C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3888  01A81E  6ED5               	movwf	213,c
  3889  01A820  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3890  01A822  6ED6               	movwf	214,c
  3891  01A824  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3892  01A826  6ED7               	movwf	215,c
  3893  01A828                     end_of_initialization:
  3894                           	opt callstack 0
  3895  01A828                     __end_of__initialization:
  3896                           	opt callstack 0
  3897  01A828  0100               	movlb	0
  3898  01A82A  EF22  F089         	goto	_main	;jump to C main() function
  3899                           
  3900                           	psect	bssCOMRAM
  3901  00003A                     __pbssCOMRAM:
  3902                           	opt callstack 0
  3903  00003A                     _width:
  3904                           	opt callstack 0
  3905  00003A                     	ds	2
  3906  00003C                     _prec:
  3907                           	opt callstack 0
  3908  00003C                     	ds	2
  3909  00003E                     _flags:
  3910                           	opt callstack 0
  3911  00003E                     	ds	2
  3912  000040                     calc_bsoc@log_update_wait:
  3913                           	opt callstack 0
  3914  000040                     	ds	1
  3915  000041                     check_day_time@day_delay:
  3916                           	opt callstack 0
  3917  000041                     	ds	1
  3918  000042                     dac_spi_control@S0:
  3919                           	opt callstack 0
  3920  000042                     	ds	1
  3921  000043                     dac_spi_control@init:
  3922                           	opt callstack 0
  3923  000043                     	ds	1
  3924  000044                     _uart2RxHead:
  3925                           	opt callstack 0
  3926  000044                     	ds	1
  3927  000045                     _uart2TxBufferRemaining:
  3928                           	opt callstack 0
  3929  000045                     	ds	1
  3930  000046                     _uart2TxTail:
  3931                           	opt callstack 0
  3932  000046                     	ds	1
  3933  000047                     _uart1RxHead:
  3934                           	opt callstack 0
  3935  000047                     	ds	1
  3936                           
  3937                           	psect	bssBANK0
  3938  000060                     __pbssBANK0:
  3939                           	opt callstack 0
  3940  000060                     fabsf@F463:
  3941                           	opt callstack 0
  3942  000060                     	ds	4
  3943  000064                     ___fpclassifyf@F463:
  3944                           	opt callstack 0
  3945  000064                     	ds	4
  3946  000068                     calc_ror_data@bcror:
  3947                           	opt callstack 0
  3948  000068                     	ds	4
  3949  00006C                     calc_ror_data@bvror:
  3950                           	opt callstack 0
  3951  00006C                     	ds	4
  3952  000070                     calc_model_data@bcror:
  3953                           	opt callstack 0
  3954  000070                     	ds	4
  3955  000074                     calc_model_data@bvror:
  3956                           	opt callstack 0
  3957  000074                     	ds	4
  3958  000078                     wdtdelay@dcount:
  3959                           	opt callstack 0
  3960  000078                     	ds	4
  3961  00007C                     _TMR3_InterruptHandler:
  3962                           	opt callstack 0
  3963  00007C                     	ds	3
  3964  00007F                     _TMR5_InterruptHandler:
  3965                           	opt callstack 0
  3966  00007F                     	ds	3
  3967  000082                     _TMR6_InterruptHandler:
  3968                           	opt callstack 0
  3969  000082                     	ds	3
  3970  000085                     _ADCC_ADTI_InterruptHandler:
  3971                           	opt callstack 0
  3972  000085                     	ds	3
  3973  000088                     _ADCC_ADI_InterruptHandler:
  3974                           	opt callstack 0
  3975  000088                     	ds	3
  3976  00008B                     _UART1_RxInterruptHandler:
  3977                           	opt callstack 0
  3978  00008B                     	ds	3
  3979  00008E                     _UART2_TxInterruptHandler:
  3980                           	opt callstack 0
  3981  00008E                     	ds	3
  3982  000091                     _UART2_RxInterruptHandler:
  3983                           	opt callstack 0
  3984  000091                     	ds	3
  3985  000094                     _INT1_InterruptHandler:
  3986                           	opt callstack 0
  3987  000094                     	ds	3
  3988  000097                     _INT0_InterruptHandler:
  3989                           	opt callstack 0
  3990  000097                     	ds	3
  3991  00009A                     _nout:
  3992                           	opt callstack 0
  3993  00009A                     	ds	2
  3994  00009C                     TMR3_ISR@CountCallBack:
  3995                           	opt callstack 0
  3996  00009C                     	ds	2
  3997  00009E                     _timer3ReloadVal:
  3998                           	opt callstack 0
  3999  00009E                     	ds	2
  4000  0000A0                     TMR5_ISR@CountCallBack:
  4001                           	opt callstack 0
  4002  0000A0                     	ds	2
  4003  0000A2                     _timer5ReloadVal:
  4004                           	opt callstack 0
  4005  0000A2                     	ds	2
  4006  0000A4                     esr_check@esr_state:
  4007                           	opt callstack 0
  4008  0000A4                     	ds	1
  4009  0000A5                     dac_spi_control@SB:
  4010                           	opt callstack 0
  4011  0000A5                     	ds	1
  4012  0000A6                     dac_spi_control@SC:
  4013                           	opt callstack 0
  4014  0000A6                     	ds	1
  4015  0000A7                     dac_spi_control@S2:
  4016                           	opt callstack 0
  4017  0000A7                     	ds	1
  4018  0000A8                     dac_spi_control@S1:
  4019                           	opt callstack 0
  4020  0000A8                     	ds	1
  4021  0000A9                     _mode_sw:
  4022                           	opt callstack 0
  4023  0000A9                     	ds	1
  4024  0000AA                     _uart2RxCount:
  4025                           	opt callstack 0
  4026  0000AA                     	ds	1
  4027  0000AB                     _uart2RxTail:
  4028                           	opt callstack 0
  4029  0000AB                     	ds	1
  4030  0000AC                     _uart2TxHead:
  4031                           	opt callstack 0
  4032  0000AC                     	ds	1
  4033  0000AD                     _uart1RxCount:
  4034                           	opt callstack 0
  4035  0000AD                     	ds	1
  4036  0000AE                     _uart1RxTail:
  4037                           	opt callstack 0
  4038  0000AE                     	ds	1
  4039                           
  4040                           	psect	dataBANK0
  4041  0000AF                     __pdataBANK0:
  4042                           	opt callstack 0
  4043  0000AF                     _R:
  4044                           	opt callstack 0
  4045  0000AF                     	ds	54
  4046                           
  4047                           	psect	bssBANK1
  4048  0001D0                     __pbssBANK1:
  4049                           	opt callstack 0
  4050  0001D0                     _spi_link:
  4051                           	opt callstack 0
  4052  0001D0                     	ds	12
  4053  0001DC                     _uart1RxBuffer:
  4054                           	opt callstack 0
  4055  0001DC                     	ds	8
  4056  0001E4                     spinners@s:
  4057                           	opt callstack 0
  4058  0001E4                     	ds	6
  4059  0001EA                     floorf@F524:
  4060                           	opt callstack 0
  4061  0001EA                     	ds	4
  4062  0001EE                     _utctime:
  4063                           	opt callstack 0
  4064  0001EE                     	ds	4
  4065  0001F2                     _P:
  4066                           	opt callstack 0
  4067  0001F2                     	ds	4
  4068  0001F6                     _seed:
  4069                           	opt callstack 0
  4070  0001F6                     	ds	8
  4071                           
  4072                           	psect	dataBANK1
  4073  000100                     __pdataBANK1:
  4074                           	opt callstack 0
  4075  000100                     stoa@F1166:
  4076                           	opt callstack 0
  4077  000100                     	ds	7
  4078  000107                     _V:
  4079                           	opt callstack 0
  4080  000107                     	ds	192
  4081  0001C7                     _H:
  4082                           	opt callstack 0
  4083  0001C7                     	ds	9
  4084                           
  4085                           	psect	bssBANK2
  4086  000200                     __pbssBANK2:
  4087                           	opt callstack 0
  4088  000200                     lp_filter@smooth:
  4089                           	opt callstack 0
  4090  000200                     	ds	84
  4091  000254                     _S:
  4092                           	opt callstack 0
  4093  000254                     	ds	41
  4094  00027D                     _tickCount:
  4095                           	opt callstack 0
  4096  00027D                     	ds	26
  4097  000297                     _dbuf:
  4098                           	opt callstack 0
  4099  000297                     	ds	80
  4100                           
  4101                           	psect	bssBANK3
  4102  000300                     __pbssBANK3:
  4103                           	opt callstack 0
  4104  000300                     _uart2TxBuffer:
  4105                           	opt callstack 0
  4106  000300                     	ds	64
  4107  000340                     _ring_buf2:
  4108                           	opt callstack 0
  4109  000340                     	ds	67
  4110  000383                     _ring_buf1:
  4111                           	opt callstack 0
  4112  000383                     	ds	67
  4113                           
  4114                           	psect	bssBANK4
  4115  000400                     __pbssBANK4:
  4116                           	opt callstack 0
  4117  000400                     _uart2RxBuffer:
  4118                           	opt callstack 0
  4119  000400                     	ds	255
  4120                           
  4121                           	psect	bssBIGRAM
  4122  00082A                     __pbssBIGRAM:
  4123                           	opt callstack 0
  4124  00082A                     _D:
  4125                           	opt callstack 0
  4126  00082A                     	ds	482
  4127                           
  4128                           	psect	dataBIGRAM
  4129  0004FF                     __pdataBIGRAM:
  4130                           	opt callstack 0
  4131  0004FF                     _port_data:
  4132                           	opt callstack 0
  4133  0004FF                     	ds	512
  4134  0006FF                     _C:
  4135                           	opt callstack 0
  4136  0006FF                     	ds	299
  4137                           
  4138                           	psect	cstackBANK0
  4139  0000E5                     __pcstackBANK0:
  4140                           	opt callstack 0
  4141  0000E5                     ??_TMR3_ISR:
  4142                           
  4143                           ; 1 bytes @ 0x0
  4144  0000E5                     	ds	25
  4145                           
  4146                           	psect	cstackCOMRAM
  4147  000021                     __pcstackCOMRAM:
  4148                           	opt callstack 0
  4149  000021                     ??_ADCC_ThresholdISR:
  4150  000021                     
  4151                           ; 1 bytes @ 0x0
  4152  000021                     	ds	5
  4153  000026                     ??_TMR6_ISR:
  4154                           
  4155                           ; 1 bytes @ 0x5
  4156  000026                     	ds	1
  4157  000027                     ??_INT1_ISR:
  4158  000027                     
  4159                           ; 1 bytes @ 0x6
  4160  000027                     	ds	4
  4161  00002B                     ??_TMR5_ISR:
  4162                           
  4163                           ; 1 bytes @ 0xA
  4164  00002B                     	ds	15
  4165                           
  4166 ;;
  4167 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4168 ;;
  4169 ;; *************** function _main *****************
  4170 ;; Defined at:
  4171 ;;		line 189 in file "main.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  esr_temp        4  [STACK] float 
  4176 ;;  i_esr           2  [STACK] unsigned short 
  4177 ;;  shape           1  [STACK] unsigned char 
  4178 ;;  inp_index       1  [STACK] unsigned char 
  4179 ;;  k               1  [STACK] unsigned char 
  4180 ;;  j               1  [STACK] unsigned char 
  4181 ;;  i               1  [STACK] unsigned char 
  4182 ;;  mode            1  [STACK] enum E17013
  4183 ;;  i_ror           1  [STACK] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1  [STACK] void 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels required when called:   29
  4199 ;; This function calls:
  4200 ;;		_SYSTEM_Initialize
  4201 ;;		_StartTimer
  4202 ;;		_TimerDone
  4203 ;;		_WaitMs
  4204 ;;		___fladd
  4205 ;;		___flge
  4206 ;;		___fltol
  4207 ;;		_calc_model_data
  4208 ;;		_calc_ror_data
  4209 ;;		_check_adc_scan
  4210 ;;		_check_enter_button
  4211 ;;		_check_help
  4212 ;;		_clear_adc_scan
  4213 ;;		_clear_hid_pflags
  4214 ;;		_conv_raw_result
  4215 ;;		_convert_adc_data
  4216 ;;		_current_sensor_cal
  4217 ;;		_eaDogM_WriteCommand
  4218 ;;		_esr_check
  4219 ;;		_fabsf
  4220 ;;		_get_raw_result
  4221 ;;		_get_switch
  4222 ;;		_get_vterm_ptr
  4223 ;;		_hid_display
  4224 ;;		_init_bsoc
  4225 ;;		_init_display
  4226 ;;		_init_port_dma
  4227 ;;		_lp_filter
  4228 ;;		_mode_lamp_dim
  4229 ;;		_set_dac
  4230 ;;		_set_dac_a
  4231 ;;		_set_dac_b
  4232 ;;		_set_display_info
  4233 ;;		_set_load_relay_one
  4234 ;;		_set_load_relay_two
  4235 ;;		_set_vterm
  4236 ;;		_spinners
  4237 ;;		_sprintf
  4238 ;;		_srand
  4239 ;;		_start_adc_scan
  4240 ;;		_start_switch_handler
  4241 ;;		_static_soc
  4242 ;;		_update_lcd
  4243 ;;		_wait_lcd_done
  4244 ;; This function is called by:
  4245 ;;		Startup code after reset
  4246 ;; This function uses a reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text0
  4250  011244                     __ptext0:
  4251                           	opt callstack 0
  4252  011244                     _main:
  4253                           	opt callstack 0
  4254                           
  4255                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4256  011244  0E11               	movlw	17
  4257  011246  26E1               	addwf	fsr1l,f,c
  4258  011248  0E00               	movlw	0
  4259  01124A  22E2               	addwfc	fsr1h,f,c
  4260                           
  4261                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4262                           ;stkvar	_inp_index @ sp[(-17)+11]
  4263                           
  4264                           ;incstack = 0
  4265  01124C  0EFA               	movlw	-6
  4266  01124E  6AE3               	clrf	plusw1,c
  4267                           
  4268                           ;stkvar	_i @ sp[(-17)+14]
  4269  011250  0EFD               	movlw	-3
  4270  011252  6AE3               	clrf	plusw1,c
  4271                           
  4272                           ;stkvar	_j @ sp[(-17)+13]
  4273  011254  0EFC               	movlw	-4
  4274  011256  6AE3               	clrf	plusw1,c
  4275  011258  2AE3               	incf	plusw1,f,c
  4276                           
  4277                           ;stkvar	_k @ sp[(-17)+12]
  4278  01125A  0EFB               	movlw	-5
  4279  01125C  6AE3               	clrf	plusw1,c
  4280  01125E  82E3               	bsf	plusw1,1,c
  4281                           
  4282                           ;main.c: 195:  SYSTEM_Initialize();
  4283  011260  EC82  F0DE         	call	_SYSTEM_Initialize	;wreg free
  4284                           
  4285                           ; BSR set to: 60
  4286                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4287  011264  8ED2               	bsf	210,7,c	;volatile
  4288                           
  4289                           ; BSR set to: 60
  4290                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4291  011266  8CD2               	bsf	210,6,c	;volatile
  4292                           
  4293                           ; BSR set to: 60
  4294                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4295  011268  0101               	movlb	1	; () banked
  4296  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;main.c: 208:  WaitMs(300);
  4300  01126C  0E2C               	movlw	44
  4301  01126E  6EE6               	movwf	postinc1,c
  4302  011270  0E01               	movlw	1
  4303  011272  6EE6               	movwf	postinc1,c
  4304  011274  ECEF  F0E0         	call	_WaitMs	;wreg free
  4305                           
  4306                           ;main.c: 209:  if (PORTBbits.RB0) {
  4307  011278  A0CB               	btfss	203,0,c	;volatile
  4308  01127A  D004               	goto	l13715
  4309                           
  4310                           ;main.c: 210:   mode = UI_STATE_HOST;
  4311                           ;stkvar	_mode @ sp[(-17)+15]
  4312  01127C  0EFE               	movlw	-2
  4313  01127E  6AE3               	clrf	plusw1,c
  4314  011280  2AE3               	incf	plusw1,f,c
  4315                           
  4316                           ;main.c: 211:  } else {
  4317  011282  D004               	goto	l13717
  4318  011284                     l13715:
  4319                           
  4320                           ;main.c: 212:   mode = UI_STATE_LOG;
  4321                           ;stkvar	_mode @ sp[(-17)+15]
  4322  011284  0EFE               	movlw	-2
  4323  011286  6AE3               	clrf	plusw1,c
  4324  011288  80E3               	bsf	plusw1,0,c
  4325  01128A  82E3               	bsf	plusw1,1,c	;indir
  4326  01128C                     l13717:
  4327                           
  4328                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4329                           ;stkvar	_mode @ sp[(-17)+15]
  4330  01128C  0EFE               	movlw	-2
  4331  01128E  04E3               	decf	plusw1,w,c
  4332  011290  A4D8               	btfss	status,2,c
  4333  011292  D007               	goto	l1336
  4334                           
  4335                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4336  011294  80BD               	bsf	189,0,c	;volatile
  4337                           
  4338                           ;main.c: 217:   V.mode_pwm = 70;
  4339  011296  0E00               	movlw	0
  4340  011298  0101               	movlb	1	; () banked
  4341  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4342  01129C  0E46               	movlw	70
  4343  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4344                           
  4345                           ;main.c: 218:  } else {
  4346  0112A0  D004               	goto	l13721
  4347  0112A2                     l1336:
  4348  0112A2  90BD               	bcf	189,0,c	;volatile
  4349                           
  4350                           ;main.c: 220:   V.mode_pwm = 0;
  4351  0112A4  0101               	movlb	1	; () banked
  4352  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4353  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4354  0112AA                     l13721:
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4358  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4359  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4360  0112B6  EC93  F0E4         	call	_mode_lamp_dim	;wreg free
  4361  0112BA  D34D               	goto	l13857
  4362  0112BC                     l13723:
  4363                           
  4364                           ; BSR set to: 1
  4365                           ;main.c: 230:    init_port_dma();
  4366  0112BC  EC72  F0E1         	call	_init_port_dma	;wreg free
  4367                           
  4368                           ; BSR set to: 59
  4369                           ;main.c: 232:    init_display();
  4370  0112C0  ECC0  F0D2         	call	_init_display	;wreg free
  4371                           
  4372                           ; BSR set to: 61
  4373                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4374  0112C4  0E0C               	movlw	12
  4375  0112C6  6EE6               	movwf	postinc1,c
  4376  0112C8  ECFF  F0E4         	call	_eaDogM_WriteCommand	;wreg free
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;main.c: 234:    set_dac();
  4380  0112CC  EC67  F0D6         	call	_set_dac	;wreg free
  4381                           
  4382                           ;main.c: 238:    set_load_relay_one(1);
  4383  0112D0  0E01               	movlw	1
  4384  0112D2  6EE6               	movwf	postinc1,c
  4385  0112D4  ECE7  F0E4         	call	_set_load_relay_one	;wreg free
  4386                           
  4387                           ;main.c: 239:    set_load_relay_two(1);
  4388  0112D8  0E01               	movlw	1
  4389  0112DA  6EE6               	movwf	postinc1,c
  4390  0112DC  ECDF  F0E4         	call	_set_load_relay_two	;wreg free
  4391                           
  4392                           ;main.c: 241:    V.ui_state = mode;
  4393                           ;stkvar	_mode @ sp[(-17)+15]
  4394  0112E0  0EFE               	movlw	-2
  4395  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4396                           
  4397                           ;main.c: 242:    srand(1957);
  4398  0112E8  0EA5               	movlw	165
  4399  0112EA  6EE6               	movwf	postinc1,c
  4400  0112EC  0E07               	movlw	7
  4401  0112EE  6EE6               	movwf	postinc1,c
  4402  0112F0  EC0A  F0E1         	call	_srand	;wreg free
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;main.c: 243:    set_vterm(0);
  4406  0112F4  0E00               	movlw	0
  4407  0112F6  6EE6               	movwf	postinc1,c
  4408  0112F8  EC4B  F0E4         	call	_set_vterm	;wreg free
  4409                           
  4410                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4411  0112FC  0EF4               	movlw	low STR_1
  4412  0112FE  6EE6               	movwf	postinc1,c
  4413  011300  0EFE               	movlw	high STR_1
  4414  011302  6EE6               	movwf	postinc1,c
  4415  011304  0E00               	movlw	0
  4416  011306  6EE6               	movwf	postinc1,c
  4417  011308  0E00               	movlw	0
  4418  01130A  6EE6               	movwf	postinc1,c
  4419  01130C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4420  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4421  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4422  01131C  0E04               	movlw	4
  4423  01131E  6EE6               	movwf	postinc1,c
  4424  011320  ECC0  F0D1         	call	_sprintf	;wreg free
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.17");
  4428  011324  0ED1               	movlw	low STR_3
  4429  011326  6EE6               	movwf	postinc1,c
  4430  011328  0EFF               	movlw	high STR_3
  4431  01132A  6EE6               	movwf	postinc1,c
  4432  01132C  0EB5               	movlw	low STR_2
  4433  01132E  6EE6               	movwf	postinc1,c
  4434  011330  0EFE               	movlw	high STR_2
  4435  011332  6EE6               	movwf	postinc1,c
  4436  011334  0E00               	movlw	0
  4437  011336  6EE6               	movwf	postinc1,c
  4438  011338  0E01               	movlw	1
  4439  01133A  6EE6               	movwf	postinc1,c
  4440  01133C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4441  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4442  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4443  01134C  0E06               	movlw	6
  4444  01134E  6EE6               	movwf	postinc1,c
  4445  011350  ECC0  F0D1         	call	_sprintf	;wreg free
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4449  011354  0E61               	movlw	low STR_4
  4450  011356  6EE6               	movwf	postinc1,c
  4451  011358  0EFE               	movlw	high STR_4
  4452  01135A  6EE6               	movwf	postinc1,c
  4453  01135C  0E00               	movlw	0
  4454  01135E  6EE6               	movwf	postinc1,c
  4455  011360  0E02               	movlw	2
  4456  011362  6EE6               	movwf	postinc1,c
  4457  011364  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4458  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4459  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4460  011374  0E04               	movlw	4
  4461  011376  6EE6               	movwf	postinc1,c
  4462  011378  ECC0  F0D1         	call	_sprintf	;wreg free
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4466  01137C  0EF8               	movlw	low STR_5
  4467  01137E  6EE6               	movwf	postinc1,c
  4468  011380  0EFD               	movlw	high STR_5
  4469  011382  6EE6               	movwf	postinc1,c
  4470  011384  0E02               	movlw	2
  4471  011386  6EE6               	movwf	postinc1,c
  4472  011388  0E00               	movlw	0
  4473  01138A  6EE6               	movwf	postinc1,c
  4474  01138C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4475  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4476  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4477  01139C  0E04               	movlw	4
  4478  01139E  6EE6               	movwf	postinc1,c
  4479  0113A0  ECC0  F0D1         	call	_sprintf	;wreg free
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4483  0113A4  0EF8               	movlw	low STR_5
  4484  0113A6  6EE6               	movwf	postinc1,c
  4485  0113A8  0EFD               	movlw	high STR_5
  4486  0113AA  6EE6               	movwf	postinc1,c
  4487  0113AC  0E02               	movlw	2
  4488  0113AE  6EE6               	movwf	postinc1,c
  4489  0113B0  0E01               	movlw	1
  4490  0113B2  6EE6               	movwf	postinc1,c
  4491  0113B4  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4492  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4493  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4494  0113C4  0E04               	movlw	4
  4495  0113C6  6EE6               	movwf	postinc1,c
  4496  0113C8  ECC0  F0D1         	call	_sprintf	;wreg free
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4500  0113CC  0EF8               	movlw	low STR_5
  4501  0113CE  6EE6               	movwf	postinc1,c
  4502  0113D0  0EFD               	movlw	high STR_5
  4503  0113D2  6EE6               	movwf	postinc1,c
  4504  0113D4  0E02               	movlw	2
  4505  0113D6  6EE6               	movwf	postinc1,c
  4506  0113D8  0E02               	movlw	2
  4507  0113DA  6EE6               	movwf	postinc1,c
  4508  0113DC  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4509  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4510  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4511  0113EC  0E04               	movlw	4
  4512  0113EE  6EE6               	movwf	postinc1,c
  4513  0113F0  ECC0  F0D1         	call	_sprintf	;wreg free
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;main.c: 250:    update_lcd(0);
  4517  0113F4  0E00               	movlw	0
  4518  0113F6  6EE6               	movwf	postinc1,c
  4519  0113F8  EC38  F0D1         	call	_update_lcd	;wreg free
  4520                           
  4521                           ;main.c: 251:    WaitMs(1000);
  4522  0113FC  0EE8               	movlw	232
  4523  0113FE  6EE6               	movwf	postinc1,c
  4524  011400  0E03               	movlw	3
  4525  011402  6EE6               	movwf	postinc1,c
  4526  011404  ECEF  F0E0         	call	_WaitMs	;wreg free
  4527                           
  4528                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4529  011408  0EFA               	movlw	250
  4530  01140A  6EE6               	movwf	postinc1,c
  4531  01140C  0E00               	movlw	0
  4532  01140E  6EE6               	movwf	postinc1,c
  4533  011410  0E0A               	movlw	10
  4534  011412  6EE6               	movwf	postinc1,c
  4535  011414  EC00  F0E0         	call	_StartTimer	;wreg free
  4536                           
  4537                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4538  011418  0EC8               	movlw	200
  4539  01141A  6EE6               	movwf	postinc1,c
  4540  01141C  0E00               	movlw	0
  4541  01141E  6EE6               	movwf	postinc1,c
  4542  011420  0E01               	movlw	1
  4543  011422  6EE6               	movwf	postinc1,c
  4544  011424  EC00  F0E0         	call	_StartTimer	;wreg free
  4545                           
  4546                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4547  011428  0EB8               	movlw	184
  4548  01142A  6EE6               	movwf	postinc1,c
  4549  01142C  0E0B               	movlw	11
  4550  01142E  6EE6               	movwf	postinc1,c
  4551  011430  0E07               	movlw	7
  4552  011432  6EE6               	movwf	postinc1,c
  4553  011434  EC00  F0E0         	call	_StartTimer	;wreg free
  4554                           
  4555                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4556  011438  0EDC               	movlw	220
  4557  01143A  6EE6               	movwf	postinc1,c
  4558  01143C  0E05               	movlw	5
  4559  01143E  6EE6               	movwf	postinc1,c
  4560  011440  0E0B               	movlw	11
  4561  011442  6EE6               	movwf	postinc1,c
  4562  011444  EC00  F0E0         	call	_StartTimer	;wreg free
  4563                           
  4564                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4565  011448  0EB8               	movlw	184
  4566  01144A  6EE6               	movwf	postinc1,c
  4567  01144C  0E0B               	movlw	11
  4568  01144E  6EE6               	movwf	postinc1,c
  4569  011450  0E09               	movlw	9
  4570  011452  6EE6               	movwf	postinc1,c
  4571  011454  EC00  F0E0         	call	_StartTimer	;wreg free
  4572                           
  4573                           ;main.c: 258:    start_adc_scan();
  4574  011458  EC99  F0DC         	call	_start_adc_scan	;wreg free
  4575                           
  4576                           ;main.c: 259:    start_switch_handler();
  4577  01145C  EC0D  F0E4         	call	_start_switch_handler	;wreg free
  4578                           
  4579                           ; BSR set to: 57
  4580                           ;main.c: 260:    WaitMs(1000);
  4581  011460  0EE8               	movlw	232
  4582  011462  6EE6               	movwf	postinc1,c
  4583  011464  0E03               	movlw	3
  4584  011466  6EE6               	movwf	postinc1,c
  4585  011468  ECEF  F0E0         	call	_WaitMs	;wreg free
  4586                           
  4587                           ;main.c: 265:    i_ror = 1;
  4588                           ;stkvar	_i_ror @ sp[(-17)+16]
  4589  01146C  0EFF               	movlw	-1
  4590  01146E  6AE3               	clrf	plusw1,c
  4591  011470  2AE3               	incf	plusw1,f,c
  4592  011472                     l13775:
  4593                           
  4594                           ;main.c: 267:     calc_ror_data();
  4595  011472  EC4A  F0C8         	call	_calc_ror_data	;wreg free
  4596                           
  4597                           ;main.c: 268:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4598  011476  0E00               	movlw	0
  4599  011478  6EE6               	movwf	postinc1,c
  4600  01147A  0E04               	movlw	4
  4601  01147C  6EE6               	movwf	postinc1,c
  4602  01147E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  4603  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4604  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4605  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4606  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4607  01149A  0E4C               	movlw	low STR_8
  4608  01149C  6EE6               	movwf	postinc1,c
  4609  01149E  0EFE               	movlw	high STR_8
  4610  0114A0  6EE6               	movwf	postinc1,c
  4611  0114A2  0E00               	movlw	0
  4612  0114A4  6EE6               	movwf	postinc1,c
  4613  0114A6  0E01               	movlw	1
  4614  0114A8  6EE6               	movwf	postinc1,c
  4615  0114AA  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4616  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4617  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4618  0114BA  0E08               	movlw	8
  4619  0114BC  6EE6               	movwf	postinc1,c
  4620  0114BE  ECC0  F0D1         	call	_sprintf	;wreg free
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4624  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4625  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4626  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4627  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4628  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4629                           
  4630                           ;stkvar	_i_ror @ sp[(-21)+16]
  4631  0114DE  0EFB               	movlw	-5
  4632  0114E0  50E3               	movf	plusw1,w,c
  4633  0114E2  6EE6               	movwf	postinc1,c
  4634  0114E4  0E00               	movlw	0
  4635  0114E6  6EE6               	movwf	postinc1,c
  4636  0114E8  0E00               	movlw	0
  4637  0114EA  6EE6               	movwf	postinc1,c
  4638  0114EC  0E05               	movlw	5
  4639  0114EE  6EE6               	movwf	postinc1,c
  4640  0114F0  EC45  F0D2         	call	_spinners	;wreg free
  4641  0114F4  5001               	movf	btemp^0,w,c
  4642  0114F6  6EE6               	movwf	postinc1,c
  4643  0114F8  0E00               	movlw	0
  4644  0114FA  6EE6               	movwf	postinc1,c
  4645  0114FC  0EF3               	movlw	low STR_9
  4646  0114FE  6EE6               	movwf	postinc1,c
  4647  011500  0EFB               	movlw	high STR_9
  4648  011502  6EE6               	movwf	postinc1,c
  4649  011504  0E00               	movlw	0
  4650  011506  6EE6               	movwf	postinc1,c
  4651  011508  0E02               	movlw	2
  4652  01150A  6EE6               	movwf	postinc1,c
  4653  01150C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4654  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4655  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4656  01151C  0E0C               	movlw	12
  4657  01151E  6EE6               	movwf	postinc1,c
  4658  011520  ECC0  F0D1         	call	_sprintf	;wreg free
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 270:     update_lcd(0);
  4662  011524  0E00               	movlw	0
  4663  011526  6EE6               	movwf	postinc1,c
  4664  011528  EC38  F0D1         	call	_update_lcd	;wreg free
  4665                           
  4666                           ;main.c: 271:     clear_adc_scan();
  4667  01152C  EC53  F0E5         	call	_clear_adc_scan	;wreg free
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;main.c: 272:     start_adc_scan();
  4671  011530  EC99  F0DC         	call	_start_adc_scan	;wreg free
  4672                           
  4673                           ;main.c: 273:     WaitMs(2000);
  4674  011534  0ED0               	movlw	208
  4675  011536  6EE6               	movwf	postinc1,c
  4676  011538  0E07               	movlw	7
  4677  01153A  6EE6               	movwf	postinc1,c
  4678  01153C  ECEF  F0E0         	call	_WaitMs	;wreg free
  4679                           
  4680                           ;main.c: 276:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4681                           ;stkvar	_i_ror @ sp[(-17)+16]
  4682  011540  0EFF               	movlw	-1
  4683  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4684  011548  2A0C               	incf	(btemp+11)^0,f,c
  4685  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4686  011550  060C               	decf	(btemp+11)^0,f,c
  4687  011552  0E1E               	movlw	30
  4688  011554  600C               	cpfslt	(btemp+11)^0,c
  4689  011556  D01A               	goto	u13200
  4690  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4691  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4692  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4693  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4694  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4695  011574  0E42               	movlw	66
  4696  011576  6EE6               	movwf	postinc1,c
  4697  011578  0E60               	movlw	96
  4698  01157A  6EE6               	movwf	postinc1,c
  4699  01157C  0E65               	movlw	101
  4700  01157E  6EE6               	movwf	postinc1,c
  4701  011580  0E3C               	movlw	60
  4702  011582  6EE6               	movwf	postinc1,c
  4703  011584  EC86  F0CA         	call	___flge	;wreg free
  4704  011588  A001               	btfss	btemp& (0+255),0,c
  4705  01158A  D773               	goto	l13775
  4706  01158C                     u13200:
  4707                           
  4708                           ;main.c: 278:    static_soc();
  4709  01158C  EC5D  F0DD         	call	_static_soc	;wreg free
  4710                           
  4711                           ;main.c: 279:    init_bsoc();
  4712  011590  EC65  F0BF         	call	_init_bsoc	;wreg free
  4713                           
  4714                           ;main.c: 280:    set_load_relay_one(0);
  4715  011594  0E00               	movlw	0
  4716  011596  6EE6               	movwf	postinc1,c
  4717  011598  ECE7  F0E4         	call	_set_load_relay_one	;wreg free
  4718                           
  4719                           ;main.c: 281:    set_load_relay_two(0);
  4720  01159C  0E00               	movlw	0
  4721  01159E  6EE6               	movwf	postinc1,c
  4722  0115A0  ECDF  F0E4         	call	_set_load_relay_two	;wreg free
  4723                           
  4724                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4725  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4726  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4727  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4728  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4729  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4730  0115C0  0EAE               	movlw	low STR_10
  4731  0115C2  6EE6               	movwf	postinc1,c
  4732  0115C4  0EFC               	movlw	high STR_10
  4733  0115C6  6EE6               	movwf	postinc1,c
  4734  0115C8  0E00               	movlw	0
  4735  0115CA  6EE6               	movwf	postinc1,c
  4736  0115CC  0E00               	movlw	0
  4737  0115CE  6EE6               	movwf	postinc1,c
  4738  0115D0  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4739  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4740  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4741  0115E0  0E06               	movlw	6
  4742  0115E2  6EE6               	movwf	postinc1,c
  4743  0115E4  ECC0  F0D1         	call	_sprintf	;wreg free
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4747  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4748  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4751  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4752  011604  0E8A               	movlw	low STR_11
  4753  011606  6EE6               	movwf	postinc1,c
  4754  011608  0EFD               	movlw	high STR_11
  4755  01160A  6EE6               	movwf	postinc1,c
  4756  01160C  0E00               	movlw	0
  4757  01160E  6EE6               	movwf	postinc1,c
  4758  011610  0E01               	movlw	1
  4759  011612  6EE6               	movwf	postinc1,c
  4760  011614  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4761  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4762  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4763  011624  0E08               	movlw	8
  4764  011626  6EE6               	movwf	postinc1,c
  4765  011628  ECC0  F0D1         	call	_sprintf	;wreg free
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;main.c: 284:    update_lcd(0);
  4769  01162C  0E00               	movlw	0
  4770  01162E  6EE6               	movwf	postinc1,c
  4771  011630  EC38  F0D1         	call	_update_lcd	;wreg free
  4772                           
  4773                           ;main.c: 285:    WaitMs(2000);
  4774  011634  0ED0               	movlw	208
  4775  011636  6EE6               	movwf	postinc1,c
  4776  011638  0E07               	movlw	7
  4777  01163A  6EE6               	movwf	postinc1,c
  4778  01163C  ECEF  F0E0         	call	_WaitMs	;wreg free
  4779                           
  4780                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4781  011640  0E76               	movlw	low STR_12
  4782  011642  6EE6               	movwf	postinc1,c
  4783  011644  0EFE               	movlw	high STR_12
  4784  011646  6EE6               	movwf	postinc1,c
  4785  011648  0E00               	movlw	0
  4786  01164A  6EE6               	movwf	postinc1,c
  4787  01164C  0E00               	movlw	0
  4788  01164E  6EE6               	movwf	postinc1,c
  4789  011650  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4790  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4791  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4792  011660  0E04               	movlw	4
  4793  011662  6EE6               	movwf	postinc1,c
  4794  011664  ECC0  F0D1         	call	_sprintf	;wreg free
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4798  011668  0E8B               	movlw	low STR_13
  4799  01166A  6EE6               	movwf	postinc1,c
  4800  01166C  0EFE               	movlw	high STR_13
  4801  01166E  6EE6               	movwf	postinc1,c
  4802  011670  0E00               	movlw	0
  4803  011672  6EE6               	movwf	postinc1,c
  4804  011674  0E01               	movlw	1
  4805  011676  6EE6               	movwf	postinc1,c
  4806  011678  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4807  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4808  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4809  011688  0E04               	movlw	4
  4810  01168A  6EE6               	movwf	postinc1,c
  4811  01168C  ECC0  F0D1         	call	_sprintf	;wreg free
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4815  011690  0E33               	movlw	low STR_14
  4816  011692  6EE6               	movwf	postinc1,c
  4817  011694  0EFF               	movlw	high STR_14
  4818  011696  6EE6               	movwf	postinc1,c
  4819  011698  0E00               	movlw	0
  4820  01169A  6EE6               	movwf	postinc1,c
  4821  01169C  0E02               	movlw	2
  4822  01169E  6EE6               	movwf	postinc1,c
  4823  0116A0  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4824  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4825  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4826  0116B0  0E04               	movlw	4
  4827  0116B2  6EE6               	movwf	postinc1,c
  4828  0116B4  ECC0  F0D1         	call	_sprintf	;wreg free
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;main.c: 289:    update_lcd(0);
  4832  0116B8  0E00               	movlw	0
  4833  0116BA  6EE6               	movwf	postinc1,c
  4834  0116BC  EC38  F0D1         	call	_update_lcd	;wreg free
  4835                           
  4836                           ;main.c: 290:    uint16_t i_esr = 1;
  4837  0116C0  0E01               	movlw	1
  4838  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4839  0116C4  0E00               	movlw	0
  4840  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4841                           
  4842                           ;stkvar	_i_esr @ sp[(-17)+8]
  4843  0116C8  0EF7               	movlw	-9
  4844  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4845  0116D0  0EF8               	movlw	-8
  4846  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4847                           
  4848                           ;main.c: 292:    float esr_temp;;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4849  0116D8  D06D               	goto	l13833
  4850  0116DA                     l13821:
  4851                           
  4852                           ;main.c: 294:     WaitMs(110);
  4853  0116DA  0E6E               	movlw	110
  4854  0116DC  6EE6               	movwf	postinc1,c
  4855  0116DE  0E00               	movlw	0
  4856  0116E0  6EE6               	movwf	postinc1,c
  4857  0116E2  ECEF  F0E0         	call	_WaitMs	;wreg free
  4858                           
  4859                           ;main.c: 295:     shape = (uint8_t) fabsf(esr_temp);
  4860                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4861  0116E6  0EF3               	movlw	-13
  4862  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4863  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4864  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4865  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4866  011700  ECC2  F0D6         	call	_fabsf	;wreg free
  4867  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4868  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4869  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4870  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4871  01171C  ECCD  F0C9         	call	___fltol	;wreg free
  4872  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4873                           
  4874                           ;stkvar	_shape @ sp[(-17)+10]
  4875  011726  0EF9               	movlw	-7
  4876  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4877                           
  4878                           ;main.c: 296:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4879  01172E  0E00               	movlw	0
  4880  011730  6EE6               	movwf	postinc1,c
  4881                           
  4882                           ;stkvar	_shape @ sp[(-18)+10]
  4883  011732  0EF8               	movlw	-8
  4884  011734  50E3               	movf	plusw1,w,c
  4885  011736  6EE6               	movwf	postinc1,c
  4886  011738  EC45  F0D2         	call	_spinners	;wreg free
  4887  01173C  5001               	movf	btemp^0,w,c
  4888  01173E  6EE6               	movwf	postinc1,c
  4889  011740  0E00               	movlw	0
  4890  011742  6EE6               	movwf	postinc1,c
  4891  011744  0E00               	movlw	0
  4892  011746  6EE6               	movwf	postinc1,c
  4893  011748  0E00               	movlw	0
  4894  01174A  6EE6               	movwf	postinc1,c
  4895  01174C  EC45  F0D2         	call	_spinners	;wreg free
  4896  011750  5001               	movf	btemp^0,w,c
  4897  011752  6EE6               	movwf	postinc1,c
  4898  011754  0E00               	movlw	0
  4899  011756  6EE6               	movwf	postinc1,c
  4900  011758  0E1E               	movlw	low STR_15
  4901  01175A  6EE6               	movwf	postinc1,c
  4902  01175C  0EFF               	movlw	high STR_15
  4903  01175E  6EE6               	movwf	postinc1,c
  4904  011760  0E00               	movlw	0
  4905  011762  6EE6               	movwf	postinc1,c
  4906  011764  0E02               	movlw	2
  4907  011766  6EE6               	movwf	postinc1,c
  4908  011768  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4909  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4910  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4911  011778  0E08               	movlw	8
  4912  01177A  6EE6               	movwf	postinc1,c
  4913  01177C  ECC0  F0D1         	call	_sprintf	;wreg free
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;main.c: 297:     update_lcd(0);
  4917  011780  0E00               	movlw	0
  4918  011782  6EE6               	movwf	postinc1,c
  4919  011784  EC38  F0D1         	call	_update_lcd	;wreg free
  4920                           
  4921                           ;main.c: 299:     if (i_esr++ > 512)
  4922                           ;stkvar	_i_esr @ sp[(-17)+8]
  4923  011788  50E1               	movf	fsr1l,w,c
  4924  01178A  0FF7               	addlw	-9
  4925  01178C  6ED9               	movwf	fsr2l,c
  4926  01178E  50E2               	movf	fsr1h,w,c
  4927  011790  6EDA               	movwf	fsr2h,c
  4928  011792  0EFF               	movlw	255
  4929  011794  22DA               	addwfc	fsr2h,f,c
  4930  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4931  01179C  0E01               	movlw	1
  4932  01179E  26DE               	addwf	postinc2,f,c
  4933  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4934  0117A6  0E00               	movlw	0
  4935  0117A8  22DD               	addwfc	postdec2,f,c
  4936  0117AA  040B               	decf	(btemp+10)^0,w,c
  4937  0117AC  0E02               	movlw	2
  4938  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4939  0117B0  B0D8               	btfsc	status,0,c
  4940  0117B2  D017               	goto	u13220
  4941  0117B4                     l13833:
  4942                           
  4943                           ;main.c: 293:    while ((esr_temp = esr_check(0)) < 0.0) {
  4944  0117B4  0E00               	movlw	0
  4945  0117B6  6EE6               	movwf	postinc1,c
  4946  0117B8  ECD3  F0B8         	call	_esr_check	;wreg free
  4947                           
  4948                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4949  0117BC  0EF3               	movlw	-13
  4950  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4951  0117C4  0EF4               	movlw	-12
  4952  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4953  0117CC  0EF5               	movlw	-11
  4954  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4955  0117D4  0EF6               	movlw	-10
  4956  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  4957  0117DC  0EF6               	movlw	-10
  4958  0117DE  BEE3               	btfsc	plusw1,7,c
  4959  0117E0  D77C               	goto	l13821
  4960  0117E2                     u13220:
  4961                           
  4962                           ;main.c: 302:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4963  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  4964  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4965  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4966  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4967  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4968  0117FE  0E98               	movlw	low STR_16
  4969  011800  6EE6               	movwf	postinc1,c
  4970  011802  0EFC               	movlw	high STR_16
  4971  011804  6EE6               	movwf	postinc1,c
  4972  011806  0E00               	movlw	0
  4973  011808  6EE6               	movwf	postinc1,c
  4974  01180A  0E00               	movlw	0
  4975  01180C  6EE6               	movwf	postinc1,c
  4976  01180E  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  4977  011812  0060  F007  FFE6   	movff	btemp,postinc1
  4978  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4979  01181E  0E08               	movlw	8
  4980  011820  6EE6               	movwf	postinc1,c
  4981  011822  ECC0  F0D1         	call	_sprintf	;wreg free
  4982                           
  4983                           ;main.c: 303:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4984  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  4985  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  4986  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  4990  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  4991  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  4992  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  4993  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  4994  01185E  0EBF               	movlw	low STR_17
  4995  011860  6EE6               	movwf	postinc1,c
  4996  011862  0EFB               	movlw	high STR_17
  4997  011864  6EE6               	movwf	postinc1,c
  4998  011866  0E00               	movlw	0
  4999  011868  6EE6               	movwf	postinc1,c
  5000  01186A  0E01               	movlw	1
  5001  01186C  6EE6               	movwf	postinc1,c
  5002  01186E  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5003  011872  0060  F007  FFE6   	movff	btemp,postinc1
  5004  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5005  01187E  0E0C               	movlw	12
  5006  011880  6EE6               	movwf	postinc1,c
  5007  011882  ECC0  F0D1         	call	_sprintf	;wreg free
  5008                           
  5009                           ;main.c: 304:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5010  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  5011  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  5012  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  5013  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  5014  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  5016  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5018  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5019  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5020  0118BE  0ED9               	movlw	low STR_18
  5021  0118C0  6EE6               	movwf	postinc1,c
  5022  0118C2  0EFB               	movlw	high STR_18
  5023  0118C4  6EE6               	movwf	postinc1,c
  5024  0118C6  0E00               	movlw	0
  5025  0118C8  6EE6               	movwf	postinc1,c
  5026  0118CA  0E02               	movlw	2
  5027  0118CC  6EE6               	movwf	postinc1,c
  5028  0118CE  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5029  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  5030  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5031  0118DE  0E0C               	movlw	12
  5032  0118E0  6EE6               	movwf	postinc1,c
  5033  0118E2  ECC0  F0D1         	call	_sprintf	;wreg free
  5034                           
  5035                           ;main.c: 305:    update_lcd(0);
  5036  0118E6  0E00               	movlw	0
  5037  0118E8  6EE6               	movwf	postinc1,c
  5038  0118EA  EC38  F0D1         	call	_update_lcd	;wreg free
  5039                           
  5040                           ;main.c: 306:    WaitMs(4000);
  5041  0118EE  0EA0               	movlw	160
  5042  0118F0  6EE6               	movwf	postinc1,c
  5043  0118F2  0E0F               	movlw	15
  5044  0118F4  6EE6               	movwf	postinc1,c
  5045  0118F6  ECEF  F0E0         	call	_WaitMs	;wreg free
  5046                           
  5047                           ;main.c: 307:    V.sensor_set = get_switch(SCALIB);
  5048  0118FA  0E04               	movlw	4
  5049  0118FC  6EE6               	movwf	postinc1,c
  5050  0118FE  ECE9  F0E1         	call	_get_switch	;wreg free
  5051  011902  5001               	movf	btemp^0,w,c
  5052  011904  B4D8               	btfsc	status,2,c
  5053  011906  D002               	goto	u13230
  5054  011908  0E01               	movlw	1
  5055  01190A  D001               	goto	u13240
  5056  01190C                     u13230:
  5057  01190C  0E00               	movlw	0
  5058  01190E                     u13240:
  5059  01190E  0101               	movlb	1	; () banked
  5060  011910  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5061                           
  5062                           ; BSR set to: 1
  5063                           ;main.c: 308:    WaitMs(1000);
  5064  011912  0EE8               	movlw	232
  5065  011914  6EE6               	movwf	postinc1,c
  5066  011916  0E03               	movlw	3
  5067  011918  6EE6               	movwf	postinc1,c
  5068  01191A  ECEF  F0E0         	call	_WaitMs	;wreg free
  5069                           
  5070                           ;main.c: 309:    if (V.sensor_set && get_switch(SCALIB)) {
  5071  01191E  0101               	movlb	1	; () banked
  5072  011920  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5073  011922  B4D8               	btfsc	status,2,c
  5074  011924  D00F               	goto	l13851
  5075                           
  5076                           ; BSR set to: 1
  5077  011926  0E04               	movlw	4
  5078  011928  6EE6               	movwf	postinc1,c
  5079  01192A  ECE9  F0E1         	call	_get_switch	;wreg free
  5080  01192E  5001               	movf	btemp^0,w,c
  5081  011930  B4D8               	btfsc	status,2,c
  5082  011932  D008               	goto	l13851
  5083                           
  5084                           ;main.c: 310:     current_sensor_cal();
  5085  011934  EC9E  F0BB         	call	_current_sensor_cal	;wreg free
  5086                           
  5087                           ;main.c: 311:     WaitMs(4000);
  5088  011938  0EA0               	movlw	160
  5089  01193A  6EE6               	movwf	postinc1,c
  5090  01193C  0E0F               	movlw	15
  5091  01193E  6EE6               	movwf	postinc1,c
  5092  011940  ECEF  F0E0         	call	_WaitMs	;wreg free
  5093  011944                     l13851:
  5094                           
  5095                           ;main.c: 313:    V.sensor_set = 0;
  5096  011944  0101               	movlb	1	; () banked
  5097  011946  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5098                           
  5099                           ; BSR set to: 1
  5100                           ;main.c: 314:    V.system_stable = 1;
  5101  011948  0E01               	movlw	1
  5102  01194A  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5103                           
  5104                           ;main.c: 315:    break;
  5105  01194C  D01B               	goto	l13859
  5106  01194E                     l1353:
  5107                           
  5108                           ; BSR set to: 1
  5109                           ;main.c: 321:    P.SYSTEM_STABLE = 1;
  5110  01194E  81F3               	bsf	(_P+1)& (0+255),0,b	;volatile
  5111                           
  5112                           ;main.c: 322:    break;
  5113  011950  D019               	goto	l13859
  5114  011952                     l1355:
  5115                           
  5116                           ; BSR set to: 1
  5117                           ;main.c: 325:    V.ui_state = UI_STATE_INIT;
  5118  011952  6B07               	clrf	_V& (0+255),b	;volatile
  5119                           
  5120                           ;main.c: 326:    break;
  5121  011954  D017               	goto	l13859
  5122  011956                     l13857:
  5123  011956  0101               	movlb	1	; () banked
  5124  011958  5107               	movf	_V& (0+255),w,b	;volatile
  5125  01195A  6E0B               	movwf	(btemp+10)^0,c
  5126  01195C  6A0C               	clrf	(btemp+11)^0,c
  5127                           
  5128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5129                           ; Switch size 1, requested type "simple"
  5130                           ; Number of cases is 1, Range of values is 0 to 0
  5131                           ; switch strategies available:
  5132                           ; Name         Instructions Cycles
  5133                           ; simple_byte            4     3 (average)
  5134                           ;	Chosen strategy is simple_byte
  5135  01195E  500C               	movf	(btemp+11)^0,w,c
  5136  011960  0A00               	xorlw	0	; case 0
  5137  011962  A4D8               	btfss	status,2,c
  5138  011964  D7F6               	goto	l1355
  5139                           
  5140                           ; BSR set to: 1
  5141                           ; Switch size 1, requested type "simple"
  5142                           ; Number of cases is 5, Range of values is 0 to 5
  5143                           ; switch strategies available:
  5144                           ; Name         Instructions Cycles
  5145                           ; simple_byte           16     9 (average)
  5146                           ;	Chosen strategy is simple_byte
  5147  011966  500B               	movf	(btemp+10)^0,w,c
  5148  011968  0A00               	xorlw	0	; case 0
  5149  01196A  B4D8               	btfsc	status,2,c
  5150  01196C  D4A7               	goto	l13723
  5151  01196E  0A01               	xorlw	1	; case 1
  5152  011970  B4D8               	btfsc	status,2,c
  5153  011972  D008               	goto	l13859
  5154  011974  0A02               	xorlw	2	; case 3
  5155  011976  B4D8               	btfsc	status,2,c
  5156  011978  D005               	goto	l13859
  5157  01197A  0A07               	xorlw	7	; case 4
  5158  01197C  B4D8               	btfsc	status,2,c
  5159  01197E  D7E7               	goto	l1353
  5160  011980  0A01               	xorlw	1	; case 5
  5161  011982  D7E7               	goto	l1355
  5162  011984                     l13859:
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;main.c: 329:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5166  011984  0E01               	movlw	1
  5167  011986  6EE6               	movwf	postinc1,c
  5168  011988  EC55  F0E2         	call	_TimerDone	;wreg free
  5169  01198C  5001               	movf	btemp^0,w,c
  5170  01198E  B4D8               	btfsc	status,2,c
  5171  011990  D013               	goto	l13871
  5172  011992  EC43  F0E5         	call	_check_adc_scan	;wreg free
  5173  011996  5001               	movf	btemp^0,w,c
  5174  011998  B4D8               	btfsc	status,2,c
  5175  01199A  D00E               	goto	l13871
  5176                           
  5177                           ;main.c: 333:    convert_adc_data();
  5178  01199C  EC0B  F0D6         	call	_convert_adc_data	;wreg free
  5179                           
  5180                           ;main.c: 337:    clear_adc_scan();
  5181  0119A0  EC53  F0E5         	call	_clear_adc_scan	;wreg free
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;main.c: 338:    start_adc_scan();
  5185  0119A4  EC99  F0DC         	call	_start_adc_scan	;wreg free
  5186                           
  5187                           ;main.c: 339:    StartTimer(TMR_ADC, 200);
  5188  0119A8  0EC8               	movlw	200
  5189  0119AA  6EE6               	movwf	postinc1,c
  5190  0119AC  0E00               	movlw	0
  5191  0119AE  6EE6               	movwf	postinc1,c
  5192  0119B0  0E01               	movlw	1
  5193  0119B2  6EE6               	movwf	postinc1,c
  5194  0119B4  EC00  F0E0         	call	_StartTimer	;wreg free
  5195  0119B8                     l13871:
  5196                           
  5197                           ;main.c: 346:   if (TimerDone(TMR_DISPLAY)) {
  5198                           
  5199                           ;main.c: 342:   if (V.ticks) {
  5200  0119B8  0E0A               	movlw	10
  5201  0119BA  6EE6               	movwf	postinc1,c
  5202  0119BC  EC55  F0E2         	call	_TimerDone	;wreg free
  5203  0119C0  5001               	movf	btemp^0,w,c
  5204  0119C2  B4D8               	btfsc	status,2,c
  5205  0119C4  EF88  F091         	goto	l13955
  5206                           
  5207                           ;main.c: 347:    if (TimerDone(TMR_HELPDIS)) {
  5208  0119C8  0E09               	movlw	9
  5209  0119CA  6EE6               	movwf	postinc1,c
  5210  0119CC  EC55  F0E2         	call	_TimerDone	;wreg free
  5211  0119D0  5001               	movf	btemp^0,w,c
  5212  0119D2  B4D8               	btfsc	status,2,c
  5213  0119D4  D004               	goto	l13879
  5214                           
  5215                           ;main.c: 348:     set_display_info(DIS_STR);
  5216  0119D6  0E00               	movlw	0
  5217  0119D8  6EE6               	movwf	postinc1,c
  5218  0119DA  EC5A  F0E4         	call	_set_display_info	;wreg free
  5219  0119DE                     l13879:
  5220                           
  5221                           ;main.c: 350:    calc_model_data();
  5222  0119DE  EC6E  F0AE         	call	_calc_model_data	;wreg free
  5223                           
  5224                           ; BSR set to: 57
  5225                           ;main.c: 357:     hid_display(&H);
  5226                           
  5227                           ;main.c: 352:    if (0) {
  5228  0119E2  0EC7               	movlw	low _H
  5229  0119E4  6EE6               	movwf	postinc1,c
  5230  0119E6  0E01               	movlw	high _H
  5231  0119E8  6EE6               	movwf	postinc1,c
  5232  0119EA  ECB8  F0C2         	call	_hid_display	;wreg free
  5233                           
  5234                           ;main.c: 358:     switch (H.hid_display) {
  5235  0119EE  EF1E  F091         	goto	l13927
  5236  0119F2                     l1363:
  5237                           
  5238                           ; BSR set to: 1
  5239                           ;main.c: 360:      V.calib = 0;
  5240  0119F2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5241                           
  5242                           ; BSR set to: 1
  5243                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5244  0119F4  EE22  F021         	lfsr	2,_C+290	;volatile
  5245  0119F8  50DF               	movf	indf2,w,c
  5246  0119FA  A4D8               	btfss	status,2,c
  5247  0119FC  D002               	goto	l13889
  5248                           
  5249                           ; BSR set to: 1
  5250  0119FE  0E20               	movlw	32
  5251  011A00  D001               	goto	L1
  5252  011A02                     l13889:
  5253                           
  5254                           ; BSR set to: 1
  5255  011A02  0E44               	movlw	68
  5256  011A04                     L1:
  5257  011A04  6E0B               	movwf	(btemp+10)^0,c
  5258  011A06  0E00               	movlw	0
  5259  011A08  6E0C               	movwf	(btemp+11)^0,c
  5260                           
  5261                           ;stkvar	_main$3786 @ sp[(-17)+2]
  5262  011A0A  0EF1               	movlw	-15
  5263  011A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5264  011A12  0EF2               	movlw	-14
  5265  011A14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5266                           
  5267                           ; BSR set to: 1
  5268  011A1A  EE21  F37B         	lfsr	2,_C+124	;volatile
  5269  011A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5271  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5272  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5273                           
  5274                           ;stkvar	_main$3786 @ sp[(-21)+2]
  5275  011A36  0EED               	movlw	-19
  5276  011A38  006F FF8F FFE6     	movff	plusw1,postinc1
  5277  011A3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5278  011A44  0E74               	movlw	low STR_22
  5279  011A46  6EE6               	movwf	postinc1,c
  5280  011A48  0EFD               	movlw	high STR_22
  5281  011A4A  6EE6               	movwf	postinc1,c
  5282  011A4C  0E00               	movlw	0
  5283  011A4E  6EE6               	movwf	postinc1,c
  5284  011A50  0E00               	movlw	0
  5285  011A52  6EE6               	movwf	postinc1,c
  5286  011A54  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5287  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  5288  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5289  011A64  0E0A               	movlw	10
  5290  011A66  6EE6               	movwf	postinc1,c
  5291  011A68  ECC0  F0D1         	call	_sprintf	;wreg free
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5295  011A6C  EE21  F373         	lfsr	2,_C+116	;volatile
  5296  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011A88  0E5E               	movlw	low STR_23
  5301  011A8A  6EE6               	movwf	postinc1,c
  5302  011A8C  0EFD               	movlw	high STR_23
  5303  011A8E  6EE6               	movwf	postinc1,c
  5304  011A90  0E00               	movlw	0
  5305  011A92  6EE6               	movwf	postinc1,c
  5306  011A94  0E01               	movlw	1
  5307  011A96  6EE6               	movwf	postinc1,c
  5308  011A98  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5309  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5310  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5311  011AA8  0E08               	movlw	8
  5312  011AAA  6EE6               	movwf	postinc1,c
  5313  011AAC  ECC0  F0D1         	call	_sprintf	;wreg free
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5317  011AB0  EE21  F377         	lfsr	2,_C+120	;volatile
  5318  011AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5320  011AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011ACC  0E48               	movlw	low STR_24
  5323  011ACE  6EE6               	movwf	postinc1,c
  5324  011AD0  0EFD               	movlw	high STR_24
  5325  011AD2  6EE6               	movwf	postinc1,c
  5326  011AD4  0E00               	movlw	0
  5327  011AD6  6EE6               	movwf	postinc1,c
  5328  011AD8  0E02               	movlw	2
  5329  011ADA  6EE6               	movwf	postinc1,c
  5330  011ADC  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5331  011AE0  0060  F007  FFE6   	movff	btemp,postinc1
  5332  011AE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5333  011AEC  0E08               	movlw	8
  5334  011AEE  6EE6               	movwf	postinc1,c
  5335  011AF0  ECC0  F0D1         	call	_sprintf	;wreg free
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5339  011AF4  EE22  F021         	lfsr	2,_C+290	;volatile
  5340  011AF8  50DF               	movf	indf2,w,c
  5341  011AFA  A4D8               	btfss	status,2,c
  5342  011AFC  D002               	goto	l13901
  5343                           
  5344                           ; BSR set to: 0
  5345  011AFE  0E20               	movlw	32
  5346  011B00  D001               	goto	L2
  5347  011B02                     l13901:
  5348                           
  5349                           ; BSR set to: 0
  5350  011B02  0E44               	movlw	68
  5351  011B04                     L2:
  5352  011B04  6E0B               	movwf	(btemp+10)^0,c
  5353  011B06  0E00               	movlw	0
  5354  011B08  6E0C               	movwf	(btemp+11)^0,c
  5355                           
  5356                           ;stkvar	_main$3790 @ sp[(-17)+0]
  5357  011B0A  0EEF               	movlw	-17
  5358  011B0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5359  011B12  0EF0               	movlw	-16
  5360  011B14  0060  F033  FFE3   	movff	btemp+11,plusw1
  5361                           
  5362                           ; BSR set to: 0
  5363  011B1A  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5364  011B1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5368                           
  5369                           ;stkvar	_main$3790 @ sp[(-21)+0]
  5370  011B36  0EEB               	movlw	-21
  5371  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
  5372  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  5373  011B44  0E32               	movlw	low STR_25
  5374  011B46  6EE6               	movwf	postinc1,c
  5375  011B48  0EFD               	movlw	high STR_25
  5376  011B4A  6EE6               	movwf	postinc1,c
  5377  011B4C  0E01               	movlw	1
  5378  011B4E  6EE6               	movwf	postinc1,c
  5379  011B50  0E00               	movlw	0
  5380  011B52  6EE6               	movwf	postinc1,c
  5381  011B54  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5382  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5383  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5384  011B64  0E0A               	movlw	10
  5385  011B66  6EE6               	movwf	postinc1,c
  5386  011B68  ECC0  F0D1         	call	_sprintf	;wreg free
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5390  011B6C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5391  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5395  011B88  0E1C               	movlw	low STR_26
  5396  011B8A  6EE6               	movwf	postinc1,c
  5397  011B8C  0EFD               	movlw	high STR_26
  5398  011B8E  6EE6               	movwf	postinc1,c
  5399  011B90  0E01               	movlw	1
  5400  011B92  6EE6               	movwf	postinc1,c
  5401  011B94  0E01               	movlw	1
  5402  011B96  6EE6               	movwf	postinc1,c
  5403  011B98  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5404  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5405  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5406  011BA8  0E08               	movlw	8
  5407  011BAA  6EE6               	movwf	postinc1,c
  5408  011BAC  ECC0  F0D1         	call	_sprintf	;wreg free
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5412  011BB0  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5413  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5416  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  011BCC  0E06               	movlw	low STR_27
  5418  011BCE  6EE6               	movwf	postinc1,c
  5419  011BD0  0EFD               	movlw	high STR_27
  5420  011BD2  6EE6               	movwf	postinc1,c
  5421  011BD4  0E01               	movlw	1
  5422  011BD6  6EE6               	movwf	postinc1,c
  5423  011BD8  0E02               	movlw	2
  5424  011BDA  6EE6               	movwf	postinc1,c
  5425  011BDC  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5426  011BE0  0060  F007  FFE6   	movff	btemp,postinc1
  5427  011BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5428  011BEC  0E08               	movlw	8
  5429  011BEE  6EE6               	movwf	postinc1,c
  5430  011BF0  ECC0  F0D1         	call	_sprintf	;wreg free
  5431                           
  5432                           ;main.c: 368:      break;
  5433  011BF4  D339               	goto	l13929
  5434  011BF6                     l1373:
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;main.c: 370:      V.calib = 0;
  5438  011BF6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5439                           
  5440                           ; BSR set to: 1
  5441                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5442  011BF8  EE21  F303         	lfsr	2,_C+4	;volatile
  5443  011BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5444  011C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5445  011C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5446  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5447  011C14  EE21  F313         	lfsr	2,_C+20	;volatile
  5448  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5449  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011C30  0ECC               	movlw	low STR_28
  5453  011C32  6EE6               	movwf	postinc1,c
  5454  011C34  0EFD               	movlw	high STR_28
  5455  011C36  6EE6               	movwf	postinc1,c
  5456  011C38  0E00               	movlw	0
  5457  011C3A  6EE6               	movwf	postinc1,c
  5458  011C3C  0E00               	movlw	0
  5459  011C3E  6EE6               	movwf	postinc1,c
  5460  011C40  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5461  011C44  0060  F007  FFE6   	movff	btemp,postinc1
  5462  011C4A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5463  011C50  0E0C               	movlw	12
  5464  011C52  6EE6               	movwf	postinc1,c
  5465  011C54  ECC0  F0D1         	call	_sprintf	;wreg free
  5466                           
  5467                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5468  011C58  EE21  F2FF         	lfsr	2,_C
  5469  011C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  011C74  EE21  F30F         	lfsr	2,_C+16	;volatile
  5474  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5475  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  011C84  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  011C90  0EA0               	movlw	low STR_29
  5479  011C92  6EE6               	movwf	postinc1,c
  5480  011C94  0EFD               	movlw	high STR_29
  5481  011C96  6EE6               	movwf	postinc1,c
  5482  011C98  0E00               	movlw	0
  5483  011C9A  6EE6               	movwf	postinc1,c
  5484  011C9C  0E01               	movlw	1
  5485  011C9E  6EE6               	movwf	postinc1,c
  5486  011CA0  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5487  011CA4  0060  F007  FFE6   	movff	btemp,postinc1
  5488  011CAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5489  011CB0  0E0C               	movlw	12
  5490  011CB2  6EE6               	movwf	postinc1,c
  5491  011CB4  ECC0  F0D1         	call	_sprintf	;wreg free
  5492                           
  5493                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5494  011CB8  EE21  F33F         	lfsr	2,_C+64	;volatile
  5495  011CBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5496  011CC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5497  011CC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5499  011CD4  EE21  F307         	lfsr	2,_C+8	;volatile
  5500  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5501  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5502  011CE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5503  011CEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5504  011CF0  0EB6               	movlw	low STR_30
  5505  011CF2  6EE6               	movwf	postinc1,c
  5506  011CF4  0EFD               	movlw	high STR_30
  5507  011CF6  6EE6               	movwf	postinc1,c
  5508  011CF8  0E00               	movlw	0
  5509  011CFA  6EE6               	movwf	postinc1,c
  5510  011CFC  0E02               	movlw	2
  5511  011CFE  6EE6               	movwf	postinc1,c
  5512  011D00  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5513  011D04  0060  F007  FFE6   	movff	btemp,postinc1
  5514  011D0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5515  011D10  0E0C               	movlw	12
  5516  011D12  6EE6               	movwf	postinc1,c
  5517  011D14  ECC0  F0D1         	call	_sprintf	;wreg free
  5518                           
  5519                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5520  011D18  EE21  F39F         	lfsr	2,_C+160	;volatile
  5521  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5522  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5523  011D28  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  011D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  011D34  0EC4               	movlw	low STR_31
  5526  011D36  6EE6               	movwf	postinc1,c
  5527  011D38  0EFC               	movlw	high STR_31
  5528  011D3A  6EE6               	movwf	postinc1,c
  5529  011D3C  0E01               	movlw	1
  5530  011D3E  6EE6               	movwf	postinc1,c
  5531  011D40  0E00               	movlw	0
  5532  011D42  6EE6               	movwf	postinc1,c
  5533  011D44  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5534  011D48  0060  F007  FFE6   	movff	btemp,postinc1
  5535  011D4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5536  011D54  0E08               	movlw	8
  5537  011D56  6EE6               	movwf	postinc1,c
  5538  011D58  ECC0  F0D1         	call	_sprintf	;wreg free
  5539                           
  5540                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5541  011D5C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5542  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5543  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5544  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5545  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5546  011D78  0EDA               	movlw	low STR_32
  5547  011D7A  6EE6               	movwf	postinc1,c
  5548  011D7C  0EFC               	movlw	high STR_32
  5549  011D7E  6EE6               	movwf	postinc1,c
  5550  011D80  0E01               	movlw	1
  5551  011D82  6EE6               	movwf	postinc1,c
  5552  011D84  0E01               	movlw	1
  5553  011D86  6EE6               	movwf	postinc1,c
  5554  011D88  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5555  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5556  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5557  011D98  0E08               	movlw	8
  5558  011D9A  6EE6               	movwf	postinc1,c
  5559  011D9C  ECC0  F0D1         	call	_sprintf	;wreg free
  5560                           
  5561                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5562  011DA0  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5563  011DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  5564  011DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  5565  011DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5566  011DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5567  011DBC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5568  011DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5569  011DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5570  011DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5571  011DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5572  011DD8  EC35  F0A3         	call	___fladd	;wreg free
  5573  011DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5574  011DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5575  011DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5576  011DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5577  011DF4  0EF0               	movlw	low STR_33
  5578  011DF6  6EE6               	movwf	postinc1,c
  5579  011DF8  0EFC               	movlw	high STR_33
  5580  011DFA  6EE6               	movwf	postinc1,c
  5581  011DFC  0E01               	movlw	1
  5582  011DFE  6EE6               	movwf	postinc1,c
  5583  011E00  0E02               	movlw	2
  5584  011E02  6EE6               	movwf	postinc1,c
  5585  011E04  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5586  011E08  0060  F007  FFE6   	movff	btemp,postinc1
  5587  011E0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5588  011E14  0E08               	movlw	8
  5589  011E16  6EE6               	movwf	postinc1,c
  5590  011E18  ECC0  F0D1         	call	_sprintf	;wreg free
  5591                           
  5592                           ;main.c: 378:      break;
  5593  011E1C  D225               	goto	l13929
  5594  011E1E                     l1374:
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;main.c: 380:      V.calib = 0;
  5598  011E1E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5599                           
  5600                           ; BSR set to: 1
  5601                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5602  011E20  EE21  F37F         	lfsr	2,_C+128	;volatile
  5603  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5604  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5605  011E30  006F FF7B FFE6     	movff	postinc2,postinc1
  5606  011E36  006F FF7B FFE6     	movff	postinc2,postinc1
  5607  011E3C  0E3C               	movlw	low STR_34
  5608  011E3E  6EE6               	movwf	postinc1,c
  5609  011E40  0EFC               	movlw	high STR_34
  5610  011E42  6EE6               	movwf	postinc1,c
  5611  011E44  0E00               	movlw	0
  5612  011E46  6EE6               	movwf	postinc1,c
  5613  011E48  0E00               	movlw	0
  5614  011E4A  6EE6               	movwf	postinc1,c
  5615  011E4C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5616  011E50  0060  F007  FFE6   	movff	btemp,postinc1
  5617  011E56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5618  011E5C  0E08               	movlw	8
  5619  011E5E  6EE6               	movwf	postinc1,c
  5620  011E60  ECC0  F0D1         	call	_sprintf	;wreg free
  5621                           
  5622                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5623  011E64  EE21  F393         	lfsr	2,_C+148	;volatile
  5624  011E68  006F FF7B FFE6     	movff	postinc2,postinc1
  5625  011E6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5626  011E74  006F FF7B FFE6     	movff	postinc2,postinc1
  5627  011E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5628  011E80  EE21  F38F         	lfsr	2,_C+144	;volatile
  5629  011E84  006F FF7B FFE6     	movff	postinc2,postinc1
  5630  011E8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5631  011E90  006F FF7B FFE6     	movff	postinc2,postinc1
  5632  011E96  006F FF7B FFE6     	movff	postinc2,postinc1
  5633  011E9C  0E81               	movlw	low STR_35
  5634  011E9E  6EE6               	movwf	postinc1,c
  5635  011EA0  0EFC               	movlw	high STR_35
  5636  011EA2  6EE6               	movwf	postinc1,c
  5637  011EA4  0E00               	movlw	0
  5638  011EA6  6EE6               	movwf	postinc1,c
  5639  011EA8  0E01               	movlw	1
  5640  011EAA  6EE6               	movwf	postinc1,c
  5641  011EAC  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5642  011EB0  0060  F007  FFE6   	movff	btemp,postinc1
  5643  011EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5644  011EBC  0E0C               	movlw	12
  5645  011EBE  6EE6               	movwf	postinc1,c
  5646  011EC0  ECC0  F0D1         	call	_sprintf	;wreg free
  5647                           
  5648                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5649  011EC4  EE21  F30F         	lfsr	2,_C+16	;volatile
  5650  011EC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5651  011ECE  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  011ED4  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  011EDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  011EE0  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5655  011EE4  006F FF78  F00B    	movff	postinc2,btemp+10
  5656  011EEA  006F FF74  F00C    	movff	postdec2,btemp+11
  5657  011EF0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5658  011EF6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5659  011EFC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5660  011F00  006F FF78  F00B    	movff	postinc2,btemp+10
  5661  011F06  006F FF74  F00C    	movff	postdec2,btemp+11
  5662  011F0C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5663  011F12  0060  F033  FFE6   	movff	btemp+11,postinc1
  5664  011F18  0E00               	movlw	0
  5665  011F1A  6EE6               	movwf	postinc1,c
  5666  011F1C  0E05               	movlw	5
  5667  011F1E  6EE6               	movwf	postinc1,c
  5668  011F20  EC45  F0D2         	call	_spinners	;wreg free
  5669  011F24  5001               	movf	btemp^0,w,c
  5670  011F26  6EE6               	movwf	postinc1,c
  5671  011F28  0E00               	movlw	0
  5672  011F2A  6EE6               	movwf	postinc1,c
  5673  011F2C  0EA2               	movlw	low STR_36
  5674  011F2E  6EE6               	movwf	postinc1,c
  5675  011F30  0EFB               	movlw	high STR_36
  5676  011F32  6EE6               	movwf	postinc1,c
  5677  011F34  0E00               	movlw	0
  5678  011F36  6EE6               	movwf	postinc1,c
  5679  011F38  0E02               	movlw	2
  5680  011F3A  6EE6               	movwf	postinc1,c
  5681  011F3C  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5682  011F40  0060  F007  FFE6   	movff	btemp,postinc1
  5683  011F46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5684  011F4C  0E0E               	movlw	14
  5685  011F4E  6EE6               	movwf	postinc1,c
  5686  011F50  ECC0  F0D1         	call	_sprintf	;wreg free
  5687                           
  5688                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5689  011F54  EE21  F387         	lfsr	2,_C+136	;volatile
  5690  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  011F64  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  011F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5694  011F70  0E25               	movlw	low STR_37
  5695  011F72  6EE6               	movwf	postinc1,c
  5696  011F74  0EFC               	movlw	high STR_37
  5697  011F76  6EE6               	movwf	postinc1,c
  5698  011F78  0E01               	movlw	1
  5699  011F7A  6EE6               	movwf	postinc1,c
  5700  011F7C  0E00               	movlw	0
  5701  011F7E  6EE6               	movwf	postinc1,c
  5702  011F80  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5703  011F84  0060  F007  FFE6   	movff	btemp,postinc1
  5704  011F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5705  011F90  0E08               	movlw	8
  5706  011F92  6EE6               	movwf	postinc1,c
  5707  011F94  ECC0  F0D1         	call	_sprintf	;wreg free
  5708                           
  5709                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5710  011F98  EE22  F00D         	lfsr	2,_C+270	;volatile
  5711  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5712  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5713  011FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5714  011FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5715  011FB4  EE22  F019         	lfsr	2,_C+282	;volatile
  5716  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5717  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5718  011FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5719  011FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5720  011FD0  0E53               	movlw	low STR_38
  5721  011FD2  6EE6               	movwf	postinc1,c
  5722  011FD4  0EFC               	movlw	high STR_38
  5723  011FD6  6EE6               	movwf	postinc1,c
  5724  011FD8  0E01               	movlw	1
  5725  011FDA  6EE6               	movwf	postinc1,c
  5726  011FDC  0E01               	movlw	1
  5727  011FDE  6EE6               	movwf	postinc1,c
  5728  011FE0  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5729  011FE4  0060  F007  FFE6   	movff	btemp,postinc1
  5730  011FEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5731  011FF0  0E0C               	movlw	12
  5732  011FF2  6EE6               	movwf	postinc1,c
  5733  011FF4  ECC0  F0D1         	call	_sprintf	;wreg free
  5734                           
  5735                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5736  011FF8  EE22  F011         	lfsr	2,_C+274	;volatile
  5737  011FFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5738  012002  006F FF7B FFE6     	movff	postinc2,postinc1
  5739  012008  006F FF7B FFE6     	movff	postinc2,postinc1
  5740  01200E  006F FF7B FFE6     	movff	postinc2,postinc1
  5741  012014  EE22  F01D         	lfsr	2,_C+286	;volatile
  5742  012018  006F FF7B FFE6     	movff	postinc2,postinc1
  5743  01201E  006F FF7B FFE6     	movff	postinc2,postinc1
  5744  012024  006F FF7B FFE6     	movff	postinc2,postinc1
  5745  01202A  006F FF7B FFE6     	movff	postinc2,postinc1
  5746  012030  0E6A               	movlw	low STR_39
  5747  012032  6EE6               	movwf	postinc1,c
  5748  012034  0EFC               	movlw	high STR_39
  5749  012036  6EE6               	movwf	postinc1,c
  5750  012038  0E01               	movlw	1
  5751  01203A  6EE6               	movwf	postinc1,c
  5752  01203C  0E02               	movlw	2
  5753  01203E  6EE6               	movwf	postinc1,c
  5754  012040  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5755  012044  0060  F007  FFE6   	movff	btemp,postinc1
  5756  01204A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5757  012050  0E0C               	movlw	12
  5758  012052  6EE6               	movwf	postinc1,c
  5759  012054  ECC0  F0D1         	call	_sprintf	;wreg free
  5760                           
  5761                           ;main.c: 388:      break;
  5762  012058  D107               	goto	l13929
  5763  01205A                     l13913:
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;main.c: 390:      if (!V.calib) {
  5767  01205A  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5768  01205C  A4D8               	btfss	status,2,c
  5769  01205E  D02D               	goto	l13917
  5770                           
  5771                           ; BSR set to: 1
  5772                           ;main.c: 391:       lp_filter(0.0, i, -1);
  5773  012060  0EFF               	movlw	255
  5774  012062  6EE6               	movwf	postinc1,c
  5775                           
  5776                           ;stkvar	_i @ sp[(-18)+14]
  5777  012064  0EFC               	movlw	-4
  5778  012066  50E3               	movf	plusw1,w,c
  5779  012068  6EE6               	movwf	postinc1,c
  5780  01206A  0E00               	movlw	0
  5781  01206C  6EE6               	movwf	postinc1,c
  5782  01206E  0E00               	movlw	0
  5783  012070  6EE6               	movwf	postinc1,c
  5784  012072  0E00               	movlw	0
  5785  012074  6EE6               	movwf	postinc1,c
  5786  012076  0E00               	movlw	0
  5787  012078  6EE6               	movwf	postinc1,c
  5788  01207A  ECD1  F0C5         	call	_lp_filter	;wreg free
  5789                           
  5790                           ;main.c: 392:       lp_filter(0.0, j, -1);
  5791  01207E  0EFF               	movlw	255
  5792  012080  6EE6               	movwf	postinc1,c
  5793                           
  5794                           ;stkvar	_j @ sp[(-18)+13]
  5795  012082  0EFB               	movlw	-5
  5796  012084  50E3               	movf	plusw1,w,c
  5797  012086  6EE6               	movwf	postinc1,c
  5798  012088  0E00               	movlw	0
  5799  01208A  6EE6               	movwf	postinc1,c
  5800  01208C  0E00               	movlw	0
  5801  01208E  6EE6               	movwf	postinc1,c
  5802  012090  0E00               	movlw	0
  5803  012092  6EE6               	movwf	postinc1,c
  5804  012094  0E00               	movlw	0
  5805  012096  6EE6               	movwf	postinc1,c
  5806  012098  ECD1  F0C5         	call	_lp_filter	;wreg free
  5807                           
  5808                           ;main.c: 393:       lp_filter(0.0, k, -1);
  5809  01209C  0EFF               	movlw	255
  5810  01209E  6EE6               	movwf	postinc1,c
  5811                           
  5812                           ;stkvar	_k @ sp[(-18)+12]
  5813  0120A0  0EFA               	movlw	-6
  5814  0120A2  50E3               	movf	plusw1,w,c
  5815  0120A4  6EE6               	movwf	postinc1,c
  5816  0120A6  0E00               	movlw	0
  5817  0120A8  6EE6               	movwf	postinc1,c
  5818  0120AA  0E00               	movlw	0
  5819  0120AC  6EE6               	movwf	postinc1,c
  5820  0120AE  0E00               	movlw	0
  5821  0120B0  6EE6               	movwf	postinc1,c
  5822  0120B2  0E00               	movlw	0
  5823  0120B4  6EE6               	movwf	postinc1,c
  5824  0120B6  ECD1  F0C5         	call	_lp_filter	;wreg free
  5825  0120BA                     l13917:
  5826                           
  5827                           ;main.c: 395:      V.calib = 1;
  5828  0120BA  0E01               	movlw	1
  5829  0120BC  0101               	movlb	1	; () banked
  5830  0120BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  5834                           ;stkvar	_inp_index @ sp[(-17)+11]
  5835  0120C0  0EFA               	movlw	-6
  5836  0120C2  50E3               	movf	plusw1,w,c
  5837  0120C4  6EE6               	movwf	postinc1,c
  5838  0120C6  0E00               	movlw	0
  5839  0120C8  6EE6               	movwf	postinc1,c
  5840                           
  5841                           ;stkvar	_i @ sp[(-19)+14]
  5842  0120CA  0EFB               	movlw	-5
  5843  0120CC  50E3               	movf	plusw1,w,c
  5844  0120CE  0D04               	mullw	4
  5845  0120D0  0EFF               	movlw	low _C
  5846  0120D2  24F3               	addwf	243,w,c
  5847  0120D4  6ED9               	movwf	fsr2l,c
  5848  0120D6  0E06               	movlw	high _C
  5849  0120D8  20F4               	addwfc	prodh,w,c
  5850  0120DA  6EDA               	movwf	fsr2h,c
  5851  0120DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5852  0120E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5853  0120E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5854  0120EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5855                           
  5856                           ;stkvar	_i @ sp[(-23)+14]
  5857  0120F4  0EF7               	movlw	-9
  5858  0120F6  50E3               	movf	plusw1,w,c
  5859  0120F8  6EE6               	movwf	postinc1,c
  5860  0120FA  EC69  F0E4         	call	_get_raw_result	;wreg free
  5861  0120FE  0060  F007  FFE6   	movff	btemp,postinc1
  5862  012104  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5863  01210A  0EE2               	movlw	low STR_40
  5864  01210C  6EE6               	movwf	postinc1,c
  5865  01210E  0EFD               	movlw	high STR_40
  5866  012110  6EE6               	movwf	postinc1,c
  5867  012112  0E00               	movlw	0
  5868  012114  6EE6               	movwf	postinc1,c
  5869  012116  0E00               	movlw	0
  5870  012118  6EE6               	movwf	postinc1,c
  5871  01211A  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5872  01211E  0060  F007  FFE6   	movff	btemp,postinc1
  5873  012124  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5874  01212A  0E0C               	movlw	12
  5875  01212C  6EE6               	movwf	postinc1,c
  5876  01212E  ECC0  F0D1         	call	_sprintf	;wreg free
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  5880                           ;stkvar	_inp_index @ sp[(-17)+11]
  5881  012132  0EFA               	movlw	-6
  5882  012134  50E3               	movf	plusw1,w,c
  5883  012136  6E0B               	movwf	(btemp+10)^0,c
  5884  012138  6A0C               	clrf	(btemp+11)^0,c
  5885  01213A  0E01               	movlw	1
  5886  01213C  260B               	addwf	(btemp+10)^0,f,c
  5887  01213E  0E00               	movlw	0
  5888  012140  220C               	addwfc	(btemp+11)^0,f,c
  5889  012142  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5890  012148  0060  F033  FFE6   	movff	btemp+11,postinc1
  5891                           
  5892                           ;stkvar	_j @ sp[(-19)+13]
  5893  01214E  0EFA               	movlw	-6
  5894  012150  50E3               	movf	plusw1,w,c
  5895  012152  0D04               	mullw	4
  5896  012154  0EFF               	movlw	low _C
  5897  012156  24F3               	addwf	243,w,c
  5898  012158  6ED9               	movwf	fsr2l,c
  5899  01215A  0E06               	movlw	high _C
  5900  01215C  20F4               	addwfc	prodh,w,c
  5901  01215E  6EDA               	movwf	fsr2h,c
  5902  012160  006F FF7B FFE6     	movff	postinc2,postinc1
  5903  012166  006F FF7B FFE6     	movff	postinc2,postinc1
  5904  01216C  006F FF7B FFE6     	movff	postinc2,postinc1
  5905  012172  006F FF7B FFE6     	movff	postinc2,postinc1
  5906                           
  5907                           ;stkvar	_j @ sp[(-23)+13]
  5908  012178  0EF6               	movlw	-10
  5909  01217A  50E3               	movf	plusw1,w,c
  5910  01217C  6EE6               	movwf	postinc1,c
  5911  01217E  EC69  F0E4         	call	_get_raw_result	;wreg free
  5912  012182  0060  F007  FFE6   	movff	btemp,postinc1
  5913  012188  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5914  01218E  0EE2               	movlw	low STR_40
  5915  012190  6EE6               	movwf	postinc1,c
  5916  012192  0EFD               	movlw	high STR_40
  5917  012194  6EE6               	movwf	postinc1,c
  5918  012196  0E00               	movlw	0
  5919  012198  6EE6               	movwf	postinc1,c
  5920  01219A  0E01               	movlw	1
  5921  01219C  6EE6               	movwf	postinc1,c
  5922  01219E  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5923  0121A2  0060  F007  FFE6   	movff	btemp,postinc1
  5924  0121A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5925  0121AE  0E0C               	movlw	12
  5926  0121B0  6EE6               	movwf	postinc1,c
  5927  0121B2  ECC0  F0D1         	call	_sprintf	;wreg free
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  5931                           ;stkvar	_inp_index @ sp[(-17)+11]
  5932  0121B6  0EFA               	movlw	-6
  5933  0121B8  50E3               	movf	plusw1,w,c
  5934  0121BA  6E0B               	movwf	(btemp+10)^0,c
  5935  0121BC  6A0C               	clrf	(btemp+11)^0,c
  5936  0121BE  0E02               	movlw	2
  5937  0121C0  260B               	addwf	(btemp+10)^0,f,c
  5938  0121C2  0E00               	movlw	0
  5939  0121C4  220C               	addwfc	(btemp+11)^0,f,c
  5940  0121C6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5941  0121CC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5942                           
  5943                           ;stkvar	_k @ sp[(-19)+12]
  5944  0121D2  0EF9               	movlw	-7
  5945  0121D4  50E3               	movf	plusw1,w,c
  5946  0121D6  0D04               	mullw	4
  5947  0121D8  0EFF               	movlw	low _C
  5948  0121DA  24F3               	addwf	243,w,c
  5949  0121DC  6ED9               	movwf	fsr2l,c
  5950  0121DE  0E06               	movlw	high _C
  5951  0121E0  20F4               	addwfc	prodh,w,c
  5952  0121E2  6EDA               	movwf	fsr2h,c
  5953  0121E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5954  0121EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5955  0121F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5956  0121F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5957                           
  5958                           ;stkvar	_k @ sp[(-23)+12]
  5959  0121FC  0EF5               	movlw	-11
  5960  0121FE  50E3               	movf	plusw1,w,c
  5961  012200  6EE6               	movwf	postinc1,c
  5962  012202  EC69  F0E4         	call	_get_raw_result	;wreg free
  5963  012206  0060  F007  FFE6   	movff	btemp,postinc1
  5964  01220C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5965  012212  0EE2               	movlw	low STR_40
  5966  012214  6EE6               	movwf	postinc1,c
  5967  012216  0EFD               	movlw	high STR_40
  5968  012218  6EE6               	movwf	postinc1,c
  5969  01221A  0E00               	movlw	0
  5970  01221C  6EE6               	movwf	postinc1,c
  5971  01221E  0E02               	movlw	2
  5972  012220  6EE6               	movwf	postinc1,c
  5973  012222  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  5974  012226  0060  F007  FFE6   	movff	btemp,postinc1
  5975  01222C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5976  012232  0E0C               	movlw	12
  5977  012234  6EE6               	movwf	postinc1,c
  5978  012236  ECC0  F0D1         	call	_sprintf	;wreg free
  5979                           
  5980                           ;main.c: 399:      break;
  5981  01223A  D016               	goto	l13929
  5982  01223C                     l13927:
  5983  01223C  0101               	movlb	1	; () banked
  5984  01223E  51C7               	movf	_H& (0+255),w,b
  5985  012240  6E0B               	movwf	(btemp+10)^0,c
  5986  012242  6A0C               	clrf	(btemp+11)^0,c
  5987                           
  5988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5989                           ; Switch size 1, requested type "simple"
  5990                           ; Number of cases is 1, Range of values is 0 to 0
  5991                           ; switch strategies available:
  5992                           ; Name         Instructions Cycles
  5993                           ; simple_byte            4     3 (average)
  5994                           ;	Chosen strategy is simple_byte
  5995  012244  500C               	movf	(btemp+11)^0,w,c
  5996  012246  0A00               	xorlw	0	; case 0
  5997  012248  A4D8               	btfss	status,2,c
  5998  01224A  D00E               	goto	l13929
  5999                           
  6000                           ; BSR set to: 1
  6001                           ; Switch size 1, requested type "simple"
  6002                           ; Number of cases is 4, Range of values is 0 to 3
  6003                           ; switch strategies available:
  6004                           ; Name         Instructions Cycles
  6005                           ; simple_byte           13     7 (average)
  6006                           ;	Chosen strategy is simple_byte
  6007  01224C  500B               	movf	(btemp+10)^0,w,c
  6008  01224E  0A00               	xorlw	0	; case 0
  6009  012250  B4D8               	btfsc	status,2,c
  6010  012252  D4D1               	goto	l1373
  6011  012254  0A01               	xorlw	1	; case 1
  6012  012256  B4D8               	btfsc	status,2,c
  6013  012258  EFF9  F08C         	goto	l1363
  6014  01225C  0A03               	xorlw	3	; case 2
  6015  01225E  B4D8               	btfsc	status,2,c
  6016  012260  D5DE               	goto	l1374
  6017  012262  0A01               	xorlw	1	; case 3
  6018  012264  B4D8               	btfsc	status,2,c
  6019  012266  D6F9               	goto	l13913
  6020  012268                     l13929:
  6021                           
  6022                           ;main.c: 403:     clear_hid_pflags(&H);
  6023  012268  0EC7               	movlw	low _H
  6024  01226A  6EE6               	movwf	postinc1,c
  6025  01226C  0E01               	movlw	high _H
  6026  01226E  6EE6               	movwf	postinc1,c
  6027  012270  EC33  F0DC         	call	_clear_hid_pflags	;wreg free
  6028                           
  6029                           ;main.c: 405:    StartTimer(TMR_DISPLAY, 250);
  6030  012274  0EFA               	movlw	250
  6031  012276  6EE6               	movwf	postinc1,c
  6032  012278  0E00               	movlw	0
  6033  01227A  6EE6               	movwf	postinc1,c
  6034  01227C  0E0A               	movlw	10
  6035  01227E  6EE6               	movwf	postinc1,c
  6036  012280  EC00  F0E0         	call	_StartTimer	;wreg free
  6037                           
  6038                           ;main.c: 406:    V.enter = check_enter_button(&H);
  6039  012284  0EC7               	movlw	low _H
  6040  012286  6EE6               	movwf	postinc1,c
  6041  012288  0E01               	movlw	high _H
  6042  01228A  6EE6               	movwf	postinc1,c
  6043  01228C  EC5A  F0DB         	call	_check_enter_button	;wreg free
  6044  012290  5001               	movf	btemp^0,w,c
  6045  012292  0101               	movlb	1	; () banked
  6046  012294  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;main.c: 407:    if (V.enter && (H.hid_display != HID_AUX)) {
  6050  012296  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6051  012298  B4D8               	btfsc	status,2,c
  6052  01229A  D011               	goto	l13943
  6053                           
  6054                           ; BSR set to: 1
  6055  01229C  0E03               	movlw	3
  6056  01229E  19C7               	xorwf	_H& (0+255),w,b
  6057  0122A0  B4D8               	btfsc	status,2,c
  6058  0122A2  D00D               	goto	l13943
  6059                           
  6060                           ; BSR set to: 1
  6061                           ;main.c: 408:     V.enter = 0;
  6062  0122A4  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6063                           
  6064                           ; BSR set to: 1
  6065                           ;main.c: 409:     V.screen = ~V.screen;
  6066  0122A6  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6067  0122A8  D002               	goto	u13360
  6068  0122AA  0E01               	movlw	1
  6069  0122AC  D001               	goto	u13366
  6070  0122AE                     u13360:
  6071  0122AE  0E00               	movlw	0
  6072  0122B0                     u13366:
  6073  0122B0  0AFF               	xorlw	255
  6074  0122B2  6E0C               	movwf	(btemp+11)^0,c
  6075  0122B4  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6076  0122B6  180C               	xorwf	(btemp+11)^0,w,c
  6077  0122B8  0BFE               	andlw	-2
  6078  0122BA  180C               	xorwf	(btemp+11)^0,w,c
  6079  0122BC  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6080  0122BE                     l13943:
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;main.c: 411:    set_vterm(V.screen);
  6084  0122BE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6085  0122C0  D002               	goto	u13370
  6086  0122C2  0E01               	movlw	1
  6087  0122C4  D001               	goto	u13376
  6088  0122C6                     u13370:
  6089  0122C6  0E00               	movlw	0
  6090  0122C8                     u13376:
  6091  0122C8  6EE6               	movwf	postinc1,c
  6092  0122CA  EC4B  F0E4         	call	_set_vterm	;wreg free
  6093                           
  6094                           ;main.c: 412:    update_lcd(V.screen);
  6095  0122CE  0101               	movlb	1	; () banked
  6096  0122D0  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6097  0122D2  D002               	goto	u13380
  6098  0122D4  0E01               	movlw	1
  6099  0122D6  D001               	goto	u13386
  6100  0122D8                     u13380:
  6101  0122D8  0E00               	movlw	0
  6102  0122DA                     u13386:
  6103  0122DA  6EE6               	movwf	postinc1,c
  6104  0122DC  EC38  F0D1         	call	_update_lcd	;wreg free
  6105                           
  6106                           ;main.c: 414:    wait_lcd_done();
  6107  0122E0  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;main.c: 415:    set_dac_a(3.333);
  6111  0122E4  0EDF               	movlw	223
  6112  0122E6  6EE6               	movwf	postinc1,c
  6113  0122E8  0E4F               	movlw	79
  6114  0122EA  6EE6               	movwf	postinc1,c
  6115  0122EC  0E55               	movlw	85
  6116  0122EE  6EE6               	movwf	postinc1,c
  6117  0122F0  0E40               	movlw	64
  6118  0122F2  6EE6               	movwf	postinc1,c
  6119  0122F4  EC3E  F0E1         	call	_set_dac_a	;wreg free
  6120                           
  6121                           ;main.c: 416:    set_dac_b(6.666);
  6122  0122F8  0EDF               	movlw	223
  6123  0122FA  6EE6               	movwf	postinc1,c
  6124  0122FC  0E4F               	movlw	79
  6125  0122FE  6EE6               	movwf	postinc1,c
  6126  012300  0ED5               	movlw	213
  6127  012302  6EE6               	movwf	postinc1,c
  6128  012304  0E40               	movlw	64
  6129  012306  6EE6               	movwf	postinc1,c
  6130  012308  EC24  F0E1         	call	_set_dac_b	;wreg free
  6131                           
  6132                           ;main.c: 417:    set_dac();
  6133  01230C  EC67  F0D6         	call	_set_dac	;wreg free
  6134  012310                     l13955:
  6135                           
  6136                           ;main.c: 423:   check_help(V.flipper);
  6137  012310  0101               	movlb	1	; () banked
  6138  012312  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6139  012314  6EE6               	movwf	postinc1,c
  6140  012316  ECC6  F0C3         	call	_check_help	;wreg free
  6141                           
  6142                           ;main.c: 425:   if (V.enter) {
  6143  01231A  0101               	movlb	1	; () banked
  6144  01231C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6145  01231E  B4D8               	btfsc	status,2,c
  6146  012320  D062               	goto	l1379
  6147                           
  6148                           ; BSR set to: 1
  6149                           ;main.c: 426:    V.enter = 0;
  6150  012322  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6151                           
  6152                           ;main.c: 427:    V.calib = 0;
  6153  012324  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6154                           
  6155                           ; BSR set to: 1
  6156                           ;main.c: 428:    inp_index += 3;
  6157                           ;stkvar	_inp_index @ sp[(-17)+11]
  6158  012326  0EFA               	movlw	-6
  6159  012328  006F FF8C  F001    	movff	plusw1,btemp
  6160  01232E  0E03               	movlw	3
  6161  012330  2601               	addwf	btemp^0,f,c
  6162  012332  0EFA               	movlw	-6
  6163  012334  0060  F007  FFE3   	movff	btemp,plusw1
  6164                           
  6165                           ;main.c: 429:    if (inp_index > 9)
  6166                           ;stkvar	_inp_index @ sp[(-17)+11]
  6167  01233A  0EFA               	movlw	-6
  6168  01233C  006F FF8C  F001    	movff	plusw1,btemp
  6169  012342  0E09               	movlw	9
  6170  012344  6401               	cpfsgt	btemp^0,c
  6171  012346  D03A               	goto	l13983
  6172                           
  6173                           ; BSR set to: 1
  6174                           ;main.c: 430:     inp_index = 0;
  6175                           ;stkvar	_inp_index @ sp[(-17)+11]
  6176  012348  0EFA               	movlw	-6
  6177  01234A  6AE3               	clrf	plusw1,c
  6178  01234C  D037               	goto	l13983
  6179  01234E                     l13965:
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;main.c: 433:     i = C_BATT;
  6183                           ;stkvar	_i @ sp[(-17)+14]
  6184  01234E  0EFD               	movlw	-3
  6185  012350  6AE3               	clrf	plusw1,c
  6186                           
  6187                           ; BSR set to: 1
  6188                           ;main.c: 434:     j = C_PV;
  6189                           ;stkvar	_j @ sp[(-17)+13]
  6190  012352  0EFC               	movlw	-4
  6191  012354  6AE3               	clrf	plusw1,c
  6192  012356  2AE3               	incf	plusw1,f,c
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;main.c: 435:     k = V_CC;
  6196                           ;stkvar	_k @ sp[(-17)+12]
  6197  012358  0EFB               	movlw	-5
  6198  01235A  6AE3               	clrf	plusw1,c
  6199  01235C  82E3               	bsf	plusw1,1,c
  6200                           
  6201                           ;main.c: 436:     break;
  6202  01235E  D043               	goto	l1379
  6203  012360                     l13971:
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;main.c: 438:     i = V_BAT;
  6207                           ;stkvar	_i @ sp[(-17)+14]
  6208  012360  0EFD               	movlw	-3
  6209  012362  6AE3               	clrf	plusw1,c
  6210  012364  84E3               	bsf	plusw1,2,c
  6211                           
  6212                           ;main.c: 439:     j = V_PV;
  6213                           ;stkvar	_j @ sp[(-17)+13]
  6214  012366  0EFC               	movlw	-4
  6215  012368  6AE3               	clrf	plusw1,c
  6216  01236A  80E3               	bsf	plusw1,0,c
  6217  01236C  84E3               	bsf	plusw1,2,c	;indir
  6218                           
  6219                           ;main.c: 440:     k = V_CBUS;
  6220                           ;stkvar	_k @ sp[(-17)+12]
  6221  01236E  0EFB               	movlw	-5
  6222  012370  6AE3               	clrf	plusw1,c
  6223  012372  82E3               	bsf	plusw1,1,c
  6224  012374  84E3               	bsf	plusw1,2,c	;indir
  6225                           
  6226                           ;main.c: 441:     break;
  6227  012376  D037               	goto	l1379
  6228  012378                     l13973:
  6229                           
  6230                           ; BSR set to: 1
  6231                           ;main.c: 443:     i = V_BBAT;
  6232                           ;stkvar	_i @ sp[(-17)+14]
  6233  012378  0EFD               	movlw	-3
  6234  01237A  6AE3               	clrf	plusw1,c
  6235  01237C  82E3               	bsf	plusw1,1,c
  6236  01237E  86E3               	bsf	plusw1,3,c	;indir
  6237                           
  6238                           ; BSR set to: 1
  6239                           ;main.c: 444:     j = V_TEMP;
  6240  012380  0E0B               	movlw	11
  6241  012382  6E0C               	movwf	(btemp+11)^0,c
  6242                           
  6243                           ;stkvar	_j @ sp[(-17)+13]
  6244  012384  0EFC               	movlw	-4
  6245  012386  0060  F033  FFE3   	movff	btemp+11,plusw1
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;main.c: 445:     k = V_INVERTER;
  6249                           ;stkvar	_k @ sp[(-17)+12]
  6250  01238C  0EFB               	movlw	-5
  6251  01238E  6AE3               	clrf	plusw1,c
  6252  012390  84E3               	bsf	plusw1,2,c
  6253  012392  86E3               	bsf	plusw1,3,c	;indir
  6254                           
  6255                           ;main.c: 446:     break;
  6256  012394  D028               	goto	l1379
  6257  012396                     l13979:
  6258                           
  6259                           ; BSR set to: 1
  6260                           ;main.c: 448:     i = V_LIGHT_SENSOR;
  6261  012396  0E0D               	movlw	13
  6262  012398  6E0C               	movwf	(btemp+11)^0,c
  6263                           
  6264                           ;stkvar	_i @ sp[(-17)+14]
  6265  01239A  0EFD               	movlw	-3
  6266  01239C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6267                           
  6268                           ;main.c: 449:     j = V_LIGHT_SENSOR;
  6269  0123A2  0E0D               	movlw	13
  6270  0123A4  6E0C               	movwf	(btemp+11)^0,c
  6271                           
  6272                           ;stkvar	_j @ sp[(-17)+13]
  6273  0123A6  0EFC               	movlw	-4
  6274  0123A8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6275                           
  6276                           ;main.c: 450:     k = V_LIGHT_SENSOR;
  6277  0123AE  0E0D               	movlw	13
  6278  0123B0  6E0C               	movwf	(btemp+11)^0,c
  6279                           
  6280                           ;stkvar	_k @ sp[(-17)+12]
  6281  0123B2  0EFB               	movlw	-5
  6282  0123B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6283                           
  6284                           ;main.c: 451:     break;
  6285  0123BA  D015               	goto	l1379
  6286  0123BC                     l13983:
  6287                           
  6288                           ; BSR set to: 1
  6289                           ;stkvar	_inp_index @ sp[(-17)+11]
  6290  0123BC  0EFA               	movlw	-6
  6291  0123BE  50E3               	movf	plusw1,w,c
  6292  0123C0  6E0B               	movwf	(btemp+10)^0,c
  6293  0123C2  6A0C               	clrf	(btemp+11)^0,c
  6294                           
  6295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6296                           ; Switch size 1, requested type "simple"
  6297                           ; Number of cases is 1, Range of values is 0 to 0
  6298                           ; switch strategies available:
  6299                           ; Name         Instructions Cycles
  6300                           ; simple_byte            4     3 (average)
  6301                           ;	Chosen strategy is simple_byte
  6302  0123C4  500C               	movf	(btemp+11)^0,w,c
  6303  0123C6  0A00               	xorlw	0	; case 0
  6304  0123C8  A4D8               	btfss	status,2,c
  6305  0123CA  D00D               	goto	l1379
  6306                           
  6307                           ; BSR set to: 1
  6308                           ; Switch size 1, requested type "simple"
  6309                           ; Number of cases is 4, Range of values is 0 to 9
  6310                           ; switch strategies available:
  6311                           ; Name         Instructions Cycles
  6312                           ; simple_byte           13     7 (average)
  6313                           ;	Chosen strategy is simple_byte
  6314  0123CC  500B               	movf	(btemp+10)^0,w,c
  6315  0123CE  0A00               	xorlw	0	; case 0
  6316  0123D0  B4D8               	btfsc	status,2,c
  6317  0123D2  D7BD               	goto	l13965
  6318  0123D4  0A03               	xorlw	3	; case 3
  6319  0123D6  B4D8               	btfsc	status,2,c
  6320  0123D8  D7C3               	goto	l13971
  6321  0123DA  0A05               	xorlw	5	; case 6
  6322  0123DC  B4D8               	btfsc	status,2,c
  6323  0123DE  D7CC               	goto	l13973
  6324  0123E0  0A0F               	xorlw	15	; case 9
  6325  0123E2  B4D8               	btfsc	status,2,c
  6326  0123E4  D7D8               	goto	l13979
  6327  0123E6                     l1379:
  6328                           
  6329                           ; BSR set to: 1
  6330                           ;main.c: 460:   if (V.set_sequ) {
  6331  0123E6  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6332  0123E8  EFAB  F08C         	goto	l13857
  6333                           
  6334                           ; BSR set to: 1
  6335                           ;main.c: 461:    if (TimerDone(TMR_INFO)) {
  6336  0123EC  0E07               	movlw	7
  6337  0123EE  6EE6               	movwf	postinc1,c
  6338  0123F0  EC55  F0E2         	call	_TimerDone	;wreg free
  6339  0123F4  5001               	movf	btemp^0,w,c
  6340  0123F6  B4D8               	btfsc	status,2,c
  6341  0123F8  D00C               	goto	l13993
  6342                           
  6343                           ;main.c: 462:     V.set_sequ = 0;
  6344  0123FA  0101               	movlb	1	; () banked
  6345  0123FC  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6346                           
  6347                           ; BSR set to: 1
  6348                           ;main.c: 463:     set_vterm(0);
  6349  0123FE  0E00               	movlw	0
  6350  012400  6EE6               	movwf	postinc1,c
  6351  012402  EC4B  F0E4         	call	_set_vterm	;wreg free
  6352                           
  6353                           ;main.c: 464:     update_lcd(0);
  6354  012406  0E00               	movlw	0
  6355  012408  6EE6               	movwf	postinc1,c
  6356  01240A  EC38  F0D1         	call	_update_lcd	;wreg free
  6357                           
  6358                           ;main.c: 465:    } else {
  6359  01240E  EFAB  F08C         	goto	l13857
  6360  012412                     l13993:
  6361                           
  6362                           ;main.c: 466:     set_vterm(2);
  6363  012412  0E02               	movlw	2
  6364  012414  6EE6               	movwf	postinc1,c
  6365  012416  EC4B  F0E4         	call	_set_vterm	;wreg free
  6366                           
  6367                           ;main.c: 467:     update_lcd(2);
  6368  01241A  0E02               	movlw	2
  6369  01241C  6EE6               	movwf	postinc1,c
  6370  01241E  EC38  F0D1         	call	_update_lcd	;wreg free
  6371  012422  EFAB  F08C         	goto	l13857
  6372  012426                     __end_of_main:
  6373                           	opt callstack 0
  6374                           
  6375 ;; *************** function _static_soc *****************
  6376 ;; Defined at:
  6377 ;;		line 117 in file "mbmc.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1  [STACK] void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr2l, fsr2h
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:   15
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;; This function uses a reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text1
  6406  01BABA                     __ptext1:
  6407                           	opt callstack 0
  6408  01BABA                     _static_soc:
  6409                           	opt callstack 15
  6410                           
  6411                           ;mbmc.c: 119:  C.runtime = 120;
  6412                           
  6413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6414                           ;incstack = 0
  6415  01BABA  0E78               	movlw	120
  6416  01BABC  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6417  01BAC2  0E00               	movlw	0
  6418  01BAC4  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6419                           
  6420                           ;mbmc.c: 120:  C.soc = 100;
  6421  01BACA  0E64               	movlw	100
  6422  01BACC  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6423  01BAD2  0E00               	movlw	0
  6424  01BAD4  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6425                           
  6426                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6427  01BADA  EE21  F38B         	lfsr	2,_C+140	;volatile
  6428  01BADE  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6429  01BAE4  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6430  01BAEA  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6431  01BAF0  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6432                           
  6433                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6434  01BAF6  EE21  F38F         	lfsr	2,_C+144	;volatile
  6435  01BAFA  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6436  01BB00  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6437  01BB06  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6438  01BB0C  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6439                           
  6440                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6441  01BB12  0012               	return		;funcret
  6442  01BB14                     __end_of_static_soc:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _start_switch_handler *****************
  6446 ;; Defined at:
  6447 ;;		line 125 in file "dio.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1  [STACK] void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6456 ;; Tracked objects:
  6457 ;;		On entry : 1/0
  6458 ;;		On exit  : 3F/39
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:   16
  6468 ;; This function calls:
  6469 ;;		_INT1_SetInterruptHandler
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text2
  6476  01C81A                     __ptext2:
  6477                           	opt callstack 0
  6478  01C81A                     _start_switch_handler:
  6479                           	opt callstack 14
  6480                           
  6481                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6482                           
  6483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6484                           ;incstack = 0
  6485  01C81A  0139               	movlb	57	; () banked
  6486  01C81C  9195               	bcf	149,0,b	;volatile
  6487                           
  6488                           ; BSR set to: 57
  6489                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6490  01C81E  0E20               	movlw	low _switch_handler
  6491  01C820  6EE6               	movwf	postinc1,c
  6492  01C822  0E99               	movlw	high _switch_handler
  6493  01C824  6EE6               	movwf	postinc1,c
  6494  01C826  0E01               	movlw	low (_switch_handler shr (0+16))
  6495  01C828  6EE6               	movwf	postinc1,c
  6496  01C82A  ECE1  F0E2         	call	_INT1_SetInterruptHandler	;wreg free
  6497                           
  6498                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6499  01C82E  0E02               	movlw	2
  6500  01C830  0102               	movlb	2	; () banked
  6501  01C832  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6502                           
  6503                           ; BSR set to: 2
  6504                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6505  01C834  0139               	movlb	57	; () banked
  6506  01C836  8195               	bsf	149,0,b	;volatile
  6507                           
  6508                           ; BSR set to: 57
  6509                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6510  01C838  0012               	return		;funcret
  6511  01C83A                     __end_of_start_switch_handler:
  6512                           	opt callstack 0
  6513                           
  6514 ;; *************** function _srand *****************
  6515 ;; Defined at:
  6516 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  s               2  [STACK] unsigned int 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1  [STACK] void 
  6523 ;; Registers used:
  6524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 3F/1
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;Total ram usage:        0 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:   15
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_main
  6541 ;; This function uses a reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text3
  6545  01C214                     __ptext3:
  6546                           	opt callstack 0
  6547  01C214                     _srand:
  6548                           	opt callstack 15
  6549                           
  6550                           ;stkvar	_s @ sp[(0)+-2]
  6551                           
  6552                           ; BSR set to: 57
  6553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6554                           ;incstack = 0
  6555  01C214  0EFE               	movlw	-2
  6556  01C216  50E3               	movf	plusw1,w,c
  6557  01C218  0FFF               	addlw	255
  6558  01C21A  6E0B               	movwf	(btemp+10)^0,c
  6559  01C21C  0EFF               	movlw	-1
  6560  01C21E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6561  01C224  0EFF               	movlw	255
  6562  01C226  220C               	addwfc	(btemp+11)^0,f,c
  6563  01C228  0060  F02C  F1F6   	movff	btemp+10,_seed
  6564  01C22E  0060  F030  F1F7   	movff	btemp+11,_seed+1
  6565  01C234  0101               	movlb	1	; () banked
  6566  01C236  6BF8               	clrf	(_seed+2)& (0+255),b
  6567  01C238  6BF9               	clrf	(_seed+3)& (0+255),b
  6568  01C23A  6BFA               	clrf	(_seed+4)& (0+255),b
  6569  01C23C  6BFB               	clrf	(_seed+5)& (0+255),b
  6570  01C23E  6BFC               	clrf	(_seed+6)& (0+255),b
  6571  01C240  6BFD               	clrf	(_seed+7)& (0+255),b
  6572                           
  6573                           ; BSR set to: 1
  6574                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6575  01C242  52E5               	movf	postdec1,f,c
  6576  01C244  52E5               	movf	postdec1,f,c
  6577  01C246  0012               	return		;funcret
  6578  01C248                     __end_of_srand:
  6579                           	opt callstack 0
  6580                           
  6581 ;; *************** function _set_dac_b *****************
  6582 ;; Defined at:
  6583 ;;		line 296 in file "daq.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  voltage         4  [STACK] const float 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  2  [STACK] unsigned short 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:   17
  6604 ;; This function calls:
  6605 ;;		_convert_dac_raw
  6606 ;; This function is called by:
  6607 ;;		_main
  6608 ;; This function uses a reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text4
  6612  01C248                     __ptext4:
  6613                           	opt callstack 0
  6614  01C248                     _set_dac_b:
  6615                           	opt callstack 13
  6616                           
  6617                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6618                           ;stkvar	_voltage @ sp[(0)+-4]
  6619                           
  6620                           ; BSR set to: 1
  6621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6622                           ;incstack = 0
  6623  01C248  0EFC               	movlw	-4
  6624  01C24A  006F FF8F FFE6     	movff	plusw1,postinc1
  6625  01C250  006F FF8F FFE6     	movff	plusw1,postinc1
  6626  01C256  006F FF8F FFE6     	movff	plusw1,postinc1
  6627  01C25C  006F FF8F FFE6     	movff	plusw1,postinc1
  6628  01C262  EC96  F0CF         	call	_convert_dac_raw	;wreg free
  6629  01C266  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6630  01C26C  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6631                           
  6632                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6633                           
  6634                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6635  01C272  52E5               	movf	postdec1,f,c
  6636  01C274  52E5               	movf	postdec1,f,c
  6637  01C276  52E5               	movf	postdec1,f,c
  6638  01C278  52E5               	movf	postdec1,f,c
  6639  01C27A  0012               	return		;funcret
  6640  01C27C                     __end_of_set_dac_b:
  6641                           	opt callstack 0
  6642                           
  6643 ;; *************** function _set_dac_a *****************
  6644 ;; Defined at:
  6645 ;;		line 287 in file "daq.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  voltage         4  [STACK] const float 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  2  [STACK] unsigned short 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6654 ;; Tracked objects:
  6655 ;;		On entry : 3F/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:   17
  6666 ;; This function calls:
  6667 ;;		_convert_dac_raw
  6668 ;; This function is called by:
  6669 ;;		_main
  6670 ;; This function uses a reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text5
  6674  01C27C                     __ptext5:
  6675                           	opt callstack 0
  6676  01C27C                     _set_dac_a:
  6677                           	opt callstack 13
  6678                           
  6679                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6680                           ;stkvar	_voltage @ sp[(0)+-4]
  6681                           
  6682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6683                           ;incstack = 0
  6684  01C27C  0EFC               	movlw	-4
  6685  01C27E  006F FF8F FFE6     	movff	plusw1,postinc1
  6686  01C284  006F FF8F FFE6     	movff	plusw1,postinc1
  6687  01C28A  006F FF8F FFE6     	movff	plusw1,postinc1
  6688  01C290  006F FF8F FFE6     	movff	plusw1,postinc1
  6689  01C296  EC96  F0CF         	call	_convert_dac_raw	;wreg free
  6690  01C29A  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6691  01C2A0  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6692                           
  6693                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6694                           
  6695                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6696  01C2A6  52E5               	movf	postdec1,f,c
  6697  01C2A8  52E5               	movf	postdec1,f,c
  6698  01C2AA  52E5               	movf	postdec1,f,c
  6699  01C2AC  52E5               	movf	postdec1,f,c
  6700  01C2AE  0012               	return		;funcret
  6701  01C2B0                     __end_of_set_dac_a:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _convert_dac_raw *****************
  6705 ;; Defined at:
  6706 ;;		line 269 in file "daq.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  voltage         4  [STACK] float 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  2  [STACK] unsigned short 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:   16
  6727 ;; This function calls:
  6728 ;;		___fldiv
  6729 ;;		___flge
  6730 ;;		___fltol
  6731 ;; This function is called by:
  6732 ;;		_set_dac_a
  6733 ;;		_set_dac_b
  6734 ;; This function uses a reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text6
  6738  019F2C                     __ptext6:
  6739                           	opt callstack 0
  6740  019F2C                     _convert_dac_raw:
  6741                           	opt callstack 13
  6742                           
  6743                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6744                           
  6745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6746                           ;incstack = 0
  6747  019F2C  0E6F               	movlw	111
  6748  019F2E  6EE6               	movwf	postinc1,c
  6749  019F30  0E12               	movlw	18
  6750  019F32  6EE6               	movwf	postinc1,c
  6751  019F34  0E83               	movlw	131
  6752  019F36  6EE6               	movwf	postinc1,c
  6753  019F38  0E3A               	movlw	58
  6754  019F3A  6EE6               	movwf	postinc1,c
  6755                           
  6756                           ;stkvar	_voltage @ sp[(-4)+-4]
  6757  019F3C  0EF8               	movlw	-8
  6758  019F3E  006F FF8F FFE6     	movff	plusw1,postinc1
  6759  019F44  006F FF8F FFE6     	movff	plusw1,postinc1
  6760  019F4A  006F FF8F FFE6     	movff	plusw1,postinc1
  6761  019F50  006F FF8F FFE6     	movff	plusw1,postinc1
  6762  019F56  EC86  F0CA         	call	___flge	;wreg free
  6763  019F5A  B001               	btfsc	btemp& (0+255),0,c
  6764  019F5C  D018               	goto	l10947
  6765                           
  6766                           ;daq.c: 275:   voltage = 0.001;
  6767  019F5E  0E6F               	movlw	111
  6768  019F60  6E09               	movwf	(btemp+8)^0,c
  6769  019F62  0E12               	movlw	18
  6770  019F64  6E0A               	movwf	(btemp+9)^0,c
  6771  019F66  0E83               	movlw	131
  6772  019F68  6E0B               	movwf	(btemp+10)^0,c
  6773  019F6A  0E3A               	movlw	58
  6774  019F6C  6E0C               	movwf	(btemp+11)^0,c
  6775                           
  6776                           ;stkvar	_voltage @ sp[(0)+-4]
  6777  019F6E  0EFC               	movlw	-4
  6778  019F70  0060  F027  FFE3   	movff	btemp+8,plusw1
  6779  019F76  0EFD               	movlw	-3
  6780  019F78  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6781  019F7E  0EFE               	movlw	-2
  6782  019F80  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6783  019F86  0EFF               	movlw	-1
  6784  019F88  0060  F033  FFE3   	movff	btemp+11,plusw1
  6785  019F8E                     l10947:
  6786                           
  6787                           ;daq.c: 276:  if (voltage > 10.0)
  6788                           ;stkvar	_voltage @ sp[(0)+-4]
  6789  019F8E  0EFC               	movlw	-4
  6790  019F90  006F FF8F FFE6     	movff	plusw1,postinc1
  6791  019F96  006F FF8F FFE6     	movff	plusw1,postinc1
  6792  019F9C  006F FF8F FFE6     	movff	plusw1,postinc1
  6793  019FA2  006F FF8F FFE6     	movff	plusw1,postinc1
  6794  019FA8  0E00               	movlw	0
  6795  019FAA  6EE6               	movwf	postinc1,c
  6796  019FAC  0E00               	movlw	0
  6797  019FAE  6EE6               	movwf	postinc1,c
  6798  019FB0  0E20               	movlw	32
  6799  019FB2  6EE6               	movwf	postinc1,c
  6800  019FB4  0E41               	movlw	65
  6801  019FB6  6EE6               	movwf	postinc1,c
  6802  019FB8  EC86  F0CA         	call	___flge	;wreg free
  6803  019FBC  B001               	btfsc	btemp& (0+255),0,c
  6804  019FBE  D018               	goto	l10951
  6805                           
  6806                           ;daq.c: 277:   voltage = 10.0;
  6807  019FC0  0E00               	movlw	0
  6808  019FC2  6E09               	movwf	(btemp+8)^0,c
  6809  019FC4  0E00               	movlw	0
  6810  019FC6  6E0A               	movwf	(btemp+9)^0,c
  6811  019FC8  0E20               	movlw	32
  6812  019FCA  6E0B               	movwf	(btemp+10)^0,c
  6813  019FCC  0E41               	movlw	65
  6814  019FCE  6E0C               	movwf	(btemp+11)^0,c
  6815                           
  6816                           ;stkvar	_voltage @ sp[(0)+-4]
  6817  019FD0  0EFC               	movlw	-4
  6818  019FD2  0060  F027  FFE3   	movff	btemp+8,plusw1
  6819  019FD8  0EFD               	movlw	-3
  6820  019FDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6821  019FE0  0EFE               	movlw	-2
  6822  019FE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6823  019FE8  0EFF               	movlw	-1
  6824  019FEA  0060  F033  FFE3   	movff	btemp+11,plusw1
  6825  019FF0                     l10951:
  6826                           
  6827                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6828  019FF0  0EF6               	movlw	246
  6829  019FF2  6EE6               	movwf	postinc1,c
  6830  019FF4  0E09               	movlw	9
  6831  019FF6  6EE6               	movwf	postinc1,c
  6832  019FF8  0E20               	movlw	32
  6833  019FFA  6EE6               	movwf	postinc1,c
  6834  019FFC  0E3B               	movlw	59
  6835  019FFE  6EE6               	movwf	postinc1,c
  6836                           
  6837                           ;stkvar	_voltage @ sp[(-4)+-4]
  6838  01A000  0EF8               	movlw	-8
  6839  01A002  006F FF8F FFE6     	movff	plusw1,postinc1
  6840  01A008  006F FF8F FFE6     	movff	plusw1,postinc1
  6841  01A00E  006F FF8F FFE6     	movff	plusw1,postinc1
  6842  01A014  006F FF8F FFE6     	movff	plusw1,postinc1
  6843  01A01A  EC13  F0A7         	call	___fldiv	;wreg free
  6844  01A01E  0060  F007  FFE6   	movff	btemp,postinc1
  6845  01A024  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6846  01A02A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6847  01A030  0060  F013  FFE6   	movff	btemp+3,postinc1
  6848  01A036  ECCD  F0C9         	call	___fltol	;wreg free
  6849                           
  6850                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6851  01A03A  52E5               	movf	postdec1,f,c
  6852  01A03C  52E5               	movf	postdec1,f,c
  6853  01A03E  52E5               	movf	postdec1,f,c
  6854  01A040  52E5               	movf	postdec1,f,c
  6855  01A042  0012               	return		;funcret
  6856  01A044                     __end_of_convert_dac_raw:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _set_dac *****************
  6860 ;; Defined at:
  6861 ;;		line 245 in file "daq.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1  [STACK] void 
  6868 ;; Registers used:
  6869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;Total ram usage:        0 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:   16
  6882 ;; This function calls:
  6883 ;;		_SPI1_Exchange8bit
  6884 ;;		_dac_spi_control
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text7
  6891  01ACCE                     __ptext7:
  6892                           	opt callstack 0
  6893  01ACCE                     _set_dac:
  6894                           	opt callstack 14
  6895                           
  6896                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6897                           
  6898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6899                           ;incstack = 0
  6900  01ACCE  013D               	movlb	61	; () banked
  6901  01ACD0  AB17               	btfss	23,5,b	;volatile
  6902  01ACD2  D7FD               	goto	_set_dac
  6903                           
  6904                           ; BSR set to: 61
  6905                           
  6906                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6907  01ACD4  84BC               	bsf	188,2,c	;volatile
  6908                           
  6909                           ; BSR set to: 61
  6910                           
  6911                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6912  01ACD6  80BC               	bsf	188,0,c	;volatile
  6913                           
  6914                           ; BSR set to: 61
  6915                           ;daq.c: 250:  dac_spi_control(1);
  6916  01ACD8  0E01               	movlw	1
  6917  01ACDA  6EE6               	movwf	postinc1,c
  6918  01ACDC  ECE1  F0DA         	call	_dac_spi_control	;wreg free
  6919                           
  6920                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6921  01ACE0  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6922                           
  6923                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6924  01ACE4  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6925  01ACE8  006F FF78  F00B    	movff	postinc2,btemp+10
  6926  01ACEE  006F FF74  F00C    	movff	postdec2,btemp+11
  6927  01ACF4  0060  F030  F00B   	movff	btemp+11,btemp+10
  6928  01ACFA  6A0C               	clrf	(btemp+11)^0,c
  6929  01ACFC  0E0F               	movlw	15
  6930  01ACFE  160B               	andwf	(btemp+10)^0,f,c
  6931  01AD00  0100               	movlb	0	; () banked
  6932  01AD02  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6933  01AD04  180B               	xorwf	(btemp+10)^0,w,c
  6934  01AD06  0BF0               	andlw	-16
  6935  01AD08  180B               	xorwf	(btemp+10)^0,w,c
  6936  01AD0A  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  6940  01AD0C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6941  01AD0E  0B0F               	andlw	-241
  6942  01AD10  0940               	iorlw	64
  6943  01AD12  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6944                           
  6945                           ; BSR set to: 0
  6946  01AD14  90BF               	bcf	191,0,c	;volatile
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6950  01AD16  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6951  01AD18  6EE6               	movwf	postinc1,c
  6952  01AD1A  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6953                           
  6954                           ; BSR set to: 57
  6955                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6956  01AD1E  0100               	movlb	0	; () banked
  6957  01AD20  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6958  01AD22  6EE6               	movwf	postinc1,c
  6959  01AD24  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6960                           
  6961                           ; BSR set to: 57
  6962  01AD28  80BF               	bsf	191,0,c	;volatile
  6963                           
  6964                           ; BSR set to: 57
  6965                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6966  01AD2A  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6967                           
  6968                           ; BSR set to: 57
  6969                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6970  01AD2E  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6971  01AD32  006F FF78  F00B    	movff	postinc2,btemp+10
  6972  01AD38  006F FF74  F00C    	movff	postdec2,btemp+11
  6973  01AD3E  0060  F030  F00B   	movff	btemp+11,btemp+10
  6974  01AD44  6A0C               	clrf	(btemp+11)^0,c
  6975  01AD46  0E0F               	movlw	15
  6976  01AD48  160B               	andwf	(btemp+10)^0,f,c
  6977  01AD4A  0100               	movlb	0	; () banked
  6978  01AD4C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6979  01AD4E  180B               	xorwf	(btemp+10)^0,w,c
  6980  01AD50  0BF0               	andlw	-16
  6981  01AD52  180B               	xorwf	(btemp+10)^0,w,c
  6982  01AD54  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  6986  01AD56  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6987  01AD58  0B0F               	andlw	-241
  6988  01AD5A  0950               	iorlw	80
  6989  01AD5C  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6990                           
  6991                           ; BSR set to: 0
  6992  01AD5E  90BF               	bcf	191,0,c	;volatile
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6996  01AD60  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6997  01AD62  6EE6               	movwf	postinc1,c
  6998  01AD64  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  6999                           
  7000                           ; BSR set to: 57
  7001                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7002  01AD68  0100               	movlb	0	; () banked
  7003  01AD6A  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  7004  01AD6C  6EE6               	movwf	postinc1,c
  7005  01AD6E  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7006  01AD72                     l1885:
  7007  01AD72  013D               	movlb	61	; () banked
  7008  01AD74  AB17               	btfss	23,5,b	;volatile
  7009  01AD76  D7FD               	goto	l1885
  7010                           
  7011                           ; BSR set to: 61
  7012                           
  7013                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  7014  01AD78  80BF               	bsf	191,0,c	;volatile
  7015                           
  7016                           ; BSR set to: 61
  7017                           ;daq.c: 266:  dac_spi_control(0);
  7018  01AD7A  0E00               	movlw	0
  7019  01AD7C  6EE6               	movwf	postinc1,c
  7020  01AD7E  ECE1  F0DA         	call	_dac_spi_control	;wreg free
  7021                           
  7022                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7023  01AD82  0012               	return		;funcret
  7024  01AD84                     __end_of_set_dac:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _dac_spi_control *****************
  7028 ;; Defined at:
  7029 ;;		line 197 in file "daq.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  set             1  [STACK] _Bool 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1  [STACK] void 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr1l, fsr1h, status,2
  7038 ;; Tracked objects:
  7039 ;;		On entry : 3F/3D
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:   15
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_set_dac
  7054 ;; This function uses a reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text8
  7058  01B5C2                     __ptext8:
  7059                           	opt callstack 0
  7060  01B5C2                     _dac_spi_control:
  7061                           	opt callstack 14
  7062                           
  7063                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7064                           ;stkvar	_set @ sp[(0)+-1]
  7065                           
  7066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7067                           ;incstack = 0
  7068  01B5C2  0EFF               	movlw	-1
  7069  01B5C4  50E3               	movf	plusw1,w,c
  7070  01B5C6  B4D8               	btfsc	status,2,c
  7071  01B5C8  D022               	goto	l10939
  7072                           
  7073                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7074  01B5CA  013D               	movlb	61	; () banked
  7075  01B5CC  9F14               	bcf	20,7,b	;volatile
  7076                           
  7077                           ; BSR set to: 61
  7078                           ;daq.c: 204:   if (!init) {
  7079  01B5CE  5043               	movf	dac_spi_control@init^0,w,c
  7080  01B5D0  A4D8               	btfss	status,2,c
  7081  01B5D2  D011               	goto	l10927
  7082                           
  7083                           ; BSR set to: 61
  7084                           ;daq.c: 205:    init = 1;
  7085  01B5D4  0E01               	movlw	1
  7086  01B5D6  6E43               	movwf	dac_spi_control@init^0,c
  7087                           
  7088                           ; BSR set to: 61
  7089                           ;daq.c: 206:    S0 = SPI1CON0;
  7090  01B5D8  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7091                           
  7092                           ; BSR set to: 61
  7093                           ;daq.c: 207:    S1 = SPI1CON1;
  7094  01B5DE  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7095                           
  7096                           ; BSR set to: 61
  7097                           ;daq.c: 208:    S2 = SPI1CON2;
  7098  01B5E4  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7099                           
  7100                           ; BSR set to: 61
  7101                           ;daq.c: 209:    SC = SPI1CLK;
  7102  01B5EA  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7103                           
  7104                           ; BSR set to: 61
  7105                           ;daq.c: 210:    SB = SPI1BAUD;
  7106  01B5F0  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7107  01B5F6                     l10927:
  7108                           
  7109                           ; BSR set to: 61
  7110                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7111  01B5F6  6B15               	clrf	21,b	;volatile
  7112                           
  7113                           ; BSR set to: 61
  7114                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7115  01B5F8  8D15               	bsf	21,6,b	;volatile
  7116                           
  7117                           ; BSR set to: 61
  7118                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7119  01B5FA  9B15               	bcf	21,5,b	;volatile
  7120                           
  7121                           ; BSR set to: 61
  7122                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7123  01B5FC  9F15               	bcf	21,7,b	;volatile
  7124                           
  7125                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7126  01B5FE  0E03               	movlw	3
  7127  01B600  6F16               	movwf	22,b	;volatile
  7128                           
  7129                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7130  01B602  0E0F               	movlw	15
  7131  01B604  6F19               	movwf	25,b	;volatile
  7132                           
  7133                           ; BSR set to: 61
  7134                           ;daq.c: 225:   SPI1CLK = 0x00;
  7135  01B606  6B1C               	clrf	28,b	;volatile
  7136                           
  7137                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7138  01B608  0E83               	movlw	131
  7139  01B60A  6F14               	movwf	20,b	;volatile
  7140  01B60C  D014               	goto	L3
  7141  01B60E                     l10939:
  7142                           
  7143                           ;daq.c: 230:   if (init) {
  7144  01B60E  5043               	movf	dac_spi_control@init^0,w,c
  7145  01B610  B4D8               	btfsc	status,2,c
  7146  01B612  D012               	goto	l1869
  7147                           
  7148                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7149  01B614  013D               	movlb	61	; () banked
  7150  01B616  9F14               	bcf	20,7,b	;volatile
  7151                           
  7152                           ;daq.c: 235:    SPI1CON1 = S1;
  7153  01B618  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7154                           
  7155                           ;daq.c: 236:    SPI1CON2 = S2;
  7156  01B61E  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7157                           
  7158                           ;daq.c: 237:    SPI1CLK = SC;
  7159  01B624  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7160                           
  7161                           ;daq.c: 238:    SPI1BAUD = SB;
  7162  01B62A  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7163                           
  7164                           ;daq.c: 239:    SPI1CON0 = S0;
  7165  01B630  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7166  01B636                     L3:
  7167                           
  7168                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7169  01B636  8F14               	bsf	20,7,b	;volatile
  7170  01B638                     l1869:
  7171                           
  7172                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7173  01B638  52E5               	movf	postdec1,f,c
  7174  01B63A  0012               	return		;funcret
  7175  01B63C                     __end_of_dac_spi_control:
  7176                           	opt callstack 0
  7177                           
  7178 ;; *************** function _init_port_dma *****************
  7179 ;; Defined at:
  7180 ;;		line 104 in file "eadog.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1  [STACK] void 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/1
  7191 ;;		On exit  : 3F/3B
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7198 ;;Total ram usage:        0 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:   15
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_main
  7205 ;; This function uses a reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text9
  7209  01C2E4                     __ptext9:
  7210                           	opt callstack 0
  7211  01C2E4                     _init_port_dma:
  7212                           	opt callstack 15
  7213                           
  7214                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7215                           
  7216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7217                           ;incstack = 0
  7218  01C2E4  0E3F               	movlw	-193
  7219  01C2E6  013B               	movlb	59	; () banked
  7220  01C2E8  17DD               	andwf	221,f,b	;volatile
  7221                           
  7222                           ; BSR set to: 59
  7223                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7224  01C2EA  9BDD               	bcf	221,5,b	;volatile
  7225                           
  7226                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7227  01C2EC  51DD               	movf	221,w,b	;volatile
  7228  01C2EE  0BF9               	andlw	-7
  7229  01C2F0  0902               	iorlw	2
  7230  01C2F2  6FDD               	movwf	221,b	;volatile
  7231                           
  7232                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7233  01C2F4  0EE7               	movlw	-25
  7234  01C2F6  17DD               	andwf	221,f,b	;volatile
  7235                           
  7236                           ; BSR set to: 59
  7237                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7238  01C2F8  81DD               	bsf	221,0,b	;volatile
  7239                           
  7240                           ; BSR set to: 59
  7241                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7242  01C2FA  9DDC               	bcf	220,6,b	;volatile
  7243                           
  7244                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7245  01C2FC  0E3D               	movlw	61
  7246  01C2FE  6FD1               	movwf	209,b	;volatile
  7247  01C300  0EEA               	movlw	234
  7248  01C302  6FD0               	movwf	208,b	;volatile
  7249                           
  7250                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7251  01C304  0EFF               	movlw	low _port_data
  7252  01C306  6FD9               	movwf	217,b	;volatile
  7253  01C308  0E04               	movlw	high _port_data
  7254  01C30A  6FDA               	movwf	218,b	;volatile
  7255  01C30C  0E00               	movlw	low (_port_data shr (0+16))
  7256  01C30E  6FDB               	movwf	219,b	;volatile
  7257                           
  7258                           ; BSR set to: 59
  7259                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7260  01C310  9BDC               	bcf	220,5,b	;volatile
  7261                           
  7262                           ; BSR set to: 59
  7263                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7264  01C312  0012               	return		;funcret
  7265  01C314                     __end_of_init_port_dma:
  7266                           	opt callstack 0
  7267                           
  7268 ;; *************** function _init_display *****************
  7269 ;; Defined at:
  7270 ;;		line 38 in file "eadog.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1  [STACK] void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7279 ;; Tracked objects:
  7280 ;;		On entry : 3F/3B
  7281 ;;		On exit  : 3F/3D
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; Hardware stack levels required when called:   17
  7291 ;; This function calls:
  7292 ;;		_ringBufS_init
  7293 ;;		_send_lcd_cmd
  7294 ;;		_send_lcd_cmd_long
  7295 ;;		_send_lcd_data
  7296 ;;		_wdtdelay
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text10
  7303  01A580                     __ptext10:
  7304                           	opt callstack 0
  7305  01A580                     _init_display:
  7306                           	opt callstack 13
  7307                           
  7308                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7309                           
  7310                           ; BSR set to: 59
  7311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7312                           ;incstack = 0
  7313  01A580  0E83               	movlw	low _ring_buf1
  7314  01A582  0101               	movlb	1	; () banked
  7315  01A584  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7316  01A586  0E03               	movlw	high _ring_buf1
  7317  01A588  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7318                           
  7319                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7320  01A58A  0E40               	movlw	low _ring_buf2
  7321  01A58C  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7322  01A58E  0E03               	movlw	high _ring_buf2
  7323  01A590  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7324                           
  7325                           ; BSR set to: 1
  7326                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7327  01A592  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7328  01A598  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7329  01A59E  EC41  F0E2         	call	_ringBufS_init	;wreg free
  7330                           
  7331                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7332  01A5A2  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7333  01A5A8  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7334  01A5AE  EC41  F0E2         	call	_ringBufS_init	;wreg free
  7335                           
  7336                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7337  01A5B2  84BE               	bsf	190,2,c	;volatile
  7338                           
  7339                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7340  01A5B4  013D               	movlb	61	; () banked
  7341  01A5B6  9F14               	bcf	20,7,b	;volatile
  7342                           
  7343                           ; BSR set to: 61
  7344                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7345  01A5B8  0E20               	movlw	32
  7346  01A5BA  6F15               	movwf	21,b	;volatile
  7347                           
  7348                           ; BSR set to: 61
  7349                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7350  01A5BC  0E03               	movlw	3
  7351  01A5BE  6F16               	movwf	22,b	;volatile
  7352                           
  7353                           ; BSR set to: 61
  7354                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7355  01A5C0  0E04               	movlw	4
  7356  01A5C2  6F19               	movwf	25,b	;volatile
  7357                           
  7358                           ; BSR set to: 61
  7359                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7360  01A5C4  0E02               	movlw	2
  7361  01A5C6  6F1C               	movwf	28,b	;volatile
  7362                           
  7363                           ; BSR set to: 61
  7364                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7365  01A5C8  0E83               	movlw	131
  7366  01A5CA  6F14               	movwf	20,b	;volatile
  7367                           
  7368                           ; BSR set to: 61
  7369                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7370  01A5CC  8F14               	bsf	20,7,b	;volatile
  7371                           
  7372                           ; BSR set to: 61
  7373                           ;eadog.c: 60:  wdtdelay(350000);
  7374  01A5CE  0E30               	movlw	48
  7375  01A5D0  6EE6               	movwf	postinc1,c
  7376  01A5D2  0E57               	movlw	87
  7377  01A5D4  6EE6               	movwf	postinc1,c
  7378  01A5D6  0E05               	movlw	5
  7379  01A5D8  6EE6               	movwf	postinc1,c
  7380  01A5DA  0E00               	movlw	0
  7381  01A5DC  6EE6               	movwf	postinc1,c
  7382  01A5DE  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7386  01A5E2  0E46               	movlw	70
  7387  01A5E4  6EE6               	movwf	postinc1,c
  7388  01A5E6  ECC0  F0DF         	call	_send_lcd_cmd_long	;wreg free
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7392  01A5EA  0E41               	movlw	65
  7393  01A5EC  6EE6               	movwf	postinc1,c
  7394  01A5EE  ECE0  F0DF         	call	_send_lcd_cmd	;wreg free
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;eadog.c: 63:  wdtdelay(80);
  7398  01A5F2  0E50               	movlw	80
  7399  01A5F4  6EE6               	movwf	postinc1,c
  7400  01A5F6  0E00               	movlw	0
  7401  01A5F8  6EE6               	movwf	postinc1,c
  7402  01A5FA  0E00               	movlw	0
  7403  01A5FC  6EE6               	movwf	postinc1,c
  7404  01A5FE  0E00               	movlw	0
  7405  01A600  6EE6               	movwf	postinc1,c
  7406  01A602  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7410  01A606  0E53               	movlw	83
  7411  01A608  6EE6               	movwf	postinc1,c
  7412  01A60A  ECE0  F0DF         	call	_send_lcd_cmd	;wreg free
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;eadog.c: 65:  send_lcd_data(2);
  7416  01A60E  0E02               	movlw	2
  7417  01A610  6EE6               	movwf	postinc1,c
  7418  01A612  EC6E  F0E3         	call	_send_lcd_data	;wreg free
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;eadog.c: 66:  wdtdelay(80);
  7422  01A616  0E50               	movlw	80
  7423  01A618  6EE6               	movwf	postinc1,c
  7424  01A61A  0E00               	movlw	0
  7425  01A61C  6EE6               	movwf	postinc1,c
  7426  01A61E  0E00               	movlw	0
  7427  01A620  6EE6               	movwf	postinc1,c
  7428  01A622  0E00               	movlw	0
  7429  01A624  6EE6               	movwf	postinc1,c
  7430  01A626  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7434  01A62A  0E51               	movlw	81
  7435  01A62C  6EE6               	movwf	postinc1,c
  7436  01A62E  ECC0  F0DF         	call	_send_lcd_cmd_long	;wreg free
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7440  01A632  013D               	movlb	61	; () banked
  7441  01A634  9F14               	bcf	20,7,b	;volatile
  7442                           
  7443                           ; BSR set to: 61
  7444                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7445  01A636  0E02               	movlw	2
  7446  01A638  6F16               	movwf	22,b	;volatile
  7447                           
  7448                           ; BSR set to: 61
  7449                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7450  01A63A  8F14               	bsf	20,7,b	;volatile
  7451                           
  7452                           ; BSR set to: 61
  7453                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7454  01A63C  931A               	bcf	26,1,b	;volatile
  7455                           
  7456                           ; BSR set to: 61
  7457                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7458  01A63E  0E3F               	movlw	-193
  7459  01A640  013B               	movlb	59	; () banked
  7460  01A642  17FD               	andwf	253,f,b	;volatile
  7461                           
  7462                           ; BSR set to: 59
  7463                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7464  01A644  9BFD               	bcf	253,5,b	;volatile
  7465                           
  7466                           ; BSR set to: 59
  7467                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7468  01A646  51FD               	movf	253,w,b	;volatile
  7469  01A648  0BF9               	andlw	-7
  7470  01A64A  0902               	iorlw	2
  7471  01A64C  6FFD               	movwf	253,b	;volatile
  7472                           
  7473                           ; BSR set to: 59
  7474                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7475  01A64E  0EE7               	movlw	-25
  7476  01A650  17FD               	andwf	253,f,b	;volatile
  7477                           
  7478                           ; BSR set to: 59
  7479                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7480  01A652  81FD               	bsf	253,0,b	;volatile
  7481                           
  7482                           ; BSR set to: 59
  7483                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7484  01A654  0E83               	movlw	low _ring_buf1
  7485  01A656  6FF9               	movwf	249,b	;volatile
  7486  01A658  0E03               	movlw	high _ring_buf1
  7487  01A65A  6FFA               	movwf	250,b	;volatile
  7488  01A65C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7489  01A65E  6FFB               	movwf	251,b	;volatile
  7490                           
  7491                           ; BSR set to: 59
  7492                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7493  01A660  9BFC               	bcf	252,5,b	;volatile
  7494                           
  7495                           ; BSR set to: 59
  7496                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7497  01A662  013D               	movlb	61	; () banked
  7498  01A664  831A               	bsf	26,1,b	;volatile
  7499                           
  7500                           ; BSR set to: 61
  7501                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7502  01A666  94BE               	bcf	190,2,c	;volatile
  7503                           
  7504                           ; BSR set to: 61
  7505                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7506  01A668  0012               	return		;funcret
  7507  01A66A                     __end_of_init_display:
  7508                           	opt callstack 0
  7509                           
  7510 ;; *************** function _send_lcd_data *****************
  7511 ;; Defined at:
  7512 ;;		line 123 in file "eadog.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  data            1  [STACK] const unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1  [STACK] void 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7521 ;; Tracked objects:
  7522 ;;		On entry : 3F/0
  7523 ;;		On exit  : 3F/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:   16
  7533 ;; This function calls:
  7534 ;;		_SPI1_Exchange8bit
  7535 ;;		_wdtdelay
  7536 ;; This function is called by:
  7537 ;;		_init_display
  7538 ;; This function uses a reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text11
  7542  01C6DC                     __ptext11:
  7543                           	opt callstack 0
  7544  01C6DC                     _send_lcd_data:
  7545                           	opt callstack 13
  7546                           
  7547                           ; BSR set to: 61
  7548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7549                           ;incstack = 0
  7550                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7551  01C6DC  94BC               	bcf	188,2,c	;volatile
  7552                           
  7553                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7554                           ;stkvar	_data @ sp[(0)+-1]
  7555  01C6DE  0EFF               	movlw	-1
  7556  01C6E0  50E3               	movf	plusw1,w,c
  7557  01C6E2  6EE6               	movwf	postinc1,c
  7558  01C6E4  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7559                           
  7560                           ; BSR set to: 57
  7561                           ;eadog.c: 127:  wdtdelay(8);
  7562  01C6E8  0E08               	movlw	8
  7563  01C6EA  6EE6               	movwf	postinc1,c
  7564  01C6EC  0E00               	movlw	0
  7565  01C6EE  6EE6               	movwf	postinc1,c
  7566  01C6F0  0E00               	movlw	0
  7567  01C6F2  6EE6               	movwf	postinc1,c
  7568  01C6F4  0E00               	movlw	0
  7569  01C6F6  6EE6               	movwf	postinc1,c
  7570  01C6F8  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7571                           
  7572                           ; BSR set to: 0
  7573                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7574  01C6FC  52E5               	movf	postdec1,f,c
  7575  01C6FE  0012               	return		;funcret
  7576  01C700                     __end_of_send_lcd_data:
  7577                           	opt callstack 0
  7578                           
  7579 ;; *************** function _send_lcd_cmd_long *****************
  7580 ;; Defined at:
  7581 ;;		line 139 in file "eadog.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  cmd             1  [STACK] const unsigned char 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1  [STACK] void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7590 ;; Tracked objects:
  7591 ;;		On entry : 3F/0
  7592 ;;		On exit  : 3F/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7599 ;;Total ram usage:        0 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   16
  7602 ;; This function calls:
  7603 ;;		_SPI1_Exchange8bit
  7604 ;;		_wdtdelay
  7605 ;; This function is called by:
  7606 ;;		_init_display
  7607 ;; This function uses a reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text12
  7611  01BF80                     __ptext12:
  7612                           	opt callstack 0
  7613  01BF80                     _send_lcd_cmd_long:
  7614                           	opt callstack 13
  7615                           
  7616                           ; BSR set to: 0
  7617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7618                           ;incstack = 0
  7619                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7620  01BF80  94BC               	bcf	188,2,c	;volatile
  7621                           
  7622                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7623  01BF82  0EFE               	movlw	254
  7624  01BF84  6EE6               	movwf	postinc1,c
  7625  01BF86  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7626                           
  7627                           ; BSR set to: 57
  7628                           ;eadog.c: 143:  wdtdelay(8);
  7629  01BF8A  0E08               	movlw	8
  7630  01BF8C  6EE6               	movwf	postinc1,c
  7631  01BF8E  0E00               	movlw	0
  7632  01BF90  6EE6               	movwf	postinc1,c
  7633  01BF92  0E00               	movlw	0
  7634  01BF94  6EE6               	movwf	postinc1,c
  7635  01BF96  0E00               	movlw	0
  7636  01BF98  6EE6               	movwf	postinc1,c
  7637  01BF9A  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7641                           ;stkvar	_cmd @ sp[(0)+-1]
  7642  01BF9E  0EFF               	movlw	-1
  7643  01BFA0  50E3               	movf	plusw1,w,c
  7644  01BFA2  6EE6               	movwf	postinc1,c
  7645  01BFA4  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7646                           
  7647                           ;eadog.c: 145:  wdtdelay(800);
  7648  01BFA8  0E20               	movlw	32
  7649  01BFAA  6EE6               	movwf	postinc1,c
  7650  01BFAC  0E03               	movlw	3
  7651  01BFAE  6EE6               	movwf	postinc1,c
  7652  01BFB0  0E00               	movlw	0
  7653  01BFB2  6EE6               	movwf	postinc1,c
  7654  01BFB4  0E00               	movlw	0
  7655  01BFB6  6EE6               	movwf	postinc1,c
  7656  01BFB8  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7657                           
  7658                           ; BSR set to: 0
  7659                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7660  01BFBC  52E5               	movf	postdec1,f,c
  7661  01BFBE  0012               	return		;funcret
  7662  01BFC0                     __end_of_send_lcd_cmd_long:
  7663                           	opt callstack 0
  7664                           
  7665 ;; *************** function _send_lcd_cmd *****************
  7666 ;; Defined at:
  7667 ;;		line 130 in file "eadog.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  cmd             1  [STACK] const unsigned char 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1  [STACK] void 
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7676 ;; Tracked objects:
  7677 ;;		On entry : 3F/0
  7678 ;;		On exit  : 3F/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:   16
  7688 ;; This function calls:
  7689 ;;		_SPI1_Exchange8bit
  7690 ;;		_wdtdelay
  7691 ;; This function is called by:
  7692 ;;		_init_display
  7693 ;; This function uses a reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text13
  7697  01BFC0                     __ptext13:
  7698                           	opt callstack 0
  7699  01BFC0                     _send_lcd_cmd:
  7700                           	opt callstack 13
  7701                           
  7702                           ; BSR set to: 0
  7703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7704                           ;incstack = 0
  7705                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7706  01BFC0  94BC               	bcf	188,2,c	;volatile
  7707                           
  7708                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7709  01BFC2  0EFE               	movlw	254
  7710  01BFC4  6EE6               	movwf	postinc1,c
  7711  01BFC6  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7712                           
  7713                           ; BSR set to: 57
  7714                           ;eadog.c: 134:  wdtdelay(8);
  7715  01BFCA  0E08               	movlw	8
  7716  01BFCC  6EE6               	movwf	postinc1,c
  7717  01BFCE  0E00               	movlw	0
  7718  01BFD0  6EE6               	movwf	postinc1,c
  7719  01BFD2  0E00               	movlw	0
  7720  01BFD4  6EE6               	movwf	postinc1,c
  7721  01BFD6  0E00               	movlw	0
  7722  01BFD8  6EE6               	movwf	postinc1,c
  7723  01BFDA  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7727                           ;stkvar	_cmd @ sp[(0)+-1]
  7728  01BFDE  0EFF               	movlw	-1
  7729  01BFE0  50E3               	movf	plusw1,w,c
  7730  01BFE2  6EE6               	movwf	postinc1,c
  7731  01BFE4  EC2D  F0E4         	call	_SPI1_Exchange8bit	;wreg free
  7732                           
  7733                           ;eadog.c: 136:  wdtdelay(8);
  7734  01BFE8  0E08               	movlw	8
  7735  01BFEA  6EE6               	movwf	postinc1,c
  7736  01BFEC  0E00               	movlw	0
  7737  01BFEE  6EE6               	movwf	postinc1,c
  7738  01BFF0  0E00               	movlw	0
  7739  01BFF2  6EE6               	movwf	postinc1,c
  7740  01BFF4  0E00               	movlw	0
  7741  01BFF6  6EE6               	movwf	postinc1,c
  7742  01BFF8  EC8A  F0DD         	call	_wdtdelay	;wreg free
  7743                           
  7744                           ; BSR set to: 0
  7745                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7746  01BFFC  52E5               	movf	postdec1,f,c
  7747  01BFFE  0012               	return		;funcret
  7748  01C000                     __end_of_send_lcd_cmd:
  7749                           	opt callstack 0
  7750                           
  7751 ;; *************** function _SPI1_Exchange8bit *****************
  7752 ;; Defined at:
  7753 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  data            1  [STACK] unsigned char 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1  [STACK] unsigned char 
  7760 ;; Registers used:
  7761 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 3F/39
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7771 ;;Total ram usage:        0 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:   15
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		_send_lcd_data
  7778 ;;		_send_lcd_cmd
  7779 ;;		_send_lcd_cmd_long
  7780 ;;		_set_dac
  7781 ;; This function uses a reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text14
  7785  01C85A                     __ptext14:
  7786                           	opt callstack 0
  7787  01C85A                     _SPI1_Exchange8bit:
  7788                           	opt callstack 14
  7789                           
  7790                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7791                           
  7792                           ; BSR set to: 0
  7793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7794                           ;incstack = 0
  7795  01C85A  0E01               	movlw	1
  7796  01C85C  013D               	movlb	61	; () banked
  7797  01C85E  6F12               	movwf	18,b	;volatile
  7798                           
  7799                           ; BSR set to: 61
  7800                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7801                           ;stkvar	_data @ sp[(0)+-1]
  7802  01C860  0EFF               	movlw	-1
  7803  01C862  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7804  01C868                     l807:
  7805                           
  7806                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7807  01C868  0139               	movlb	57	; () banked
  7808  01C86A  A9A2               	btfss	162,4,b	;volatile
  7809  01C86C  D7FD               	goto	l807
  7810                           
  7811                           ; BSR set to: 57
  7812                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7813  01C86E  006F F440  F001    	movff	15632,btemp	;volatile
  7814                           
  7815                           ; BSR set to: 57
  7816                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7817  01C874  52E5               	movf	postdec1,f,c
  7818  01C876  0012               	return		;funcret
  7819  01C878                     __end_of_SPI1_Exchange8bit:
  7820                           	opt callstack 0
  7821                           
  7822 ;; *************** function _ringBufS_init *****************
  7823 ;; Defined at:
  7824 ;;		line 22 in file "ringbufs.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  _this           2  [STACK] PTR volatile struct ring
  7827 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;		None
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1  [STACK] void 
  7832 ;; Registers used:
  7833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/1
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;Total ram usage:        0 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:   16
  7846 ;; This function calls:
  7847 ;;		_memset
  7848 ;; This function is called by:
  7849 ;;		_init_display
  7850 ;; This function uses a reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text15
  7854  01C482                     __ptext15:
  7855                           	opt callstack 0
  7856  01C482                     _ringBufS_init:
  7857                           	opt callstack 13
  7858                           
  7859                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7860                           
  7861                           ; BSR set to: 57
  7862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7863                           ;incstack = 0
  7864  01C482  0E43               	movlw	67
  7865  01C484  6EE6               	movwf	postinc1,c
  7866  01C486  0E00               	movlw	0
  7867  01C488  6EE6               	movwf	postinc1,c
  7868  01C48A  0E00               	movlw	0
  7869  01C48C  6EE6               	movwf	postinc1,c
  7870  01C48E  0E00               	movlw	0
  7871  01C490  6EE6               	movwf	postinc1,c
  7872                           
  7873                           ;stkvar	__this @ sp[(-4)+-2]
  7874  01C492  0EFA               	movlw	-6
  7875  01C494  006F FF8F FFE6     	movff	plusw1,postinc1
  7876  01C49A  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  01C4A0  EC5D  F0B7         	call	_memset	;wreg free
  7878                           
  7879                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7880  01C4A4  52E5               	movf	postdec1,f,c
  7881  01C4A6  52E5               	movf	postdec1,f,c
  7882  01C4A8  0012               	return		;funcret
  7883  01C4AA                     __end_of_ringBufS_init:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function _init_bsoc *****************
  7887 ;; Defined at:
  7888 ;;		line 110 in file "bsoc.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;		None
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1  [STACK] void 
  7895 ;; Registers used:
  7896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7906 ;;Total ram usage:        0 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:   18
  7909 ;; This function calls:
  7910 ;;		_TMR3_SetInterruptHandler
  7911 ;;		_Volts_to_SOC
  7912 ;;		___fldiv
  7913 ;;		___flmul
  7914 ;;		___fltol
  7915 ;;		___xxtofl
  7916 ;;		_conv_raw_result
  7917 ;; This function is called by:
  7918 ;;		_main
  7919 ;; This function uses a reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text16
  7923  017ECA                     __ptext16:
  7924                           	opt callstack 0
  7925  017ECA                     _init_bsoc:
  7926                           	opt callstack 12
  7927                           
  7928                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7929                           
  7930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7931                           ;incstack = 0
  7932  017ECA  0E00               	movlw	0
  7933  017ECC  6EE6               	movwf	postinc1,c
  7934  017ECE  0E00               	movlw	0
  7935  017ED0  6EE6               	movwf	postinc1,c
  7936  017ED2  0E7A               	movlw	122
  7937  017ED4  6EE6               	movwf	postinc1,c
  7938  017ED6  0E44               	movlw	68
  7939  017ED8  6EE6               	movwf	postinc1,c
  7940  017EDA  0E00               	movlw	0
  7941  017EDC  6EE6               	movwf	postinc1,c
  7942  017EDE  0E04               	movlw	4
  7943  017EE0  6EE6               	movwf	postinc1,c
  7944  017EE2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  7945  017EE6  0060  F007  FFE6   	movff	btemp,postinc1
  7946  017EEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7947  017EF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7948  017EF8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7949  017EFE  ECCD  F0C9         	call	___fltol	;wreg free
  7950  017F02  0060  F007  FFE6   	movff	btemp,postinc1
  7951  017F08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7952  017F0E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7953  017F14  0060  F013  FFE6   	movff	btemp+3,postinc1
  7954  017F1A  0E00               	movlw	0
  7955  017F1C  6EE6               	movwf	postinc1,c
  7956  017F1E  ECCF  F0C4         	call	___xxtofl	;wreg free
  7957  017F22  0060  F007  FFE6   	movff	btemp,postinc1
  7958  017F28  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7959  017F2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7960  017F34  0060  F013  FFE6   	movff	btemp+3,postinc1
  7961  017F3A  EC20  F09F         	call	___flmul	;wreg free
  7962  017F3E  0060  F007  FFE6   	movff	btemp,postinc1
  7963  017F44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7964  017F4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7965  017F50  0060  F013  FFE6   	movff	btemp+3,postinc1
  7966  017F56  ECCD  F0C9         	call	___fltol	;wreg free
  7967  017F5A  0060  F007  FFE6   	movff	btemp,postinc1
  7968  017F60  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7969  017F66  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7970  017F6C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7971  017F72  ECAE  F0D5         	call	_Volts_to_SOC	;wreg free
  7972  017F76  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7973  017F7C  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7974                           
  7975                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7976  017F82  EE21  F38B         	lfsr	2,_C+140	;volatile
  7977  017F86  006F FF7B FFE6     	movff	postinc2,postinc1
  7978  017F8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7979  017F92  006F FF7B FFE6     	movff	postinc2,postinc1
  7980  017F98  006F FF7B FFE6     	movff	postinc2,postinc1
  7981  017F9E  0E00               	movlw	0
  7982  017FA0  6EE6               	movwf	postinc1,c
  7983  017FA2  0E00               	movlw	0
  7984  017FA4  6EE6               	movwf	postinc1,c
  7985  017FA6  0EC8               	movlw	200
  7986  017FA8  6EE6               	movwf	postinc1,c
  7987  017FAA  0E42               	movlw	66
  7988  017FAC  6EE6               	movwf	postinc1,c
  7989  017FAE  0E00               	movlw	0
  7990  017FB0  6EE6               	movwf	postinc1,c
  7991  017FB2  0E00               	movlw	0
  7992  017FB4  6EE6               	movwf	postinc1,c
  7993  017FB6  0E7A               	movlw	122
  7994  017FB8  6EE6               	movwf	postinc1,c
  7995  017FBA  0E44               	movlw	68
  7996  017FBC  6EE6               	movwf	postinc1,c
  7997  017FBE  0E00               	movlw	0
  7998  017FC0  6EE6               	movwf	postinc1,c
  7999  017FC2  0E04               	movlw	4
  8000  017FC4  6EE6               	movwf	postinc1,c
  8001  017FC6  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8002  017FCA  0060  F007  FFE6   	movff	btemp,postinc1
  8003  017FD0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8004  017FD6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8005  017FDC  0060  F013  FFE6   	movff	btemp+3,postinc1
  8006  017FE2  ECCD  F0C9         	call	___fltol	;wreg free
  8007  017FE6  0060  F007  FFE6   	movff	btemp,postinc1
  8008  017FEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8009  017FF2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8010  017FF8  0060  F013  FFE6   	movff	btemp+3,postinc1
  8011  017FFE  0E00               	movlw	0
  8012  018000  6EE6               	movwf	postinc1,c
  8013  018002  ECCF  F0C4         	call	___xxtofl	;wreg free
  8014  018006  0060  F007  FFE6   	movff	btemp,postinc1
  8015  01800C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8016  018012  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8017  018018  0060  F013  FFE6   	movff	btemp+3,postinc1
  8018  01801E  EC20  F09F         	call	___flmul	;wreg free
  8019  018022  0060  F007  FFE6   	movff	btemp,postinc1
  8020  018028  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8021  01802E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8022  018034  0060  F013  FFE6   	movff	btemp+3,postinc1
  8023  01803A  ECCD  F0C9         	call	___fltol	;wreg free
  8024  01803E  0060  F007  FFE6   	movff	btemp,postinc1
  8025  018044  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8026  01804A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8027  018050  0060  F013  FFE6   	movff	btemp+3,postinc1
  8028  018056  ECAE  F0D5         	call	_Volts_to_SOC	;wreg free
  8029  01805A  0060  F004  F00B   	movff	btemp,btemp+10
  8030  018060  0060  F008  F00C   	movff	btemp+1,btemp+11
  8031  018066  500B               	movf	(btemp+10)^0,w,c
  8032  018068  6E05               	movwf	(btemp+4)^0,c
  8033  01806A  500C               	movf	(btemp+11)^0,w,c
  8034  01806C  6E06               	movwf	(btemp+5)^0,c
  8035  01806E  6A07               	clrf	(btemp+6)^0,c
  8036  018070  6A08               	clrf	(btemp+7)^0,c
  8037  018072  0060  F017  FFE6   	movff	btemp+4,postinc1
  8038  018078  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8039  01807E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8040  018084  0060  F023  FFE6   	movff	btemp+7,postinc1
  8041  01808A  0E00               	movlw	0
  8042  01808C  6EE6               	movwf	postinc1,c
  8043  01808E  ECCF  F0C4         	call	___xxtofl	;wreg free
  8044  018092  0060  F007  FFE6   	movff	btemp,postinc1
  8045  018098  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8046  01809E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8047  0180A4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8048  0180AA  EC13  F0A7         	call	___fldiv	;wreg free
  8049  0180AE  0060  F007  FFE6   	movff	btemp,postinc1
  8050  0180B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8051  0180BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8052  0180C0  0060  F013  FFE6   	movff	btemp+3,postinc1
  8053  0180C6  EC20  F09F         	call	___flmul	;wreg free
  8054  0180CA  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8055  0180D0  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8056  0180D6  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8057  0180DC  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8058                           
  8059                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8060  0180E2  EE21  F38F         	lfsr	2,_C+144	;volatile
  8061  0180E6  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8062  0180EC  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8063  0180F2  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8064  0180F8  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8065                           
  8066                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8067  0180FE  0ED2               	movlw	low _calc_bsoc
  8068  018100  6EE6               	movwf	postinc1,c
  8069  018102  0E33               	movlw	high _calc_bsoc
  8070  018104  6EE6               	movwf	postinc1,c
  8071  018106  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8072  018108  6EE6               	movwf	postinc1,c
  8073  01810A  ECCD  F0E2         	call	_TMR3_SetInterruptHandler	;wreg free
  8074                           
  8075                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8076  01810E  0012               	return		;funcret
  8077  018110                     __end_of_init_bsoc:
  8078                           	opt callstack 0
  8079                           
  8080 ;; *************** function _Volts_to_SOC *****************
  8081 ;; Defined at:
  8082 ;;		line 175 in file "bsoc.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  cvoltage        4  [STACK] const unsigned long 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  soc             2  [STACK] unsigned short 
  8087 ;;  slot            1  [STACK] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  2  [STACK] unsigned short 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:   15
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_init_bsoc
  8108 ;; This function uses a reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text17
  8112  01AB5C                     __ptext17:
  8113                           	opt callstack 0
  8114  01AB5C                     _Volts_to_SOC:
  8115                           	opt callstack 0
  8116                           
  8117                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8118  01AB5C  52E6               	movf	postinc1,f,c
  8119  01AB5E  52E6               	movf	postinc1,f,c
  8120  01AB60  52E6               	movf	postinc1,f,c
  8121                           
  8122                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8123                           ;stkvar	_soc @ sp[(-3)+0]
  8124                           
  8125                           ;incstack = 0
  8126  01AB62  0EFD               	movlw	-3
  8127  01AB64  6AE3               	clrf	plusw1,c
  8128  01AB66  0EFE               	movlw	-2
  8129  01AB68  6AE3               	clrf	plusw1,c
  8130                           
  8131                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8132                           ;stkvar	_slot @ sp[(-3)+2]
  8133  01AB6A  0EFF               	movlw	-1
  8134  01AB6C  6AE3               	clrf	plusw1,c
  8135  01AB6E                     l11115:
  8136                           
  8137                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8138                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8139                           ;stkvar	_slot @ sp[(-3)+2]
  8140  01AB6E  0EFF               	movlw	-1
  8141  01AB70  50E3               	movf	plusw1,w,c
  8142  01AB72  0D08               	mullw	8
  8143  01AB74  0E37               	movlw	low _BVSOC_TABLE
  8144  01AB76  24F3               	addwf	243,w,c
  8145  01AB78  6EF6               	movwf	tblptrl,c
  8146  01AB7A  0EF9               	movlw	high _BVSOC_TABLE
  8147  01AB7C  20F4               	addwfc	244,w,c
  8148  01AB7E  6EF7               	movwf	tblptrh,c
  8149  01AB80                     	if	1	;There are 3 active tblptr bytes
  8150  01AB80  6AF8               	clrf	tblptru,c
  8151  01AB82  0E00               	movlw	low (__mediumconst shr (0+16))
  8152  01AB84  22F8               	addwfc	tblptru,f,c
  8153  01AB86                     	endif
  8154  01AB86  0EF9               	movlw	-7
  8155  01AB88  50E3               	movf	plusw1,w,c
  8156  01AB8A  0009               	tblrd		*+
  8157  01AB8C  5CF5               	subwf	tablat,w,c
  8158  01AB8E  0EFA               	movlw	-6
  8159  01AB90  50E3               	movf	plusw1,w,c
  8160  01AB92  0009               	tblrd		*+
  8161  01AB94  58F5               	subwfb	tablat,w,c
  8162  01AB96  0EFB               	movlw	-5
  8163  01AB98  50E3               	movf	plusw1,w,c
  8164  01AB9A  0009               	tblrd		*+
  8165  01AB9C  58F5               	subwfb	tablat,w,c
  8166  01AB9E  0EFC               	movlw	-4
  8167  01ABA0  50E3               	movf	plusw1,w,c
  8168  01ABA2  0009               	tblrd		*+
  8169  01ABA4  58F5               	subwfb	tablat,w,c
  8170  01ABA6  B0D8               	btfsc	status,0,c
  8171  01ABA8  D020               	goto	l11119
  8172                           
  8173                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8174                           ;stkvar	_slot @ sp[(-3)+2]
  8175  01ABAA  0EFF               	movlw	-1
  8176  01ABAC  50E3               	movf	plusw1,w,c
  8177  01ABAE  0D08               	mullw	8
  8178  01ABB0  0E04               	movlw	4
  8179  01ABB2  26F3               	addwf	243,f,c
  8180  01ABB4  0E00               	movlw	0
  8181  01ABB6  22F4               	addwfc	244,f,c
  8182  01ABB8  0E37               	movlw	low _BVSOC_TABLE
  8183  01ABBA  24F3               	addwf	243,w,c
  8184  01ABBC  6EF6               	movwf	tblptrl,c
  8185  01ABBE  0EF9               	movlw	high _BVSOC_TABLE
  8186  01ABC0  20F4               	addwfc	244,w,c
  8187  01ABC2  6EF7               	movwf	tblptrh,c
  8188  01ABC4                     	if	1	;There are 3 active tblptr bytes
  8189  01ABC4  6AF8               	clrf	tblptru,c
  8190  01ABC6  0E00               	movlw	low (__mediumconst shr (0+16))
  8191  01ABC8  22F8               	addwfc	tblptru,f,c
  8192  01ABCA                     	endif
  8193  01ABCA  0009               	tblrd		*+
  8194  01ABCC  006F FFD4  F00B    	movff	tablat,btemp+10
  8195  01ABD2  0009               	tblrd		*+
  8196  01ABD4  006F FFD4  F00C    	movff	tablat,btemp+11
  8197                           
  8198                           ;stkvar	_soc @ sp[(-3)+0]
  8199  01ABDA  0EFD               	movlw	-3
  8200  01ABDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8201  01ABE2  0EFE               	movlw	-2
  8202  01ABE4  0060  F033  FFE3   	movff	btemp+11,plusw1
  8203  01ABEA                     l11119:
  8204                           
  8205                           ;bsoc.c: 187:  }
  8206                           ;stkvar	_slot @ sp[(-3)+2]
  8207  01ABEA  0EFF               	movlw	-1
  8208  01ABEC  2AE3               	incf	plusw1,f,c
  8209                           
  8210                           ;stkvar	_slot @ sp[(-3)+2]
  8211  01ABEE  0EFF               	movlw	-1
  8212  01ABF0  006F FF8C  F001    	movff	plusw1,btemp
  8213  01ABF6  0E19               	movlw	25
  8214  01ABF8  6401               	cpfsgt	btemp^0,c
  8215  01ABFA  D7B9               	goto	l11115
  8216                           
  8217                           ;bsoc.c: 188:  return soc;
  8218                           ;stkvar	_soc @ sp[(-3)+0]
  8219  01ABFC  0EFD               	movlw	-3
  8220  01ABFE  006F FF8C  F001    	movff	plusw1,btemp
  8221  01AC04  0EFE               	movlw	-2
  8222  01AC06  006F FF8C  F002    	movff	plusw1,btemp+1
  8223                           
  8224                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8225  01AC0C  0EF9               	movlw	249
  8226  01AC0E  26E1               	addwf	fsr1l,f,c
  8227  01AC10  0EFF               	movlw	255
  8228  01AC12  22E2               	addwfc	fsr1h,f,c
  8229  01AC14  0012               	return		;funcret
  8230  01AC16                     __end_of_Volts_to_SOC:
  8231                           	opt callstack 0
  8232                           
  8233 ;; *************** function _hid_display *****************
  8234 ;; Defined at:
  8235 ;;		line 22 in file "hid.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  h               2  [STACK] PTR struct H_data
  8238 ;;		 -> H(9), 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  2  [STACK] PTR struct H_data
  8243 ;; Registers used:
  8244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8245 ;; Tracked objects:
  8246 ;;		On entry : 3F/39
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8254 ;;Total ram usage:        0 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:   17
  8257 ;; This function calls:
  8258 ;;		_hid_input
  8259 ;; This function is called by:
  8260 ;;		_main
  8261 ;; This function uses a reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text18
  8265  018570                     __ptext18:
  8266                           	opt callstack 0
  8267  018570                     _hid_display:
  8268                           	opt callstack 13
  8269                           
  8270                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8271                           ;stkvar	_h @ sp[(0)+-2]
  8272                           
  8273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8274                           ;incstack = 0
  8275  018570  0EFE               	movlw	-2
  8276  018572  006F FF8F FFE6     	movff	plusw1,postinc1
  8277  018578  006F FF8F FFE6     	movff	plusw1,postinc1
  8278  01857E  ECD1  F0CD         	call	_hid_input	;wreg free
  8279                           
  8280                           ;hid.c: 26:  switch (h->h_state) {
  8281  018582  D0E6               	goto	l13609
  8282  018584                     l13583:
  8283                           
  8284                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8285                           ;stkvar	_h @ sp[(0)+-2]
  8286  018584  0EFE               	movlw	-2
  8287  018586  006F FF8C  F00B    	movff	plusw1,btemp+10
  8288  01858C  0EFF               	movlw	-1
  8289  01858E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8290  018594  0E01               	movlw	1
  8291  018596  240B               	addwf	(btemp+10)^0,w,c
  8292  018598  6ED9               	movwf	fsr2l,c
  8293  01859A  0E00               	movlw	0
  8294  01859C  200C               	addwfc	(btemp+11)^0,w,c
  8295  01859E  6EDA               	movwf	fsr2h,c
  8296  0185A0  0E01               	movlw	1
  8297  0185A2  6EDF               	movwf	indf2,c
  8298                           
  8299                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8300                           ;stkvar	_h @ sp[(0)+-2]
  8301  0185A4  0EFE               	movlw	-2
  8302  0185A6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8303  0185AC  0EFF               	movlw	-1
  8304  0185AE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8305  0185B4  0E00               	movlw	0
  8306  0185B6  6EDF               	movwf	indf2,c
  8307                           
  8308                           ;hid.c: 30:   h->wait_enter = 1;
  8309                           ;stkvar	_h @ sp[(0)+-2]
  8310  0185B8  0EFE               	movlw	-2
  8311  0185BA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8312  0185C0  0EFF               	movlw	-1
  8313  0185C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8314  0185C8  0E04               	movlw	4
  8315  0185CA  240B               	addwf	(btemp+10)^0,w,c
  8316  0185CC  6ED9               	movwf	fsr2l,c
  8317  0185CE  0E00               	movlw	0
  8318  0185D0  200C               	addwfc	(btemp+11)^0,w,c
  8319  0185D2  6EDA               	movwf	fsr2h,c
  8320  0185D4  0E01               	movlw	1
  8321  0185D6  6EDF               	movwf	indf2,c
  8322                           
  8323                           ;hid.c: 31:   h->wait_select = 1;
  8324                           ;stkvar	_h @ sp[(0)+-2]
  8325  0185D8  0EFE               	movlw	-2
  8326  0185DA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8327  0185E0  0EFF               	movlw	-1
  8328  0185E2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8329  0185E8  0E02               	movlw	2
  8330  0185EA  240B               	addwf	(btemp+10)^0,w,c
  8331  0185EC  6ED9               	movwf	fsr2l,c
  8332  0185EE  0E00               	movlw	0
  8333  0185F0  200C               	addwfc	(btemp+11)^0,w,c
  8334  0185F2  6EDA               	movwf	fsr2h,c
  8335  0185F4  0E01               	movlw	1
  8336  0185F6  6EDF               	movwf	indf2,c
  8337                           
  8338                           ;hid.c: 32:   h->wait_calib = 1;
  8339                           ;stkvar	_h @ sp[(0)+-2]
  8340  0185F8  0EFE               	movlw	-2
  8341  0185FA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8342  018600  0EFF               	movlw	-1
  8343  018602  006F FF8C  F00C    	movff	plusw1,btemp+11
  8344  018608  0E06               	movlw	6
  8345  01860A  240B               	addwf	(btemp+10)^0,w,c
  8346  01860C  6ED9               	movwf	fsr2l,c
  8347  01860E  0E00               	movlw	0
  8348  018610  200C               	addwfc	(btemp+11)^0,w,c
  8349  018612  6EDA               	movwf	fsr2h,c
  8350  018614  0E01               	movlw	1
  8351  018616  6EDF               	movwf	indf2,c
  8352                           
  8353                           ;hid.c: 33:   h->select_p = SW_OFF;
  8354                           ;stkvar	_h @ sp[(0)+-2]
  8355  018618  0EFE               	movlw	-2
  8356  01861A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8357  018620  0EFF               	movlw	-1
  8358  018622  006F FF8C  F00C    	movff	plusw1,btemp+11
  8359  018628  0E03               	movlw	3
  8360  01862A  240B               	addwf	(btemp+10)^0,w,c
  8361  01862C  6ED9               	movwf	fsr2l,c
  8362  01862E  0E00               	movlw	0
  8363  018630  200C               	addwfc	(btemp+11)^0,w,c
  8364  018632  6EDA               	movwf	fsr2h,c
  8365  018634  0E00               	movlw	0
  8366  018636  6EDF               	movwf	indf2,c
  8367                           
  8368                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8369                           ;stkvar	_h @ sp[(0)+-2]
  8370  018638  0EFE               	movlw	-2
  8371  01863A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8372  018640  0EFF               	movlw	-1
  8373  018642  006F FF8C  F00C    	movff	plusw1,btemp+11
  8374  018648  0E05               	movlw	5
  8375  01864A  240B               	addwf	(btemp+10)^0,w,c
  8376  01864C  6ED9               	movwf	fsr2l,c
  8377  01864E  0E00               	movlw	0
  8378  018650  200C               	addwfc	(btemp+11)^0,w,c
  8379  018652  6EDA               	movwf	fsr2h,c
  8380  018654  0E00               	movlw	0
  8381  018656  6EDF               	movwf	indf2,c
  8382                           
  8383                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8384                           ;stkvar	_h @ sp[(0)+-2]
  8385  018658  0EFE               	movlw	-2
  8386  01865A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8387  018660  0EFF               	movlw	-1
  8388  018662  006F FF8C  F00C    	movff	plusw1,btemp+11
  8389  018668  0E07               	movlw	7
  8390  01866A  240B               	addwf	(btemp+10)^0,w,c
  8391  01866C  6ED9               	movwf	fsr2l,c
  8392  01866E  0E00               	movlw	0
  8393  018670  200C               	addwfc	(btemp+11)^0,w,c
  8394  018672  6EDA               	movwf	fsr2h,c
  8395  018674  0E00               	movlw	0
  8396  018676  D06A               	goto	L4
  8397  018678                     l13599:
  8398                           
  8399                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8400                           ;stkvar	_h @ sp[(0)+-2]
  8401  018678  0EFE               	movlw	-2
  8402  01867A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8403  018680  0EFF               	movlw	-1
  8404  018682  006F FF8C  F00C    	movff	plusw1,btemp+11
  8405  018688  0E02               	movlw	2
  8406  01868A  240B               	addwf	(btemp+10)^0,w,c
  8407  01868C  6ED9               	movwf	fsr2l,c
  8408  01868E  0E00               	movlw	0
  8409  018690  200C               	addwfc	(btemp+11)^0,w,c
  8410  018692  6EDA               	movwf	fsr2h,c
  8411  018694  50DF               	movf	indf2,w,c
  8412  018696  A4D8               	btfss	status,2,c
  8413  018698  D076               	goto	l2084
  8414                           
  8415                           ;stkvar	_h @ sp[(0)+-2]
  8416  01869A  0EFE               	movlw	-2
  8417  01869C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8418  0186A2  0EFF               	movlw	-1
  8419  0186A4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8420  0186AA  0E03               	movlw	3
  8421  0186AC  240B               	addwf	(btemp+10)^0,w,c
  8422  0186AE  6ED9               	movwf	fsr2l,c
  8423  0186B0  0E00               	movlw	0
  8424  0186B2  200C               	addwfc	(btemp+11)^0,w,c
  8425  0186B4  6EDA               	movwf	fsr2h,c
  8426  0186B6  50DF               	movf	indf2,w,c
  8427  0186B8  A4D8               	btfss	status,2,c
  8428  0186BA  D065               	goto	l2084
  8429                           
  8430                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8431                           ;stkvar	_h @ sp[(0)+-2]
  8432  0186BC  0EFE               	movlw	-2
  8433  0186BE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8434  0186C4  0EFF               	movlw	-1
  8435  0186C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8436  0186CC  0E08               	movlw	8
  8437  0186CE  240B               	addwf	(btemp+10)^0,w,c
  8438  0186D0  6ED9               	movwf	fsr2l,c
  8439  0186D2  0E00               	movlw	0
  8440  0186D4  200C               	addwfc	(btemp+11)^0,w,c
  8441  0186D6  6EDA               	movwf	fsr2h,c
  8442                           
  8443                           ;stkvar	_h @ sp[(0)+-2]
  8444  0186D8  0EFE               	movlw	-2
  8445  0186DA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8446  0186E0  0EFF               	movlw	-1
  8447  0186E2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8448  0186E8  0E08               	movlw	8
  8449  0186EA  240B               	addwf	(btemp+10)^0,w,c
  8450  0186EC  6EE9               	movwf	fsr0l,c
  8451  0186EE  0E00               	movlw	0
  8452  0186F0  200C               	addwfc	(btemp+11)^0,w,c
  8453  0186F2  6EEA               	movwf	fsr0h,c
  8454  0186F4  2AEF               	incf	indf0,f,c
  8455  0186F6  50EF               	movf	indf0,w,c
  8456  0186F8  0B03               	andlw	3
  8457  0186FA  6EDF               	movwf	indf2,c
  8458                           
  8459                           ;hid.c: 41:    h->hid_display = h->sequence;
  8460                           ;stkvar	_h @ sp[(0)+-2]
  8461  0186FC  0EFE               	movlw	-2
  8462  0186FE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8463  018704  0EFF               	movlw	-1
  8464  018706  006F FF8C  F00C    	movff	plusw1,btemp+11
  8465  01870C  0E08               	movlw	8
  8466  01870E  240B               	addwf	(btemp+10)^0,w,c
  8467  018710  6ED9               	movwf	fsr2l,c
  8468  018712  0E00               	movlw	0
  8469  018714  200C               	addwfc	(btemp+11)^0,w,c
  8470  018716  6EDA               	movwf	fsr2h,c
  8471                           
  8472                           ;stkvar	_h @ sp[(0)+-2]
  8473  018718  0EFE               	movlw	-2
  8474  01871A  006F FF8F FFE9     	movff	plusw1,fsr0l
  8475  018720  0EFF               	movlw	-1
  8476  018722  006F FF8F FFEA     	movff	plusw1,fsr0h
  8477  018728  006F FF7F FFEF     	movff	indf2,indf0
  8478                           
  8479                           ;hid.c: 42:    h->wait_select = 1;
  8480                           ;stkvar	_h @ sp[(0)+-2]
  8481  01872E  0EFE               	movlw	-2
  8482  018730  006F FF8C  F00B    	movff	plusw1,btemp+10
  8483  018736  0EFF               	movlw	-1
  8484  018738  006F FF8C  F00C    	movff	plusw1,btemp+11
  8485  01873E  0E02               	movlw	2
  8486  018740  240B               	addwf	(btemp+10)^0,w,c
  8487  018742  6ED9               	movwf	fsr2l,c
  8488  018744  0E00               	movlw	0
  8489  018746  200C               	addwfc	(btemp+11)^0,w,c
  8490  018748  6EDA               	movwf	fsr2h,c
  8491  01874A  0E01               	movlw	1
  8492  01874C                     L4:
  8493  01874C  6EDF               	movwf	indf2,c
  8494  01874E  D01B               	goto	l2084
  8495  018750                     l13609:
  8496                           
  8497                           ;stkvar	_h @ sp[(0)+-2]
  8498  018750  0EFE               	movlw	-2
  8499  018752  006F FF8C  F00B    	movff	plusw1,btemp+10
  8500  018758  0EFF               	movlw	-1
  8501  01875A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8502  018760  0E01               	movlw	1
  8503  018762  240B               	addwf	(btemp+10)^0,w,c
  8504  018764  6ED9               	movwf	fsr2l,c
  8505  018766  0E00               	movlw	0
  8506  018768  200C               	addwfc	(btemp+11)^0,w,c
  8507  01876A  6EDA               	movwf	fsr2h,c
  8508  01876C  50DF               	movf	indf2,w,c
  8509  01876E  6E0B               	movwf	(btemp+10)^0,c
  8510  018770  6A0C               	clrf	(btemp+11)^0,c
  8511                           
  8512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8513                           ; Switch size 1, requested type "simple"
  8514                           ; Number of cases is 1, Range of values is 0 to 0
  8515                           ; switch strategies available:
  8516                           ; Name         Instructions Cycles
  8517                           ; simple_byte            4     3 (average)
  8518                           ;	Chosen strategy is simple_byte
  8519  018772  500C               	movf	(btemp+11)^0,w,c
  8520  018774  0A00               	xorlw	0	; case 0
  8521  018776  A4D8               	btfss	status,2,c
  8522  018778  D77F               	goto	l13599
  8523                           
  8524                           ; Switch size 1, requested type "simple"
  8525                           ; Number of cases is 2, Range of values is 0 to 1
  8526                           ; switch strategies available:
  8527                           ; Name         Instructions Cycles
  8528                           ; simple_byte            7     4 (average)
  8529                           ;	Chosen strategy is simple_byte
  8530  01877A  500B               	movf	(btemp+10)^0,w,c
  8531  01877C  0A00               	xorlw	0	; case 0
  8532  01877E  B4D8               	btfsc	status,2,c
  8533  018780  D701               	goto	l13583
  8534  018782  0A01               	xorlw	1	; case 1
  8535  018784  D779               	goto	l13599
  8536  018786                     l2084:
  8537                           
  8538                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8539  018786  52E5               	movf	postdec1,f,c
  8540  018788  52E5               	movf	postdec1,f,c
  8541  01878A  0012               	return		;funcret
  8542  01878C                     __end_of_hid_display:
  8543                           	opt callstack 0
  8544                           
  8545 ;; *************** function _hid_input *****************
  8546 ;; Defined at:
  8547 ;;		line 3 in file "hid.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  h               2  [STACK] PTR struct H_data
  8550 ;;		 -> H(9), 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  2  [STACK] PTR struct H_data
  8555 ;; Registers used:
  8556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/39
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   16
  8569 ;; This function calls:
  8570 ;;		_get_switch
  8571 ;; This function is called by:
  8572 ;;		_hid_display
  8573 ;; This function uses a reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text19
  8577  019BA2                     __ptext19:
  8578                           	opt callstack 0
  8579  019BA2                     _hid_input:
  8580                           	opt callstack 13
  8581                           
  8582                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8583                           
  8584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8585                           ;incstack = 0
  8586  019BA2  0E02               	movlw	2
  8587  019BA4  6EE6               	movwf	postinc1,c
  8588  019BA6  ECE9  F0E1         	call	_get_switch	;wreg free
  8589  019BAA  5001               	movf	btemp^0,w,c
  8590  019BAC  B4D8               	btfsc	status,2,c
  8591  019BAE  D02C               	goto	l13371
  8592                           
  8593                           ;hid.c: 6:   h->wait_select = 0;
  8594                           ;stkvar	_h @ sp[(0)+-2]
  8595  019BB0  0EFE               	movlw	-2
  8596  019BB2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8597  019BB8  0EFF               	movlw	-1
  8598  019BBA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8599  019BC0  0E02               	movlw	2
  8600  019BC2  240B               	addwf	(btemp+10)^0,w,c
  8601  019BC4  6ED9               	movwf	fsr2l,c
  8602  019BC6  0E00               	movlw	0
  8603  019BC8  200C               	addwfc	(btemp+11)^0,w,c
  8604  019BCA  6EDA               	movwf	fsr2h,c
  8605  019BCC  0E00               	movlw	0
  8606  019BCE  6EDF               	movwf	indf2,c
  8607                           
  8608                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8609  019BD0  0E02               	movlw	2
  8610  019BD2  6EE6               	movwf	postinc1,c
  8611  019BD4  ECE9  F0E1         	call	_get_switch	;wreg free
  8612  019BD8  5001               	movf	btemp^0,w,c
  8613  019BDA  B4D8               	btfsc	status,2,c
  8614  019BDC  D003               	goto	u12770
  8615  019BDE  6A0C               	clrf	(btemp+11)^0,c
  8616  019BE0  2A0C               	incf	(btemp+11)^0,f,c
  8617  019BE2  D001               	goto	u12788
  8618  019BE4                     u12770:
  8619  019BE4  6A0C               	clrf	(btemp+11)^0,c
  8620  019BE6                     u12788:
  8621                           
  8622                           ;stkvar	_h @ sp[(0)+-2]
  8623  019BE6  0EFE               	movlw	-2
  8624  019BE8  006F FF8C  F009    	movff	plusw1,btemp+8
  8625  019BEE  0EFF               	movlw	-1
  8626  019BF0  006F FF8C  F00A    	movff	plusw1,btemp+9
  8627  019BF6  0E03               	movlw	3
  8628  019BF8  2409               	addwf	(btemp+8)^0,w,c
  8629  019BFA  6ED9               	movwf	fsr2l,c
  8630  019BFC  0E00               	movlw	0
  8631  019BFE  200A               	addwfc	(btemp+9)^0,w,c
  8632  019C00  6EDA               	movwf	fsr2h,c
  8633  019C02  0060  F033  FFDF   	movff	btemp+11,indf2
  8634  019C08                     l13371:
  8635                           
  8636                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8637  019C08  0E03               	movlw	3
  8638  019C0A  6EE6               	movwf	postinc1,c
  8639  019C0C  ECE9  F0E1         	call	_get_switch	;wreg free
  8640  019C10  5001               	movf	btemp^0,w,c
  8641  019C12  B4D8               	btfsc	status,2,c
  8642  019C14  D02C               	goto	l13377
  8643                           
  8644                           ;hid.c: 11:   h->wait_enter = 0;
  8645                           ;stkvar	_h @ sp[(0)+-2]
  8646  019C16  0EFE               	movlw	-2
  8647  019C18  006F FF8C  F00B    	movff	plusw1,btemp+10
  8648  019C1E  0EFF               	movlw	-1
  8649  019C20  006F FF8C  F00C    	movff	plusw1,btemp+11
  8650  019C26  0E04               	movlw	4
  8651  019C28  240B               	addwf	(btemp+10)^0,w,c
  8652  019C2A  6ED9               	movwf	fsr2l,c
  8653  019C2C  0E00               	movlw	0
  8654  019C2E  200C               	addwfc	(btemp+11)^0,w,c
  8655  019C30  6EDA               	movwf	fsr2h,c
  8656  019C32  0E00               	movlw	0
  8657  019C34  6EDF               	movwf	indf2,c
  8658                           
  8659                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8660  019C36  0E03               	movlw	3
  8661  019C38  6EE6               	movwf	postinc1,c
  8662  019C3A  ECE9  F0E1         	call	_get_switch	;wreg free
  8663  019C3E  5001               	movf	btemp^0,w,c
  8664  019C40  B4D8               	btfsc	status,2,c
  8665  019C42  D003               	goto	u12800
  8666  019C44  6A0C               	clrf	(btemp+11)^0,c
  8667  019C46  2A0C               	incf	(btemp+11)^0,f,c
  8668  019C48  D001               	goto	u12818
  8669  019C4A                     u12800:
  8670  019C4A  6A0C               	clrf	(btemp+11)^0,c
  8671  019C4C                     u12818:
  8672                           
  8673                           ;stkvar	_h @ sp[(0)+-2]
  8674  019C4C  0EFE               	movlw	-2
  8675  019C4E  006F FF8C  F009    	movff	plusw1,btemp+8
  8676  019C54  0EFF               	movlw	-1
  8677  019C56  006F FF8C  F00A    	movff	plusw1,btemp+9
  8678  019C5C  0E05               	movlw	5
  8679  019C5E  2409               	addwf	(btemp+8)^0,w,c
  8680  019C60  6ED9               	movwf	fsr2l,c
  8681  019C62  0E00               	movlw	0
  8682  019C64  200A               	addwfc	(btemp+9)^0,w,c
  8683  019C66  6EDA               	movwf	fsr2h,c
  8684  019C68  0060  F033  FFDF   	movff	btemp+11,indf2
  8685  019C6E                     l13377:
  8686                           
  8687                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8688  019C6E  0E04               	movlw	4
  8689  019C70  6EE6               	movwf	postinc1,c
  8690  019C72  ECE9  F0E1         	call	_get_switch	;wreg free
  8691  019C76  5001               	movf	btemp^0,w,c
  8692  019C78  B4D8               	btfsc	status,2,c
  8693  019C7A  D02C               	goto	l2075
  8694                           
  8695                           ;hid.c: 16:   h->wait_calib = 0;
  8696                           ;stkvar	_h @ sp[(0)+-2]
  8697  019C7C  0EFE               	movlw	-2
  8698  019C7E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8699  019C84  0EFF               	movlw	-1
  8700  019C86  006F FF8C  F00C    	movff	plusw1,btemp+11
  8701  019C8C  0E06               	movlw	6
  8702  019C8E  240B               	addwf	(btemp+10)^0,w,c
  8703  019C90  6ED9               	movwf	fsr2l,c
  8704  019C92  0E00               	movlw	0
  8705  019C94  200C               	addwfc	(btemp+11)^0,w,c
  8706  019C96  6EDA               	movwf	fsr2h,c
  8707  019C98  0E00               	movlw	0
  8708  019C9A  6EDF               	movwf	indf2,c
  8709                           
  8710                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8711  019C9C  0E04               	movlw	4
  8712  019C9E  6EE6               	movwf	postinc1,c
  8713  019CA0  ECE9  F0E1         	call	_get_switch	;wreg free
  8714  019CA4  5001               	movf	btemp^0,w,c
  8715  019CA6  B4D8               	btfsc	status,2,c
  8716  019CA8  D003               	goto	u12830
  8717  019CAA  6A0C               	clrf	(btemp+11)^0,c
  8718  019CAC  2A0C               	incf	(btemp+11)^0,f,c
  8719  019CAE  D001               	goto	u12848
  8720  019CB0                     u12830:
  8721  019CB0  6A0C               	clrf	(btemp+11)^0,c
  8722  019CB2                     u12848:
  8723                           
  8724                           ;stkvar	_h @ sp[(0)+-2]
  8725  019CB2  0EFE               	movlw	-2
  8726  019CB4  006F FF8C  F009    	movff	plusw1,btemp+8
  8727  019CBA  0EFF               	movlw	-1
  8728  019CBC  006F FF8C  F00A    	movff	plusw1,btemp+9
  8729  019CC2  0E07               	movlw	7
  8730  019CC4  2409               	addwf	(btemp+8)^0,w,c
  8731  019CC6  6ED9               	movwf	fsr2l,c
  8732  019CC8  0E00               	movlw	0
  8733  019CCA  200A               	addwfc	(btemp+9)^0,w,c
  8734  019CCC  6EDA               	movwf	fsr2h,c
  8735  019CCE  0060  F033  FFDF   	movff	btemp+11,indf2
  8736  019CD4                     l2075:
  8737                           
  8738                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8739  019CD4  52E5               	movf	postdec1,f,c
  8740  019CD6  52E5               	movf	postdec1,f,c
  8741  019CD8  0012               	return		;funcret
  8742  019CDA                     __end_of_hid_input:
  8743                           	opt callstack 0
  8744                           
  8745 ;; *************** function _esr_check *****************
  8746 ;; Defined at:
  8747 ;;		line 197 in file "bsoc.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  fsm             1  [STACK] const unsigned char 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;		None
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  4  [STACK] float 
  8754 ;; Registers used:
  8755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;Total ram usage:        0 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:   18
  8768 ;; This function calls:
  8769 ;;		_StartTimer
  8770 ;;		_TimerDone
  8771 ;;		___fldiv
  8772 ;;		___flsub
  8773 ;;		_conv_raw_result
  8774 ;;		_fabsf
  8775 ;;		_set_load_relay_one
  8776 ;;		_set_load_relay_two
  8777 ;;		_update_adc_result
  8778 ;; This function is called by:
  8779 ;;		_main
  8780 ;; This function uses a reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text20
  8784  0171A6                     __ptext20:
  8785                           	opt callstack 0
  8786  0171A6                     _esr_check:
  8787                           	opt callstack 12
  8788                           
  8789                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8790                           ;stkvar	_fsm @ sp[(0)+-1]
  8791                           
  8792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8793                           ;incstack = 0
  8794  0171A6  0EFF               	movlw	-1
  8795  0171A8  50E3               	movf	plusw1,w,c
  8796  0171AA  B4D8               	btfsc	status,2,c
  8797  0171AC  D149               	goto	l11455
  8798                           
  8799                           ;bsoc.c: 202:   esr_state = 0;
  8800  0171AE  0100               	movlb	0	; () banked
  8801  0171B0  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;bsoc.c: 203:   return -10.0;
  8805  0171B2  0E00               	movlw	0
  8806  0171B4  6E01               	movwf	btemp^0,c
  8807  0171B6  0E00               	movlw	0
  8808  0171B8  6E02               	movwf	(btemp+1)^0,c
  8809  0171BA  0E20               	movlw	32
  8810  0171BC  6E03               	movwf	(btemp+2)^0,c
  8811  0171BE  0EC1               	movlw	193
  8812  0171C0  D15B               	goto	L5
  8813  0171C2                     l11387:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8817  0171C2  0E10               	movlw	16
  8818  0171C4  6EE6               	movwf	postinc1,c
  8819  0171C6  0E27               	movlw	39
  8820  0171C8  6EE6               	movwf	postinc1,c
  8821  0171CA  0E0C               	movlw	12
  8822  0171CC  6EE6               	movwf	postinc1,c
  8823  0171CE  EC00  F0E0         	call	_StartTimer	;wreg free
  8824  0171D2                     l11389:
  8825                           
  8826                           ;bsoc.c: 209:   esr_state++;
  8827  0171D2  0100               	movlb	0	; () banked
  8828  0171D4  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8829                           
  8830                           ;bsoc.c: 210:   break;
  8831  0171D6  D149               	goto	l11457
  8832  0171D8                     l11391:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;bsoc.c: 215:   set_load_relay_one(0);
  8836  0171D8  0E00               	movlw	0
  8837  0171DA  6EE6               	movwf	postinc1,c
  8838  0171DC  ECE7  F0E4         	call	_set_load_relay_one	;wreg free
  8839                           
  8840                           ;bsoc.c: 216:   set_load_relay_two(0);
  8841  0171E0  0E00               	movlw	0
  8842  0171E2  6EE6               	movwf	postinc1,c
  8843  0171E4  ECDF  F0E4         	call	_set_load_relay_two	;wreg free
  8844                           
  8845                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8846  0171E8  0E0C               	movlw	12
  8847  0171EA  6EE6               	movwf	postinc1,c
  8848  0171EC  EC55  F0E2         	call	_TimerDone	;wreg free
  8849  0171F0  5001               	movf	btemp^0,w,c
  8850  0171F2  B4D8               	btfsc	status,2,c
  8851  0171F4  D009               	goto	l11397
  8852                           
  8853                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8854  0171F6  0E10               	movlw	16
  8855  0171F8  6EE6               	movwf	postinc1,c
  8856  0171FA  0E27               	movlw	39
  8857  0171FC  6EE6               	movwf	postinc1,c
  8858  0171FE  0E0C               	movlw	12
  8859  017200  6EE6               	movwf	postinc1,c
  8860  017202  EC00  F0E0         	call	_StartTimer	;wreg free
  8861                           
  8862                           ;bsoc.c: 219:   } else {
  8863  017206  D006               	goto	l11401
  8864  017208                     l11397:
  8865                           
  8866                           ;bsoc.c: 220:    return -2.0;
  8867  017208  0E00               	movlw	0
  8868  01720A  6E01               	movwf	btemp^0,c
  8869  01720C  0E00               	movlw	0
  8870  01720E  6E02               	movwf	(btemp+1)^0,c
  8871  017210  0E00               	movlw	0
  8872  017212  D066               	goto	L7
  8873  017214                     l11401:
  8874                           
  8875                           ;bsoc.c: 225:   update_adc_result();
  8876  017214  EC7F  F0E0         	call	_update_adc_result	;wreg free
  8877                           
  8878                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8879  017218  0E00               	movlw	0
  8880  01721A  6EE6               	movwf	postinc1,c
  8881  01721C  0E04               	movlw	4
  8882  01721E  6EE6               	movwf	postinc1,c
  8883  017220  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8884  017224  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8885  01722A  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8886  017230  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8887  017236  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8888  01723C  D7CA               	goto	l11389
  8889  01723E                     l11407:
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;bsoc.c: 230:   set_load_relay_one(1);
  8893  01723E  0E01               	movlw	1
  8894  017240  6EE6               	movwf	postinc1,c
  8895  017242  ECE7  F0E4         	call	_set_load_relay_one	;wreg free
  8896                           
  8897                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8898  017246  0E0C               	movlw	12
  8899  017248  6EE6               	movwf	postinc1,c
  8900  01724A  EC55  F0E2         	call	_TimerDone	;wreg free
  8901  01724E  5001               	movf	btemp^0,w,c
  8902  017250  B4D8               	btfsc	status,2,c
  8903  017252  D009               	goto	l11413
  8904                           
  8905                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8906  017254  0E10               	movlw	16
  8907  017256  6EE6               	movwf	postinc1,c
  8908  017258  0E27               	movlw	39
  8909  01725A  6EE6               	movwf	postinc1,c
  8910  01725C  0E0C               	movlw	12
  8911  01725E  6EE6               	movwf	postinc1,c
  8912  017260  EC00  F0E0         	call	_StartTimer	;wreg free
  8913                           
  8914                           ;bsoc.c: 233:   } else {
  8915  017264  D006               	goto	l11417
  8916  017266                     l11413:
  8917                           
  8918                           ;bsoc.c: 234:    return -3.0;
  8919  017266  0E00               	movlw	0
  8920  017268  6E01               	movwf	btemp^0,c
  8921  01726A  0E00               	movlw	0
  8922  01726C  6E02               	movwf	(btemp+1)^0,c
  8923  01726E  0E40               	movlw	64
  8924  017270  D037               	goto	L7
  8925  017272                     l11417:
  8926                           
  8927                           ;bsoc.c: 237:   update_adc_result();
  8928  017272  EC7F  F0E0         	call	_update_adc_result	;wreg free
  8929                           
  8930                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8931  017276  0E00               	movlw	0
  8932  017278  6EE6               	movwf	postinc1,c
  8933  01727A  0E04               	movlw	4
  8934  01727C  6EE6               	movwf	postinc1,c
  8935  01727E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8936  017282  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8937  017288  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8938  01728E  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8939  017294  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8940                           
  8941                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8942  01729A  0E00               	movlw	0
  8943  01729C  6EE6               	movwf	postinc1,c
  8944  01729E  0E00               	movlw	0
  8945  0172A0  6EE6               	movwf	postinc1,c
  8946  0172A2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8947  0172A6  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8948  0172AC  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8949  0172B2  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8950  0172B8  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8951  0172BE  D789               	goto	l11389
  8952  0172C0                     l11425:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;bsoc.c: 243:   set_load_relay_two(1);
  8956  0172C0  0E01               	movlw	1
  8957  0172C2  6EE6               	movwf	postinc1,c
  8958  0172C4  ECDF  F0E4         	call	_set_load_relay_two	;wreg free
  8959                           
  8960                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  8961  0172C8  0E0C               	movlw	12
  8962  0172CA  6EE6               	movwf	postinc1,c
  8963  0172CC  EC55  F0E2         	call	_TimerDone	;wreg free
  8964  0172D0  5001               	movf	btemp^0,w,c
  8965  0172D2  A4D8               	btfss	status,2,c
  8966  0172D4  D008               	goto	l11433
  8967                           
  8968                           ;bsoc.c: 245:    return -4.0;
  8969  0172D6  0E00               	movlw	0
  8970  0172D8  6E01               	movwf	btemp^0,c
  8971  0172DA  0E00               	movlw	0
  8972  0172DC  6E02               	movwf	(btemp+1)^0,c
  8973  0172DE  0E80               	movlw	128
  8974  0172E0                     L7:
  8975  0172E0  6E03               	movwf	(btemp+2)^0,c
  8976  0172E2  0EC0               	movlw	192
  8977  0172E4  D0C9               	goto	L5
  8978  0172E6                     l11433:
  8979                           
  8980                           ;bsoc.c: 247:   update_adc_result();
  8981  0172E6  EC7F  F0E0         	call	_update_adc_result	;wreg free
  8982                           
  8983                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8984  0172EA  0E00               	movlw	0
  8985  0172EC  6EE6               	movwf	postinc1,c
  8986  0172EE  0E04               	movlw	4
  8987  0172F0  6EE6               	movwf	postinc1,c
  8988  0172F2  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  8989  0172F6  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8990  0172FC  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8991  017302  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8992  017308  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8993                           
  8994                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8995  01730E  0E00               	movlw	0
  8996  017310  6EE6               	movwf	postinc1,c
  8997  017312  0E00               	movlw	0
  8998  017314  6EE6               	movwf	postinc1,c
  8999  017316  ECD0  F0A9         	call	_conv_raw_result	;wreg free
  9000  01731A  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9001  017320  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9002  017326  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9003  01732C  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9004                           
  9005                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9006  017332  EE22  F011         	lfsr	2,_C+274	;volatile
  9007  017336  006F FF7B FFE6     	movff	postinc2,postinc1
  9008  01733C  006F FF7B FFE6     	movff	postinc2,postinc1
  9009  017342  006F FF7B FFE6     	movff	postinc2,postinc1
  9010  017348  006F FF7B FFE6     	movff	postinc2,postinc1
  9011  01734E  EE22  F00D         	lfsr	2,_C+270	;volatile
  9012  017352  006F FF7B FFE6     	movff	postinc2,postinc1
  9013  017358  006F FF7B FFE6     	movff	postinc2,postinc1
  9014  01735E  006F FF7B FFE6     	movff	postinc2,postinc1
  9015  017364  006F FF7B FFE6     	movff	postinc2,postinc1
  9016  01736A  EC5A  F0DF         	call	___flsub	;wreg free
  9017  01736E  0060  F007  FFE6   	movff	btemp,postinc1
  9018  017374  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9019  01737A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9020  017380  0060  F013  FFE6   	movff	btemp+3,postinc1
  9021  017386  EE22  F01D         	lfsr	2,_C+286	;volatile
  9022  01738A  006F FF7B FFE6     	movff	postinc2,postinc1
  9023  017390  006F FF7B FFE6     	movff	postinc2,postinc1
  9024  017396  006F FF7B FFE6     	movff	postinc2,postinc1
  9025  01739C  006F FF7B FFE6     	movff	postinc2,postinc1
  9026  0173A2  EE22  F019         	lfsr	2,_C+282	;volatile
  9027  0173A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9028  0173AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9029  0173B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9030  0173B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9031  0173BE  EC5A  F0DF         	call	___flsub	;wreg free
  9032  0173C2  0060  F007  FFE6   	movff	btemp,postinc1
  9033  0173C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9034  0173CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9035  0173D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9036  0173DA  EC13  F0A7         	call	___fldiv	;wreg free
  9037  0173DE  0060  F007  FFE6   	movff	btemp,postinc1
  9038  0173E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9039  0173EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9040  0173F0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9041  0173F6  ECC2  F0D6         	call	_fabsf	;wreg free
  9042  0173FA  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9043  017400  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9044  017406  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9045  01740C  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9046                           
  9047                           ;bsoc.c: 252:   set_load_relay_one(0);
  9048  017412  0E00               	movlw	0
  9049  017414  6EE6               	movwf	postinc1,c
  9050  017416  ECE7  F0E4         	call	_set_load_relay_one	;wreg free
  9051                           
  9052                           ;bsoc.c: 253:   set_load_relay_two(0);
  9053  01741A  0E00               	movlw	0
  9054  01741C  6EE6               	movwf	postinc1,c
  9055  01741E  ECDF  F0E4         	call	_set_load_relay_two	;wreg free
  9056                           
  9057                           ;bsoc.c: 254:   esr_state = 0;
  9058  017422  0100               	movlb	0	; () banked
  9059  017424  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;bsoc.c: 255:   return C.esr;
  9063  017426  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9064  01742C  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9065  017432  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9066  017438  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9067  01743E  D01D               	goto	l2200
  9068  017440                     l11455:
  9069  017440  0100               	movlb	0	; () banked
  9070  017442  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9071  017444  6E0B               	movwf	(btemp+10)^0,c
  9072  017446  6A0C               	clrf	(btemp+11)^0,c
  9073                           
  9074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9075                           ; Switch size 1, requested type "simple"
  9076                           ; Number of cases is 1, Range of values is 0 to 0
  9077                           ; switch strategies available:
  9078                           ; Name         Instructions Cycles
  9079                           ; simple_byte            4     3 (average)
  9080                           ;	Chosen strategy is simple_byte
  9081  017448  500C               	movf	(btemp+11)^0,w,c
  9082  01744A  0A00               	xorlw	0	; case 0
  9083  01744C  A4D8               	btfss	status,2,c
  9084  01744E  D00D               	goto	l11457
  9085                           
  9086                           ; BSR set to: 0
  9087                           ; Switch size 1, requested type "simple"
  9088                           ; Number of cases is 4, Range of values is 0 to 3
  9089                           ; switch strategies available:
  9090                           ; Name         Instructions Cycles
  9091                           ; simple_byte           13     7 (average)
  9092                           ;	Chosen strategy is simple_byte
  9093  017450  500B               	movf	(btemp+10)^0,w,c
  9094  017452  0A00               	xorlw	0	; case 0
  9095  017454  B4D8               	btfsc	status,2,c
  9096  017456  D6B5               	goto	l11387
  9097  017458  0A01               	xorlw	1	; case 1
  9098  01745A  B4D8               	btfsc	status,2,c
  9099  01745C  D6BD               	goto	l11391
  9100  01745E  0A03               	xorlw	3	; case 2
  9101  017460  B4D8               	btfsc	status,2,c
  9102  017462  D6ED               	goto	l11407
  9103  017464  0A01               	xorlw	1	; case 3
  9104  017466  B4D8               	btfsc	status,2,c
  9105  017468  D72B               	goto	l11425
  9106  01746A                     l11457:
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;bsoc.c: 260:  return -1.0;
  9110  01746A  0E00               	movlw	0
  9111  01746C  6E01               	movwf	btemp^0,c
  9112  01746E  0E00               	movlw	0
  9113  017470  6E02               	movwf	(btemp+1)^0,c
  9114  017472  0E80               	movlw	128
  9115  017474  6E03               	movwf	(btemp+2)^0,c
  9116  017476  0EBF               	movlw	191
  9117  017478                     L5:
  9118  017478  6E04               	movwf	(btemp+3)^0,c
  9119  01747A                     l2200:
  9120                           
  9121                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9122  01747A  52E5               	movf	postdec1,f,c
  9123  01747C  0012               	return		;funcret
  9124  01747E                     __end_of_esr_check:
  9125                           	opt callstack 0
  9126                           
  9127 ;; *************** function _update_adc_result *****************
  9128 ;; Defined at:
  9129 ;;		line 99 in file "daq.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1  [STACK] _Bool 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:   17
  9150 ;; This function calls:
  9151 ;;		_StartTimer
  9152 ;;		_TimerDone
  9153 ;;		_check_adc_scan
  9154 ;;		_clear_adc_scan
  9155 ;;		_start_adc_scan
  9156 ;; This function is called by:
  9157 ;;		_esr_check
  9158 ;; This function uses a reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text21
  9162  01C0FE                     __ptext21:
  9163                           	opt callstack 0
  9164  01C0FE                     _update_adc_result:
  9165                           	opt callstack 12
  9166                           
  9167                           ;daq.c: 101:  if (R.done) {
  9168                           
  9169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9170                           ;incstack = 0
  9171  01C0FE  0100               	movlb	0	; () banked
  9172  01C100  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9173  01C102  B4D8               	btfsc	status,2,c
  9174  01C104  0012               	return	
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;daq.c: 102:   clear_adc_scan();
  9178  01C106  EC53  F0E5         	call	_clear_adc_scan	;wreg free
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;daq.c: 103:   start_adc_scan();
  9182  01C10A  EC99  F0DC         	call	_start_adc_scan	;wreg free
  9183                           
  9184                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9185  01C10E  0EC8               	movlw	200
  9186  01C110  6EE6               	movwf	postinc1,c
  9187  01C112  0E00               	movlw	0
  9188  01C114  6EE6               	movwf	postinc1,c
  9189  01C116  0E01               	movlw	1
  9190  01C118  6EE6               	movwf	postinc1,c
  9191  01C11A  EC00  F0E0         	call	_StartTimer	;wreg free
  9192  01C11E                     l10903:
  9193  01C11E  0E01               	movlw	1
  9194  01C120  6EE6               	movwf	postinc1,c
  9195  01C122  EC55  F0E2         	call	_TimerDone	;wreg free
  9196  01C126  5001               	movf	btemp^0,w,c
  9197  01C128  A4D8               	btfss	status,2,c
  9198  01C12A  0012               	return	
  9199  01C12C  EC43  F0E5         	call	_check_adc_scan	;wreg free
  9200  01C130  5001               	movf	btemp^0,w,c
  9201  01C132  A4D8               	btfss	status,2,c
  9202  01C134  0012               	return	
  9203  01C136  D7F3               	goto	l10903
  9204  01C138                     __end_of_update_adc_result:
  9205                           	opt callstack 0
  9206                           
  9207 ;; *************** function _start_adc_scan *****************
  9208 ;; Defined at:
  9209 ;;		line 60 in file "daq.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;		None
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1  [STACK] _Bool 
  9216 ;; Registers used:
  9217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 1/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9227 ;;Total ram usage:        0 bytes
  9228 ;; Hardware stack levels used:    1
  9229 ;; Hardware stack levels required when called:   16
  9230 ;; This function calls:
  9231 ;;		_ADCC_DischargeSampleCapacitor
  9232 ;;		_ADCC_SetADIInterruptHandler
  9233 ;;		_ADCC_SetADTIInterruptHandler
  9234 ;;		_ADCC_StartConversion
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;;		_update_adc_result
  9238 ;; This function uses a reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text22
  9242  01B932                     __ptext22:
  9243                           	opt callstack 0
  9244  01B932                     _start_adc_scan:
  9245                           	opt callstack 14
  9246                           
  9247                           ;daq.c: 62:  if (R.done)
  9248                           
  9249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9250                           ;incstack = 0
  9251  01B932  0100               	movlb	0	; () banked
  9252  01B934  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9253  01B936  A4D8               	btfss	status,2,c
  9254  01B938  0012               	return	
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;daq.c: 65:  R.scan_index = 0;
  9258  01B93A  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9262  01B93C  013A               	movlb	58	; () banked
  9263  01B93E  5140               	movf	64,w,b	;volatile
  9264  01B940  006E F940  F001    	movff	14928,btemp	;volatile
  9265  01B946  6A02               	clrf	(btemp+1)^0,c
  9266  01B948  0060  F004  F002   	movff	btemp,btemp+1
  9267  01B94E  6A01               	clrf	btemp^0,c
  9268  01B950  2601               	addwf	btemp^0,f,c
  9269  01B952  0E00               	movlw	0
  9270  01B954  2202               	addwfc	(btemp+1)^0,f,c
  9271  01B956  0E77               	movlw	119
  9272  01B958  1401               	andwf	btemp^0,w,c
  9273  01B95A  0100               	movlb	0	; () banked
  9274  01B95C  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9275  01B95E  0E3C               	movlw	60
  9276  01B960  1402               	andwf	(btemp+1)^0,w,c
  9277  01B962  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9281  01B964  0ECE               	movlw	low _adc_int_handler
  9282  01B966  6EE6               	movwf	postinc1,c
  9283  01B968  0ECA               	movlw	high _adc_int_handler
  9284  01B96A  6EE6               	movwf	postinc1,c
  9285  01B96C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9286  01B96E  6EE6               	movwf	postinc1,c
  9287  01B970  EC1D  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9288                           
  9289                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9290  01B974  0E44               	movlw	low _adc_int_t_handler
  9291  01B976  6EE6               	movwf	postinc1,c
  9292  01B978  0EB5               	movlw	high _adc_int_t_handler
  9293  01B97A  6EE6               	movwf	postinc1,c
  9294  01B97C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9295  01B97E  6EE6               	movwf	postinc1,c
  9296  01B980  EC09  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9297                           
  9298                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
  9299  01B984  EC3F  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9300                           
  9301                           ; BSR set to: 62
  9302                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
  9303  01B988  0100               	movlb	0	; () banked
  9304  01B98A  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9305  01B98C  0B0F               	andlw	15
  9306  01B98E  6EE6               	movwf	postinc1,c
  9307  01B990  ECD6  F0E4         	call	_ADCC_StartConversion	;wreg free
  9308                           
  9309                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9310  01B994  0012               	return		;funcret
  9311  01B996                     __end_of_start_adc_scan:
  9312                           	opt callstack 0
  9313                           
  9314 ;; *************** function _ADCC_StartConversion *****************
  9315 ;; Defined at:
  9316 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  channel         1  [STACK] enum E16136
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1  [STACK] void 
  9323 ;; Registers used:
  9324 ;;		fsr1l, fsr1h
  9325 ;; Tracked objects:
  9326 ;;		On entry : 3F/0
  9327 ;;		On exit  : 3F/3E
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:   15
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_start_adc_scan
  9341 ;;		_adc_int_t_handler
  9342 ;; This function uses a reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text23
  9346  01C9AC                     __ptext23:
  9347                           	opt callstack 0
  9348  01C9AC                     _ADCC_StartConversion:
  9349                           	opt callstack 0
  9350                           
  9351                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9352                           ;stkvar	_channel @ sp[(0)+-1]
  9353                           
  9354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9355                           ;incstack = 0
  9356 ;; hardware stack exceeded
  9357  01C9AC  0EFF               	movlw	-1
  9358  01C9AE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9359                           
  9360                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9361  01C9B4  013E               	movlb	62	; () banked
  9362  01C9B6  8FF8               	bsf	248,7,b	;volatile
  9363                           
  9364                           ; BSR set to: 62
  9365                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9366  01C9B8  81F8               	bsf	248,0,b	;volatile
  9367                           
  9368                           ; BSR set to: 62
  9369                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9370  01C9BA  52E5               	movf	postdec1,f,c
  9371  01C9BC  0012               	return		;funcret
  9372  01C9BE                     __end_of_ADCC_StartConversion:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9376 ;; Defined at:
  9377 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1  [STACK] void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 3F/3E
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   15
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_start_adc_scan
  9402 ;;		_adc_int_t_handler
  9403 ;; This function uses a reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text24
  9407  01CA7E                     __ptext24:
  9408                           	opt callstack 0
  9409  01CA7E                     _ADCC_DischargeSampleCapacitor:
  9410                           	opt callstack 0
  9411                           
  9412                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9413                           
  9414                           ; BSR set to: 62
  9415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9416                           ;incstack = 0
  9417 ;; hardware stack exceeded
  9418  01CA7E  0E3B               	movlw	59
  9419  01CA80  013E               	movlb	62	; () banked
  9420  01CA82  6FF1               	movwf	241,b	;volatile
  9421                           
  9422                           ; BSR set to: 62
  9423                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9424  01CA84  0012               	return		;funcret
  9425  01CA86                     __end_of_ADCC_DischargeSampleCapacitor:
  9426                           	opt callstack 0
  9427                           
  9428 ;; *************** function _clear_adc_scan *****************
  9429 ;; Defined at:
  9430 ;;		line 91 in file "daq.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;		None
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1  [STACK] void 
  9437 ;; Registers used:
  9438 ;;		None
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 3F/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9448 ;;Total ram usage:        0 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:   15
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_main
  9455 ;;		_update_adc_result
  9456 ;; This function uses a reentrant model
  9457 ;;
  9458                           
  9459                           	psect	text25
  9460  01CAA6                     __ptext25:
  9461                           	opt callstack 0
  9462  01CAA6                     _clear_adc_scan:
  9463                           	opt callstack 13
  9464                           
  9465                           ;daq.c: 93:  R.done = 0;
  9466                           
  9467                           ; BSR set to: 62
  9468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9469                           ;incstack = 0
  9470  01CAA6  0100               	movlb	0	; () banked
  9471  01CAA8  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9472                           
  9473                           ; BSR set to: 0
  9474                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9475  01CAAA  0012               	return		;funcret
  9476  01CAAC                     __end_of_clear_adc_scan:
  9477                           	opt callstack 0
  9478                           
  9479 ;; *************** function _check_adc_scan *****************
  9480 ;; Defined at:
  9481 ;;		line 83 in file "daq.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1  [STACK] _Bool 
  9488 ;; Registers used:
  9489 ;;		btemp
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/1
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:   15
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_main
  9506 ;;		_update_adc_result
  9507 ;; This function uses a reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text26
  9511  01CA86                     __ptext26:
  9512                           	opt callstack 0
  9513  01CA86                     _check_adc_scan:
  9514                           	opt callstack 13
  9515                           
  9516                           ;daq.c: 85:  return R.done;
  9517                           
  9518                           ; BSR set to: 0
  9519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9520                           ;incstack = 0
  9521  01CA86  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9522                           
  9523                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9524  01CA8C  0012               	return		;funcret
  9525  01CA8E                     __end_of_check_adc_scan:
  9526                           	opt callstack 0
  9527                           
  9528 ;; *************** function _set_load_relay_two *****************
  9529 ;; Defined at:
  9530 ;;		line 130 in file "mbmc.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  mode            1  [STACK] const _Bool 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1  [STACK] void 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr1l, fsr1h
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:   15
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_main
  9555 ;;		_esr_check
  9556 ;; This function uses a reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text27
  9560  01C9BE                     __ptext27:
  9561                           	opt callstack 0
  9562  01C9BE                     _set_load_relay_two:
  9563                           	opt callstack 15
  9564                           
  9565                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9566                           ;stkvar	_mode @ sp[(0)+-1]
  9567                           
  9568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9569                           ;incstack = 0
  9570  01C9BE  0EFF               	movlw	-1
  9571  01C9C0  B0E3               	btfsc	plusw1,0,c
  9572  01C9C2  D002               	bra	u9765
  9573  01C9C4  9ABD               	bcf	189,5,c	;volatile
  9574  01C9C6  D001               	bra	u9766
  9575  01C9C8                     u9765:
  9576  01C9C8  8ABD               	bsf	189,5,c	;volatile
  9577  01C9CA                     u9766:
  9578                           
  9579                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9580  01C9CA  52E5               	movf	postdec1,f,c
  9581  01C9CC  0012               	return		;funcret
  9582  01C9CE                     __end_of_set_load_relay_two:
  9583                           	opt callstack 0
  9584                           
  9585 ;; *************** function _set_load_relay_one *****************
  9586 ;; Defined at:
  9587 ;;		line 125 in file "mbmc.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  mode            1  [STACK] const _Bool 
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;		None
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1  [STACK] void 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr1l, fsr1h
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;Total ram usage:        0 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:   15
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_main
  9612 ;;		_esr_check
  9613 ;; This function uses a reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text28
  9617  01C9CE                     __ptext28:
  9618                           	opt callstack 0
  9619  01C9CE                     _set_load_relay_one:
  9620                           	opt callstack 15
  9621                           
  9622                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9623                           ;stkvar	_mode @ sp[(0)+-1]
  9624                           
  9625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9626                           ;incstack = 0
  9627  01C9CE  0EFF               	movlw	-1
  9628  01C9D0  B0E3               	btfsc	plusw1,0,c
  9629  01C9D2  D002               	bra	u9755
  9630  01C9D4  98BD               	bcf	189,4,c	;volatile
  9631  01C9D6  D001               	bra	u9756
  9632  01C9D8                     u9755:
  9633  01C9D8  88BD               	bsf	189,4,c	;volatile
  9634  01C9DA                     u9756:
  9635                           
  9636                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9637  01C9DA  52E5               	movf	postdec1,f,c
  9638  01C9DC  0012               	return		;funcret
  9639  01C9DE                     __end_of_set_load_relay_one:
  9640                           	opt callstack 0
  9641                           
  9642 ;; *************** function _eaDogM_WriteCommand *****************
  9643 ;; Defined at:
  9644 ;;		line 385 in file "eadog.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  cmd             1  [STACK] const unsigned char 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1  [STACK] void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9653 ;; Tracked objects:
  9654 ;;		On entry : 3F/3D
  9655 ;;		On exit  : 3F/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:   26
  9665 ;; This function calls:
  9666 ;;		_send_lcd_cmd_dma
  9667 ;; This function is called by:
  9668 ;;		_main
  9669 ;; This function uses a reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text29
  9673  01C9FE                     __ptext29:
  9674                           	opt callstack 0
  9675  01C9FE                     _eaDogM_WriteCommand:
  9676                           	opt callstack 4
  9677                           
  9678                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9679                           ;stkvar	_cmd @ sp[(0)+-1]
  9680                           
  9681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9682                           ;incstack = 0
  9683  01C9FE  0EFF               	movlw	-1
  9684  01CA00  50E3               	movf	plusw1,w,c
  9685  01CA02  6EE6               	movwf	postinc1,c
  9686  01CA04  EC3C  F0E4         	call	_send_lcd_cmd_dma	;wreg free
  9687                           
  9688                           ; BSR set to: 0
  9689                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9690  01CA08  52E5               	movf	postdec1,f,c
  9691  01CA0A  0012               	return		;funcret
  9692  01CA0C                     __end_of_eaDogM_WriteCommand:
  9693                           	opt callstack 0
  9694                           
  9695 ;; *************** function _current_sensor_cal *****************
  9696 ;; Defined at:
  9697 ;;		line 473 in file "main.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;		None
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  x               1  [STACK] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  1  [STACK] _Bool 
  9704 ;; Registers used:
  9705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/1
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;Total ram usage:        0 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:   28
  9718 ;; This function calls:
  9719 ;;		_WaitMs
  9720 ;;		_cal_current_zero
  9721 ;;		_get_raw_result
  9722 ;;		_get_switch
  9723 ;;		_get_vterm_ptr
  9724 ;;		_spinners
  9725 ;;		_sprintf
  9726 ;;		_update_lcd
  9727 ;; This function is called by:
  9728 ;;		_main
  9729 ;; This function uses a reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text30
  9733  01773C                     __ptext30:
  9734                           	opt callstack 0
  9735  01773C                     _current_sensor_cal:
  9736                           	opt callstack 0
  9737                           
  9738                           ; BSR set to: 0
  9739                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9740  01773C  52E6               	movf	postinc1,f,c
  9741                           
  9742                           ;main.c: 475:  uint8_t x = 0;
  9743                           ;stkvar	_x @ sp[(-1)+0]
  9744                           
  9745                           ;incstack = 0
  9746  01773E  0EFF               	movlw	-1
  9747  017740  6AE3               	clrf	plusw1,c
  9748                           
  9749                           ;main.c: 477:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9750  017742  0E09               	movlw	low STR_43
  9751  017744  6EE6               	movwf	postinc1,c
  9752  017746  0EFF               	movlw	high STR_43
  9753  017748  6EE6               	movwf	postinc1,c
  9754  01774A  0E00               	movlw	0
  9755  01774C  6EE6               	movwf	postinc1,c
  9756  01774E  0E00               	movlw	0
  9757  017750  6EE6               	movwf	postinc1,c
  9758  017752  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9759  017756  0060  F007  FFE6   	movff	btemp,postinc1
  9760  01775C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9761  017762  0E04               	movlw	4
  9762  017764  6EE6               	movwf	postinc1,c
  9763  017766  ECC0  F0D1         	call	_sprintf	;wreg free
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;main.c: 478:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
  9767  01776A  0E22               	movlw	low STR_44
  9768  01776C  6EE6               	movwf	postinc1,c
  9769  01776E  0EFE               	movlw	high STR_44
  9770  017770  6EE6               	movwf	postinc1,c
  9771  017772  0E00               	movlw	0
  9772  017774  6EE6               	movwf	postinc1,c
  9773  017776  0E01               	movlw	1
  9774  017778  6EE6               	movwf	postinc1,c
  9775  01777A  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9776  01777E  0060  F007  FFE6   	movff	btemp,postinc1
  9777  017784  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9778  01778A  0E04               	movlw	4
  9779  01778C  6EE6               	movwf	postinc1,c
  9780  01778E  ECC0  F0D1         	call	_sprintf	;wreg free
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;main.c: 479:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
  9784  017792  0EA0               	movlw	low STR_45
  9785  017794  6EE6               	movwf	postinc1,c
  9786  017796  0EFE               	movlw	high STR_45
  9787  017798  6EE6               	movwf	postinc1,c
  9788  01779A  0E00               	movlw	0
  9789  01779C  6EE6               	movwf	postinc1,c
  9790  01779E  0E02               	movlw	2
  9791  0177A0  6EE6               	movwf	postinc1,c
  9792  0177A2  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9793  0177A6  0060  F007  FFE6   	movff	btemp,postinc1
  9794  0177AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9795  0177B2  0E04               	movlw	4
  9796  0177B4  6EE6               	movwf	postinc1,c
  9797  0177B6  ECC0  F0D1         	call	_sprintf	;wreg free
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;main.c: 480:  update_lcd(0);
  9801  0177BA  0E00               	movlw	0
  9802  0177BC  6EE6               	movwf	postinc1,c
  9803  0177BE  EC38  F0D1         	call	_update_lcd	;wreg free
  9804                           
  9805                           ;main.c: 481:  WaitMs(2000);
  9806  0177C2  0ED0               	movlw	208
  9807  0177C4  6EE6               	movwf	postinc1,c
  9808  0177C6  0E07               	movlw	7
  9809  0177C8  6EE6               	movwf	postinc1,c
  9810  0177CA  ECEF  F0E0         	call	_WaitMs	;wreg free
  9811                           
  9812                           ;main.c: 482:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9813  0177CE  0E00               	movlw	0
  9814  0177D0  6EE6               	movwf	postinc1,c
  9815  0177D2  0E04               	movlw	4
  9816  0177D4  6EE6               	movwf	postinc1,c
  9817  0177D6  EC45  F0D2         	call	_spinners	;wreg free
  9818  0177DA  5001               	movf	btemp^0,w,c
  9819  0177DC  6EE6               	movwf	postinc1,c
  9820  0177DE  0E00               	movlw	0
  9821  0177E0  6EE6               	movwf	postinc1,c
  9822  0177E2  0E48               	movlw	low STR_46
  9823  0177E4  6EE6               	movwf	postinc1,c
  9824  0177E6  0EFF               	movlw	high STR_46
  9825  0177E8  6EE6               	movwf	postinc1,c
  9826  0177EA  0E00               	movlw	0
  9827  0177EC  6EE6               	movwf	postinc1,c
  9828  0177EE  0E02               	movlw	2
  9829  0177F0  6EE6               	movwf	postinc1,c
  9830  0177F2  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9831  0177F6  0060  F007  FFE6   	movff	btemp,postinc1
  9832  0177FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9833  017802  0E06               	movlw	6
  9834  017804  6EE6               	movwf	postinc1,c
  9835  017806  ECC0  F0D1         	call	_sprintf	;wreg free
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;main.c: 483:  update_lcd(0);
  9839  01780A  0E00               	movlw	0
  9840  01780C  6EE6               	movwf	postinc1,c
  9841  01780E  EC38  F0D1         	call	_update_lcd	;wreg free
  9842  017812                     l13551:
  9843                           
  9844                           ;main.c: 485:   if (++x > 50)
  9845                           ;stkvar	_x @ sp[(-1)+0]
  9846  017812  0EFF               	movlw	-1
  9847  017814  2AE3               	incf	plusw1,f,c
  9848  017816  0EFF               	movlw	-1
  9849  017818  006F FF8C  F001    	movff	plusw1,btemp
  9850  01781E  0E32               	movlw	50
  9851  017820  6401               	cpfsgt	btemp^0,c
  9852  017822  D001               	goto	l13555
  9853  017824  D0D6               	goto	l1398
  9854  017826                     l13555:
  9855                           
  9856                           ;main.c: 487:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
  9857  017826  0E00               	movlw	0
  9858  017828  6EE6               	movwf	postinc1,c
  9859  01782A  0E04               	movlw	4
  9860  01782C  6EE6               	movwf	postinc1,c
  9861  01782E  EC45  F0D2         	call	_spinners	;wreg free
  9862  017832  5001               	movf	btemp^0,w,c
  9863  017834  6EE6               	movwf	postinc1,c
  9864  017836  0E00               	movlw	0
  9865  017838  6EE6               	movwf	postinc1,c
  9866  01783A  0E48               	movlw	low STR_46
  9867  01783C  6EE6               	movwf	postinc1,c
  9868  01783E  0EFF               	movlw	high STR_46
  9869  017840  6EE6               	movwf	postinc1,c
  9870  017842  0E00               	movlw	0
  9871  017844  6EE6               	movwf	postinc1,c
  9872  017846  0E02               	movlw	2
  9873  017848  6EE6               	movwf	postinc1,c
  9874  01784A  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9875  01784E  0060  F007  FFE6   	movff	btemp,postinc1
  9876  017854  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9877  01785A  0E06               	movlw	6
  9878  01785C  6EE6               	movwf	postinc1,c
  9879  01785E  ECC0  F0D1         	call	_sprintf	;wreg free
  9880                           
  9881                           ;main.c: 488:   update_lcd(0);
  9882  017862  0E00               	movlw	0
  9883  017864  6EE6               	movwf	postinc1,c
  9884  017866  EC38  F0D1         	call	_update_lcd	;wreg free
  9885                           
  9886                           ;main.c: 489:   WaitMs(100);
  9887  01786A  0E64               	movlw	100
  9888  01786C  6EE6               	movwf	postinc1,c
  9889  01786E  0E00               	movlw	0
  9890  017870  6EE6               	movwf	postinc1,c
  9891  017872  ECEF  F0E0         	call	_WaitMs	;wreg free
  9892                           
  9893                           ;main.c: 490:  } while (get_switch(SCALIB));
  9894  017876  0E04               	movlw	4
  9895  017878  6EE6               	movwf	postinc1,c
  9896  01787A  ECE9  F0E1         	call	_get_switch	;wreg free
  9897  01787E  5001               	movf	btemp^0,w,c
  9898  017880  A4D8               	btfss	status,2,c
  9899  017882  D7C7               	goto	l13551
  9900                           
  9901                           ;main.c: 492:  if (cal_current_zero(0)) {
  9902  017884  0E00               	movlw	0
  9903  017886  6EE6               	movwf	postinc1,c
  9904  017888  ECE9  F0D4         	call	_cal_current_zero	;wreg free
  9905  01788C  5001               	movf	btemp^0,w,c
  9906  01788E  B4D8               	btfsc	status,2,c
  9907  017890  D04B               	goto	l13575
  9908                           
  9909                           ;main.c: 493:   cal_current_zero(1);
  9910  017892  0E01               	movlw	1
  9911  017894  6EE6               	movwf	postinc1,c
  9912  017896  ECE9  F0D4         	call	_cal_current_zero	;wreg free
  9913                           
  9914                           ;main.c: 494:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9915  01789A  0E09               	movlw	low STR_43
  9916  01789C  6EE6               	movwf	postinc1,c
  9917  01789E  0EFF               	movlw	high STR_43
  9918  0178A0  6EE6               	movwf	postinc1,c
  9919  0178A2  0E00               	movlw	0
  9920  0178A4  6EE6               	movwf	postinc1,c
  9921  0178A6  0E00               	movlw	0
  9922  0178A8  6EE6               	movwf	postinc1,c
  9923  0178AA  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9924  0178AE  0060  F007  FFE6   	movff	btemp,postinc1
  9925  0178B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9926  0178BA  0E04               	movlw	4
  9927  0178BC  6EE6               	movwf	postinc1,c
  9928  0178BE  ECC0  F0D1         	call	_sprintf	;wreg free
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;main.c: 495:   sprintf(get_vterm_ptr(1, 0), "Sensors             ");
  9932  0178C2  0E37               	movlw	low STR_49
  9933  0178C4  6EE6               	movwf	postinc1,c
  9934  0178C6  0EFE               	movlw	high STR_49
  9935  0178C8  6EE6               	movwf	postinc1,c
  9936  0178CA  0E00               	movlw	0
  9937  0178CC  6EE6               	movwf	postinc1,c
  9938  0178CE  0E01               	movlw	1
  9939  0178D0  6EE6               	movwf	postinc1,c
  9940  0178D2  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9941  0178D6  0060  F007  FFE6   	movff	btemp,postinc1
  9942  0178DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9943  0178E2  0E04               	movlw	4
  9944  0178E4  6EE6               	movwf	postinc1,c
  9945  0178E6  ECC0  F0D1         	call	_sprintf	;wreg free
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;main.c: 496:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
  9949  0178EA  0EDF               	movlw	low STR_50
  9950  0178EC  6EE6               	movwf	postinc1,c
  9951  0178EE  0EFE               	movlw	high STR_50
  9952  0178F0  6EE6               	movwf	postinc1,c
  9953  0178F2  0E00               	movlw	0
  9954  0178F4  6EE6               	movwf	postinc1,c
  9955  0178F6  0E02               	movlw	2
  9956  0178F8  6EE6               	movwf	postinc1,c
  9957  0178FA  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9958  0178FE  0060  F007  FFE6   	movff	btemp,postinc1
  9959  017904  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9960  01790A  0E04               	movlw	4
  9961  01790C  6EE6               	movwf	postinc1,c
  9962  01790E  ECC0  F0D1         	call	_sprintf	;wreg free
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;main.c: 497:   update_lcd(0);
  9966  017912  0E00               	movlw	0
  9967  017914  6EE6               	movwf	postinc1,c
  9968  017916  EC38  F0D1         	call	_update_lcd	;wreg free
  9969  01791A                     l13573:
  9970                           
  9971                           ;main.c: 498:   WaitMs(2000);
  9972  01791A  0ED0               	movlw	208
  9973  01791C  6EE6               	movwf	postinc1,c
  9974  01791E  0E07               	movlw	7
  9975  017920  6EE6               	movwf	postinc1,c
  9976  017922  ECEF  F0E0         	call	_WaitMs	;wreg free
  9977                           
  9978                           ;main.c: 499:  } else {
  9979  017926  D055               	goto	l1398
  9980  017928                     l13575:
  9981                           
  9982                           ;main.c: 500:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
  9983  017928  0E09               	movlw	low STR_43
  9984  01792A  6EE6               	movwf	postinc1,c
  9985  01792C  0EFF               	movlw	high STR_43
  9986  01792E  6EE6               	movwf	postinc1,c
  9987  017930  0E00               	movlw	0
  9988  017932  6EE6               	movwf	postinc1,c
  9989  017934  0E00               	movlw	0
  9990  017936  6EE6               	movwf	postinc1,c
  9991  017938  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
  9992  01793C  0060  F007  FFE6   	movff	btemp,postinc1
  9993  017942  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9994  017948  0E04               	movlw	4
  9995  01794A  6EE6               	movwf	postinc1,c
  9996  01794C  ECC0  F0D1         	call	_sprintf	;wreg free
  9997                           
  9998                           ;main.c: 501:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(0), 
      +                          get_raw_result(1));
  9999  017950  0E01               	movlw	1
 10000  017952  6EE6               	movwf	postinc1,c
 10001  017954  EC69  F0E4         	call	_get_raw_result	;wreg free
 10002  017958  0060  F007  FFE6   	movff	btemp,postinc1
 10003  01795E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10004  017964  0E00               	movlw	0
 10005  017966  6EE6               	movwf	postinc1,c
 10006  017968  EC69  F0E4         	call	_get_raw_result	;wreg free
 10007  01796C  0060  F007  FFE6   	movff	btemp,postinc1
 10008  017972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10009  017978  0E0D               	movlw	low STR_52
 10010  01797A  6EE6               	movwf	postinc1,c
 10011  01797C  0EFE               	movlw	high STR_52
 10012  01797E  6EE6               	movwf	postinc1,c
 10013  017980  0E00               	movlw	0
 10014  017982  6EE6               	movwf	postinc1,c
 10015  017984  0E01               	movlw	1
 10016  017986  6EE6               	movwf	postinc1,c
 10017  017988  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 10018  01798C  0060  F007  FFE6   	movff	btemp,postinc1
 10019  017992  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10020  017998  0E08               	movlw	8
 10021  01799A  6EE6               	movwf	postinc1,c
 10022  01799C  ECC0  F0D1         	call	_sprintf	;wreg free
 10023                           
 10024                           ;main.c: 502:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10025  0179A0  0ECA               	movlw	low STR_53
 10026  0179A2  6EE6               	movwf	postinc1,c
 10027  0179A4  0EFE               	movlw	high STR_53
 10028  0179A6  6EE6               	movwf	postinc1,c
 10029  0179A8  0E00               	movlw	0
 10030  0179AA  6EE6               	movwf	postinc1,c
 10031  0179AC  0E02               	movlw	2
 10032  0179AE  6EE6               	movwf	postinc1,c
 10033  0179B0  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 10034  0179B4  0060  F007  FFE6   	movff	btemp,postinc1
 10035  0179BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10036  0179C0  0E04               	movlw	4
 10037  0179C2  6EE6               	movwf	postinc1,c
 10038  0179C4  ECC0  F0D1         	call	_sprintf	;wreg free
 10039                           
 10040                           ;main.c: 503:   update_lcd(0);
 10041  0179C8  0E00               	movlw	0
 10042  0179CA  6EE6               	movwf	postinc1,c
 10043  0179CC  EC38  F0D1         	call	_update_lcd	;wreg free
 10044  0179D0  D7A4               	goto	l13573
 10045  0179D2                     l1398:
 10046                           
 10047                           ; _current_sensor_cal: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10048  0179D2  52E5               	movf	postdec1,f,c
 10049  0179D4  0012               	return		;funcret
 10050  0179D6                     __end_of_current_sensor_cal:
 10051                           	opt callstack 0
 10052                           
 10053 ;; *************** function _spinners *****************
 10054 ;; Defined at:
 10055 ;;		line 146 in file "mbmc.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;  shape           1  [STACK] unsigned char 
 10058 ;;  reset           1  [STACK] const unsigned char 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;  c               1  [STACK] unsigned char 
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  1  [STACK] unsigned char 
 10063 ;; Registers used:
 10064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;Total ram usage:        0 bytes
 10075 ;; Hardware stack levels used:    1
 10076 ;; Hardware stack levels required when called:   16
 10077 ;; This function calls:
 10078 ;;		_strlen
 10079 ;; This function is called by:
 10080 ;;		_main
 10081 ;;		_current_sensor_cal
 10082 ;; This function uses a reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text31
 10086  01A48A                     __ptext31:
 10087                           	opt callstack 0
 10088  01A48A                     _spinners:
 10089                           	opt callstack 0
 10090                           
 10091                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10092  01A48A  52E6               	movf	postinc1,f,c
 10093                           
 10094                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 10095                           ;stkvar	_shape @ sp[(-1)+-1]
 10096                           
 10097                           ;incstack = 0
 10098  01A48C  0EFE               	movlw	-2
 10099  01A48E  006F FF8C  F001    	movff	plusw1,btemp
 10100  01A494  0E05               	movlw	5
 10101  01A496  6401               	cpfsgt	btemp^0,c
 10102  01A498  D002               	goto	l1992
 10103                           
 10104                           ;mbmc.c: 152:   shape = 0;
 10105                           ;stkvar	_shape @ sp[(-1)+-1]
 10106  01A49A  0EFE               	movlw	-2
 10107  01A49C  6AE3               	clrf	plusw1,c
 10108  01A49E                     l1992:
 10109                           
 10110                           ;mbmc.c: 153:  if (reset)
 10111                           ;stkvar	_reset @ sp[(-1)+-2]
 10112  01A49E  0EFD               	movlw	-3
 10113  01A4A0  50E3               	movf	plusw1,w,c
 10114  01A4A2  B4D8               	btfsc	status,2,c
 10115  01A4A4  D00C               	goto	l10759
 10116                           
 10117                           ;mbmc.c: 154:   s[shape] = 0;
 10118                           ;stkvar	_shape @ sp[(-1)+-1]
 10119  01A4A6  0EFE               	movlw	-2
 10120  01A4A8  50E3               	movf	plusw1,w,c
 10121  01A4AA  6E0B               	movwf	(btemp+10)^0,c
 10122  01A4AC  6A0C               	clrf	(btemp+11)^0,c
 10123  01A4AE  0EE4               	movlw	low spinners@s
 10124  01A4B0  240B               	addwf	(btemp+10)^0,w,c
 10125  01A4B2  6ED9               	movwf	fsr2l,c
 10126  01A4B4  0E01               	movlw	high spinners@s
 10127  01A4B6  200C               	addwfc	(btemp+11)^0,w,c
 10128  01A4B8  6EDA               	movwf	fsr2h,c
 10129  01A4BA  0E00               	movlw	0
 10130  01A4BC  6EDF               	movwf	indf2,c
 10131  01A4BE                     l10759:
 10132                           
 10133                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 10134                           ;stkvar	_shape @ sp[(-1)+-1]
 10135  01A4BE  0EFE               	movlw	-2
 10136  01A4C0  50E3               	movf	plusw1,w,c
 10137  01A4C2  0D14               	mullw	20
 10138  01A4C4  0E97               	movlw	low _spin
 10139  01A4C6  6E0B               	movwf	(btemp+10)^0,c
 10140  01A4C8  0EFA               	movlw	high _spin
 10141  01A4CA  6E0C               	movwf	(btemp+11)^0,c
 10142  01A4CC  50F3               	movf	243,w,c
 10143  01A4CE  260B               	addwf	(btemp+10)^0,f,c
 10144  01A4D0  50F4               	movf	244,w,c
 10145  01A4D2  220C               	addwfc	(btemp+11)^0,f,c
 10146                           
 10147                           ;stkvar	_shape @ sp[(-1)+-1]
 10148  01A4D4  0EFE               	movlw	-2
 10149  01A4D6  50E3               	movf	plusw1,w,c
 10150  01A4D8  6E09               	movwf	(btemp+8)^0,c
 10151  01A4DA  6A0A               	clrf	(btemp+9)^0,c
 10152  01A4DC  0EE4               	movlw	low spinners@s
 10153  01A4DE  2409               	addwf	(btemp+8)^0,w,c
 10154  01A4E0  6ED9               	movwf	fsr2l,c
 10155  01A4E2  0E01               	movlw	high spinners@s
 10156  01A4E4  200A               	addwfc	(btemp+9)^0,w,c
 10157  01A4E6  6EDA               	movwf	fsr2h,c
 10158  01A4E8  50DF               	movf	indf2,w,c
 10159  01A4EA  260B               	addwf	(btemp+10)^0,f,c
 10160  01A4EC  0E00               	movlw	0
 10161  01A4EE  220C               	addwfc	(btemp+11)^0,f,c
 10162  01A4F0  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10163  01A4F6  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10164  01A4FC                     	if	0	;tblptru may be non-zero
 10165  01A4FC                     	endif
 10166  01A4FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10167  01A4FC  0E00               	movlw	low (__mediumconst shr (0+16))
 10168  01A4FE  6EF8               	movwf	tblptru,c
 10169  01A500                     	endif
 10170                           
 10171                           ;stkvar	_c @ sp[(-1)+0]
 10172  01A500  0008               	tblrd		*
 10173  01A502  0EFF               	movlw	-1
 10174  01A504  006F FFD7 FFE3     	movff	tablat,plusw1
 10175                           
 10176                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 10177                           ;stkvar	_shape @ sp[(-1)+-1]
 10178  01A50A  0EFE               	movlw	-2
 10179  01A50C  50E3               	movf	plusw1,w,c
 10180  01A50E  0D14               	mullw	20
 10181  01A510  0E97               	movlw	low _spin
 10182  01A512  6E0B               	movwf	(btemp+10)^0,c
 10183  01A514  0EFA               	movlw	high _spin
 10184  01A516  6E0C               	movwf	(btemp+11)^0,c
 10185  01A518  50F3               	movf	243,w,c
 10186  01A51A  260B               	addwf	(btemp+10)^0,f,c
 10187  01A51C  50F4               	movf	244,w,c
 10188  01A51E  220C               	addwfc	(btemp+11)^0,f,c
 10189  01A520  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10190  01A526  0060  F033  FFE6   	movff	btemp+11,postinc1
 10191  01A52C  EC6B  F0D8         	call	_strlen	;wreg free
 10192                           
 10193                           ;stkvar	_shape @ sp[(-1)+-1]
 10194  01A530  0EFE               	movlw	-2
 10195  01A532  50E3               	movf	plusw1,w,c
 10196  01A534  6E0B               	movwf	(btemp+10)^0,c
 10197  01A536  6A0C               	clrf	(btemp+11)^0,c
 10198  01A538  0EE4               	movlw	low spinners@s
 10199  01A53A  240B               	addwf	(btemp+10)^0,w,c
 10200  01A53C  6ED9               	movwf	fsr2l,c
 10201  01A53E  0E01               	movlw	high spinners@s
 10202  01A540  200C               	addwfc	(btemp+11)^0,w,c
 10203  01A542  6EDA               	movwf	fsr2h,c
 10204  01A544  2ADF               	incf	indf2,f,c
 10205  01A546  50DF               	movf	indf2,w,c
 10206  01A548  6E0B               	movwf	(btemp+10)^0,c
 10207  01A54A  6A0C               	clrf	(btemp+11)^0,c
 10208  01A54C  5001               	movf	btemp^0,w,c
 10209  01A54E  5C0B               	subwf	(btemp+10)^0,w,c
 10210  01A550  5002               	movf	(btemp+1)^0,w,c
 10211  01A552  580C               	subwfb	(btemp+11)^0,w,c
 10212  01A554  A0D8               	btfss	status,0,c
 10213  01A556  D00C               	goto	l10765
 10214                           
 10215                           ;mbmc.c: 157:   s[shape] = 0;
 10216                           ;stkvar	_shape @ sp[(-1)+-1]
 10217  01A558  0EFE               	movlw	-2
 10218  01A55A  50E3               	movf	plusw1,w,c
 10219  01A55C  6E0B               	movwf	(btemp+10)^0,c
 10220  01A55E  6A0C               	clrf	(btemp+11)^0,c
 10221  01A560  0EE4               	movlw	low spinners@s
 10222  01A562  240B               	addwf	(btemp+10)^0,w,c
 10223  01A564  6ED9               	movwf	fsr2l,c
 10224  01A566  0E01               	movlw	high spinners@s
 10225  01A568  200C               	addwfc	(btemp+11)^0,w,c
 10226  01A56A  6EDA               	movwf	fsr2h,c
 10227  01A56C  0E00               	movlw	0
 10228  01A56E  6EDF               	movwf	indf2,c
 10229  01A570                     l10765:
 10230                           
 10231                           ;mbmc.c: 158:  return c;
 10232                           ;stkvar	_c @ sp[(-1)+0]
 10233  01A570  0EFF               	movlw	-1
 10234  01A572  006F FF8C  F001    	movff	plusw1,btemp
 10235                           
 10236                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 10237  01A578  52E5               	movf	postdec1,f,c
 10238  01A57A  52E5               	movf	postdec1,f,c
 10239  01A57C  52E5               	movf	postdec1,f,c
 10240  01A57E  0012               	return		;funcret
 10241  01A580                     __end_of_spinners:
 10242                           	opt callstack 0
 10243                           
 10244 ;; *************** function _get_switch *****************
 10245 ;; Defined at:
 10246 ;;		line 18 in file "dio.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  i               1  [STACK] const unsigned char 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1  [STACK] enum E17021
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;Total ram usage:        0 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:   15
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_main
 10271 ;;		_current_sensor_cal
 10272 ;;		_hid_input
 10273 ;; This function uses a reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text32
 10277  01C3D2                     __ptext32:
 10278                           	opt callstack 0
 10279  01C3D2                     _get_switch:
 10280                           	opt callstack 13
 10281                           
 10282                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 10283                           ;stkvar	_i @ sp[(0)+-1]
 10284                           
 10285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10286                           ;incstack = 0
 10287  01C3D2  0EFF               	movlw	-1
 10288  01C3D4  006F FF8C  F001    	movff	plusw1,btemp
 10289  01C3DA  0E05               	movlw	5
 10290  01C3DC  6401               	cpfsgt	btemp^0,c
 10291  01C3DE  D002               	goto	l10259
 10292                           
 10293                           ;dio.c: 21:   return SW_OFF;
 10294  01C3E0  0E00               	movlw	0
 10295  01C3E2  D00A               	goto	L8
 10296  01C3E4                     l10259:
 10297                           
 10298                           ;dio.c: 23:  return S.button[i].sw;
 10299                           ;stkvar	_i @ sp[(0)+-1]
 10300  01C3E4  0EFF               	movlw	-1
 10301  01C3E6  50E3               	movf	plusw1,w,c
 10302  01C3E8  0D05               	mullw	5
 10303  01C3EA  0E54               	movlw	low _S
 10304  01C3EC  24F3               	addwf	243,w,c
 10305  01C3EE  6ED9               	movwf	fsr2l,c
 10306  01C3F0  0E02               	movlw	high _S
 10307  01C3F2  20F4               	addwfc	prodh,w,c
 10308  01C3F4  6EDA               	movwf	fsr2h,c
 10309  01C3F6  50DF               	movf	indf2,w,c
 10310  01C3F8                     L8:
 10311  01C3F8  6E01               	movwf	btemp^0,c
 10312                           
 10313                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10314  01C3FA  52E5               	movf	postdec1,f,c
 10315  01C3FC  0012               	return		;funcret
 10316  01C3FE                     __end_of_get_switch:
 10317                           	opt callstack 0
 10318                           
 10319 ;; *************** function _cal_current_zero *****************
 10320 ;; Defined at:
 10321 ;;		line 317 in file "daq.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  mode            1  [STACK] _Bool 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  a200            2  [STACK] short 
 10326 ;;  a100            2  [STACK] short 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1  [STACK] _Bool 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;Total ram usage:        0 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   16
 10343 ;; This function calls:
 10344 ;;		_check_range
 10345 ;;		_get_raw_result
 10346 ;; This function is called by:
 10347 ;;		_current_sensor_cal
 10348 ;; This function uses a reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text33
 10352  01A9D2                     __ptext33:
 10353                           	opt callstack 0
 10354  01A9D2                     _cal_current_zero:
 10355                           	opt callstack 0
 10356                           
 10357                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10358  01A9D2  52E6               	movf	postinc1,f,c
 10359  01A9D4  52E6               	movf	postinc1,f,c
 10360  01A9D6  52E6               	movf	postinc1,f,c
 10361  01A9D8  52E6               	movf	postinc1,f,c
 10362                           
 10363                           ;daq.c: 317: _Bool cal_current_zero(_Bool mode);daq.c: 318: {;daq.c: 319:  int16_t a100,
      +                           a200;;daq.c: 321:  a100 = get_raw_result(C_PV);
 10364                           
 10365                           ;incstack = 0
 10366  01A9DA  0E01               	movlw	1
 10367  01A9DC  6EE6               	movwf	postinc1,c
 10368  01A9DE  EC69  F0E4         	call	_get_raw_result	;wreg free
 10369                           
 10370                           ;stkvar	_a100 @ sp[(-4)+2]
 10371  01A9E2  0EFE               	movlw	-2
 10372  01A9E4  0060  F007  FFE3   	movff	btemp,plusw1
 10373  01A9EA  0EFF               	movlw	-1
 10374  01A9EC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10375                           
 10376                           ;daq.c: 322:  if (!check_range(a100, 100, 4000))
 10377  01A9F2  0EA0               	movlw	160
 10378  01A9F4  6EE6               	movwf	postinc1,c
 10379  01A9F6  0E0F               	movlw	15
 10380  01A9F8  6EE6               	movwf	postinc1,c
 10381  01A9FA  0E64               	movlw	100
 10382  01A9FC  6EE6               	movwf	postinc1,c
 10383  01A9FE  0E00               	movlw	0
 10384  01AA00  6EE6               	movwf	postinc1,c
 10385                           
 10386                           ;stkvar	_a100 @ sp[(-8)+2]
 10387  01AA02  0EFA               	movlw	-6
 10388  01AA04  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  01AA0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  01AA10  EC62  F0DA         	call	_check_range	;wreg free
 10391  01AA14  5001               	movf	btemp^0,w,c
 10392  01AA16  A4D8               	btfss	status,2,c
 10393  01AA18  D002               	goto	l10809
 10394  01AA1A                     u9860:
 10395                           
 10396                           ;daq.c: 323:   return 0;
 10397  01AA1A  0E00               	movlw	0
 10398  01AA1C  D025               	goto	L9
 10399  01AA1E                     l10809:
 10400                           
 10401                           ;daq.c: 324:  a200 = get_raw_result(C_BATT);
 10402  01AA1E  0E00               	movlw	0
 10403  01AA20  6EE6               	movwf	postinc1,c
 10404  01AA22  EC69  F0E4         	call	_get_raw_result	;wreg free
 10405                           
 10406                           ;stkvar	_a200 @ sp[(-4)+0]
 10407  01AA26  0EFC               	movlw	-4
 10408  01AA28  0060  F007  FFE3   	movff	btemp,plusw1
 10409  01AA2E  0EFD               	movlw	-3
 10410  01AA30  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10411                           
 10412                           ;daq.c: 325:  if (!check_range(a200, 100, 4000))
 10413  01AA36  0EA0               	movlw	160
 10414  01AA38  6EE6               	movwf	postinc1,c
 10415  01AA3A  0E0F               	movlw	15
 10416  01AA3C  6EE6               	movwf	postinc1,c
 10417  01AA3E  0E64               	movlw	100
 10418  01AA40  6EE6               	movwf	postinc1,c
 10419  01AA42  0E00               	movlw	0
 10420  01AA44  6EE6               	movwf	postinc1,c
 10421                           
 10422                           ;stkvar	_a200 @ sp[(-8)+0]
 10423  01AA46  0EF8               	movlw	-8
 10424  01AA48  006F FF8F FFE6     	movff	plusw1,postinc1
 10425  01AA4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10426  01AA54  EC62  F0DA         	call	_check_range	;wreg free
 10427  01AA58  5001               	movf	btemp^0,w,c
 10428  01AA5A  B4D8               	btfsc	status,2,c
 10429  01AA5C  D7DE               	goto	u9860
 10430                           
 10431                           ;daq.c: 328:  if (!mode)
 10432                           ;stkvar	_mode @ sp[(-4)+-1]
 10433  01AA5E  0EFB               	movlw	-5
 10434  01AA60  50E3               	movf	plusw1,w,c
 10435  01AA62  A4D8               	btfss	status,2,c
 10436  01AA64  D003               	goto	l10823
 10437  01AA66                     u9880:
 10438                           
 10439                           ;daq.c: 329:   return 1;
 10440  01AA66  0E01               	movlw	1
 10441  01AA68                     L9:
 10442  01AA68  6E01               	movwf	btemp^0,c
 10443  01AA6A  D011               	goto	l1910
 10444  01AA6C                     l10823:
 10445                           
 10446                           ;daq.c: 331:  R.n_offset[1] = a100;
 10447                           ;stkvar	_a100 @ sp[(-4)+2]
 10448  01AA6C  0EFE               	movlw	-2
 10449  01AA6E  006F FF8C  F0D7    	movff	plusw1,_R+40	;volatile
 10450  01AA74  0EFF               	movlw	-1
 10451  01AA76  006F FF8C  F0D8    	movff	plusw1,_R+41	;volatile
 10452                           
 10453                           ;daq.c: 332:  R.n_offset[0] = a200;
 10454                           ;stkvar	_a200 @ sp[(-4)+0]
 10455  01AA7C  0EFC               	movlw	-4
 10456  01AA7E  006F FF8C  F0D5    	movff	plusw1,_R+38	;volatile
 10457  01AA84  0EFD               	movlw	-3
 10458  01AA86  006F FF8C  F0D6    	movff	plusw1,_R+39	;volatile
 10459  01AA8C  D7EC               	goto	u9880
 10460  01AA8E                     l1910:
 10461                           
 10462                           ; _cal_current_zero: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10463  01AA8E  0EFB               	movlw	251
 10464  01AA90  26E1               	addwf	fsr1l,f,c
 10465  01AA92  0EFF               	movlw	255
 10466  01AA94  22E2               	addwfc	fsr1h,f,c
 10467  01AA96  0012               	return		;funcret
 10468  01AA98                     __end_of_cal_current_zero:
 10469                           	opt callstack 0
 10470                           
 10471 ;; *************** function _check_range *****************
 10472 ;; Defined at:
 10473 ;;		line 305 in file "daq.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  value           2  [STACK] short 
 10476 ;;  window          2  [STACK] short 
 10477 ;;  standard        2  [STACK] short 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1  [STACK] _Bool 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   15
 10496 ;; This function calls:
 10497 ;;		Nothing
 10498 ;; This function is called by:
 10499 ;;		_cal_current_zero
 10500 ;; This function uses a reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text34
 10504  01B4C4                     __ptext34:
 10505                           	opt callstack 0
 10506  01B4C4                     _check_range:
 10507                           	opt callstack 13
 10508                           
 10509                           ;daq.c: 305: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 306: {;daq.c: 307:  if (value > (standard + window))
 10510                           ;stkvar	_value @ sp[(0)+-2]
 10511                           ;stkvar	_window @ sp[(0)+-4]
 10512                           ;stkvar	_standard @ sp[(0)+-6]
 10513                           
 10514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10515                           ;incstack = 0
 10516  01B4C4  0EFA               	movlw	-6
 10517  01B4C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10518  01B4CC  0EFB               	movlw	-5
 10519  01B4CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10520  01B4D4  0EFC               	movlw	-4
 10521  01B4D6  50E3               	movf	plusw1,w,c
 10522  01B4D8  260B               	addwf	(btemp+10)^0,f,c
 10523  01B4DA  0EFD               	movlw	-3
 10524  01B4DC  50E3               	movf	plusw1,w,c
 10525  01B4DE  220C               	addwfc	(btemp+11)^0,f,c
 10526  01B4E0  0EFE               	movlw	-2
 10527  01B4E2  50E3               	movf	plusw1,w,c
 10528  01B4E4  5C0B               	subwf	(btemp+10)^0,w,c
 10529  01B4E6  500C               	movf	(btemp+11)^0,w,c
 10530  01B4E8  0A80               	xorlw	128
 10531  01B4EA  6E01               	movwf	btemp^0,c
 10532  01B4EC  0EFF               	movlw	-1
 10533  01B4EE  50E3               	movf	plusw1,w,c
 10534  01B4F0  0A80               	xorlw	128
 10535  01B4F2  5801               	subwfb	btemp^0,w,c
 10536  01B4F4  B0D8               	btfsc	status,0,c
 10537  01B4F6  D002               	goto	l10317
 10538  01B4F8                     u9650:
 10539                           
 10540                           ;daq.c: 308:   return 0;
 10541  01B4F8  0E00               	movlw	0
 10542  01B4FA  D01E               	goto	L10
 10543  01B4FC                     l10317:
 10544                           
 10545                           ;daq.c: 309:  if (value < (standard - window))
 10546                           ;stkvar	_window @ sp[(0)+-4]
 10547                           ;stkvar	_standard @ sp[(0)+-6]
 10548  01B4FC  0EFA               	movlw	-6
 10549  01B4FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 10550  01B504  0EFB               	movlw	-5
 10551  01B506  006F FF8C  F00C    	movff	plusw1,btemp+11
 10552  01B50C  0EFC               	movlw	-4
 10553  01B50E  50E3               	movf	plusw1,w,c
 10554  01B510  5E0B               	subwf	(btemp+10)^0,f,c
 10555  01B512  0EFD               	movlw	-3
 10556  01B514  50E3               	movf	plusw1,w,c
 10557  01B516  5A0C               	subwfb	(btemp+11)^0,f,c
 10558                           
 10559                           ;stkvar	_value @ sp[(0)+-2]
 10560  01B518  0EFE               	movlw	-2
 10561  01B51A  006F FF8C  F001    	movff	plusw1,btemp
 10562  01B520  500B               	movf	(btemp+10)^0,w,c
 10563  01B522  5C01               	subwf	btemp^0,w,c
 10564  01B524  0EFF               	movlw	-1
 10565  01B526  50E3               	movf	plusw1,w,c
 10566  01B528  0A80               	xorlw	128
 10567  01B52A  6E01               	movwf	btemp^0,c
 10568  01B52C  500C               	movf	(btemp+11)^0,w,c
 10569  01B52E  0A80               	xorlw	128
 10570  01B530  5801               	subwfb	btemp^0,w,c
 10571  01B532  A0D8               	btfss	status,0,c
 10572  01B534  D7E1               	goto	u9650
 10573                           
 10574                           ;daq.c: 311:  return 1;
 10575  01B536  0E01               	movlw	1
 10576  01B538                     L10:
 10577  01B538  6E01               	movwf	btemp^0,c
 10578                           
 10579                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 10580  01B53A  0EFA               	movlw	250
 10581  01B53C  26E1               	addwf	fsr1l,f,c
 10582  01B53E  0EFF               	movlw	255
 10583  01B540  22E2               	addwfc	fsr1h,f,c
 10584  01B542  0012               	return		;funcret
 10585  01B544                     __end_of_check_range:
 10586                           	opt callstack 0
 10587                           
 10588 ;; *************** function _convert_adc_data *****************
 10589 ;; Defined at:
 10590 ;;		line 51 in file "mbmc.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  i               1  [STACK] unsigned char 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1  [STACK] void 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/1
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:   18
 10611 ;; This function calls:
 10612 ;;		_conv_raw_result
 10613 ;;		_lp_filter
 10614 ;; This function is called by:
 10615 ;;		_main
 10616 ;; This function uses a reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text35
 10620  01AC16                     __ptext35:
 10621                           	opt callstack 0
 10622  01AC16                     _convert_adc_data:
 10623                           	opt callstack 0
 10624                           
 10625                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10626  01AC16  52E6               	movf	postinc1,f,c
 10627                           
 10628                           ;mbmc.c: 53:  uint8_t i = 0;
 10629                           ;stkvar	_i @ sp[(-1)+0]
 10630                           
 10631                           ;incstack = 0
 10632  01AC18  0EFF               	movlw	-1
 10633  01AC1A  6AE3               	clrf	plusw1,c
 10634  01AC1C                     l11515:
 10635                           
 10636                           ;mbmc.c: 56:   if (V.calib) {
 10637  01AC1C  0101               	movlb	1	; () banked
 10638  01AC1E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 10639  01AC20  B4D8               	btfsc	status,2,c
 10640  01AC22  D01B               	goto	l11519
 10641                           
 10642                           ; BSR set to: 1
 10643                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 10644  01AC24  0E01               	movlw	1
 10645  01AC26  6EE6               	movwf	postinc1,c
 10646                           
 10647                           ;stkvar	_i @ sp[(-2)+0]
 10648  01AC28  0EFE               	movlw	-2
 10649  01AC2A  50E3               	movf	plusw1,w,c
 10650  01AC2C  6EE6               	movwf	postinc1,c
 10651  01AC2E  0E01               	movlw	1
 10652  01AC30  6EE6               	movwf	postinc1,c
 10653                           
 10654                           ;stkvar	_i @ sp[(-4)+0]
 10655  01AC32  0EFC               	movlw	-4
 10656  01AC34  50E3               	movf	plusw1,w,c
 10657  01AC36  6EE6               	movwf	postinc1,c
 10658  01AC38  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10659  01AC3C  0060  F007  FFE6   	movff	btemp,postinc1
 10660  01AC42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10661  01AC48  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10662  01AC4E  0060  F013  FFE6   	movff	btemp+3,postinc1
 10663  01AC54  ECD1  F0C5         	call	_lp_filter	;wreg free
 10664  01AC58  D01A               	goto	L11
 10665  01AC5A                     l11519:
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 10669  01AC5A  0E00               	movlw	0
 10670  01AC5C  6EE6               	movwf	postinc1,c
 10671                           
 10672                           ;stkvar	_i @ sp[(-2)+0]
 10673  01AC5E  0EFE               	movlw	-2
 10674  01AC60  50E3               	movf	plusw1,w,c
 10675  01AC62  6EE6               	movwf	postinc1,c
 10676  01AC64  0E00               	movlw	0
 10677  01AC66  6EE6               	movwf	postinc1,c
 10678                           
 10679                           ;stkvar	_i @ sp[(-4)+0]
 10680  01AC68  0EFC               	movlw	-4
 10681  01AC6A  50E3               	movf	plusw1,w,c
 10682  01AC6C  6EE6               	movwf	postinc1,c
 10683  01AC6E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 10684  01AC72  0060  F007  FFE6   	movff	btemp,postinc1
 10685  01AC78  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10686  01AC7E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10687  01AC84  0060  F013  FFE6   	movff	btemp+3,postinc1
 10688  01AC8A  ECD1  F0C5         	call	_lp_filter	;wreg free
 10689  01AC8E                     L11:
 10690                           
 10691                           ;stkvar	_i @ sp[(-1)+0]
 10692  01AC8E  0EFF               	movlw	-1
 10693  01AC90  50E3               	movf	plusw1,w,c
 10694  01AC92  0D04               	mullw	4
 10695  01AC94  0EFF               	movlw	low _C
 10696  01AC96  24F3               	addwf	243,w,c
 10697  01AC98  6ED9               	movwf	fsr2l,c
 10698  01AC9A  0E06               	movlw	high _C
 10699  01AC9C  20F4               	addwfc	prodh,w,c
 10700  01AC9E  6EDA               	movwf	fsr2h,c
 10701  01ACA0  0060  F007  FFDE   	movff	btemp,postinc2
 10702  01ACA6  0060  F00B  FFDE   	movff	btemp+1,postinc2
 10703  01ACAC  0060  F00F  FFDE   	movff	btemp+2,postinc2
 10704  01ACB2  0060  F013  FFDE   	movff	btemp+3,postinc2
 10705                           
 10706                           ;mbmc.c: 61:  } while (++i < 16);
 10707                           ;stkvar	_i @ sp[(-1)+0]
 10708  01ACB8  0EFF               	movlw	-1
 10709  01ACBA  2AE3               	incf	plusw1,f,c
 10710  01ACBC  0EFF               	movlw	-1
 10711  01ACBE  006F FF8C  F001    	movff	plusw1,btemp
 10712  01ACC4  0E0F               	movlw	15
 10713  01ACC6  6401               	cpfsgt	btemp^0,c
 10714  01ACC8  D7A9               	goto	l11515
 10715                           
 10716                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10717  01ACCA  52E5               	movf	postdec1,f,c
 10718  01ACCC  0012               	return		;funcret
 10719  01ACCE                     __end_of_convert_adc_data:
 10720                           	opt callstack 0
 10721                           
 10722 ;; *************** function _clear_hid_pflags *****************
 10723 ;; Defined at:
 10724 ;;		line 67 in file "hid.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  h               2  [STACK] PTR struct H_data
 10727 ;;		 -> H(9), 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1  [STACK] void 
 10732 ;; Registers used:
 10733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 10734 ;; Tracked objects:
 10735 ;;		On entry : 3E/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:   15
 10746 ;; This function calls:
 10747 ;;		Nothing
 10748 ;; This function is called by:
 10749 ;;		_main
 10750 ;; This function uses a reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text36
 10754  01B866                     __ptext36:
 10755                           	opt callstack 0
 10756  01B866                     _clear_hid_pflags:
 10757                           	opt callstack 15
 10758                           
 10759                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 10760                           ;stkvar	_h @ sp[(0)+-2]
 10761                           
 10762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10763                           ;incstack = 0
 10764  01B866  0EFE               	movlw	-2
 10765  01B868  006F FF8C  F00B    	movff	plusw1,btemp+10
 10766  01B86E  0EFF               	movlw	-1
 10767  01B870  006F FF8C  F00C    	movff	plusw1,btemp+11
 10768  01B876  0E03               	movlw	3
 10769  01B878  240B               	addwf	(btemp+10)^0,w,c
 10770  01B87A  6ED9               	movwf	fsr2l,c
 10771  01B87C  0E00               	movlw	0
 10772  01B87E  200C               	addwfc	(btemp+11)^0,w,c
 10773  01B880  6EDA               	movwf	fsr2h,c
 10774  01B882  0E00               	movlw	0
 10775  01B884  6EDF               	movwf	indf2,c
 10776                           
 10777                           ;hid.c: 70:  h->enter_p = SW_OFF;
 10778                           ;stkvar	_h @ sp[(0)+-2]
 10779  01B886  0EFE               	movlw	-2
 10780  01B888  006F FF8C  F00B    	movff	plusw1,btemp+10
 10781  01B88E  0EFF               	movlw	-1
 10782  01B890  006F FF8C  F00C    	movff	plusw1,btemp+11
 10783  01B896  0E05               	movlw	5
 10784  01B898  240B               	addwf	(btemp+10)^0,w,c
 10785  01B89A  6ED9               	movwf	fsr2l,c
 10786  01B89C  0E00               	movlw	0
 10787  01B89E  200C               	addwfc	(btemp+11)^0,w,c
 10788  01B8A0  6EDA               	movwf	fsr2h,c
 10789  01B8A2  0E00               	movlw	0
 10790  01B8A4  6EDF               	movwf	indf2,c
 10791                           
 10792                           ;hid.c: 71:  h->calib_p = SW_OFF;
 10793                           ;stkvar	_h @ sp[(0)+-2]
 10794  01B8A6  0EFE               	movlw	-2
 10795  01B8A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 10796  01B8AE  0EFF               	movlw	-1
 10797  01B8B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10798  01B8B6  0E07               	movlw	7
 10799  01B8B8  240B               	addwf	(btemp+10)^0,w,c
 10800  01B8BA  6ED9               	movwf	fsr2l,c
 10801  01B8BC  0E00               	movlw	0
 10802  01B8BE  200C               	addwfc	(btemp+11)^0,w,c
 10803  01B8C0  6EDA               	movwf	fsr2h,c
 10804  01B8C2  0E00               	movlw	0
 10805  01B8C4  6EDF               	movwf	indf2,c
 10806                           
 10807                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 10808  01B8C6  52E5               	movf	postdec1,f,c
 10809  01B8C8  52E5               	movf	postdec1,f,c
 10810  01B8CA  0012               	return		;funcret
 10811  01B8CC                     __end_of_clear_hid_pflags:
 10812                           	opt callstack 0
 10813                           
 10814 ;; *************** function _check_help *****************
 10815 ;; Defined at:
 10816 ;;		line 40 in file "mconfig.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  flipper         1  [STACK] const _Bool 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;  estatus         1    0        _Bool 
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1  [STACK] _Bool 
 10823 ;; Registers used:
 10824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10825 ;; Tracked objects:
 10826 ;;		On entry : 3F/1
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10834 ;;Total ram usage:        0 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; Hardware stack levels required when called:   28
 10837 ;; This function calls:
 10838 ;;		_StartTimer
 10839 ;;		_TimerDone
 10840 ;;		_display_help
 10841 ;;		_display_info
 10842 ;;		_get_vterm_ptr
 10843 ;;		_help_button
 10844 ;;		_mode_lamp_bright
 10845 ;;		_mode_lamp_dim
 10846 ;;		_set_display_info
 10847 ;;		_set_temp_display_help
 10848 ;;		_set_vterm
 10849 ;;		_sprintf
 10850 ;;		_update_lcd
 10851 ;;		_vterm_dump
 10852 ;; This function is called by:
 10853 ;;		_main
 10854 ;; This function uses a reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text37
 10858  01878C                     __ptext37:
 10859                           	opt callstack 0
 10860  01878C                     _check_help:
 10861                           	opt callstack 2
 10862                           
 10863                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 10864                           
 10865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10866                           ;incstack = 0
 10867  01878C  EC9C  F0E0         	call	_help_button	;wreg free
 10868  018790  5001               	movf	btemp^0,w,c
 10869  018792  B4D8               	btfsc	status,2,c
 10870  018794  D0D0               	goto	l13667
 10871  018796  EC47  F0E5         	call	_display_info	;wreg free
 10872  01879A  0401               	decf	btemp^0,w,c
 10873  01879C  B4D8               	btfsc	status,2,c
 10874  01879E  D0CB               	goto	l13667
 10875                           
 10876                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 10877  0187A0  0EDC               	movlw	220
 10878  0187A2  6EE6               	movwf	postinc1,c
 10879  0187A4  0E05               	movlw	5
 10880  0187A6  6EE6               	movwf	postinc1,c
 10881  0187A8  0E0B               	movlw	11
 10882  0187AA  6EE6               	movwf	postinc1,c
 10883  0187AC  EC00  F0E0         	call	_StartTimer	;wreg free
 10884                           
 10885                           ;mconfig.c: 48:   if (V.debug)
 10886  0187B0  0101               	movlb	1	; () banked
 10887  0187B2  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 10888                           
 10889                           ; BSR set to: 1
 10890                           ;mconfig.c: 49:    vterm_dump();
 10891  0187B4  EC6D  F0CE         	call	_vterm_dump	;wreg free
 10892                           
 10893                           ;mconfig.c: 51:   set_vterm(1);
 10894  0187B8  0E01               	movlw	1
 10895  0187BA  6EE6               	movwf	postinc1,c
 10896  0187BC  EC4B  F0E4         	call	_set_vterm	;wreg free
 10897                           
 10898                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 10899  0187C0  EC47  F0E5         	call	_display_info	;wreg free
 10900  0187C4  5001               	movf	btemp^0,w,c
 10901  0187C6  6EE6               	movwf	postinc1,c
 10902  0187C8  ECEF  F0E4         	call	_set_temp_display_help	;wreg free
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 10906  0187CC  0E01               	movlw	1
 10907  0187CE  6EE6               	movwf	postinc1,c
 10908  0187D0  EC5A  F0E4         	call	_set_display_info	;wreg free
 10909                           
 10910                           ;mconfig.c: 54:   if (flipper) {
 10911                           ;stkvar	_flipper @ sp[(0)+-1]
 10912  0187D4  0EFF               	movlw	-1
 10913  0187D6  50E3               	movf	plusw1,w,c
 10914  0187D8  B4D8               	btfsc	status,2,c
 10915  0187DA  D019               	goto	l13653
 10916                           
 10917                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 10918  0187DC  0EB2               	movlw	low STR_56
 10919  0187DE  6EE6               	movwf	postinc1,c
 10920  0187E0  0EFF               	movlw	high STR_56
 10921  0187E2  6EE6               	movwf	postinc1,c
 10922  0187E4  0E5C               	movlw	low STR_58
 10923  0187E6  6EE6               	movwf	postinc1,c
 10924  0187E8  0EFF               	movlw	high STR_58
 10925  0187EA  6EE6               	movwf	postinc1,c
 10926  0187EC  0E01               	movlw	1
 10927  0187EE  6EE6               	movwf	postinc1,c
 10928  0187F0  0E00               	movlw	0
 10929  0187F2  6EE6               	movwf	postinc1,c
 10930  0187F4  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 10931  0187F8  0060  F007  FFE6   	movff	btemp,postinc1
 10932  0187FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10933  018804  0E06               	movlw	6
 10934  018806  6EE6               	movwf	postinc1,c
 10935  018808  ECC0  F0D1         	call	_sprintf	;wreg free
 10936                           
 10937                           ;mconfig.c: 56:   } else {
 10938  01880C  D018               	goto	l1697
 10939  01880E                     l13653:
 10940                           
 10941                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 10942  01880E  0EC8               	movlw	low STR_57
 10943  018810  6EE6               	movwf	postinc1,c
 10944  018812  0EFF               	movlw	high STR_57
 10945  018814  6EE6               	movwf	postinc1,c
 10946  018816  0E5C               	movlw	low STR_58
 10947  018818  6EE6               	movwf	postinc1,c
 10948  01881A  0EFF               	movlw	high STR_58
 10949  01881C  6EE6               	movwf	postinc1,c
 10950  01881E  0E01               	movlw	1
 10951  018820  6EE6               	movwf	postinc1,c
 10952  018822  0E00               	movlw	0
 10953  018824  6EE6               	movwf	postinc1,c
 10954  018826  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 10955  01882A  0060  F007  FFE6   	movff	btemp,postinc1
 10956  018830  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10957  018836  0E06               	movlw	6
 10958  018838  6EE6               	movwf	postinc1,c
 10959  01883A  ECC0  F0D1         	call	_sprintf	;wreg free
 10960  01883E                     l1697:
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 10964  01883E  0101               	movlb	1	; () banked
 10965  018840  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10966  018842  32E8               	rrcf	wreg,f,c
 10967  018844  32E8               	rrcf	wreg,f,c
 10968  018846  0B03               	andlw	3
 10969  018848  0D24               	mullw	36
 10970  01884A  0E12               	movlw	18
 10971  01884C  26F3               	addwf	243,f,c
 10972  01884E  0E00               	movlw	0
 10973  018850  22F4               	addwfc	244,f,c
 10974  018852  0E07               	movlw	low _T
 10975  018854  6E0B               	movwf	(btemp+10)^0,c
 10976  018856  0EFA               	movlw	high _T
 10977  018858  6E0C               	movwf	(btemp+11)^0,c
 10978  01885A  50F3               	movf	243,w,c
 10979  01885C  260B               	addwf	(btemp+10)^0,f,c
 10980  01885E  50F4               	movf	244,w,c
 10981  018860  220C               	addwfc	(btemp+11)^0,f,c
 10982  018862  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10983  018868  0060  F033  FFE6   	movff	btemp+11,postinc1
 10984  01886E  0EBE               	movlw	low STR_60
 10985  018870  6EE6               	movwf	postinc1,c
 10986  018872  0EFF               	movlw	high STR_60
 10987  018874  6EE6               	movwf	postinc1,c
 10988  018876  0E01               	movlw	1
 10989  018878  6EE6               	movwf	postinc1,c
 10990  01887A  0E01               	movlw	1
 10991  01887C  6EE6               	movwf	postinc1,c
 10992  01887E  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 10993  018882  0060  F007  FFE6   	movff	btemp,postinc1
 10994  018888  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10995  01888E  0E06               	movlw	6
 10996  018890  6EE6               	movwf	postinc1,c
 10997  018892  ECC0  F0D1         	call	_sprintf	;wreg free
 10998                           
 10999                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 11000  018896  0101               	movlb	1	; () banked
 11001  018898  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 11002  01889A  32E8               	rrcf	wreg,f,c
 11003  01889C  32E8               	rrcf	wreg,f,c
 11004  01889E  0B03               	andlw	3
 11005  0188A0  0D24               	mullw	36
 11006  0188A2  0E07               	movlw	low _T
 11007  0188A4  6E0B               	movwf	(btemp+10)^0,c
 11008  0188A6  0EFA               	movlw	high _T
 11009  0188A8  6E0C               	movwf	(btemp+11)^0,c
 11010  0188AA  50F3               	movf	243,w,c
 11011  0188AC  260B               	addwf	(btemp+10)^0,f,c
 11012  0188AE  50F4               	movf	244,w,c
 11013  0188B0  220C               	addwfc	(btemp+11)^0,f,c
 11014  0188B2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11015  0188B8  0060  F033  FFE6   	movff	btemp+11,postinc1
 11016  0188BE  0EBE               	movlw	low STR_60
 11017  0188C0  6EE6               	movwf	postinc1,c
 11018  0188C2  0EFF               	movlw	high STR_60
 11019  0188C4  6EE6               	movwf	postinc1,c
 11020  0188C6  0E01               	movlw	1
 11021  0188C8  6EE6               	movwf	postinc1,c
 11022  0188CA  0E02               	movlw	2
 11023  0188CC  6EE6               	movwf	postinc1,c
 11024  0188CE  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11025  0188D2  0060  F007  FFE6   	movff	btemp,postinc1
 11026  0188D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11027  0188DE  0E06               	movlw	6
 11028  0188E0  6EE6               	movwf	postinc1,c
 11029  0188E2  ECC0  F0D1         	call	_sprintf	;wreg free
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;mconfig.c: 61:   V.help_id++;
 11033  0188E6  EE20  F1A2         	lfsr	2,_V+155	;volatile
 11034  0188EA  38DF               	swapf	223,w,c
 11035  0188EC  6E0C               	movwf	(btemp+11)^0,c
 11036  0188EE  320C               	rrcf	(btemp+11)^0,f,c
 11037  0188F0  300C               	rrcf	(btemp+11)^0,w,c
 11038  0188F2  0B03               	andlw	3
 11039  0188F4  6E0C               	movwf	(btemp+11)^0,c
 11040  0188F6  2A0C               	incf	(btemp+11)^0,f,c
 11041  0188F8  3A0C               	swapf	(btemp+11)^0,f,c
 11042  0188FA  360C               	rlcf	(btemp+11)^0,f,c
 11043  0188FC  360C               	rlcf	(btemp+11)^0,f,c
 11044  0188FE  50DF               	movf	223,w,c
 11045  018900  180C               	xorwf	(btemp+11)^0,w,c
 11046  018902  0B3F               	andlw	-193
 11047  018904  180C               	xorwf	(btemp+11)^0,w,c
 11048  018906  6EDF               	movwf	223,c
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 11052  018908  0EB8               	movlw	184
 11053  01890A  6EE6               	movwf	postinc1,c
 11054  01890C  0E0B               	movlw	11
 11055  01890E  6EE6               	movwf	postinc1,c
 11056  018910  0E09               	movlw	9
 11057  018912  6EE6               	movwf	postinc1,c
 11058  018914  EC00  F0E0         	call	_StartTimer	;wreg free
 11059                           
 11060                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 11061  018918  0EB8               	movlw	184
 11062  01891A  6EE6               	movwf	postinc1,c
 11063  01891C  0E0B               	movlw	11
 11064  01891E  6EE6               	movwf	postinc1,c
 11065  018920  0E07               	movlw	7
 11066  018922  6EE6               	movwf	postinc1,c
 11067  018924  EC00  F0E0         	call	_StartTimer	;wreg free
 11068                           
 11069                           ;mconfig.c: 64:   mode_lamp_bright();
 11070  018928  EC06  F0E5         	call	_mode_lamp_bright	;wreg free
 11071                           
 11072                           ;mconfig.c: 65:   update_lcd(1);
 11073  01892C  0E01               	movlw	1
 11074  01892E  6EE6               	movwf	postinc1,c
 11075  018930  EC38  F0D1         	call	_update_lcd	;wreg free
 11076                           
 11077                           ;mconfig.c: 67:  } else {
 11078  018934  D032               	goto	l1698
 11079  018936                     l13667:
 11080                           
 11081                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 11082  018936  0E09               	movlw	9
 11083  018938  6EE6               	movwf	postinc1,c
 11084  01893A  EC55  F0E2         	call	_TimerDone	;wreg free
 11085  01893E  5001               	movf	btemp^0,w,c
 11086  018940  B4D8               	btfsc	status,2,c
 11087  018942  D02B               	goto	l1698
 11088                           
 11089                           ;mconfig.c: 69:    set_vterm(0);
 11090  018944  0E00               	movlw	0
 11091  018946  6EE6               	movwf	postinc1,c
 11092  018948  EC4B  F0E4         	call	_set_vterm	;wreg free
 11093                           
 11094                           ;mconfig.c: 70:    V.help = 0;
 11095  01894C  0101               	movlb	1	; () banked
 11096  01894E  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 11097                           
 11098                           ; BSR set to: 1
 11099                           ;mconfig.c: 71:    set_display_info(display_help());
 11100  018950  EC4B  F0E5         	call	_display_help	;wreg free
 11101  018954  5001               	movf	btemp^0,w,c
 11102  018956  6EE6               	movwf	postinc1,c
 11103  018958  EC5A  F0E4         	call	_set_display_info	;wreg free
 11104                           
 11105                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 11106  01895C  0060  F673  FFE6   	movff	_V+149,postinc1
 11107  018962  0060  F677  FFE6   	movff	_V+150,postinc1
 11108  018968  EC93  F0E4         	call	_mode_lamp_dim	;wreg free
 11109                           
 11110                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 11111  01896C  0E0B               	movlw	11
 11112  01896E  6EE6               	movwf	postinc1,c
 11113  018970  EC55  F0E2         	call	_TimerDone	;wreg free
 11114  018974  5001               	movf	btemp^0,w,c
 11115  018976  B4D8               	btfsc	status,2,c
 11116  018978  D010               	goto	l1698
 11117                           
 11118                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 11119  01897A  0101               	movlb	1	; () banked
 11120  01897C  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 11121  01897E  A4D8               	btfss	status,2,c
 11122  018980  D002               	goto	u13140
 11123  018982  0E01               	movlw	1
 11124  018984  D001               	goto	u13150
 11125  018986                     u13140:
 11126  018986  0E00               	movlw	0
 11127  018988                     u13150:
 11128  018988  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 11129                           
 11130                           ; BSR set to: 1
 11131                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 11132  01898A  0EDC               	movlw	220
 11133  01898C  6EE6               	movwf	postinc1,c
 11134  01898E  0E05               	movlw	5
 11135  018990  6EE6               	movwf	postinc1,c
 11136  018992  0E0B               	movlw	11
 11137  018994  6EE6               	movwf	postinc1,c
 11138  018996  EC00  F0E0         	call	_StartTimer	;wreg free
 11139  01899A                     l1698:
 11140                           
 11141                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11142  01899A  52E5               	movf	postdec1,f,c
 11143  01899C  0012               	return		;funcret
 11144  01899E                     __end_of_check_help:
 11145                           	opt callstack 0
 11146                           
 11147 ;; *************** function _vterm_dump *****************
 11148 ;; Defined at:
 11149 ;;		line 121 in file "mconfig.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1  [STACK] void 
 11156 ;; Registers used:
 11157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11158 ;; Tracked objects:
 11159 ;;		On entry : 3F/1
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:   27
 11170 ;; This function calls:
 11171 ;;		_WaitMs
 11172 ;;		_eaDogM_WriteStringAtPos
 11173 ;;		_get_vterm_ptr
 11174 ;;		_sprintf
 11175 ;;		_wait_lcd_done
 11176 ;; This function is called by:
 11177 ;;		_check_help
 11178 ;; This function uses a reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text38
 11182  019CDA                     __ptext38:
 11183                           	opt callstack 0
 11184  019CDA                     _vterm_dump:
 11185                           	opt callstack 2
 11186                           
 11187                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 11188                           
 11189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11190                           ;incstack = 0
 11191  019CDA  0E01               	movlw	1
 11192  019CDC  6EE6               	movwf	postinc1,c
 11193  019CDE  0E00               	movlw	0
 11194  019CE0  6EE6               	movwf	postinc1,c
 11195  019CE2  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11196  019CE6  0060  F007  FFE6   	movff	btemp,postinc1
 11197  019CEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11198  019CF2  0E00               	movlw	0
 11199  019CF4  6EE6               	movwf	postinc1,c
 11200  019CF6  0E00               	movlw	0
 11201  019CF8  6EE6               	movwf	postinc1,c
 11202  019CFA  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11203  019CFE  0060  F007  FFE6   	movff	btemp,postinc1
 11204  019D04  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11205  019D0A  0EA3               	movlw	low STR_62
 11206  019D0C  6EE6               	movwf	postinc1,c
 11207  019D0E  0EFF               	movlw	high STR_62
 11208  019D10  6EE6               	movwf	postinc1,c
 11209  019D12  0E08               	movlw	low (_V+1)
 11210  019D14  6EE6               	movwf	postinc1,c
 11211  019D16  0E01               	movlw	high (_V+1)
 11212  019D18  6EE6               	movwf	postinc1,c
 11213  019D1A  0E08               	movlw	8
 11214  019D1C  6EE6               	movwf	postinc1,c
 11215  019D1E  ECC0  F0D1         	call	_sprintf	;wreg free
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;mconfig.c: 124:  wait_lcd_done();
 11219  019D22  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 11223  019D26  0E08               	movlw	low (_V+1)
 11224  019D28  6EE6               	movwf	postinc1,c
 11225  019D2A  0E01               	movlw	high (_V+1)
 11226  019D2C  6EE6               	movwf	postinc1,c
 11227  019D2E  0E00               	movlw	0
 11228  019D30  6EE6               	movwf	postinc1,c
 11229  019D32  0E00               	movlw	0
 11230  019D34  6EE6               	movwf	postinc1,c
 11231  019D36  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11232                           
 11233                           ; BSR set to: 59
 11234                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 11235  019D3A  0E01               	movlw	1
 11236  019D3C  6EE6               	movwf	postinc1,c
 11237  019D3E  0E01               	movlw	1
 11238  019D40  6EE6               	movwf	postinc1,c
 11239  019D42  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11240  019D46  0060  F007  FFE6   	movff	btemp,postinc1
 11241  019D4C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11242  019D52  0E00               	movlw	0
 11243  019D54  6EE6               	movwf	postinc1,c
 11244  019D56  0E01               	movlw	1
 11245  019D58  6EE6               	movwf	postinc1,c
 11246  019D5A  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11247  019D5E  0060  F007  FFE6   	movff	btemp,postinc1
 11248  019D64  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11249  019D6A  0EA3               	movlw	low STR_62
 11250  019D6C  6EE6               	movwf	postinc1,c
 11251  019D6E  0EFF               	movlw	high STR_62
 11252  019D70  6EE6               	movwf	postinc1,c
 11253  019D72  0E08               	movlw	low (_V+1)
 11254  019D74  6EE6               	movwf	postinc1,c
 11255  019D76  0E01               	movlw	high (_V+1)
 11256  019D78  6EE6               	movwf	postinc1,c
 11257  019D7A  0E08               	movlw	8
 11258  019D7C  6EE6               	movwf	postinc1,c
 11259  019D7E  ECC0  F0D1         	call	_sprintf	;wreg free
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;mconfig.c: 127:  wait_lcd_done();
 11263  019D82  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11264                           
 11265                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 11266  019D86  0E08               	movlw	low (_V+1)
 11267  019D88  6EE6               	movwf	postinc1,c
 11268  019D8A  0E01               	movlw	high (_V+1)
 11269  019D8C  6EE6               	movwf	postinc1,c
 11270  019D8E  0E00               	movlw	0
 11271  019D90  6EE6               	movwf	postinc1,c
 11272  019D92  0E01               	movlw	1
 11273  019D94  6EE6               	movwf	postinc1,c
 11274  019D96  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11275                           
 11276                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 11277  019D9A  0E01               	movlw	1
 11278  019D9C  6EE6               	movwf	postinc1,c
 11279  019D9E  0E02               	movlw	2
 11280  019DA0  6EE6               	movwf	postinc1,c
 11281  019DA2  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11282  019DA6  0060  F007  FFE6   	movff	btemp,postinc1
 11283  019DAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11284  019DB2  0E00               	movlw	0
 11285  019DB4  6EE6               	movwf	postinc1,c
 11286  019DB6  0E02               	movlw	2
 11287  019DB8  6EE6               	movwf	postinc1,c
 11288  019DBA  ECD2  F0E1         	call	_get_vterm_ptr	;wreg free
 11289  019DBE  0060  F007  FFE6   	movff	btemp,postinc1
 11290  019DC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11291  019DCA  0EA3               	movlw	low STR_62
 11292  019DCC  6EE6               	movwf	postinc1,c
 11293  019DCE  0EFF               	movlw	high STR_62
 11294  019DD0  6EE6               	movwf	postinc1,c
 11295  019DD2  0E08               	movlw	low (_V+1)
 11296  019DD4  6EE6               	movwf	postinc1,c
 11297  019DD6  0E01               	movlw	high (_V+1)
 11298  019DD8  6EE6               	movwf	postinc1,c
 11299  019DDA  0E08               	movlw	8
 11300  019DDC  6EE6               	movwf	postinc1,c
 11301  019DDE  ECC0  F0D1         	call	_sprintf	;wreg free
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;mconfig.c: 130:  wait_lcd_done();
 11305  019DE2  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 11309  019DE6  0E08               	movlw	low (_V+1)
 11310  019DE8  6EE6               	movwf	postinc1,c
 11311  019DEA  0E01               	movlw	high (_V+1)
 11312  019DEC  6EE6               	movwf	postinc1,c
 11313  019DEE  0E00               	movlw	0
 11314  019DF0  6EE6               	movwf	postinc1,c
 11315  019DF2  0E02               	movlw	2
 11316  019DF4  6EE6               	movwf	postinc1,c
 11317  019DF6  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11318                           
 11319                           ; BSR set to: 59
 11320                           ;mconfig.c: 132:  WaitMs(3000);
 11321  019DFA  0EB8               	movlw	184
 11322  019DFC  6EE6               	movwf	postinc1,c
 11323  019DFE  0E0B               	movlw	11
 11324  019E00  6EE6               	movwf	postinc1,c
 11325  019E02  ECEF  F0E0         	call	_WaitMs	;wreg free
 11326                           
 11327                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11328  019E06  0012               	return		;funcret
 11329  019E08                     __end_of_vterm_dump:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _sprintf *****************
 11333 ;; Defined at:
 11334 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  s               2  [STACK] PTR unsigned char 
 11337 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 11338 ;;  fmt             2  [STACK] PTR const unsigned char 
 11339 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 11340 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 11341 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 11342 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 11343 ;;		 -> STR_58(19), STR_53(21), STR_52(21), STR_51(21), 
 11344 ;;		 -> STR_50(21), STR_49(21), STR_48(21), STR_47(20), 
 11345 ;;		 -> STR_46(20), STR_45(21), STR_44(21), STR_43(21), 
 11346 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 11347 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 11348 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 11349 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 11350 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 11351 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 11352 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 11353 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 11354 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 11355 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 11356 ;;		 -> STR_1(21), 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;  f               6  [STACK] struct _IO_FILE
 11359 ;;  ap              2  [STACK] PTR void [1]
 11360 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11361 ;;  ret             2    0        int 
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  2  [STACK] int 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/1
 11368 ;;		On exit  : 3F/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:   23
 11378 ;; This function calls:
 11379 ;;		_vfprintf
 11380 ;; This function is called by:
 11381 ;;		_main
 11382 ;;		_current_sensor_cal
 11383 ;;		_check_help
 11384 ;;		_vterm_dump
 11385 ;;		_calc_bsoc
 11386 ;; This function uses a reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text39
 11390  01A380                     __ptext39:
 11391                           	opt callstack 0
 11392  01A380                     _sprintf:
 11393                           	opt callstack 0
 11394                           
 11395                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11396  01A380  0E08               	movlw	8
 11397  01A382  26E1               	addwf	fsr1l,f,c
 11398  01A384  0E00               	movlw	0
 11399  01A386  22E2               	addwfc	fsr1h,f,c
 11400                           
 11401                           ;incstack = 0
 11402 ;; hardware stack exceeded
 11403  01A388  0EFE               	movlw	254
 11404  01A38A  6E0B               	movwf	(btemp+10)^0,c
 11405  01A38C  0EFF               	movlw	255
 11406  01A38E  6E0C               	movwf	(btemp+11)^0,c
 11407                           
 11408                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 11409  01A390  0EF5               	movlw	245
 11410  01A392  24E1               	addwf	fsr1l,w,c
 11411  01A394  6E09               	movwf	(btemp+8)^0,c
 11412  01A396  0EFF               	movlw	255
 11413  01A398  20E2               	addwfc	fsr1h,w,c
 11414  01A39A  6E0A               	movwf	(btemp+9)^0,c
 11415  01A39C  500B               	movf	(btemp+10)^0,w,c
 11416  01A39E  2609               	addwf	(btemp+8)^0,f,c
 11417  01A3A0  500C               	movf	(btemp+11)^0,w,c
 11418  01A3A2  220A               	addwfc	(btemp+9)^0,f,c
 11419                           
 11420                           ;stkvar	_ap @ sp[(-8)+6]
 11421  01A3A4  0EFF               	movlw	-1
 11422  01A3A6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11423  01A3AC  0EFE               	movlw	-2
 11424  01A3AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 11425                           
 11426                           ;stkvar	_s @ sp[(-8)+-3]
 11427  01A3B4  0EF5               	movlw	-11
 11428  01A3B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11429  01A3BC  0EF6               	movlw	-10
 11430  01A3BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11431                           
 11432                           ;stkvar	_f @ sp[(-8)+0]
 11433  01A3C4  0EF9               	movlw	-7
 11434  01A3C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 11435  01A3CC  0EF8               	movlw	-8
 11436  01A3CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11437                           
 11438                           ;stkvar	_f @ sp[(-8)+0]
 11439  01A3D4  0EFA               	movlw	250
 11440  01A3D6  24E1               	addwf	fsr1l,w,c
 11441  01A3D8  6ED9               	movwf	fsr2l,c
 11442  01A3DA  0EFF               	movlw	255
 11443  01A3DC  20E2               	addwfc	fsr1h,w,c
 11444  01A3DE  6EDA               	movwf	fsr2h,c
 11445  01A3E0  0E00               	movlw	0
 11446  01A3E2  6EDE               	movwf	postinc2,c
 11447  01A3E4  0E00               	movlw	0
 11448  01A3E6  6EDD               	movwf	postdec2,c
 11449                           
 11450                           ;stkvar	_f @ sp[(-8)+0]
 11451  01A3E8  0EFC               	movlw	252
 11452  01A3EA  24E1               	addwf	fsr1l,w,c
 11453  01A3EC  6ED9               	movwf	fsr2l,c
 11454  01A3EE  0EFF               	movlw	255
 11455  01A3F0  20E2               	addwfc	fsr1h,w,c
 11456  01A3F2  6EDA               	movwf	fsr2h,c
 11457  01A3F4  0E00               	movlw	0
 11458  01A3F6  6EDE               	movwf	postinc2,c
 11459  01A3F8  0E00               	movlw	0
 11460  01A3FA  6EDD               	movwf	postdec2,c
 11461                           
 11462                           ;stkvar	_ap @ sp[(-8)+6]
 11463  01A3FC  0EFE               	movlw	254
 11464  01A3FE  24E1               	addwf	fsr1l,w,c
 11465  01A400  6E01               	movwf	btemp^0,c
 11466  01A402  0EFF               	movlw	255
 11467  01A404  20E2               	addwfc	fsr1h,w,c
 11468  01A406  6E02               	movwf	(btemp+1)^0,c
 11469  01A408  0060  F007  FFE6   	movff	btemp,postinc1
 11470  01A40E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11471                           
 11472                           ;stkvar	_fmt @ sp[(-10)+-5]
 11473  01A414  0EF1               	movlw	-15
 11474  01A416  006F FF8F FFE6     	movff	plusw1,postinc1
 11475  01A41C  006F FF8F FFE6     	movff	plusw1,postinc1
 11476                           
 11477                           ;stkvar	_f @ sp[(-12)+0]
 11478  01A422  0EF4               	movlw	244
 11479  01A424  24E1               	addwf	fsr1l,w,c
 11480  01A426  6E01               	movwf	btemp^0,c
 11481  01A428  0EFF               	movlw	255
 11482  01A42A  20E2               	addwfc	fsr1h,w,c
 11483  01A42C  6E02               	movwf	(btemp+1)^0,c
 11484  01A42E  0060  F007  FFE6   	movff	btemp,postinc1
 11485  01A434  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11486  01A43A  EC19  F0D7         	call	_vfprintf	;wreg free
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;stkvar	_f @ sp[(-8)+0]
 11490  01A43E  0EFA               	movlw	250
 11491  01A440  24E1               	addwf	fsr1l,w,c
 11492  01A442  6ED9               	movwf	fsr2l,c
 11493  01A444  0EFF               	movlw	255
 11494  01A446  20E2               	addwfc	fsr1h,w,c
 11495  01A448  6EDA               	movwf	fsr2h,c
 11496  01A44A  006F FF78  F00B    	movff	postinc2,btemp+10
 11497  01A450  006F FF74  F00C    	movff	postdec2,btemp+11
 11498                           
 11499                           ;stkvar	_s @ sp[(-8)+-3]
 11500  01A456  0EF5               	movlw	-11
 11501  01A458  006F FF8C  F009    	movff	plusw1,btemp+8
 11502  01A45E  0EF6               	movlw	-10
 11503  01A460  006F FF8C  F00A    	movff	plusw1,btemp+9
 11504  01A466  500B               	movf	(btemp+10)^0,w,c
 11505  01A468  2409               	addwf	(btemp+8)^0,w,c
 11506  01A46A  6ED9               	movwf	fsr2l,c
 11507  01A46C  500C               	movf	(btemp+11)^0,w,c
 11508  01A46E  200A               	addwfc	(btemp+9)^0,w,c
 11509  01A470  6EDA               	movwf	fsr2h,c
 11510  01A472  0E00               	movlw	0
 11511  01A474  6EDF               	movwf	indf2,c
 11512                           
 11513                           ; BSR set to: 0
 11514                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 11515  01A476  0EF8               	movlw	248
 11516  01A478  26E1               	addwf	fsr1l,f,c
 11517  01A47A  0EFF               	movlw	255
 11518  01A47C  22E2               	addwfc	fsr1h,f,c
 11519  01A47E  52E5               	movf	postdec1,f,c
 11520  01A480  50E7               	movf	indf1,w,c
 11521  01A482  5EE1               	subwf	fsr1l,f,c
 11522  01A484  0E00               	movlw	0
 11523  01A486  5AE2               	subwfb	fsr1h,f,c
 11524  01A488  0012               	return		;funcret
 11525  01A48A                     __end_of_sprintf:
 11526                           	opt callstack 0
 11527                           
 11528 ;; *************** function _get_vterm_ptr *****************
 11529 ;; Defined at:
 11530 ;;		line 116 in file "mconfig.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  line            1  [STACK] const unsigned char 
 11533 ;;  vterm           1  [STACK] const unsigned char 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  2  [STACK] PTR unsigned char 
 11538 ;; Registers used:
 11539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/1
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:   15
 11552 ;; This function calls:
 11553 ;;		Nothing
 11554 ;; This function is called by:
 11555 ;;		_main
 11556 ;;		_current_sensor_cal
 11557 ;;		_check_help
 11558 ;;		_vterm_dump
 11559 ;; This function uses a reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text40
 11563  01C3A4                     __ptext40:
 11564                           	opt callstack 0
 11565  01C3A4                     _get_vterm_ptr:
 11566                           	opt callstack 15
 11567                           
 11568                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 11569                           ;stkvar	_vterm @ sp[(0)+-2]
 11570                           
 11571                           ; BSR set to: 0
 11572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11573                           ;incstack = 0
 11574  01C3A4  0EFE               	movlw	-2
 11575  01C3A6  50E3               	movf	plusw1,w,c
 11576  01C3A8  0B03               	andlw	3
 11577  01C3AA  0D78               	mullw	120
 11578  01C3AC  0E2A               	movlw	low _D
 11579  01C3AE  6E01               	movwf	btemp^0,c
 11580  01C3B0  0E08               	movlw	high _D
 11581  01C3B2  6E02               	movwf	(btemp+1)^0,c
 11582  01C3B4  50F3               	movf	243,w,c
 11583  01C3B6  2601               	addwf	btemp^0,f,c
 11584  01C3B8  50F4               	movf	244,w,c
 11585  01C3BA  2202               	addwfc	(btemp+1)^0,f,c
 11586                           
 11587                           ;stkvar	_line @ sp[(0)+-1]
 11588  01C3BC  0EFF               	movlw	-1
 11589  01C3BE  50E3               	movf	plusw1,w,c
 11590  01C3C0  0B03               	andlw	3
 11591  01C3C2  0D28               	mullw	40
 11592  01C3C4  50F3               	movf	243,w,c
 11593  01C3C6  2601               	addwf	btemp^0,f,c
 11594  01C3C8  50F4               	movf	244,w,c
 11595  01C3CA  2202               	addwfc	(btemp+1)^0,f,c
 11596                           
 11597                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 11598  01C3CC  52E5               	movf	postdec1,f,c
 11599  01C3CE  52E5               	movf	postdec1,f,c
 11600  01C3D0  0012               	return		;funcret
 11601  01C3D2                     __end_of_get_vterm_ptr:
 11602                           	opt callstack 0
 11603                           
 11604 ;; *************** function _WaitMs *****************
 11605 ;; Defined at:
 11606 ;;		line 32 in file "timers.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;  numMilliseco    2  [STACK] const unsigned short 
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;		None
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  1  [STACK] void 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/1
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11624 ;;Total ram usage:        0 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:   16
 11627 ;; This function calls:
 11628 ;;		_StartTimer
 11629 ;;		_TimerDone
 11630 ;; This function is called by:
 11631 ;;		_main
 11632 ;;		_current_sensor_cal
 11633 ;;		_vterm_dump
 11634 ;; This function uses a reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text41
 11638  01C1DE                     __ptext41:
 11639                           	opt callstack 0
 11640  01C1DE                     _WaitMs:
 11641                           	opt callstack 13
 11642                           
 11643                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 11644                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 11645                           
 11646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11647                           ;incstack = 0
 11648  01C1DE  0EFE               	movlw	-2
 11649  01C1E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11650  01C1E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11651  01C1EC  0E00               	movlw	0
 11652  01C1EE  6EE6               	movwf	postinc1,c
 11653  01C1F0  EC00  F0E0         	call	_StartTimer	;wreg free
 11654                           
 11655                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11656  01C1F4  D005               	goto	l10205
 11657  01C1F6                     l1629:
 11658                           
 11659                           ;timers.c: 36:   __nop();
 11660  01C1F6  F000               	nop	
 11661                           
 11662                           ;timers.c: 37:   __nop();
 11663  01C1F8  F000               	nop	
 11664                           
 11665                           ;timers.c: 38:   __nop();
 11666  01C1FA  F000               	nop	
 11667                           
 11668                           ;timers.c: 39:   __nop();
 11669  01C1FC  F000               	nop	
 11670  01C1FE  0004               	clrwdt		;# 
 11671  01C200                     l10205:
 11672                           
 11673                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 11674  01C200  0E00               	movlw	0
 11675  01C202  6EE6               	movwf	postinc1,c
 11676  01C204  EC55  F0E2         	call	_TimerDone	;wreg free
 11677  01C208  5001               	movf	btemp^0,w,c
 11678  01C20A  B4D8               	btfsc	status,2,c
 11679  01C20C  D7F4               	goto	l1629
 11680                           
 11681                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11682  01C20E  52E5               	movf	postdec1,f,c
 11683  01C210  52E5               	movf	postdec1,f,c
 11684  01C212  0012               	return		;funcret
 11685  01C214                     __end_of_WaitMs:
 11686                           	opt callstack 0
 11687                           
 11688 ;; *************** function _update_lcd *****************
 11689 ;; Defined at:
 11690 ;;		line 85 in file "mconfig.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;  vterm           1  [STACK] unsigned char 
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1  [STACK] unsigned char 
 11697 ;; Registers used:
 11698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:   27
 11711 ;; This function calls:
 11712 ;;		_eaDogM_WriteStringAtPos
 11713 ;;		_wait_lcd_done
 11714 ;; This function is called by:
 11715 ;;		_main
 11716 ;;		_current_sensor_cal
 11717 ;;		_check_help
 11718 ;; This function uses a reentrant model
 11719 ;;
 11720                           
 11721                           	psect	text42
 11722  01A270                     __ptext42:
 11723                           	opt callstack 0
 11724  01A270                     _update_lcd:
 11725                           	opt callstack 3
 11726                           
 11727                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 11728                           ;stkvar	_vterm @ sp[(0)+-1]
 11729                           
 11730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11731                           ;incstack = 0
 11732  01A270  0EFF               	movlw	-1
 11733  01A272  006F FF8C  F001    	movff	plusw1,btemp
 11734  01A278  0E03               	movlw	3
 11735  01A27A  1601               	andwf	btemp^0,f,c
 11736  01A27C  0EFF               	movlw	-1
 11737  01A27E  0060  F007  FFE3   	movff	btemp,plusw1
 11738                           
 11739                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 11740  01A284  EE22  F20A         	lfsr	2,_D+480
 11741  01A288  A0DF               	btfss	indf2,0,c
 11742  01A28A  D004               	goto	l13331
 11743                           
 11744                           ;stkvar	_vterm @ sp[(0)+-1]
 11745  01A28C  0EFF               	movlw	-1
 11746  01A28E  50E3               	movf	plusw1,w,c
 11747  01A290  B4D8               	btfsc	status,2,c
 11748  01A292  D074               	goto	l1705
 11749  01A294                     l13331:
 11750                           
 11751                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 11752                           ;stkvar	_vterm @ sp[(0)+-1]
 11753  01A294  0EFF               	movlw	-1
 11754  01A296  50E3               	movf	plusw1,w,c
 11755  01A298  0D78               	mullw	120
 11756  01A29A  0E3E               	movlw	low (_D+20)
 11757  01A29C  24F3               	addwf	243,w,c
 11758  01A29E  6ED9               	movwf	fsr2l,c
 11759  01A2A0  0E08               	movlw	high (_D+20)
 11760  01A2A2  20F4               	addwfc	prodh,w,c
 11761  01A2A4  6EDA               	movwf	fsr2h,c
 11762  01A2A6  0E00               	movlw	0
 11763  01A2A8  6EDF               	movwf	indf2,c
 11764                           
 11765                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 11766                           ;stkvar	_vterm @ sp[(0)+-1]
 11767  01A2AA  0EFF               	movlw	-1
 11768  01A2AC  50E3               	movf	plusw1,w,c
 11769  01A2AE  0D78               	mullw	120
 11770  01A2B0  0E66               	movlw	low (_D+60)
 11771  01A2B2  24F3               	addwf	243,w,c
 11772  01A2B4  6ED9               	movwf	fsr2l,c
 11773  01A2B6  0E08               	movlw	high (_D+60)
 11774  01A2B8  20F4               	addwfc	prodh,w,c
 11775  01A2BA  6EDA               	movwf	fsr2h,c
 11776  01A2BC  0E00               	movlw	0
 11777  01A2BE  6EDF               	movwf	indf2,c
 11778                           
 11779                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 11780                           ;stkvar	_vterm @ sp[(0)+-1]
 11781  01A2C0  0EFF               	movlw	-1
 11782  01A2C2  50E3               	movf	plusw1,w,c
 11783  01A2C4  0D78               	mullw	120
 11784  01A2C6  0E8E               	movlw	low (_D+100)
 11785  01A2C8  24F3               	addwf	243,w,c
 11786  01A2CA  6ED9               	movwf	fsr2l,c
 11787  01A2CC  0E08               	movlw	high (_D+100)
 11788  01A2CE  20F4               	addwfc	prodh,w,c
 11789  01A2D0  6EDA               	movwf	fsr2h,c
 11790  01A2D2  0E00               	movlw	0
 11791  01A2D4  6EDF               	movwf	indf2,c
 11792                           
 11793                           ;mconfig.c: 95:  wait_lcd_done();
 11794  01A2D6  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 11798                           ;stkvar	_vterm @ sp[(0)+-1]
 11799  01A2DA  0EFF               	movlw	-1
 11800  01A2DC  50E3               	movf	plusw1,w,c
 11801  01A2DE  0D78               	mullw	120
 11802  01A2E0  0E2A               	movlw	low _D
 11803  01A2E2  6E0B               	movwf	(btemp+10)^0,c
 11804  01A2E4  0E08               	movlw	high _D
 11805  01A2E6  6E0C               	movwf	(btemp+11)^0,c
 11806  01A2E8  50F3               	movf	243,w,c
 11807  01A2EA  260B               	addwf	(btemp+10)^0,f,c
 11808  01A2EC  50F4               	movf	244,w,c
 11809  01A2EE  220C               	addwfc	(btemp+11)^0,f,c
 11810  01A2F0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11811  01A2F6  0060  F033  FFE6   	movff	btemp+11,postinc1
 11812  01A2FC  0E00               	movlw	0
 11813  01A2FE  6EE6               	movwf	postinc1,c
 11814  01A300  0E00               	movlw	0
 11815  01A302  6EE6               	movwf	postinc1,c
 11816  01A304  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11817                           
 11818                           ; BSR set to: 59
 11819                           ;mconfig.c: 97:  wait_lcd_done();
 11820  01A308  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 11824                           ;stkvar	_vterm @ sp[(0)+-1]
 11825  01A30C  0EFF               	movlw	-1
 11826  01A30E  50E3               	movf	plusw1,w,c
 11827  01A310  0D78               	mullw	120
 11828  01A312  0E2A               	movlw	low _D
 11829  01A314  6E0B               	movwf	(btemp+10)^0,c
 11830  01A316  0E08               	movlw	high _D
 11831  01A318  6E0C               	movwf	(btemp+11)^0,c
 11832  01A31A  0E28               	movlw	40
 11833  01A31C  260B               	addwf	(btemp+10)^0,f,c
 11834  01A31E  0E00               	movlw	0
 11835  01A320  220C               	addwfc	(btemp+11)^0,f,c
 11836  01A322  50F3               	movf	243,w,c
 11837  01A324  260B               	addwf	(btemp+10)^0,f,c
 11838  01A326  50F4               	movf	244,w,c
 11839  01A328  220C               	addwfc	(btemp+11)^0,f,c
 11840  01A32A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11841  01A330  0060  F033  FFE6   	movff	btemp+11,postinc1
 11842  01A336  0E00               	movlw	0
 11843  01A338  6EE6               	movwf	postinc1,c
 11844  01A33A  0E01               	movlw	1
 11845  01A33C  6EE6               	movwf	postinc1,c
 11846  01A33E  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11847                           
 11848                           ; BSR set to: 59
 11849                           ;mconfig.c: 99:  wait_lcd_done();
 11850  01A342  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 11854                           ;stkvar	_vterm @ sp[(0)+-1]
 11855  01A346  0EFF               	movlw	-1
 11856  01A348  50E3               	movf	plusw1,w,c
 11857  01A34A  0D78               	mullw	120
 11858  01A34C  0E2A               	movlw	low _D
 11859  01A34E  6E0B               	movwf	(btemp+10)^0,c
 11860  01A350  0E08               	movlw	high _D
 11861  01A352  6E0C               	movwf	(btemp+11)^0,c
 11862  01A354  0E50               	movlw	80
 11863  01A356  260B               	addwf	(btemp+10)^0,f,c
 11864  01A358  0E00               	movlw	0
 11865  01A35A  220C               	addwfc	(btemp+11)^0,f,c
 11866  01A35C  50F3               	movf	243,w,c
 11867  01A35E  260B               	addwf	(btemp+10)^0,f,c
 11868  01A360  50F4               	movf	244,w,c
 11869  01A362  220C               	addwfc	(btemp+11)^0,f,c
 11870  01A364  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11871  01A36A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11872  01A370  0E00               	movlw	0
 11873  01A372  6EE6               	movwf	postinc1,c
 11874  01A374  0E02               	movlw	2
 11875  01A376  6EE6               	movwf	postinc1,c
 11876  01A378  ECC4  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
 11877  01A37C                     l1705:
 11878                           
 11879                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11880  01A37C  52E5               	movf	postdec1,f,c
 11881  01A37E  0012               	return		;funcret
 11882  01A380                     __end_of_update_lcd:
 11883                           	opt callstack 0
 11884                           
 11885 ;; *************** function _eaDogM_WriteStringAtPos *****************
 11886 ;; Defined at:
 11887 ;;		line 195 in file "eadog.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;  r               1  [STACK] const unsigned char 
 11890 ;;  c               1  [STACK] const unsigned char 
 11891 ;;  strPtr          2  [STACK] PTR unsigned char 
 11892 ;;		 -> D.lcd(480), D(482), V(192), 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  row             1  [STACK] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1  [STACK] void 
 11897 ;; Registers used:
 11898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11899 ;; Tracked objects:
 11900 ;;		On entry : 3F/0
 11901 ;;		On exit  : 3F/3B
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11908 ;;Total ram usage:        0 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:   26
 11911 ;; This function calls:
 11912 ;;		_eaDogM_WriteString
 11913 ;;		_send_lcd_cmd_dma
 11914 ;;		_send_lcd_data_dma
 11915 ;;		_wait_lcd_done
 11916 ;;		_wdtdelay
 11917 ;; This function is called by:
 11918 ;;		_update_lcd
 11919 ;;		_vterm_dump
 11920 ;; This function uses a reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text43
 11924  01AF88                     __ptext43:
 11925                           	opt callstack 0
 11926  01AF88                     _eaDogM_WriteStringAtPos:
 11927                           	opt callstack 0
 11928                           
 11929                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11930  01AF88  52E6               	movf	postinc1,f,c
 11931                           
 11932                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 11933                           
 11934                           ;incstack = 0
 11935  01AF8A  D014               	goto	l13307
 11936  01AF8C                     l13295:
 11937                           
 11938                           ;eadog.c: 201:   row = 0x40;
 11939                           ;stkvar	_row @ sp[(-1)+0]
 11940  01AF8C  0EFF               	movlw	-1
 11941  01AF8E  6AE3               	clrf	plusw1,c
 11942  01AF90  8CE3               	bsf	plusw1,6,c
 11943                           
 11944                           ;eadog.c: 202:   break;
 11945  01AF92  D026               	goto	l13309
 11946  01AF94                     l13297:
 11947                           
 11948                           ;eadog.c: 204:   row = 0x14;
 11949                           ;stkvar	_row @ sp[(-1)+0]
 11950  01AF94  0EFF               	movlw	-1
 11951  01AF96  6AE3               	clrf	plusw1,c
 11952  01AF98  84E3               	bsf	plusw1,2,c
 11953  01AF9A  88E3               	bsf	plusw1,4,c	;indir
 11954                           
 11955                           ;eadog.c: 205:   break;
 11956  01AF9C  D021               	goto	l13309
 11957  01AF9E                     l13299:
 11958                           
 11959                           ;eadog.c: 207:   row = 0x54;
 11960  01AF9E  0E54               	movlw	84
 11961  01AFA0  6E0C               	movwf	(btemp+11)^0,c
 11962                           
 11963                           ;stkvar	_row @ sp[(-1)+0]
 11964  01AFA2  0EFF               	movlw	-1
 11965  01AFA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11966                           
 11967                           ;eadog.c: 208:   break;
 11968  01AFAA  D01A               	goto	l13309
 11969  01AFAC                     l13301:
 11970                           
 11971                           ;eadog.c: 210:   row = 0x1;
 11972                           ;stkvar	_row @ sp[(-1)+0]
 11973  01AFAC  0EFF               	movlw	-1
 11974  01AFAE  6AE3               	clrf	plusw1,c
 11975  01AFB0  2AE3               	incf	plusw1,f,c
 11976                           
 11977                           ;eadog.c: 211:   break;
 11978  01AFB2  D016               	goto	l13309
 11979  01AFB4                     l13307:
 11980                           
 11981                           ;stkvar	_r @ sp[(-1)+-1]
 11982  01AFB4  0EFE               	movlw	-2
 11983  01AFB6  50E3               	movf	plusw1,w,c
 11984  01AFB8  6E0B               	movwf	(btemp+10)^0,c
 11985  01AFBA  6A0C               	clrf	(btemp+11)^0,c
 11986                           
 11987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11988                           ; Switch size 1, requested type "simple"
 11989                           ; Number of cases is 1, Range of values is 0 to 0
 11990                           ; switch strategies available:
 11991                           ; Name         Instructions Cycles
 11992                           ; simple_byte            4     3 (average)
 11993                           ;	Chosen strategy is simple_byte
 11994  01AFBC  500C               	movf	(btemp+11)^0,w,c
 11995  01AFBE  0A00               	xorlw	0	; case 0
 11996  01AFC0  A4D8               	btfss	status,2,c
 11997  01AFC2  D7E4               	goto	l13295
 11998                           
 11999                           ; Switch size 1, requested type "simple"
 12000                           ; Number of cases is 4, Range of values is 0 to 3
 12001                           ; switch strategies available:
 12002                           ; Name         Instructions Cycles
 12003                           ; simple_byte           13     7 (average)
 12004                           ;	Chosen strategy is simple_byte
 12005  01AFC4  500B               	movf	(btemp+10)^0,w,c
 12006  01AFC6  0A00               	xorlw	0	; case 0
 12007  01AFC8  B4D8               	btfsc	status,2,c
 12008  01AFCA  D7E0               	goto	l13295
 12009  01AFCC  0A01               	xorlw	1	; case 1
 12010  01AFCE  B4D8               	btfsc	status,2,c
 12011  01AFD0  D7E1               	goto	l13297
 12012  01AFD2  0A03               	xorlw	3	; case 2
 12013  01AFD4  B4D8               	btfsc	status,2,c
 12014  01AFD6  D7E3               	goto	l13299
 12015  01AFD8  0A01               	xorlw	1	; case 3
 12016  01AFDA  B4D8               	btfsc	status,2,c
 12017  01AFDC  D7E7               	goto	l13301
 12018  01AFDE  D7D6               	goto	l13295
 12019  01AFE0                     l13309:
 12020                           
 12021                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 12022  01AFE0  0E45               	movlw	69
 12023  01AFE2  6EE6               	movwf	postinc1,c
 12024  01AFE4  EC3C  F0E4         	call	_send_lcd_cmd_dma	;wreg free
 12025                           
 12026                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 12027                           ;stkvar	_c @ sp[(-1)+-2]
 12028  01AFE8  0EFD               	movlw	-3
 12029  01AFEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12030                           
 12031                           ;stkvar	_row @ sp[(-1)+0]
 12032  01AFF0  0EFF               	movlw	-1
 12033  01AFF2  50E3               	movf	plusw1,w,c
 12034  01AFF4  240C               	addwf	(btemp+11)^0,w,c
 12035  01AFF6  6EE6               	movwf	postinc1,c
 12036  01AFF8  EC5D  F0DE         	call	_send_lcd_data_dma	;wreg free
 12037                           
 12038                           ; BSR set to: 59
 12039                           ;eadog.c: 218:  wait_lcd_done();
 12040  01AFFC  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;eadog.c: 219:  wdtdelay(8);
 12044  01B000  0E08               	movlw	8
 12045  01B002  6EE6               	movwf	postinc1,c
 12046  01B004  0E00               	movlw	0
 12047  01B006  6EE6               	movwf	postinc1,c
 12048  01B008  0E00               	movlw	0
 12049  01B00A  6EE6               	movwf	postinc1,c
 12050  01B00C  0E00               	movlw	0
 12051  01B00E  6EE6               	movwf	postinc1,c
 12052  01B010  EC8A  F0DD         	call	_wdtdelay	;wreg free
 12053                           
 12054                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 12055                           ;stkvar	_strPtr @ sp[(-1)+-4]
 12056  01B014  0EFB               	movlw	-5
 12057  01B016  006F FF8F FFE6     	movff	plusw1,postinc1
 12058  01B01C  006F FF8F FFE6     	movff	plusw1,postinc1
 12059  01B022  EC18  F0D8         	call	_eaDogM_WriteString	;wreg free
 12060                           
 12061                           ; BSR set to: 59
 12062                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 12063  01B026  0EFB               	movlw	251
 12064  01B028  26E1               	addwf	fsr1l,f,c
 12065  01B02A  0EFF               	movlw	255
 12066  01B02C  22E2               	addwfc	fsr1h,f,c
 12067  01B02E  0012               	return		;funcret
 12068  01B030                     __end_of_eaDogM_WriteStringAtPos:
 12069                           	opt callstack 0
 12070                           
 12071 ;; *************** function _send_lcd_cmd_dma *****************
 12072 ;; Defined at:
 12073 ;;		line 171 in file "eadog.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  strPtr          1  [STACK] const unsigned char 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1  [STACK] void 
 12080 ;; Registers used:
 12081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/3D
 12084 ;;		On exit  : 3F/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12091 ;;Total ram usage:        0 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; Hardware stack levels required when called:   25
 12094 ;; This function calls:
 12095 ;;		_send_lcd_data_dma
 12096 ;;		_wait_lcd_done
 12097 ;; This function is called by:
 12098 ;;		_eaDogM_WriteStringAtPos
 12099 ;;		_eaDogM_WriteCommand
 12100 ;; This function uses a reentrant model
 12101 ;;
 12102                           
 12103                           	psect	text44
 12104  01C878                     __ptext44:
 12105                           	opt callstack 0
 12106  01C878                     _send_lcd_cmd_dma:
 12107                           	opt callstack 3
 12108                           
 12109                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 12110                           
 12111                           ; BSR set to: 59
 12112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12113                           ;incstack = 0
 12114  01C878  0EFE               	movlw	254
 12115  01C87A  6EE6               	movwf	postinc1,c
 12116  01C87C  EC5D  F0DE         	call	_send_lcd_data_dma	;wreg free
 12117                           
 12118                           ; BSR set to: 59
 12119                           ;eadog.c: 174:  wait_lcd_done();
 12120  01C880  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 12124                           ;stkvar	_strPtr @ sp[(0)+-1]
 12125  01C884  0EFF               	movlw	-1
 12126  01C886  50E3               	movf	plusw1,w,c
 12127  01C888  6EE6               	movwf	postinc1,c
 12128  01C88A  EC5D  F0DE         	call	_send_lcd_data_dma	;wreg free
 12129                           
 12130                           ;eadog.c: 176:  wait_lcd_done();
 12131  01C88E  ECDA  F0E3         	call	_wait_lcd_done	;wreg free
 12132                           
 12133                           ; BSR set to: 0
 12134                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 12135  01C892  52E5               	movf	postdec1,f,c
 12136  01C894  0012               	return		;funcret
 12137  01C896                     __end_of_send_lcd_cmd_dma:
 12138                           	opt callstack 0
 12139                           
 12140 ;; *************** function _wait_lcd_done *****************
 12141 ;; Defined at:
 12142 ;;		line 444 in file "eadog.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1  [STACK] void 
 12149 ;; Registers used:
 12150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/1
 12153 ;;		On exit  : 3F/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12160 ;;Total ram usage:        0 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:   16
 12163 ;; This function calls:
 12164 ;;		_wdtdelay
 12165 ;; This function is called by:
 12166 ;;		_main
 12167 ;;		_send_lcd_cmd_dma
 12168 ;;		_eaDogM_WriteStringAtPos
 12169 ;;		_update_lcd
 12170 ;;		_vterm_dump
 12171 ;; This function uses a reentrant model
 12172 ;;
 12173                           
 12174                           	psect	text45
 12175  01C7B4                     __ptext45:
 12176                           	opt callstack 0
 12177  01C7B4                     _wait_lcd_done:
 12178                           	opt callstack 14
 12179                           
 12180                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 12181                           
 12182                           ; BSR set to: 0
 12183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12184                           ;incstack = 0
 12185  01C7B4  0101               	movlb	1	; () banked
 12186  01C7B6  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 12187  01C7B8  D7FD               	goto	_wait_lcd_done
 12188  01C7BA                     u8890:
 12189  01C7BA  013D               	movlb	61	; () banked
 12190  01C7BC  AB17               	btfss	23,5,b	;volatile
 12191  01C7BE  D7FD               	goto	u8890
 12192                           
 12193                           ; BSR set to: 61
 12194                           ;eadog.c: 448:  wdtdelay(50);
 12195  01C7C0  0E32               	movlw	50
 12196  01C7C2  6EE6               	movwf	postinc1,c
 12197  01C7C4  0E00               	movlw	0
 12198  01C7C6  6EE6               	movwf	postinc1,c
 12199  01C7C8  0E00               	movlw	0
 12200  01C7CA  6EE6               	movwf	postinc1,c
 12201  01C7CC  0E00               	movlw	0
 12202  01C7CE  6EE6               	movwf	postinc1,c
 12203  01C7D0  EC8A  F0DD         	call	_wdtdelay	;wreg free
 12204                           
 12205                           ; BSR set to: 0
 12206                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 12207  01C7D4  0012               	return		;funcret
 12208  01C7D6                     __end_of_wait_lcd_done:
 12209                           	opt callstack 0
 12210                           
 12211 ;; *************** function _wdtdelay *****************
 12212 ;; Defined at:
 12213 ;;		line 23 in file "eadog.c"
 12214 ;; Parameters:    Size  Location     Type
 12215 ;;  delay           4  [STACK] const unsigned long 
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1  [STACK] void 
 12220 ;; Registers used:
 12221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 12222 ;; Tracked objects:
 12223 ;;		On entry : 2/3D
 12224 ;;		On exit  : 3F/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12231 ;;Total ram usage:        0 bytes
 12232 ;; Hardware stack levels used:    1
 12233 ;; Hardware stack levels required when called:   15
 12234 ;; This function calls:
 12235 ;;		Nothing
 12236 ;; This function is called by:
 12237 ;;		_init_display
 12238 ;;		_send_lcd_data
 12239 ;;		_send_lcd_cmd
 12240 ;;		_send_lcd_cmd_long
 12241 ;;		_eaDogM_WriteStringAtPos
 12242 ;;		_wait_lcd_done
 12243 ;; This function uses a reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text46
 12247  01BB14                     __ptext46:
 12248                           	opt callstack 0
 12249  01BB14                     _wdtdelay:
 12250                           	opt callstack 14
 12251                           
 12252                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 12253                           
 12254                           ; BSR set to: 0
 12255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12256                           ;incstack = 0
 12257  01BB14  0100               	movlb	0	; () banked
 12258  01BB16  6B78               	clrf	wdtdelay@dcount& (0+255),b
 12259  01BB18  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 12260  01BB1A  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 12261  01BB1C  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 12262  01BB1E                     l1482:
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;eadog.c: 28:   __nop();
 12266  01BB1E  F000               	nop	
 12267  01BB20  0004               	clrwdt		;# 
 12268                           
 12269                           ;eadog.c: 30:  };
 12270  01BB22  0E01               	movlw	1
 12271  01BB24  0100               	movlb	0	; () banked
 12272  01BB26  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 12273  01BB28  0E00               	movlw	0
 12274  01BB2A  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12275  01BB2C  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12276  01BB2E  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;stkvar	_delay @ sp[(0)+-4]
 12280  01BB30  0EFC               	movlw	-4
 12281  01BB32  006F FF8C  F001    	movff	plusw1,btemp
 12282  01BB38  5178               	movf	wdtdelay@dcount& (0+255),w,b
 12283  01BB3A  5C01               	subwf	btemp^0,w,c
 12284  01BB3C  0EFD               	movlw	-3
 12285  01BB3E  006F FF8C  F001    	movff	plusw1,btemp
 12286  01BB44  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12287  01BB46  5801               	subwfb	btemp^0,w,c
 12288  01BB48  0EFE               	movlw	-2
 12289  01BB4A  006F FF8C  F001    	movff	plusw1,btemp
 12290  01BB50  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12291  01BB52  5801               	subwfb	btemp^0,w,c
 12292  01BB54  0EFF               	movlw	-1
 12293  01BB56  006F FF8C  F001    	movff	plusw1,btemp
 12294  01BB5C  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12295  01BB5E  5801               	subwfb	btemp^0,w,c
 12296  01BB60  B0D8               	btfsc	status,0,c
 12297  01BB62  D7DD               	goto	l1482
 12298                           
 12299                           ; BSR set to: 0
 12300                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 12301  01BB64  52E5               	movf	postdec1,f,c
 12302  01BB66  52E5               	movf	postdec1,f,c
 12303  01BB68  52E5               	movf	postdec1,f,c
 12304  01BB6A  52E5               	movf	postdec1,f,c
 12305  01BB6C  0012               	return		;funcret
 12306  01BB6E                     __end_of_wdtdelay:
 12307                           	opt callstack 0
 12308                           
 12309 ;; *************** function _send_lcd_data_dma *****************
 12310 ;; Defined at:
 12311 ;;		line 182 in file "eadog.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  strPtr          1  [STACK] const unsigned char 
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;                  1  [STACK] void 
 12318 ;; Registers used:
 12319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12320 ;; Tracked objects:
 12321 ;;		On entry : 0/0
 12322 ;;		On exit  : 3F/3B
 12323 ;;		Unchanged: 0/0
 12324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12329 ;;Total ram usage:        0 bytes
 12330 ;; Hardware stack levels used:    1
 12331 ;; Hardware stack levels required when called:   24
 12332 ;; This function calls:
 12333 ;;		_printf
 12334 ;;		_ringBufS_flush
 12335 ;;		_start_lcd
 12336 ;;		_wait_lcd_set
 12337 ;; This function is called by:
 12338 ;;		_send_lcd_cmd_dma
 12339 ;;		_eaDogM_WriteStringAtPos
 12340 ;; This function uses a reentrant model
 12341 ;;
 12342                           
 12343                           	psect	text47
 12344  01BCBA                     __ptext47:
 12345                           	opt callstack 0
 12346  01BCBA                     _send_lcd_data_dma:
 12347                           	opt callstack 4
 12348                           
 12349                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 12350                           
 12351                           ; BSR set to: 0
 12352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12353                           ;incstack = 0
 12354  01BCBA  EC56  F0E5         	call	_wait_lcd_set	;wreg free
 12355                           
 12356                           ; BSR set to: 1
 12357                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 12358  01BCBE  0E00               	movlw	0
 12359  01BCC0  6EE6               	movwf	postinc1,c
 12360  01BCC2  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12361  01BCC8  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12362  01BCCE  EC08  F0D9         	call	_ringBufS_flush	;wreg free
 12363  01BCD2  94BC               	bcf	188,2,c	;volatile
 12364                           
 12365                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 12366  01BCD4  013B               	movlb	59	; () banked
 12367  01BCD6  9FFC               	bcf	252,7,b	;volatile
 12368                           
 12369                           ; BSR set to: 59
 12370                           ;eadog.c: 189:  DMA1SSZ = 1;
 12371  01BCD8  0E00               	movlw	0
 12372  01BCDA  6FF8               	movwf	248,b	;volatile
 12373  01BCDC  0E01               	movlw	1
 12374  01BCDE  6FF7               	movwf	247,b	;volatile
 12375                           
 12376                           ; BSR set to: 59
 12377                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 12378  01BCE0  8FFC               	bsf	252,7,b	;volatile
 12379                           
 12380                           ; BSR set to: 59
 12381                           ;eadog.c: 191:  printf("%c", strPtr);
 12382                           ;stkvar	_strPtr @ sp[(0)+-1]
 12383  01BCE2  0EFF               	movlw	-1
 12384  01BCE4  50E3               	movf	plusw1,w,c
 12385  01BCE6  6EE6               	movwf	postinc1,c
 12386  01BCE8  0E00               	movlw	0
 12387  01BCEA  6EE6               	movwf	postinc1,c
 12388  01BCEC  0EF8               	movlw	low STR_55
 12389  01BCEE  6EE6               	movwf	postinc1,c
 12390  01BCF0  0EFF               	movlw	high STR_55
 12391  01BCF2  6EE6               	movwf	postinc1,c
 12392  01BCF4  0E04               	movlw	4
 12393  01BCF6  6EE6               	movwf	postinc1,c
 12394  01BCF8  ECCB  F0DC         	call	_printf	;wreg free
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;eadog.c: 192:  start_lcd();
 12398  01BCFC  EC59  F0E5         	call	_start_lcd	;wreg free
 12399                           
 12400                           ; BSR set to: 59
 12401                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 12402  01BD00  52E5               	movf	postdec1,f,c
 12403  01BD02  0012               	return		;funcret
 12404  01BD04                     __end_of_send_lcd_data_dma:
 12405                           	opt callstack 0
 12406                           
 12407 ;; *************** function _eaDogM_WriteString *****************
 12408 ;; Defined at:
 12409 ;;		line 151 in file "eadog.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  strPtr          2  [STACK] PTR unsigned char 
 12412 ;;		 -> D.lcd(480), D(482), V(192), 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;		None
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  1  [STACK] void 
 12417 ;; Registers used:
 12418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12419 ;; Tracked objects:
 12420 ;;		On entry : 3F/0
 12421 ;;		On exit  : 3F/3B
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12428 ;;Total ram usage:        0 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; Hardware stack levels required when called:   24
 12431 ;; This function calls:
 12432 ;;		_printf
 12433 ;;		_ringBufS_flush
 12434 ;;		_start_lcd
 12435 ;;		_strlen
 12436 ;;		_wait_lcd_set
 12437 ;; This function is called by:
 12438 ;;		_eaDogM_WriteStringAtPos
 12439 ;; This function uses a reentrant model
 12440 ;;
 12441                           
 12442                           	psect	text48
 12443  01B030                     __ptext48:
 12444                           	opt callstack 0
 12445  01B030                     _eaDogM_WriteString:
 12446                           	opt callstack 4
 12447                           
 12448                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 12449                           
 12450                           ; BSR set to: 59
 12451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12452                           ;incstack = 0
 12453  01B030  EC56  F0E5         	call	_wait_lcd_set	;wreg free
 12454                           
 12455                           ; BSR set to: 1
 12456                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 12457  01B034  0E00               	movlw	0
 12458  01B036  6EE6               	movwf	postinc1,c
 12459  01B038  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 12460  01B03E  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 12461  01B044  EC08  F0D9         	call	_ringBufS_flush	;wreg free
 12462  01B048  94BC               	bcf	188,2,c	;volatile
 12463                           
 12464                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 12465                           ;stkvar	_strPtr @ sp[(0)+-2]
 12466  01B04A  0EFE               	movlw	-2
 12467  01B04C  006F FF8F FFE6     	movff	plusw1,postinc1
 12468  01B052  006F FF8F FFE6     	movff	plusw1,postinc1
 12469  01B058  EC6B  F0D8         	call	_strlen	;wreg free
 12470  01B05C  5002               	movf	(btemp+1)^0,w,c
 12471  01B05E  E104               	bnz	u12720
 12472  01B060  0E41               	movlw	65
 12473  01B062  5C01               	subwf	btemp^0,w,c
 12474  01B064  A0D8               	btfss	status,0,c
 12475  01B066  D010               	goto	l13251
 12476  01B068                     u12720:
 12477                           
 12478                           ;stkvar	_strPtr @ sp[(0)+-2]
 12479  01B068  0EFE               	movlw	-2
 12480  01B06A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12481  01B070  0EFF               	movlw	-1
 12482  01B072  006F FF8C  F00C    	movff	plusw1,btemp+11
 12483  01B078  0E40               	movlw	64
 12484  01B07A  240B               	addwf	(btemp+10)^0,w,c
 12485  01B07C  6ED9               	movwf	fsr2l,c
 12486  01B07E  0E00               	movlw	0
 12487  01B080  200C               	addwfc	(btemp+11)^0,w,c
 12488  01B082  6EDA               	movwf	fsr2h,c
 12489  01B084  0E00               	movlw	0
 12490  01B086  6EDF               	movwf	indf2,c
 12491  01B088                     l13251:
 12492                           
 12493                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 12494  01B088  013B               	movlb	59	; () banked
 12495  01B08A  9FFC               	bcf	252,7,b	;volatile
 12496                           
 12497                           ; BSR set to: 59
 12498                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 12499                           ;stkvar	_strPtr @ sp[(0)+-2]
 12500  01B08C  0EFE               	movlw	-2
 12501  01B08E  006F FF8F FFE6     	movff	plusw1,postinc1
 12502  01B094  006F FF8F FFE6     	movff	plusw1,postinc1
 12503  01B09A  EC6B  F0D8         	call	_strlen	;wreg free
 12504  01B09E  0060  F007  FBF7   	movff	btemp,15351	;volatile
 12505  01B0A4  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 12506                           
 12507                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 12508  01B0AA  013B               	movlb	59	; () banked
 12509  01B0AC  8FFC               	bsf	252,7,b	;volatile
 12510                           
 12511                           ; BSR set to: 59
 12512                           ;eadog.c: 161:  printf("%s", strPtr);
 12513                           ;stkvar	_strPtr @ sp[(0)+-2]
 12514  01B0AE  0EFE               	movlw	-2
 12515  01B0B0  006F FF8F FFE6     	movff	plusw1,postinc1
 12516  01B0B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12517  01B0BC  0EFB               	movlw	low STR_54
 12518  01B0BE  6EE6               	movwf	postinc1,c
 12519  01B0C0  0EFF               	movlw	high STR_54
 12520  01B0C2  6EE6               	movwf	postinc1,c
 12521  01B0C4  0E04               	movlw	4
 12522  01B0C6  6EE6               	movwf	postinc1,c
 12523  01B0C8  ECCB  F0DC         	call	_printf	;wreg free
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;eadog.c: 162:  start_lcd();
 12527  01B0CC  EC59  F0E5         	call	_start_lcd	;wreg free
 12528                           
 12529                           ; BSR set to: 59
 12530                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 12531  01B0D0  52E5               	movf	postdec1,f,c
 12532  01B0D2  52E5               	movf	postdec1,f,c
 12533  01B0D4  0012               	return		;funcret
 12534  01B0D6                     __end_of_eaDogM_WriteString:
 12535                           	opt callstack 0
 12536                           
 12537 ;; *************** function _wait_lcd_set *****************
 12538 ;; Defined at:
 12539 ;;		line 434 in file "eadog.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;		None
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1  [STACK] void 
 12546 ;; Registers used:
 12547 ;;		None
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 3F/1
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:   15
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_eaDogM_WriteString
 12564 ;;		_send_lcd_data_dma
 12565 ;; This function uses a reentrant model
 12566 ;;
 12567                           
 12568                           	psect	text49
 12569  01CAAC                     __ptext49:
 12570                           	opt callstack 0
 12571  01CAAC                     _wait_lcd_set:
 12572                           	opt callstack 12
 12573                           
 12574                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 12575                           
 12576                           ; BSR set to: 59
 12577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12578                           ;incstack = 0
 12579  01CAAC  0101               	movlb	1	; () banked
 12580  01CAAE  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 12581                           
 12582                           ; BSR set to: 1
 12583                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 12584  01CAB0  0012               	return		;funcret
 12585  01CAB2                     __end_of_wait_lcd_set:
 12586                           	opt callstack 0
 12587                           
 12588 ;; *************** function _start_lcd *****************
 12589 ;; Defined at:
 12590 ;;		line 429 in file "eadog.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1  [STACK] void 
 12597 ;; Registers used:
 12598 ;;		None
 12599 ;; Tracked objects:
 12600 ;;		On entry : 3F/0
 12601 ;;		On exit  : 3F/3B
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12608 ;;Total ram usage:        0 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:   15
 12611 ;; This function calls:
 12612 ;;		Nothing
 12613 ;; This function is called by:
 12614 ;;		_eaDogM_WriteString
 12615 ;;		_send_lcd_data_dma
 12616 ;; This function uses a reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text50
 12620  01CAB2                     __ptext50:
 12621                           	opt callstack 0
 12622  01CAB2                     _start_lcd:
 12623                           	opt callstack 12
 12624                           
 12625                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 12626                           
 12627                           ; BSR set to: 1
 12628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12629                           ;incstack = 0
 12630  01CAB2  013B               	movlb	59	; () banked
 12631  01CAB4  8DFC               	bsf	252,6,b	;volatile
 12632                           
 12633                           ; BSR set to: 59
 12634                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12635  01CAB6  0012               	return		;funcret
 12636  01CAB8                     __end_of_start_lcd:
 12637                           	opt callstack 0
 12638                           
 12639 ;; *************** function _ringBufS_flush *****************
 12640 ;; Defined at:
 12641 ;;		line 76 in file "ringbufs.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12644 ;;		 -> ring_buf1(67), 
 12645 ;;  clearBuffer     1  [STACK] const char 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;		None
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1  [STACK] void 
 12650 ;; Registers used:
 12651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12652 ;; Tracked objects:
 12653 ;;		On entry : 3F/1
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;Total ram usage:        0 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; Hardware stack levels required when called:   16
 12664 ;; This function calls:
 12665 ;;		_memset
 12666 ;; This function is called by:
 12667 ;;		_eaDogM_WriteString
 12668 ;;		_send_lcd_data_dma
 12669 ;; This function uses a reentrant model
 12670 ;;
 12671                           
 12672                           	psect	text51
 12673  01B210                     __ptext51:
 12674                           	opt callstack 0
 12675  01B210                     _ringBufS_flush:
 12676                           	opt callstack 11
 12677                           
 12678                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 12679                           ;stkvar	__this @ sp[(0)+-2]
 12680                           
 12681                           ; BSR set to: 59
 12682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12683                           ;incstack = 0
 12684  01B210  0EFE               	movlw	-2
 12685  01B212  006F FF8C  F00B    	movff	plusw1,btemp+10
 12686  01B218  0EFF               	movlw	-1
 12687  01B21A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12688  01B220  0E42               	movlw	66
 12689  01B222  240B               	addwf	(btemp+10)^0,w,c
 12690  01B224  6ED9               	movwf	fsr2l,c
 12691  01B226  0E00               	movlw	0
 12692  01B228  200C               	addwfc	(btemp+11)^0,w,c
 12693  01B22A  6EDA               	movwf	fsr2h,c
 12694  01B22C  0E00               	movlw	0
 12695  01B22E  6EDF               	movwf	indf2,c
 12696                           
 12697                           ;ringbufs.c: 79:  _this->head = 0;
 12698                           ;stkvar	__this @ sp[(0)+-2]
 12699  01B230  0EFE               	movlw	-2
 12700  01B232  006F FF8C  F00B    	movff	plusw1,btemp+10
 12701  01B238  0EFF               	movlw	-1
 12702  01B23A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12703  01B240  0E40               	movlw	64
 12704  01B242  240B               	addwf	(btemp+10)^0,w,c
 12705  01B244  6ED9               	movwf	fsr2l,c
 12706  01B246  0E00               	movlw	0
 12707  01B248  200C               	addwfc	(btemp+11)^0,w,c
 12708  01B24A  6EDA               	movwf	fsr2h,c
 12709  01B24C  0E00               	movlw	0
 12710  01B24E  6EDF               	movwf	indf2,c
 12711                           
 12712                           ;ringbufs.c: 80:  _this->tail = 0;
 12713                           ;stkvar	__this @ sp[(0)+-2]
 12714  01B250  0EFE               	movlw	-2
 12715  01B252  006F FF8C  F00B    	movff	plusw1,btemp+10
 12716  01B258  0EFF               	movlw	-1
 12717  01B25A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12718  01B260  0E41               	movlw	65
 12719  01B262  240B               	addwf	(btemp+10)^0,w,c
 12720  01B264  6ED9               	movwf	fsr2l,c
 12721  01B266  0E00               	movlw	0
 12722  01B268  200C               	addwfc	(btemp+11)^0,w,c
 12723  01B26A  6EDA               	movwf	fsr2h,c
 12724  01B26C  0E00               	movlw	0
 12725  01B26E  6EDF               	movwf	indf2,c
 12726                           
 12727                           ;ringbufs.c: 81:  if (clearBuffer) {
 12728                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 12729  01B270  0EFD               	movlw	-3
 12730  01B272  50E3               	movf	plusw1,w,c
 12731  01B274  B4D8               	btfsc	status,2,c
 12732  01B276  D011               	goto	l1614
 12733                           
 12734                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 12735  01B278  0E40               	movlw	64
 12736  01B27A  6EE6               	movwf	postinc1,c
 12737  01B27C  0E00               	movlw	0
 12738  01B27E  6EE6               	movwf	postinc1,c
 12739  01B280  0E00               	movlw	0
 12740  01B282  6EE6               	movwf	postinc1,c
 12741  01B284  0E00               	movlw	0
 12742  01B286  6EE6               	movwf	postinc1,c
 12743                           
 12744                           ;stkvar	__this @ sp[(-4)+-2]
 12745  01B288  0EFA               	movlw	-6
 12746  01B28A  006F FF8F FFE6     	movff	plusw1,postinc1
 12747  01B290  006F FF8F FFE6     	movff	plusw1,postinc1
 12748  01B296  EC5D  F0B7         	call	_memset	;wreg free
 12749  01B29A                     l1614:
 12750                           
 12751                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 12752  01B29A  52E5               	movf	postdec1,f,c
 12753  01B29C  52E5               	movf	postdec1,f,c
 12754  01B29E  52E5               	movf	postdec1,f,c
 12755  01B2A0  0012               	return		;funcret
 12756  01B2A2                     __end_of_ringBufS_flush:
 12757                           	opt callstack 0
 12758                           
 12759 ;; *************** function _memset *****************
 12760 ;; Defined at:
 12761 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;  dest            2  [STACK] PTR void 
 12764 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12765 ;;  c               2  [STACK] int 
 12766 ;;  n               2  [STACK] unsigned int 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;  s               2  [STACK] PTR unsigned char 
 12769 ;;		 -> ring_buf2(67), ring_buf1(67), 
 12770 ;;  k               2  [STACK] unsigned int 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  2  [STACK] PTR void 
 12773 ;; Registers used:
 12774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/1
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12784 ;;Total ram usage:        0 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:   15
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_ringBufS_init
 12791 ;;		_ringBufS_flush
 12792 ;; This function uses a reentrant model
 12793 ;;
 12794                           
 12795                           	psect	text52
 12796  016EBA                     __ptext52:
 12797                           	opt callstack 0
 12798  016EBA                     _memset:
 12799                           	opt callstack 0
 12800                           
 12801                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12802  016EBA  52E6               	movf	postinc1,f,c
 12803  016EBC  52E6               	movf	postinc1,f,c
 12804  016EBE  52E6               	movf	postinc1,f,c
 12805  016EC0  52E6               	movf	postinc1,f,c
 12806                           
 12807                           ;stkvar	_dest @ sp[(-4)+-2]
 12808                           
 12809                           ;incstack = 0
 12810  016EC2  0EFA               	movlw	-6
 12811  016EC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 12812  016ECA  0EFB               	movlw	-5
 12813  016ECC  006F FF8C  F00C    	movff	plusw1,btemp+11
 12814                           
 12815                           ;stkvar	_s @ sp[(-4)+0]
 12816  016ED2  0EFD               	movlw	-3
 12817  016ED4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12818  016EDA  0EFC               	movlw	-4
 12819  016EDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12820                           
 12821                           ;stkvar	_n @ sp[(-4)+-6]
 12822  016EE2  0EF6               	movlw	-10
 12823  016EE4  006F FF8C  F001    	movff	plusw1,btemp
 12824  016EEA  0EF7               	movlw	-9
 12825  016EEC  50E3               	movf	plusw1,w,c
 12826  016EEE  1001               	iorwf	btemp^0,w,c
 12827  016EF0  B4D8               	btfsc	status,2,c
 12828  016EF2  D154               	goto	u11270
 12829                           
 12830                           ;stkvar	_c @ sp[(-4)+-4]
 12831                           ;stkvar	_s @ sp[(-4)+0]
 12832  016EF4  0EFC               	movlw	-4
 12833  016EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12834  016EFC  0EFD               	movlw	-3
 12835  016EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12836  016F04  0EF8               	movlw	-8
 12837  016F06  006F FF8F FFDF     	movff	plusw1,indf2
 12838                           
 12839                           ;stkvar	_c @ sp[(-4)+-4]
 12840                           ;stkvar	_n @ sp[(-4)+-6]
 12841                           ;stkvar	_s @ sp[(-4)+0]
 12842  016F0C  0EFC               	movlw	-4
 12843  016F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12844  016F14  0EFD               	movlw	-3
 12845  016F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 12846  016F1C  0EF6               	movlw	-10
 12847  016F1E  50E3               	movf	plusw1,w,c
 12848  016F20  260B               	addwf	(btemp+10)^0,f,c
 12849  016F22  0EF7               	movlw	-9
 12850  016F24  50E3               	movf	plusw1,w,c
 12851  016F26  220C               	addwfc	(btemp+11)^0,f,c
 12852  016F28  0EFF               	movlw	255
 12853  016F2A  240B               	addwf	(btemp+10)^0,w,c
 12854  016F2C  6ED9               	movwf	fsr2l,c
 12855  016F2E  0EFF               	movlw	255
 12856  016F30  200C               	addwfc	(btemp+11)^0,w,c
 12857  016F32  6EDA               	movwf	fsr2h,c
 12858  016F34  0EF8               	movlw	-8
 12859  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 12860                           
 12861                           ;stkvar	_n @ sp[(-4)+-6]
 12862  016F3C  0EF7               	movlw	-9
 12863  016F3E  50E3               	movf	plusw1,w,c
 12864  016F40  E108               	bnz	l12403
 12865  016F42  0EF6               	movlw	-10
 12866  016F44  006F FF8C  F001    	movff	plusw1,btemp
 12867  016F4A  0E03               	movlw	3
 12868  016F4C  5E01               	subwf	btemp^0,f,c
 12869  016F4E  A0D8               	btfss	status,0,c
 12870  016F50  D125               	goto	u11270
 12871  016F52                     l12403:
 12872                           
 12873                           ;stkvar	_c @ sp[(-4)+-4]
 12874                           ;stkvar	_s @ sp[(-4)+0]
 12875  016F52  0EFC               	movlw	-4
 12876  016F54  006F FF8C  F00B    	movff	plusw1,btemp+10
 12877  016F5A  0EFD               	movlw	-3
 12878  016F5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12879  016F62  0E01               	movlw	1
 12880  016F64  240B               	addwf	(btemp+10)^0,w,c
 12881  016F66  6ED9               	movwf	fsr2l,c
 12882  016F68  0E00               	movlw	0
 12883  016F6A  200C               	addwfc	(btemp+11)^0,w,c
 12884  016F6C  6EDA               	movwf	fsr2h,c
 12885  016F6E  0EF8               	movlw	-8
 12886  016F70  006F FF8F FFDF     	movff	plusw1,indf2
 12887                           
 12888                           ;stkvar	_c @ sp[(-4)+-4]
 12889                           ;stkvar	_s @ sp[(-4)+0]
 12890  016F76  0EFC               	movlw	-4
 12891  016F78  006F FF8C  F00B    	movff	plusw1,btemp+10
 12892  016F7E  0EFD               	movlw	-3
 12893  016F80  006F FF8C  F00C    	movff	plusw1,btemp+11
 12894  016F86  0E02               	movlw	2
 12895  016F88  240B               	addwf	(btemp+10)^0,w,c
 12896  016F8A  6ED9               	movwf	fsr2l,c
 12897  016F8C  0E00               	movlw	0
 12898  016F8E  200C               	addwfc	(btemp+11)^0,w,c
 12899  016F90  6EDA               	movwf	fsr2h,c
 12900  016F92  0EF8               	movlw	-8
 12901  016F94  006F FF8F FFDF     	movff	plusw1,indf2
 12902                           
 12903                           ;stkvar	_c @ sp[(-4)+-4]
 12904                           ;stkvar	_n @ sp[(-4)+-6]
 12905                           ;stkvar	_s @ sp[(-4)+0]
 12906  016F9A  0EFC               	movlw	-4
 12907  016F9C  006F FF8C  F00B    	movff	plusw1,btemp+10
 12908  016FA2  0EFD               	movlw	-3
 12909  016FA4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12910  016FAA  0EF6               	movlw	-10
 12911  016FAC  50E3               	movf	plusw1,w,c
 12912  016FAE  260B               	addwf	(btemp+10)^0,f,c
 12913  016FB0  0EF7               	movlw	-9
 12914  016FB2  50E3               	movf	plusw1,w,c
 12915  016FB4  220C               	addwfc	(btemp+11)^0,f,c
 12916  016FB6  0EFE               	movlw	254
 12917  016FB8  240B               	addwf	(btemp+10)^0,w,c
 12918  016FBA  6ED9               	movwf	fsr2l,c
 12919  016FBC  0EFF               	movlw	255
 12920  016FBE  200C               	addwfc	(btemp+11)^0,w,c
 12921  016FC0  6EDA               	movwf	fsr2h,c
 12922  016FC2  0EF8               	movlw	-8
 12923  016FC4  006F FF8F FFDF     	movff	plusw1,indf2
 12924                           
 12925                           ;stkvar	_c @ sp[(-4)+-4]
 12926                           ;stkvar	_n @ sp[(-4)+-6]
 12927                           ;stkvar	_s @ sp[(-4)+0]
 12928  016FCA  0EFC               	movlw	-4
 12929  016FCC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12930  016FD2  0EFD               	movlw	-3
 12931  016FD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12932  016FDA  0EF6               	movlw	-10
 12933  016FDC  50E3               	movf	plusw1,w,c
 12934  016FDE  260B               	addwf	(btemp+10)^0,f,c
 12935  016FE0  0EF7               	movlw	-9
 12936  016FE2  50E3               	movf	plusw1,w,c
 12937  016FE4  220C               	addwfc	(btemp+11)^0,f,c
 12938  016FE6  0EFD               	movlw	253
 12939  016FE8  240B               	addwf	(btemp+10)^0,w,c
 12940  016FEA  6ED9               	movwf	fsr2l,c
 12941  016FEC  0EFF               	movlw	255
 12942  016FEE  200C               	addwfc	(btemp+11)^0,w,c
 12943  016FF0  6EDA               	movwf	fsr2h,c
 12944  016FF2  0EF8               	movlw	-8
 12945  016FF4  006F FF8F FFDF     	movff	plusw1,indf2
 12946                           
 12947                           ;stkvar	_n @ sp[(-4)+-6]
 12948  016FFA  0EF7               	movlw	-9
 12949  016FFC  50E3               	movf	plusw1,w,c
 12950  016FFE  E108               	bnz	l12409
 12951  017000  0EF6               	movlw	-10
 12952  017002  006F FF8C  F001    	movff	plusw1,btemp
 12953  017008  0E07               	movlw	7
 12954  01700A  5E01               	subwf	btemp^0,f,c
 12955  01700C  A0D8               	btfss	status,0,c
 12956  01700E  D0C6               	goto	u11270
 12957  017010                     l12409:
 12958                           
 12959                           ;stkvar	_c @ sp[(-4)+-4]
 12960                           ;stkvar	_s @ sp[(-4)+0]
 12961  017010  0EFC               	movlw	-4
 12962  017012  006F FF8C  F00B    	movff	plusw1,btemp+10
 12963  017018  0EFD               	movlw	-3
 12964  01701A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12965  017020  0E03               	movlw	3
 12966  017022  240B               	addwf	(btemp+10)^0,w,c
 12967  017024  6ED9               	movwf	fsr2l,c
 12968  017026  0E00               	movlw	0
 12969  017028  200C               	addwfc	(btemp+11)^0,w,c
 12970  01702A  6EDA               	movwf	fsr2h,c
 12971  01702C  0EF8               	movlw	-8
 12972  01702E  006F FF8F FFDF     	movff	plusw1,indf2
 12973                           
 12974                           ;stkvar	_c @ sp[(-4)+-4]
 12975                           ;stkvar	_n @ sp[(-4)+-6]
 12976                           ;stkvar	_s @ sp[(-4)+0]
 12977  017034  0EFC               	movlw	-4
 12978  017036  006F FF8C  F00B    	movff	plusw1,btemp+10
 12979  01703C  0EFD               	movlw	-3
 12980  01703E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12981  017044  0EF6               	movlw	-10
 12982  017046  50E3               	movf	plusw1,w,c
 12983  017048  260B               	addwf	(btemp+10)^0,f,c
 12984  01704A  0EF7               	movlw	-9
 12985  01704C  50E3               	movf	plusw1,w,c
 12986  01704E  220C               	addwfc	(btemp+11)^0,f,c
 12987  017050  0EFC               	movlw	252
 12988  017052  240B               	addwf	(btemp+10)^0,w,c
 12989  017054  6ED9               	movwf	fsr2l,c
 12990  017056  0EFF               	movlw	255
 12991  017058  200C               	addwfc	(btemp+11)^0,w,c
 12992  01705A  6EDA               	movwf	fsr2h,c
 12993  01705C  0EF8               	movlw	-8
 12994  01705E  006F FF8F FFDF     	movff	plusw1,indf2
 12995                           
 12996                           ;stkvar	_n @ sp[(-4)+-6]
 12997  017064  0EF7               	movlw	-9
 12998  017066  50E3               	movf	plusw1,w,c
 12999  017068  E108               	bnz	l12415
 13000  01706A  0EF6               	movlw	-10
 13001  01706C  006F FF8C  F001    	movff	plusw1,btemp
 13002  017072  0E09               	movlw	9
 13003  017074  5E01               	subwf	btemp^0,f,c
 13004  017076  A0D8               	btfss	status,0,c
 13005  017078  D091               	goto	u11270
 13006  01707A                     l12415:
 13007                           
 13008                           ;stkvar	_s @ sp[(-4)+0]
 13009  01707A  0EFC               	movlw	-4
 13010  01707C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13011  017082  1E0B               	comf	(btemp+10)^0,f,c
 13012  017084  0EFD               	movlw	-3
 13013  017086  006F FF8C  F00C    	movff	plusw1,btemp+11
 13014  01708C  1E0C               	comf	(btemp+11)^0,f,c
 13015  01708E  2A0B               	incf	(btemp+10)^0,f,c
 13016  017090  B4D8               	btfsc	status,2,c
 13017  017092  2A0C               	incf	(btemp+11)^0,f,c
 13018  017094  0E03               	movlw	3
 13019  017096  160B               	andwf	(btemp+10)^0,f,c
 13020  017098  0E00               	movlw	0
 13021  01709A  160C               	andwf	(btemp+11)^0,f,c
 13022                           
 13023                           ;stkvar	_k @ sp[(-4)+2]
 13024  01709C  0EFE               	movlw	-2
 13025  01709E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13026  0170A4  0EFF               	movlw	-1
 13027  0170A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13028                           
 13029                           ;stkvar	_k @ sp[(-4)+2]
 13030                           ;stkvar	_s @ sp[(-4)+0]
 13031  0170AC  0EFC               	movlw	-4
 13032  0170AE  50E3               	movf	plusw1,w,c
 13033  0170B0  6E01               	movwf	btemp^0,c
 13034  0170B2  0EFE               	movlw	-2
 13035  0170B4  50E3               	movf	plusw1,w,c
 13036  0170B6  2601               	addwf	btemp^0,f,c
 13037  0170B8  0EFC               	movlw	-4
 13038  0170BA  0060  F007  FFE3   	movff	btemp,plusw1
 13039  0170C0  0EFD               	movlw	-3
 13040  0170C2  50E3               	movf	plusw1,w,c
 13041  0170C4  6E01               	movwf	btemp^0,c
 13042  0170C6  0EFF               	movlw	-1
 13043  0170C8  50E3               	movf	plusw1,w,c
 13044  0170CA  2201               	addwfc	btemp^0,f,c
 13045  0170CC  0EFD               	movlw	-3
 13046  0170CE  0060  F007  FFE3   	movff	btemp,plusw1
 13047                           
 13048                           ;stkvar	_k @ sp[(-4)+2]
 13049                           ;stkvar	_n @ sp[(-4)+-6]
 13050  0170D4  0EF6               	movlw	-10
 13051  0170D6  50E3               	movf	plusw1,w,c
 13052  0170D8  6E01               	movwf	btemp^0,c
 13053  0170DA  0EFE               	movlw	-2
 13054  0170DC  50E3               	movf	plusw1,w,c
 13055  0170DE  5E01               	subwf	btemp^0,f,c
 13056  0170E0  0EF6               	movlw	-10
 13057  0170E2  0060  F007  FFE3   	movff	btemp,plusw1
 13058  0170E8  0EF7               	movlw	-9
 13059  0170EA  50E3               	movf	plusw1,w,c
 13060  0170EC  6E01               	movwf	btemp^0,c
 13061  0170EE  0EFF               	movlw	-1
 13062  0170F0  50E3               	movf	plusw1,w,c
 13063  0170F2  5A01               	subwfb	btemp^0,f,c
 13064  0170F4  0EF7               	movlw	-9
 13065  0170F6  0060  F007  FFE3   	movff	btemp,plusw1
 13066  0170FC  0EFC               	movlw	252
 13067  0170FE  6E0B               	movwf	(btemp+10)^0,c
 13068  017100  0EFF               	movlw	255
 13069  017102  6E0C               	movwf	(btemp+11)^0,c
 13070                           
 13071                           ;stkvar	_n @ sp[(-4)+-6]
 13072  017104  0EF6               	movlw	-10
 13073  017106  006F FF8C  F001    	movff	plusw1,btemp
 13074  01710C  500B               	movf	(btemp+10)^0,w,c
 13075  01710E  1601               	andwf	btemp^0,f,c
 13076  017110  0EF6               	movlw	-10
 13077  017112  0060  F007  FFE3   	movff	btemp,plusw1
 13078  017118  0EF7               	movlw	-9
 13079  01711A  006F FF8C  F001    	movff	plusw1,btemp
 13080  017120  500C               	movf	(btemp+11)^0,w,c
 13081  017122  1601               	andwf	btemp^0,f,c
 13082  017124  0EF7               	movlw	-9
 13083  017126  D02E               	goto	L12
 13084  017128                     l12423:
 13085                           
 13086                           ;stkvar	_c @ sp[(-4)+-4]
 13087                           ;stkvar	_s @ sp[(-4)+0]
 13088  017128  0EFC               	movlw	-4
 13089  01712A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13090  017130  0EFD               	movlw	-3
 13091  017132  006F FF8F FFDA     	movff	plusw1,fsr2h
 13092  017138  0EF8               	movlw	-8
 13093  01713A  006F FF8F FFDF     	movff	plusw1,indf2
 13094                           
 13095                           ;stkvar	_n @ sp[(-4)+-6]
 13096  017140  0EF6               	movlw	-10
 13097  017142  006F FF8C  F001    	movff	plusw1,btemp
 13098  017148  0E01               	movlw	1
 13099  01714A  5E01               	subwf	btemp^0,f,c
 13100  01714C  0EF6               	movlw	-10
 13101  01714E  0060  F007  FFE3   	movff	btemp,plusw1
 13102  017154  0EF7               	movlw	-9
 13103  017156  006F FF8C  F001    	movff	plusw1,btemp
 13104  01715C  0E00               	movlw	0
 13105  01715E  5A01               	subwfb	btemp^0,f,c
 13106  017160  0EF7               	movlw	-9
 13107  017162  0060  F007  FFE3   	movff	btemp,plusw1
 13108                           
 13109                           ;stkvar	_s @ sp[(-4)+0]
 13110  017168  0EFC               	movlw	-4
 13111  01716A  50E3               	movf	plusw1,w,c
 13112  01716C  0F01               	addlw	1
 13113  01716E  6E01               	movwf	btemp^0,c
 13114  017170  0EFC               	movlw	-4
 13115  017172  0060  F007  FFE3   	movff	btemp,plusw1
 13116  017178  6A01               	clrf	btemp^0,c
 13117  01717A  0EFD               	movlw	-3
 13118  01717C  50E3               	movf	plusw1,w,c
 13119  01717E  2001               	addwfc	btemp^0,w,c
 13120  017180  6E01               	movwf	btemp^0,c
 13121  017182  0EFD               	movlw	-3
 13122  017184                     L12:
 13123  017184  0060  F007  FFE3   	movff	btemp,plusw1
 13124                           
 13125                           ;stkvar	_n @ sp[(-4)+-6]
 13126  01718A  0EF6               	movlw	-10
 13127  01718C  006F FF8C  F001    	movff	plusw1,btemp
 13128  017192  0EF7               	movlw	-9
 13129  017194  50E3               	movf	plusw1,w,c
 13130  017196  1001               	iorwf	btemp^0,w,c
 13131  017198  A4D8               	btfss	status,2,c
 13132  01719A  D7C6               	goto	l12423
 13133  01719C                     u11270:
 13134                           
 13135                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 13136  01719C  0EF6               	movlw	246
 13137  01719E  26E1               	addwf	fsr1l,f,c
 13138  0171A0  0EFF               	movlw	255
 13139  0171A2  22E2               	addwfc	fsr1h,f,c
 13140  0171A4  0012               	return		;funcret
 13141  0171A6                     __end_of_memset:
 13142                           	opt callstack 0
 13143                           
 13144 ;; *************** function _printf *****************
 13145 ;; Defined at:
 13146 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  fmt             2  [STACK] PTR const unsigned char 
 13149 ;;		 -> STR_55(3), STR_54(3), 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;  ap              2  [STACK] PTR void [1]
 13152 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13153 ;;  ret             2    0        int 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  2  [STACK] int 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13158 ;; Tracked objects:
 13159 ;;		On entry : 3F/3B
 13160 ;;		On exit  : 3F/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;Total ram usage:        0 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:   23
 13170 ;; This function calls:
 13171 ;;		_vfprintf
 13172 ;; This function is called by:
 13173 ;;		_eaDogM_WriteString
 13174 ;;		_send_lcd_data_dma
 13175 ;; This function uses a reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text53
 13179  01B996                     __ptext53:
 13180                           	opt callstack 0
 13181  01B996                     _printf:
 13182                           	opt callstack 0
 13183                           
 13184                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13185  01B996  52E6               	movf	postinc1,f,c
 13186  01B998  52E6               	movf	postinc1,f,c
 13187                           
 13188                           ;stkvar	?_printf @ sp[(-2)+-3]
 13189                           
 13190                           ;incstack = 0
 13191  01B99A  0EFB               	movlw	251
 13192  01B99C  24E1               	addwf	fsr1l,w,c
 13193  01B99E  6E0B               	movwf	(btemp+10)^0,c
 13194  01B9A0  0EFF               	movlw	255
 13195  01B9A2  20E2               	addwfc	fsr1h,w,c
 13196  01B9A4  6E0C               	movwf	(btemp+11)^0,c
 13197                           
 13198                           ;stkvar	_ap @ sp[(-2)+0]
 13199  01B9A6  0EFF               	movlw	-1
 13200  01B9A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13201  01B9AE  0EFE               	movlw	-2
 13202  01B9B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13203                           
 13204                           ;stkvar	_ap @ sp[(-2)+0]
 13205  01B9B6  0EFE               	movlw	254
 13206  01B9B8  24E1               	addwf	fsr1l,w,c
 13207  01B9BA  6E01               	movwf	btemp^0,c
 13208  01B9BC  0EFF               	movlw	255
 13209  01B9BE  20E2               	addwfc	fsr1h,w,c
 13210  01B9C0  6E02               	movwf	(btemp+1)^0,c
 13211  01B9C2  0060  F007  FFE6   	movff	btemp,postinc1
 13212  01B9C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13213                           
 13214                           ;stkvar	_fmt @ sp[(-4)+-3]
 13215  01B9CE  0EF9               	movlw	-7
 13216  01B9D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13217  01B9D6  006F FF8F FFE6     	movff	plusw1,postinc1
 13218  01B9DC  0E00               	movlw	0
 13219  01B9DE  6EE6               	movwf	postinc1,c
 13220  01B9E0  0E00               	movlw	0
 13221  01B9E2  6EE6               	movwf	postinc1,c
 13222  01B9E4  EC19  F0D7         	call	_vfprintf	;wreg free
 13223                           
 13224                           ; BSR set to: 0
 13225                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 13226  01B9E8  52E5               	movf	postdec1,f,c
 13227  01B9EA  52E5               	movf	postdec1,f,c
 13228  01B9EC  52E5               	movf	postdec1,f,c
 13229  01B9EE  50E7               	movf	indf1,w,c
 13230  01B9F0  5EE1               	subwf	fsr1l,f,c
 13231  01B9F2  0E00               	movlw	0
 13232  01B9F4  5AE2               	subwfb	fsr1h,f,c
 13233  01B9F6  0012               	return		;funcret
 13234  01B9F8                     __end_of_printf:
 13235                           	opt callstack 0
 13236                           
 13237 ;; *************** function _vfprintf *****************
 13238 ;; Defined at:
 13239 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13242 ;;		 -> f(6), NULL(0), 
 13243 ;;  fmt             2  [STACK] PTR const unsigned char 
 13244 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 13245 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 13246 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 13247 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 13248 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 13249 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 13250 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 13251 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 13252 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 13253 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 13254 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13255 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13256 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 13257 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 13258 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 13259 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 13260 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13261 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13262 ;;  ap              2  [STACK] PTR PTR void 
 13263 ;;		 -> ap(2), ap(2), 
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;  cfmt            2  [STACK] PTR unsigned char 
 13266 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 13267 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 13268 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 13269 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 13270 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 13271 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 13272 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 13273 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 13274 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 13275 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 13276 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13277 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13278 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 13279 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 13280 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 13281 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 13282 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13283 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  2  [STACK] int 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/1
 13290 ;;		On exit  : 3F/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;Total ram usage:        0 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:   22
 13300 ;; This function calls:
 13301 ;;		_vfpfcnvrt
 13302 ;; This function is called by:
 13303 ;;		_sprintf
 13304 ;;		_printf
 13305 ;; This function uses a reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text54
 13309  01AE32                     __ptext54:
 13310                           	opt callstack 0
 13311  01AE32                     _vfprintf:
 13312                           	opt callstack 0
 13313                           
 13314                           ; BSR set to: 0
 13315                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13316  01AE32  52E6               	movf	postinc1,f,c
 13317  01AE34  52E6               	movf	postinc1,f,c
 13318                           
 13319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 13320                           ;stkvar	_fmt @ sp[(-2)+-4]
 13321                           
 13322                           ;incstack = 0
 13323 ;; hardware stack exceeded
 13324  01AE36  0EFA               	movlw	-6
 13325  01AE38  006F FF8C  F00B    	movff	plusw1,btemp+10
 13326  01AE3E  0EFB               	movlw	-5
 13327  01AE40  006F FF8C  F00C    	movff	plusw1,btemp+11
 13328                           
 13329                           ;stkvar	_cfmt @ sp[(-2)+0]
 13330  01AE46  0EFF               	movlw	-1
 13331  01AE48  0060  F033  FFE3   	movff	btemp+11,plusw1
 13332  01AE4E  0EFE               	movlw	-2
 13333  01AE50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13334                           
 13335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 13336  01AE56  0100               	movlb	0	; () banked
 13337  01AE58  6B9A               	clrf	_nout& (0+255),b
 13338  01AE5A  6B9B               	clrf	(_nout+1)& (0+255),b
 13339                           
 13340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13341  01AE5C  D021               	goto	l13273
 13342  01AE5E                     l13271:
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 13346                           ;stkvar	_ap @ sp[(-2)+-6]
 13347  01AE5E  0EF8               	movlw	-8
 13348  01AE60  006F FF8F FFE6     	movff	plusw1,postinc1
 13349  01AE66  006F FF8F FFE6     	movff	plusw1,postinc1
 13350                           
 13351                           ;stkvar	_cfmt @ sp[(-4)+0]
 13352  01AE6C  0EFC               	movlw	252
 13353  01AE6E  24E1               	addwf	fsr1l,w,c
 13354  01AE70  6E01               	movwf	btemp^0,c
 13355  01AE72  0EFF               	movlw	255
 13356  01AE74  20E2               	addwfc	fsr1h,w,c
 13357  01AE76  6E02               	movwf	(btemp+1)^0,c
 13358  01AE78  0060  F007  FFE6   	movff	btemp,postinc1
 13359  01AE7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13360                           
 13361                           ;stkvar	_fp @ sp[(-6)+-2]
 13362  01AE84  0EF8               	movlw	-8
 13363  01AE86  006F FF8F FFE6     	movff	plusw1,postinc1
 13364  01AE8C  006F FF8F FFE6     	movff	plusw1,postinc1
 13365  01AE92  EC13  F092         	call	_vfpfcnvrt	;wreg free
 13366  01AE96  5001               	movf	btemp^0,w,c
 13367  01AE98  0100               	movlb	0	; () banked
 13368  01AE9A  279A               	addwf	_nout& (0+255),f,b
 13369  01AE9C  5002               	movf	(btemp+1)^0,w,c
 13370  01AE9E  239B               	addwfc	(_nout+1)& (0+255),f,b
 13371  01AEA0                     l13273:
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 13375                           ;stkvar	_cfmt @ sp[(-2)+0]
 13376  01AEA0  50E1               	movf	fsr1l,w,c
 13377  01AEA2  0FFE               	addlw	-2
 13378  01AEA4  6ED9               	movwf	fsr2l,c
 13379  01AEA6  50E2               	movf	fsr1h,w,c
 13380  01AEA8  6EDA               	movwf	fsr2h,c
 13381  01AEAA  0EFF               	movlw	255
 13382  01AEAC  22DA               	addwfc	fsr2h,f,c
 13383  01AEAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 13384  01AEB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 13385  01AEBA                     	if	0	;tblptru may be non-zero
 13386  01AEBA                     	endif
 13387  01AEBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13388  01AEBA  0E00               	movlw	low (__mediumconst shr (0+16))
 13389  01AEBC  6EF8               	movwf	tblptru,c
 13390  01AEBE                     	endif
 13391  01AEBE  0008               	tblrd		*
 13392  01AEC0  50F5               	movf	tablat,w,c
 13393  01AEC2  0900               	iorlw	0
 13394  01AEC4  A4D8               	btfss	status,2,c
 13395  01AEC6  D7CB               	goto	l13271
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 13399  01AEC8  0060  F268  F001   	movff	_nout,btemp
 13400  01AECE  0060  F26C  F002   	movff	_nout+1,btemp+1
 13401                           
 13402                           ; BSR set to: 0
 13403                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 13404  01AED4  0EF8               	movlw	248
 13405  01AED6  26E1               	addwf	fsr1l,f,c
 13406  01AED8  0EFF               	movlw	255
 13407  01AEDA  22E2               	addwfc	fsr1h,f,c
 13408  01AEDC  0012               	return		;funcret
 13409  01AEDE                     __end_of_vfprintf:
 13410                           	opt callstack 0
 13411                           
 13412 ;; *************** function _vfpfcnvrt *****************
 13413 ;; Defined at:
 13414 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13417 ;;		 -> f(6), NULL(0), 
 13418 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 13419 ;;		 -> cfmt(2), 
 13420 ;;  ap              2  [STACK] PTR PTR void 
 13421 ;;		 -> ap(2), ap(2), 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;  llu             8  [STACK] unsigned long long 
 13424 ;;  ll              8  [STACK] long long 
 13425 ;;  f               4  [STACK] long long 
 13426 ;;  ct              3  [STACK] unsigned char [3]
 13427 ;;  vp              3    0        PTR void 
 13428 ;;  cp              2  [STACK] PTR unsigned char 
 13429 ;;		 -> ?_printf(2), ?_sprintf(2), STR_57(9), STR_56(12), 
 13430 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 13431 ;;		 -> V(192), 
 13432 ;;  i               2    0        int 
 13433 ;;  done            2    0        int 
 13434 ;;  c               1  [STACK] unsigned char 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  2  [STACK] int 
 13437 ;; Registers used:
 13438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:   21
 13451 ;; This function calls:
 13452 ;;		_atoi
 13453 ;;		_ctoa
 13454 ;;		_dtoa
 13455 ;;		_efgtoa
 13456 ;;		_fputc
 13457 ;;		_isdigit
 13458 ;;		_isupper
 13459 ;;		_stoa
 13460 ;;		_strncmp
 13461 ;;		_tolower
 13462 ;;		_utoa
 13463 ;;		_xtoa
 13464 ;; This function is called by:
 13465 ;;		_vfprintf
 13466 ;; This function uses a reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text55
 13470  012426                     __ptext55:
 13471                           	opt callstack 0
 13472  012426                     _vfpfcnvrt:
 13473                           	opt callstack 0
 13474                           
 13475                           ; BSR set to: 0
 13476                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13477  012426  0E20               	movlw	32
 13478  012428  26E1               	addwf	fsr1l,f,c
 13479  01242A  0E00               	movlw	0
 13480  01242C  22E2               	addwfc	fsr1h,f,c
 13481                           
 13482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 13483                           ;stkvar	_fmt @ sp[(-32)+-4]
 13484                           
 13485                           ;incstack = 0
 13486 ;; hardware stack exceeded
 13487  01242E  0EDC               	movlw	-36
 13488  012430  006F FF8F FFD9     	movff	plusw1,fsr2l
 13489  012436  0EDD               	movlw	-35
 13490  012438  006F FF8F FFDA     	movff	plusw1,fsr2h
 13491  01243E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13492  012444  006F FF77 FFF7     	movff	postdec2,tblptrh
 13493  01244A                     	if	0	;tblptru may be non-zero
 13494  01244A                     	endif
 13495  01244A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13496  01244A  0E00               	movlw	low (__mediumconst shr (0+16))
 13497  01244C  6EF8               	movwf	tblptru,c
 13498  01244E                     	endif
 13499  01244E  0008               	tblrd		*
 13500  012450  50F5               	movf	tablat,w,c
 13501  012452  0A25               	xorlw	37
 13502  012454  A4D8               	btfss	status,2,c
 13503  012456  EFBA  F099         	goto	l13233
 13504                           
 13505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 13506                           ;stkvar	_fmt @ sp[(-32)+-4]
 13507  01245A  0EDC               	movlw	-36
 13508  01245C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13509  012462  0EDD               	movlw	-35
 13510  012464  006F FF8F FFDA     	movff	plusw1,fsr2h
 13511  01246A  2ADE               	incf	postinc2,f,c
 13512  01246C  0E00               	movlw	0
 13513  01246E  22DD               	addwfc	postdec2,f,c
 13514                           
 13515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 13516  012470  6A3A               	clrf	_width^0,c
 13517  012472  6A3B               	clrf	(_width+1)^0,c
 13518  012474  6A3E               	clrf	_flags^0,c
 13519  012476  6A3F               	clrf	(_flags+1)^0,c
 13520                           
 13521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 13522  012478  683C               	setf	_prec^0,c
 13523  01247A  683D               	setf	(_prec+1)^0,c
 13524                           
 13525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 13526                           ;stkvar	_fmt @ sp[(-32)+-4]
 13527  01247C  0EDC               	movlw	-36
 13528  01247E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13529  012484  0EDD               	movlw	-35
 13530  012486  006F FF8F FFDA     	movff	plusw1,fsr2h
 13531  01248C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13532  012492  006F FF77 FFF7     	movff	postdec2,tblptrh
 13533  012498                     	if	0	;tblptru may be non-zero
 13534  012498                     	endif
 13535  012498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13536  012498  0E00               	movlw	low (__mediumconst shr (0+16))
 13537  01249A  6EF8               	movwf	tblptru,c
 13538  01249C                     	endif
 13539  01249C  0008               	tblrd		*
 13540  01249E  50F5               	movf	tablat,w,c
 13541  0124A0  0A2A               	xorlw	42
 13542  0124A2  A4D8               	btfss	status,2,c
 13543  0124A4  D031               	goto	l13051
 13544                           
 13545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 13546                           ;stkvar	_fmt @ sp[(-32)+-4]
 13547  0124A6  0EDC               	movlw	-36
 13548  0124A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13549  0124AE  0EDD               	movlw	-35
 13550  0124B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13551  0124B6  2ADE               	incf	postinc2,f,c
 13552  0124B8  0E00               	movlw	0
 13553  0124BA  22DD               	addwfc	postdec2,f,c
 13554                           
 13555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 13556                           ;stkvar	_ap @ sp[(-32)+-6]
 13557  0124BC  0EDA               	movlw	-38
 13558  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13559  0124C4  0EDB               	movlw	-37
 13560  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13561  0124CC  0E02               	movlw	2
 13562  0124CE  5EDE               	subwf	postinc2,f,c
 13563  0124D0  0E00               	movlw	0
 13564  0124D2  5ADD               	subwfb	postdec2,f,c
 13565  0124D4  006F FF78  F00B    	movff	postinc2,btemp+10
 13566  0124DA  006F FF74  F00C    	movff	postdec2,btemp+11
 13567  0124E0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13568  0124E6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13569  0124EC  006F FF78  F03A    	movff	postinc2,_width
 13570  0124F2  006F FF74  F03B    	movff	postdec2,_width+1
 13571                           
 13572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 13573  0124F8  AE3B               	btfss	(_width+1)^0,7,c
 13574  0124FA  D066               	goto	u12460
 13575                           
 13576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 13577  0124FC  803E               	bsf	_flags^0,0,c
 13578                           
 13579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 13580  0124FE  6C3A               	negf	_width^0,c
 13581  012500  1E3B               	comf	(_width+1)^0,f,c
 13582  012502  B0D8               	btfsc	status,0,c
 13583  012504  2A3B               	incf	(_width+1)^0,f,c
 13584  012506  D060               	goto	u12460
 13585  012508                     l13051:
 13586                           
 13587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 13588                           ;stkvar	_fmt @ sp[(-32)+-4]
 13589  012508  0EDC               	movlw	-36
 13590  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13591  012510  0EDD               	movlw	-35
 13592  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 13593  012518  006F FF78  F00B    	movff	postinc2,btemp+10
 13594  01251E  006F FF74  F00C    	movff	postdec2,btemp+11
 13595  012524  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13596  01252A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13597  012530  EC2B  F0BE         	call	_atoi	;wreg free
 13598  012534  0060  F004  F03A   	movff	btemp,_width
 13599  01253A  0060  F008  F03B   	movff	btemp+1,_width+1
 13600                           
 13601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13602  012540  D00B               	goto	l13055
 13603  012542                     l13053:
 13604                           
 13605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 13606                           ;stkvar	_fmt @ sp[(-32)+-4]
 13607  012542  0EDC               	movlw	-36
 13608  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 13609  01254A  0EDD               	movlw	-35
 13610  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13611  012552  2ADE               	incf	postinc2,f,c
 13612  012554  0E00               	movlw	0
 13613  012556  22DD               	addwfc	postdec2,f,c
 13614  012558                     l13055:
 13615  012558  0ED0               	movlw	208
 13616  01255A  6E0B               	movwf	(btemp+10)^0,c
 13617  01255C  0EFF               	movlw	255
 13618  01255E  6E0C               	movwf	(btemp+11)^0,c
 13619                           
 13620                           ;stkvar	_fmt @ sp[(-32)+-4]
 13621  012560  0EDC               	movlw	-36
 13622  012562  006F FF8F FFD9     	movff	plusw1,fsr2l
 13623  012568  0EDD               	movlw	-35
 13624  01256A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13625  012570  006F FF7B FFF6     	movff	postinc2,tblptrl
 13626  012576  006F FF77 FFF7     	movff	postdec2,tblptrh
 13627  01257C                     	if	0	;tblptru may be non-zero
 13628  01257C                     	endif
 13629  01257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13630  01257C  0E00               	movlw	low (__mediumconst shr (0+16))
 13631  01257E  6EF8               	movwf	tblptru,c
 13632  012580                     	endif
 13633  012580  0008               	tblrd		*
 13634  012582  50F5               	movf	tablat,w,c
 13635  012584  6E09               	movwf	(btemp+8)^0,c
 13636  012586  6A0A               	clrf	(btemp+9)^0,c
 13637  012588  500B               	movf	(btemp+10)^0,w,c
 13638  01258A  2609               	addwf	(btemp+8)^0,f,c
 13639  01258C  500C               	movf	(btemp+11)^0,w,c
 13640  01258E  220A               	addwfc	(btemp+9)^0,f,c
 13641  012590  500A               	movf	(btemp+9)^0,w,c
 13642  012592  E106               	bnz	u12440
 13643  012594  0E0A               	movlw	10
 13644  012596  5C09               	subwf	(btemp+8)^0,w,c
 13645  012598  B0D8               	btfsc	status,0,c
 13646  01259A  D002               	goto	u12440
 13647  01259C  0E01               	movlw	1
 13648  01259E  D001               	goto	u12450
 13649  0125A0                     u12440:
 13650  0125A0  0E00               	movlw	0
 13651  0125A2                     u12450:
 13652  0125A2  6E0B               	movwf	(btemp+10)^0,c
 13653  0125A4  6A0C               	clrf	(btemp+11)^0,c
 13654                           
 13655                           ;stkvar	_vfpfcnvrt$5907 @ sp[(-32)+4]
 13656  0125A6  0EE4               	movlw	-28
 13657  0125A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13658  0125AE  0EE5               	movlw	-27
 13659  0125B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13660                           
 13661                           ;stkvar	_vfpfcnvrt$5907 @ sp[(-32)+4]
 13662  0125B6  0EE4               	movlw	-28
 13663  0125B8  006F FF8C  F001    	movff	plusw1,btemp
 13664  0125BE  0EE5               	movlw	-27
 13665  0125C0  50E3               	movf	plusw1,w,c
 13666  0125C2  1001               	iorwf	btemp^0,w,c
 13667  0125C4  A4D8               	btfss	status,2,c
 13668  0125C6  D7BD               	goto	l13053
 13669  0125C8                     u12460:
 13670                           
 13671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13672                           ;stkvar	_fmt @ sp[(-32)+-4]
 13673  0125C8  0EDC               	movlw	-36
 13674  0125CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13675  0125D0  0EDD               	movlw	-35
 13676  0125D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13677  0125D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13678  0125DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13679  0125E4                     	if	0	;tblptru may be non-zero
 13680  0125E4                     	endif
 13681  0125E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13682  0125E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13683  0125E6  6EF8               	movwf	tblptru,c
 13684  0125E8                     	endif
 13685  0125E8  0008               	tblrd		*
 13686  0125EA  50F5               	movf	tablat,w,c
 13687  0125EC  0A2E               	xorlw	46
 13688  0125EE  A4D8               	btfss	status,2,c
 13689  0125F0  D0AC               	goto	u12510
 13690                           
 13691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13692  0125F2  6A3C               	clrf	_prec^0,c
 13693  0125F4  6A3D               	clrf	(_prec+1)^0,c
 13694                           
 13695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13696                           ;stkvar	_fmt @ sp[(-32)+-4]
 13697  0125F6  0EDC               	movlw	-36
 13698  0125F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13699  0125FE  0EDD               	movlw	-35
 13700  012600  006F FF8F FFDA     	movff	plusw1,fsr2h
 13701  012606  2ADE               	incf	postinc2,f,c
 13702  012608  0E00               	movlw	0
 13703  01260A  22DD               	addwfc	postdec2,f,c
 13704                           
 13705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13706                           ;stkvar	_fmt @ sp[(-32)+-4]
 13707  01260C  0EDC               	movlw	-36
 13708  01260E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13709  012614  0EDD               	movlw	-35
 13710  012616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13711  01261C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13712  012622  006F FF77 FFF7     	movff	postdec2,tblptrh
 13713  012628                     	if	0	;tblptru may be non-zero
 13714  012628                     	endif
 13715  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13716  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 13717  01262A  6EF8               	movwf	tblptru,c
 13718  01262C                     	endif
 13719  01262C  0008               	tblrd		*
 13720  01262E  50F5               	movf	tablat,w,c
 13721  012630  0A2A               	xorlw	42
 13722  012632  A4D8               	btfss	status,2,c
 13723  012634  D02A               	goto	l13073
 13724                           
 13725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13726                           ;stkvar	_fmt @ sp[(-32)+-4]
 13727  012636  0EDC               	movlw	-36
 13728  012638  006F FF8F FFD9     	movff	plusw1,fsr2l
 13729  01263E  0EDD               	movlw	-35
 13730  012640  006F FF8F FFDA     	movff	plusw1,fsr2h
 13731  012646  2ADE               	incf	postinc2,f,c
 13732  012648  0E00               	movlw	0
 13733  01264A  22DD               	addwfc	postdec2,f,c
 13734                           
 13735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13736                           ;stkvar	_ap @ sp[(-32)+-6]
 13737  01264C  0EDA               	movlw	-38
 13738  01264E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13739  012654  0EDB               	movlw	-37
 13740  012656  006F FF8F FFDA     	movff	plusw1,fsr2h
 13741  01265C  0E02               	movlw	2
 13742  01265E  5EDE               	subwf	postinc2,f,c
 13743  012660  0E00               	movlw	0
 13744  012662  5ADD               	subwfb	postdec2,f,c
 13745  012664  006F FF78  F00B    	movff	postinc2,btemp+10
 13746  01266A  006F FF74  F00C    	movff	postdec2,btemp+11
 13747  012670  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13748  012676  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13749  01267C  006F FF78  F03C    	movff	postinc2,_prec
 13750  012682  006F FF74  F03D    	movff	postdec2,_prec+1
 13751                           
 13752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 13753  012688  D060               	goto	u12510
 13754  01268A                     l13073:
 13755                           
 13756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13757                           ;stkvar	_fmt @ sp[(-32)+-4]
 13758  01268A  0EDC               	movlw	-36
 13759  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13760  012692  0EDD               	movlw	-35
 13761  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 13762  01269A  006F FF78  F00B    	movff	postinc2,btemp+10
 13763  0126A0  006F FF74  F00C    	movff	postdec2,btemp+11
 13764  0126A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13765  0126AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 13766  0126B2  EC2B  F0BE         	call	_atoi	;wreg free
 13767  0126B6  0060  F004  F03C   	movff	btemp,_prec
 13768  0126BC  0060  F008  F03D   	movff	btemp+1,_prec+1
 13769                           
 13770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13771  0126C2  D00B               	goto	l13077
 13772  0126C4                     l13075:
 13773                           
 13774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13775                           ;stkvar	_fmt @ sp[(-32)+-4]
 13776  0126C4  0EDC               	movlw	-36
 13777  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13778  0126CC  0EDD               	movlw	-35
 13779  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13780  0126D4  2ADE               	incf	postinc2,f,c
 13781  0126D6  0E00               	movlw	0
 13782  0126D8  22DD               	addwfc	postdec2,f,c
 13783  0126DA                     l13077:
 13784  0126DA  0ED0               	movlw	208
 13785  0126DC  6E0B               	movwf	(btemp+10)^0,c
 13786  0126DE  0EFF               	movlw	255
 13787  0126E0  6E0C               	movwf	(btemp+11)^0,c
 13788                           
 13789                           ;stkvar	_fmt @ sp[(-32)+-4]
 13790  0126E2  0EDC               	movlw	-36
 13791  0126E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13792  0126EA  0EDD               	movlw	-35
 13793  0126EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13794  0126F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13795  0126F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13796  0126FE                     	if	0	;tblptru may be non-zero
 13797  0126FE                     	endif
 13798  0126FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13799  0126FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13800  012700  6EF8               	movwf	tblptru,c
 13801  012702                     	endif
 13802  012702  0008               	tblrd		*
 13803  012704  50F5               	movf	tablat,w,c
 13804  012706  6E09               	movwf	(btemp+8)^0,c
 13805  012708  6A0A               	clrf	(btemp+9)^0,c
 13806  01270A  500B               	movf	(btemp+10)^0,w,c
 13807  01270C  2609               	addwf	(btemp+8)^0,f,c
 13808  01270E  500C               	movf	(btemp+11)^0,w,c
 13809  012710  220A               	addwfc	(btemp+9)^0,f,c
 13810  012712  500A               	movf	(btemp+9)^0,w,c
 13811  012714  E106               	bnz	u12490
 13812  012716  0E0A               	movlw	10
 13813  012718  5C09               	subwf	(btemp+8)^0,w,c
 13814  01271A  B0D8               	btfsc	status,0,c
 13815  01271C  D002               	goto	u12490
 13816  01271E  0E01               	movlw	1
 13817  012720  D001               	goto	u12500
 13818  012722                     u12490:
 13819  012722  0E00               	movlw	0
 13820  012724                     u12500:
 13821  012724  6E0B               	movwf	(btemp+10)^0,c
 13822  012726  6A0C               	clrf	(btemp+11)^0,c
 13823                           
 13824                           ;stkvar	_vfpfcnvrt$5908 @ sp[(-32)+0]
 13825  012728  0EE0               	movlw	-32
 13826  01272A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13827  012730  0EE1               	movlw	-31
 13828  012732  0060  F033  FFE3   	movff	btemp+11,plusw1
 13829                           
 13830                           ;stkvar	_vfpfcnvrt$5908 @ sp[(-32)+0]
 13831  012738  0EE0               	movlw	-32
 13832  01273A  006F FF8C  F001    	movff	plusw1,btemp
 13833  012740  0EE1               	movlw	-31
 13834  012742  50E3               	movf	plusw1,w,c
 13835  012744  1001               	iorwf	btemp^0,w,c
 13836  012746  A4D8               	btfss	status,2,c
 13837  012748  D7BD               	goto	l13075
 13838  01274A                     u12510:
 13839                           
 13840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 13841                           ;stkvar	_fmt @ sp[(-32)+-4]
 13842  01274A  0EDC               	movlw	-36
 13843  01274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13844  012752  0EDD               	movlw	-35
 13845  012754  006F FF8F FFDA     	movff	plusw1,fsr2h
 13846  01275A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13847  012760  006F FF77 FFF7     	movff	postdec2,tblptrh
 13848  012766                     	if	0	;tblptru may be non-zero
 13849  012766                     	endif
 13850  012766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13851  012766  0E00               	movlw	low (__mediumconst shr (0+16))
 13852  012768  6EF8               	movwf	tblptru,c
 13853  01276A                     	endif
 13854  01276A  0008               	tblrd		*
 13855  01276C  50F5               	movf	tablat,w,c
 13856  01276E  6EE6               	movwf	postinc1,c
 13857  012770  0E00               	movlw	0
 13858  012772  6EE6               	movwf	postinc1,c
 13859  012774  EC20  F0DA         	call	_tolower	;wreg free
 13860                           
 13861                           ;stkvar	_ct @ sp[(-32)+26]
 13862  012778  0EFA               	movlw	-6
 13863  01277A  0060  F007  FFE3   	movff	btemp,plusw1
 13864                           
 13865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 13866                           ;stkvar	_ct @ sp[(-32)+26]
 13867  012780  0EFA               	movlw	-6
 13868  012782  50E3               	movf	plusw1,w,c
 13869  012784  B4D8               	btfsc	status,2,c
 13870  012786  D05B               	goto	l13093
 13871                           
 13872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 13873                           ;stkvar	_ct @ sp[(-32)+26]
 13874  012788  0EFB               	movlw	251
 13875  01278A  24E1               	addwf	fsr1l,w,c
 13876  01278C  6ED9               	movwf	fsr2l,c
 13877  01278E  0EFF               	movlw	255
 13878  012790  20E2               	addwfc	fsr1h,w,c
 13879  012792  6EDA               	movwf	fsr2h,c
 13880                           
 13881                           ;stkvar	_fmt @ sp[(-32)+-4]
 13882  012794  0EDC               	movlw	-36
 13883  012796  006F FF8F FFE9     	movff	plusw1,fsr0l
 13884  01279C  0EDD               	movlw	-35
 13885  01279E  006F FF8F FFEA     	movff	plusw1,fsr0h
 13886  0127A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 13887  0127AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 13888  0127B0  0E01               	movlw	1
 13889  0127B2  260B               	addwf	(btemp+10)^0,f,c
 13890  0127B4  0E00               	movlw	0
 13891  0127B6  220C               	addwfc	(btemp+11)^0,f,c
 13892  0127B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13893  0127BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13894  0127C4                     	if	0	;tblptru may be non-zero
 13895  0127C4                     	endif
 13896  0127C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13897  0127C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13898  0127C6  6EF8               	movwf	tblptru,c
 13899  0127C8                     	endif
 13900  0127C8  0008               	tblrd		*
 13901  0127CA  50F5               	movf	tablat,w,c
 13902  0127CC  6EE6               	movwf	postinc1,c
 13903  0127CE  0E00               	movlw	0
 13904  0127D0  6EE6               	movwf	postinc1,c
 13905  0127D2  EC20  F0DA         	call	_tolower	;wreg free
 13906  0127D6  5001               	movf	btemp^0,w,c
 13907  0127D8  6EDF               	movwf	indf2,c
 13908                           
 13909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 13910                           ;stkvar	_ct @ sp[(-32)+26]
 13911  0127DA  0EFB               	movlw	251
 13912  0127DC  24E1               	addwf	fsr1l,w,c
 13913  0127DE  6ED9               	movwf	fsr2l,c
 13914  0127E0  0EFF               	movlw	255
 13915  0127E2  20E2               	addwfc	fsr1h,w,c
 13916  0127E4  6EDA               	movwf	fsr2h,c
 13917  0127E6  50DF               	movf	indf2,w,c
 13918  0127E8  B4D8               	btfsc	status,2,c
 13919  0127EA  D029               	goto	l13093
 13920                           
 13921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 13922                           ;stkvar	_ct @ sp[(-32)+26]
 13923  0127EC  0EFC               	movlw	252
 13924  0127EE  24E1               	addwf	fsr1l,w,c
 13925  0127F0  6ED9               	movwf	fsr2l,c
 13926  0127F2  0EFF               	movlw	255
 13927  0127F4  20E2               	addwfc	fsr1h,w,c
 13928  0127F6  6EDA               	movwf	fsr2h,c
 13929                           
 13930                           ;stkvar	_fmt @ sp[(-32)+-4]
 13931  0127F8  0EDC               	movlw	-36
 13932  0127FA  006F FF8F FFE9     	movff	plusw1,fsr0l
 13933  012800  0EDD               	movlw	-35
 13934  012802  006F FF8F FFEA     	movff	plusw1,fsr0h
 13935  012808  006F FFB8  F00B    	movff	postinc0,btemp+10
 13936  01280E  006F FFB4  F00C    	movff	postdec0,btemp+11
 13937  012814  0E02               	movlw	2
 13938  012816  260B               	addwf	(btemp+10)^0,f,c
 13939  012818  0E00               	movlw	0
 13940  01281A  220C               	addwfc	(btemp+11)^0,f,c
 13941  01281C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13942  012822  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13943  012828                     	if	0	;tblptru may be non-zero
 13944  012828                     	endif
 13945  012828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13946  012828  0E00               	movlw	low (__mediumconst shr (0+16))
 13947  01282A  6EF8               	movwf	tblptru,c
 13948  01282C                     	endif
 13949  01282C  0008               	tblrd		*
 13950  01282E  50F5               	movf	tablat,w,c
 13951  012830  6EE6               	movwf	postinc1,c
 13952  012832  0E00               	movlw	0
 13953  012834  6EE6               	movwf	postinc1,c
 13954  012836  EC20  F0DA         	call	_tolower	;wreg free
 13955  01283A  5001               	movf	btemp^0,w,c
 13956  01283C  6EDF               	movwf	indf2,c
 13957  01283E                     l13093:
 13958                           
 13959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 13960                           ;stkvar	_fmt @ sp[(-32)+-4]
 13961  01283E  0EDC               	movlw	-36
 13962  012840  006F FF8F FFD9     	movff	plusw1,fsr2l
 13963  012846  0EDD               	movlw	-35
 13964  012848  006F FF8F FFDA     	movff	plusw1,fsr2h
 13965  01284E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13966  012854  006F FF77 FFF7     	movff	postdec2,tblptrh
 13967  01285A                     	if	0	;tblptru may be non-zero
 13968  01285A                     	endif
 13969  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13970  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 13971  01285C  6EF8               	movwf	tblptru,c
 13972  01285E                     	endif
 13973  01285E  0008               	tblrd		*
 13974  012860  50F5               	movf	tablat,w,c
 13975  012862  0A63               	xorlw	99
 13976  012864  A4D8               	btfss	status,2,c
 13977  012866  D037               	goto	l13103
 13978                           
 13979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 13980                           ;stkvar	_fmt @ sp[(-32)+-4]
 13981  012868  0EDC               	movlw	-36
 13982  01286A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13983  012870  0EDD               	movlw	-35
 13984  012872  006F FF8F FFDA     	movff	plusw1,fsr2h
 13985  012878  2ADE               	incf	postinc2,f,c
 13986  01287A  0E00               	movlw	0
 13987  01287C  22DD               	addwfc	postdec2,f,c
 13988                           
 13989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13990                           ;stkvar	_ap @ sp[(-32)+-6]
 13991  01287E  0EDA               	movlw	-38
 13992  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 13993  012886  0EDB               	movlw	-37
 13994  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 13995  01288E  0E02               	movlw	2
 13996  012890  5EDE               	subwf	postinc2,f,c
 13997  012892  0E00               	movlw	0
 13998  012894  5ADD               	subwfb	postdec2,f,c
 13999  012896  006F FF78  F00B    	movff	postinc2,btemp+10
 14000  01289C  006F FF74  F00C    	movff	postdec2,btemp+11
 14001  0128A2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14002  0128A8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14003  0128AE  50DF               	movf	indf2,w,c
 14004  0128B0  6E0C               	movwf	(btemp+11)^0,c
 14005                           
 14006                           ;stkvar	_c @ sp[(-32)+31]
 14007  0128B2  0EFF               	movlw	-1
 14008  0128B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14009                           
 14010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 14011                           ;stkvar	_c @ sp[(-32)+31]
 14012  0128BA  0EFF               	movlw	-1
 14013  0128BC  50E3               	movf	plusw1,w,c
 14014  0128BE  6EE6               	movwf	postinc1,c
 14015                           
 14016                           ;stkvar	_fp @ sp[(-33)+-2]
 14017  0128C0  0EDD               	movlw	-35
 14018  0128C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14019  0128C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14020  0128CE  EC9A  F0D9         	call	_ctoa	;wreg free
 14021  0128D2  EFE4  F099         	goto	l2483
 14022  0128D6                     l13103:
 14023                           
 14024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 14025                           ;stkvar	_fmt @ sp[(-32)+-4]
 14026  0128D6  0EDC               	movlw	-36
 14027  0128D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14028  0128DE  0EDD               	movlw	-35
 14029  0128E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14030  0128E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14031  0128EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14032  0128F2                     	if	0	;tblptru may be non-zero
 14033  0128F2                     	endif
 14034  0128F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14035  0128F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14036  0128F4  6EF8               	movwf	tblptru,c
 14037  0128F6                     	endif
 14038  0128F6  0008               	tblrd		*
 14039  0128F8  50F5               	movf	tablat,w,c
 14040  0128FA  0A64               	xorlw	100
 14041  0128FC  B4D8               	btfsc	status,2,c
 14042  0128FE  D015               	goto	u12560
 14043                           
 14044                           ;stkvar	_fmt @ sp[(-32)+-4]
 14045  012900  0EDC               	movlw	-36
 14046  012902  006F FF8F FFD9     	movff	plusw1,fsr2l
 14047  012908  0EDD               	movlw	-35
 14048  01290A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14049  012910  006F FF7B FFF6     	movff	postinc2,tblptrl
 14050  012916  006F FF77 FFF7     	movff	postdec2,tblptrh
 14051  01291C                     	if	0	;tblptru may be non-zero
 14052  01291C                     	endif
 14053  01291C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14054  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
 14055  01291E  6EF8               	movwf	tblptru,c
 14056  012920                     	endif
 14057  012920  0008               	tblrd		*
 14058  012922  50F5               	movf	tablat,w,c
 14059  012924  0A69               	xorlw	105
 14060  012926  A4D8               	btfss	status,2,c
 14061  012928  D076               	goto	l13115
 14062  01292A                     u12560:
 14063                           
 14064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 14065                           ;stkvar	_fmt @ sp[(-32)+-4]
 14066  01292A  0EDC               	movlw	-36
 14067  01292C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14068  012932  0EDD               	movlw	-35
 14069  012934  006F FF8F FFDA     	movff	plusw1,fsr2h
 14070  01293A  2ADE               	incf	postinc2,f,c
 14071  01293C  0E00               	movlw	0
 14072  01293E  22DD               	addwfc	postdec2,f,c
 14073                           
 14074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 14075                           ;stkvar	_ap @ sp[(-32)+-6]
 14076  012940  0EDA               	movlw	-38
 14077  012942  006F FF8F FFD9     	movff	plusw1,fsr2l
 14078  012948  0EDB               	movlw	-37
 14079  01294A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14080  012950  0E02               	movlw	2
 14081  012952  5EDE               	subwf	postinc2,f,c
 14082  012954  0E00               	movlw	0
 14083  012956  5ADD               	subwfb	postdec2,f,c
 14084  012958  006F FF78  F00B    	movff	postinc2,btemp+10
 14085  01295E  006F FF74  F00C    	movff	postdec2,btemp+11
 14086  012964  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14087  01296A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14088  012970  006F FF78  F00B    	movff	postinc2,btemp+10
 14089  012976  006F FF74  F00C    	movff	postdec2,btemp+11
 14090                           
 14091                           ;stkvar	_ll @ sp[(-32)+14]
 14092  01297C  0EEE               	movlw	-18
 14093  01297E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14094  012984  0EEF               	movlw	-17
 14095  012986  0060  F033  FFE3   	movff	btemp+11,plusw1
 14096  01298C  6A01               	clrf	btemp^0,c
 14097  01298E  BEE3               	btfsc	plusw1,7,c
 14098  012990  6801               	setf	btemp^0,c
 14099  012992  0EF0               	movlw	-16
 14100  012994  0060  F007  FFE3   	movff	btemp,plusw1
 14101  01299A  0EF1               	movlw	-15
 14102  01299C  0060  F007  FFE3   	movff	btemp,plusw1
 14103  0129A2  0EF2               	movlw	-14
 14104  0129A4  0060  F007  FFE3   	movff	btemp,plusw1
 14105  0129AA  0EF3               	movlw	-13
 14106  0129AC  0060  F007  FFE3   	movff	btemp,plusw1
 14107  0129B2  0EF4               	movlw	-12
 14108  0129B4  0060  F007  FFE3   	movff	btemp,plusw1
 14109  0129BA  0EF5               	movlw	-11
 14110  0129BC  0060  F007  FFE3   	movff	btemp,plusw1
 14111  0129C2                     l13111:
 14112                           
 14113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 14114                           ;stkvar	_ll @ sp[(-32)+14]
 14115  0129C2  50E1               	movf	fsr1l,w,c
 14116  0129C4  0FEE               	addlw	-18
 14117  0129C6  6ED9               	movwf	fsr2l,c
 14118  0129C8  50E2               	movf	fsr1h,w,c
 14119  0129CA  6EDA               	movwf	fsr2h,c
 14120  0129CC  0EFF               	movlw	255
 14121  0129CE  22DA               	addwfc	fsr2h,f,c
 14122  0129D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14123  0129D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14124  0129DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14125  0129E2  006F FF7B FFE6     	movff	postinc2,postinc1
 14126  0129E8  006F FF7B FFE6     	movff	postinc2,postinc1
 14127  0129EE  006F FF7B FFE6     	movff	postinc2,postinc1
 14128  0129F4  006F FF7B FFE6     	movff	postinc2,postinc1
 14129  0129FA  006F FF7B FFE6     	movff	postinc2,postinc1
 14130                           
 14131                           ;stkvar	_fp @ sp[(-40)+-2]
 14132  012A00  0ED6               	movlw	-42
 14133  012A02  006F FF8F FFE6     	movff	plusw1,postinc1
 14134  012A08  006F FF8F FFE6     	movff	plusw1,postinc1
 14135  012A0E  EC2E  F0AC         	call	_dtoa	;wreg free
 14136  012A12  EFE4  F099         	goto	l2483
 14137  012A16                     l13115:
 14138                           
 14139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 14140  012A16  0E02               	movlw	2
 14141  012A18  6EE6               	movwf	postinc1,c
 14142  012A1A  0E00               	movlw	0
 14143  012A1C  6EE6               	movwf	postinc1,c
 14144  012A1E  0EE9               	movlw	low STR_84
 14145  012A20  6EE6               	movwf	postinc1,c
 14146  012A22  0EFF               	movlw	high STR_84
 14147  012A24  6EE6               	movwf	postinc1,c
 14148                           
 14149                           ;stkvar	_fmt @ sp[(-36)+-4]
 14150  012A26  0ED8               	movlw	-40
 14151  012A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 14152  012A2E  0ED9               	movlw	-39
 14153  012A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 14154  012A36  006F FF78  F00B    	movff	postinc2,btemp+10
 14155  012A3C  006F FF74  F00C    	movff	postdec2,btemp+11
 14156  012A42  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14157  012A48  0060  F033  FFE6   	movff	btemp+11,postinc1
 14158  012A4E  ECA8  F0C1         	call	_strncmp	;wreg free
 14159  012A52  5001               	movf	btemp^0,w,c
 14160  012A54  1002               	iorwf	(btemp+1)^0,w,c
 14161  012A56  B4D8               	btfsc	status,2,c
 14162  012A58  D022               	goto	u12580
 14163  012A5A  0E02               	movlw	2
 14164  012A5C  6EE6               	movwf	postinc1,c
 14165  012A5E  0E00               	movlw	0
 14166  012A60  6EE6               	movwf	postinc1,c
 14167  012A62  0EEF               	movlw	low STR_88
 14168  012A64  6EE6               	movwf	postinc1,c
 14169  012A66  0EFF               	movlw	high STR_88
 14170  012A68  6EE6               	movwf	postinc1,c
 14171                           
 14172                           ;stkvar	_fmt @ sp[(-36)+-4]
 14173  012A6A  0ED8               	movlw	-40
 14174  012A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14175  012A72  0ED9               	movlw	-39
 14176  012A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14177  012A7A  006F FF78  F00B    	movff	postinc2,btemp+10
 14178  012A80  006F FF74  F00C    	movff	postdec2,btemp+11
 14179  012A86  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14180  012A8C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14181  012A92  ECA8  F0C1         	call	_strncmp	;wreg free
 14182  012A96  5001               	movf	btemp^0,w,c
 14183  012A98  1002               	iorwf	(btemp+1)^0,w,c
 14184  012A9A  A4D8               	btfss	status,2,c
 14185  012A9C  D069               	goto	l13127
 14186  012A9E                     u12580:
 14187                           
 14188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 14189                           ;stkvar	_fmt @ sp[(-32)+-4]
 14190  012A9E  0EDC               	movlw	-36
 14191  012AA0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14192  012AA6  0EDD               	movlw	-35
 14193  012AA8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14194  012AAE  0E02               	movlw	2
 14195  012AB0  26DE               	addwf	postinc2,f,c
 14196  012AB2  0E00               	movlw	0
 14197  012AB4  22DD               	addwfc	postdec2,f,c
 14198                           
 14199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 14200                           ;stkvar	_ap @ sp[(-32)+-6]
 14201  012AB6  0EDA               	movlw	-38
 14202  012AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14203  012ABE  0EDB               	movlw	-37
 14204  012AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14205  012AC6  0E04               	movlw	4
 14206  012AC8  5EDE               	subwf	postinc2,f,c
 14207  012ACA  0E00               	movlw	0
 14208  012ACC  5ADD               	subwfb	postdec2,f,c
 14209  012ACE  006F FF78  F00B    	movff	postinc2,btemp+10
 14210  012AD4  006F FF74  F00C    	movff	postdec2,btemp+11
 14211  012ADA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14212  012AE0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14213  012AE6  006F FF78  F009    	movff	postinc2,btemp+8
 14214  012AEC  006F FF78  F00A    	movff	postinc2,btemp+9
 14215  012AF2  006F FF78  F00B    	movff	postinc2,btemp+10
 14216  012AF8  006F FF78  F00C    	movff	postinc2,btemp+11
 14217  012AFE  0060  F024  F011   	movff	btemp+8,btemp+16
 14218  012B04  0060  F028  F012   	movff	btemp+9,btemp+17
 14219  012B0A  0060  F02C  F013   	movff	btemp+10,btemp+18
 14220  012B10  0060  F030  F014   	movff	btemp+11,btemp+19
 14221  012B16  6A15               	clrf	(btemp+20)^0,c
 14222  012B18  BE14               	btfsc	(btemp+19)^0,7,c
 14223  012B1A  6815               	setf	(btemp+20)^0,c
 14224  012B1C  0060  F054  F016   	movff	btemp+20,btemp+21
 14225  012B22  0060  F054  F017   	movff	btemp+20,btemp+22
 14226  012B28  0060  F054  F018   	movff	btemp+20,btemp+23
 14227                           
 14228                           ;stkvar	_ll @ sp[(-32)+14]
 14229  012B2E  0EEE               	movlw	-18
 14230  012B30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14231  012B36  0EEF               	movlw	-17
 14232  012B38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14233  012B3E  0EF0               	movlw	-16
 14234  012B40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14235  012B46  0EF1               	movlw	-15
 14236  012B48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14237  012B4E  0EF2               	movlw	-14
 14238  012B50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14239  012B56  0EF3               	movlw	-13
 14240  012B58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14241  012B5E  0EF4               	movlw	-12
 14242  012B60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14243  012B66  0EF5               	movlw	-11
 14244  012B68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14245  012B6E  D729               	goto	l13111
 14246  012B70                     l13127:
 14247                           
 14248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 14249                           ;stkvar	_ct @ sp[(-32)+26]
 14250  012B70  0EFA               	movlw	-6
 14251  012B72  006F FF8C  F001    	movff	plusw1,btemp
 14252  012B78  0E66               	movlw	102
 14253  012B7A  1801               	xorwf	btemp^0,w,c
 14254  012B7C  A4D8               	btfss	status,2,c
 14255  012B7E  D06E               	goto	l13139
 14256                           
 14257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 14258                           ;stkvar	_fmt @ sp[(-32)+-4]
 14259  012B80  0EDC               	movlw	-36
 14260  012B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 14261  012B88  0EDD               	movlw	-35
 14262  012B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14263  012B90  006F FF7B FFF6     	movff	postinc2,tblptrl
 14264  012B96  006F FF77 FFF7     	movff	postdec2,tblptrh
 14265  012B9C                     	if	0	;tblptru may be non-zero
 14266  012B9C                     	endif
 14267  012B9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14268  012B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 14269  012B9E  6EF8               	movwf	tblptru,c
 14270  012BA0                     	endif
 14271                           
 14272                           ;stkvar	_c @ sp[(-32)+31]
 14273  012BA0  0008               	tblrd		*
 14274  012BA2  0EFF               	movlw	-1
 14275  012BA4  006F FFD7 FFE3     	movff	tablat,plusw1
 14276                           
 14277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 14278                           ;stkvar	_fmt @ sp[(-32)+-4]
 14279  012BAA  0EDC               	movlw	-36
 14280  012BAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14281  012BB2  0EDD               	movlw	-35
 14282  012BB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14283  012BBA  2ADE               	incf	postinc2,f,c
 14284  012BBC  0E00               	movlw	0
 14285  012BBE  22DD               	addwfc	postdec2,f,c
 14286                           
 14287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 14288                           ;stkvar	_ap @ sp[(-32)+-6]
 14289  012BC0  0EDA               	movlw	-38
 14290  012BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14291  012BC8  0EDB               	movlw	-37
 14292  012BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14293  012BD0  0E04               	movlw	4
 14294  012BD2  5EDE               	subwf	postinc2,f,c
 14295  012BD4  0E00               	movlw	0
 14296  012BD6  5ADD               	subwfb	postdec2,f,c
 14297  012BD8  006F FF78  F00B    	movff	postinc2,btemp+10
 14298  012BDE  006F FF74  F00C    	movff	postdec2,btemp+11
 14299  012BE4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14300  012BEA  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14301  012BF0  006F FF78  F009    	movff	postinc2,btemp+8
 14302  012BF6  006F FF78  F00A    	movff	postinc2,btemp+9
 14303  012BFC  006F FF78  F00B    	movff	postinc2,btemp+10
 14304  012C02  006F FF78  F00C    	movff	postinc2,btemp+11
 14305                           
 14306                           ;stkvar	_f @ sp[(-32)+22]
 14307  012C08  0EF6               	movlw	-10
 14308  012C0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 14309  012C10  0EF7               	movlw	-9
 14310  012C12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14311  012C18  0EF8               	movlw	-8
 14312  012C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14313  012C20  0EF9               	movlw	-7
 14314  012C22  0060  F033  FFE3   	movff	btemp+11,plusw1
 14315  012C28                     l13135:
 14316                           
 14317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 14318                           ;stkvar	_c @ sp[(-32)+31]
 14319  012C28  0EFF               	movlw	-1
 14320  012C2A  50E3               	movf	plusw1,w,c
 14321  012C2C  6EE6               	movwf	postinc1,c
 14322                           
 14323                           ;stkvar	_f @ sp[(-33)+22]
 14324  012C2E  0EF5               	movlw	-11
 14325  012C30  006F FF8F FFE6     	movff	plusw1,postinc1
 14326  012C36  006F FF8F FFE6     	movff	plusw1,postinc1
 14327  012C3C  006F FF8F FFE6     	movff	plusw1,postinc1
 14328  012C42  006F FF8F FFE6     	movff	plusw1,postinc1
 14329                           
 14330                           ;stkvar	_fp @ sp[(-37)+-2]
 14331  012C48  0ED9               	movlw	-39
 14332  012C4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14333  012C50  006F FF8F FFE6     	movff	plusw1,postinc1
 14334  012C56  EC00  F080         	call	_efgtoa	;wreg free
 14335  012C5A  D3B6               	goto	l2483
 14336  012C5C                     l13139:
 14337                           
 14338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 14339  012C5C  0E02               	movlw	2
 14340  012C5E  6EE6               	movwf	postinc1,c
 14341  012C60  0E00               	movlw	0
 14342  012C62  6EE6               	movwf	postinc1,c
 14343  012C64  0EEC               	movlw	low STR_93
 14344  012C66  6EE6               	movwf	postinc1,c
 14345  012C68  0EFF               	movlw	high STR_93
 14346  012C6A  6EE6               	movwf	postinc1,c
 14347                           
 14348                           ;stkvar	_ct @ sp[(-36)+26]
 14349  012C6C  0EF6               	movlw	246
 14350  012C6E  24E1               	addwf	fsr1l,w,c
 14351  012C70  6E01               	movwf	btemp^0,c
 14352  012C72  0EFF               	movlw	255
 14353  012C74  20E2               	addwfc	fsr1h,w,c
 14354  012C76  6E02               	movwf	(btemp+1)^0,c
 14355  012C78  0060  F007  FFE6   	movff	btemp,postinc1
 14356  012C7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14357  012C84  ECA8  F0C1         	call	_strncmp	;wreg free
 14358  012C88  5001               	movf	btemp^0,w,c
 14359  012C8A  1002               	iorwf	(btemp+1)^0,w,c
 14360  012C8C  A4D8               	btfss	status,2,c
 14361  012C8E  D096               	goto	l13159
 14362                           
 14363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 14364                           ;stkvar	_fmt @ sp[(-32)+-4]
 14365  012C90  0EDC               	movlw	-36
 14366  012C92  006F FF8F FFD9     	movff	plusw1,fsr2l
 14367  012C98  0EDD               	movlw	-35
 14368  012C9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14369  012CA0  006F FF78  F00B    	movff	postinc2,btemp+10
 14370  012CA6  006F FF74  F00C    	movff	postdec2,btemp+11
 14371  012CAC  0E01               	movlw	1
 14372  012CAE  260B               	addwf	(btemp+10)^0,f,c
 14373  012CB0  0E00               	movlw	0
 14374  012CB2  220C               	addwfc	(btemp+11)^0,f,c
 14375  012CB4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14376  012CBA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14377  012CC0                     	if	0	;tblptru may be non-zero
 14378  012CC0                     	endif
 14379  012CC0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14380  012CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 14381  012CC2  6EF8               	movwf	tblptru,c
 14382  012CC4                     	endif
 14383                           
 14384                           ;stkvar	_c @ sp[(-32)+31]
 14385  012CC4  0008               	tblrd		*
 14386  012CC6  0EFF               	movlw	-1
 14387  012CC8  006F FFD7 FFE3     	movff	tablat,plusw1
 14388  012CCE  0EBF               	movlw	191
 14389  012CD0  6E0B               	movwf	(btemp+10)^0,c
 14390  012CD2  0EFF               	movlw	255
 14391  012CD4  6E0C               	movwf	(btemp+11)^0,c
 14392                           
 14393                           ;stkvar	_fmt @ sp[(-32)+-4]
 14394  012CD6  0EDC               	movlw	-36
 14395  012CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14396  012CDE  0EDD               	movlw	-35
 14397  012CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14398  012CE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14399  012CEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14400  012CF2                     	if	0	;tblptru may be non-zero
 14401  012CF2                     	endif
 14402  012CF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14403  012CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 14404  012CF4  6EF8               	movwf	tblptru,c
 14405  012CF6                     	endif
 14406  012CF6  0008               	tblrd		*
 14407  012CF8  50F5               	movf	tablat,w,c
 14408  012CFA  6E09               	movwf	(btemp+8)^0,c
 14409  012CFC  6A0A               	clrf	(btemp+9)^0,c
 14410  012CFE  500B               	movf	(btemp+10)^0,w,c
 14411  012D00  2609               	addwf	(btemp+8)^0,f,c
 14412  012D02  500C               	movf	(btemp+11)^0,w,c
 14413  012D04  220A               	addwfc	(btemp+9)^0,f,c
 14414  012D06  500A               	movf	(btemp+9)^0,w,c
 14415  012D08  E106               	bnz	u12610
 14416  012D0A  0E1A               	movlw	26
 14417  012D0C  5C09               	subwf	(btemp+8)^0,w,c
 14418  012D0E  B0D8               	btfsc	status,0,c
 14419  012D10  D002               	goto	u12610
 14420  012D12  0E01               	movlw	1
 14421  012D14  D001               	goto	u12620
 14422  012D16                     u12610:
 14423  012D16  0E00               	movlw	0
 14424  012D18                     u12620:
 14425  012D18  6E0B               	movwf	(btemp+10)^0,c
 14426  012D1A  6A0C               	clrf	(btemp+11)^0,c
 14427                           
 14428                           ;stkvar	_vfpfcnvrt$5919 @ sp[(-32)+2]
 14429  012D1C  0EE2               	movlw	-30
 14430  012D1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14431  012D24  0EE3               	movlw	-29
 14432  012D26  0060  F033  FFE3   	movff	btemp+11,plusw1
 14433                           
 14434                           ;stkvar	_vfpfcnvrt$5919 @ sp[(-32)+2]
 14435  012D2C  0EE2               	movlw	-30
 14436  012D2E  006F FF8C  F001    	movff	plusw1,btemp
 14437  012D34  0EE3               	movlw	-29
 14438  012D36  50E3               	movf	plusw1,w,c
 14439  012D38  1001               	iorwf	btemp^0,w,c
 14440                           
 14441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14442                           ;stkvar	_ap @ sp[(-32)+-6]
 14443                           
 14444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 14445                           
 14446                           ;stkvar	_f @ sp[(-32)+22]
 14447                           
 14448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 14449                           ;stkvar	_ap @ sp[(-32)+-6]
 14450  012D3A  0EDA               	movlw	-38
 14451  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14452  012D42  0EDB               	movlw	-37
 14453  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 14454  012D4A  0E04               	movlw	4
 14455  012D4C  5EDE               	subwf	postinc2,f,c
 14456  012D4E  0E00               	movlw	0
 14457  012D50  5ADD               	subwfb	postdec2,f,c
 14458  012D52  006F FF78  F00B    	movff	postinc2,btemp+10
 14459  012D58  006F FF74  F00C    	movff	postdec2,btemp+11
 14460  012D5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14461  012D64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14462  012D6A  006F FF78  F009    	movff	postinc2,btemp+8
 14463  012D70  006F FF78  F00A    	movff	postinc2,btemp+9
 14464  012D76  006F FF78  F00B    	movff	postinc2,btemp+10
 14465  012D7C  006F FF78  F00C    	movff	postinc2,btemp+11
 14466                           
 14467                           ;stkvar	_f @ sp[(-32)+22]
 14468  012D82  0EF6               	movlw	-10
 14469  012D84  0060  F027  FFE3   	movff	btemp+8,plusw1
 14470  012D8A  0EF7               	movlw	-9
 14471  012D8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14472  012D92  0EF8               	movlw	-8
 14473  012D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14474  012D9A  0EF9               	movlw	-7
 14475  012D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14476                           
 14477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 14478                           ;stkvar	_fmt @ sp[(-32)+-4]
 14479  012DA2  0EDC               	movlw	-36
 14480  012DA4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14481  012DAA  0EDD               	movlw	-35
 14482  012DAC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14483  012DB2  0E02               	movlw	2
 14484  012DB4  26DE               	addwf	postinc2,f,c
 14485  012DB6  0E00               	movlw	0
 14486  012DB8  22DD               	addwfc	postdec2,f,c
 14487  012DBA  D736               	goto	l13135
 14488  012DBC                     l13159:
 14489                           
 14490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 14491                           ;stkvar	_fmt @ sp[(-32)+-4]
 14492  012DBC  0EDC               	movlw	-36
 14493  012DBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14494  012DC4  0EDD               	movlw	-35
 14495  012DC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14496  012DCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14497  012DD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14498  012DD8                     	if	0	;tblptru may be non-zero
 14499  012DD8                     	endif
 14500  012DD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14501  012DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 14502  012DDA  6EF8               	movwf	tblptru,c
 14503  012DDC                     	endif
 14504  012DDC  0008               	tblrd		*
 14505  012DDE  50F5               	movf	tablat,w,c
 14506  012DE0  0A73               	xorlw	115
 14507  012DE2  A4D8               	btfss	status,2,c
 14508  012DE4  D042               	goto	l13169
 14509                           
 14510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 14511                           ;stkvar	_fmt @ sp[(-32)+-4]
 14512  012DE6  0EDC               	movlw	-36
 14513  012DE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14514  012DEE  0EDD               	movlw	-35
 14515  012DF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14516  012DF6  2ADE               	incf	postinc2,f,c
 14517  012DF8  0E00               	movlw	0
 14518  012DFA  22DD               	addwfc	postdec2,f,c
 14519                           
 14520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 14521                           ;stkvar	_ap @ sp[(-32)+-6]
 14522  012DFC  0EDA               	movlw	-38
 14523  012DFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14524  012E04  0EDB               	movlw	-37
 14525  012E06  006F FF8F FFDA     	movff	plusw1,fsr2h
 14526  012E0C  0E02               	movlw	2
 14527  012E0E  5EDE               	subwf	postinc2,f,c
 14528  012E10  0E00               	movlw	0
 14529  012E12  5ADD               	subwfb	postdec2,f,c
 14530  012E14  006F FF78  F00B    	movff	postinc2,btemp+10
 14531  012E1A  006F FF74  F00C    	movff	postdec2,btemp+11
 14532  012E20  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14533  012E26  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14534  012E2C  006F FF78  F00B    	movff	postinc2,btemp+10
 14535  012E32  006F FF74  F00C    	movff	postdec2,btemp+11
 14536                           
 14537                           ;stkvar	_cp @ sp[(-32)+29]
 14538  012E38  0EFE               	movlw	-2
 14539  012E3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14540  012E40  0EFD               	movlw	-3
 14541  012E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14542                           
 14543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 14544                           ;stkvar	_cp @ sp[(-32)+29]
 14545  012E48  0EFD               	movlw	-3
 14546  012E4A  006F FF8F FFE6     	movff	plusw1,postinc1
 14547  012E50  006F FF8F FFE6     	movff	plusw1,postinc1
 14548                           
 14549                           ;stkvar	_fp @ sp[(-34)+-2]
 14550  012E56  0EDC               	movlw	-36
 14551  012E58  006F FF8F FFE6     	movff	plusw1,postinc1
 14552  012E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14553  012E64  EC3F  F0BA         	call	_stoa	;wreg free
 14554  012E68  D2AF               	goto	l2483
 14555  012E6A                     l13169:
 14556                           
 14557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 14558                           ;stkvar	_fmt @ sp[(-32)+-4]
 14559  012E6A  0EDC               	movlw	-36
 14560  012E6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14561  012E72  0EDD               	movlw	-35
 14562  012E74  006F FF8F FFDA     	movff	plusw1,fsr2h
 14563  012E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14564  012E80  006F FF77 FFF7     	movff	postdec2,tblptrh
 14565  012E86                     	if	0	;tblptru may be non-zero
 14566  012E86                     	endif
 14567  012E86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14568  012E86  0E00               	movlw	low (__mediumconst shr (0+16))
 14569  012E88  6EF8               	movwf	tblptru,c
 14570  012E8A                     	endif
 14571  012E8A  0008               	tblrd		*
 14572  012E8C  50F5               	movf	tablat,w,c
 14573  012E8E  0A75               	xorlw	117
 14574  012E90  A4D8               	btfss	status,2,c
 14575  012E92  D07C               	goto	l13179
 14576                           
 14577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 14578                           ;stkvar	_fmt @ sp[(-32)+-4]
 14579  012E94  0EDC               	movlw	-36
 14580  012E96  006F FF8F FFD9     	movff	plusw1,fsr2l
 14581  012E9C  0EDD               	movlw	-35
 14582  012E9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14583  012EA4  2ADE               	incf	postinc2,f,c
 14584  012EA6  0E00               	movlw	0
 14585  012EA8  22DD               	addwfc	postdec2,f,c
 14586                           
 14587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14588                           ;stkvar	_ap @ sp[(-32)+-6]
 14589  012EAA  0EDA               	movlw	-38
 14590  012EAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14591  012EB2  0EDB               	movlw	-37
 14592  012EB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14593  012EBA  0E02               	movlw	2
 14594  012EBC  5EDE               	subwf	postinc2,f,c
 14595  012EBE  0E00               	movlw	0
 14596  012EC0  5ADD               	subwfb	postdec2,f,c
 14597  012EC2  006F FF78  F00B    	movff	postinc2,btemp+10
 14598  012EC8  006F FF74  F00C    	movff	postdec2,btemp+11
 14599  012ECE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14600  012ED4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14601  012EDA  006F FF78  F00B    	movff	postinc2,btemp+10
 14602  012EE0  006F FF74  F00C    	movff	postdec2,btemp+11
 14603  012EE6  500B               	movf	(btemp+10)^0,w,c
 14604  012EE8  6E11               	movwf	(btemp+16)^0,c
 14605  012EEA  500C               	movf	(btemp+11)^0,w,c
 14606  012EEC  6E12               	movwf	(btemp+17)^0,c
 14607  012EEE  6A13               	clrf	(btemp+18)^0,c
 14608  012EF0  6A14               	clrf	(btemp+19)^0,c
 14609  012EF2  6A15               	clrf	(btemp+20)^0,c
 14610  012EF4  6A16               	clrf	(btemp+21)^0,c
 14611  012EF6  6A17               	clrf	(btemp+22)^0,c
 14612  012EF8  6A18               	clrf	(btemp+23)^0,c
 14613                           
 14614                           ;stkvar	_llu @ sp[(-32)+6]
 14615  012EFA  0EE6               	movlw	-26
 14616  012EFC  0060  F047  FFE3   	movff	btemp+16,plusw1
 14617  012F02  0EE7               	movlw	-25
 14618  012F04  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14619  012F0A  0EE8               	movlw	-24
 14620  012F0C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14621  012F12  0EE9               	movlw	-23
 14622  012F14  0060  F053  FFE3   	movff	btemp+19,plusw1
 14623  012F1A  0EEA               	movlw	-22
 14624  012F1C  0060  F057  FFE3   	movff	btemp+20,plusw1
 14625  012F22  0EEB               	movlw	-21
 14626  012F24  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14627  012F2A  0EEC               	movlw	-20
 14628  012F2C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14629  012F32  0EED               	movlw	-19
 14630  012F34  0060  F063  FFE3   	movff	btemp+23,plusw1
 14631                           
 14632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 14633                           ;stkvar	_llu @ sp[(-32)+6]
 14634  012F3A  50E1               	movf	fsr1l,w,c
 14635  012F3C  0FE6               	addlw	-26
 14636  012F3E  6ED9               	movwf	fsr2l,c
 14637  012F40  50E2               	movf	fsr1h,w,c
 14638  012F42  6EDA               	movwf	fsr2h,c
 14639  012F44  0EFF               	movlw	255
 14640  012F46  22DA               	addwfc	fsr2h,f,c
 14641  012F48  006F FF7B FFE6     	movff	postinc2,postinc1
 14642  012F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 14643  012F54  006F FF7B FFE6     	movff	postinc2,postinc1
 14644  012F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 14645  012F60  006F FF7B FFE6     	movff	postinc2,postinc1
 14646  012F66  006F FF7B FFE6     	movff	postinc2,postinc1
 14647  012F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 14648  012F72  006F FF7B FFE6     	movff	postinc2,postinc1
 14649                           
 14650                           ;stkvar	_fp @ sp[(-40)+-2]
 14651  012F78  0ED6               	movlw	-42
 14652  012F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 14653  012F80  006F FF8F FFE6     	movff	plusw1,postinc1
 14654  012F86  EC27  F0B4         	call	_utoa	;wreg free
 14655  012F8A  D21E               	goto	l2483
 14656  012F8C                     l13179:
 14657                           
 14658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 14659  012F8C  0E02               	movlw	2
 14660  012F8E  6EE6               	movwf	postinc1,c
 14661  012F90  0E00               	movlw	0
 14662  012F92  6EE6               	movwf	postinc1,c
 14663  012F94  0EF2               	movlw	low STR_98
 14664  012F96  6EE6               	movwf	postinc1,c
 14665  012F98  0EFF               	movlw	high STR_98
 14666  012F9A  6EE6               	movwf	postinc1,c
 14667                           
 14668                           ;stkvar	_fmt @ sp[(-36)+-4]
 14669  012F9C  0ED8               	movlw	-40
 14670  012F9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14671  012FA4  0ED9               	movlw	-39
 14672  012FA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14673  012FAC  006F FF78  F00B    	movff	postinc2,btemp+10
 14674  012FB2  006F FF74  F00C    	movff	postdec2,btemp+11
 14675  012FB8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14676  012FBE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14677  012FC4  ECA8  F0C1         	call	_strncmp	;wreg free
 14678  012FC8  5001               	movf	btemp^0,w,c
 14679  012FCA  1002               	iorwf	(btemp+1)^0,w,c
 14680  012FCC  A4D8               	btfss	status,2,c
 14681  012FCE  D039               	goto	l13189
 14682                           
 14683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 14684                           ;stkvar	_fmt @ sp[(-32)+-4]
 14685  012FD0  0EDC               	movlw	-36
 14686  012FD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14687  012FD8  0EDD               	movlw	-35
 14688  012FDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14689  012FE0  0E02               	movlw	2
 14690  012FE2  26DE               	addwf	postinc2,f,c
 14691  012FE4  0E00               	movlw	0
 14692  012FE6  22DD               	addwfc	postdec2,f,c
 14693                           
 14694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14695                           ;stkvar	_ap @ sp[(-32)+-6]
 14696  012FE8  0EDA               	movlw	-38
 14697  012FEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14698  012FF0  0EDB               	movlw	-37
 14699  012FF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14700  012FF8  0E04               	movlw	4
 14701  012FFA  5EDE               	subwf	postinc2,f,c
 14702  012FFC  0E00               	movlw	0
 14703  012FFE  5ADD               	subwfb	postdec2,f,c
 14704  013000  006F FF78  F00B    	movff	postinc2,btemp+10
 14705  013006  006F FF74  F00C    	movff	postdec2,btemp+11
 14706  01300C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14707  013012  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14708  013018  006F FF78  F009    	movff	postinc2,btemp+8
 14709  01301E  006F FF78  F00A    	movff	postinc2,btemp+9
 14710  013024  006F FF78  F00B    	movff	postinc2,btemp+10
 14711  01302A  006F FF78  F00C    	movff	postinc2,btemp+11
 14712  013030  5009               	movf	(btemp+8)^0,w,c
 14713  013032  6E11               	movwf	(btemp+16)^0,c
 14714  013034  500A               	movf	(btemp+9)^0,w,c
 14715  013036  6E12               	movwf	(btemp+17)^0,c
 14716  013038  500B               	movf	(btemp+10)^0,w,c
 14717  01303A  6E13               	movwf	(btemp+18)^0,c
 14718  01303C  500C               	movf	(btemp+11)^0,w,c
 14719  01303E  6E14               	movwf	(btemp+19)^0,c
 14720  013040  D758               	goto	L13
 14721  013042                     l13189:
 14722                           
 14723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14724                           ;stkvar	_fmt @ sp[(-32)+-4]
 14725  013042  0EDC               	movlw	-36
 14726  013044  006F FF8F FFD9     	movff	plusw1,fsr2l
 14727  01304A  0EDD               	movlw	-35
 14728  01304C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14729  013052  006F FF7B FFF6     	movff	postinc2,tblptrl
 14730  013058  006F FF77 FFF7     	movff	postdec2,tblptrh
 14731  01305E                     	if	0	;tblptru may be non-zero
 14732  01305E                     	endif
 14733  01305E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14734  01305E  0E00               	movlw	low (__mediumconst shr (0+16))
 14735  013060  6EF8               	movwf	tblptru,c
 14736  013062                     	endif
 14737  013062  0008               	tblrd		*
 14738  013064  50F5               	movf	tablat,w,c
 14739  013066  0A78               	xorlw	120
 14740  013068  B4D8               	btfsc	status,2,c
 14741  01306A  D015               	goto	u12680
 14742                           
 14743                           ;stkvar	_fmt @ sp[(-32)+-4]
 14744  01306C  0EDC               	movlw	-36
 14745  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14746  013074  0EDD               	movlw	-35
 14747  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 14748  01307C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14749  013082  006F FF77 FFF7     	movff	postdec2,tblptrh
 14750  013088                     	if	0	;tblptru may be non-zero
 14751  013088                     	endif
 14752  013088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14753  013088  0E00               	movlw	low (__mediumconst shr (0+16))
 14754  01308A  6EF8               	movwf	tblptru,c
 14755  01308C                     	endif
 14756  01308C  0008               	tblrd		*
 14757  01308E  50F5               	movf	tablat,w,c
 14758  013090  0A58               	xorlw	88
 14759  013092  A4D8               	btfss	status,2,c
 14760  013094  D094               	goto	l13203
 14761  013096                     u12680:
 14762                           
 14763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14764                           ;stkvar	_fmt @ sp[(-32)+-4]
 14765  013096  0EDC               	movlw	-36
 14766  013098  006F FF8F FFD9     	movff	plusw1,fsr2l
 14767  01309E  0EDD               	movlw	-35
 14768  0130A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14769  0130A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14770  0130AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14771  0130B2                     	if	0	;tblptru may be non-zero
 14772  0130B2                     	endif
 14773  0130B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14774  0130B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14775  0130B4  6EF8               	movwf	tblptru,c
 14776  0130B6                     	endif
 14777                           
 14778                           ;stkvar	_c @ sp[(-32)+31]
 14779  0130B6  0008               	tblrd		*
 14780  0130B8  0EFF               	movlw	-1
 14781  0130BA  006F FFD7 FFE3     	movff	tablat,plusw1
 14782                           
 14783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14784                           ;stkvar	_fmt @ sp[(-32)+-4]
 14785  0130C0  0EDC               	movlw	-36
 14786  0130C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14787  0130C8  0EDD               	movlw	-35
 14788  0130CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14789  0130D0  2ADE               	incf	postinc2,f,c
 14790  0130D2  0E00               	movlw	0
 14791  0130D4  22DD               	addwfc	postdec2,f,c
 14792                           
 14793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14794                           ;stkvar	_ap @ sp[(-32)+-6]
 14795  0130D6  0EDA               	movlw	-38
 14796  0130D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14797  0130DE  0EDB               	movlw	-37
 14798  0130E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14799  0130E6  0E02               	movlw	2
 14800  0130E8  5EDE               	subwf	postinc2,f,c
 14801  0130EA  0E00               	movlw	0
 14802  0130EC  5ADD               	subwfb	postdec2,f,c
 14803  0130EE  006F FF78  F00B    	movff	postinc2,btemp+10
 14804  0130F4  006F FF74  F00C    	movff	postdec2,btemp+11
 14805  0130FA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14806  013100  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14807  013106  006F FF78  F00B    	movff	postinc2,btemp+10
 14808  01310C  006F FF74  F00C    	movff	postdec2,btemp+11
 14809  013112  500B               	movf	(btemp+10)^0,w,c
 14810  013114  6E11               	movwf	(btemp+16)^0,c
 14811  013116  500C               	movf	(btemp+11)^0,w,c
 14812  013118  6E12               	movwf	(btemp+17)^0,c
 14813  01311A  6A13               	clrf	(btemp+18)^0,c
 14814  01311C  6A14               	clrf	(btemp+19)^0,c
 14815  01311E  6A15               	clrf	(btemp+20)^0,c
 14816  013120  6A16               	clrf	(btemp+21)^0,c
 14817  013122  6A17               	clrf	(btemp+22)^0,c
 14818  013124  6A18               	clrf	(btemp+23)^0,c
 14819                           
 14820                           ;stkvar	_llu @ sp[(-32)+6]
 14821  013126  0EE6               	movlw	-26
 14822  013128  0060  F047  FFE3   	movff	btemp+16,plusw1
 14823  01312E  0EE7               	movlw	-25
 14824  013130  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14825  013136  0EE8               	movlw	-24
 14826  013138  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14827  01313E  0EE9               	movlw	-23
 14828  013140  0060  F053  FFE3   	movff	btemp+19,plusw1
 14829  013146  0EEA               	movlw	-22
 14830  013148  0060  F057  FFE3   	movff	btemp+20,plusw1
 14831  01314E  0EEB               	movlw	-21
 14832  013150  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14833  013156  0EEC               	movlw	-20
 14834  013158  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14835  01315E  0EED               	movlw	-19
 14836  013160  0060  F063  FFE3   	movff	btemp+23,plusw1
 14837                           
 14838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 14839                           ;stkvar	_c @ sp[(-32)+31]
 14840  013166  0EFF               	movlw	-1
 14841  013168  50E3               	movf	plusw1,w,c
 14842  01316A  6EE6               	movwf	postinc1,c
 14843                           
 14844                           ;stkvar	_llu @ sp[(-33)+6]
 14845  01316C  50E1               	movf	fsr1l,w,c
 14846  01316E  0FE5               	addlw	-27
 14847  013170  6ED9               	movwf	fsr2l,c
 14848  013172  50E2               	movf	fsr1h,w,c
 14849  013174  6EDA               	movwf	fsr2h,c
 14850  013176  0EFF               	movlw	255
 14851  013178  22DA               	addwfc	fsr2h,f,c
 14852  01317A  006F FF7B FFE6     	movff	postinc2,postinc1
 14853  013180  006F FF7B FFE6     	movff	postinc2,postinc1
 14854  013186  006F FF7B FFE6     	movff	postinc2,postinc1
 14855  01318C  006F FF7B FFE6     	movff	postinc2,postinc1
 14856  013192  006F FF7B FFE6     	movff	postinc2,postinc1
 14857  013198  006F FF7B FFE6     	movff	postinc2,postinc1
 14858  01319E  006F FF7B FFE6     	movff	postinc2,postinc1
 14859  0131A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14860                           
 14861                           ;stkvar	_fp @ sp[(-41)+-2]
 14862  0131AA  0ED5               	movlw	-43
 14863  0131AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14864  0131B2  006F FF8F FFE6     	movff	plusw1,postinc1
 14865  0131B8  EC94  F0B0         	call	_xtoa	;wreg free
 14866  0131BC  D105               	goto	l2483
 14867  0131BE                     l13203:
 14868                           
 14869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 14870  0131BE  0E02               	movlw	2
 14871  0131C0  6EE6               	movwf	postinc1,c
 14872  0131C2  0E00               	movlw	0
 14873  0131C4  6EE6               	movwf	postinc1,c
 14874  0131C6  0EF5               	movlw	low STR_103
 14875  0131C8  6EE6               	movwf	postinc1,c
 14876  0131CA  0EFF               	movlw	high STR_103
 14877  0131CC  6EE6               	movwf	postinc1,c
 14878                           
 14879                           ;stkvar	_fmt @ sp[(-36)+-4]
 14880  0131CE  0ED8               	movlw	-40
 14881  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14882  0131D6  0ED9               	movlw	-39
 14883  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14884  0131DE  006F FF78  F00B    	movff	postinc2,btemp+10
 14885  0131E4  006F FF74  F00C    	movff	postdec2,btemp+11
 14886  0131EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14887  0131F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14888  0131F6  ECA8  F0C1         	call	_strncmp	;wreg free
 14889  0131FA  5001               	movf	btemp^0,w,c
 14890  0131FC  1002               	iorwf	(btemp+1)^0,w,c
 14891  0131FE  B4D8               	btfsc	status,2,c
 14892  013200  D022               	goto	u12700
 14893  013202  0E02               	movlw	2
 14894  013204  6EE6               	movwf	postinc1,c
 14895  013206  0E00               	movlw	0
 14896  013208  6EE6               	movwf	postinc1,c
 14897  01320A  0EE6               	movlw	low STR_107
 14898  01320C  6EE6               	movwf	postinc1,c
 14899  01320E  0EFF               	movlw	high STR_107
 14900  013210  6EE6               	movwf	postinc1,c
 14901                           
 14902                           ;stkvar	_fmt @ sp[(-36)+-4]
 14903  013212  0ED8               	movlw	-40
 14904  013214  006F FF8F FFD9     	movff	plusw1,fsr2l
 14905  01321A  0ED9               	movlw	-39
 14906  01321C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14907  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 14908  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 14909  01322E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14910  013234  0060  F033  FFE6   	movff	btemp+11,postinc1
 14911  01323A  ECA8  F0C1         	call	_strncmp	;wreg free
 14912  01323E  5001               	movf	btemp^0,w,c
 14913  013240  1002               	iorwf	(btemp+1)^0,w,c
 14914  013242  A4D8               	btfss	status,2,c
 14915  013244  D058               	goto	l13217
 14916  013246                     u12700:
 14917                           
 14918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 14919                           ;stkvar	_fmt @ sp[(-32)+-4]
 14920  013246  0EDC               	movlw	-36
 14921  013248  006F FF8F FFD9     	movff	plusw1,fsr2l
 14922  01324E  0EDD               	movlw	-35
 14923  013250  006F FF8F FFDA     	movff	plusw1,fsr2h
 14924  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 14925  01325C  006F FF74  F00C    	movff	postdec2,btemp+11
 14926  013262  0E01               	movlw	1
 14927  013264  260B               	addwf	(btemp+10)^0,f,c
 14928  013266  0E00               	movlw	0
 14929  013268  220C               	addwfc	(btemp+11)^0,f,c
 14930  01326A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14931  013270  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14932  013276                     	if	0	;tblptru may be non-zero
 14933  013276                     	endif
 14934  013276                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14935  013276  0E00               	movlw	low (__mediumconst shr (0+16))
 14936  013278  6EF8               	movwf	tblptru,c
 14937  01327A                     	endif
 14938                           
 14939                           ;stkvar	_c @ sp[(-32)+31]
 14940  01327A  0008               	tblrd		*
 14941  01327C  0EFF               	movlw	-1
 14942  01327E  006F FFD7 FFE3     	movff	tablat,plusw1
 14943                           
 14944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 14945                           ;stkvar	_fmt @ sp[(-32)+-4]
 14946  013284  0EDC               	movlw	-36
 14947  013286  006F FF8F FFD9     	movff	plusw1,fsr2l
 14948  01328C  0EDD               	movlw	-35
 14949  01328E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14950  013294  0E02               	movlw	2
 14951  013296  26DE               	addwf	postinc2,f,c
 14952  013298  0E00               	movlw	0
 14953  01329A  22DD               	addwfc	postdec2,f,c
 14954                           
 14955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14956                           ;stkvar	_ap @ sp[(-32)+-6]
 14957  01329C  0EDA               	movlw	-38
 14958  01329E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14959  0132A4  0EDB               	movlw	-37
 14960  0132A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14961  0132AC  0E04               	movlw	4
 14962  0132AE  5EDE               	subwf	postinc2,f,c
 14963  0132B0  0E00               	movlw	0
 14964  0132B2  5ADD               	subwfb	postdec2,f,c
 14965  0132B4  006F FF78  F00B    	movff	postinc2,btemp+10
 14966  0132BA  006F FF74  F00C    	movff	postdec2,btemp+11
 14967  0132C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14968  0132C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14969  0132CC  006F FF78  F009    	movff	postinc2,btemp+8
 14970  0132D2  006F FF78  F00A    	movff	postinc2,btemp+9
 14971  0132D8  006F FF78  F00B    	movff	postinc2,btemp+10
 14972  0132DE  006F FF78  F00C    	movff	postinc2,btemp+11
 14973  0132E4  5009               	movf	(btemp+8)^0,w,c
 14974  0132E6  6E11               	movwf	(btemp+16)^0,c
 14975  0132E8  500A               	movf	(btemp+9)^0,w,c
 14976  0132EA  6E12               	movwf	(btemp+17)^0,c
 14977  0132EC  500B               	movf	(btemp+10)^0,w,c
 14978  0132EE  6E13               	movwf	(btemp+18)^0,c
 14979  0132F0  500C               	movf	(btemp+11)^0,w,c
 14980  0132F2  6E14               	movwf	(btemp+19)^0,c
 14981  0132F4  D714               	goto	L14
 14982  0132F6                     l13217:
 14983                           
 14984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14985                           ;stkvar	_fmt @ sp[(-32)+-4]
 14986  0132F6  0EDC               	movlw	-36
 14987  0132F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14988  0132FE  0EDD               	movlw	-35
 14989  013300  006F FF8F FFDA     	movff	plusw1,fsr2h
 14990  013306  006F FF7B FFF6     	movff	postinc2,tblptrl
 14991  01330C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14992  013312                     	if	0	;tblptru may be non-zero
 14993  013312                     	endif
 14994  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14995  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 14996  013314  6EF8               	movwf	tblptru,c
 14997  013316                     	endif
 14998  013316  0008               	tblrd		*
 14999  013318  50F5               	movf	tablat,w,c
 15000  01331A  0A25               	xorlw	37
 15001  01331C  A4D8               	btfss	status,2,c
 15002  01331E  D01A               	goto	l13227
 15003                           
 15004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 15005                           ;stkvar	_fmt @ sp[(-32)+-4]
 15006  013320  0EDC               	movlw	-36
 15007  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 15008  013328  0EDD               	movlw	-35
 15009  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15010  013330  2ADE               	incf	postinc2,f,c
 15011  013332  0E00               	movlw	0
 15012  013334  22DD               	addwfc	postdec2,f,c
 15013                           
 15014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 15015                           ;stkvar	_fp @ sp[(-32)+-2]
 15016  013336  0EDE               	movlw	-34
 15017  013338  006F FF8F FFE6     	movff	plusw1,postinc1
 15018  01333E  006F FF8F FFE6     	movff	plusw1,postinc1
 15019  013344  0E25               	movlw	37
 15020  013346  6EE6               	movwf	postinc1,c
 15021  013348  0E00               	movlw	0
 15022  01334A  6EE6               	movwf	postinc1,c
 15023  01334C  EC04  F0CF         	call	_fputc	;wreg free
 15024  013350                     l13223:
 15025                           
 15026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 15027  013350  0E01               	movlw	1
 15028  013352  D00C               	goto	L15
 15029  013354                     l13227:
 15030                           
 15031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 15032                           ;stkvar	_fmt @ sp[(-32)+-4]
 15033  013354  0EDC               	movlw	-36
 15034  013356  006F FF8F FFD9     	movff	plusw1,fsr2l
 15035  01335C  0EDD               	movlw	-35
 15036  01335E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15037  013364  2ADE               	incf	postinc2,f,c
 15038  013366  0E00               	movlw	0
 15039  013368  22DD               	addwfc	postdec2,f,c
 15040                           
 15041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 15042  01336A  0E00               	movlw	0
 15043  01336C                     L15:
 15044  01336C  6E01               	movwf	btemp^0,c
 15045  01336E  0E00               	movlw	0
 15046  013370  6E02               	movwf	(btemp+1)^0,c
 15047  013372  D02A               	goto	l2483
 15048  013374                     l13233:
 15049                           
 15050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 15051                           ;stkvar	_fp @ sp[(-32)+-2]
 15052  013374  0EDE               	movlw	-34
 15053  013376  006F FF8F FFE6     	movff	plusw1,postinc1
 15054  01337C  006F FF8F FFE6     	movff	plusw1,postinc1
 15055                           
 15056                           ;stkvar	_fmt @ sp[(-34)+-4]
 15057  013382  0EDA               	movlw	-38
 15058  013384  006F FF8F FFD9     	movff	plusw1,fsr2l
 15059  01338A  0EDB               	movlw	-37
 15060  01338C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15061  013392  006F FF7B FFF6     	movff	postinc2,tblptrl
 15062  013398  006F FF77 FFF7     	movff	postdec2,tblptrh
 15063  01339E                     	if	0	;tblptru may be non-zero
 15064  01339E                     	endif
 15065  01339E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15066  01339E  0E00               	movlw	low (__mediumconst shr (0+16))
 15067  0133A0  6EF8               	movwf	tblptru,c
 15068  0133A2                     	endif
 15069  0133A2  0008               	tblrd		*
 15070  0133A4  50F5               	movf	tablat,w,c
 15071  0133A6  6EE6               	movwf	postinc1,c
 15072  0133A8  0E00               	movlw	0
 15073  0133AA  6EE6               	movwf	postinc1,c
 15074  0133AC  EC04  F0CF         	call	_fputc	;wreg free
 15075                           
 15076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 15077                           ;stkvar	_fmt @ sp[(-32)+-4]
 15078  0133B0  0EDC               	movlw	-36
 15079  0133B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15080  0133B8  0EDD               	movlw	-35
 15081  0133BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15082  0133C0  2ADE               	incf	postinc2,f,c
 15083  0133C2  0E00               	movlw	0
 15084  0133C4  22DD               	addwfc	postdec2,f,c
 15085  0133C6  D7C4               	goto	l13223
 15086  0133C8                     l2483:
 15087                           
 15088                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 15089  0133C8  0EDA               	movlw	218
 15090  0133CA  26E1               	addwf	fsr1l,f,c
 15091  0133CC  0EFF               	movlw	255
 15092  0133CE  22E2               	addwfc	fsr1h,f,c
 15093  0133D0  0012               	return		;funcret
 15094  0133D2                     __end_of_vfpfcnvrt:
 15095                           	opt callstack 0
 15096                           
 15097 ;; *************** function _xtoa *****************
 15098 ;; Defined at:
 15099 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15100 ;; Parameters:    Size  Location     Type
 15101 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15102 ;;		 -> f(6), NULL(0), 
 15103 ;;  d               8  [STACK] unsigned long long 
 15104 ;;  x               1  [STACK] unsigned char 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;  n               8  [STACK] unsigned long long 
 15107 ;;  c               2  [STACK] int 
 15108 ;;  i               2  [STACK] int 
 15109 ;;  w               2  [STACK] int 
 15110 ;;  p               2  [STACK] int 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  2  [STACK] int 
 15113 ;; Registers used:
 15114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15124 ;;Total ram usage:        0 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; Hardware stack levels required when called:   20
 15127 ;; This function calls:
 15128 ;;		_isalpha
 15129 ;;		_isupper
 15130 ;;		_pad
 15131 ;;		_toupper
 15132 ;; This function is called by:
 15133 ;;		_vfpfcnvrt
 15134 ;; This function uses a reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text56
 15138  016128                     __ptext56:
 15139                           	opt callstack 0
 15140  016128                     _xtoa:
 15141                           	opt callstack 0
 15142                           
 15143                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15144  016128  0E14               	movlw	20
 15145  01612A  26E1               	addwf	fsr1l,f,c
 15146  01612C  0E00               	movlw	0
 15147  01612E  22E2               	addwfc	fsr1h,f,c
 15148                           
 15149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 15150                           
 15151                           ;incstack = 0
 15152 ;; hardware stack exceeded
 15153  016130  AE3D               	btfss	(_prec+1)^0,7,c
 15154                           
 15155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 15156  016132  923E               	bcf	_flags^0,1,c
 15157                           
 15158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 15159  016134  BE3D               	btfsc	(_prec+1)^0,7,c
 15160  016136  D005               	goto	u12240
 15161  016138  503D               	movf	(_prec+1)^0,w,c
 15162  01613A  E110               	bnz	l12953
 15163  01613C  043C               	decf	_prec^0,w,c
 15164  01613E  B0D8               	btfsc	status,0,c
 15165  016140  D00D               	goto	l12953
 15166  016142                     u12240:
 15167  016142  0E01               	movlw	1
 15168  016144  6E0B               	movwf	(btemp+10)^0,c
 15169  016146  0E00               	movlw	0
 15170  016148  6E0C               	movwf	(btemp+11)^0,c
 15171                           
 15172                           ;stkvar	_p @ sp[(-20)+18]
 15173  01614A  0EFE               	movlw	-2
 15174  01614C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15175  016152  0EFF               	movlw	-1
 15176  016154  0060  F033  FFE3   	movff	btemp+11,plusw1
 15177  01615A  D008               	goto	l2433
 15178  01615C                     l12953:
 15179                           
 15180                           ;stkvar	_p @ sp[(-20)+18]
 15181  01615C  0EFE               	movlw	-2
 15182  01615E  0060  F0F3  FFE3   	movff	_prec,plusw1
 15183  016164  0EFF               	movlw	-1
 15184  016166  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15185  01616C                     l2433:
 15186                           
 15187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 15188                           ;stkvar	_w @ sp[(-20)+16]
 15189  01616C  0EFC               	movlw	-4
 15190  01616E  0060  F0EB  FFE3   	movff	_width,plusw1
 15191  016174  0EFD               	movlw	-3
 15192  016176  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15193                           
 15194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 15195  01617C  A83E               	btfss	_flags^0,4,c
 15196  01617E  D00B               	goto	l12959
 15197                           
 15198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 15199                           ;stkvar	_w @ sp[(-20)+16]
 15200  016180  50E1               	movf	fsr1l,w,c
 15201  016182  0FFC               	addlw	-4
 15202  016184  6ED9               	movwf	fsr2l,c
 15203  016186  50E2               	movf	fsr1h,w,c
 15204  016188  6EDA               	movwf	fsr2h,c
 15205  01618A  0EFF               	movlw	255
 15206  01618C  22DA               	addwfc	fsr2h,f,c
 15207  01618E  0EFE               	movlw	254
 15208  016190  26DE               	addwf	postinc2,f,c
 15209  016192  0EFF               	movlw	255
 15210  016194  22DD               	addwfc	postdec2,f,c
 15211  016196                     l12959:
 15212                           
 15213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 15214                           ;stkvar	_d @ sp[(-20)+-10]
 15215  016196  0EE2               	movlw	226
 15216  016198  24E1               	addwf	fsr1l,w,c
 15217  01619A  6ED9               	movwf	fsr2l,c
 15218  01619C  0EFF               	movlw	255
 15219  01619E  20E2               	addwfc	fsr1h,w,c
 15220  0161A0  6EDA               	movwf	fsr2h,c
 15221                           
 15222                           ;stkvar	_n @ sp[(-20)+4]
 15223  0161A2  0E08               	movlw	8
 15224  0161A4  6E01               	movwf	btemp^0,c
 15225  0161A6  0EF0               	movlw	-16
 15226  0161A8                     us1226999:
 15227  0161A8  006F FF7B FFE3     	movff	postinc2,plusw1
 15228  0161AE  28E8               	incf	wreg,w,c
 15229  0161B0  2E01               	decfsz	btemp^0,f,c
 15230  0161B2  D7FA               	bra	us1226999
 15231                           
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 15233  0161B4  0E4F               	movlw	79
 15234  0161B6  6E0B               	movwf	(btemp+10)^0,c
 15235  0161B8  0E00               	movlw	0
 15236  0161BA  6E0C               	movwf	(btemp+11)^0,c
 15237                           
 15238                           ;stkvar	_i @ sp[(-20)+14]
 15239  0161BC  0EFA               	movlw	-6
 15240  0161BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15241  0161C4  0EFB               	movlw	-5
 15242  0161C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15243                           
 15244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 15245  0161CC  0102               	movlb	2	; () banked
 15246  0161CE  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15247                           
 15248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15249  0161D0  D0EE               	goto	l12997
 15250  0161D2                     l12965:
 15251                           
 15252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 15253                           ;stkvar	_i @ sp[(-20)+14]
 15254  0161D2  50E1               	movf	fsr1l,w,c
 15255  0161D4  0FFA               	addlw	-6
 15256  0161D6  6ED9               	movwf	fsr2l,c
 15257  0161D8  50E2               	movf	fsr1h,w,c
 15258  0161DA  6EDA               	movwf	fsr2h,c
 15259  0161DC  0EFF               	movlw	255
 15260  0161DE  22DA               	addwfc	fsr2h,f,c
 15261  0161E0  06DE               	decf	postinc2,f,c
 15262  0161E2  0E00               	movlw	0
 15263  0161E4  5ADD               	subwfb	postdec2,f,c
 15264                           
 15265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 15266                           ;stkvar	_n @ sp[(-20)+4]
 15267  0161E6  0EF0               	movlw	-16
 15268  0161E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 15269  0161EE  0EF1               	movlw	-15
 15270  0161F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15271  0161F6  0E0F               	movlw	15
 15272  0161F8  160B               	andwf	(btemp+10)^0,f,c
 15273  0161FA  0E00               	movlw	0
 15274  0161FC  160C               	andwf	(btemp+11)^0,f,c
 15275                           
 15276                           ;stkvar	_c @ sp[(-20)+12]
 15277  0161FE  0EF8               	movlw	-8
 15278  016200  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15279  016206  0EF9               	movlw	-7
 15280  016208  0060  F033  FFE3   	movff	btemp+11,plusw1
 15281                           
 15282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 15283                           ;stkvar	_c @ sp[(-20)+12]
 15284  01620E  0EF9               	movlw	-7
 15285  016210  BEE3               	btfsc	plusw1,7,c
 15286  016212  D00F               	goto	l12973
 15287  016214  0EF9               	movlw	-7
 15288  016216  50E3               	movf	plusw1,w,c
 15289  016218  E108               	bnz	u12270
 15290  01621A  0EF8               	movlw	-8
 15291  01621C  006F FF8C  F001    	movff	plusw1,btemp
 15292  016222  0E0A               	movlw	10
 15293  016224  5E01               	subwf	btemp^0,f,c
 15294  016226  A0D8               	btfss	status,0,c
 15295  016228  D004               	goto	l12973
 15296  01622A                     u12270:
 15297                           
 15298                           ;stkvar	_c @ sp[(-20)+12]
 15299  01622A  0EF8               	movlw	-8
 15300  01622C  50E3               	movf	plusw1,w,c
 15301  01622E  0F57               	addlw	87
 15302  016230  D003               	goto	L16
 15303  016232                     l12973:
 15304                           
 15305                           ;stkvar	_c @ sp[(-20)+12]
 15306  016232  0EF8               	movlw	-8
 15307  016234  50E3               	movf	plusw1,w,c
 15308  016236  0F30               	addlw	48
 15309  016238                     L16:
 15310  016238  6E0B               	movwf	(btemp+10)^0,c
 15311  01623A  0EF9               	movlw	-7
 15312  01623C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15313  016242  0E00               	movlw	0
 15314  016244  220C               	addwfc	(btemp+11)^0,f,c
 15315                           
 15316                           ;stkvar	_c @ sp[(-20)+12]
 15317  016246  0EF8               	movlw	-8
 15318  016248  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15319  01624E  0EF9               	movlw	-7
 15320  016250  0060  F033  FFE3   	movff	btemp+11,plusw1
 15321  016256  0EBF               	movlw	191
 15322  016258  6E0B               	movwf	(btemp+10)^0,c
 15323  01625A  0EFF               	movlw	255
 15324  01625C  6E0C               	movwf	(btemp+11)^0,c
 15325                           
 15326                           ;stkvar	_x @ sp[(-20)+-11]
 15327  01625E  0EE1               	movlw	-31
 15328  016260  50E3               	movf	plusw1,w,c
 15329  016262  6E09               	movwf	(btemp+8)^0,c
 15330  016264  6A0A               	clrf	(btemp+9)^0,c
 15331  016266  500B               	movf	(btemp+10)^0,w,c
 15332  016268  2609               	addwf	(btemp+8)^0,f,c
 15333  01626A  500C               	movf	(btemp+11)^0,w,c
 15334  01626C  220A               	addwfc	(btemp+9)^0,f,c
 15335  01626E  500A               	movf	(btemp+9)^0,w,c
 15336  016270  E106               	bnz	u12280
 15337  016272  0E1A               	movlw	26
 15338  016274  5C09               	subwf	(btemp+8)^0,w,c
 15339  016276  B0D8               	btfsc	status,0,c
 15340  016278  D002               	goto	u12280
 15341  01627A  0E01               	movlw	1
 15342  01627C  D001               	goto	u12290
 15343  01627E                     u12280:
 15344  01627E  0E00               	movlw	0
 15345  016280                     u12290:
 15346  016280  6E0B               	movwf	(btemp+10)^0,c
 15347  016282  6A0C               	clrf	(btemp+11)^0,c
 15348                           
 15349                           ;stkvar	_xtoa$5892 @ sp[(-20)+2]
 15350  016284  0EEE               	movlw	-18
 15351  016286  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15352  01628C  0EEF               	movlw	-17
 15353  01628E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15354                           
 15355                           ;stkvar	_xtoa$5892 @ sp[(-20)+2]
 15356  016294  0EEE               	movlw	-18
 15357  016296  006F FF8C  F001    	movff	plusw1,btemp
 15358  01629C  0EEF               	movlw	-17
 15359  01629E  50E3               	movf	plusw1,w,c
 15360  0162A0  1001               	iorwf	btemp^0,w,c
 15361  0162A2  B4D8               	btfsc	status,2,c
 15362  0162A4  D041               	goto	l12989
 15363  0162A6  0E9F               	movlw	159
 15364  0162A8  6E0B               	movwf	(btemp+10)^0,c
 15365  0162AA  0EFF               	movlw	255
 15366  0162AC  6E0C               	movwf	(btemp+11)^0,c
 15367                           
 15368                           ;stkvar	_c @ sp[(-20)+12]
 15369  0162AE  0EF8               	movlw	-8
 15370  0162B0  006F FF8C  F009    	movff	plusw1,btemp+8
 15371  0162B6  0EF9               	movlw	-7
 15372  0162B8  006F FF8C  F00A    	movff	plusw1,btemp+9
 15373  0162BE  0E20               	movlw	32
 15374  0162C0  1209               	iorwf	(btemp+8)^0,f,c
 15375  0162C2  0E00               	movlw	0
 15376  0162C4  120A               	iorwf	(btemp+9)^0,f,c
 15377  0162C6  500B               	movf	(btemp+10)^0,w,c
 15378  0162C8  2609               	addwf	(btemp+8)^0,f,c
 15379  0162CA  500C               	movf	(btemp+11)^0,w,c
 15380  0162CC  220A               	addwfc	(btemp+9)^0,f,c
 15381  0162CE  500A               	movf	(btemp+9)^0,w,c
 15382  0162D0  E106               	bnz	u12310
 15383  0162D2  0E1A               	movlw	26
 15384  0162D4  5C09               	subwf	(btemp+8)^0,w,c
 15385  0162D6  B0D8               	btfsc	status,0,c
 15386  0162D8  D002               	goto	u12310
 15387  0162DA  0E01               	movlw	1
 15388  0162DC  D001               	goto	u12320
 15389  0162DE                     u12310:
 15390  0162DE  0E00               	movlw	0
 15391  0162E0                     u12320:
 15392  0162E0  6E0B               	movwf	(btemp+10)^0,c
 15393  0162E2  6A0C               	clrf	(btemp+11)^0,c
 15394                           
 15395                           ;stkvar	_xtoa$5893 @ sp[(-20)+0]
 15396  0162E4  0EEC               	movlw	-20
 15397  0162E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15398  0162EC  0EED               	movlw	-19
 15399  0162EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15400                           
 15401                           ;stkvar	_xtoa$5893 @ sp[(-20)+0]
 15402  0162F4  0EEC               	movlw	-20
 15403  0162F6  006F FF8C  F001    	movff	plusw1,btemp
 15404  0162FC  0EED               	movlw	-19
 15405  0162FE  50E3               	movf	plusw1,w,c
 15406  016300  1001               	iorwf	btemp^0,w,c
 15407  016302  B4D8               	btfsc	status,2,c
 15408  016304  D011               	goto	l12989
 15409                           
 15410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 15411                           ;stkvar	_c @ sp[(-20)+12]
 15412  016306  0EF8               	movlw	-8
 15413  016308  006F FF8F FFE6     	movff	plusw1,postinc1
 15414  01630E  006F FF8F FFE6     	movff	plusw1,postinc1
 15415  016314  ECDE  F0D9         	call	_toupper	;wreg free
 15416                           
 15417                           ;stkvar	_c @ sp[(-20)+12]
 15418  016318  0EF8               	movlw	-8
 15419  01631A  0060  F007  FFE3   	movff	btemp,plusw1
 15420  016320  0EF9               	movlw	-7
 15421  016322  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15422  016328                     l12989:
 15423                           
 15424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 15425                           ;stkvar	_c @ sp[(-20)+12]
 15426                           ;stkvar	_i @ sp[(-20)+14]
 15427  016328  0EFA               	movlw	-6
 15428  01632A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15429  016330  0EFB               	movlw	-5
 15430  016332  006F FF8C  F00C    	movff	plusw1,btemp+11
 15431  016338  0E97               	movlw	low _dbuf
 15432  01633A  240B               	addwf	(btemp+10)^0,w,c
 15433  01633C  6ED9               	movwf	fsr2l,c
 15434  01633E  0E02               	movlw	high _dbuf
 15435  016340  200C               	addwfc	(btemp+11)^0,w,c
 15436  016342  6EDA               	movwf	fsr2h,c
 15437  016344  0EF8               	movlw	-8
 15438  016346  006F FF8F FFDF     	movff	plusw1,indf2
 15439                           
 15440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 15441                           ;stkvar	_p @ sp[(-20)+18]
 15442  01634C  50E1               	movf	fsr1l,w,c
 15443  01634E  0FFE               	addlw	-2
 15444  016350  6ED9               	movwf	fsr2l,c
 15445  016352  50E2               	movf	fsr1h,w,c
 15446  016354  6EDA               	movwf	fsr2h,c
 15447  016356  0EFF               	movlw	255
 15448  016358  22DA               	addwfc	fsr2h,f,c
 15449  01635A  06DE               	decf	postinc2,f,c
 15450  01635C  0E00               	movlw	0
 15451  01635E  5ADD               	subwfb	postdec2,f,c
 15452                           
 15453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 15454                           ;stkvar	_w @ sp[(-20)+16]
 15455  016360  50E1               	movf	fsr1l,w,c
 15456  016362  0FFC               	addlw	-4
 15457  016364  6ED9               	movwf	fsr2l,c
 15458  016366  50E2               	movf	fsr1h,w,c
 15459  016368  6EDA               	movwf	fsr2h,c
 15460  01636A  0EFF               	movlw	255
 15461  01636C  22DA               	addwfc	fsr2h,f,c
 15462  01636E  06DE               	decf	postinc2,f,c
 15463  016370  0E00               	movlw	0
 15464  016372  5ADD               	subwfb	postdec2,f,c
 15465                           
 15466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 15467  016374  0E04               	movlw	4
 15468  016376  6E0C               	movwf	(btemp+11)^0,c
 15469                           
 15470                           ;stkvar	_n @ sp[(-20)+4]
 15471  016378  50E1               	movf	fsr1l,w,c
 15472  01637A  0FF0               	addlw	-16
 15473  01637C  6ED9               	movwf	fsr2l,c
 15474  01637E  50E2               	movf	fsr1h,w,c
 15475  016380  6EDA               	movwf	fsr2h,c
 15476  016382  0EFF               	movlw	255
 15477  016384  22DA               	addwfc	fsr2h,f,c
 15478  016386  280C               	incf	(btemp+11)^0,w,c
 15479  016388  52DE               	movf	postinc2,f,c
 15480  01638A  D00F               	goto	u12340
 15481  01638C                     u12345:
 15482  01638C  52DE               	movf	postinc2,f,c
 15483  01638E  52DE               	movf	postinc2,f,c
 15484  016390  52DE               	movf	postinc2,f,c
 15485  016392  52DE               	movf	postinc2,f,c
 15486  016394  52DE               	movf	postinc2,f,c
 15487  016396  52DE               	movf	postinc2,f,c
 15488  016398  90D8               	bcf	status,0,c
 15489  01639A  32DD               	rrcf	postdec2,f,c
 15490  01639C  32DD               	rrcf	postdec2,f,c
 15491  01639E  32DD               	rrcf	postdec2,f,c
 15492  0163A0  32DD               	rrcf	postdec2,f,c
 15493  0163A2  32DD               	rrcf	postdec2,f,c
 15494  0163A4  32DD               	rrcf	postdec2,f,c
 15495  0163A6  32DD               	rrcf	postdec2,f,c
 15496  0163A8  32DE               	rrcf	postinc2,f,c
 15497  0163AA                     u12340:
 15498  0163AA  2EE8               	decfsz	wreg,f,c
 15499  0163AC  D7EF               	goto	u12345
 15500  0163AE                     l12997:
 15501                           
 15502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15503                           ;stkvar	_i @ sp[(-20)+14]
 15504  0163AE  0EFB               	movlw	-5
 15505  0163B0  BEE3               	btfsc	plusw1,7,c
 15506  0163B2  D03A               	goto	u12390
 15507  0163B4  0EFB               	movlw	-5
 15508  0163B6  50E3               	movf	plusw1,w,c
 15509  0163B8  E108               	bnz	u12350
 15510  0163BA  0EFA               	movlw	-6
 15511  0163BC  006F FF8C  F001    	movff	plusw1,btemp
 15512  0163C2  0E02               	movlw	2
 15513  0163C4  5E01               	subwf	btemp^0,f,c
 15514  0163C6  A0D8               	btfss	status,0,c
 15515  0163C8  D02F               	goto	u12390
 15516  0163CA                     u12350:
 15517                           
 15518                           ;stkvar	_n @ sp[(-20)+4]
 15519  0163CA  0EF0               	movlw	-16
 15520  0163CC  50E3               	movf	plusw1,w,c
 15521  0163CE  E115               	bnz	u12361
 15522  0163D0  0EF1               	movlw	-15
 15523  0163D2  50E3               	movf	plusw1,w,c
 15524  0163D4  E112               	bnz	u12361
 15525  0163D6  0EF2               	movlw	-14
 15526  0163D8  50E3               	movf	plusw1,w,c
 15527  0163DA  E10F               	bnz	u12361
 15528  0163DC  0EF3               	movlw	-13
 15529  0163DE  50E3               	movf	plusw1,w,c
 15530  0163E0  E10C               	bnz	u12361
 15531  0163E2  0EF4               	movlw	-12
 15532  0163E4  50E3               	movf	plusw1,w,c
 15533  0163E6  E109               	bnz	u12361
 15534  0163E8  0EF5               	movlw	-11
 15535  0163EA  50E3               	movf	plusw1,w,c
 15536  0163EC  E106               	bnz	u12361
 15537  0163EE  0EF6               	movlw	-10
 15538  0163F0  50E3               	movf	plusw1,w,c
 15539  0163F2  E103               	bnz	u12361
 15540  0163F4  0EF7               	movlw	-9
 15541  0163F6  50E3               	movf	plusw1,w,c
 15542  0163F8  A4D8               	btfss	status,2,c
 15543  0163FA                     u12361:
 15544  0163FA  D6EB               	goto	l12965
 15545                           
 15546                           ;stkvar	_p @ sp[(-20)+18]
 15547  0163FC  0EFF               	movlw	-1
 15548  0163FE  BEE3               	btfsc	plusw1,7,c
 15549  016400  D007               	goto	u12370
 15550  016402  0EFF               	movlw	-1
 15551  016404  50E3               	movf	plusw1,w,c
 15552  016406  E103               	bnz	u12371
 15553  016408  0EFE               	movlw	-2
 15554  01640A  04E3               	decf	plusw1,w,c
 15555  01640C  B0D8               	btfsc	status,0,c
 15556  01640E                     u12371:
 15557  01640E  D6E1               	goto	l12965
 15558  016410                     u12370:
 15559                           
 15560                           ;stkvar	_w @ sp[(-20)+16]
 15561  016410  0EFD               	movlw	-3
 15562  016412  BEE3               	btfsc	plusw1,7,c
 15563  016414  D009               	goto	u12390
 15564  016416  0EFD               	movlw	-3
 15565  016418  50E3               	movf	plusw1,w,c
 15566  01641A  E104               	bnz	u12380
 15567  01641C  0EFC               	movlw	-4
 15568  01641E  04E3               	decf	plusw1,w,c
 15569  016420  A0D8               	btfss	status,0,c
 15570  016422  D002               	goto	u12390
 15571  016424                     u12380:
 15572  016424  B23E               	btfsc	_flags^0,1,c
 15573  016426  D6D5               	goto	l12965
 15574  016428                     u12390:
 15575                           
 15576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 15577  016428  A83E               	btfss	_flags^0,4,c
 15578  01642A  D036               	goto	l13013
 15579                           
 15580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 15581                           ;stkvar	_i @ sp[(-20)+14]
 15582  01642C  50E1               	movf	fsr1l,w,c
 15583  01642E  0FFA               	addlw	-6
 15584  016430  6ED9               	movwf	fsr2l,c
 15585  016432  50E2               	movf	fsr1h,w,c
 15586  016434  6EDA               	movwf	fsr2h,c
 15587  016436  0EFF               	movlw	255
 15588  016438  22DA               	addwfc	fsr2h,f,c
 15589  01643A  06DE               	decf	postinc2,f,c
 15590  01643C  0E00               	movlw	0
 15591  01643E  5ADD               	subwfb	postdec2,f,c
 15592                           
 15593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 15594                           ;stkvar	_x @ sp[(-20)+-11]
 15595                           ;stkvar	_i @ sp[(-20)+14]
 15596  016440  0EFA               	movlw	-6
 15597  016442  006F FF8C  F00B    	movff	plusw1,btemp+10
 15598  016448  0EFB               	movlw	-5
 15599  01644A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15600  016450  0E97               	movlw	low _dbuf
 15601  016452  240B               	addwf	(btemp+10)^0,w,c
 15602  016454  6ED9               	movwf	fsr2l,c
 15603  016456  0E02               	movlw	high _dbuf
 15604  016458  200C               	addwfc	(btemp+11)^0,w,c
 15605  01645A  6EDA               	movwf	fsr2h,c
 15606  01645C  0EE1               	movlw	-31
 15607  01645E  006F FF8F FFDF     	movff	plusw1,indf2
 15608                           
 15609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 15610                           ;stkvar	_i @ sp[(-20)+14]
 15611  016464  50E1               	movf	fsr1l,w,c
 15612  016466  0FFA               	addlw	-6
 15613  016468  6ED9               	movwf	fsr2l,c
 15614  01646A  50E2               	movf	fsr1h,w,c
 15615  01646C  6EDA               	movwf	fsr2h,c
 15616  01646E  0EFF               	movlw	255
 15617  016470  22DA               	addwfc	fsr2h,f,c
 15618  016472  06DE               	decf	postinc2,f,c
 15619  016474  0E00               	movlw	0
 15620  016476  5ADD               	subwfb	postdec2,f,c
 15621                           
 15622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 15623                           ;stkvar	_i @ sp[(-20)+14]
 15624  016478  0EFA               	movlw	-6
 15625  01647A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15626  016480  0EFB               	movlw	-5
 15627  016482  006F FF8C  F00C    	movff	plusw1,btemp+11
 15628  016488  0E97               	movlw	low _dbuf
 15629  01648A  240B               	addwf	(btemp+10)^0,w,c
 15630  01648C  6ED9               	movwf	fsr2l,c
 15631  01648E  0E02               	movlw	high _dbuf
 15632  016490  200C               	addwfc	(btemp+11)^0,w,c
 15633  016492  6EDA               	movwf	fsr2h,c
 15634  016494  0E30               	movlw	48
 15635  016496  6EDF               	movwf	indf2,c
 15636  016498                     l13013:
 15637                           
 15638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 15639                           ;stkvar	_w @ sp[(-20)+16]
 15640  016498  0EFC               	movlw	-4
 15641  01649A  006F FF8F FFE6     	movff	plusw1,postinc1
 15642  0164A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15643                           
 15644                           ;stkvar	_i @ sp[(-22)+14]
 15645  0164A6  0E97               	movlw	low _dbuf
 15646  0164A8  6E0B               	movwf	(btemp+10)^0,c
 15647  0164AA  0E02               	movlw	high _dbuf
 15648  0164AC  6E0C               	movwf	(btemp+11)^0,c
 15649  0164AE  0EF8               	movlw	-8
 15650  0164B0  50E3               	movf	plusw1,w,c
 15651  0164B2  260B               	addwf	(btemp+10)^0,f,c
 15652  0164B4  0EF9               	movlw	-7
 15653  0164B6  50E3               	movf	plusw1,w,c
 15654  0164B8  220C               	addwfc	(btemp+11)^0,f,c
 15655  0164BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15656  0164C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15657                           
 15658                           ;stkvar	_fp @ sp[(-24)+-2]
 15659  0164C6  0EE6               	movlw	-26
 15660  0164C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15661  0164CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15662  0164D4  ECAE  F0D0         	call	_pad	;wreg free
 15663                           
 15664                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 15665  0164D8  0EE1               	movlw	225
 15666  0164DA  26E1               	addwf	fsr1l,f,c
 15667  0164DC  0EFF               	movlw	255
 15668  0164DE  22E2               	addwfc	fsr1h,f,c
 15669  0164E0  0012               	return		;funcret
 15670  0164E2                     __end_of_xtoa:
 15671                           	opt callstack 0
 15672                           
 15673 ;; *************** function _toupper *****************
 15674 ;; Defined at:
 15675 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;  c               2  [STACK] int 
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  2  [STACK] int 
 15682 ;; Registers used:
 15683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/2
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15693 ;;Total ram usage:        0 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:   16
 15696 ;; This function calls:
 15697 ;;		_islower
 15698 ;; This function is called by:
 15699 ;;		_xtoa
 15700 ;; This function uses a reentrant model
 15701 ;;
 15702                           
 15703                           	psect	text57
 15704  01B3BC                     __ptext57:
 15705                           	opt callstack 0
 15706  01B3BC                     _toupper:
 15707                           	opt callstack 0
 15708                           
 15709                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15710  01B3BC  52E6               	movf	postinc1,f,c
 15711  01B3BE  52E6               	movf	postinc1,f,c
 15712                           
 15713                           ;stkvar	_c @ sp[(-2)+-2]
 15714                           
 15715                           ;incstack = 0
 15716 ;; hardware stack exceeded
 15717  01B3C0  0EFC               	movlw	-4
 15718  01B3C2  50E3               	movf	plusw1,w,c
 15719  01B3C4  0F9F               	addlw	159
 15720  01B3C6  6E0B               	movwf	(btemp+10)^0,c
 15721  01B3C8  0EFD               	movlw	-3
 15722  01B3CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15723  01B3D0  0EFF               	movlw	255
 15724  01B3D2  220C               	addwfc	(btemp+11)^0,f,c
 15725  01B3D4  500C               	movf	(btemp+11)^0,w,c
 15726  01B3D6  E106               	bnz	u6470
 15727  01B3D8  0E1A               	movlw	26
 15728  01B3DA  5C0B               	subwf	(btemp+10)^0,w,c
 15729  01B3DC  B0D8               	btfsc	status,0,c
 15730  01B3DE  D002               	goto	u6470
 15731  01B3E0  0E01               	movlw	1
 15732  01B3E2  D001               	goto	u6480
 15733  01B3E4                     u6470:
 15734  01B3E4  0E00               	movlw	0
 15735  01B3E6                     u6480:
 15736  01B3E6  6E0B               	movwf	(btemp+10)^0,c
 15737  01B3E8  6A0C               	clrf	(btemp+11)^0,c
 15738                           
 15739                           ;stkvar	_toupper$6699 @ sp[(-2)+0]
 15740  01B3EA  0EFE               	movlw	-2
 15741  01B3EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15742  01B3F2  0EFF               	movlw	-1
 15743  01B3F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15744                           
 15745                           ;stkvar	_toupper$6699 @ sp[(-2)+0]
 15746  01B3FA  0EFE               	movlw	-2
 15747  01B3FC  006F FF8C  F001    	movff	plusw1,btemp
 15748  01B402  0EFF               	movlw	-1
 15749  01B404  50E3               	movf	plusw1,w,c
 15750  01B406  1001               	iorwf	btemp^0,w,c
 15751  01B408  B4D8               	btfsc	status,2,c
 15752  01B40A  D00D               	goto	l8439
 15753                           
 15754                           ;stkvar	_c @ sp[(-2)+-2]
 15755  01B40C  0EFC               	movlw	-4
 15756  01B40E  006F FF8C  F001    	movff	plusw1,btemp
 15757  01B414  0EFD               	movlw	-3
 15758  01B416  006F FF8C  F002    	movff	plusw1,btemp+1
 15759  01B41C  0E5F               	movlw	95
 15760  01B41E  1601               	andwf	btemp^0,f,c
 15761  01B420  0E00               	movlw	0
 15762  01B422  1602               	andwf	(btemp+1)^0,f,c
 15763  01B424  D008               	goto	l3600
 15764  01B426                     l8439:
 15765                           
 15766                           ;stkvar	_c @ sp[(-2)+-2]
 15767  01B426  0EFC               	movlw	-4
 15768  01B428  006F FF8C  F001    	movff	plusw1,btemp
 15769  01B42E  0EFD               	movlw	-3
 15770  01B430  006F FF8C  F002    	movff	plusw1,btemp+1
 15771  01B436                     l3600:
 15772                           
 15773                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15774  01B436  52E5               	movf	postdec1,f,c
 15775  01B438  52E5               	movf	postdec1,f,c
 15776  01B43A  52E5               	movf	postdec1,f,c
 15777  01B43C  52E5               	movf	postdec1,f,c
 15778  01B43E  0012               	return		;funcret
 15779  01B440                     __end_of_toupper:
 15780                           	opt callstack 0
 15781                           
 15782 ;; *************** function _islower *****************
 15783 ;; Defined at:
 15784 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;  c               2  [STACK] int 
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  2  [STACK] int 
 15791 ;; Registers used:
 15792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:   15
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_toupper
 15809 ;; This function uses a reentrant model
 15810 ;;
 15811                           
 15812                           	psect	text58
 15813  01C314                     __ptext58:
 15814                           	opt callstack 0
 15815  01C314                     _islower:
 15816                           	opt callstack 0
 15817                           
 15818                           ;stkvar	_c @ sp[(0)+-2]
 15819                           
 15820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15821                           ;incstack = 0
 15822 ;; hardware stack exceeded
 15823  01C314  0EFE               	movlw	-2
 15824  01C316  50E3               	movf	plusw1,w,c
 15825  01C318  0F9F               	addlw	159
 15826  01C31A  6E0B               	movwf	(btemp+10)^0,c
 15827  01C31C  0EFF               	movlw	-1
 15828  01C31E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15829  01C324  0EFF               	movlw	255
 15830  01C326  220C               	addwfc	(btemp+11)^0,f,c
 15831  01C328  500C               	movf	(btemp+11)^0,w,c
 15832  01C32A  E106               	bnz	u6110
 15833  01C32C  0E1A               	movlw	26
 15834  01C32E  5C0B               	subwf	(btemp+10)^0,w,c
 15835  01C330  B0D8               	btfsc	status,0,c
 15836  01C332  D002               	goto	u6110
 15837  01C334  0E01               	movlw	1
 15838  01C336  D001               	goto	u6120
 15839  01C338                     u6110:
 15840  01C338  0E00               	movlw	0
 15841  01C33A                     u6120:
 15842  01C33A  6E01               	movwf	btemp^0,c
 15843  01C33C  6A02               	clrf	(btemp+1)^0,c
 15844                           
 15845                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15846  01C33E  52E5               	movf	postdec1,f,c
 15847  01C340  52E5               	movf	postdec1,f,c
 15848  01C342  0012               	return		;funcret
 15849  01C344                     __end_of_islower:
 15850                           	opt callstack 0
 15851                           
 15852 ;; *************** function _isalpha *****************
 15853 ;; Defined at:
 15854 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  c               2  [STACK] int 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;		None
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  2  [STACK] int 
 15861 ;; Registers used:
 15862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15872 ;;Total ram usage:        0 bytes
 15873 ;; Hardware stack levels used:    1
 15874 ;; Hardware stack levels required when called:   15
 15875 ;; This function calls:
 15876 ;;		Nothing
 15877 ;; This function is called by:
 15878 ;;		_xtoa
 15879 ;; This function uses a reentrant model
 15880 ;;
 15881                           
 15882                           	psect	text59
 15883  01BEFA                     __ptext59:
 15884                           	opt callstack 0
 15885  01BEFA                     _isalpha:
 15886                           	opt callstack 0
 15887                           
 15888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15889                           ;incstack = 0
 15890 ;; hardware stack exceeded
 15891  01BEFA  0E9F               	movlw	159
 15892  01BEFC  6E0B               	movwf	(btemp+10)^0,c
 15893  01BEFE  0EFF               	movlw	255
 15894  01BF00  6E0C               	movwf	(btemp+11)^0,c
 15895                           
 15896                           ;stkvar	_c @ sp[(0)+-2]
 15897  01BF02  0EFE               	movlw	-2
 15898  01BF04  006F FF8C  F009    	movff	plusw1,btemp+8
 15899  01BF0A  0EFF               	movlw	-1
 15900  01BF0C  006F FF8C  F00A    	movff	plusw1,btemp+9
 15901  01BF12  0E20               	movlw	32
 15902  01BF14  1209               	iorwf	(btemp+8)^0,f,c
 15903  01BF16  0E00               	movlw	0
 15904  01BF18  120A               	iorwf	(btemp+9)^0,f,c
 15905  01BF1A  500B               	movf	(btemp+10)^0,w,c
 15906  01BF1C  2609               	addwf	(btemp+8)^0,f,c
 15907  01BF1E  500C               	movf	(btemp+11)^0,w,c
 15908  01BF20  220A               	addwfc	(btemp+9)^0,f,c
 15909  01BF22  500A               	movf	(btemp+9)^0,w,c
 15910  01BF24  E106               	bnz	u6450
 15911  01BF26  0E1A               	movlw	26
 15912  01BF28  5C09               	subwf	(btemp+8)^0,w,c
 15913  01BF2A  B0D8               	btfsc	status,0,c
 15914  01BF2C  D002               	goto	u6450
 15915  01BF2E  0E01               	movlw	1
 15916  01BF30  D001               	goto	u6460
 15917  01BF32                     u6450:
 15918  01BF32  0E00               	movlw	0
 15919  01BF34                     u6460:
 15920  01BF34  6E01               	movwf	btemp^0,c
 15921  01BF36  6A02               	clrf	(btemp+1)^0,c
 15922                           
 15923                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15924  01BF38  52E5               	movf	postdec1,f,c
 15925  01BF3A  52E5               	movf	postdec1,f,c
 15926  01BF3C  0012               	return		;funcret
 15927  01BF3E                     __end_of_isalpha:
 15928                           	opt callstack 0
 15929                           
 15930 ;; *************** function _utoa *****************
 15931 ;; Defined at:
 15932 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15935 ;;		 -> f(6), NULL(0), 
 15936 ;;  d               8  [STACK] unsigned long long 
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;  n               8  [STACK] unsigned long long 
 15939 ;;  i               2  [STACK] int 
 15940 ;;  w               2  [STACK] int 
 15941 ;;  p               2  [STACK] int 
 15942 ;; Return value:  Size  Location     Type
 15943 ;;                  2  [STACK] int 
 15944 ;; Registers used:
 15945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15946 ;; Tracked objects:
 15947 ;;		On entry : 0/0
 15948 ;;		On exit  : 0/0
 15949 ;;		Unchanged: 0/0
 15950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15955 ;;Total ram usage:        0 bytes
 15956 ;; Hardware stack levels used:    1
 15957 ;; Hardware stack levels required when called:   20
 15958 ;; This function calls:
 15959 ;;		___lodiv
 15960 ;;		___lomod
 15961 ;;		_pad
 15962 ;; This function is called by:
 15963 ;;		_vfpfcnvrt
 15964 ;; This function uses a reentrant model
 15965 ;;
 15966                           
 15967                           	psect	text60
 15968  01684E                     __ptext60:
 15969                           	opt callstack 0
 15970  01684E                     _utoa:
 15971                           	opt callstack 0
 15972                           
 15973                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15974  01684E  0E0E               	movlw	14
 15975  016850  26E1               	addwf	fsr1l,f,c
 15976  016852  0E00               	movlw	0
 15977  016854  22E2               	addwfc	fsr1h,f,c
 15978                           
 15979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 15980                           
 15981                           ;incstack = 0
 15982 ;; hardware stack exceeded
 15983  016856  AE3D               	btfss	(_prec+1)^0,7,c
 15984                           
 15985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 15986  016858  923E               	bcf	_flags^0,1,c
 15987                           
 15988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 15989  01685A  BE3D               	btfsc	(_prec+1)^0,7,c
 15990  01685C  D005               	goto	u12160
 15991  01685E  503D               	movf	(_prec+1)^0,w,c
 15992  016860  E110               	bnz	l12913
 15993  016862  043C               	decf	_prec^0,w,c
 15994  016864  B0D8               	btfsc	status,0,c
 15995  016866  D00D               	goto	l12913
 15996  016868                     u12160:
 15997  016868  0E01               	movlw	1
 15998  01686A  6E0B               	movwf	(btemp+10)^0,c
 15999  01686C  0E00               	movlw	0
 16000  01686E  6E0C               	movwf	(btemp+11)^0,c
 16001                           
 16002                           ;stkvar	_p @ sp[(-14)+12]
 16003  016870  0EFE               	movlw	-2
 16004  016872  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16005  016878  0EFF               	movlw	-1
 16006  01687A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16007  016880  D008               	goto	l2418
 16008  016882                     l12913:
 16009                           
 16010                           ;stkvar	_p @ sp[(-14)+12]
 16011  016882  0EFE               	movlw	-2
 16012  016884  0060  F0F3  FFE3   	movff	_prec,plusw1
 16013  01688A  0EFF               	movlw	-1
 16014  01688C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16015  016892                     l2418:
 16016                           
 16017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 16018                           ;stkvar	_w @ sp[(-14)+10]
 16019  016892  0EFC               	movlw	-4
 16020  016894  0060  F0EB  FFE3   	movff	_width,plusw1
 16021  01689A  0EFD               	movlw	-3
 16022  01689C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 16025                           ;stkvar	_d @ sp[(-14)+-10]
 16026  0168A2  0EE8               	movlw	232
 16027  0168A4  24E1               	addwf	fsr1l,w,c
 16028  0168A6  6ED9               	movwf	fsr2l,c
 16029  0168A8  0EFF               	movlw	255
 16030  0168AA  20E2               	addwfc	fsr1h,w,c
 16031  0168AC  6EDA               	movwf	fsr2h,c
 16032                           
 16033                           ;stkvar	_n @ sp[(-14)+0]
 16034  0168AE  0E08               	movlw	8
 16035  0168B0  6E01               	movwf	btemp^0,c
 16036  0168B2  0EF2               	movlw	-14
 16037  0168B4                     us1217999:
 16038  0168B4  006F FF7B FFE3     	movff	postinc2,plusw1
 16039  0168BA  28E8               	incf	wreg,w,c
 16040  0168BC  2E01               	decfsz	btemp^0,f,c
 16041  0168BE  D7FA               	bra	us1217999
 16042                           
 16043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 16044  0168C0  0E4F               	movlw	79
 16045  0168C2  6E0B               	movwf	(btemp+10)^0,c
 16046  0168C4  0E00               	movlw	0
 16047  0168C6  6E0C               	movwf	(btemp+11)^0,c
 16048                           
 16049                           ;stkvar	_i @ sp[(-14)+8]
 16050  0168C8  0EFA               	movlw	-6
 16051  0168CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16052  0168D0  0EFB               	movlw	-5
 16053  0168D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16054                           
 16055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 16056  0168D8  0102               	movlb	2	; () banked
 16057  0168DA  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16058                           
 16059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16060  0168DC  D0FB               	goto	l12931
 16061  0168DE                     l12921:
 16062                           
 16063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 16064                           ;stkvar	_i @ sp[(-14)+8]
 16065  0168DE  50E1               	movf	fsr1l,w,c
 16066  0168E0  0FFA               	addlw	-6
 16067  0168E2  6ED9               	movwf	fsr2l,c
 16068  0168E4  50E2               	movf	fsr1h,w,c
 16069  0168E6  6EDA               	movwf	fsr2h,c
 16070  0168E8  0EFF               	movlw	255
 16071  0168EA  22DA               	addwfc	fsr2h,f,c
 16072  0168EC  06DE               	decf	postinc2,f,c
 16073  0168EE  0E00               	movlw	0
 16074  0168F0  5ADD               	subwfb	postdec2,f,c
 16075                           
 16076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 16077  0168F2  0E0A               	movlw	10
 16078  0168F4  6EE6               	movwf	postinc1,c
 16079  0168F6  0E00               	movlw	0
 16080  0168F8  6EE6               	movwf	postinc1,c
 16081  0168FA  0E00               	movlw	0
 16082  0168FC  6EE6               	movwf	postinc1,c
 16083  0168FE  0E00               	movlw	0
 16084  016900  6EE6               	movwf	postinc1,c
 16085  016902  0E00               	movlw	0
 16086  016904  6EE6               	movwf	postinc1,c
 16087  016906  0E00               	movlw	0
 16088  016908  6EE6               	movwf	postinc1,c
 16089  01690A  0E00               	movlw	0
 16090  01690C  6EE6               	movwf	postinc1,c
 16091  01690E  0E00               	movlw	0
 16092  016910  6EE6               	movwf	postinc1,c
 16093                           
 16094                           ;stkvar	_n @ sp[(-22)+0]
 16095  016912  50E1               	movf	fsr1l,w,c
 16096  016914  0FEA               	addlw	-22
 16097  016916  6ED9               	movwf	fsr2l,c
 16098  016918  50E2               	movf	fsr1h,w,c
 16099  01691A  6EDA               	movwf	fsr2h,c
 16100  01691C  0EFF               	movlw	255
 16101  01691E  22DA               	addwfc	fsr2h,f,c
 16102  016920  006F FF7B FFE6     	movff	postinc2,postinc1
 16103  016926  006F FF7B FFE6     	movff	postinc2,postinc1
 16104  01692C  006F FF7B FFE6     	movff	postinc2,postinc1
 16105  016932  006F FF7B FFE6     	movff	postinc2,postinc1
 16106  016938  006F FF7B FFE6     	movff	postinc2,postinc1
 16107  01693E  006F FF7B FFE6     	movff	postinc2,postinc1
 16108  016944  006F FF7B FFE6     	movff	postinc2,postinc1
 16109  01694A  006F FF7B FFE6     	movff	postinc2,postinc1
 16110  016950  EC31  F0CD         	call	___lomod	;wreg free
 16111  016954  52E5               	movf	postdec1,f,c
 16112  016956  006F FF9C  F018    	movff	indf1,btemp+23
 16113  01695C  52E5               	movf	postdec1,f,c
 16114  01695E  006F FF9C  F017    	movff	indf1,btemp+22
 16115  016964  52E5               	movf	postdec1,f,c
 16116  016966  006F FF9C  F016    	movff	indf1,btemp+21
 16117  01696C  52E5               	movf	postdec1,f,c
 16118  01696E  006F FF9C  F015    	movff	indf1,btemp+20
 16119  016974  52E5               	movf	postdec1,f,c
 16120  016976  006F FF9C  F014    	movff	indf1,btemp+19
 16121  01697C  52E5               	movf	postdec1,f,c
 16122  01697E  006F FF9C  F013    	movff	indf1,btemp+18
 16123  016984  52E5               	movf	postdec1,f,c
 16124  016986  006F FF9C  F012    	movff	indf1,btemp+17
 16125  01698C  52E5               	movf	postdec1,f,c
 16126  01698E  006F FF9C  F011    	movff	indf1,btemp+16
 16127  016994  0EF8               	movlw	248
 16128  016996  26E1               	addwf	fsr1l,f,c
 16129  016998  0EFF               	movlw	255
 16130  01699A  22E2               	addwfc	fsr1h,f,c
 16131  01699C  0E30               	movlw	48
 16132  01699E  2611               	addwf	(btemp+16)^0,f,c
 16133                           
 16134                           ;stkvar	_i @ sp[(-14)+8]
 16135  0169A0  0EFA               	movlw	-6
 16136  0169A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 16137  0169A8  0EFB               	movlw	-5
 16138  0169AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 16139  0169B0  0E97               	movlw	low _dbuf
 16140  0169B2  240B               	addwf	(btemp+10)^0,w,c
 16141  0169B4  6ED9               	movwf	fsr2l,c
 16142  0169B6  0E02               	movlw	high _dbuf
 16143  0169B8  200C               	addwfc	(btemp+11)^0,w,c
 16144  0169BA  6EDA               	movwf	fsr2h,c
 16145  0169BC  0060  F047  FFDF   	movff	btemp+16,indf2
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 16148                           ;stkvar	_p @ sp[(-14)+12]
 16149  0169C2  50E1               	movf	fsr1l,w,c
 16150  0169C4  0FFE               	addlw	-2
 16151  0169C6  6ED9               	movwf	fsr2l,c
 16152  0169C8  50E2               	movf	fsr1h,w,c
 16153  0169CA  6EDA               	movwf	fsr2h,c
 16154  0169CC  0EFF               	movlw	255
 16155  0169CE  22DA               	addwfc	fsr2h,f,c
 16156  0169D0  06DE               	decf	postinc2,f,c
 16157  0169D2  0E00               	movlw	0
 16158  0169D4  5ADD               	subwfb	postdec2,f,c
 16159                           
 16160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 16161                           ;stkvar	_w @ sp[(-14)+10]
 16162  0169D6  50E1               	movf	fsr1l,w,c
 16163  0169D8  0FFC               	addlw	-4
 16164  0169DA  6ED9               	movwf	fsr2l,c
 16165  0169DC  50E2               	movf	fsr1h,w,c
 16166  0169DE  6EDA               	movwf	fsr2h,c
 16167  0169E0  0EFF               	movlw	255
 16168  0169E2  22DA               	addwfc	fsr2h,f,c
 16169  0169E4  06DE               	decf	postinc2,f,c
 16170  0169E6  0E00               	movlw	0
 16171  0169E8  5ADD               	subwfb	postdec2,f,c
 16172                           
 16173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 16174  0169EA  0E0A               	movlw	10
 16175  0169EC  6EE6               	movwf	postinc1,c
 16176  0169EE  0E00               	movlw	0
 16177  0169F0  6EE6               	movwf	postinc1,c
 16178  0169F2  0E00               	movlw	0
 16179  0169F4  6EE6               	movwf	postinc1,c
 16180  0169F6  0E00               	movlw	0
 16181  0169F8  6EE6               	movwf	postinc1,c
 16182  0169FA  0E00               	movlw	0
 16183  0169FC  6EE6               	movwf	postinc1,c
 16184  0169FE  0E00               	movlw	0
 16185  016A00  6EE6               	movwf	postinc1,c
 16186  016A02  0E00               	movlw	0
 16187  016A04  6EE6               	movwf	postinc1,c
 16188  016A06  0E00               	movlw	0
 16189  016A08  6EE6               	movwf	postinc1,c
 16190                           
 16191                           ;stkvar	_n @ sp[(-22)+0]
 16192  016A0A  50E1               	movf	fsr1l,w,c
 16193  016A0C  0FEA               	addlw	-22
 16194  016A0E  6ED9               	movwf	fsr2l,c
 16195  016A10  50E2               	movf	fsr1h,w,c
 16196  016A12  6EDA               	movwf	fsr2h,c
 16197  016A14  0EFF               	movlw	255
 16198  016A16  22DA               	addwfc	fsr2h,f,c
 16199  016A18  006F FF7B FFE6     	movff	postinc2,postinc1
 16200  016A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 16201  016A24  006F FF7B FFE6     	movff	postinc2,postinc1
 16202  016A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 16203  016A30  006F FF7B FFE6     	movff	postinc2,postinc1
 16204  016A36  006F FF7B FFE6     	movff	postinc2,postinc1
 16205  016A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 16206  016A42  006F FF7B FFE6     	movff	postinc2,postinc1
 16207  016A48  EC0D  F0C9         	call	___lodiv	;wreg free
 16208  016A4C  52E5               	movf	postdec1,f,c
 16209  016A4E  006F FF9C  F018    	movff	indf1,btemp+23
 16210  016A54  52E5               	movf	postdec1,f,c
 16211  016A56  006F FF9C  F017    	movff	indf1,btemp+22
 16212  016A5C  52E5               	movf	postdec1,f,c
 16213  016A5E  006F FF9C  F016    	movff	indf1,btemp+21
 16214  016A64  52E5               	movf	postdec1,f,c
 16215  016A66  006F FF9C  F015    	movff	indf1,btemp+20
 16216  016A6C  52E5               	movf	postdec1,f,c
 16217  016A6E  006F FF9C  F014    	movff	indf1,btemp+19
 16218  016A74  52E5               	movf	postdec1,f,c
 16219  016A76  006F FF9C  F013    	movff	indf1,btemp+18
 16220  016A7C  52E5               	movf	postdec1,f,c
 16221  016A7E  006F FF9C  F012    	movff	indf1,btemp+17
 16222  016A84  52E5               	movf	postdec1,f,c
 16223  016A86  006F FF9C  F011    	movff	indf1,btemp+16
 16224  016A8C  0EF8               	movlw	248
 16225  016A8E  26E1               	addwf	fsr1l,f,c
 16226  016A90  0EFF               	movlw	255
 16227  016A92  22E2               	addwfc	fsr1h,f,c
 16228                           
 16229                           ;stkvar	_n @ sp[(-14)+0]
 16230  016A94  0EF2               	movlw	-14
 16231  016A96  0060  F047  FFE3   	movff	btemp+16,plusw1
 16232  016A9C  0EF3               	movlw	-13
 16233  016A9E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16234  016AA4  0EF4               	movlw	-12
 16235  016AA6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16236  016AAC  0EF5               	movlw	-11
 16237  016AAE  0060  F053  FFE3   	movff	btemp+19,plusw1
 16238  016AB4  0EF6               	movlw	-10
 16239  016AB6  0060  F057  FFE3   	movff	btemp+20,plusw1
 16240  016ABC  0EF7               	movlw	-9
 16241  016ABE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16242  016AC4  0EF8               	movlw	-8
 16243  016AC6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16244  016ACC  0EF9               	movlw	-7
 16245  016ACE  0060  F063  FFE3   	movff	btemp+23,plusw1
 16246  016AD4                     l12931:
 16247                           
 16248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 16249                           ;stkvar	_i @ sp[(-14)+8]
 16250  016AD4  0EFA               	movlw	-6
 16251  016AD6  006F FF8C  F001    	movff	plusw1,btemp
 16252  016ADC  0EFB               	movlw	-5
 16253  016ADE  50E3               	movf	plusw1,w,c
 16254  016AE0  1001               	iorwf	btemp^0,w,c
 16255  016AE2  B4D8               	btfsc	status,2,c
 16256  016AE4  D02F               	goto	u12220
 16257                           
 16258                           ;stkvar	_n @ sp[(-14)+0]
 16259  016AE6  0EF2               	movlw	-14
 16260  016AE8  50E3               	movf	plusw1,w,c
 16261  016AEA  E115               	bnz	u12191
 16262  016AEC  0EF3               	movlw	-13
 16263  016AEE  50E3               	movf	plusw1,w,c
 16264  016AF0  E112               	bnz	u12191
 16265  016AF2  0EF4               	movlw	-12
 16266  016AF4  50E3               	movf	plusw1,w,c
 16267  016AF6  E10F               	bnz	u12191
 16268  016AF8  0EF5               	movlw	-11
 16269  016AFA  50E3               	movf	plusw1,w,c
 16270  016AFC  E10C               	bnz	u12191
 16271  016AFE  0EF6               	movlw	-10
 16272  016B00  50E3               	movf	plusw1,w,c
 16273  016B02  E109               	bnz	u12191
 16274  016B04  0EF7               	movlw	-9
 16275  016B06  50E3               	movf	plusw1,w,c
 16276  016B08  E106               	bnz	u12191
 16277  016B0A  0EF8               	movlw	-8
 16278  016B0C  50E3               	movf	plusw1,w,c
 16279  016B0E  E103               	bnz	u12191
 16280  016B10  0EF9               	movlw	-7
 16281  016B12  50E3               	movf	plusw1,w,c
 16282  016B14  A4D8               	btfss	status,2,c
 16283  016B16                     u12191:
 16284  016B16  D6E3               	goto	l12921
 16285                           
 16286                           ;stkvar	_p @ sp[(-14)+12]
 16287  016B18  0EFF               	movlw	-1
 16288  016B1A  BEE3               	btfsc	plusw1,7,c
 16289  016B1C  D007               	goto	u12200
 16290  016B1E  0EFF               	movlw	-1
 16291  016B20  50E3               	movf	plusw1,w,c
 16292  016B22  E103               	bnz	u12201
 16293  016B24  0EFE               	movlw	-2
 16294  016B26  04E3               	decf	plusw1,w,c
 16295  016B28  B0D8               	btfsc	status,0,c
 16296  016B2A                     u12201:
 16297  016B2A  D6D9               	goto	l12921
 16298  016B2C                     u12200:
 16299                           
 16300                           ;stkvar	_w @ sp[(-14)+10]
 16301  016B2C  0EFD               	movlw	-3
 16302  016B2E  BEE3               	btfsc	plusw1,7,c
 16303  016B30  D009               	goto	u12220
 16304  016B32  0EFD               	movlw	-3
 16305  016B34  50E3               	movf	plusw1,w,c
 16306  016B36  E104               	bnz	u12210
 16307  016B38  0EFC               	movlw	-4
 16308  016B3A  04E3               	decf	plusw1,w,c
 16309  016B3C  A0D8               	btfss	status,0,c
 16310  016B3E  D002               	goto	u12220
 16311  016B40                     u12210:
 16312  016B40  B23E               	btfsc	_flags^0,1,c
 16313  016B42  D6CD               	goto	l12921
 16314  016B44                     u12220:
 16315                           
 16316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 16317                           ;stkvar	_w @ sp[(-14)+10]
 16318  016B44  0EFC               	movlw	-4
 16319  016B46  006F FF8F FFE6     	movff	plusw1,postinc1
 16320  016B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 16321                           
 16322                           ;stkvar	_i @ sp[(-16)+8]
 16323  016B52  0E97               	movlw	low _dbuf
 16324  016B54  6E0B               	movwf	(btemp+10)^0,c
 16325  016B56  0E02               	movlw	high _dbuf
 16326  016B58  6E0C               	movwf	(btemp+11)^0,c
 16327  016B5A  0EF8               	movlw	-8
 16328  016B5C  50E3               	movf	plusw1,w,c
 16329  016B5E  260B               	addwf	(btemp+10)^0,f,c
 16330  016B60  0EF9               	movlw	-7
 16331  016B62  50E3               	movf	plusw1,w,c
 16332  016B64  220C               	addwfc	(btemp+11)^0,f,c
 16333  016B66  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16334  016B6C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16335                           
 16336                           ;stkvar	_fp @ sp[(-18)+-2]
 16337  016B72  0EEC               	movlw	-20
 16338  016B74  006F FF8F FFE6     	movff	plusw1,postinc1
 16339  016B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  016B80  ECAE  F0D0         	call	_pad	;wreg free
 16341                           
 16342                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 16343  016B84  0EE8               	movlw	232
 16344  016B86  26E1               	addwf	fsr1l,f,c
 16345  016B88  0EFF               	movlw	255
 16346  016B8A  22E2               	addwfc	fsr1h,f,c
 16347  016B8C  0012               	return		;funcret
 16348  016B8E                     __end_of_utoa:
 16349                           	opt callstack 0
 16350                           
 16351 ;; *************** function ___lomod *****************
 16352 ;; Defined at:
 16353 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 16354 ;; Parameters:    Size  Location     Type
 16355 ;;  dividend        8  [STACK] unsigned long long 
 16356 ;;  divisor         8  [STACK] unsigned long long 
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;  counter         1  [STACK] unsigned char 
 16359 ;; Return value:  Size  Location     Type
 16360 ;;                  8  [STACK] unsigned long long 
 16361 ;; Registers used:
 16362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16363 ;; Tracked objects:
 16364 ;;		On entry : 0/2
 16365 ;;		On exit  : 0/0
 16366 ;;		Unchanged: 0/0
 16367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16372 ;;Total ram usage:        0 bytes
 16373 ;; Hardware stack levels used:    1
 16374 ;; Hardware stack levels required when called:   15
 16375 ;; This function calls:
 16376 ;;		Nothing
 16377 ;; This function is called by:
 16378 ;;		_utoa
 16379 ;; This function uses a reentrant model
 16380 ;;
 16381                           
 16382                           	psect	text61
 16383  019A62                     __ptext61:
 16384                           	opt callstack 0
 16385  019A62                     ___lomod:
 16386                           	opt callstack 0
 16387                           
 16388                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16389  019A62  52E6               	movf	postinc1,f,c
 16390                           
 16391                           ;stkvar	_divisor @ sp[(-1)+-16]
 16392                           
 16393                           ;incstack = 0
 16394 ;; hardware stack exceeded
 16395  019A64  0EEF               	movlw	-17
 16396  019A66  50E3               	movf	plusw1,w,c
 16397  019A68  E116               	bnz	u7600
 16398  019A6A  0EF0               	movlw	-16
 16399  019A6C  50E3               	movf	plusw1,w,c
 16400  019A6E  E113               	bnz	u7600
 16401  019A70  0EF1               	movlw	-15
 16402  019A72  50E3               	movf	plusw1,w,c
 16403  019A74  E110               	bnz	u7600
 16404  019A76  0EF2               	movlw	-14
 16405  019A78  50E3               	movf	plusw1,w,c
 16406  019A7A  E10D               	bnz	u7600
 16407  019A7C  0EF3               	movlw	-13
 16408  019A7E  50E3               	movf	plusw1,w,c
 16409  019A80  E10A               	bnz	u7600
 16410  019A82  0EF4               	movlw	-12
 16411  019A84  50E3               	movf	plusw1,w,c
 16412  019A86  E107               	bnz	u7600
 16413  019A88  0EF5               	movlw	-11
 16414  019A8A  50E3               	movf	plusw1,w,c
 16415  019A8C  E104               	bnz	u7600
 16416  019A8E  0EF6               	movlw	-10
 16417  019A90  50E3               	movf	plusw1,w,c
 16418  019A92  B4D8               	btfsc	status,2,c
 16419  019A94  D075               	goto	u7630
 16420  019A96                     u7600:
 16421                           
 16422                           ;stkvar	_counter @ sp[(-1)+0]
 16423  019A96  0EFF               	movlw	-1
 16424  019A98  6AE3               	clrf	plusw1,c
 16425  019A9A  D012               	goto	L17
 16426  019A9C                     l9049:
 16427                           
 16428                           ;stkvar	_divisor @ sp[(-1)+-16]
 16429  019A9C  90D8               	bcf	status,0,c
 16430  019A9E  0EEF               	movlw	-17
 16431  019AA0  36E3               	rlcf	plusw1,f,c
 16432  019AA2  0EF0               	movlw	-16
 16433  019AA4  36E3               	rlcf	plusw1,f,c
 16434  019AA6  0EF1               	movlw	-15
 16435  019AA8  36E3               	rlcf	plusw1,f,c
 16436  019AAA  0EF2               	movlw	-14
 16437  019AAC  36E3               	rlcf	plusw1,f,c
 16438  019AAE  0EF3               	movlw	-13
 16439  019AB0  36E3               	rlcf	plusw1,f,c
 16440  019AB2  0EF4               	movlw	-12
 16441  019AB4  36E3               	rlcf	plusw1,f,c
 16442  019AB6  0EF5               	movlw	-11
 16443  019AB8  36E3               	rlcf	plusw1,f,c
 16444  019ABA  0EF6               	movlw	-10
 16445  019ABC  36E3               	rlcf	plusw1,f,c
 16446                           
 16447                           ;stkvar	_counter @ sp[(-1)+0]
 16448  019ABE  0EFF               	movlw	-1
 16449  019AC0                     L17:
 16450  019AC0  2AE3               	incf	plusw1,f,c
 16451                           
 16452                           ;stkvar	_divisor @ sp[(-1)+-16]
 16453  019AC2  0EF6               	movlw	-10
 16454  019AC4  AEE3               	btfss	plusw1,7,c
 16455  019AC6  D7EA               	goto	l9049
 16456  019AC8                     u7610:
 16457                           
 16458                           ;stkvar	_divisor @ sp[(-1)+-16]
 16459                           ;stkvar	_dividend @ sp[(-1)+-8]
 16460  019AC8  50E1               	movf	fsr1l,w,c
 16461  019ACA  0FF7               	addlw	-9
 16462  019ACC  6ED9               	movwf	fsr2l,c
 16463  019ACE  50E2               	movf	fsr1h,w,c
 16464  019AD0  6EDA               	movwf	fsr2h,c
 16465  019AD2  0EFF               	movlw	255
 16466  019AD4  22DA               	addwfc	fsr2h,f,c
 16467  019AD6  0EEF               	movlw	-17
 16468  019AD8  50E3               	movf	plusw1,w,c
 16469  019ADA  5CDE               	subwf	postinc2,w,c
 16470  019ADC  0EF0               	movlw	-16
 16471  019ADE  50E3               	movf	plusw1,w,c
 16472  019AE0  58DE               	subwfb	postinc2,w,c
 16473  019AE2  0EF1               	movlw	-15
 16474  019AE4  50E3               	movf	plusw1,w,c
 16475  019AE6  58DE               	subwfb	postinc2,w,c
 16476  019AE8  0EF2               	movlw	-14
 16477  019AEA  50E3               	movf	plusw1,w,c
 16478  019AEC  58DE               	subwfb	postinc2,w,c
 16479  019AEE  0EF3               	movlw	-13
 16480  019AF0  50E3               	movf	plusw1,w,c
 16481  019AF2  58DE               	subwfb	postinc2,w,c
 16482  019AF4  0EF4               	movlw	-12
 16483  019AF6  50E3               	movf	plusw1,w,c
 16484  019AF8  58DE               	subwfb	postinc2,w,c
 16485  019AFA  0EF5               	movlw	-11
 16486  019AFC  50E3               	movf	plusw1,w,c
 16487  019AFE  58DE               	subwfb	postinc2,w,c
 16488  019B00  0EF6               	movlw	-10
 16489  019B02  50E3               	movf	plusw1,w,c
 16490  019B04  58DE               	subwfb	postinc2,w,c
 16491  019B06  A0D8               	btfss	status,0,c
 16492  019B08  D01F               	goto	l9057
 16493                           
 16494                           ;stkvar	_divisor @ sp[(-1)+-16]
 16495                           ;stkvar	_dividend @ sp[(-1)+-8]
 16496  019B0A  50E1               	movf	fsr1l,w,c
 16497  019B0C  0FF7               	addlw	-9
 16498  019B0E  6ED9               	movwf	fsr2l,c
 16499  019B10  50E2               	movf	fsr1h,w,c
 16500  019B12  6EDA               	movwf	fsr2h,c
 16501  019B14  0EFF               	movlw	255
 16502  019B16  22DA               	addwfc	fsr2h,f,c
 16503  019B18  0EEF               	movlw	-17
 16504  019B1A  50E3               	movf	plusw1,w,c
 16505  019B1C  5EDE               	subwf	postinc2,f,c
 16506  019B1E  0EF0               	movlw	-16
 16507  019B20  50E3               	movf	plusw1,w,c
 16508  019B22  5ADE               	subwfb	postinc2,f,c
 16509  019B24  0EF1               	movlw	-15
 16510  019B26  50E3               	movf	plusw1,w,c
 16511  019B28  5ADE               	subwfb	postinc2,f,c
 16512  019B2A  0EF2               	movlw	-14
 16513  019B2C  50E3               	movf	plusw1,w,c
 16514  019B2E  5ADE               	subwfb	postinc2,f,c
 16515  019B30  0EF3               	movlw	-13
 16516  019B32  50E3               	movf	plusw1,w,c
 16517  019B34  5ADE               	subwfb	postinc2,f,c
 16518  019B36  0EF4               	movlw	-12
 16519  019B38  50E3               	movf	plusw1,w,c
 16520  019B3A  5ADE               	subwfb	postinc2,f,c
 16521  019B3C  0EF5               	movlw	-11
 16522  019B3E  50E3               	movf	plusw1,w,c
 16523  019B40  5ADE               	subwfb	postinc2,f,c
 16524  019B42  0EF6               	movlw	-10
 16525  019B44  50E3               	movf	plusw1,w,c
 16526  019B46  5ADE               	subwfb	postinc2,f,c
 16527  019B48                     l9057:
 16528                           
 16529                           ;stkvar	_divisor @ sp[(-1)+-16]
 16530  019B48  90D8               	bcf	status,0,c
 16531  019B4A  0EF6               	movlw	-10
 16532  019B4C  32E3               	rrcf	plusw1,f,c
 16533  019B4E  0EF5               	movlw	-11
 16534  019B50  32E3               	rrcf	plusw1,f,c
 16535  019B52  0EF4               	movlw	-12
 16536  019B54  32E3               	rrcf	plusw1,f,c
 16537  019B56  0EF3               	movlw	-13
 16538  019B58  32E3               	rrcf	plusw1,f,c
 16539  019B5A  0EF2               	movlw	-14
 16540  019B5C  32E3               	rrcf	plusw1,f,c
 16541  019B5E  0EF1               	movlw	-15
 16542  019B60  32E3               	rrcf	plusw1,f,c
 16543  019B62  0EF0               	movlw	-16
 16544  019B64  32E3               	rrcf	plusw1,f,c
 16545  019B66  0EEF               	movlw	-17
 16546  019B68  32E3               	rrcf	plusw1,f,c
 16547                           
 16548                           ;stkvar	_counter @ sp[(-1)+0]
 16549  019B6A  0EFF               	movlw	-1
 16550  019B6C  50E3               	movf	plusw1,w,c
 16551  019B6E  6E01               	movwf	btemp^0,c
 16552  019B70  0E01               	movlw	1
 16553  019B72  5E01               	subwf	btemp^0,f,c
 16554  019B74  0EFF               	movlw	-1
 16555  019B76  0060  F007  FFE3   	movff	btemp,plusw1
 16556  019B7C  A4D8               	btfss	status,2,c
 16557  019B7E  D7A4               	goto	u7610
 16558  019B80                     u7630:
 16559                           
 16560                           ;stkvar	_dividend @ sp[(-1)+-8]
 16561  019B80  0EF7               	movlw	247
 16562  019B82  24E1               	addwf	fsr1l,w,c
 16563  019B84  6ED9               	movwf	fsr2l,c
 16564  019B86  0EFF               	movlw	255
 16565  019B88  20E2               	addwfc	fsr1h,w,c
 16566  019B8A  6EDA               	movwf	fsr2h,c
 16567                           
 16568                           ;stkvar	?___lomod @ sp[(-1)+-8]
 16569  019B8C  0E08               	movlw	8
 16570  019B8E  6E01               	movwf	btemp^0,c
 16571  019B90  0EF7               	movlw	-9
 16572  019B92                     us764999:
 16573  019B92  006F FF7B FFE3     	movff	postinc2,plusw1
 16574  019B98  28E8               	incf	wreg,w,c
 16575  019B9A  2E01               	decfsz	btemp^0,f,c
 16576  019B9C  D7FA               	bra	us764999
 16577                           
 16578                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16579  019B9E  52E5               	movf	postdec1,f,c
 16580  019BA0  0012               	return		;funcret
 16581  019BA2                     __end_of___lomod:
 16582                           	opt callstack 0
 16583                           
 16584 ;; *************** function ___lodiv *****************
 16585 ;; Defined at:
 16586 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;  dividend        8  [STACK] unsigned long long 
 16589 ;;  divisor         8  [STACK] unsigned long long 
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;  quotient        8  [STACK] unsigned long long 
 16592 ;;  counter         1  [STACK] unsigned char 
 16593 ;; Return value:  Size  Location     Type
 16594 ;;                  8  [STACK] unsigned long long 
 16595 ;; Registers used:
 16596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 16597 ;; Tracked objects:
 16598 ;;		On entry : 0/2
 16599 ;;		On exit  : 0/0
 16600 ;;		Unchanged: 0/0
 16601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16606 ;;Total ram usage:        0 bytes
 16607 ;; Hardware stack levels used:    1
 16608 ;; Hardware stack levels required when called:   15
 16609 ;; This function calls:
 16610 ;;		Nothing
 16611 ;; This function is called by:
 16612 ;;		_utoa
 16613 ;; This function uses a reentrant model
 16614 ;;
 16615                           
 16616                           	psect	text62
 16617  01921A                     __ptext62:
 16618                           	opt callstack 0
 16619  01921A                     ___lodiv:
 16620                           	opt callstack 0
 16621                           
 16622                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 16623  01921A  0E09               	movlw	9
 16624  01921C  26E1               	addwf	fsr1l,f,c
 16625  01921E  0E00               	movlw	0
 16626  019220  22E2               	addwfc	fsr1h,f,c
 16627                           
 16628                           ;stkvar	_quotient @ sp[(-9)+0]
 16629                           
 16630                           ;incstack = 0
 16631 ;; hardware stack exceeded
 16632  019222  0E07               	movlw	7
 16633  019224  6E01               	movwf	btemp^0,c
 16634  019226  0EF7               	movlw	-9
 16635  019228                     u7541:
 16636  019228  6AE3               	clrf	plusw1,c
 16637  01922A  2AE8               	incf	wreg,f,c
 16638  01922C  0601               	decf	btemp^0,f,c
 16639  01922E  E2FC               	bc	u7541
 16640                           
 16641                           ;stkvar	_divisor @ sp[(-9)+-16]
 16642  019230  0EE7               	movlw	-25
 16643  019232  50E3               	movf	plusw1,w,c
 16644  019234  E116               	bnz	u7550
 16645  019236  0EE8               	movlw	-24
 16646  019238  50E3               	movf	plusw1,w,c
 16647  01923A  E113               	bnz	u7550
 16648  01923C  0EE9               	movlw	-23
 16649  01923E  50E3               	movf	plusw1,w,c
 16650  019240  E110               	bnz	u7550
 16651  019242  0EEA               	movlw	-22
 16652  019244  50E3               	movf	plusw1,w,c
 16653  019246  E10D               	bnz	u7550
 16654  019248  0EEB               	movlw	-21
 16655  01924A  50E3               	movf	plusw1,w,c
 16656  01924C  E10A               	bnz	u7550
 16657  01924E  0EEC               	movlw	-20
 16658  019250  50E3               	movf	plusw1,w,c
 16659  019252  E107               	bnz	u7550
 16660  019254  0EED               	movlw	-19
 16661  019256  50E3               	movf	plusw1,w,c
 16662  019258  E104               	bnz	u7550
 16663  01925A  0EEE               	movlw	-18
 16664  01925C  50E3               	movf	plusw1,w,c
 16665  01925E  B4D8               	btfsc	status,2,c
 16666  019260  D088               	goto	u7580
 16667  019262                     u7550:
 16668                           
 16669                           ;stkvar	_counter @ sp[(-9)+8]
 16670  019262  0EFF               	movlw	-1
 16671  019264  6AE3               	clrf	plusw1,c
 16672  019266  D012               	goto	L18
 16673  019268                     l9025:
 16674                           
 16675                           ;stkvar	_divisor @ sp[(-9)+-16]
 16676  019268  90D8               	bcf	status,0,c
 16677  01926A  0EE7               	movlw	-25
 16678  01926C  36E3               	rlcf	plusw1,f,c
 16679  01926E  0EE8               	movlw	-24
 16680  019270  36E3               	rlcf	plusw1,f,c
 16681  019272  0EE9               	movlw	-23
 16682  019274  36E3               	rlcf	plusw1,f,c
 16683  019276  0EEA               	movlw	-22
 16684  019278  36E3               	rlcf	plusw1,f,c
 16685  01927A  0EEB               	movlw	-21
 16686  01927C  36E3               	rlcf	plusw1,f,c
 16687  01927E  0EEC               	movlw	-20
 16688  019280  36E3               	rlcf	plusw1,f,c
 16689  019282  0EED               	movlw	-19
 16690  019284  36E3               	rlcf	plusw1,f,c
 16691  019286  0EEE               	movlw	-18
 16692  019288  36E3               	rlcf	plusw1,f,c
 16693                           
 16694                           ;stkvar	_counter @ sp[(-9)+8]
 16695  01928A  0EFF               	movlw	-1
 16696  01928C                     L18:
 16697  01928C  2AE3               	incf	plusw1,f,c
 16698                           
 16699                           ;stkvar	_divisor @ sp[(-9)+-16]
 16700  01928E  0EEE               	movlw	-18
 16701  019290  AEE3               	btfss	plusw1,7,c
 16702  019292  D7EA               	goto	l9025
 16703  019294                     u7560:
 16704                           
 16705                           ;stkvar	_quotient @ sp[(-9)+0]
 16706  019294  90D8               	bcf	status,0,c
 16707  019296  0EF7               	movlw	-9
 16708  019298  36E3               	rlcf	plusw1,f,c
 16709  01929A  0EF8               	movlw	-8
 16710  01929C  36E3               	rlcf	plusw1,f,c
 16711  01929E  0EF9               	movlw	-7
 16712  0192A0  36E3               	rlcf	plusw1,f,c
 16713  0192A2  0EFA               	movlw	-6
 16714  0192A4  36E3               	rlcf	plusw1,f,c
 16715  0192A6  0EFB               	movlw	-5
 16716  0192A8  36E3               	rlcf	plusw1,f,c
 16717  0192AA  0EFC               	movlw	-4
 16718  0192AC  36E3               	rlcf	plusw1,f,c
 16719  0192AE  0EFD               	movlw	-3
 16720  0192B0  36E3               	rlcf	plusw1,f,c
 16721  0192B2  0EFE               	movlw	-2
 16722  0192B4  36E3               	rlcf	plusw1,f,c
 16723                           
 16724                           ;stkvar	_divisor @ sp[(-9)+-16]
 16725                           ;stkvar	_dividend @ sp[(-9)+-8]
 16726  0192B6  50E1               	movf	fsr1l,w,c
 16727  0192B8  0FEF               	addlw	-17
 16728  0192BA  6ED9               	movwf	fsr2l,c
 16729  0192BC  50E2               	movf	fsr1h,w,c
 16730  0192BE  6EDA               	movwf	fsr2h,c
 16731  0192C0  0EFF               	movlw	255
 16732  0192C2  22DA               	addwfc	fsr2h,f,c
 16733  0192C4  0EE7               	movlw	-25
 16734  0192C6  50E3               	movf	plusw1,w,c
 16735  0192C8  5CDE               	subwf	postinc2,w,c
 16736  0192CA  0EE8               	movlw	-24
 16737  0192CC  50E3               	movf	plusw1,w,c
 16738  0192CE  58DE               	subwfb	postinc2,w,c
 16739  0192D0  0EE9               	movlw	-23
 16740  0192D2  50E3               	movf	plusw1,w,c
 16741  0192D4  58DE               	subwfb	postinc2,w,c
 16742  0192D6  0EEA               	movlw	-22
 16743  0192D8  50E3               	movf	plusw1,w,c
 16744  0192DA  58DE               	subwfb	postinc2,w,c
 16745  0192DC  0EEB               	movlw	-21
 16746  0192DE  50E3               	movf	plusw1,w,c
 16747  0192E0  58DE               	subwfb	postinc2,w,c
 16748  0192E2  0EEC               	movlw	-20
 16749  0192E4  50E3               	movf	plusw1,w,c
 16750  0192E6  58DE               	subwfb	postinc2,w,c
 16751  0192E8  0EED               	movlw	-19
 16752  0192EA  50E3               	movf	plusw1,w,c
 16753  0192EC  58DE               	subwfb	postinc2,w,c
 16754  0192EE  0EEE               	movlw	-18
 16755  0192F0  50E3               	movf	plusw1,w,c
 16756  0192F2  58DE               	subwfb	postinc2,w,c
 16757  0192F4  A0D8               	btfss	status,0,c
 16758  0192F6  D021               	goto	l9037
 16759                           
 16760                           ;stkvar	_divisor @ sp[(-9)+-16]
 16761                           ;stkvar	_dividend @ sp[(-9)+-8]
 16762  0192F8  50E1               	movf	fsr1l,w,c
 16763  0192FA  0FEF               	addlw	-17
 16764  0192FC  6ED9               	movwf	fsr2l,c
 16765  0192FE  50E2               	movf	fsr1h,w,c
 16766  019300  6EDA               	movwf	fsr2h,c
 16767  019302  0EFF               	movlw	255
 16768  019304  22DA               	addwfc	fsr2h,f,c
 16769  019306  0EE7               	movlw	-25
 16770  019308  50E3               	movf	plusw1,w,c
 16771  01930A  5EDE               	subwf	postinc2,f,c
 16772  01930C  0EE8               	movlw	-24
 16773  01930E  50E3               	movf	plusw1,w,c
 16774  019310  5ADE               	subwfb	postinc2,f,c
 16775  019312  0EE9               	movlw	-23
 16776  019314  50E3               	movf	plusw1,w,c
 16777  019316  5ADE               	subwfb	postinc2,f,c
 16778  019318  0EEA               	movlw	-22
 16779  01931A  50E3               	movf	plusw1,w,c
 16780  01931C  5ADE               	subwfb	postinc2,f,c
 16781  01931E  0EEB               	movlw	-21
 16782  019320  50E3               	movf	plusw1,w,c
 16783  019322  5ADE               	subwfb	postinc2,f,c
 16784  019324  0EEC               	movlw	-20
 16785  019326  50E3               	movf	plusw1,w,c
 16786  019328  5ADE               	subwfb	postinc2,f,c
 16787  01932A  0EED               	movlw	-19
 16788  01932C  50E3               	movf	plusw1,w,c
 16789  01932E  5ADE               	subwfb	postinc2,f,c
 16790  019330  0EEE               	movlw	-18
 16791  019332  50E3               	movf	plusw1,w,c
 16792  019334  5ADE               	subwfb	postinc2,f,c
 16793                           
 16794                           ;stkvar	_quotient @ sp[(-9)+0]
 16795  019336  0EF7               	movlw	-9
 16796  019338  80E3               	bsf	plusw1,0,c
 16797  01933A                     l9037:
 16798                           
 16799                           ;stkvar	_divisor @ sp[(-9)+-16]
 16800  01933A  90D8               	bcf	status,0,c
 16801  01933C  0EEE               	movlw	-18
 16802  01933E  32E3               	rrcf	plusw1,f,c
 16803  019340  0EED               	movlw	-19
 16804  019342  32E3               	rrcf	plusw1,f,c
 16805  019344  0EEC               	movlw	-20
 16806  019346  32E3               	rrcf	plusw1,f,c
 16807  019348  0EEB               	movlw	-21
 16808  01934A  32E3               	rrcf	plusw1,f,c
 16809  01934C  0EEA               	movlw	-22
 16810  01934E  32E3               	rrcf	plusw1,f,c
 16811  019350  0EE9               	movlw	-23
 16812  019352  32E3               	rrcf	plusw1,f,c
 16813  019354  0EE8               	movlw	-24
 16814  019356  32E3               	rrcf	plusw1,f,c
 16815  019358  0EE7               	movlw	-25
 16816  01935A  32E3               	rrcf	plusw1,f,c
 16817                           
 16818                           ;stkvar	_counter @ sp[(-9)+8]
 16819  01935C  0EFF               	movlw	-1
 16820  01935E  50E3               	movf	plusw1,w,c
 16821  019360  6E01               	movwf	btemp^0,c
 16822  019362  0E01               	movlw	1
 16823  019364  5E01               	subwf	btemp^0,f,c
 16824  019366  0EFF               	movlw	-1
 16825  019368  0060  F007  FFE3   	movff	btemp,plusw1
 16826  01936E  A4D8               	btfss	status,2,c
 16827  019370  D791               	goto	u7560
 16828  019372                     u7580:
 16829                           
 16830                           ;stkvar	_quotient @ sp[(-9)+0]
 16831  019372  0EF7               	movlw	247
 16832  019374  24E1               	addwf	fsr1l,w,c
 16833  019376  6ED9               	movwf	fsr2l,c
 16834  019378  0EFF               	movlw	255
 16835  01937A  20E2               	addwfc	fsr1h,w,c
 16836  01937C  6EDA               	movwf	fsr2h,c
 16837                           
 16838                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 16839  01937E  0E08               	movlw	8
 16840  019380  6E01               	movwf	btemp^0,c
 16841  019382  0EEF               	movlw	-17
 16842  019384                     us759999:
 16843  019384  006F FF7B FFE3     	movff	postinc2,plusw1
 16844  01938A  28E8               	incf	wreg,w,c
 16845  01938C  2E01               	decfsz	btemp^0,f,c
 16846  01938E  D7FA               	bra	us759999
 16847                           
 16848                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 16849  019390  0EF7               	movlw	247
 16850  019392  26E1               	addwf	fsr1l,f,c
 16851  019394  0EFF               	movlw	255
 16852  019396  22E2               	addwfc	fsr1h,f,c
 16853  019398  0012               	return		;funcret
 16854  01939A                     __end_of___lodiv:
 16855                           	opt callstack 0
 16856                           
 16857 ;; *************** function _strncmp *****************
 16858 ;; Defined at:
 16859 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;  _l              2  [STACK] PTR const unsigned char 
 16862 ;;		 -> ct(3), STR_75(127), STR_73(3), STR_72(3), 
 16863 ;;		 -> STR_71(19), STR_70(19), STR_69(19), STR_68(19), 
 16864 ;;		 -> STR_67(19), STR_66(19), STR_65(24), STR_64(15), 
 16865 ;;		 -> STR_63(15), STR_62(15), STR_61(10), STR_60(10), 
 16866 ;;		 -> STR_59(19), STR_58(19), STR_55(3), STR_54(3), 
 16867 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 16868 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 16869 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16870 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16871 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16872 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16873 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16874 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16875 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16876 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16877 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16878 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16879 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16880 ;;  _r              2  [STACK] PTR const unsigned char 
 16881 ;;		 -> STR_109(3), STR_105(3), STR_100(3), STR_95(3), 
 16882 ;;		 -> STR_90(3), STR_86(3), 
 16883 ;;  n               2  [STACK] unsigned int 
 16884 ;; Auto vars:     Size  Location     Type
 16885 ;;  r               2  [STACK] PTR const unsigned char 
 16886 ;;		 -> STR_109(3), STR_105(3), STR_100(3), STR_95(3), 
 16887 ;;		 -> STR_90(3), STR_86(3), 
 16888 ;;  l               2  [STACK] PTR const unsigned char 
 16889 ;;		 -> ct(3), STR_75(127), STR_73(3), STR_72(3), 
 16890 ;;		 -> STR_71(19), STR_70(19), STR_69(19), STR_68(19), 
 16891 ;;		 -> STR_67(19), STR_66(19), STR_65(24), STR_64(15), 
 16892 ;;		 -> STR_63(15), STR_62(15), STR_61(10), STR_60(10), 
 16893 ;;		 -> STR_59(19), STR_58(19), STR_55(3), STR_54(3), 
 16894 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(21), 
 16895 ;;		 -> STR_49(21), STR_48(21), STR_47(20), STR_46(20), 
 16896 ;;		 -> STR_45(21), STR_44(21), STR_43(21), STR_42(22), 
 16897 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 16898 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 16899 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 16900 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 16901 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 16902 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 16903 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 16904 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 16905 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 16906 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  2  [STACK] int 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 16911 ;; Tracked objects:
 16912 ;;		On entry : 0/0
 16913 ;;		On exit  : 0/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16920 ;;Total ram usage:        0 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:   15
 16923 ;; This function calls:
 16924 ;;		Nothing
 16925 ;; This function is called by:
 16926 ;;		_vfpfcnvrt
 16927 ;; This function uses a reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text63
 16931  018350                     __ptext63:
 16932                           	opt callstack 0
 16933  018350                     _strncmp:
 16934                           	opt callstack 0
 16935                           
 16936                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16937  018350  52E6               	movf	postinc1,f,c
 16938  018352  52E6               	movf	postinc1,f,c
 16939  018354  52E6               	movf	postinc1,f,c
 16940  018356  52E6               	movf	postinc1,f,c
 16941                           
 16942                           ;stkvar	__l @ sp[(-4)+-2]
 16943                           
 16944                           ;incstack = 0
 16945 ;; hardware stack exceeded
 16946  018358  0EFA               	movlw	-6
 16947  01835A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16948  018360  0EFB               	movlw	-5
 16949  018362  006F FF8C  F00C    	movff	plusw1,btemp+11
 16950                           
 16951                           ;stkvar	_l @ sp[(-4)+2]
 16952  018368  0EFF               	movlw	-1
 16953  01836A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16954  018370  0EFE               	movlw	-2
 16955  018372  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16956                           
 16957                           ;stkvar	__r @ sp[(-4)+-4]
 16958  018378  0EF8               	movlw	-8
 16959  01837A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16960  018380  0EF9               	movlw	-7
 16961  018382  006F FF8C  F00C    	movff	plusw1,btemp+11
 16962                           
 16963                           ;stkvar	_r @ sp[(-4)+0]
 16964  018388  0EFD               	movlw	-3
 16965  01838A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16966  018390  0EFC               	movlw	-4
 16967  018392  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16968                           
 16969                           ;stkvar	_n @ sp[(-4)+-6]
 16970  018398  0EF6               	movlw	-10
 16971  01839A  006F FF8C  F001    	movff	plusw1,btemp
 16972  0183A0  0E01               	movlw	1
 16973  0183A2  5E01               	subwf	btemp^0,f,c
 16974  0183A4  0EF6               	movlw	-10
 16975  0183A6  0060  F007  FFE3   	movff	btemp,plusw1
 16976  0183AC  0EF7               	movlw	-9
 16977  0183AE  006F FF8C  F001    	movff	plusw1,btemp
 16978  0183B4  0E00               	movlw	0
 16979  0183B6  5A01               	subwfb	btemp^0,f,c
 16980  0183B8  0EF7               	movlw	-9
 16981  0183BA  0060  F007  FFE3   	movff	btemp,plusw1
 16982  0183C0  0EF6               	movlw	-10
 16983  0183C2  28E3               	incf	plusw1,w,c
 16984  0183C4  E13F               	bnz	l9707
 16985  0183C6  0EF7               	movlw	-9
 16986  0183C8  28E3               	incf	plusw1,w,c
 16987  0183CA  A4D8               	btfss	status,2,c
 16988  0183CC  D03B               	goto	l9707
 16989  0183CE  0E00               	movlw	0
 16990  0183D0  6E01               	movwf	btemp^0,c
 16991  0183D2  0E00               	movlw	0
 16992  0183D4  6E02               	movwf	(btemp+1)^0,c
 16993  0183D6  D0C7               	goto	l3572
 16994  0183D8                     l9705:
 16995                           
 16996                           ;stkvar	_l @ sp[(-4)+2]
 16997  0183D8  0EFE               	movlw	-2
 16998  0183DA  50E3               	movf	plusw1,w,c
 16999  0183DC  0F01               	addlw	1
 17000  0183DE  6E01               	movwf	btemp^0,c
 17001  0183E0  0EFE               	movlw	-2
 17002  0183E2  0060  F007  FFE3   	movff	btemp,plusw1
 17003  0183E8  6A01               	clrf	btemp^0,c
 17004  0183EA  0EFF               	movlw	-1
 17005  0183EC  50E3               	movf	plusw1,w,c
 17006  0183EE  2001               	addwfc	btemp^0,w,c
 17007  0183F0  6E01               	movwf	btemp^0,c
 17008  0183F2  0EFF               	movlw	-1
 17009  0183F4  0060  F007  FFE3   	movff	btemp,plusw1
 17010                           
 17011                           ;stkvar	_r @ sp[(-4)+0]
 17012  0183FA  0EFC               	movlw	-4
 17013  0183FC  50E3               	movf	plusw1,w,c
 17014  0183FE  0F01               	addlw	1
 17015  018400  6E01               	movwf	btemp^0,c
 17016  018402  0EFC               	movlw	-4
 17017  018404  0060  F007  FFE3   	movff	btemp,plusw1
 17018  01840A  6A01               	clrf	btemp^0,c
 17019  01840C  0EFD               	movlw	-3
 17020  01840E  50E3               	movf	plusw1,w,c
 17021  018410  2001               	addwfc	btemp^0,w,c
 17022  018412  6E01               	movwf	btemp^0,c
 17023  018414  0EFD               	movlw	-3
 17024  018416  0060  F007  FFE3   	movff	btemp,plusw1
 17025                           
 17026                           ;stkvar	_n @ sp[(-4)+-6]
 17027  01841C  0EF6               	movlw	-10
 17028  01841E  006F FF8C  F001    	movff	plusw1,btemp
 17029  018424  0E01               	movlw	1
 17030  018426  5E01               	subwf	btemp^0,f,c
 17031  018428  0EF6               	movlw	-10
 17032  01842A  0060  F007  FFE3   	movff	btemp,plusw1
 17033  018430  0EF7               	movlw	-9
 17034  018432  006F FF8C  F001    	movff	plusw1,btemp
 17035  018438  0E00               	movlw	0
 17036  01843A  5A01               	subwfb	btemp^0,f,c
 17037  01843C  0EF7               	movlw	-9
 17038  01843E  0060  F007  FFE3   	movff	btemp,plusw1
 17039  018444                     l9707:
 17040                           
 17041                           ;stkvar	_l @ sp[(-4)+2]
 17042  018444  0EFE               	movlw	-2
 17043  018446  006F FF8F FFF6     	movff	plusw1,tblptrl
 17044  01844C  0EFF               	movlw	-1
 17045  01844E  006F FF8F FFF7     	movff	plusw1,tblptrh
 17046  018454  0E00               	movlw	low (__mediumconst shr (0+16))
 17047  018456  6EF8               	movwf	tblptru,c
 17048  018458  0E1F               	movlw	(high __ramtop+-1)
 17049  01845A  64F7               	cpfsgt	tblptrh,c
 17050  01845C  D003               	bra	u8837
 17051  01845E  0008               	tblrd		*
 17052  018460  50F5               	movf	tablat,w,c
 17053  018462  D007               	bra	u8830
 17054  018464                     u8837:
 17055  018464  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17056  01846A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17057  018470  50EF               	movf	indf0,w,c
 17058  018472                     u8830:
 17059  018472  0900               	iorlw	0
 17060  018474  B4D8               	btfsc	status,2,c
 17061  018476  D04A               	goto	u8870
 17062                           
 17063                           ;stkvar	_r @ sp[(-4)+0]
 17064  018478  50E1               	movf	fsr1l,w,c
 17065  01847A  0FFC               	addlw	-4
 17066  01847C  6ED9               	movwf	fsr2l,c
 17067  01847E  50E2               	movf	fsr1h,w,c
 17068  018480  6EDA               	movwf	fsr2h,c
 17069  018482  0EFF               	movlw	255
 17070  018484  22DA               	addwfc	fsr2h,f,c
 17071  018486  006F FF7B FFF6     	movff	postinc2,tblptrl
 17072  01848C  006F FF77 FFF7     	movff	postdec2,tblptrh
 17073  018492                     	if	0	;tblptru may be non-zero
 17074  018492                     	endif
 17075  018492                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17076  018492  0E00               	movlw	low (__mediumconst shr (0+16))
 17077  018494  6EF8               	movwf	tblptru,c
 17078  018496                     	endif
 17079  018496  0008               	tblrd		*
 17080  018498  50F5               	movf	tablat,w,c
 17081  01849A  0900               	iorlw	0
 17082  01849C  B4D8               	btfsc	status,2,c
 17083  01849E  D036               	goto	u8870
 17084                           
 17085                           ;stkvar	_n @ sp[(-4)+-6]
 17086  0184A0  0EF6               	movlw	-10
 17087  0184A2  006F FF8C  F001    	movff	plusw1,btemp
 17088  0184A8  0EF7               	movlw	-9
 17089  0184AA  50E3               	movf	plusw1,w,c
 17090  0184AC  1001               	iorwf	btemp^0,w,c
 17091  0184AE  B4D8               	btfsc	status,2,c
 17092  0184B0  D02D               	goto	u8870
 17093                           
 17094                           ;stkvar	_r @ sp[(-4)+0]
 17095  0184B2  50E1               	movf	fsr1l,w,c
 17096  0184B4  0FFC               	addlw	-4
 17097  0184B6  6ED9               	movwf	fsr2l,c
 17098  0184B8  50E2               	movf	fsr1h,w,c
 17099  0184BA  6EDA               	movwf	fsr2h,c
 17100  0184BC  0EFF               	movlw	255
 17101  0184BE  22DA               	addwfc	fsr2h,f,c
 17102  0184C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 17103  0184C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 17104  0184CC                     	if	0	;tblptru may be non-zero
 17105  0184CC                     	endif
 17106  0184CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17107  0184CC  0E00               	movlw	low (__mediumconst shr (0+16))
 17108  0184CE  6EF8               	movwf	tblptru,c
 17109  0184D0                     	endif
 17110  0184D0  0008               	tblrd		*
 17111  0184D2  006F FFD4  F00C    	movff	tablat,btemp+11
 17112                           
 17113                           ;stkvar	_l @ sp[(-4)+2]
 17114  0184D8  0EFE               	movlw	-2
 17115  0184DA  006F FF8F FFF6     	movff	plusw1,tblptrl
 17116  0184E0  0EFF               	movlw	-1
 17117  0184E2  006F FF8F FFF7     	movff	plusw1,tblptrh
 17118  0184E8  0E00               	movlw	low (__mediumconst shr (0+16))
 17119  0184EA  6EF8               	movwf	tblptru,c
 17120  0184EC  0E1F               	movlw	(high __ramtop+-1)
 17121  0184EE  64F7               	cpfsgt	tblptrh,c
 17122  0184F0  D003               	bra	u8877
 17123  0184F2  0008               	tblrd		*
 17124  0184F4  50F5               	movf	tablat,w,c
 17125  0184F6  D007               	bra	u8875
 17126  0184F8                     u8877:
 17127  0184F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17128  0184FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17129  018504  50EF               	movf	indf0,w,c
 17130  018506                     u8875:
 17131  018506  180C               	xorwf	(btemp+11)^0,w,c
 17132  018508  B4D8               	btfsc	status,2,c
 17133  01850A  D766               	goto	l9705
 17134  01850C                     u8870:
 17135                           
 17136                           ;stkvar	_l @ sp[(-4)+2]
 17137  01850C  0EFE               	movlw	-2
 17138  01850E  006F FF8F FFF6     	movff	plusw1,tblptrl
 17139  018514  0EFF               	movlw	-1
 17140  018516  006F FF8F FFF7     	movff	plusw1,tblptrh
 17141  01851C  0E00               	movlw	low (__mediumconst shr (0+16))
 17142  01851E  6EF8               	movwf	tblptru,c
 17143  018520  0E1F               	movlw	(high __ramtop+-1)
 17144  018522  64F7               	cpfsgt	tblptrh,c
 17145  018524  D003               	bra	u8887
 17146  018526  0008               	tblrd		*
 17147  018528  50F5               	movf	tablat,w,c
 17148  01852A  D007               	bra	u8880
 17149  01852C                     u8887:
 17150  01852C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17151  018532  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17152  018538  50EF               	movf	indf0,w,c
 17153  01853A                     u8880:
 17154  01853A  6E01               	movwf	btemp^0,c
 17155  01853C  6A02               	clrf	(btemp+1)^0,c
 17156                           
 17157                           ;stkvar	_r @ sp[(-4)+0]
 17158  01853E  50E1               	movf	fsr1l,w,c
 17159  018540  0FFC               	addlw	-4
 17160  018542  6ED9               	movwf	fsr2l,c
 17161  018544  50E2               	movf	fsr1h,w,c
 17162  018546  6EDA               	movwf	fsr2h,c
 17163  018548  0EFF               	movlw	255
 17164  01854A  22DA               	addwfc	fsr2h,f,c
 17165  01854C  006F FF7B FFF6     	movff	postinc2,tblptrl
 17166  018552  006F FF77 FFF7     	movff	postdec2,tblptrh
 17167  018558                     	if	0	;tblptru may be non-zero
 17168  018558                     	endif
 17169  018558                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17170  018558  0E00               	movlw	low (__mediumconst shr (0+16))
 17171  01855A  6EF8               	movwf	tblptru,c
 17172  01855C                     	endif
 17173  01855C  0008               	tblrd		*
 17174  01855E  50F5               	movf	tablat,w,c
 17175  018560  5E01               	subwf	btemp^0,f,c
 17176  018562  0E00               	movlw	0
 17177  018564  5A02               	subwfb	(btemp+1)^0,f,c
 17178  018566                     l3572:
 17179                           
 17180                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 17181  018566  0EF6               	movlw	246
 17182  018568  26E1               	addwf	fsr1l,f,c
 17183  01856A  0EFF               	movlw	255
 17184  01856C  22E2               	addwfc	fsr1h,f,c
 17185  01856E  0012               	return		;funcret
 17186  018570                     __end_of_strncmp:
 17187                           	opt callstack 0
 17188                           
 17189 ;; *************** function _stoa *****************
 17190 ;; Defined at:
 17191 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17194 ;;		 -> f(6), NULL(0), 
 17195 ;;  s               2  [STACK] PTR unsigned char 
 17196 ;;		 -> ?_printf(2), ?_sprintf(2), STR_57(9), STR_56(12), 
 17197 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 17198 ;;		 -> V(192), 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  nuls            7  [STACK] unsigned char [7]
 17201 ;;  l               2  [STACK] int 
 17202 ;;  p               2  [STACK] int 
 17203 ;;  cp              2  [STACK] PTR unsigned char 
 17204 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_57(9), 
 17205 ;;		 -> STR_56(12), D.lcd(480), D(482), T(144), 
 17206 ;;		 -> STR_3(5), V(192), 
 17207 ;;  w               2  [STACK] int 
 17208 ;;  i               2  [STACK] int 
 17209 ;; Return value:  Size  Location     Type
 17210 ;;                  2  [STACK] int 
 17211 ;; Registers used:
 17212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17213 ;; Tracked objects:
 17214 ;;		On entry : 0/0
 17215 ;;		On exit  : 0/0
 17216 ;;		Unchanged: 0/0
 17217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17222 ;;Total ram usage:        0 bytes
 17223 ;; Hardware stack levels used:    1
 17224 ;; Hardware stack levels required when called:   18
 17225 ;; This function calls:
 17226 ;;		_fputc
 17227 ;;		_strlen
 17228 ;; This function is called by:
 17229 ;;		_vfpfcnvrt
 17230 ;; This function uses a reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text64
 17234  01747E                     __ptext64:
 17235                           	opt callstack 0
 17236  01747E                     _stoa:
 17237                           	opt callstack 0
 17238                           
 17239                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17240  01747E  0E11               	movlw	17
 17241  017480  26E1               	addwf	fsr1l,f,c
 17242  017482  0E00               	movlw	0
 17243  017484  22E2               	addwfc	fsr1h,f,c
 17244                           
 17245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 17246                           
 17247                           ;incstack = 0
 17248 ;; hardware stack exceeded
 17249  017486  EE20  F100         	lfsr	2,stoa@F1166
 17250                           
 17251                           ;stkvar	_nuls @ sp[(-17)+0]
 17252  01748A  0E07               	movlw	7
 17253  01748C  6E01               	movwf	btemp^0,c
 17254  01748E  0EEF               	movlw	-17
 17255  017490                     us1205999:
 17256  017490  006F FF7B FFE3     	movff	postinc2,plusw1
 17257  017496  28E8               	incf	wreg,w,c
 17258  017498  2E01               	decfsz	btemp^0,f,c
 17259  01749A  D7FA               	bra	us1205999
 17260                           
 17261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 17262                           ;stkvar	_s @ sp[(-17)+-4]
 17263  01749C  0EEB               	movlw	-21
 17264  01749E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17265  0174A4  0EEC               	movlw	-20
 17266  0174A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17267                           
 17268                           ;stkvar	_cp @ sp[(-17)+11]
 17269  0174AC  0EFB               	movlw	-5
 17270  0174AE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17271  0174B4  0EFA               	movlw	-6
 17272  0174B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17273                           
 17274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 17275                           ;stkvar	_cp @ sp[(-17)+11]
 17276  0174BC  0EFA               	movlw	-6
 17277  0174BE  006F FF8C  F001    	movff	plusw1,btemp
 17278  0174C4  0EFB               	movlw	-5
 17279  0174C6  50E3               	movf	plusw1,w,c
 17280  0174C8  1001               	iorwf	btemp^0,w,c
 17281  0174CA  A4D8               	btfss	status,2,c
 17282  0174CC  D00E               	goto	l12861
 17283                           
 17284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 17285                           ;stkvar	_nuls @ sp[(-17)+0]
 17286  0174CE  0EEF               	movlw	239
 17287  0174D0  24E1               	addwf	fsr1l,w,c
 17288  0174D2  6E0B               	movwf	(btemp+10)^0,c
 17289  0174D4  0EFF               	movlw	255
 17290  0174D6  20E2               	addwfc	fsr1h,w,c
 17291  0174D8  6E0C               	movwf	(btemp+11)^0,c
 17292                           
 17293                           ;stkvar	_cp @ sp[(-17)+11]
 17294  0174DA  0EFB               	movlw	-5
 17295  0174DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17296  0174E2  0EFA               	movlw	-6
 17297  0174E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17298  0174EA                     l12861:
 17299                           
 17300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 17301                           ;stkvar	_cp @ sp[(-17)+11]
 17302  0174EA  0EFA               	movlw	-6
 17303  0174EC  006F FF8F FFE6     	movff	plusw1,postinc1
 17304  0174F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17305  0174F8  EC6B  F0D8         	call	_strlen	;wreg free
 17306                           
 17307                           ;stkvar	_l @ sp[(-17)+7]
 17308  0174FC  0EF6               	movlw	-10
 17309  0174FE  0060  F007  FFE3   	movff	btemp,plusw1
 17310  017504  0EF7               	movlw	-9
 17311  017506  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17312                           
 17313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 17314                           ;stkvar	_p @ sp[(-17)+9]
 17315  01750C  0EF8               	movlw	-8
 17316  01750E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17317  017514  0EF9               	movlw	-7
 17318  017516  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17319                           
 17320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 17321                           ;stkvar	_p @ sp[(-17)+9]
 17322  01751C  0EF9               	movlw	-7
 17323  01751E  BEE3               	btfsc	plusw1,7,c
 17324  017520  D023               	goto	l2397
 17325                           
 17326                           ;stkvar	_l @ sp[(-17)+7]
 17327                           ;stkvar	_p @ sp[(-17)+9]
 17328  017522  50E1               	movf	fsr1l,w,c
 17329  017524  0FF8               	addlw	-8
 17330  017526  6ED9               	movwf	fsr2l,c
 17331  017528  50E2               	movf	fsr1h,w,c
 17332  01752A  6EDA               	movwf	fsr2h,c
 17333  01752C  0EFF               	movlw	255
 17334  01752E  22DA               	addwfc	fsr2h,f,c
 17335  017530  0EF6               	movlw	-10
 17336  017532  50E3               	movf	plusw1,w,c
 17337  017534  5CDE               	subwf	postinc2,w,c
 17338  017536  50DE               	movf	postinc2,w,c
 17339  017538  0A80               	xorlw	128
 17340  01753A  6E01               	movwf	btemp^0,c
 17341  01753C  0EF7               	movlw	-9
 17342  01753E  50E3               	movf	plusw1,w,c
 17343  017540  0A80               	xorlw	128
 17344  017542  5801               	subwfb	btemp^0,w,c
 17345  017544  B0D8               	btfsc	status,0,c
 17346  017546  D010               	goto	l2397
 17347                           
 17348                           ;stkvar	_p @ sp[(-17)+9]
 17349                           ;stkvar	_l @ sp[(-17)+7]
 17350  017548  0EF8               	movlw	-8
 17351  01754A  006F FF8C  F001    	movff	plusw1,btemp
 17352  017550  0EF6               	movlw	-10
 17353  017552  0060  F007  FFE3   	movff	btemp,plusw1
 17354  017558  0EF9               	movlw	-7
 17355  01755A  006F FF8C  F001    	movff	plusw1,btemp
 17356  017560  0EF7               	movlw	-9
 17357  017562  0060  F007  FFE3   	movff	btemp,plusw1
 17358  017568                     l2397:
 17359                           
 17360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 17361                           ;stkvar	_l @ sp[(-17)+7]
 17362                           ;stkvar	_p @ sp[(-17)+9]
 17363  017568  0EF6               	movlw	-10
 17364  01756A  006F FF8C  F001    	movff	plusw1,btemp
 17365  017570  0EF8               	movlw	-8
 17366  017572  0060  F007  FFE3   	movff	btemp,plusw1
 17367  017578  0EF7               	movlw	-9
 17368  01757A  006F FF8C  F001    	movff	plusw1,btemp
 17369  017580  0EF9               	movlw	-7
 17370  017582  0060  F007  FFE3   	movff	btemp,plusw1
 17371                           
 17372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 17373                           ;stkvar	_w @ sp[(-17)+13]
 17374  017588  0EFC               	movlw	-4
 17375  01758A  0060  F0EB  FFE3   	movff	_width,plusw1
 17376  017590  0EFD               	movlw	-3
 17377  017592  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17378                           
 17379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 17380  017598  A03E               	btfss	_flags^0,0,c
 17381  01759A  D01F               	goto	l12881
 17382  01759C  D031               	goto	u12100
 17383  01759E                     l12877:
 17384                           
 17385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 17386                           ;stkvar	_fp @ sp[(-17)+-2]
 17387  01759E  0EED               	movlw	-19
 17388  0175A0  006F FF8F FFE6     	movff	plusw1,postinc1
 17389  0175A6  006F FF8F FFE6     	movff	plusw1,postinc1
 17390  0175AC  0E20               	movlw	32
 17391  0175AE  6EE6               	movwf	postinc1,c
 17392  0175B0  0E00               	movlw	0
 17393  0175B2  6EE6               	movwf	postinc1,c
 17394  0175B4  EC04  F0CF         	call	_fputc	;wreg free
 17395                           
 17396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 17397                           ;stkvar	_l @ sp[(-17)+7]
 17398  0175B8  0EF6               	movlw	-10
 17399  0175BA  50E3               	movf	plusw1,w,c
 17400  0175BC  0F01               	addlw	1
 17401  0175BE  6E01               	movwf	btemp^0,c
 17402  0175C0  0EF6               	movlw	-10
 17403  0175C2  0060  F007  FFE3   	movff	btemp,plusw1
 17404  0175C8  6A01               	clrf	btemp^0,c
 17405  0175CA  0EF7               	movlw	-9
 17406  0175CC  50E3               	movf	plusw1,w,c
 17407  0175CE  2001               	addwfc	btemp^0,w,c
 17408  0175D0  6E01               	movwf	btemp^0,c
 17409  0175D2  0EF7               	movlw	-9
 17410  0175D4  0060  F007  FFE3   	movff	btemp,plusw1
 17411  0175DA                     l12881:
 17412                           
 17413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 17414                           ;stkvar	_w @ sp[(-17)+13]
 17415                           ;stkvar	_l @ sp[(-17)+7]
 17416  0175DA  50E1               	movf	fsr1l,w,c
 17417  0175DC  0FF6               	addlw	-10
 17418  0175DE  6ED9               	movwf	fsr2l,c
 17419  0175E0  50E2               	movf	fsr1h,w,c
 17420  0175E2  6EDA               	movwf	fsr2h,c
 17421  0175E4  0EFF               	movlw	255
 17422  0175E6  22DA               	addwfc	fsr2h,f,c
 17423  0175E8  0EFC               	movlw	-4
 17424  0175EA  50E3               	movf	plusw1,w,c
 17425  0175EC  5CDE               	subwf	postinc2,w,c
 17426  0175EE  50DE               	movf	postinc2,w,c
 17427  0175F0  0A80               	xorlw	128
 17428  0175F2  6E01               	movwf	btemp^0,c
 17429  0175F4  0EFD               	movlw	-3
 17430  0175F6  50E3               	movf	plusw1,w,c
 17431  0175F8  0A80               	xorlw	128
 17432  0175FA  5801               	subwfb	btemp^0,w,c
 17433  0175FC  A0D8               	btfss	status,0,c
 17434  0175FE  D7CF               	goto	l12877
 17435  017600                     u12100:
 17436                           
 17437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 17438                           ;stkvar	_i @ sp[(-17)+15]
 17439  017600  0EFE               	movlw	-2
 17440  017602  6AE3               	clrf	plusw1,c
 17441  017604  0EFF               	movlw	-1
 17442  017606  6AE3               	clrf	plusw1,c
 17443                           
 17444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17445  017608  D045               	goto	l12891
 17446  01760A                     l12885:
 17447                           
 17448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 17449                           ;stkvar	_fp @ sp[(-17)+-2]
 17450  01760A  0EED               	movlw	-19
 17451  01760C  006F FF8F FFE6     	movff	plusw1,postinc1
 17452  017612  006F FF8F FFE6     	movff	plusw1,postinc1
 17453                           
 17454                           ;stkvar	_cp @ sp[(-19)+11]
 17455  017618  0EF8               	movlw	-8
 17456  01761A  006F FF8F FFF6     	movff	plusw1,tblptrl
 17457  017620  0EF9               	movlw	-7
 17458  017622  006F FF8F FFF7     	movff	plusw1,tblptrh
 17459  017628  0E00               	movlw	low (__mediumconst shr (0+16))
 17460  01762A  6EF8               	movwf	tblptru,c
 17461  01762C  0E1F               	movlw	(high __ramtop+-1)
 17462  01762E  64F7               	cpfsgt	tblptrh,c
 17463  017630  D003               	bra	u12117
 17464  017632  0008               	tblrd		*
 17465  017634  50F5               	movf	tablat,w,c
 17466  017636  D007               	bra	u12110
 17467  017638                     u12117:
 17468  017638  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17469  01763E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17470  017644  50EF               	movf	indf0,w,c
 17471  017646                     u12110:
 17472  017646  6EE6               	movwf	postinc1,c
 17473  017648  0E00               	movlw	0
 17474  01764A  6EE6               	movwf	postinc1,c
 17475  01764C  EC04  F0CF         	call	_fputc	;wreg free
 17476                           
 17477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 17478                           ;stkvar	_cp @ sp[(-17)+11]
 17479  017650  0EFA               	movlw	-6
 17480  017652  50E3               	movf	plusw1,w,c
 17481  017654  0F01               	addlw	1
 17482  017656  6E01               	movwf	btemp^0,c
 17483  017658  0EFA               	movlw	-6
 17484  01765A  0060  F007  FFE3   	movff	btemp,plusw1
 17485  017660  6A01               	clrf	btemp^0,c
 17486  017662  0EFB               	movlw	-5
 17487  017664  50E3               	movf	plusw1,w,c
 17488  017666  2001               	addwfc	btemp^0,w,c
 17489  017668  6E01               	movwf	btemp^0,c
 17490  01766A  0EFB               	movlw	-5
 17491  01766C  0060  F007  FFE3   	movff	btemp,plusw1
 17492                           
 17493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 17494                           ;stkvar	_i @ sp[(-17)+15]
 17495  017672  0EFE               	movlw	-2
 17496  017674  50E3               	movf	plusw1,w,c
 17497  017676  0F01               	addlw	1
 17498  017678  6E01               	movwf	btemp^0,c
 17499  01767A  0EFE               	movlw	-2
 17500  01767C  0060  F007  FFE3   	movff	btemp,plusw1
 17501  017682  6A01               	clrf	btemp^0,c
 17502  017684  0EFF               	movlw	-1
 17503  017686  50E3               	movf	plusw1,w,c
 17504  017688  2001               	addwfc	btemp^0,w,c
 17505  01768A  6E01               	movwf	btemp^0,c
 17506  01768C  0EFF               	movlw	-1
 17507  01768E  0060  F007  FFE3   	movff	btemp,plusw1
 17508  017694                     l12891:
 17509                           
 17510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 17511                           ;stkvar	_p @ sp[(-17)+9]
 17512                           ;stkvar	_i @ sp[(-17)+15]
 17513  017694  50E1               	movf	fsr1l,w,c
 17514  017696  0FFE               	addlw	-2
 17515  017698  6ED9               	movwf	fsr2l,c
 17516  01769A  50E2               	movf	fsr1h,w,c
 17517  01769C  6EDA               	movwf	fsr2h,c
 17518  01769E  0EFF               	movlw	255
 17519  0176A0  22DA               	addwfc	fsr2h,f,c
 17520  0176A2  0EF8               	movlw	-8
 17521  0176A4  50E3               	movf	plusw1,w,c
 17522  0176A6  5CDE               	subwf	postinc2,w,c
 17523  0176A8  50DE               	movf	postinc2,w,c
 17524  0176AA  0A80               	xorlw	128
 17525  0176AC  6E01               	movwf	btemp^0,c
 17526  0176AE  0EF9               	movlw	-7
 17527  0176B0  50E3               	movf	plusw1,w,c
 17528  0176B2  0A80               	xorlw	128
 17529  0176B4  5801               	subwfb	btemp^0,w,c
 17530  0176B6  A0D8               	btfss	status,0,c
 17531  0176B8  D7A8               	goto	l12885
 17532                           
 17533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 17534  0176BA  B03E               	btfsc	_flags^0,0,c
 17535  0176BC  D01F               	goto	l12899
 17536  0176BE  D031               	goto	u12140
 17537  0176C0                     l12895:
 17538                           
 17539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 17540                           ;stkvar	_fp @ sp[(-17)+-2]
 17541  0176C0  0EED               	movlw	-19
 17542  0176C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17543  0176C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17544  0176CE  0E20               	movlw	32
 17545  0176D0  6EE6               	movwf	postinc1,c
 17546  0176D2  0E00               	movlw	0
 17547  0176D4  6EE6               	movwf	postinc1,c
 17548  0176D6  EC04  F0CF         	call	_fputc	;wreg free
 17549                           
 17550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 17551                           ;stkvar	_l @ sp[(-17)+7]
 17552  0176DA  0EF6               	movlw	-10
 17553  0176DC  50E3               	movf	plusw1,w,c
 17554  0176DE  0F01               	addlw	1
 17555  0176E0  6E01               	movwf	btemp^0,c
 17556  0176E2  0EF6               	movlw	-10
 17557  0176E4  0060  F007  FFE3   	movff	btemp,plusw1
 17558  0176EA  6A01               	clrf	btemp^0,c
 17559  0176EC  0EF7               	movlw	-9
 17560  0176EE  50E3               	movf	plusw1,w,c
 17561  0176F0  2001               	addwfc	btemp^0,w,c
 17562  0176F2  6E01               	movwf	btemp^0,c
 17563  0176F4  0EF7               	movlw	-9
 17564  0176F6  0060  F007  FFE3   	movff	btemp,plusw1
 17565  0176FC                     l12899:
 17566                           
 17567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 17568                           ;stkvar	_w @ sp[(-17)+13]
 17569                           ;stkvar	_l @ sp[(-17)+7]
 17570  0176FC  50E1               	movf	fsr1l,w,c
 17571  0176FE  0FF6               	addlw	-10
 17572  017700  6ED9               	movwf	fsr2l,c
 17573  017702  50E2               	movf	fsr1h,w,c
 17574  017704  6EDA               	movwf	fsr2h,c
 17575  017706  0EFF               	movlw	255
 17576  017708  22DA               	addwfc	fsr2h,f,c
 17577  01770A  0EFC               	movlw	-4
 17578  01770C  50E3               	movf	plusw1,w,c
 17579  01770E  5CDE               	subwf	postinc2,w,c
 17580  017710  50DE               	movf	postinc2,w,c
 17581  017712  0A80               	xorlw	128
 17582  017714  6E01               	movwf	btemp^0,c
 17583  017716  0EFD               	movlw	-3
 17584  017718  50E3               	movf	plusw1,w,c
 17585  01771A  0A80               	xorlw	128
 17586  01771C  5801               	subwfb	btemp^0,w,c
 17587  01771E  A0D8               	btfss	status,0,c
 17588  017720  D7CF               	goto	l12895
 17589  017722                     u12140:
 17590                           
 17591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 17592                           ;stkvar	_l @ sp[(-17)+7]
 17593  017722  0EF6               	movlw	-10
 17594  017724  006F FF8C  F001    	movff	plusw1,btemp
 17595  01772A  0EF7               	movlw	-9
 17596  01772C  006F FF8C  F002    	movff	plusw1,btemp+1
 17597                           
 17598                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 17599  017732  0EEB               	movlw	235
 17600  017734  26E1               	addwf	fsr1l,f,c
 17601  017736  0EFF               	movlw	255
 17602  017738  22E2               	addwfc	fsr1h,f,c
 17603  01773A  0012               	return		;funcret
 17604  01773C                     __end_of_stoa:
 17605                           	opt callstack 0
 17606                           
 17607 ;; *************** function _efgtoa *****************
 17608 ;; Defined at:
 17609 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17612 ;;		 -> f(6), NULL(0), 
 17613 ;;  f               4  [STACK] PTR struct _IO_FILE
 17614 ;;  c               1  [STACK] unsigned char 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  u               4  [STACK] unsigned char 
 17617 ;;  g               4  [STACK] unsigned char 
 17618 ;;  l               4  [STACK] unsigned char 
 17619 ;;  h               4  [STACK] unsigned char 
 17620 ;;  ou              4  [STACK] unsigned char 
 17621 ;;  n               2  [STACK] int 
 17622 ;;  e               2  [STACK] int 
 17623 ;;  i               2  [STACK] int 
 17624 ;;  w               2  [STACK] int 
 17625 ;;  p               2  [STACK] int 
 17626 ;;  sign            2  [STACK] int 
 17627 ;;  d               2  [STACK] int 
 17628 ;;  ne              2  [STACK] int 
 17629 ;;  m               2  [STACK] int 
 17630 ;;  pp              2  [STACK] int 
 17631 ;;  t               2  [STACK] int 
 17632 ;;  mode            1  [STACK] unsigned char 
 17633 ;;  nmode           1  [STACK] unsigned char 
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  2  [STACK] int 
 17636 ;; Registers used:
 17637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17647 ;;Total ram usage:        0 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:   20
 17650 ;; This function calls:
 17651 ;;		___awdiv
 17652 ;;		___awmod
 17653 ;;		___fladd
 17654 ;;		___fldiv
 17655 ;;		___fleq
 17656 ;;		___flge
 17657 ;;		___flmul
 17658 ;;		___flneg
 17659 ;;		___flsub
 17660 ;;		___fltol
 17661 ;;		___fpclassifyf
 17662 ;;		_floorf
 17663 ;;		_isupper
 17664 ;;		_pad
 17665 ;;		_strcpy
 17666 ;;		_tolower
 17667 ;; This function is called by:
 17668 ;;		_vfpfcnvrt
 17669 ;; This function uses a reentrant model
 17670 ;;
 17671                           
 17672                           	psect	text65
 17673  010000                     __ptext65:
 17674                           	opt callstack 0
 17675  010000                     _efgtoa:
 17676                           	opt callstack 0
 17677                           
 17678                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17679  010000  0E38               	movlw	56
 17680  010002  26E1               	addwf	fsr1l,f,c
 17681  010004  0E00               	movlw	0
 17682  010006  22E2               	addwfc	fsr1h,f,c
 17683                           
 17684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 17685                           ;stkvar	_sign @ sp[(-56)+42]
 17686                           
 17687                           ;incstack = 0
 17688 ;; hardware stack exceeded
 17689  010008  0EF2               	movlw	-14
 17690  01000A  6AE3               	clrf	plusw1,c
 17691  01000C  0EF3               	movlw	-13
 17692  01000E  6AE3               	clrf	plusw1,c
 17693                           
 17694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 17695                           ;stkvar	_f @ sp[(-56)+-6]
 17696  010010  0EC2               	movlw	-62
 17697  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 17698  010018  0EC3               	movlw	-61
 17699  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17700  010020  0EC4               	movlw	-60
 17701  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 17702  010028  0EC5               	movlw	-59
 17703  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17704                           
 17705                           ;stkvar	_g @ sp[(-56)+16]
 17706  010030  0ED8               	movlw	-40
 17707  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 17708  010038  0ED9               	movlw	-39
 17709  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17710  010040  0EDA               	movlw	-38
 17711  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17712  010048  0EDB               	movlw	-37
 17713  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17714                           
 17715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 17716                           ;stkvar	_g @ sp[(-56)+16]
 17717  010050  0EDB               	movlw	-37
 17718  010052  AEE3               	btfss	plusw1,7,c
 17719  010054  D02B               	goto	l12559
 17720                           
 17721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 17722  010056  0E01               	movlw	1
 17723  010058  6E0B               	movwf	(btemp+10)^0,c
 17724  01005A  0E00               	movlw	0
 17725  01005C  6E0C               	movwf	(btemp+11)^0,c
 17726                           
 17727                           ;stkvar	_sign @ sp[(-56)+42]
 17728  01005E  0EF2               	movlw	-14
 17729  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17730  010066  0EF3               	movlw	-13
 17731  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 17732                           
 17733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 17734                           ;stkvar	_g @ sp[(-56)+16]
 17735  01006E  0ED8               	movlw	-40
 17736  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 17737  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 17738  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 17739  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 17740  010088  ECA7  F0DE         	call	___flneg	;wreg free
 17741                           
 17742                           ;stkvar	_g @ sp[(-56)+16]
 17743  01008C  0ED8               	movlw	-40
 17744  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 17745  010094  0ED9               	movlw	-39
 17746  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17747  01009C  0EDA               	movlw	-38
 17748  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17749  0100A4  0EDB               	movlw	-37
 17750  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 17751  0100AC                     l12559:
 17752                           
 17753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 17754                           ;stkvar	_n @ sp[(-56)+32]
 17755  0100AC  0EE8               	movlw	-24
 17756  0100AE  6AE3               	clrf	plusw1,c
 17757  0100B0  0EE9               	movlw	-23
 17758  0100B2  6AE3               	clrf	plusw1,c
 17759                           
 17760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 17761                           ;stkvar	_w @ sp[(-56)+38]
 17762  0100B4  0EEE               	movlw	-18
 17763  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 17764  0100BC  0EEF               	movlw	-17
 17765  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17766                           
 17767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 17768                           ;stkvar	_sign @ sp[(-56)+42]
 17769  0100C4  0EF2               	movlw	-14
 17770  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 17771  0100CC  0EF3               	movlw	-13
 17772  0100CE  50E3               	movf	plusw1,w,c
 17773  0100D0  1001               	iorwf	btemp^0,w,c
 17774  0100D2  A4D8               	btfss	status,2,c
 17775  0100D4  D002               	goto	u11550
 17776  0100D6  A43E               	btfss	_flags^0,2,c
 17777  0100D8  D036               	goto	l12579
 17778  0100DA                     u11550:
 17779                           
 17780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 17781                           ;stkvar	_sign @ sp[(-56)+42]
 17782  0100DA  0EF2               	movlw	-14
 17783  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 17784  0100E2  0EF3               	movlw	-13
 17785  0100E4  50E3               	movf	plusw1,w,c
 17786  0100E6  1001               	iorwf	btemp^0,w,c
 17787  0100E8  A4D8               	btfss	status,2,c
 17788  0100EA  D002               	goto	l12571
 17789  0100EC  0E2B               	movlw	43
 17790  0100EE  D001               	goto	L19
 17791  0100F0                     l12571:
 17792  0100F0  0E2D               	movlw	45
 17793  0100F2                     L19:
 17794  0100F2  6E0B               	movwf	(btemp+10)^0,c
 17795  0100F4  0E00               	movlw	0
 17796  0100F6  6E0C               	movwf	(btemp+11)^0,c
 17797                           
 17798                           ;stkvar	_efgtoa$5854 @ sp[(-56)+10]
 17799  0100F8  0ED2               	movlw	-46
 17800  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17801  010100  0ED3               	movlw	-45
 17802  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 17803                           
 17804                           ;stkvar	_efgtoa$5854 @ sp[(-56)+10]
 17805  010108  0ED2               	movlw	-46
 17806  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 17807                           
 17808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 17809                           ;stkvar	_n @ sp[(-56)+32]
 17810  010110  0EE8               	movlw	-24
 17811  010112  50E3               	movf	plusw1,w,c
 17812  010114  0F01               	addlw	1
 17813  010116  6E01               	movwf	btemp^0,c
 17814  010118  0EE8               	movlw	-24
 17815  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 17816  010120  6A01               	clrf	btemp^0,c
 17817  010122  0EE9               	movlw	-23
 17818  010124  50E3               	movf	plusw1,w,c
 17819  010126  2001               	addwfc	btemp^0,w,c
 17820  010128  6E01               	movwf	btemp^0,c
 17821  01012A  0EE9               	movlw	-23
 17822  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 17823                           
 17824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 17825                           ;stkvar	_w @ sp[(-56)+38]
 17826  010132  50E1               	movf	fsr1l,w,c
 17827  010134  0FEE               	addlw	-18
 17828  010136  6ED9               	movwf	fsr2l,c
 17829  010138  50E2               	movf	fsr1h,w,c
 17830  01013A  6EDA               	movwf	fsr2h,c
 17831  01013C  0EFF               	movlw	255
 17832  01013E  22DA               	addwfc	fsr2h,f,c
 17833  010140  06DE               	decf	postinc2,f,c
 17834  010142  0E00               	movlw	0
 17835  010144  5ADD               	subwfb	postdec2,f,c
 17836  010146                     l12579:
 17837                           
 17838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17839                           ;stkvar	_g @ sp[(-56)+16]
 17840  010146  0ED8               	movlw	-40
 17841  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 17842  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 17843  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 17844  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 17845  010160  EC7F  F0C7         	call	___fpclassifyf	;wreg free
 17846  010164  0401               	decf	btemp^0,w,c
 17847  010166  1002               	iorwf	(btemp+1)^0,w,c
 17848  010168  A4D8               	btfss	status,2,c
 17849  01016A  D076               	goto	l12597
 17850  01016C  0EBF               	movlw	191
 17851  01016E  6E0B               	movwf	(btemp+10)^0,c
 17852  010170  0EFF               	movlw	255
 17853  010172  6E0C               	movwf	(btemp+11)^0,c
 17854                           
 17855                           ;stkvar	_c @ sp[(-56)+-7]
 17856  010174  0EC1               	movlw	-63
 17857  010176  50E3               	movf	plusw1,w,c
 17858  010178  6E09               	movwf	(btemp+8)^0,c
 17859  01017A  6A0A               	clrf	(btemp+9)^0,c
 17860  01017C  500B               	movf	(btemp+10)^0,w,c
 17861  01017E  2609               	addwf	(btemp+8)^0,f,c
 17862  010180  500C               	movf	(btemp+11)^0,w,c
 17863  010182  220A               	addwfc	(btemp+9)^0,f,c
 17864  010184  500A               	movf	(btemp+9)^0,w,c
 17865  010186  E106               	bnz	u11580
 17866  010188  0E1A               	movlw	26
 17867  01018A  5C09               	subwf	(btemp+8)^0,w,c
 17868  01018C  B0D8               	btfsc	status,0,c
 17869  01018E  D002               	goto	u11580
 17870  010190  0E01               	movlw	1
 17871  010192  D001               	goto	u11590
 17872  010194                     u11580:
 17873  010194  0E00               	movlw	0
 17874  010196                     u11590:
 17875  010196  6E0B               	movwf	(btemp+10)^0,c
 17876  010198  6A0C               	clrf	(btemp+11)^0,c
 17877                           
 17878                           ;stkvar	_efgtoa$5855 @ sp[(-56)+8]
 17879  01019A  0ED0               	movlw	-48
 17880  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17881  0101A2  0ED1               	movlw	-47
 17882  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17883                           
 17884                           ;stkvar	_efgtoa$5855 @ sp[(-56)+8]
 17885  0101AA  0ED0               	movlw	-48
 17886  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 17887  0101B2  0ED1               	movlw	-47
 17888  0101B4  50E3               	movf	plusw1,w,c
 17889  0101B6  1001               	iorwf	btemp^0,w,c
 17890  0101B8  B4D8               	btfsc	status,2,c
 17891  0101BA  D017               	goto	l12589
 17892                           
 17893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 17894  0101BC  0ED6               	movlw	low STR_76
 17895  0101BE  6EE6               	movwf	postinc1,c
 17896  0101C0  0EFF               	movlw	high STR_76
 17897  0101C2  6EE6               	movwf	postinc1,c
 17898                           
 17899                           ;stkvar	_n @ sp[(-58)+32]
 17900  0101C4  0E97               	movlw	low _dbuf
 17901  0101C6  6E0B               	movwf	(btemp+10)^0,c
 17902  0101C8  0E02               	movlw	high _dbuf
 17903  0101CA  6E0C               	movwf	(btemp+11)^0,c
 17904  0101CC  0EE6               	movlw	-26
 17905  0101CE  50E3               	movf	plusw1,w,c
 17906  0101D0  260B               	addwf	(btemp+10)^0,f,c
 17907  0101D2  0EE7               	movlw	-25
 17908  0101D4  50E3               	movf	plusw1,w,c
 17909  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 17910  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17911  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 17912  0101E4  EC17  F0D4         	call	_strcpy	;wreg free
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 17915  0101E8  D016               	goto	l12591
 17916  0101EA                     l12589:
 17917                           
 17918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 17919  0101EA  0EDE               	movlw	low STR_77
 17920  0101EC  6EE6               	movwf	postinc1,c
 17921  0101EE  0EFF               	movlw	high STR_77
 17922  0101F0  6EE6               	movwf	postinc1,c
 17923                           
 17924                           ;stkvar	_n @ sp[(-58)+32]
 17925  0101F2  0E97               	movlw	low _dbuf
 17926  0101F4  6E0B               	movwf	(btemp+10)^0,c
 17927  0101F6  0E02               	movlw	high _dbuf
 17928  0101F8  6E0C               	movwf	(btemp+11)^0,c
 17929  0101FA  0EE6               	movlw	-26
 17930  0101FC  50E3               	movf	plusw1,w,c
 17931  0101FE  260B               	addwf	(btemp+10)^0,f,c
 17932  010200  0EE7               	movlw	-25
 17933  010202  50E3               	movf	plusw1,w,c
 17934  010204  220C               	addwfc	(btemp+11)^0,f,c
 17935  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17936  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17937  010212  EC17  F0D4         	call	_strcpy	;wreg free
 17938  010216                     l12591:
 17939                           
 17940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 17941                           ;stkvar	_w @ sp[(-56)+38]
 17942  010216  50E1               	movf	fsr1l,w,c
 17943  010218  0FEE               	addlw	-18
 17944  01021A  6ED9               	movwf	fsr2l,c
 17945  01021C  50E2               	movf	fsr1h,w,c
 17946  01021E  6EDA               	movwf	fsr2h,c
 17947  010220  0EFF               	movlw	255
 17948  010222  22DA               	addwfc	fsr2h,f,c
 17949  010224  0EFD               	movlw	253
 17950  010226  26DE               	addwf	postinc2,f,c
 17951  010228  0EFF               	movlw	255
 17952  01022A  22DD               	addwfc	postdec2,f,c
 17953  01022C                     l12593:
 17954                           
 17955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 17956                           ;stkvar	_w @ sp[(-56)+38]
 17957  01022C  0EEE               	movlw	-18
 17958  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 17959  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 17960  01023A  0E97               	movlw	low _dbuf
 17961  01023C  6EE6               	movwf	postinc1,c
 17962  01023E  0E02               	movlw	high _dbuf
 17963  010240  6EE6               	movwf	postinc1,c
 17964                           
 17965                           ;stkvar	_fp @ sp[(-60)+-2]
 17966  010242  0EC2               	movlw	-62
 17967  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 17968  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 17969  010250  ECAE  F0D0         	call	_pad	;wreg free
 17970  010254  EF1D  F089         	goto	l2315
 17971  010258                     l12597:
 17972                           
 17973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17974                           ;stkvar	_g @ sp[(-56)+16]
 17975  010258  0ED8               	movlw	-40
 17976  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 17977  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 17978  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 17979  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 17980  010272  EC7F  F0C7         	call	___fpclassifyf	;wreg free
 17981  010276  5001               	movf	btemp^0,w,c
 17982  010278  1002               	iorwf	(btemp+1)^0,w,c
 17983  01027A  A4D8               	btfss	status,2,c
 17984  01027C  D056               	goto	l12615
 17985  01027E  0EBF               	movlw	191
 17986  010280  6E0B               	movwf	(btemp+10)^0,c
 17987  010282  0EFF               	movlw	255
 17988  010284  6E0C               	movwf	(btemp+11)^0,c
 17989                           
 17990                           ;stkvar	_c @ sp[(-56)+-7]
 17991  010286  0EC1               	movlw	-63
 17992  010288  50E3               	movf	plusw1,w,c
 17993  01028A  6E09               	movwf	(btemp+8)^0,c
 17994  01028C  6A0A               	clrf	(btemp+9)^0,c
 17995  01028E  500B               	movf	(btemp+10)^0,w,c
 17996  010290  2609               	addwf	(btemp+8)^0,f,c
 17997  010292  500C               	movf	(btemp+11)^0,w,c
 17998  010294  220A               	addwfc	(btemp+9)^0,f,c
 17999  010296  500A               	movf	(btemp+9)^0,w,c
 18000  010298  E106               	bnz	u11620
 18001  01029A  0E1A               	movlw	26
 18002  01029C  5C09               	subwf	(btemp+8)^0,w,c
 18003  01029E  B0D8               	btfsc	status,0,c
 18004  0102A0  D002               	goto	u11620
 18005  0102A2  0E01               	movlw	1
 18006  0102A4  D001               	goto	u11630
 18007  0102A6                     u11620:
 18008  0102A6  0E00               	movlw	0
 18009  0102A8                     u11630:
 18010  0102A8  6E0B               	movwf	(btemp+10)^0,c
 18011  0102AA  6A0C               	clrf	(btemp+11)^0,c
 18012                           
 18013                           ;stkvar	_efgtoa$5859 @ sp[(-56)+6]
 18014  0102AC  0ECE               	movlw	-50
 18015  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18016  0102B4  0ECF               	movlw	-49
 18017  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18018                           
 18019                           ;stkvar	_efgtoa$5859 @ sp[(-56)+6]
 18020  0102BC  0ECE               	movlw	-50
 18021  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 18022  0102C4  0ECF               	movlw	-49
 18023  0102C6  50E3               	movf	plusw1,w,c
 18024  0102C8  1001               	iorwf	btemp^0,w,c
 18025  0102CA  B4D8               	btfsc	status,2,c
 18026  0102CC  D017               	goto	l12607
 18027                           
 18028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 18029  0102CE  0EDA               	movlw	low STR_80
 18030  0102D0  6EE6               	movwf	postinc1,c
 18031  0102D2  0EFF               	movlw	high STR_80
 18032  0102D4  6EE6               	movwf	postinc1,c
 18033                           
 18034                           ;stkvar	_n @ sp[(-58)+32]
 18035  0102D6  0E97               	movlw	low _dbuf
 18036  0102D8  6E0B               	movwf	(btemp+10)^0,c
 18037  0102DA  0E02               	movlw	high _dbuf
 18038  0102DC  6E0C               	movwf	(btemp+11)^0,c
 18039  0102DE  0EE6               	movlw	-26
 18040  0102E0  50E3               	movf	plusw1,w,c
 18041  0102E2  260B               	addwf	(btemp+10)^0,f,c
 18042  0102E4  0EE7               	movlw	-25
 18043  0102E6  50E3               	movf	plusw1,w,c
 18044  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 18045  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18046  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18047  0102F6  EC17  F0D4         	call	_strcpy	;wreg free
 18048                           
 18049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 18050  0102FA  D78D               	goto	l12591
 18051  0102FC                     l12607:
 18052                           
 18053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 18054  0102FC  0EE2               	movlw	low STR_81
 18055  0102FE  6EE6               	movwf	postinc1,c
 18056  010300  0EFF               	movlw	high STR_81
 18057  010302  6EE6               	movwf	postinc1,c
 18058                           
 18059                           ;stkvar	_n @ sp[(-58)+32]
 18060  010304  0E97               	movlw	low _dbuf
 18061  010306  6E0B               	movwf	(btemp+10)^0,c
 18062  010308  0E02               	movlw	high _dbuf
 18063  01030A  6E0C               	movwf	(btemp+11)^0,c
 18064  01030C  0EE6               	movlw	-26
 18065  01030E  50E3               	movf	plusw1,w,c
 18066  010310  260B               	addwf	(btemp+10)^0,f,c
 18067  010312  0EE7               	movlw	-25
 18068  010314  50E3               	movf	plusw1,w,c
 18069  010316  220C               	addwfc	(btemp+11)^0,f,c
 18070  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18071  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 18072  010324  EC17  F0D4         	call	_strcpy	;wreg free
 18073  010328  D776               	goto	l12591
 18074  01032A                     l12615:
 18075                           
 18076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 18077  01032A  0E00               	movlw	0
 18078  01032C  6E09               	movwf	(btemp+8)^0,c
 18079  01032E  0E00               	movlw	0
 18080  010330  6E0A               	movwf	(btemp+9)^0,c
 18081  010332  0E80               	movlw	128
 18082  010334  6E0B               	movwf	(btemp+10)^0,c
 18083  010336  0E3F               	movlw	63
 18084  010338  6E0C               	movwf	(btemp+11)^0,c
 18085                           
 18086                           ;stkvar	_u @ sp[(-56)+12]
 18087  01033A  0ED4               	movlw	-44
 18088  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18089  010342  0ED5               	movlw	-43
 18090  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18091  01034A  0ED6               	movlw	-42
 18092  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18093  010352  0ED7               	movlw	-41
 18094  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 18095                           
 18096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 18097                           ;stkvar	_e @ sp[(-56)+34]
 18098  01035A  0EEA               	movlw	-22
 18099  01035C  6AE3               	clrf	plusw1,c
 18100  01035E  0EEB               	movlw	-21
 18101  010360  6AE3               	clrf	plusw1,c
 18102                           
 18103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 18104  010362  0E00               	movlw	0
 18105  010364  6EE6               	movwf	postinc1,c
 18106  010366  0E00               	movlw	0
 18107  010368  6EE6               	movwf	postinc1,c
 18108  01036A  0E00               	movlw	0
 18109  01036C  6EE6               	movwf	postinc1,c
 18110  01036E  0E00               	movlw	0
 18111  010370  6EE6               	movwf	postinc1,c
 18112                           
 18113                           ;stkvar	_g @ sp[(-60)+16]
 18114  010372  0ED4               	movlw	-44
 18115  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 18116  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 18117  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 18118  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 18119  01038C  EC4C  F0D5         	call	___fleq	;wreg free
 18120  010390  A001               	btfss	btemp& (0+255),0,c
 18121  010392  D039               	goto	l12627
 18122  010394  D0BC               	goto	u11670
 18123  010396                     l12623:
 18124                           
 18125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 18126  010396  0E00               	movlw	0
 18127  010398  6EE6               	movwf	postinc1,c
 18128  01039A  0E00               	movlw	0
 18129  01039C  6EE6               	movwf	postinc1,c
 18130  01039E  0E20               	movlw	32
 18131  0103A0  6EE6               	movwf	postinc1,c
 18132  0103A2  0E41               	movlw	65
 18133  0103A4  6EE6               	movwf	postinc1,c
 18134                           
 18135                           ;stkvar	_u @ sp[(-60)+12]
 18136  0103A6  0ED0               	movlw	-48
 18137  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18138  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18139  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18140  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 18141  0103C0  EC20  F09F         	call	___flmul	;wreg free
 18142                           
 18143                           ;stkvar	_u @ sp[(-56)+12]
 18144  0103C4  0ED4               	movlw	-44
 18145  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 18146  0103CC  0ED5               	movlw	-43
 18147  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18148  0103D4  0ED6               	movlw	-42
 18149  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18150  0103DC  0ED7               	movlw	-41
 18151  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18152                           
 18153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 18154                           ;stkvar	_e @ sp[(-56)+34]
 18155  0103E4  0EEA               	movlw	-22
 18156  0103E6  50E3               	movf	plusw1,w,c
 18157  0103E8  0F01               	addlw	1
 18158  0103EA  6E01               	movwf	btemp^0,c
 18159  0103EC  0EEA               	movlw	-22
 18160  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 18161  0103F4  6A01               	clrf	btemp^0,c
 18162  0103F6  0EEB               	movlw	-21
 18163  0103F8  50E3               	movf	plusw1,w,c
 18164  0103FA  2001               	addwfc	btemp^0,w,c
 18165  0103FC  6E01               	movwf	btemp^0,c
 18166  0103FE  0EEB               	movlw	-21
 18167  010400  0060  F007  FFE3   	movff	btemp,plusw1
 18168  010406                     l12627:
 18169                           
 18170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 18171  010406  0E00               	movlw	0
 18172  010408  6EE6               	movwf	postinc1,c
 18173  01040A  0E00               	movlw	0
 18174  01040C  6EE6               	movwf	postinc1,c
 18175  01040E  0E20               	movlw	32
 18176  010410  6EE6               	movwf	postinc1,c
 18177  010412  0E41               	movlw	65
 18178  010414  6EE6               	movwf	postinc1,c
 18179                           
 18180                           ;stkvar	_u @ sp[(-60)+12]
 18181  010416  0ED0               	movlw	-48
 18182  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 18183  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 18184  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 18185  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 18186  010430  EC20  F09F         	call	___flmul	;wreg free
 18187  010434  0060  F007  FFE6   	movff	btemp,postinc1
 18188  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18189  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18190  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 18191                           
 18192                           ;stkvar	_g @ sp[(-60)+16]
 18193  01044C  0ED4               	movlw	-44
 18194  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 18195  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 18196  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 18197  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 18198  010466  EC86  F0CA         	call	___flge	;wreg free
 18199  01046A  A001               	btfss	btemp& (0+255),0,c
 18200  01046C  D032               	goto	l12633
 18201  01046E  D793               	goto	l12623
 18202  010470                     l12629:
 18203                           
 18204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 18205  010470  0E00               	movlw	0
 18206  010472  6EE6               	movwf	postinc1,c
 18207  010474  0E00               	movlw	0
 18208  010476  6EE6               	movwf	postinc1,c
 18209  010478  0E20               	movlw	32
 18210  01047A  6EE6               	movwf	postinc1,c
 18211  01047C  0E41               	movlw	65
 18212  01047E  6EE6               	movwf	postinc1,c
 18213                           
 18214                           ;stkvar	_u @ sp[(-60)+12]
 18215  010480  0ED0               	movlw	-48
 18216  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 18217  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 18218  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 18219  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 18220  01049A  EC13  F0A7         	call	___fldiv	;wreg free
 18221                           
 18222                           ;stkvar	_u @ sp[(-56)+12]
 18223  01049E  0ED4               	movlw	-44
 18224  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 18225  0104A6  0ED5               	movlw	-43
 18226  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18227  0104AE  0ED6               	movlw	-42
 18228  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18229  0104B6  0ED7               	movlw	-41
 18230  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18231                           
 18232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 18233                           ;stkvar	_e @ sp[(-56)+34]
 18234  0104BE  50E1               	movf	fsr1l,w,c
 18235  0104C0  0FEA               	addlw	-22
 18236  0104C2  6ED9               	movwf	fsr2l,c
 18237  0104C4  50E2               	movf	fsr1h,w,c
 18238  0104C6  6EDA               	movwf	fsr2h,c
 18239  0104C8  0EFF               	movlw	255
 18240  0104CA  22DA               	addwfc	fsr2h,f,c
 18241  0104CC  06DE               	decf	postinc2,f,c
 18242  0104CE  0E00               	movlw	0
 18243  0104D0  5ADD               	subwfb	postdec2,f,c
 18244  0104D2                     l12633:
 18245                           
 18246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 18247                           ;stkvar	_u @ sp[(-56)+12]
 18248  0104D2  0ED4               	movlw	-44
 18249  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18250  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18251  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18252  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18253                           
 18254                           ;stkvar	_g @ sp[(-60)+16]
 18255  0104EC  0ED4               	movlw	-44
 18256  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18257  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18258  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18259  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 18260  010506  EC86  F0CA         	call	___flge	;wreg free
 18261  01050A  A001               	btfss	btemp& (0+255),0,c
 18262  01050C  D7B1               	goto	l12629
 18263  01050E                     u11670:
 18264                           
 18265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 18266                           ;stkvar	_c @ sp[(-56)+-7]
 18267  01050E  0EC1               	movlw	-63
 18268  010510  50E3               	movf	plusw1,w,c
 18269  010512  6EE6               	movwf	postinc1,c
 18270  010514  0E00               	movlw	0
 18271  010516  6EE6               	movwf	postinc1,c
 18272  010518  EC20  F0DA         	call	_tolower	;wreg free
 18273                           
 18274                           ;stkvar	_mode @ sp[(-56)+54]
 18275  01051C  0EFE               	movlw	-2
 18276  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 18277                           
 18278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 18279                           ;stkvar	_mode @ sp[(-56)+54]
 18280                           ;stkvar	_nmode @ sp[(-56)+55]
 18281  010524  0EFE               	movlw	-2
 18282  010526  006F FF8C  F001    	movff	plusw1,btemp
 18283  01052C  0EFF               	movlw	-1
 18284  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 18285                           
 18286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 18287                           ;stkvar	_mode @ sp[(-56)+54]
 18288  010534  0EFE               	movlw	-2
 18289  010536  006F FF8C  F001    	movff	plusw1,btemp
 18290  01053C  0E67               	movlw	103
 18291  01053E  1801               	xorwf	btemp^0,w,c
 18292  010540  A4D8               	btfss	status,2,c
 18293  010542  D025               	goto	l12651
 18294                           
 18295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 18296  010544  503C               	movf	_prec^0,w,c
 18297  010546  103D               	iorwf	(_prec+1)^0,w,c
 18298  010548  A4D8               	btfss	status,2,c
 18299  01054A  D004               	goto	l12645
 18300                           
 18301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 18302  01054C  0E00               	movlw	0
 18303  01054E  6E3D               	movwf	(_prec+1)^0,c
 18304  010550  0E01               	movlw	1
 18305  010552  6E3C               	movwf	_prec^0,c
 18306  010554                     l12645:
 18307                           
 18308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 18309  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 18310  010556  D005               	goto	u11700
 18311  010558  503D               	movf	(_prec+1)^0,w,c
 18312  01055A  E110               	bnz	l12649
 18313  01055C  043C               	decf	_prec^0,w,c
 18314  01055E  B0D8               	btfsc	status,0,c
 18315  010560  D00D               	goto	l12649
 18316  010562                     u11700:
 18317  010562  0E06               	movlw	6
 18318  010564  6E0B               	movwf	(btemp+10)^0,c
 18319  010566  0E00               	movlw	0
 18320  010568  6E0C               	movwf	(btemp+11)^0,c
 18321                           
 18322                           ;stkvar	_p @ sp[(-56)+40]
 18323  01056A  0EF0               	movlw	-16
 18324  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18325  010572  0EF1               	movlw	-15
 18326  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 18327  01057A  D00C               	goto	l12657
 18328  01057C                     l12649:
 18329                           
 18330                           ;stkvar	_p @ sp[(-56)+40]
 18331  01057C  0EF0               	movlw	-16
 18332  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 18333  010584  0EF1               	movlw	-15
 18334  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18335  01058C  D003               	goto	l12657
 18336  01058E                     l12651:
 18337                           
 18338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 18339  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 18340  010590  D7F5               	goto	l12649
 18341  010592  D7E7               	goto	u11700
 18342  010594                     l12657:
 18343                           
 18344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 18345                           ;stkvar	_mode @ sp[(-56)+54]
 18346  010594  0EFE               	movlw	-2
 18347  010596  006F FF8C  F001    	movff	plusw1,btemp
 18348  01059C  0E67               	movlw	103
 18349  01059E  1801               	xorwf	btemp^0,w,c
 18350  0105A0  A4D8               	btfss	status,2,c
 18351  0105A2  D02F               	goto	l12667
 18352                           
 18353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 18354                           ;stkvar	_e @ sp[(-56)+34]
 18355  0105A4  0EEB               	movlw	-21
 18356  0105A6  AEE3               	btfss	plusw1,7,c
 18357  0105A8  D00E               	goto	u11730
 18358  0105AA  0EEA               	movlw	-22
 18359  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 18360  0105B2  0EFC               	movlw	252
 18361  0105B4  5E01               	subwf	btemp^0,f,c
 18362  0105B6  0EEB               	movlw	-21
 18363  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 18364  0105BE  0EFF               	movlw	255
 18365  0105C0  5A01               	subwfb	btemp^0,f,c
 18366  0105C2  A0D8               	btfss	status,0,c
 18367  0105C4  D018               	goto	l12665
 18368  0105C6                     u11730:
 18369                           
 18370                           ;stkvar	_e @ sp[(-56)+34]
 18371                           ;stkvar	_p @ sp[(-56)+40]
 18372  0105C6  0EF0               	movlw	-16
 18373  0105C8  50E3               	movf	plusw1,w,c
 18374  0105CA  0FFF               	addlw	255
 18375  0105CC  6E0B               	movwf	(btemp+10)^0,c
 18376  0105CE  0EF1               	movlw	-15
 18377  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18378  0105D6  0EFF               	movlw	255
 18379  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 18380  0105DA  0EEA               	movlw	-22
 18381  0105DC  50E3               	movf	plusw1,w,c
 18382  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 18383  0105E0  500C               	movf	(btemp+11)^0,w,c
 18384  0105E2  0A80               	xorlw	128
 18385  0105E4  6E01               	movwf	btemp^0,c
 18386  0105E6  0EEB               	movlw	-21
 18387  0105E8  50E3               	movf	plusw1,w,c
 18388  0105EA  0A80               	xorlw	128
 18389  0105EC  5801               	subwfb	btemp^0,w,c
 18390  0105EE  A0D8               	btfss	status,0,c
 18391  0105F0  D002               	goto	l12665
 18392                           
 18393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 18394  0105F2  0E66               	movlw	102
 18395  0105F4  D001               	goto	L20
 18396  0105F6                     l12665:
 18397                           
 18398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 18399  0105F6  0E65               	movlw	101
 18400  0105F8                     L20:
 18401  0105F8  6E0C               	movwf	(btemp+11)^0,c
 18402                           
 18403                           ;stkvar	_nmode @ sp[(-56)+55]
 18404  0105FA  0EFF               	movlw	-1
 18405  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18406  010602                     l12667:
 18407                           
 18408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 18409                           ;stkvar	_p @ sp[(-56)+40]
 18410                           ;stkvar	_m @ sp[(-56)+48]
 18411  010602  0EF0               	movlw	-16
 18412  010604  006F FF8C  F001    	movff	plusw1,btemp
 18413  01060A  0EF8               	movlw	-8
 18414  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 18415  010612  0EF1               	movlw	-15
 18416  010614  006F FF8C  F001    	movff	plusw1,btemp
 18417  01061A  0EF9               	movlw	-7
 18418  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 18419                           
 18420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 18421                           ;stkvar	_mode @ sp[(-56)+54]
 18422  010622  0EFE               	movlw	-2
 18423  010624  006F FF8C  F001    	movff	plusw1,btemp
 18424  01062A  0E67               	movlw	103
 18425  01062C  1801               	xorwf	btemp^0,w,c
 18426  01062E  A4D8               	btfss	status,2,c
 18427  010630  D00B               	goto	u11770
 18428                           
 18429                           ;stkvar	_nmode @ sp[(-56)+55]
 18430  010632  0EFF               	movlw	-1
 18431  010634  006F FF8C  F001    	movff	plusw1,btemp
 18432  01063A  0E66               	movlw	102
 18433  01063C  1801               	xorwf	btemp^0,w,c
 18434  01063E  A4D8               	btfss	status,2,c
 18435  010640  D014               	goto	l2344
 18436                           
 18437                           ;stkvar	_e @ sp[(-56)+34]
 18438  010642  0EEB               	movlw	-21
 18439  010644  AEE3               	btfss	plusw1,7,c
 18440  010646  D011               	goto	l2344
 18441  010648                     u11770:
 18442                           
 18443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 18444                           ;stkvar	_m @ sp[(-56)+48]
 18445  010648  0EF8               	movlw	-8
 18446  01064A  50E3               	movf	plusw1,w,c
 18447  01064C  0F01               	addlw	1
 18448  01064E  6E01               	movwf	btemp^0,c
 18449  010650  0EF8               	movlw	-8
 18450  010652  0060  F007  FFE3   	movff	btemp,plusw1
 18451  010658  6A01               	clrf	btemp^0,c
 18452  01065A  0EF9               	movlw	-7
 18453  01065C  50E3               	movf	plusw1,w,c
 18454  01065E  2001               	addwfc	btemp^0,w,c
 18455  010660  6E01               	movwf	btemp^0,c
 18456  010662  0EF9               	movlw	-7
 18457  010664  0060  F007  FFE3   	movff	btemp,plusw1
 18458  01066A                     l2344:
 18459                           
 18460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 18461                           ;stkvar	_nmode @ sp[(-56)+55]
 18462  01066A  0EFF               	movlw	-1
 18463  01066C  006F FF8C  F001    	movff	plusw1,btemp
 18464  010672  0E66               	movlw	102
 18465  010674  1801               	xorwf	btemp^0,w,c
 18466  010676  A4D8               	btfss	status,2,c
 18467  010678  D03B               	goto	l12687
 18468                           
 18469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 18470                           ;stkvar	_e @ sp[(-56)+34]
 18471  01067A  0EEB               	movlw	-21
 18472  01067C  AEE3               	btfss	plusw1,7,c
 18473  01067E  D01C               	goto	l12683
 18474                           
 18475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 18476  010680  0E00               	movlw	0
 18477  010682  6E09               	movwf	(btemp+8)^0,c
 18478  010684  0E00               	movlw	0
 18479  010686  6E0A               	movwf	(btemp+9)^0,c
 18480  010688  0E80               	movlw	128
 18481  01068A  6E0B               	movwf	(btemp+10)^0,c
 18482  01068C  0E3F               	movlw	63
 18483  01068E  6E0C               	movwf	(btemp+11)^0,c
 18484                           
 18485                           ;stkvar	_u @ sp[(-56)+12]
 18486  010690  0ED4               	movlw	-44
 18487  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 18488  010698  0ED5               	movlw	-43
 18489  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18490  0106A0  0ED6               	movlw	-42
 18491  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18492  0106A8  0ED7               	movlw	-41
 18493  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18494                           
 18495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 18496                           ;stkvar	_e @ sp[(-56)+34]
 18497  0106B0  0EEA               	movlw	-22
 18498  0106B2  6AE3               	clrf	plusw1,c
 18499  0106B4  0EEB               	movlw	-21
 18500  0106B6  6AE3               	clrf	plusw1,c
 18501  0106B8                     l12683:
 18502                           
 18503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 18504                           ;stkvar	_mode @ sp[(-56)+54]
 18505  0106B8  0EFE               	movlw	-2
 18506  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 18507  0106C0  0E67               	movlw	103
 18508  0106C2  1801               	xorwf	btemp^0,w,c
 18509  0106C4  B4D8               	btfsc	status,2,c
 18510  0106C6  D014               	goto	l12687
 18511                           
 18512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 18513                           ;stkvar	_e @ sp[(-56)+34]
 18514                           ;stkvar	_m @ sp[(-56)+48]
 18515  0106C8  0EF8               	movlw	-8
 18516  0106CA  50E3               	movf	plusw1,w,c
 18517  0106CC  6E01               	movwf	btemp^0,c
 18518  0106CE  0EEA               	movlw	-22
 18519  0106D0  50E3               	movf	plusw1,w,c
 18520  0106D2  2601               	addwf	btemp^0,f,c
 18521  0106D4  0EF8               	movlw	-8
 18522  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 18523  0106DC  0EF9               	movlw	-7
 18524  0106DE  50E3               	movf	plusw1,w,c
 18525  0106E0  6E01               	movwf	btemp^0,c
 18526  0106E2  0EEB               	movlw	-21
 18527  0106E4  50E3               	movf	plusw1,w,c
 18528  0106E6  2201               	addwfc	btemp^0,f,c
 18529  0106E8  0EF9               	movlw	-7
 18530  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 18531  0106F0                     l12687:
 18532                           
 18533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 18534                           ;stkvar	_i @ sp[(-56)+36]
 18535  0106F0  0EEC               	movlw	-20
 18536  0106F2  6AE3               	clrf	plusw1,c
 18537  0106F4  0EED               	movlw	-19
 18538  0106F6  6AE3               	clrf	plusw1,c
 18539                           
 18540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 18541                           ;stkvar	_g @ sp[(-56)+16]
 18542  0106F8  0ED8               	movlw	-40
 18543  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 18544  010700  0ED9               	movlw	-39
 18545  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 18546  010708  0EDA               	movlw	-38
 18547  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18548  010710  0EDB               	movlw	-37
 18549  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 18550                           
 18551                           ;stkvar	_h @ sp[(-56)+24]
 18552  010718  0EE0               	movlw	-32
 18553  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18554  010720  0EE1               	movlw	-31
 18555  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18556  010728  0EE2               	movlw	-30
 18557  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18558  010730  0EE3               	movlw	-29
 18559  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 18560                           
 18561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 18562                           ;stkvar	_u @ sp[(-56)+12]
 18563  010738  0ED4               	movlw	-44
 18564  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 18565  010740  0ED5               	movlw	-43
 18566  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 18567  010748  0ED6               	movlw	-42
 18568  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18569  010750  0ED7               	movlw	-41
 18570  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 18571                           
 18572                           ;stkvar	_ou @ sp[(-56)+28]
 18573  010758  0EE4               	movlw	-28
 18574  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18575  010760  0EE5               	movlw	-27
 18576  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18577  010768  0EE6               	movlw	-26
 18578  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18579  010770  0EE7               	movlw	-25
 18580  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 18581                           
 18582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18583  010778  D0D6               	goto	l12703
 18584  01077A                     l12693:
 18585                           
 18586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 18587                           ;stkvar	_u @ sp[(-56)+12]
 18588  01077A  0ED4               	movlw	-44
 18589  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 18590  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 18591  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 18592  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 18593                           
 18594                           ;stkvar	_h @ sp[(-60)+24]
 18595  010794  0EDC               	movlw	-36
 18596  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 18597  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 18598  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18599  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18600  0107AE  EC13  F0A7         	call	___fldiv	;wreg free
 18601  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 18602  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18603  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18604  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 18605  0107CA  EC71  F0B2         	call	_floorf	;wreg free
 18606                           
 18607                           ;stkvar	_l @ sp[(-56)+20]
 18608  0107CE  0EDC               	movlw	-36
 18609  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 18610  0107D6  0EDD               	movlw	-35
 18611  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18612  0107DE  0EDE               	movlw	-34
 18613  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18614  0107E6  0EDF               	movlw	-33
 18615  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 18616                           
 18617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 18618                           ;stkvar	_l @ sp[(-56)+20]
 18619  0107EE  0EDC               	movlw	-36
 18620  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18621  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18622  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18623  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 18624  010808  ECCD  F0C9         	call	___fltol	;wreg free
 18625  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 18626  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 18627                           
 18628                           ;stkvar	_d @ sp[(-56)+44]
 18629  010818  0EF4               	movlw	-12
 18630  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18631  010820  0EF5               	movlw	-11
 18632  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 18633                           
 18634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 18635                           ;stkvar	_u @ sp[(-56)+12]
 18636  010828  0ED4               	movlw	-44
 18637  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 18638  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 18639  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 18640  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 18641                           
 18642                           ;stkvar	_l @ sp[(-60)+20]
 18643  010842  0ED8               	movlw	-40
 18644  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 18645  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 18646  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 18647  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 18648  01085C  EC20  F09F         	call	___flmul	;wreg free
 18649  010860  0060  F007  FFE6   	movff	btemp,postinc1
 18650  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18651  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18652  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 18653                           
 18654                           ;stkvar	_h @ sp[(-60)+24]
 18655  010878  0EDC               	movlw	-36
 18656  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 18657  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 18658  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 18659  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 18660  010892  EC5A  F0DF         	call	___flsub	;wreg free
 18661                           
 18662                           ;stkvar	_h @ sp[(-56)+24]
 18663  010896  0EE0               	movlw	-32
 18664  010898  0060  F007  FFE3   	movff	btemp,plusw1
 18665  01089E  0EE1               	movlw	-31
 18666  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18667  0108A6  0EE2               	movlw	-30
 18668  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18669  0108AE  0EE3               	movlw	-29
 18670  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 18671                           
 18672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 18673  0108B6  0E00               	movlw	0
 18674  0108B8  6EE6               	movwf	postinc1,c
 18675  0108BA  0E00               	movlw	0
 18676  0108BC  6EE6               	movwf	postinc1,c
 18677  0108BE  0E20               	movlw	32
 18678  0108C0  6EE6               	movwf	postinc1,c
 18679  0108C2  0E41               	movlw	65
 18680  0108C4  6EE6               	movwf	postinc1,c
 18681                           
 18682                           ;stkvar	_u @ sp[(-60)+12]
 18683  0108C6  0ED0               	movlw	-48
 18684  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18685  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18686  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18687  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18688  0108E0  EC13  F0A7         	call	___fldiv	;wreg free
 18689                           
 18690                           ;stkvar	_u @ sp[(-56)+12]
 18691  0108E4  0ED4               	movlw	-44
 18692  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 18693  0108EC  0ED5               	movlw	-43
 18694  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18695  0108F4  0ED6               	movlw	-42
 18696  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18697  0108FC  0ED7               	movlw	-41
 18698  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 18699                           
 18700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 18701                           ;stkvar	_i @ sp[(-56)+36]
 18702  010904  0EEC               	movlw	-20
 18703  010906  50E3               	movf	plusw1,w,c
 18704  010908  0F01               	addlw	1
 18705  01090A  6E01               	movwf	btemp^0,c
 18706  01090C  0EEC               	movlw	-20
 18707  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 18708  010914  6A01               	clrf	btemp^0,c
 18709  010916  0EED               	movlw	-19
 18710  010918  50E3               	movf	plusw1,w,c
 18711  01091A  2001               	addwfc	btemp^0,w,c
 18712  01091C  6E01               	movwf	btemp^0,c
 18713  01091E  0EED               	movlw	-19
 18714  010920  0060  F007  FFE3   	movff	btemp,plusw1
 18715  010926                     l12703:
 18716                           
 18717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 18718                           ;stkvar	_m @ sp[(-56)+48]
 18719                           ;stkvar	_i @ sp[(-56)+36]
 18720  010926  50E1               	movf	fsr1l,w,c
 18721  010928  0FEC               	addlw	-20
 18722  01092A  6ED9               	movwf	fsr2l,c
 18723  01092C  50E2               	movf	fsr1h,w,c
 18724  01092E  6EDA               	movwf	fsr2h,c
 18725  010930  0EFF               	movlw	255
 18726  010932  22DA               	addwfc	fsr2h,f,c
 18727  010934  0EF8               	movlw	-8
 18728  010936  50E3               	movf	plusw1,w,c
 18729  010938  5CDE               	subwf	postinc2,w,c
 18730  01093A  50DE               	movf	postinc2,w,c
 18731  01093C  0A80               	xorlw	128
 18732  01093E  6E01               	movwf	btemp^0,c
 18733  010940  0EF9               	movlw	-7
 18734  010942  50E3               	movf	plusw1,w,c
 18735  010944  0A80               	xorlw	128
 18736  010946  5801               	subwfb	btemp^0,w,c
 18737  010948  A0D8               	btfss	status,0,c
 18738  01094A  D717               	goto	l12693
 18739                           
 18740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 18741  01094C  0E00               	movlw	0
 18742  01094E  6EE6               	movwf	postinc1,c
 18743  010950  0E00               	movlw	0
 18744  010952  6EE6               	movwf	postinc1,c
 18745  010954  0EA0               	movlw	160
 18746  010956  6EE6               	movwf	postinc1,c
 18747  010958  0E40               	movlw	64
 18748  01095A  6EE6               	movwf	postinc1,c
 18749                           
 18750                           ;stkvar	_u @ sp[(-60)+12]
 18751  01095C  0ED0               	movlw	-48
 18752  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 18753  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 18754  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 18755  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 18756  010976  EC20  F09F         	call	___flmul	;wreg free
 18757                           
 18758                           ;stkvar	_l @ sp[(-56)+20]
 18759  01097A  0EDC               	movlw	-36
 18760  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 18761  010982  0EDD               	movlw	-35
 18762  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18763  01098A  0EDE               	movlw	-34
 18764  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18765  010992  0EDF               	movlw	-33
 18766  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 18767                           
 18768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 18769                           ;stkvar	_l @ sp[(-56)+20]
 18770  01099A  0EDC               	movlw	-36
 18771  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 18772  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18773  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 18774  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18775                           
 18776                           ;stkvar	_h @ sp[(-60)+24]
 18777  0109B4  0EDC               	movlw	-36
 18778  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18779  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18780  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18781  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18782  0109CE  EC86  F0CA         	call	___flge	;wreg free
 18783  0109D2  A001               	btfss	btemp& (0+255),0,c
 18784  0109D4  D021               	goto	u11840
 18785                           
 18786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 18787                           ;stkvar	_l @ sp[(-56)+20]
 18788                           
 18789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 18790                           
 18791                           ;stkvar	_l @ sp[(-56)+20]
 18792                           
 18793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 18794  0109D6  0EDC               	movlw	-36
 18795  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18796  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18797  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18798  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18799                           
 18800                           ;stkvar	_h @ sp[(-60)+24]
 18801  0109F0  0EDC               	movlw	-36
 18802  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 18803  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 18804  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 18805  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 18806  010A0A  EC4C  F0D5         	call	___fleq	;wreg free
 18807  010A0E  A001               	btfss	btemp& (0+255),0,c
 18808  010A10  D01B               	goto	l12717
 18809                           
 18810                           ;stkvar	_d @ sp[(-56)+44]
 18811  010A12  0EF4               	movlw	-12
 18812  010A14  B0E3               	btfsc	plusw1,0,c
 18813  010A16  D018               	goto	l12717
 18814  010A18                     u11840:
 18815                           
 18816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 18817  010A18  0E00               	movlw	0
 18818  010A1A  6E09               	movwf	(btemp+8)^0,c
 18819  010A1C  0E00               	movlw	0
 18820  010A1E  6E0A               	movwf	(btemp+9)^0,c
 18821  010A20  0E00               	movlw	0
 18822  010A22  6E0B               	movwf	(btemp+10)^0,c
 18823  010A24  0E00               	movlw	0
 18824  010A26  6E0C               	movwf	(btemp+11)^0,c
 18825                           
 18826                           ;stkvar	_l @ sp[(-56)+20]
 18827  010A28  0EDC               	movlw	-36
 18828  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 18829  010A30  0EDD               	movlw	-35
 18830  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18831  010A38  0EDE               	movlw	-34
 18832  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18833  010A40  0EDF               	movlw	-33
 18834  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 18835  010A48                     l12717:
 18836                           
 18837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 18838                           ;stkvar	_l @ sp[(-56)+20]
 18839  010A48  0EDC               	movlw	-36
 18840  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 18841  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 18842  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 18843  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18844                           
 18845                           ;stkvar	_g @ sp[(-60)+16]
 18846  010A62  0ED4               	movlw	-44
 18847  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 18848  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 18849  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 18850  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 18851  010A7C  EC35  F0A3         	call	___fladd	;wreg free
 18852                           
 18853                           ;stkvar	_h @ sp[(-56)+24]
 18854  010A80  0EE0               	movlw	-32
 18855  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 18856  010A88  0EE1               	movlw	-31
 18857  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18858  010A90  0EE2               	movlw	-30
 18859  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18860  010A98  0EE3               	movlw	-29
 18861  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 18862                           
 18863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 18864                           ;stkvar	_ou @ sp[(-56)+28]
 18865  010AA0  0EE4               	movlw	-28
 18866  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 18867  010AA8  0EE5               	movlw	-27
 18868  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18869  010AB0  0EE6               	movlw	-26
 18870  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18871  010AB8  0EE7               	movlw	-25
 18872  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18873                           
 18874                           ;stkvar	_u @ sp[(-56)+12]
 18875  010AC0  0ED4               	movlw	-44
 18876  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18877  010AC8  0ED5               	movlw	-43
 18878  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18879  010AD0  0ED6               	movlw	-42
 18880  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18881  010AD8  0ED7               	movlw	-41
 18882  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18883                           
 18884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 18885                           ;stkvar	_nmode @ sp[(-56)+55]
 18886  010AE0  0EFF               	movlw	-1
 18887  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 18888  010AE8  0E65               	movlw	101
 18889  010AEA  1801               	xorwf	btemp^0,w,c
 18890  010AEC  B4D8               	btfsc	status,2,c
 18891  010AEE  D011               	goto	l12725
 18892                           
 18893                           ;stkvar	_e @ sp[(-56)+34]
 18894                           ;stkvar	_ne @ sp[(-56)+46]
 18895  010AF0  0EEA               	movlw	-22
 18896  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 18897  010AF8  0EF6               	movlw	-10
 18898  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 18899  010B00  0EEB               	movlw	-21
 18900  010B02  006F FF8C  F001    	movff	plusw1,btemp
 18901  010B08  0EF7               	movlw	-9
 18902  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 18903  010B10  D004               	goto	l2359
 18904  010B12                     l12725:
 18905                           
 18906                           ;stkvar	_ne @ sp[(-56)+46]
 18907  010B12  0EF6               	movlw	-10
 18908  010B14  6AE3               	clrf	plusw1,c
 18909  010B16  0EF7               	movlw	-9
 18910  010B18  6AE3               	clrf	plusw1,c
 18911  010B1A                     l2359:
 18912                           
 18913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 18914                           ;stkvar	_pp @ sp[(-56)+50]
 18915  010B1A  0EFA               	movlw	-6
 18916  010B1C  6AE3               	clrf	plusw1,c
 18917  010B1E  0EFB               	movlw	-5
 18918  010B20  6AE3               	clrf	plusw1,c
 18919                           
 18920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 18921                           ;stkvar	_t @ sp[(-56)+52]
 18922  010B22  0EFC               	movlw	-4
 18923  010B24  6AE3               	clrf	plusw1,c
 18924  010B26  0EFD               	movlw	-3
 18925  010B28  6AE3               	clrf	plusw1,c
 18926                           
 18927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 18928                           ;stkvar	_i @ sp[(-56)+36]
 18929  010B2A  0EEC               	movlw	-20
 18930  010B2C  6AE3               	clrf	plusw1,c
 18931  010B2E  0EED               	movlw	-19
 18932  010B30  6AE3               	clrf	plusw1,c
 18933                           
 18934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18935  010B32  D1B7               	goto	l12777
 18936  010B34                     l12727:
 18937                           
 18938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 18939                           ;stkvar	_u @ sp[(-56)+12]
 18940  010B34  0ED4               	movlw	-44
 18941  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 18942  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18943  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 18944  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 18945                           
 18946                           ;stkvar	_h @ sp[(-60)+24]
 18947  010B4E  0EDC               	movlw	-36
 18948  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 18949  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 18950  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18951  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 18952  010B68  EC13  F0A7         	call	___fldiv	;wreg free
 18953  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 18954  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18955  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18956  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 18957  010B84  EC71  F0B2         	call	_floorf	;wreg free
 18958                           
 18959                           ;stkvar	_l @ sp[(-56)+20]
 18960  010B88  0EDC               	movlw	-36
 18961  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 18962  010B90  0EDD               	movlw	-35
 18963  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18964  010B98  0EDE               	movlw	-34
 18965  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18966  010BA0  0EDF               	movlw	-33
 18967  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 18968                           
 18969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 18970                           ;stkvar	_l @ sp[(-56)+20]
 18971  010BA8  0EDC               	movlw	-36
 18972  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 18973  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 18974  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 18975  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 18976  010BC2  ECCD  F0C9         	call	___fltol	;wreg free
 18977  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 18978  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 18979                           
 18980                           ;stkvar	_d @ sp[(-56)+44]
 18981  010BD2  0EF4               	movlw	-12
 18982  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18983  010BDA  0EF5               	movlw	-11
 18984  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18985                           
 18986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 18987  010BE2  B83E               	btfsc	_flags^0,4,c
 18988  010BE4  D026               	goto	l12741
 18989                           
 18990                           ;stkvar	_d @ sp[(-56)+44]
 18991  010BE6  0EF4               	movlw	-12
 18992  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 18993  010BEE  0EF5               	movlw	-11
 18994  010BF0  50E3               	movf	plusw1,w,c
 18995  010BF2  1001               	iorwf	btemp^0,w,c
 18996  010BF4  A4D8               	btfss	status,2,c
 18997  010BF6  D01D               	goto	l12741
 18998                           
 18999                           ;stkvar	_mode @ sp[(-56)+54]
 19000  010BF8  0EFE               	movlw	-2
 19001  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 19002  010C00  0E67               	movlw	103
 19003  010C02  1801               	xorwf	btemp^0,w,c
 19004  010C04  A4D8               	btfss	status,2,c
 19005  010C06  D015               	goto	l12741
 19006                           
 19007                           ;stkvar	_ne @ sp[(-56)+46]
 19008  010C08  0EF7               	movlw	-9
 19009  010C0A  AEE3               	btfss	plusw1,7,c
 19010  010C0C  D012               	goto	l12741
 19011                           
 19012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 19013                           ;stkvar	_t @ sp[(-56)+52]
 19014  010C0E  0EFC               	movlw	-4
 19015  010C10  50E3               	movf	plusw1,w,c
 19016  010C12  0F01               	addlw	1
 19017  010C14  6E01               	movwf	btemp^0,c
 19018  010C16  0EFC               	movlw	-4
 19019  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 19020  010C1E  6A01               	clrf	btemp^0,c
 19021  010C20  0EFD               	movlw	-3
 19022  010C22  50E3               	movf	plusw1,w,c
 19023  010C24  2001               	addwfc	btemp^0,w,c
 19024  010C26  6E01               	movwf	btemp^0,c
 19025  010C28  0EFD               	movlw	-3
 19026  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 19027                           
 19028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 19029  010C30  D0AF               	goto	l12769
 19030  010C32                     l12741:
 19031                           
 19032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 19033                           ;stkvar	_pp @ sp[(-56)+50]
 19034  010C32  0EFA               	movlw	-6
 19035  010C34  006F FF8C  F001    	movff	plusw1,btemp
 19036  010C3A  0EFB               	movlw	-5
 19037  010C3C  50E3               	movf	plusw1,w,c
 19038  010C3E  1001               	iorwf	btemp^0,w,c
 19039  010C40  A4D8               	btfss	status,2,c
 19040  010C42  D070               	goto	l12761
 19041                           
 19042                           ;stkvar	_ne @ sp[(-56)+46]
 19043  010C44  0EF7               	movlw	-9
 19044  010C46  AEE3               	btfss	plusw1,7,c
 19045  010C48  D06D               	goto	l12761
 19046                           
 19047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 19048                           ;stkvar	_n @ sp[(-56)+32]
 19049  010C4A  0EE8               	movlw	-24
 19050  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19051  010C52  0EE9               	movlw	-23
 19052  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 19053  010C5A  0E97               	movlw	low _dbuf
 19054  010C5C  240B               	addwf	(btemp+10)^0,w,c
 19055  010C5E  6ED9               	movwf	fsr2l,c
 19056  010C60  0E02               	movlw	high _dbuf
 19057  010C62  200C               	addwfc	(btemp+11)^0,w,c
 19058  010C64  6EDA               	movwf	fsr2h,c
 19059  010C66  0E2E               	movlw	46
 19060  010C68  6EDF               	movwf	indf2,c
 19061                           
 19062                           ;stkvar	_n @ sp[(-56)+32]
 19063  010C6A  0EE8               	movlw	-24
 19064  010C6C  50E3               	movf	plusw1,w,c
 19065  010C6E  0F01               	addlw	1
 19066  010C70  6E01               	movwf	btemp^0,c
 19067  010C72  0EE8               	movlw	-24
 19068  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 19069  010C7A  6A01               	clrf	btemp^0,c
 19070  010C7C  0EE9               	movlw	-23
 19071  010C7E  50E3               	movf	plusw1,w,c
 19072  010C80  2001               	addwfc	btemp^0,w,c
 19073  010C82  6E01               	movwf	btemp^0,c
 19074  010C84  0EE9               	movlw	-23
 19075  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 19076                           
 19077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 19078                           ;stkvar	_w @ sp[(-56)+38]
 19079  010C8C  50E1               	movf	fsr1l,w,c
 19080  010C8E  0FEE               	addlw	-18
 19081  010C90  6ED9               	movwf	fsr2l,c
 19082  010C92  50E2               	movf	fsr1h,w,c
 19083  010C94  6EDA               	movwf	fsr2h,c
 19084  010C96  0EFF               	movlw	255
 19085  010C98  22DA               	addwfc	fsr2h,f,c
 19086  010C9A  06DE               	decf	postinc2,f,c
 19087  010C9C  0E00               	movlw	0
 19088  010C9E  5ADD               	subwfb	postdec2,f,c
 19089                           
 19090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 19091  010CA0  0E01               	movlw	1
 19092  010CA2  6E0B               	movwf	(btemp+10)^0,c
 19093  010CA4  0E00               	movlw	0
 19094  010CA6  6E0C               	movwf	(btemp+11)^0,c
 19095                           
 19096                           ;stkvar	_pp @ sp[(-56)+50]
 19097  010CA8  0EFA               	movlw	-6
 19098  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19099  010CB0  0EFB               	movlw	-5
 19100  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19101  010CB8  D035               	goto	l12761
 19102  010CBA                     l12753:
 19103                           
 19104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 19105                           ;stkvar	_n @ sp[(-56)+32]
 19106  010CBA  0EE8               	movlw	-24
 19107  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19108  010CC2  0EE9               	movlw	-23
 19109  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19110  010CCA  0E97               	movlw	low _dbuf
 19111  010CCC  240B               	addwf	(btemp+10)^0,w,c
 19112  010CCE  6ED9               	movwf	fsr2l,c
 19113  010CD0  0E02               	movlw	high _dbuf
 19114  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 19115  010CD4  6EDA               	movwf	fsr2h,c
 19116  010CD6  0E30               	movlw	48
 19117  010CD8  6EDF               	movwf	indf2,c
 19118                           
 19119                           ;stkvar	_n @ sp[(-56)+32]
 19120  010CDA  0EE8               	movlw	-24
 19121  010CDC  50E3               	movf	plusw1,w,c
 19122  010CDE  0F01               	addlw	1
 19123  010CE0  6E01               	movwf	btemp^0,c
 19124  010CE2  0EE8               	movlw	-24
 19125  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 19126  010CEA  6A01               	clrf	btemp^0,c
 19127  010CEC  0EE9               	movlw	-23
 19128  010CEE  50E3               	movf	plusw1,w,c
 19129  010CF0  2001               	addwfc	btemp^0,w,c
 19130  010CF2  6E01               	movwf	btemp^0,c
 19131  010CF4  0EE9               	movlw	-23
 19132  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 19133                           
 19134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 19135                           ;stkvar	_w @ sp[(-56)+38]
 19136  010CFC  50E1               	movf	fsr1l,w,c
 19137  010CFE  0FEE               	addlw	-18
 19138  010D00  6ED9               	movwf	fsr2l,c
 19139  010D02  50E2               	movf	fsr1h,w,c
 19140  010D04  6EDA               	movwf	fsr2h,c
 19141  010D06  0EFF               	movlw	255
 19142  010D08  22DA               	addwfc	fsr2h,f,c
 19143  010D0A  06DE               	decf	postinc2,f,c
 19144  010D0C  0E00               	movlw	0
 19145  010D0E  5ADD               	subwfb	postdec2,f,c
 19146                           
 19147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 19148                           ;stkvar	_t @ sp[(-56)+52]
 19149  010D10  50E1               	movf	fsr1l,w,c
 19150  010D12  0FFC               	addlw	-4
 19151  010D14  6ED9               	movwf	fsr2l,c
 19152  010D16  50E2               	movf	fsr1h,w,c
 19153  010D18  6EDA               	movwf	fsr2h,c
 19154  010D1A  0EFF               	movlw	255
 19155  010D1C  22DA               	addwfc	fsr2h,f,c
 19156  010D1E  06DE               	decf	postinc2,f,c
 19157  010D20  0E00               	movlw	0
 19158  010D22  5ADD               	subwfb	postdec2,f,c
 19159  010D24                     l12761:
 19160                           
 19161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 19162                           ;stkvar	_t @ sp[(-56)+52]
 19163  010D24  0EFC               	movlw	-4
 19164  010D26  006F FF8C  F001    	movff	plusw1,btemp
 19165  010D2C  0EFD               	movlw	-3
 19166  010D2E  50E3               	movf	plusw1,w,c
 19167  010D30  1001               	iorwf	btemp^0,w,c
 19168  010D32  A4D8               	btfss	status,2,c
 19169  010D34  D7C2               	goto	l12753
 19170                           
 19171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 19172                           ;stkvar	_n @ sp[(-56)+32]
 19173  010D36  0EE8               	movlw	-24
 19174  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 19175  010D3E  0EE9               	movlw	-23
 19176  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 19177  010D46  0E97               	movlw	low _dbuf
 19178  010D48  240B               	addwf	(btemp+10)^0,w,c
 19179  010D4A  6ED9               	movwf	fsr2l,c
 19180  010D4C  0E02               	movlw	high _dbuf
 19181  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 19182  010D50  6EDA               	movwf	fsr2h,c
 19183                           
 19184                           ;stkvar	_d @ sp[(-56)+44]
 19185  010D52  0EF4               	movlw	-12
 19186  010D54  50E3               	movf	plusw1,w,c
 19187  010D56  0F30               	addlw	48
 19188  010D58  6EDF               	movwf	indf2,c
 19189                           
 19190                           ;stkvar	_n @ sp[(-56)+32]
 19191  010D5A  0EE8               	movlw	-24
 19192  010D5C  50E3               	movf	plusw1,w,c
 19193  010D5E  0F01               	addlw	1
 19194  010D60  6E01               	movwf	btemp^0,c
 19195  010D62  0EE8               	movlw	-24
 19196  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 19197  010D6A  6A01               	clrf	btemp^0,c
 19198  010D6C  0EE9               	movlw	-23
 19199  010D6E  50E3               	movf	plusw1,w,c
 19200  010D70  2001               	addwfc	btemp^0,w,c
 19201  010D72  6E01               	movwf	btemp^0,c
 19202  010D74  0EE9               	movlw	-23
 19203  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 19204                           
 19205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 19206                           ;stkvar	_w @ sp[(-56)+38]
 19207  010D7C  50E1               	movf	fsr1l,w,c
 19208  010D7E  0FEE               	addlw	-18
 19209  010D80  6ED9               	movwf	fsr2l,c
 19210  010D82  50E2               	movf	fsr1h,w,c
 19211  010D84  6EDA               	movwf	fsr2h,c
 19212  010D86  0EFF               	movlw	255
 19213  010D88  22DA               	addwfc	fsr2h,f,c
 19214  010D8A  06DE               	decf	postinc2,f,c
 19215  010D8C  0E00               	movlw	0
 19216  010D8E  5ADD               	subwfb	postdec2,f,c
 19217  010D90                     l12769:
 19218                           
 19219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 19220                           ;stkvar	_u @ sp[(-56)+12]
 19221  010D90  0ED4               	movlw	-44
 19222  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 19223  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 19224  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 19225  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 19226                           
 19227                           ;stkvar	_l @ sp[(-60)+20]
 19228  010DAA  0ED8               	movlw	-40
 19229  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 19230  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 19231  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 19232  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 19233  010DC4  EC20  F09F         	call	___flmul	;wreg free
 19234  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 19235  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19236  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19237  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 19238                           
 19239                           ;stkvar	_h @ sp[(-60)+24]
 19240  010DE0  0EDC               	movlw	-36
 19241  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19242  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19243  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19244  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19245  010DFA  EC5A  F0DF         	call	___flsub	;wreg free
 19246                           
 19247                           ;stkvar	_h @ sp[(-56)+24]
 19248  010DFE  0EE0               	movlw	-32
 19249  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 19250  010E06  0EE1               	movlw	-31
 19251  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19252  010E0E  0EE2               	movlw	-30
 19253  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19254  010E16  0EE3               	movlw	-29
 19255  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 19256                           
 19257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 19258  010E1E  0E00               	movlw	0
 19259  010E20  6EE6               	movwf	postinc1,c
 19260  010E22  0E00               	movlw	0
 19261  010E24  6EE6               	movwf	postinc1,c
 19262  010E26  0E20               	movlw	32
 19263  010E28  6EE6               	movwf	postinc1,c
 19264  010E2A  0E41               	movlw	65
 19265  010E2C  6EE6               	movwf	postinc1,c
 19266                           
 19267                           ;stkvar	_u @ sp[(-60)+12]
 19268  010E2E  0ED0               	movlw	-48
 19269  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 19270  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 19271  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 19272  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 19273  010E48  EC13  F0A7         	call	___fldiv	;wreg free
 19274                           
 19275                           ;stkvar	_u @ sp[(-56)+12]
 19276  010E4C  0ED4               	movlw	-44
 19277  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 19278  010E54  0ED5               	movlw	-43
 19279  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19280  010E5C  0ED6               	movlw	-42
 19281  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19282  010E64  0ED7               	movlw	-41
 19283  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 19284                           
 19285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 19286                           ;stkvar	_ne @ sp[(-56)+46]
 19287  010E6C  50E1               	movf	fsr1l,w,c
 19288  010E6E  0FF6               	addlw	-10
 19289  010E70  6ED9               	movwf	fsr2l,c
 19290  010E72  50E2               	movf	fsr1h,w,c
 19291  010E74  6EDA               	movwf	fsr2h,c
 19292  010E76  0EFF               	movlw	255
 19293  010E78  22DA               	addwfc	fsr2h,f,c
 19294  010E7A  06DE               	decf	postinc2,f,c
 19295  010E7C  0E00               	movlw	0
 19296  010E7E  5ADD               	subwfb	postdec2,f,c
 19297                           
 19298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 19299                           ;stkvar	_i @ sp[(-56)+36]
 19300  010E80  0EEC               	movlw	-20
 19301  010E82  50E3               	movf	plusw1,w,c
 19302  010E84  0F01               	addlw	1
 19303  010E86  6E01               	movwf	btemp^0,c
 19304  010E88  0EEC               	movlw	-20
 19305  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 19306  010E90  6A01               	clrf	btemp^0,c
 19307  010E92  0EED               	movlw	-19
 19308  010E94  50E3               	movf	plusw1,w,c
 19309  010E96  2001               	addwfc	btemp^0,w,c
 19310  010E98  6E01               	movwf	btemp^0,c
 19311  010E9A  0EED               	movlw	-19
 19312  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 19313  010EA2                     l12777:
 19314                           
 19315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19316                           ;stkvar	_m @ sp[(-56)+48]
 19317                           ;stkvar	_i @ sp[(-56)+36]
 19318  010EA2  50E1               	movf	fsr1l,w,c
 19319  010EA4  0FEC               	addlw	-20
 19320  010EA6  6ED9               	movwf	fsr2l,c
 19321  010EA8  50E2               	movf	fsr1h,w,c
 19322  010EAA  6EDA               	movwf	fsr2h,c
 19323  010EAC  0EFF               	movlw	255
 19324  010EAE  22DA               	addwfc	fsr2h,f,c
 19325  010EB0  0EF8               	movlw	-8
 19326  010EB2  50E3               	movf	plusw1,w,c
 19327  010EB4  5CDE               	subwf	postinc2,w,c
 19328  010EB6  50DE               	movf	postinc2,w,c
 19329  010EB8  0A80               	xorlw	128
 19330  010EBA  6E01               	movwf	btemp^0,c
 19331  010EBC  0EF9               	movlw	-7
 19332  010EBE  50E3               	movf	plusw1,w,c
 19333  010EC0  0A80               	xorlw	128
 19334  010EC2  5801               	subwfb	btemp^0,w,c
 19335  010EC4  B0D8               	btfsc	status,0,c
 19336  010EC6  D00E               	goto	u11940
 19337                           
 19338                           ;stkvar	_n @ sp[(-56)+32]
 19339  010EC8  0EE9               	movlw	-23
 19340  010ECA  BEE3               	btfsc	plusw1,7,c
 19341  010ECC  D633               	goto	l12727
 19342  010ECE  0EE9               	movlw	-23
 19343  010ED0  50E3               	movf	plusw1,w,c
 19344  010ED2  E108               	bnz	u11940
 19345  010ED4  0EE8               	movlw	-24
 19346  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 19347  010EDC  0E4B               	movlw	75
 19348  010EDE  5E01               	subwf	btemp^0,f,c
 19349  010EE0  A0D8               	btfss	status,0,c
 19350  010EE2  D628               	goto	l12727
 19351  010EE4                     u11940:
 19352                           
 19353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 19354                           ;stkvar	_pp @ sp[(-56)+50]
 19355  010EE4  0EFA               	movlw	-6
 19356  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 19357  010EEC  0EFB               	movlw	-5
 19358  010EEE  50E3               	movf	plusw1,w,c
 19359  010EF0  1001               	iorwf	btemp^0,w,c
 19360  010EF2  B4D8               	btfsc	status,2,c
 19361  010EF4  A83E               	btfss	_flags^0,4,c
 19362  010EF6  D021               	goto	l12789
 19363                           
 19364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 19365                           ;stkvar	_n @ sp[(-56)+32]
 19366  010EF8  0EE8               	movlw	-24
 19367  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19368  010F00  0EE9               	movlw	-23
 19369  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 19370  010F08  0E97               	movlw	low _dbuf
 19371  010F0A  240B               	addwf	(btemp+10)^0,w,c
 19372  010F0C  6ED9               	movwf	fsr2l,c
 19373  010F0E  0E02               	movlw	high _dbuf
 19374  010F10  200C               	addwfc	(btemp+11)^0,w,c
 19375  010F12  6EDA               	movwf	fsr2h,c
 19376  010F14  0E2E               	movlw	46
 19377  010F16  6EDF               	movwf	indf2,c
 19378                           
 19379                           ;stkvar	_n @ sp[(-56)+32]
 19380  010F18  0EE8               	movlw	-24
 19381  010F1A  50E3               	movf	plusw1,w,c
 19382  010F1C  0F01               	addlw	1
 19383  010F1E  6E01               	movwf	btemp^0,c
 19384  010F20  0EE8               	movlw	-24
 19385  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 19386  010F28  6A01               	clrf	btemp^0,c
 19387  010F2A  0EE9               	movlw	-23
 19388  010F2C  50E3               	movf	plusw1,w,c
 19389  010F2E  2001               	addwfc	btemp^0,w,c
 19390  010F30  6E01               	movwf	btemp^0,c
 19391  010F32  0EE9               	movlw	-23
 19392  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 19393  010F3A                     l12789:
 19394                           
 19395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 19396                           ;stkvar	_n @ sp[(-56)+32]
 19397  010F3A  0EE8               	movlw	-24
 19398  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19399  010F42  0EE9               	movlw	-23
 19400  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 19401  010F4A  0E97               	movlw	low _dbuf
 19402  010F4C  240B               	addwf	(btemp+10)^0,w,c
 19403  010F4E  6ED9               	movwf	fsr2l,c
 19404  010F50  0E02               	movlw	high _dbuf
 19405  010F52  200C               	addwfc	(btemp+11)^0,w,c
 19406  010F54  6EDA               	movwf	fsr2h,c
 19407  010F56  0E00               	movlw	0
 19408  010F58  6EDF               	movwf	indf2,c
 19409                           
 19410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 19411                           ;stkvar	_nmode @ sp[(-56)+55]
 19412  010F5A  0EFF               	movlw	-1
 19413  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 19414  010F62  0E65               	movlw	101
 19415  010F64  1801               	xorwf	btemp^0,w,c
 19416  010F66  A4D8               	btfss	status,2,c
 19417  010F68  EF16  F081         	goto	l12593
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 19420  010F6C  0E4F               	movlw	79
 19421  010F6E  6E0B               	movwf	(btemp+10)^0,c
 19422  010F70  0E00               	movlw	0
 19423  010F72  6E0C               	movwf	(btemp+11)^0,c
 19424                           
 19425                           ;stkvar	_i @ sp[(-56)+36]
 19426  010F74  0EEC               	movlw	-20
 19427  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19428  010F7C  0EED               	movlw	-19
 19429  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19430                           
 19431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 19432                           ;stkvar	_i @ sp[(-56)+36]
 19433  010F84  0EEC               	movlw	-20
 19434  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 19435  010F8C  0EED               	movlw	-19
 19436  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19437  010F94  0E97               	movlw	low _dbuf
 19438  010F96  240B               	addwf	(btemp+10)^0,w,c
 19439  010F98  6ED9               	movwf	fsr2l,c
 19440  010F9A  0E02               	movlw	high _dbuf
 19441  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 19442  010F9E  6EDA               	movwf	fsr2h,c
 19443  010FA0  0E00               	movlw	0
 19444  010FA2  6EDF               	movwf	indf2,c
 19445                           
 19446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 19447                           ;stkvar	_sign @ sp[(-56)+42]
 19448  010FA4  0EF2               	movlw	-14
 19449  010FA6  6AE3               	clrf	plusw1,c
 19450  010FA8  0EF3               	movlw	-13
 19451  010FAA  6AE3               	clrf	plusw1,c
 19452                           
 19453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 19454                           ;stkvar	_e @ sp[(-56)+34]
 19455  010FAC  0EEB               	movlw	-21
 19456  010FAE  AEE3               	btfss	plusw1,7,c
 19457  010FB0  D012               	goto	l12803
 19458                           
 19459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 19460  010FB2  0E01               	movlw	1
 19461  010FB4  6E0B               	movwf	(btemp+10)^0,c
 19462  010FB6  0E00               	movlw	0
 19463  010FB8  6E0C               	movwf	(btemp+11)^0,c
 19464                           
 19465                           ;stkvar	_sign @ sp[(-56)+42]
 19466  010FBA  0EF2               	movlw	-14
 19467  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19468  010FC2  0EF3               	movlw	-13
 19469  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19470                           
 19471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 19472                           ;stkvar	_e @ sp[(-56)+34]
 19473                           ;stkvar	_e @ sp[(-56)+34]
 19474  010FCA  0EEA               	movlw	-22
 19475  010FCC  6CE3               	negf	plusw1,c
 19476  010FCE  0EEB               	movlw	-21
 19477  010FD0  1EE3               	comf	plusw1,f,c
 19478  010FD2  B0D8               	btfsc	status,0,c
 19479  010FD4  2AE3               	incf	plusw1,f,c
 19480  010FD6                     l12803:
 19481                           
 19482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 19483  010FD6  0E02               	movlw	2
 19484  010FD8  6E0B               	movwf	(btemp+10)^0,c
 19485  010FDA  0E00               	movlw	0
 19486  010FDC  6E0C               	movwf	(btemp+11)^0,c
 19487                           
 19488                           ;stkvar	_p @ sp[(-56)+40]
 19489  010FDE  0EF0               	movlw	-16
 19490  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19491  010FE6  0EF1               	movlw	-15
 19492  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19493                           
 19494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19495  010FEE  D051               	goto	l12815
 19496  010FF0                     l12805:
 19497                           
 19498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 19499                           ;stkvar	_i @ sp[(-56)+36]
 19500  010FF0  50E1               	movf	fsr1l,w,c
 19501  010FF2  0FEC               	addlw	-20
 19502  010FF4  6ED9               	movwf	fsr2l,c
 19503  010FF6  50E2               	movf	fsr1h,w,c
 19504  010FF8  6EDA               	movwf	fsr2h,c
 19505  010FFA  0EFF               	movlw	255
 19506  010FFC  22DA               	addwfc	fsr2h,f,c
 19507  010FFE  06DE               	decf	postinc2,f,c
 19508  011000  0E00               	movlw	0
 19509  011002  5ADD               	subwfb	postdec2,f,c
 19510                           
 19511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 19512                           ;stkvar	_i @ sp[(-56)+36]
 19513  011004  0EEC               	movlw	-20
 19514  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 19515  01100C  0EED               	movlw	-19
 19516  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19517  011014  0E97               	movlw	low _dbuf
 19518  011016  240B               	addwf	(btemp+10)^0,w,c
 19519  011018  6ED9               	movwf	fsr2l,c
 19520  01101A  0E02               	movlw	high _dbuf
 19521  01101C  200C               	addwfc	(btemp+11)^0,w,c
 19522  01101E  6EDA               	movwf	fsr2h,c
 19523  011020  0E0A               	movlw	10
 19524  011022  6EE6               	movwf	postinc1,c
 19525  011024  0E00               	movlw	0
 19526  011026  6EE6               	movwf	postinc1,c
 19527                           
 19528                           ;stkvar	_e @ sp[(-58)+34]
 19529  011028  0EE8               	movlw	-24
 19530  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 19531  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 19532  011036  EC22  F0D0         	call	___awmod	;wreg free
 19533  01103A  5001               	movf	btemp^0,w,c
 19534  01103C  0F30               	addlw	48
 19535  01103E  6EDF               	movwf	indf2,c
 19536                           
 19537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 19538  011040  0E0A               	movlw	10
 19539  011042  6EE6               	movwf	postinc1,c
 19540  011044  0E00               	movlw	0
 19541  011046  6EE6               	movwf	postinc1,c
 19542                           
 19543                           ;stkvar	_e @ sp[(-58)+34]
 19544  011048  0EE8               	movlw	-24
 19545  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 19546  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 19547  011056  ECE9  F0CB         	call	___awdiv	;wreg free
 19548                           
 19549                           ;stkvar	_e @ sp[(-56)+34]
 19550  01105A  0EEA               	movlw	-22
 19551  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 19552  011062  0EEB               	movlw	-21
 19553  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19554                           
 19555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 19556                           ;stkvar	_p @ sp[(-56)+40]
 19557  01106A  50E1               	movf	fsr1l,w,c
 19558  01106C  0FF0               	addlw	-16
 19559  01106E  6ED9               	movwf	fsr2l,c
 19560  011070  50E2               	movf	fsr1h,w,c
 19561  011072  6EDA               	movwf	fsr2h,c
 19562  011074  0EFF               	movlw	255
 19563  011076  22DA               	addwfc	fsr2h,f,c
 19564  011078  06DE               	decf	postinc2,f,c
 19565  01107A  0E00               	movlw	0
 19566  01107C  5ADD               	subwfb	postdec2,f,c
 19567                           
 19568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 19569                           ;stkvar	_w @ sp[(-56)+38]
 19570  01107E  50E1               	movf	fsr1l,w,c
 19571  011080  0FEE               	addlw	-18
 19572  011082  6ED9               	movwf	fsr2l,c
 19573  011084  50E2               	movf	fsr1h,w,c
 19574  011086  6EDA               	movwf	fsr2h,c
 19575  011088  0EFF               	movlw	255
 19576  01108A  22DA               	addwfc	fsr2h,f,c
 19577  01108C  06DE               	decf	postinc2,f,c
 19578  01108E  0E00               	movlw	0
 19579  011090  5ADD               	subwfb	postdec2,f,c
 19580  011092                     l12815:
 19581                           
 19582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 19583                           ;stkvar	_e @ sp[(-56)+34]
 19584  011092  0EEA               	movlw	-22
 19585  011094  006F FF8C  F001    	movff	plusw1,btemp
 19586  01109A  0EEB               	movlw	-21
 19587  01109C  50E3               	movf	plusw1,w,c
 19588  01109E  1001               	iorwf	btemp^0,w,c
 19589  0110A0  A4D8               	btfss	status,2,c
 19590  0110A2  D7A6               	goto	l12805
 19591                           
 19592                           ;stkvar	_p @ sp[(-56)+40]
 19593  0110A4  0EF1               	movlw	-15
 19594  0110A6  BEE3               	btfsc	plusw1,7,c
 19595  0110A8  D007               	goto	u12000
 19596  0110AA  0EF1               	movlw	-15
 19597  0110AC  50E3               	movf	plusw1,w,c
 19598  0110AE  E1A0               	bnz	l12805
 19599  0110B0  0EF0               	movlw	-16
 19600  0110B2  04E3               	decf	plusw1,w,c
 19601  0110B4  B0D8               	btfsc	status,0,c
 19602  0110B6  D79C               	goto	l12805
 19603  0110B8                     u12000:
 19604                           
 19605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 19606                           ;stkvar	_i @ sp[(-56)+36]
 19607  0110B8  50E1               	movf	fsr1l,w,c
 19608  0110BA  0FEC               	addlw	-20
 19609  0110BC  6ED9               	movwf	fsr2l,c
 19610  0110BE  50E2               	movf	fsr1h,w,c
 19611  0110C0  6EDA               	movwf	fsr2h,c
 19612  0110C2  0EFF               	movlw	255
 19613  0110C4  22DA               	addwfc	fsr2h,f,c
 19614  0110C6  06DE               	decf	postinc2,f,c
 19615  0110C8  0E00               	movlw	0
 19616  0110CA  5ADD               	subwfb	postdec2,f,c
 19617                           
 19618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 19619                           ;stkvar	_sign @ sp[(-56)+42]
 19620  0110CC  0EF2               	movlw	-14
 19621  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 19622  0110D4  0EF3               	movlw	-13
 19623  0110D6  50E3               	movf	plusw1,w,c
 19624  0110D8  1001               	iorwf	btemp^0,w,c
 19625  0110DA  A4D8               	btfss	status,2,c
 19626  0110DC  D002               	goto	l12825
 19627  0110DE  0E2B               	movlw	43
 19628  0110E0  D001               	goto	L21
 19629  0110E2                     l12825:
 19630  0110E2  0E2D               	movlw	45
 19631  0110E4                     L21:
 19632  0110E4  6E0B               	movwf	(btemp+10)^0,c
 19633  0110E6  0E00               	movlw	0
 19634  0110E8  6E0C               	movwf	(btemp+11)^0,c
 19635                           
 19636                           ;stkvar	_efgtoa$5863 @ sp[(-56)+4]
 19637  0110EA  0ECC               	movlw	-52
 19638  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19639  0110F2  0ECD               	movlw	-51
 19640  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19641                           
 19642                           ;stkvar	_efgtoa$5863 @ sp[(-56)+4]
 19643                           ;stkvar	_i @ sp[(-56)+36]
 19644  0110FA  0EEC               	movlw	-20
 19645  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19646  011102  0EED               	movlw	-19
 19647  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 19648  01110A  0E97               	movlw	low _dbuf
 19649  01110C  240B               	addwf	(btemp+10)^0,w,c
 19650  01110E  6ED9               	movwf	fsr2l,c
 19651  011110  0E02               	movlw	high _dbuf
 19652  011112  200C               	addwfc	(btemp+11)^0,w,c
 19653  011114  6EDA               	movwf	fsr2h,c
 19654  011116  0ECC               	movlw	-52
 19655  011118  006F FF8F FFDF     	movff	plusw1,indf2
 19656                           
 19657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 19658                           ;stkvar	_w @ sp[(-56)+38]
 19659  01111E  50E1               	movf	fsr1l,w,c
 19660  011120  0FEE               	addlw	-18
 19661  011122  6ED9               	movwf	fsr2l,c
 19662  011124  50E2               	movf	fsr1h,w,c
 19663  011126  6EDA               	movwf	fsr2h,c
 19664  011128  0EFF               	movlw	255
 19665  01112A  22DA               	addwfc	fsr2h,f,c
 19666  01112C  06DE               	decf	postinc2,f,c
 19667  01112E  0E00               	movlw	0
 19668  011130  5ADD               	subwfb	postdec2,f,c
 19669                           
 19670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 19671                           ;stkvar	_i @ sp[(-56)+36]
 19672  011132  50E1               	movf	fsr1l,w,c
 19673  011134  0FEC               	addlw	-20
 19674  011136  6ED9               	movwf	fsr2l,c
 19675  011138  50E2               	movf	fsr1h,w,c
 19676  01113A  6EDA               	movwf	fsr2h,c
 19677  01113C  0EFF               	movlw	255
 19678  01113E  22DA               	addwfc	fsr2h,f,c
 19679  011140  06DE               	decf	postinc2,f,c
 19680  011142  0E00               	movlw	0
 19681  011144  5ADD               	subwfb	postdec2,f,c
 19682  011146  0EBF               	movlw	191
 19683  011148  6E0B               	movwf	(btemp+10)^0,c
 19684  01114A  0EFF               	movlw	255
 19685  01114C  6E0C               	movwf	(btemp+11)^0,c
 19686                           
 19687                           ;stkvar	_c @ sp[(-56)+-7]
 19688  01114E  0EC1               	movlw	-63
 19689  011150  50E3               	movf	plusw1,w,c
 19690  011152  6E09               	movwf	(btemp+8)^0,c
 19691  011154  6A0A               	clrf	(btemp+9)^0,c
 19692  011156  500B               	movf	(btemp+10)^0,w,c
 19693  011158  2609               	addwf	(btemp+8)^0,f,c
 19694  01115A  500C               	movf	(btemp+11)^0,w,c
 19695  01115C  220A               	addwfc	(btemp+9)^0,f,c
 19696  01115E  500A               	movf	(btemp+9)^0,w,c
 19697  011160  E106               	bnz	u12020
 19698  011162  0E1A               	movlw	26
 19699  011164  5C09               	subwf	(btemp+8)^0,w,c
 19700  011166  B0D8               	btfsc	status,0,c
 19701  011168  D002               	goto	u12020
 19702  01116A  0E01               	movlw	1
 19703  01116C  D001               	goto	u12030
 19704  01116E                     u12020:
 19705  01116E  0E00               	movlw	0
 19706  011170                     u12030:
 19707  011170  6E0B               	movwf	(btemp+10)^0,c
 19708  011172  6A0C               	clrf	(btemp+11)^0,c
 19709                           
 19710                           ;stkvar	_efgtoa$5865 @ sp[(-56)+0]
 19711  011174  0EC8               	movlw	-56
 19712  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19713  01117C  0EC9               	movlw	-55
 19714  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19715                           
 19716                           ;stkvar	_efgtoa$5865 @ sp[(-56)+0]
 19717  011184  0EC8               	movlw	-56
 19718  011186  006F FF8C  F001    	movff	plusw1,btemp
 19719  01118C  0EC9               	movlw	-55
 19720  01118E  50E3               	movf	plusw1,w,c
 19721  011190  1001               	iorwf	btemp^0,w,c
 19722  011192  A4D8               	btfss	status,2,c
 19723  011194  D002               	goto	l12841
 19724  011196  0E65               	movlw	101
 19725  011198  D001               	goto	L22
 19726  01119A                     l12841:
 19727  01119A  0E45               	movlw	69
 19728  01119C                     L22:
 19729  01119C  6E0B               	movwf	(btemp+10)^0,c
 19730  01119E  0E00               	movlw	0
 19731  0111A0  6E0C               	movwf	(btemp+11)^0,c
 19732                           
 19733                           ;stkvar	_efgtoa$5864 @ sp[(-56)+2]
 19734  0111A2  0ECA               	movlw	-54
 19735  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19736  0111AA  0ECB               	movlw	-53
 19737  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19738                           
 19739                           ;stkvar	_efgtoa$5864 @ sp[(-56)+2]
 19740                           ;stkvar	_i @ sp[(-56)+36]
 19741  0111B2  0EEC               	movlw	-20
 19742  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19743  0111BA  0EED               	movlw	-19
 19744  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19745  0111C2  0E97               	movlw	low _dbuf
 19746  0111C4  240B               	addwf	(btemp+10)^0,w,c
 19747  0111C6  6ED9               	movwf	fsr2l,c
 19748  0111C8  0E02               	movlw	high _dbuf
 19749  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 19750  0111CC  6EDA               	movwf	fsr2h,c
 19751  0111CE  0ECA               	movlw	-54
 19752  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 19753                           
 19754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 19755                           ;stkvar	_w @ sp[(-56)+38]
 19756  0111D6  50E1               	movf	fsr1l,w,c
 19757  0111D8  0FEE               	addlw	-18
 19758  0111DA  6ED9               	movwf	fsr2l,c
 19759  0111DC  50E2               	movf	fsr1h,w,c
 19760  0111DE  6EDA               	movwf	fsr2h,c
 19761  0111E0  0EFF               	movlw	255
 19762  0111E2  22DA               	addwfc	fsr2h,f,c
 19763  0111E4  06DE               	decf	postinc2,f,c
 19764  0111E6  0E00               	movlw	0
 19765  0111E8  5ADD               	subwfb	postdec2,f,c
 19766                           
 19767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 19768                           ;stkvar	_i @ sp[(-56)+36]
 19769  0111EA  0EEC               	movlw	-20
 19770  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19771  0111F2  0EED               	movlw	-19
 19772  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19773  0111FA  0E97               	movlw	low _dbuf
 19774  0111FC  240B               	addwf	(btemp+10)^0,w,c
 19775  0111FE  6E09               	movwf	(btemp+8)^0,c
 19776  011200  0E02               	movlw	high _dbuf
 19777  011202  200C               	addwfc	(btemp+11)^0,w,c
 19778  011204  6E0A               	movwf	(btemp+9)^0,c
 19779  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 19780  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 19781                           
 19782                           ;stkvar	_n @ sp[(-58)+32]
 19783  011212  0E97               	movlw	low _dbuf
 19784  011214  6E0B               	movwf	(btemp+10)^0,c
 19785  011216  0E02               	movlw	high _dbuf
 19786  011218  6E0C               	movwf	(btemp+11)^0,c
 19787  01121A  0EE6               	movlw	-26
 19788  01121C  50E3               	movf	plusw1,w,c
 19789  01121E  260B               	addwf	(btemp+10)^0,f,c
 19790  011220  0EE7               	movlw	-25
 19791  011222  50E3               	movf	plusw1,w,c
 19792  011224  220C               	addwfc	(btemp+11)^0,f,c
 19793  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19794  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19795  011232  EC17  F0D4         	call	_strcpy	;wreg free
 19796  011236  EF16  F081         	goto	l12593
 19797  01123A                     l2315:
 19798                           
 19799                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 19800  01123A  0EC1               	movlw	193
 19801  01123C  26E1               	addwf	fsr1l,f,c
 19802  01123E  0EFF               	movlw	255
 19803  011240  22E2               	addwfc	fsr1h,f,c
 19804  011242  0012               	return		;funcret
 19805  011244                     __end_of_efgtoa:
 19806                           	opt callstack 0
 19807                           
 19808 ;; *************** function _tolower *****************
 19809 ;; Defined at:
 19810 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 19811 ;; Parameters:    Size  Location     Type
 19812 ;;  c               2  [STACK] int 
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;		None
 19815 ;; Return value:  Size  Location     Type
 19816 ;;                  2  [STACK] int 
 19817 ;; Registers used:
 19818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 19819 ;; Tracked objects:
 19820 ;;		On entry : 0/0
 19821 ;;		On exit  : 0/0
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19828 ;;Total ram usage:        0 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; Hardware stack levels required when called:   16
 19831 ;; This function calls:
 19832 ;;		_isupper
 19833 ;; This function is called by:
 19834 ;;		_efgtoa
 19835 ;;		_vfpfcnvrt
 19836 ;; This function uses a reentrant model
 19837 ;;
 19838                           
 19839                           	psect	text66
 19840  01B440                     __ptext66:
 19841                           	opt callstack 0
 19842  01B440                     _tolower:
 19843                           	opt callstack 0
 19844                           
 19845                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19846  01B440  52E6               	movf	postinc1,f,c
 19847  01B442  52E6               	movf	postinc1,f,c
 19848                           
 19849                           ;stkvar	_c @ sp[(-2)+-2]
 19850                           
 19851                           ;incstack = 0
 19852 ;; hardware stack exceeded
 19853  01B444  0EFC               	movlw	-4
 19854  01B446  50E3               	movf	plusw1,w,c
 19855  01B448  0FBF               	addlw	191
 19856  01B44A  6E0B               	movwf	(btemp+10)^0,c
 19857  01B44C  0EFD               	movlw	-3
 19858  01B44E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19859  01B454  0EFF               	movlw	255
 19860  01B456  220C               	addwfc	(btemp+11)^0,f,c
 19861  01B458  500C               	movf	(btemp+11)^0,w,c
 19862  01B45A  E106               	bnz	u6320
 19863  01B45C  0E1A               	movlw	26
 19864  01B45E  5C0B               	subwf	(btemp+10)^0,w,c
 19865  01B460  B0D8               	btfsc	status,0,c
 19866  01B462  D002               	goto	u6320
 19867  01B464  0E01               	movlw	1
 19868  01B466  D001               	goto	u6330
 19869  01B468                     u6320:
 19870  01B468  0E00               	movlw	0
 19871  01B46A                     u6330:
 19872  01B46A  6E0B               	movwf	(btemp+10)^0,c
 19873  01B46C  6A0C               	clrf	(btemp+11)^0,c
 19874                           
 19875                           ;stkvar	_tolower$6684 @ sp[(-2)+0]
 19876  01B46E  0EFE               	movlw	-2
 19877  01B470  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19878  01B476  0EFF               	movlw	-1
 19879  01B478  0060  F033  FFE3   	movff	btemp+11,plusw1
 19880                           
 19881                           ;stkvar	_tolower$6684 @ sp[(-2)+0]
 19882  01B47E  0EFE               	movlw	-2
 19883  01B480  006F FF8C  F001    	movff	plusw1,btemp
 19884  01B486  0EFF               	movlw	-1
 19885  01B488  50E3               	movf	plusw1,w,c
 19886  01B48A  1001               	iorwf	btemp^0,w,c
 19887  01B48C  B4D8               	btfsc	status,2,c
 19888  01B48E  D00D               	goto	l8383
 19889                           
 19890                           ;stkvar	_c @ sp[(-2)+-2]
 19891  01B490  0EFC               	movlw	-4
 19892  01B492  006F FF8C  F001    	movff	plusw1,btemp
 19893  01B498  0EFD               	movlw	-3
 19894  01B49A  006F FF8C  F002    	movff	plusw1,btemp+1
 19895  01B4A0  0E20               	movlw	32
 19896  01B4A2  1201               	iorwf	btemp^0,f,c
 19897  01B4A4  0E00               	movlw	0
 19898  01B4A6  1202               	iorwf	(btemp+1)^0,f,c
 19899  01B4A8  D008               	goto	l3587
 19900  01B4AA                     l8383:
 19901                           
 19902                           ;stkvar	_c @ sp[(-2)+-2]
 19903  01B4AA  0EFC               	movlw	-4
 19904  01B4AC  006F FF8C  F001    	movff	plusw1,btemp
 19905  01B4B2  0EFD               	movlw	-3
 19906  01B4B4  006F FF8C  F002    	movff	plusw1,btemp+1
 19907  01B4BA                     l3587:
 19908                           
 19909                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19910  01B4BA  52E5               	movf	postdec1,f,c
 19911  01B4BC  52E5               	movf	postdec1,f,c
 19912  01B4BE  52E5               	movf	postdec1,f,c
 19913  01B4C0  52E5               	movf	postdec1,f,c
 19914  01B4C2  0012               	return		;funcret
 19915  01B4C4                     __end_of_tolower:
 19916                           	opt callstack 0
 19917                           
 19918 ;; *************** function _isupper *****************
 19919 ;; Defined at:
 19920 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 19921 ;; Parameters:    Size  Location     Type
 19922 ;;  c               2  [STACK] int 
 19923 ;; Auto vars:     Size  Location     Type
 19924 ;;		None
 19925 ;; Return value:  Size  Location     Type
 19926 ;;                  2  [STACK] int 
 19927 ;; Registers used:
 19928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19929 ;; Tracked objects:
 19930 ;;		On entry : 0/0
 19931 ;;		On exit  : 0/0
 19932 ;;		Unchanged: 0/0
 19933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19938 ;;Total ram usage:        0 bytes
 19939 ;; Hardware stack levels used:    1
 19940 ;; Hardware stack levels required when called:   15
 19941 ;; This function calls:
 19942 ;;		Nothing
 19943 ;; This function is called by:
 19944 ;;		_efgtoa
 19945 ;;		_xtoa
 19946 ;;		_vfpfcnvrt
 19947 ;;		_tolower
 19948 ;; This function uses a reentrant model
 19949 ;;
 19950                           
 19951                           	psect	text67
 19952  01C344                     __ptext67:
 19953                           	opt callstack 0
 19954  01C344                     _isupper:
 19955                           	opt callstack 0
 19956                           
 19957                           ;stkvar	_c @ sp[(0)+-2]
 19958                           
 19959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19960                           ;incstack = 0
 19961 ;; hardware stack exceeded
 19962  01C344  0EFE               	movlw	-2
 19963  01C346  50E3               	movf	plusw1,w,c
 19964  01C348  0FBF               	addlw	191
 19965  01C34A  6E0B               	movwf	(btemp+10)^0,c
 19966  01C34C  0EFF               	movlw	-1
 19967  01C34E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19968  01C354  0EFF               	movlw	255
 19969  01C356  220C               	addwfc	(btemp+11)^0,f,c
 19970  01C358  500C               	movf	(btemp+11)^0,w,c
 19971  01C35A  E106               	bnz	u5670
 19972  01C35C  0E1A               	movlw	26
 19973  01C35E  5C0B               	subwf	(btemp+10)^0,w,c
 19974  01C360  B0D8               	btfsc	status,0,c
 19975  01C362  D002               	goto	u5670
 19976  01C364  0E01               	movlw	1
 19977  01C366  D001               	goto	u5680
 19978  01C368                     u5670:
 19979  01C368  0E00               	movlw	0
 19980  01C36A                     u5680:
 19981  01C36A  6E01               	movwf	btemp^0,c
 19982  01C36C  6A02               	clrf	(btemp+1)^0,c
 19983                           
 19984                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19985  01C36E  52E5               	movf	postdec1,f,c
 19986  01C370  52E5               	movf	postdec1,f,c
 19987  01C372  0012               	return		;funcret
 19988  01C374                     __end_of_isupper:
 19989                           	opt callstack 0
 19990                           
 19991 ;; *************** function _strcpy *****************
 19992 ;; Defined at:
 19993 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 19994 ;; Parameters:    Size  Location     Type
 19995 ;;  dest            2  [STACK] PTR unsigned char 
 19996 ;;		 -> dbuf(80), 
 19997 ;;  src             2  [STACK] PTR const unsigned char 
 19998 ;;		 -> STR_81(4), STR_80(4), STR_77(4), STR_76(4), 
 19999 ;;		 -> dbuf(80), 
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;  d               2  [STACK] PTR unsigned char 
 20002 ;;		 -> dbuf(80), 
 20003 ;;  s               2  [STACK] PTR const unsigned char 
 20004 ;;		 -> STR_81(4), STR_80(4), STR_77(4), STR_76(4), 
 20005 ;;		 -> dbuf(80), 
 20006 ;; Return value:  Size  Location     Type
 20007 ;;                  2  [STACK] PTR unsigned char 
 20008 ;; Registers used:
 20009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/0
 20012 ;;		On exit  : 0/0
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20019 ;;Total ram usage:        0 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; Hardware stack levels required when called:   15
 20022 ;; This function calls:
 20023 ;;		Nothing
 20024 ;; This function is called by:
 20025 ;;		_efgtoa
 20026 ;; This function uses a reentrant model
 20027 ;;
 20028                           
 20029                           	psect	text68
 20030  01A82E                     __ptext68:
 20031                           	opt callstack 0
 20032  01A82E                     _strcpy:
 20033                           	opt callstack 0
 20034                           
 20035                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20036  01A82E  52E6               	movf	postinc1,f,c
 20037  01A830  52E6               	movf	postinc1,f,c
 20038  01A832  52E6               	movf	postinc1,f,c
 20039  01A834  52E6               	movf	postinc1,f,c
 20040                           
 20041                           ;stkvar	_src @ sp[(-4)+-4]
 20042                           
 20043                           ;incstack = 0
 20044 ;; hardware stack exceeded
 20045  01A836  0EF8               	movlw	-8
 20046  01A838  006F FF8C  F00B    	movff	plusw1,btemp+10
 20047  01A83E  0EF9               	movlw	-7
 20048  01A840  006F FF8C  F00C    	movff	plusw1,btemp+11
 20049                           
 20050                           ;stkvar	_s @ sp[(-4)+2]
 20051  01A846  0EFF               	movlw	-1
 20052  01A848  0060  F033  FFE3   	movff	btemp+11,plusw1
 20053  01A84E  0EFE               	movlw	-2
 20054  01A850  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20055                           
 20056                           ;stkvar	_dest @ sp[(-4)+-2]
 20057  01A856  0EFA               	movlw	-6
 20058  01A858  006F FF8C  F00B    	movff	plusw1,btemp+10
 20059  01A85E  0EFB               	movlw	-5
 20060  01A860  006F FF8C  F00C    	movff	plusw1,btemp+11
 20061                           
 20062                           ;stkvar	_d @ sp[(-4)+0]
 20063  01A866  0EFD               	movlw	-3
 20064  01A868  0060  F033  FFE3   	movff	btemp+11,plusw1
 20065  01A86E  0EFC               	movlw	-4
 20066  01A870  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20067  01A876                     l12455:
 20068                           
 20069                           ;stkvar	_s @ sp[(-4)+2]
 20070  01A876  50E1               	movf	fsr1l,w,c
 20071  01A878  0FFE               	addlw	-2
 20072  01A87A  6ED9               	movwf	fsr2l,c
 20073  01A87C  50E2               	movf	fsr1h,w,c
 20074  01A87E  6EDA               	movwf	fsr2h,c
 20075  01A880  0EFF               	movlw	255
 20076  01A882  22DA               	addwfc	fsr2h,f,c
 20077  01A884  006F FF7C  F00B    	movff	indf2,btemp+10
 20078  01A88A  0E01               	movlw	1
 20079  01A88C  26DE               	addwf	postinc2,f,c
 20080  01A88E  006F FF7C  F00C    	movff	indf2,btemp+11
 20081  01A894  0E00               	movlw	0
 20082  01A896  22DD               	addwfc	postdec2,f,c
 20083  01A898  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 20084  01A89E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 20085  01A8A4  0E00               	movlw	low (__mediumconst shr (0+16))
 20086  01A8A6  6EF8               	movwf	tblptru,c
 20087                           
 20088                           ;stkvar	_d @ sp[(-4)+0]
 20089  01A8A8  50E1               	movf	fsr1l,w,c
 20090  01A8AA  0FFC               	addlw	-4
 20091  01A8AC  6ED9               	movwf	fsr2l,c
 20092  01A8AE  50E2               	movf	fsr1h,w,c
 20093  01A8B0  6EDA               	movwf	fsr2h,c
 20094  01A8B2  0EFF               	movlw	255
 20095  01A8B4  22DA               	addwfc	fsr2h,f,c
 20096  01A8B6  006F FF7C  F00B    	movff	indf2,btemp+10
 20097  01A8BC  0E01               	movlw	1
 20098  01A8BE  26DE               	addwf	postinc2,f,c
 20099  01A8C0  006F FF7C  F00C    	movff	indf2,btemp+11
 20100  01A8C6  0E00               	movlw	0
 20101  01A8C8  22DD               	addwfc	postdec2,f,c
 20102  01A8CA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 20103  01A8D0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 20104  01A8D6  0E1F               	movlw	(high __ramtop+-1)
 20105  01A8D8  64F7               	cpfsgt	tblptrh,c
 20106  01A8DA  D003               	bra	u11327
 20107  01A8DC  0008               	tblrd		*
 20108  01A8DE  50F5               	movf	tablat,w,c
 20109  01A8E0  D007               	bra	u11320
 20110  01A8E2                     u11327:
 20111  01A8E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20112  01A8E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20113  01A8EE  50EF               	movf	indf0,w,c
 20114  01A8F0                     u11320:
 20115  01A8F0  6EDF               	movwf	indf2,c
 20116  01A8F2  50DF               	movf	indf2,w,c
 20117  01A8F4  A4D8               	btfss	status,2,c
 20118  01A8F6  D7BF               	goto	l12455
 20119                           
 20120                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 20121  01A8F8  0EF8               	movlw	248
 20122  01A8FA  26E1               	addwf	fsr1l,f,c
 20123  01A8FC  0EFF               	movlw	255
 20124  01A8FE  22E2               	addwfc	fsr1h,f,c
 20125  01A900  0012               	return		;funcret
 20126  01A902                     __end_of_strcpy:
 20127                           	opt callstack 0
 20128                           
 20129 ;; *************** function _floorf *****************
 20130 ;; Defined at:
 20131 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 20132 ;; Parameters:    Size  Location     Type
 20133 ;;  x               4  [STACK] float 
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;  u               4  [STACK] struct .
 20136 ;;  m               4  [STACK] unsigned long 
 20137 ;;  e               2  [STACK] int 
 20138 ;; Return value:  Size  Location     Type
 20139 ;;                  4  [STACK] float 
 20140 ;; Registers used:
 20141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20142 ;; Tracked objects:
 20143 ;;		On entry : 0/0
 20144 ;;		On exit  : 0/0
 20145 ;;		Unchanged: 0/0
 20146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20151 ;;Total ram usage:        0 bytes
 20152 ;; Hardware stack levels used:    1
 20153 ;; Hardware stack levels required when called:   15
 20154 ;; This function calls:
 20155 ;;		Nothing
 20156 ;; This function is called by:
 20157 ;;		_efgtoa
 20158 ;; This function uses a reentrant model
 20159 ;;
 20160                           
 20161                           	psect	text69
 20162  0164E2                     __ptext69:
 20163                           	opt callstack 0
 20164  0164E2                     _floorf:
 20165                           	opt callstack 0
 20166                           
 20167                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20168  0164E2  0E0A               	movlw	10
 20169  0164E4  26E1               	addwf	fsr1l,f,c
 20170  0164E6  0E00               	movlw	0
 20171  0164E8  22E2               	addwfc	fsr1h,f,c
 20172                           
 20173                           ;incstack = 0
 20174 ;; hardware stack exceeded
 20175  0164EA  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 20176  0164F0  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 20177  0164F6  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 20178  0164FC  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 20179                           
 20180                           ;stkvar	_u @ sp[(-10)+0]
 20181  016502  0EF6               	movlw	-10
 20182  016504  0060  F027  FFE3   	movff	btemp+8,plusw1
 20183  01650A  0EF7               	movlw	-9
 20184  01650C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20185  016512  0EF8               	movlw	-8
 20186  016514  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20187  01651A  0EF9               	movlw	-7
 20188  01651C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20189                           
 20190                           ;stkvar	_x @ sp[(-10)+-4]
 20191  016522  0EF2               	movlw	-14
 20192  016524  006F FF8C  F009    	movff	plusw1,btemp+8
 20193  01652A  0EF3               	movlw	-13
 20194  01652C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20195  016532  0EF4               	movlw	-12
 20196  016534  006F FF8C  F00B    	movff	plusw1,btemp+10
 20197  01653A  0EF5               	movlw	-11
 20198  01653C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20199                           
 20200                           ;stkvar	_u @ sp[(-10)+0]
 20201  016542  0EF6               	movlw	-10
 20202  016544  0060  F027  FFE3   	movff	btemp+8,plusw1
 20203  01654A  0EF7               	movlw	-9
 20204  01654C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20205  016552  0EF8               	movlw	-8
 20206  016554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20207  01655A  0EF9               	movlw	-7
 20208  01655C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20209  016562  0E81               	movlw	129
 20210  016564  6E0B               	movwf	(btemp+10)^0,c
 20211  016566  0EFF               	movlw	255
 20212  016568  6E0C               	movwf	(btemp+11)^0,c
 20213                           
 20214                           ;stkvar	_u @ sp[(-10)+0]
 20215  01656A  0EF6               	movlw	-10
 20216  01656C  006F FF8C  F005    	movff	plusw1,btemp+4
 20217  016572  0EF7               	movlw	-9
 20218  016574  006F FF8C  F006    	movff	plusw1,btemp+5
 20219  01657A  0EF8               	movlw	-8
 20220  01657C  006F FF8C  F007    	movff	plusw1,btemp+6
 20221  016582  0EF9               	movlw	-7
 20222  016584  006F FF8C  F008    	movff	plusw1,btemp+7
 20223  01658A  0E18               	movlw	24
 20224  01658C  D005               	goto	u6350
 20225  01658E                     u6355:
 20226  01658E  90D8               	bcf	status,0,c
 20227  016590  3208               	rrcf	(btemp+7)^0,f,c
 20228  016592  3207               	rrcf	(btemp+6)^0,f,c
 20229  016594  3206               	rrcf	(btemp+5)^0,f,c
 20230  016596  3205               	rrcf	(btemp+4)^0,f,c
 20231  016598                     u6350:
 20232  016598  2EE8               	decfsz	wreg,f,c
 20233  01659A  D7F9               	goto	u6355
 20234  01659C  0060  F014  F009   	movff	btemp+4,btemp+8
 20235  0165A2  0060  F018  F00A   	movff	btemp+5,btemp+9
 20236  0165A8  0EFF               	movlw	255
 20237  0165AA  1609               	andwf	(btemp+8)^0,f,c
 20238  0165AC  0E00               	movlw	0
 20239  0165AE  160A               	andwf	(btemp+9)^0,f,c
 20240  0165B0  500B               	movf	(btemp+10)^0,w,c
 20241  0165B2  2609               	addwf	(btemp+8)^0,f,c
 20242  0165B4  500C               	movf	(btemp+11)^0,w,c
 20243  0165B6  220A               	addwfc	(btemp+9)^0,f,c
 20244                           
 20245                           ;stkvar	_e @ sp[(-10)+8]
 20246  0165B8  0EFE               	movlw	-2
 20247  0165BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 20248  0165C0  0EFF               	movlw	-1
 20249  0165C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20250                           
 20251                           ;stkvar	_e @ sp[(-10)+8]
 20252  0165C8  0EFF               	movlw	-1
 20253  0165CA  BEE3               	btfsc	plusw1,7,c
 20254  0165CC  D019               	goto	l8397
 20255  0165CE  0EFF               	movlw	-1
 20256  0165D0  50E3               	movf	plusw1,w,c
 20257  0165D2  E108               	bnz	u6360
 20258  0165D4  0EFE               	movlw	-2
 20259  0165D6  006F FF8C  F001    	movff	plusw1,btemp
 20260  0165DC  0E17               	movlw	23
 20261  0165DE  5E01               	subwf	btemp^0,f,c
 20262  0165E0  A0D8               	btfss	status,0,c
 20263  0165E2  D00E               	goto	l8397
 20264  0165E4                     u6360:
 20265                           
 20266                           ;stkvar	_x @ sp[(-10)+-4]
 20267  0165E4  0EF2               	movlw	-14
 20268  0165E6  006F FF8C  F001    	movff	plusw1,btemp
 20269  0165EC  0EF3               	movlw	-13
 20270  0165EE  006F FF8C  F002    	movff	plusw1,btemp+1
 20271  0165F4  0EF4               	movlw	-12
 20272  0165F6  006F FF8C  F003    	movff	plusw1,btemp+2
 20273  0165FC  0EF5               	movlw	-11
 20274  0165FE  D11F               	goto	L23
 20275  016600                     l8397:
 20276                           
 20277                           ;stkvar	_e @ sp[(-10)+8]
 20278  016600  0EFF               	movlw	-1
 20279  016602  BEE3               	btfsc	plusw1,7,c
 20280  016604  D0B4               	goto	l8413
 20281                           
 20282                           ;stkvar	_e @ sp[(-10)+8]
 20283  016606  0EFE               	movlw	-2
 20284  016608  006F FF8C  F00C    	movff	plusw1,btemp+11
 20285  01660E  0EFF               	movlw	255
 20286  016610  6E05               	movwf	(btemp+4)^0,c
 20287  016612  0EFF               	movlw	255
 20288  016614  6E06               	movwf	(btemp+5)^0,c
 20289  016616  0E7F               	movlw	127
 20290  016618  6E07               	movwf	(btemp+6)^0,c
 20291  01661A  0E00               	movlw	0
 20292  01661C  6E08               	movwf	(btemp+7)^0,c
 20293  01661E                     u6385:
 20294  01661E  660C               	tstfsz	(btemp+11)^0,c
 20295  016620  D001               	goto	u6386
 20296  016622  D007               	goto	u6387
 20297  016624                     u6386:
 20298  016624  3408               	rlcf	(btemp+7)^0,w,c
 20299  016626  3208               	rrcf	(btemp+7)^0,f,c
 20300  016628  3207               	rrcf	(btemp+6)^0,f,c
 20301  01662A  3206               	rrcf	(btemp+5)^0,f,c
 20302  01662C  3205               	rrcf	(btemp+4)^0,f,c
 20303  01662E  2E0C               	decfsz	(btemp+11)^0,f,c
 20304  016630  D7F6               	goto	u6385
 20305  016632                     u6387:
 20306                           
 20307                           ;stkvar	_m @ sp[(-10)+4]
 20308  016632  0EFA               	movlw	-6
 20309  016634  0060  F017  FFE3   	movff	btemp+4,plusw1
 20310  01663A  0EFB               	movlw	-5
 20311  01663C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 20312  016642  0EFC               	movlw	-4
 20313  016644  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20314  01664A  0EFD               	movlw	-3
 20315  01664C  0060  F023  FFE3   	movff	btemp+7,plusw1
 20316                           
 20317                           ;stkvar	_m @ sp[(-10)+4]
 20318                           ;stkvar	_u @ sp[(-10)+0]
 20319  016652  0EF6               	movlw	-10
 20320  016654  006F FF8C  F009    	movff	plusw1,btemp+8
 20321  01665A  0EF7               	movlw	-9
 20322  01665C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20323  016662  0EF8               	movlw	-8
 20324  016664  006F FF8C  F00B    	movff	plusw1,btemp+10
 20325  01666A  0EF9               	movlw	-7
 20326  01666C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20327  016672  0EFA               	movlw	-6
 20328  016674  50E3               	movf	plusw1,w,c
 20329  016676  1609               	andwf	(btemp+8)^0,f,c
 20330  016678  0EFB               	movlw	-5
 20331  01667A  50E3               	movf	plusw1,w,c
 20332  01667C  160A               	andwf	(btemp+9)^0,f,c
 20333  01667E  0EFC               	movlw	-4
 20334  016680  50E3               	movf	plusw1,w,c
 20335  016682  160B               	andwf	(btemp+10)^0,f,c
 20336  016684  0EFD               	movlw	-3
 20337  016686  50E3               	movf	plusw1,w,c
 20338  016688  160C               	andwf	(btemp+11)^0,f,c
 20339  01668A  5009               	movf	(btemp+8)^0,w,c
 20340  01668C  100A               	iorwf	(btemp+9)^0,w,c
 20341  01668E  100B               	iorwf	(btemp+10)^0,w,c
 20342  016690  100C               	iorwf	(btemp+11)^0,w,c
 20343  016692  B4D8               	btfsc	status,2,c
 20344  016694  D7A7               	goto	u6360
 20345                           
 20346                           ;stkvar	_u @ sp[(-10)+0]
 20347  016696  0EF6               	movlw	-10
 20348  016698  006F FF8C  F009    	movff	plusw1,btemp+8
 20349  01669E  0EF7               	movlw	-9
 20350  0166A0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20351  0166A6  0EF8               	movlw	-8
 20352  0166A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20353  0166AE  0EF9               	movlw	-7
 20354  0166B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20355  0166B6  0E20               	movlw	32
 20356  0166B8  D005               	goto	u6400
 20357  0166BA                     u6405:
 20358  0166BA  90D8               	bcf	status,0,c
 20359  0166BC  320C               	rrcf	(btemp+11)^0,f,c
 20360  0166BE  320B               	rrcf	(btemp+10)^0,f,c
 20361  0166C0  320A               	rrcf	(btemp+9)^0,f,c
 20362  0166C2  3209               	rrcf	(btemp+8)^0,f,c
 20363  0166C4                     u6400:
 20364  0166C4  2EE8               	decfsz	wreg,f,c
 20365  0166C6  D7F9               	goto	u6405
 20366  0166C8  5009               	movf	(btemp+8)^0,w,c
 20367  0166CA  B4D8               	btfsc	status,2,c
 20368  0166CC  D028               	goto	l8411
 20369                           
 20370                           ;stkvar	_m @ sp[(-10)+4]
 20371                           ;stkvar	_u @ sp[(-10)+0]
 20372  0166CE  0EF6               	movlw	-10
 20373  0166D0  50E3               	movf	plusw1,w,c
 20374  0166D2  6E01               	movwf	btemp^0,c
 20375  0166D4  0EFA               	movlw	-6
 20376  0166D6  50E3               	movf	plusw1,w,c
 20377  0166D8  2601               	addwf	btemp^0,f,c
 20378  0166DA  0EF6               	movlw	-10
 20379  0166DC  0060  F007  FFE3   	movff	btemp,plusw1
 20380  0166E2  0EF7               	movlw	-9
 20381  0166E4  50E3               	movf	plusw1,w,c
 20382  0166E6  6E01               	movwf	btemp^0,c
 20383  0166E8  0EFB               	movlw	-5
 20384  0166EA  50E3               	movf	plusw1,w,c
 20385  0166EC  2201               	addwfc	btemp^0,f,c
 20386  0166EE  0EF7               	movlw	-9
 20387  0166F0  0060  F007  FFE3   	movff	btemp,plusw1
 20388  0166F6  0EF8               	movlw	-8
 20389  0166F8  50E3               	movf	plusw1,w,c
 20390  0166FA  6E01               	movwf	btemp^0,c
 20391  0166FC  0EFC               	movlw	-4
 20392  0166FE  50E3               	movf	plusw1,w,c
 20393  016700  2201               	addwfc	btemp^0,f,c
 20394  016702  0EF8               	movlw	-8
 20395  016704  0060  F007  FFE3   	movff	btemp,plusw1
 20396  01670A  0EF9               	movlw	-7
 20397  01670C  50E3               	movf	plusw1,w,c
 20398  01670E  6E01               	movwf	btemp^0,c
 20399  016710  0EFD               	movlw	-3
 20400  016712  50E3               	movf	plusw1,w,c
 20401  016714  2201               	addwfc	btemp^0,f,c
 20402  016716  0EF9               	movlw	-7
 20403  016718  0060  F007  FFE3   	movff	btemp,plusw1
 20404  01671E                     l8411:
 20405                           
 20406                           ;stkvar	_m @ sp[(-10)+4]
 20407  01671E  0EFA               	movlw	-6
 20408  016720  006F FF8C  F009    	movff	plusw1,btemp+8
 20409  016726  0EFB               	movlw	-5
 20410  016728  006F FF8C  F00A    	movff	plusw1,btemp+9
 20411  01672E  0EFC               	movlw	-4
 20412  016730  006F FF8C  F00B    	movff	plusw1,btemp+10
 20413  016736  0EFD               	movlw	-3
 20414  016738  006F FF8C  F00C    	movff	plusw1,btemp+11
 20415  01673E  1C09               	comf	(btemp+8)^0,w,c
 20416  016740  6E05               	movwf	(btemp+4)^0,c
 20417  016742  1C0A               	comf	(btemp+9)^0,w,c
 20418  016744  6E06               	movwf	(btemp+5)^0,c
 20419  016746  1C0B               	comf	(btemp+10)^0,w,c
 20420  016748  6E07               	movwf	(btemp+6)^0,c
 20421  01674A  1C0C               	comf	(btemp+11)^0,w,c
 20422  01674C  6E08               	movwf	(btemp+7)^0,c
 20423                           
 20424                           ;stkvar	_u @ sp[(-10)+0]
 20425  01674E  50E1               	movf	fsr1l,w,c
 20426  016750  0FF6               	addlw	-10
 20427  016752  6ED9               	movwf	fsr2l,c
 20428  016754  50E2               	movf	fsr1h,w,c
 20429  016756  6EDA               	movwf	fsr2h,c
 20430  016758  0EFF               	movlw	255
 20431  01675A  22DA               	addwfc	fsr2h,f,c
 20432  01675C  5005               	movf	(btemp+4)^0,w,c
 20433  01675E  16DE               	andwf	postinc2,f,c
 20434  016760  5006               	movf	(btemp+5)^0,w,c
 20435  016762  16DE               	andwf	postinc2,f,c
 20436  016764  5007               	movf	(btemp+6)^0,w,c
 20437  016766  16DE               	andwf	postinc2,f,c
 20438  016768  5008               	movf	(btemp+7)^0,w,c
 20439  01676A  16DE               	andwf	postinc2,f,c
 20440  01676C  D05B               	goto	l8421
 20441  01676E                     l8413:
 20442                           
 20443                           ;stkvar	_u @ sp[(-10)+0]
 20444  01676E  0EF6               	movlw	-10
 20445  016770  006F FF8C  F009    	movff	plusw1,btemp+8
 20446  016776  0EF7               	movlw	-9
 20447  016778  006F FF8C  F00A    	movff	plusw1,btemp+9
 20448  01677E  0EF8               	movlw	-8
 20449  016780  006F FF8C  F00B    	movff	plusw1,btemp+10
 20450  016786  0EF9               	movlw	-7
 20451  016788  006F FF8C  F00C    	movff	plusw1,btemp+11
 20452  01678E  0E20               	movlw	32
 20453  016790  D005               	goto	u6420
 20454  016792                     u6425:
 20455  016792  90D8               	bcf	status,0,c
 20456  016794  320C               	rrcf	(btemp+11)^0,f,c
 20457  016796  320B               	rrcf	(btemp+10)^0,f,c
 20458  016798  320A               	rrcf	(btemp+9)^0,f,c
 20459  01679A  3209               	rrcf	(btemp+8)^0,f,c
 20460  01679C                     u6420:
 20461  01679C  2EE8               	decfsz	wreg,f,c
 20462  01679E  D7F9               	goto	u6425
 20463  0167A0  6609               	tstfsz	(btemp+8)^0,c
 20464  0167A2  D009               	goto	l8417
 20465                           
 20466                           ;stkvar	_u @ sp[(-10)+0]
 20467  0167A4  0EF6               	movlw	-10
 20468  0167A6  6AE3               	clrf	plusw1,c
 20469  0167A8  0EF7               	movlw	-9
 20470  0167AA  6AE3               	clrf	plusw1,c
 20471  0167AC  0EF8               	movlw	-8
 20472  0167AE  6AE3               	clrf	plusw1,c
 20473  0167B0  0EF9               	movlw	-7
 20474  0167B2  6AE3               	clrf	plusw1,c
 20475  0167B4  D037               	goto	l8421
 20476  0167B6                     l8417:
 20477                           
 20478                           ;stkvar	_u @ sp[(-10)+0]
 20479  0167B6  0EF6               	movlw	-10
 20480  0167B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20481  0167BE  0EF7               	movlw	-9
 20482  0167C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20483  0167C6  0EF8               	movlw	-8
 20484  0167C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20485  0167CE  0EF9               	movlw	-7
 20486  0167D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20487  0167D6  90D8               	bcf	status,0,c
 20488  0167D8  3409               	rlcf	(btemp+8)^0,w,c
 20489  0167DA  6E05               	movwf	(btemp+4)^0,c
 20490  0167DC  340A               	rlcf	(btemp+9)^0,w,c
 20491  0167DE  6E06               	movwf	(btemp+5)^0,c
 20492  0167E0  340B               	rlcf	(btemp+10)^0,w,c
 20493  0167E2  6E07               	movwf	(btemp+6)^0,c
 20494  0167E4  340C               	rlcf	(btemp+11)^0,w,c
 20495  0167E6  6E08               	movwf	(btemp+7)^0,c
 20496  0167E8  5005               	movf	(btemp+4)^0,w,c
 20497  0167EA  1006               	iorwf	(btemp+5)^0,w,c
 20498  0167EC  1007               	iorwf	(btemp+6)^0,w,c
 20499  0167EE  1008               	iorwf	(btemp+7)^0,w,c
 20500  0167F0  B4D8               	btfsc	status,2,c
 20501  0167F2  D018               	goto	l8421
 20502  0167F4  0E00               	movlw	0
 20503  0167F6  6E09               	movwf	(btemp+8)^0,c
 20504  0167F8  0E00               	movlw	0
 20505  0167FA  6E0A               	movwf	(btemp+9)^0,c
 20506  0167FC  0E80               	movlw	128
 20507  0167FE  6E0B               	movwf	(btemp+10)^0,c
 20508  016800  0EBF               	movlw	191
 20509  016802  6E0C               	movwf	(btemp+11)^0,c
 20510                           
 20511                           ;stkvar	_u @ sp[(-10)+0]
 20512  016804  0EF6               	movlw	-10
 20513  016806  0060  F027  FFE3   	movff	btemp+8,plusw1
 20514  01680C  0EF7               	movlw	-9
 20515  01680E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20516  016814  0EF8               	movlw	-8
 20517  016816  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20518  01681C  0EF9               	movlw	-7
 20519  01681E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20520  016824                     l8421:
 20521                           
 20522                           ;stkvar	_u @ sp[(-10)+0]
 20523  016824  0EF6               	movlw	-10
 20524  016826  006F FF8C  F001    	movff	plusw1,btemp
 20525  01682C  0EF7               	movlw	-9
 20526  01682E  006F FF8C  F002    	movff	plusw1,btemp+1
 20527  016834  0EF8               	movlw	-8
 20528  016836  006F FF8C  F003    	movff	plusw1,btemp+2
 20529  01683C  0EF9               	movlw	-7
 20530  01683E                     L23:
 20531  01683E  006F FF8C  F004    	movff	plusw1,btemp+3
 20532                           
 20533                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20534  016844  0EF2               	movlw	242
 20535  016846  26E1               	addwf	fsr1l,f,c
 20536  016848  0EFF               	movlw	255
 20537  01684A  22E2               	addwfc	fsr1h,f,c
 20538  01684C  0012               	return		;funcret
 20539  01684E                     __end_of_floorf:
 20540                           	opt callstack 0
 20541                           
 20542 ;; *************** function ___fpclassifyf *****************
 20543 ;; Defined at:
 20544 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 20545 ;; Parameters:    Size  Location     Type
 20546 ;;  x               4  [STACK] float 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  u               4  [STACK] struct .
 20549 ;;  e               2  [STACK] int 
 20550 ;; Return value:  Size  Location     Type
 20551 ;;                  2  [STACK] int 
 20552 ;; Registers used:
 20553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 20554 ;; Tracked objects:
 20555 ;;		On entry : 0/0
 20556 ;;		On exit  : 0/0
 20557 ;;		Unchanged: 0/0
 20558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;Total ram usage:        0 bytes
 20564 ;; Hardware stack levels used:    1
 20565 ;; Hardware stack levels required when called:   15
 20566 ;; This function calls:
 20567 ;;		Nothing
 20568 ;; This function is called by:
 20569 ;;		_efgtoa
 20570 ;; This function uses a reentrant model
 20571 ;;
 20572                           
 20573                           	psect	text70
 20574  018EFE                     __ptext70:
 20575                           	opt callstack 0
 20576  018EFE                     ___fpclassifyf:
 20577                           	opt callstack 0
 20578                           
 20579                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20580  018EFE  0E06               	movlw	6
 20581  018F00  26E1               	addwf	fsr1l,f,c
 20582  018F02  0E00               	movlw	0
 20583  018F04  22E2               	addwfc	fsr1h,f,c
 20584                           
 20585                           ;incstack = 0
 20586 ;; hardware stack exceeded
 20587  018F06  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 20588  018F0C  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 20589  018F12  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 20590  018F18  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 20591                           
 20592                           ;stkvar	_u @ sp[(-6)+0]
 20593  018F1E  0EFA               	movlw	-6
 20594  018F20  0060  F027  FFE3   	movff	btemp+8,plusw1
 20595  018F26  0EFB               	movlw	-5
 20596  018F28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20597  018F2E  0EFC               	movlw	-4
 20598  018F30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20599  018F36  0EFD               	movlw	-3
 20600  018F38  0060  F033  FFE3   	movff	btemp+11,plusw1
 20601                           
 20602                           ;stkvar	_x @ sp[(-6)+-4]
 20603  018F3E  0EF6               	movlw	-10
 20604  018F40  006F FF8C  F009    	movff	plusw1,btemp+8
 20605  018F46  0EF7               	movlw	-9
 20606  018F48  006F FF8C  F00A    	movff	plusw1,btemp+9
 20607  018F4E  0EF8               	movlw	-8
 20608  018F50  006F FF8C  F00B    	movff	plusw1,btemp+10
 20609  018F56  0EF9               	movlw	-7
 20610  018F58  006F FF8C  F00C    	movff	plusw1,btemp+11
 20611                           
 20612                           ;stkvar	_u @ sp[(-6)+0]
 20613  018F5E  0EFA               	movlw	-6
 20614  018F60  0060  F027  FFE3   	movff	btemp+8,plusw1
 20615  018F66  0EFB               	movlw	-5
 20616  018F68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20617  018F6E  0EFC               	movlw	-4
 20618  018F70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20619  018F76  0EFD               	movlw	-3
 20620  018F78  0060  F033  FFE3   	movff	btemp+11,plusw1
 20621                           
 20622                           ;stkvar	_u @ sp[(-6)+0]
 20623  018F7E  0EFA               	movlw	-6
 20624  018F80  006F FF8C  F009    	movff	plusw1,btemp+8
 20625  018F86  0EFB               	movlw	-5
 20626  018F88  006F FF8C  F00A    	movff	plusw1,btemp+9
 20627  018F8E  0EFC               	movlw	-4
 20628  018F90  006F FF8C  F00B    	movff	plusw1,btemp+10
 20629  018F96  0EFD               	movlw	-3
 20630  018F98  006F FF8C  F00C    	movff	plusw1,btemp+11
 20631  018F9E  0E18               	movlw	24
 20632  018FA0  D005               	goto	u6230
 20633  018FA2                     u6235:
 20634  018FA2  90D8               	bcf	status,0,c
 20635  018FA4  320C               	rrcf	(btemp+11)^0,f,c
 20636  018FA6  320B               	rrcf	(btemp+10)^0,f,c
 20637  018FA8  320A               	rrcf	(btemp+9)^0,f,c
 20638  018FAA  3209               	rrcf	(btemp+8)^0,f,c
 20639  018FAC                     u6230:
 20640  018FAC  2EE8               	decfsz	wreg,f,c
 20641  018FAE  D7F9               	goto	u6235
 20642  018FB0  0060  F024  F007   	movff	btemp+8,btemp+6
 20643  018FB6  0060  F028  F008   	movff	btemp+9,btemp+7
 20644  018FBC  0EFF               	movlw	255
 20645  018FBE  1607               	andwf	(btemp+6)^0,f,c
 20646  018FC0  0E00               	movlw	0
 20647  018FC2  1608               	andwf	(btemp+7)^0,f,c
 20648                           
 20649                           ;stkvar	_e @ sp[(-6)+4]
 20650  018FC4  0EFE               	movlw	-2
 20651  018FC6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20652  018FCC  0EFF               	movlw	-1
 20653  018FCE  0060  F023  FFE3   	movff	btemp+7,plusw1
 20654                           
 20655                           ;stkvar	_e @ sp[(-6)+4]
 20656  018FD4  0EFE               	movlw	-2
 20657  018FD6  006F FF8C  F001    	movff	plusw1,btemp
 20658  018FDC  0EFF               	movlw	-1
 20659  018FDE  50E3               	movf	plusw1,w,c
 20660  018FE0  1001               	iorwf	btemp^0,w,c
 20661  018FE2  A4D8               	btfss	status,2,c
 20662  018FE4  D023               	goto	l8359
 20663                           
 20664                           ;stkvar	_u @ sp[(-6)+0]
 20665  018FE6  0EFA               	movlw	-6
 20666  018FE8  006F FF8C  F009    	movff	plusw1,btemp+8
 20667  018FEE  0EFB               	movlw	-5
 20668  018FF0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20669  018FF6  0EFC               	movlw	-4
 20670  018FF8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20671  018FFE  0EFD               	movlw	-3
 20672  019000  006F FF8C  F00C    	movff	plusw1,btemp+11
 20673  019006  90D8               	bcf	status,0,c
 20674  019008  3409               	rlcf	(btemp+8)^0,w,c
 20675  01900A  6E05               	movwf	(btemp+4)^0,c
 20676  01900C  340A               	rlcf	(btemp+9)^0,w,c
 20677  01900E  6E06               	movwf	(btemp+5)^0,c
 20678  019010  340B               	rlcf	(btemp+10)^0,w,c
 20679  019012  6E07               	movwf	(btemp+6)^0,c
 20680  019014  340C               	rlcf	(btemp+11)^0,w,c
 20681  019016  6E08               	movwf	(btemp+7)^0,c
 20682  019018  5005               	movf	(btemp+4)^0,w,c
 20683  01901A  1006               	iorwf	(btemp+5)^0,w,c
 20684  01901C  1007               	iorwf	(btemp+6)^0,w,c
 20685  01901E  1008               	iorwf	(btemp+7)^0,w,c
 20686  019020  A4D8               	btfss	status,2,c
 20687  019022  D002               	goto	l8355
 20688  019024  0E02               	movlw	2
 20689  019026  D02E               	goto	L24
 20690  019028                     l8355:
 20691  019028  0E03               	movlw	3
 20692  01902A  D02C               	goto	L24
 20693  01902C                     l8359:
 20694                           
 20695                           ;stkvar	_e @ sp[(-6)+4]
 20696  01902C  0EFE               	movlw	-2
 20697  01902E  28E3               	incf	plusw1,w,c
 20698  019030  E128               	bnz	l8365
 20699  019032  0EFF               	movlw	-1
 20700  019034  50E3               	movf	plusw1,w,c
 20701  019036  A4D8               	btfss	status,2,c
 20702  019038  D024               	goto	l8365
 20703                           
 20704                           ;stkvar	_u @ sp[(-6)+0]
 20705  01903A  0EFA               	movlw	-6
 20706  01903C  006F FF8C  F009    	movff	plusw1,btemp+8
 20707  019042  0EFB               	movlw	-5
 20708  019044  006F FF8C  F00A    	movff	plusw1,btemp+9
 20709  01904A  0EFC               	movlw	-4
 20710  01904C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20711  019052  0EFD               	movlw	-3
 20712  019054  006F FF8C  F00C    	movff	plusw1,btemp+11
 20713  01905A  0E09               	movlw	9
 20714  01905C                     u6275:
 20715  01905C  90D8               	bcf	status,0,c
 20716  01905E  3609               	rlcf	(btemp+8)^0,f,c
 20717  019060  360A               	rlcf	(btemp+9)^0,f,c
 20718  019062  360B               	rlcf	(btemp+10)^0,f,c
 20719  019064  360C               	rlcf	(btemp+11)^0,f,c
 20720  019066  2EE8               	decfsz	wreg,f,c
 20721  019068  D7F9               	goto	u6275
 20722  01906A  5009               	movf	(btemp+8)^0,w,c
 20723  01906C  100A               	iorwf	(btemp+9)^0,w,c
 20724  01906E  100B               	iorwf	(btemp+10)^0,w,c
 20725  019070  100C               	iorwf	(btemp+11)^0,w,c
 20726  019072  A4D8               	btfss	status,2,c
 20727  019074  D002               	goto	u6280
 20728  019076  0E01               	movlw	1
 20729  019078  D001               	goto	u6290
 20730  01907A                     u6280:
 20731  01907A  0E00               	movlw	0
 20732  01907C                     u6290:
 20733  01907C  6E01               	movwf	btemp^0,c
 20734  01907E  6A02               	clrf	(btemp+1)^0,c
 20735  019080  D004               	goto	l3197
 20736  019082                     l8365:
 20737  019082  0E04               	movlw	4
 20738  019084                     L24:
 20739  019084  6E01               	movwf	btemp^0,c
 20740  019086  0E00               	movlw	0
 20741  019088  6E02               	movwf	(btemp+1)^0,c
 20742  01908A                     l3197:
 20743                           
 20744                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 20745  01908A  0EF6               	movlw	246
 20746  01908C  26E1               	addwf	fsr1l,f,c
 20747  01908E  0EFF               	movlw	255
 20748  019090  22E2               	addwfc	fsr1h,f,c
 20749  019092  0012               	return		;funcret
 20750  019094                     __end_of___fpclassifyf:
 20751                           	opt callstack 0
 20752                           
 20753 ;; *************** function ___fltol *****************
 20754 ;; Defined at:
 20755 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 20756 ;; Parameters:    Size  Location     Type
 20757 ;;  f1              4  [STACK] int 
 20758 ;; Auto vars:     Size  Location     Type
 20759 ;;  exp1            1  [STACK] unsigned char 
 20760 ;;  sign1           1  [STACK] unsigned char 
 20761 ;; Return value:  Size  Location     Type
 20762 ;;                  4  [STACK] long 
 20763 ;; Registers used:
 20764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 20765 ;; Tracked objects:
 20766 ;;		On entry : 0/0
 20767 ;;		On exit  : 0/0
 20768 ;;		Unchanged: 0/0
 20769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20774 ;;Total ram usage:        0 bytes
 20775 ;; Hardware stack levels used:    1
 20776 ;; Hardware stack levels required when called:   15
 20777 ;; This function calls:
 20778 ;;		Nothing
 20779 ;; This function is called by:
 20780 ;;		_main
 20781 ;;		_convert_dac_raw
 20782 ;;		_calc_bsoc
 20783 ;;		_init_bsoc
 20784 ;;		_efgtoa
 20785 ;; This function uses a reentrant model
 20786 ;;
 20787                           
 20788                           	psect	text71
 20789  01939A                     __ptext71:
 20790                           	opt callstack 0
 20791  01939A                     ___fltol:
 20792                           	opt callstack 0
 20793                           
 20794                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20795  01939A  52E6               	movf	postinc1,f,c
 20796  01939C  52E6               	movf	postinc1,f,c
 20797                           
 20798                           ;stkvar	_f1 @ sp[(-2)+-4]
 20799                           
 20800                           ;incstack = 0
 20801 ;; hardware stack exceeded
 20802  01939E  0EFA               	movlw	-6
 20803  0193A0  006F FF8C  F009    	movff	plusw1,btemp+8
 20804  0193A6  0EFB               	movlw	-5
 20805  0193A8  006F FF8C  F00A    	movff	plusw1,btemp+9
 20806  0193AE  0EFC               	movlw	-4
 20807  0193B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 20808  0193B6  0EFD               	movlw	-3
 20809  0193B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 20810  0193BE  0E18               	movlw	24
 20811  0193C0  D005               	goto	u7440
 20812  0193C2                     u7445:
 20813  0193C2  90D8               	bcf	status,0,c
 20814  0193C4  320C               	rrcf	(btemp+11)^0,f,c
 20815  0193C6  320B               	rrcf	(btemp+10)^0,f,c
 20816  0193C8  320A               	rrcf	(btemp+9)^0,f,c
 20817  0193CA  3209               	rrcf	(btemp+8)^0,f,c
 20818  0193CC                     u7440:
 20819  0193CC  2EE8               	decfsz	wreg,f,c
 20820  0193CE  D7F9               	goto	u7445
 20821                           
 20822                           ;stkvar	_exp1 @ sp[(-2)+0]
 20823  0193D0  0EFE               	movlw	-2
 20824  0193D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 20825  0193D8  0EFE               	movlw	-2
 20826  0193DA  50E3               	movf	plusw1,w,c
 20827  0193DC  A4D8               	btfss	status,2,c
 20828  0193DE  D006               	goto	l8985
 20829  0193E0                     u7450:
 20830  0193E0  0E00               	movlw	0
 20831  0193E2  6E01               	movwf	btemp^0,c
 20832  0193E4  6A02               	clrf	(btemp+1)^0,c
 20833  0193E6  6A03               	clrf	(btemp+2)^0,c
 20834  0193E8  6A04               	clrf	(btemp+3)^0,c
 20835  0193EA  D08B               	goto	l2813
 20836  0193EC                     l8985:
 20837                           
 20838                           ;stkvar	_f1 @ sp[(-2)+-4]
 20839  0193EC  0EFA               	movlw	-6
 20840  0193EE  006F FF8C  F009    	movff	plusw1,btemp+8
 20841  0193F4  0EFB               	movlw	-5
 20842  0193F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 20843  0193FC  0EFC               	movlw	-4
 20844  0193FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 20845  019404  0EFD               	movlw	-3
 20846  019406  006F FF8C  F00C    	movff	plusw1,btemp+11
 20847  01940C  0E20               	movlw	32
 20848  01940E  D005               	goto	u7460
 20849  019410                     u7465:
 20850  019410  90D8               	bcf	status,0,c
 20851  019412  320C               	rrcf	(btemp+11)^0,f,c
 20852  019414  320B               	rrcf	(btemp+10)^0,f,c
 20853  019416  320A               	rrcf	(btemp+9)^0,f,c
 20854  019418  3209               	rrcf	(btemp+8)^0,f,c
 20855  01941A                     u7460:
 20856  01941A  2EE8               	decfsz	wreg,f,c
 20857  01941C  D7F9               	goto	u7465
 20858                           
 20859                           ;stkvar	_sign1 @ sp[(-2)+1]
 20860  01941E  0EFF               	movlw	-1
 20861  019420  0060  F027  FFE3   	movff	btemp+8,plusw1
 20862                           
 20863                           ;stkvar	_f1 @ sp[(-2)+-4]
 20864  019426  0EFC               	movlw	-4
 20865  019428  8EE3               	bsf	plusw1,7,c
 20866                           
 20867                           ;stkvar	_f1 @ sp[(-2)+-4]
 20868  01942A  50E1               	movf	fsr1l,w,c
 20869  01942C  0FFA               	addlw	-6
 20870  01942E  6ED9               	movwf	fsr2l,c
 20871  019430  50E2               	movf	fsr1h,w,c
 20872  019432  6EDA               	movwf	fsr2h,c
 20873  019434  0EFF               	movlw	255
 20874  019436  22DA               	addwfc	fsr2h,f,c
 20875  019438  0EFF               	movlw	255
 20876  01943A  16DE               	andwf	postinc2,f,c
 20877  01943C  0EFF               	movlw	255
 20878  01943E  16DE               	andwf	postinc2,f,c
 20879  019440  0EFF               	movlw	255
 20880  019442  16DE               	andwf	postinc2,f,c
 20881  019444  0E00               	movlw	0
 20882  019446  16DE               	andwf	postinc2,f,c
 20883                           
 20884                           ;stkvar	_exp1 @ sp[(-2)+0]
 20885  019448  0EFE               	movlw	-2
 20886  01944A  006F FF8C  F001    	movff	plusw1,btemp
 20887  019450  0E96               	movlw	150
 20888  019452  5E01               	subwf	btemp^0,f,c
 20889  019454  0EFE               	movlw	-2
 20890  019456  0060  F007  FFE3   	movff	btemp,plusw1
 20891                           
 20892                           ;stkvar	_exp1 @ sp[(-2)+0]
 20893  01945C  0EFE               	movlw	-2
 20894  01945E  AEE3               	btfss	plusw1,7,c
 20895  019460  D014               	goto	l9003
 20896                           
 20897                           ;stkvar	_exp1 @ sp[(-2)+0]
 20898  019462  0EFE               	movlw	-2
 20899  019464  50E3               	movf	plusw1,w,c
 20900  019466  0A80               	xorlw	128
 20901  019468  0F97               	addlw	151
 20902  01946A  A0D8               	btfss	status,0,c
 20903  01946C  D7B9               	goto	u7450
 20904  01946E                     l9001:
 20905                           
 20906                           ;stkvar	_f1 @ sp[(-2)+-4]
 20907  01946E  90D8               	bcf	status,0,c
 20908  019470  0EFD               	movlw	-3
 20909  019472  32E3               	rrcf	plusw1,f,c
 20910  019474  0EFC               	movlw	-4
 20911  019476  32E3               	rrcf	plusw1,f,c
 20912  019478  0EFB               	movlw	-5
 20913  01947A  32E3               	rrcf	plusw1,f,c
 20914  01947C  0EFA               	movlw	-6
 20915  01947E  32E3               	rrcf	plusw1,f,c
 20916                           
 20917                           ;stkvar	_exp1 @ sp[(-2)+0]
 20918  019480  0EFE               	movlw	-2
 20919  019482  2AE3               	incf	plusw1,f,c
 20920  019484  B4D8               	btfsc	status,2,c
 20921  019486  D018               	goto	u7510
 20922  019488  D7F2               	goto	l9001
 20923  01948A                     l9003:
 20924                           
 20925                           ;stkvar	_exp1 @ sp[(-2)+0]
 20926  01948A  0EFE               	movlw	-2
 20927  01948C  006F FF8C  F001    	movff	plusw1,btemp
 20928  019492  0E1F               	movlw	31
 20929  019494  6401               	cpfsgt	btemp^0,c
 20930  019496  D00C               	goto	l9011
 20931  019498  D7A3               	goto	u7450
 20932  01949A                     l9009:
 20933                           
 20934                           ;stkvar	_f1 @ sp[(-2)+-4]
 20935  01949A  90D8               	bcf	status,0,c
 20936  01949C  0EFA               	movlw	-6
 20937  01949E  36E3               	rlcf	plusw1,f,c
 20938  0194A0  0EFB               	movlw	-5
 20939  0194A2  36E3               	rlcf	plusw1,f,c
 20940  0194A4  0EFC               	movlw	-4
 20941  0194A6  36E3               	rlcf	plusw1,f,c
 20942  0194A8  0EFD               	movlw	-3
 20943  0194AA  36E3               	rlcf	plusw1,f,c
 20944                           
 20945                           ;stkvar	_exp1 @ sp[(-2)+0]
 20946  0194AC  0EFE               	movlw	-2
 20947  0194AE  06E3               	decf	plusw1,f,c
 20948  0194B0                     l9011:
 20949                           
 20950                           ;stkvar	_exp1 @ sp[(-2)+0]
 20951  0194B0  0EFE               	movlw	-2
 20952  0194B2  50E3               	movf	plusw1,w,c
 20953  0194B4  A4D8               	btfss	status,2,c
 20954  0194B6  D7F1               	goto	l9009
 20955  0194B8                     u7510:
 20956                           
 20957                           ;stkvar	_sign1 @ sp[(-2)+1]
 20958  0194B8  0EFF               	movlw	-1
 20959  0194BA  50E3               	movf	plusw1,w,c
 20960  0194BC  B4D8               	btfsc	status,2,c
 20961  0194BE  D011               	goto	u7530
 20962                           
 20963                           ;stkvar	_f1 @ sp[(-2)+-4]
 20964                           ;stkvar	_f1 @ sp[(-2)+-4]
 20965  0194C0  0EFA               	movlw	-6
 20966  0194C2  6CE3               	negf	plusw1,c
 20967  0194C4  0EFB               	movlw	-5
 20968  0194C6  1EE3               	comf	plusw1,f,c
 20969  0194C8  0EFC               	movlw	-4
 20970  0194CA  1EE3               	comf	plusw1,f,c
 20971  0194CC  0EFD               	movlw	-3
 20972  0194CE  1EE3               	comf	plusw1,f,c
 20973  0194D0  E308               	bnc	u7530
 20974  0194D2  0EFB               	movlw	-5
 20975  0194D4  2AE3               	incf	plusw1,f,c
 20976  0194D6  E305               	bnc	u7530
 20977  0194D8  0EFC               	movlw	-4
 20978  0194DA  2AE3               	incf	plusw1,f,c
 20979  0194DC  E302               	bnc	u7530
 20980  0194DE  0EFD               	movlw	-3
 20981  0194E0  2AE3               	incf	plusw1,f,c
 20982  0194E2                     u7530:
 20983                           
 20984                           ;stkvar	_f1 @ sp[(-2)+-4]
 20985  0194E2  0EFA               	movlw	-6
 20986  0194E4  006F FF8C  F001    	movff	plusw1,btemp
 20987  0194EA  0EFB               	movlw	-5
 20988  0194EC  006F FF8C  F002    	movff	plusw1,btemp+1
 20989  0194F2  0EFC               	movlw	-4
 20990  0194F4  006F FF8C  F003    	movff	plusw1,btemp+2
 20991  0194FA  0EFD               	movlw	-3
 20992  0194FC  006F FF8C  F004    	movff	plusw1,btemp+3
 20993  019502                     l2813:
 20994                           
 20995                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20996  019502  0EFA               	movlw	250
 20997  019504  26E1               	addwf	fsr1l,f,c
 20998  019506  0EFF               	movlw	255
 20999  019508  22E2               	addwfc	fsr1h,f,c
 21000  01950A  0012               	return		;funcret
 21001  01950C                     __end_of___fltol:
 21002                           	opt callstack 0
 21003                           
 21004 ;; *************** function ___flneg *****************
 21005 ;; Defined at:
 21006 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 21007 ;; Parameters:    Size  Location     Type
 21008 ;;  f1              4  [STACK] long 
 21009 ;; Auto vars:     Size  Location     Type
 21010 ;;		None
 21011 ;; Return value:  Size  Location     Type
 21012 ;;                  4  [STACK] long 
 21013 ;; Registers used:
 21014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 21015 ;; Tracked objects:
 21016 ;;		On entry : 0/0
 21017 ;;		On exit  : 0/0
 21018 ;;		Unchanged: 0/0
 21019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21024 ;;Total ram usage:        0 bytes
 21025 ;; Hardware stack levels used:    1
 21026 ;; Hardware stack levels required when called:   15
 21027 ;; This function calls:
 21028 ;;		Nothing
 21029 ;; This function is called by:
 21030 ;;		_calc_bsoc
 21031 ;;		_efgtoa
 21032 ;; This function uses a reentrant model
 21033 ;;
 21034                           
 21035                           	psect	text72
 21036  01BD4E                     __ptext72:
 21037                           	opt callstack 0
 21038  01BD4E                     ___flneg:
 21039                           	opt callstack 0
 21040                           
 21041                           ;stkvar	_f1 @ sp[(0)+-4]
 21042                           
 21043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21044                           ;incstack = 0
 21045 ;; hardware stack exceeded
 21046  01BD4E  0EFC               	movlw	-4
 21047  01BD50  50E3               	movf	plusw1,w,c
 21048  01BD52  E10A               	bnz	u7430
 21049  01BD54  0EFD               	movlw	-3
 21050  01BD56  50E3               	movf	plusw1,w,c
 21051  01BD58  E107               	bnz	u7430
 21052  01BD5A  0EFE               	movlw	-2
 21053  01BD5C  50E3               	movf	plusw1,w,c
 21054  01BD5E  E104               	bnz	u7430
 21055  01BD60  0EFF               	movlw	-1
 21056  01BD62  50E3               	movf	plusw1,w,c
 21057  01BD64  B4D8               	btfsc	status,2,c
 21058  01BD66  D002               	goto	l8975
 21059  01BD68                     u7430:
 21060                           
 21061                           ;stkvar	_f1 @ sp[(0)+-4]
 21062  01BD68  0EFF               	movlw	-1
 21063  01BD6A  7EE3               	btg	plusw1,7,c
 21064  01BD6C                     l8975:
 21065                           
 21066                           ;stkvar	_f1 @ sp[(0)+-4]
 21067  01BD6C  0EFC               	movlw	-4
 21068  01BD6E  006F FF8C  F001    	movff	plusw1,btemp
 21069  01BD74  0EFD               	movlw	-3
 21070  01BD76  006F FF8C  F002    	movff	plusw1,btemp+1
 21071  01BD7C  0EFE               	movlw	-2
 21072  01BD7E  006F FF8C  F003    	movff	plusw1,btemp+2
 21073  01BD84  0EFF               	movlw	-1
 21074  01BD86  006F FF8C  F004    	movff	plusw1,btemp+3
 21075                           
 21076                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21077  01BD8C  52E5               	movf	postdec1,f,c
 21078  01BD8E  52E5               	movf	postdec1,f,c
 21079  01BD90  52E5               	movf	postdec1,f,c
 21080  01BD92  52E5               	movf	postdec1,f,c
 21081  01BD94  0012               	return		;funcret
 21082  01BD96                     __end_of___flneg:
 21083                           	opt callstack 0
 21084                           
 21085 ;; *************** function ___fleq *****************
 21086 ;; Defined at:
 21087 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 21088 ;; Parameters:    Size  Location     Type
 21089 ;;  ff1             4  [STACK] long 
 21090 ;;  ff2             4  [STACK] long 
 21091 ;; Auto vars:     Size  Location     Type
 21092 ;;		None
 21093 ;; Return value:  Size  Location     Type
 21094 ;;		None               void
 21095 ;; Registers used:
 21096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/0
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21106 ;;Total ram usage:        0 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:   15
 21109 ;; This function calls:
 21110 ;;		Nothing
 21111 ;; This function is called by:
 21112 ;;		_efgtoa
 21113 ;; This function uses a reentrant model
 21114 ;;
 21115                           
 21116                           	psect	text73
 21117  01AA98                     __ptext73:
 21118                           	opt callstack 0
 21119  01AA98                     ___fleq:
 21120                           	opt callstack 0
 21121                           
 21122                           ;stkvar	_ff1 @ sp[(0)+-4]
 21123                           
 21124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21125                           ;incstack = 0
 21126 ;; hardware stack exceeded
 21127  01AA98  50E1               	movf	fsr1l,w,c
 21128  01AA9A  0FFC               	addlw	-4
 21129  01AA9C  6ED9               	movwf	fsr2l,c
 21130  01AA9E  50E2               	movf	fsr1h,w,c
 21131  01AAA0  6EDA               	movwf	fsr2h,c
 21132  01AAA2  0EFF               	movlw	255
 21133  01AAA4  22DA               	addwfc	fsr2h,f,c
 21134  01AAA6  0E00               	movlw	0
 21135  01AAA8  14DE               	andwf	postinc2,w,c
 21136  01AAAA  6E09               	movwf	(btemp+8)^0,c
 21137  01AAAC  0E00               	movlw	0
 21138  01AAAE  14DE               	andwf	postinc2,w,c
 21139  01AAB0  6E0A               	movwf	(btemp+9)^0,c
 21140  01AAB2  0E80               	movlw	128
 21141  01AAB4  14DE               	andwf	postinc2,w,c
 21142  01AAB6  6E0B               	movwf	(btemp+10)^0,c
 21143  01AAB8  0E7F               	movlw	127
 21144  01AABA  14DE               	andwf	postinc2,w,c
 21145  01AABC  6E0C               	movwf	(btemp+11)^0,c
 21146  01AABE  5009               	movf	(btemp+8)^0,w,c
 21147  01AAC0  100A               	iorwf	(btemp+9)^0,w,c
 21148  01AAC2  100B               	iorwf	(btemp+10)^0,w,c
 21149  01AAC4  100C               	iorwf	(btemp+11)^0,w,c
 21150  01AAC6  A4D8               	btfss	status,2,c
 21151  01AAC8  D008               	goto	l8933
 21152                           
 21153                           ;stkvar	_ff1 @ sp[(0)+-4]
 21154  01AACA  0EFC               	movlw	-4
 21155  01AACC  6AE3               	clrf	plusw1,c
 21156  01AACE  0EFD               	movlw	-3
 21157  01AAD0  6AE3               	clrf	plusw1,c
 21158  01AAD2  0EFE               	movlw	-2
 21159  01AAD4  6AE3               	clrf	plusw1,c
 21160  01AAD6  0EFF               	movlw	-1
 21161  01AAD8  6AE3               	clrf	plusw1,c
 21162  01AADA                     l8933:
 21163                           
 21164                           ;stkvar	_ff2 @ sp[(0)+-8]
 21165  01AADA  50E1               	movf	fsr1l,w,c
 21166  01AADC  0FF8               	addlw	-8
 21167  01AADE  6ED9               	movwf	fsr2l,c
 21168  01AAE0  50E2               	movf	fsr1h,w,c
 21169  01AAE2  6EDA               	movwf	fsr2h,c
 21170  01AAE4  0EFF               	movlw	255
 21171  01AAE6  22DA               	addwfc	fsr2h,f,c
 21172  01AAE8  0E00               	movlw	0
 21173  01AAEA  14DE               	andwf	postinc2,w,c
 21174  01AAEC  6E09               	movwf	(btemp+8)^0,c
 21175  01AAEE  0E00               	movlw	0
 21176  01AAF0  14DE               	andwf	postinc2,w,c
 21177  01AAF2  6E0A               	movwf	(btemp+9)^0,c
 21178  01AAF4  0E80               	movlw	128
 21179  01AAF6  14DE               	andwf	postinc2,w,c
 21180  01AAF8  6E0B               	movwf	(btemp+10)^0,c
 21181  01AAFA  0E7F               	movlw	127
 21182  01AAFC  14DE               	andwf	postinc2,w,c
 21183  01AAFE  6E0C               	movwf	(btemp+11)^0,c
 21184  01AB00  5009               	movf	(btemp+8)^0,w,c
 21185  01AB02  100A               	iorwf	(btemp+9)^0,w,c
 21186  01AB04  100B               	iorwf	(btemp+10)^0,w,c
 21187  01AB06  100C               	iorwf	(btemp+11)^0,w,c
 21188  01AB08  A4D8               	btfss	status,2,c
 21189  01AB0A  D008               	goto	l8937
 21190                           
 21191                           ;stkvar	_ff2 @ sp[(0)+-8]
 21192  01AB0C  0EF8               	movlw	-8
 21193  01AB0E  6AE3               	clrf	plusw1,c
 21194  01AB10  0EF9               	movlw	-7
 21195  01AB12  6AE3               	clrf	plusw1,c
 21196  01AB14  0EFA               	movlw	-6
 21197  01AB16  6AE3               	clrf	plusw1,c
 21198  01AB18  0EFB               	movlw	-5
 21199  01AB1A  6AE3               	clrf	plusw1,c
 21200  01AB1C                     l8937:
 21201                           
 21202                           ;stkvar	_ff2 @ sp[(0)+-8]
 21203                           ;stkvar	_ff1 @ sp[(0)+-4]
 21204  01AB1C  50E1               	movf	fsr1l,w,c
 21205  01AB1E  0FFC               	addlw	-4
 21206  01AB20  6ED9               	movwf	fsr2l,c
 21207  01AB22  50E2               	movf	fsr1h,w,c
 21208  01AB24  6EDA               	movwf	fsr2h,c
 21209  01AB26  0EFF               	movlw	255
 21210  01AB28  22DA               	addwfc	fsr2h,f,c
 21211  01AB2A  0EF8               	movlw	-8
 21212  01AB2C  50E3               	movf	plusw1,w,c
 21213  01AB2E  18DE               	xorwf	postinc2,w,c
 21214  01AB30  E10D               	bnz	u7370
 21215  01AB32  0EF9               	movlw	-7
 21216  01AB34  50E3               	movf	plusw1,w,c
 21217  01AB36  18DE               	xorwf	postinc2,w,c
 21218  01AB38  E109               	bnz	u7370
 21219  01AB3A  0EFA               	movlw	-6
 21220  01AB3C  50E3               	movf	plusw1,w,c
 21221  01AB3E  18DE               	xorwf	postinc2,w,c
 21222  01AB40  E105               	bnz	u7370
 21223  01AB42  0EFB               	movlw	-5
 21224  01AB44  50E3               	movf	plusw1,w,c
 21225  01AB46  18DE               	xorwf	postinc2,w,c
 21226  01AB48  B4D8               	btfsc	status,2,c
 21227  01AB4A  D002               	goto	l8941
 21228  01AB4C                     u7370:
 21229  01AB4C  9001               	bcf	btemp& (0+255),0,c
 21230  01AB4E  D001               	goto	l2775
 21231  01AB50                     l8941:
 21232  01AB50  8001               	bsf	btemp& (0+255),0,c
 21233  01AB52                     l2775:
 21234                           
 21235                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 21236  01AB52  0EF8               	movlw	248
 21237  01AB54  26E1               	addwf	fsr1l,f,c
 21238  01AB56  0EFF               	movlw	255
 21239  01AB58  22E2               	addwfc	fsr1h,f,c
 21240  01AB5A  0012               	return		;funcret
 21241  01AB5C                     __end_of___fleq:
 21242                           	opt callstack 0
 21243                           
 21244 ;; *************** function ___awmod *****************
 21245 ;; Defined at:
 21246 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 21247 ;; Parameters:    Size  Location     Type
 21248 ;;  dividend        2  [STACK] int 
 21249 ;;  divisor         2  [STACK] int 
 21250 ;; Auto vars:     Size  Location     Type
 21251 ;;  sign            1  [STACK] unsigned char 
 21252 ;;  counter         1  [STACK] unsigned char 
 21253 ;; Return value:  Size  Location     Type
 21254 ;;                  2  [STACK] int 
 21255 ;; Registers used:
 21256 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21257 ;; Tracked objects:
 21258 ;;		On entry : 0/0
 21259 ;;		On exit  : 0/0
 21260 ;;		Unchanged: 0/0
 21261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21266 ;;Total ram usage:        0 bytes
 21267 ;; Hardware stack levels used:    1
 21268 ;; Hardware stack levels required when called:   15
 21269 ;; This function calls:
 21270 ;;		Nothing
 21271 ;; This function is called by:
 21272 ;;		_efgtoa
 21273 ;; This function uses a reentrant model
 21274 ;;
 21275                           
 21276                           	psect	text74
 21277  01A044                     __ptext74:
 21278                           	opt callstack 0
 21279  01A044                     ___awmod:
 21280                           	opt callstack 0
 21281                           
 21282                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21283  01A044  52E6               	movf	postinc1,f,c
 21284  01A046  52E6               	movf	postinc1,f,c
 21285                           
 21286                           ;stkvar	_sign @ sp[(-2)+0]
 21287                           
 21288                           ;incstack = 0
 21289 ;; hardware stack exceeded
 21290  01A048  0EFE               	movlw	-2
 21291  01A04A  6AE3               	clrf	plusw1,c
 21292                           
 21293                           ;stkvar	_dividend @ sp[(-2)+-2]
 21294  01A04C  0EFD               	movlw	-3
 21295  01A04E  AEE3               	btfss	plusw1,7,c
 21296  01A050  D009               	goto	l8899
 21297                           
 21298                           ;stkvar	_dividend @ sp[(-2)+-2]
 21299                           ;stkvar	_dividend @ sp[(-2)+-2]
 21300  01A052  0EFC               	movlw	-4
 21301  01A054  6CE3               	negf	plusw1,c
 21302  01A056  0EFD               	movlw	-3
 21303  01A058  1EE3               	comf	plusw1,f,c
 21304  01A05A  B0D8               	btfsc	status,0,c
 21305  01A05C  2AE3               	incf	plusw1,f,c
 21306                           
 21307                           ;stkvar	_sign @ sp[(-2)+0]
 21308  01A05E  0EFE               	movlw	-2
 21309  01A060  6AE3               	clrf	plusw1,c
 21310  01A062  2AE3               	incf	plusw1,f,c
 21311  01A064                     l8899:
 21312                           
 21313                           ;stkvar	_divisor @ sp[(-2)+-4]
 21314  01A064  0EFB               	movlw	-5
 21315  01A066  AEE3               	btfss	plusw1,7,c
 21316  01A068  D006               	goto	l8903
 21317                           
 21318                           ;stkvar	_divisor @ sp[(-2)+-4]
 21319                           ;stkvar	_divisor @ sp[(-2)+-4]
 21320  01A06A  0EFA               	movlw	-6
 21321  01A06C  6CE3               	negf	plusw1,c
 21322  01A06E  0EFB               	movlw	-5
 21323  01A070  1EE3               	comf	plusw1,f,c
 21324  01A072  B0D8               	btfsc	status,0,c
 21325  01A074  2AE3               	incf	plusw1,f,c
 21326  01A076                     l8903:
 21327                           
 21328                           ;stkvar	_divisor @ sp[(-2)+-4]
 21329  01A076  0EFA               	movlw	-6
 21330  01A078  006F FF8C  F001    	movff	plusw1,btemp
 21331  01A07E  0EFB               	movlw	-5
 21332  01A080  50E3               	movf	plusw1,w,c
 21333  01A082  1001               	iorwf	btemp^0,w,c
 21334  01A084  B4D8               	btfsc	status,2,c
 21335  01A086  D053               	goto	u7330
 21336                           
 21337                           ;stkvar	_counter @ sp[(-2)+1]
 21338  01A088  0EFF               	movlw	-1
 21339  01A08A  6AE3               	clrf	plusw1,c
 21340  01A08C  D012               	goto	L25
 21341  01A08E                     l8907:
 21342                           
 21343                           ;stkvar	_divisor @ sp[(-2)+-4]
 21344  01A08E  0EFA               	movlw	-6
 21345  01A090  50E3               	movf	plusw1,w,c
 21346  01A092  90D8               	bcf	status,0,c
 21347  01A094  34E8               	rlcf	wreg,w,c
 21348  01A096  6E01               	movwf	btemp^0,c
 21349  01A098  0EFA               	movlw	-6
 21350  01A09A  0060  F007  FFE3   	movff	btemp,plusw1
 21351  01A0A0  0EFB               	movlw	-5
 21352  01A0A2  50E3               	movf	plusw1,w,c
 21353  01A0A4  34E8               	rlcf	wreg,w,c
 21354  01A0A6  6E01               	movwf	btemp^0,c
 21355  01A0A8  0EFB               	movlw	-5
 21356  01A0AA  0060  F007  FFE3   	movff	btemp,plusw1
 21357                           
 21358                           ;stkvar	_counter @ sp[(-2)+1]
 21359  01A0B0  0EFF               	movlw	-1
 21360  01A0B2                     L25:
 21361  01A0B2  2AE3               	incf	plusw1,f,c
 21362                           
 21363                           ;stkvar	_divisor @ sp[(-2)+-4]
 21364  01A0B4  0EFB               	movlw	-5
 21365  01A0B6  AEE3               	btfss	plusw1,7,c
 21366  01A0B8  D7EA               	goto	l8907
 21367  01A0BA                     u7310:
 21368                           
 21369                           ;stkvar	_divisor @ sp[(-2)+-4]
 21370  01A0BA  0EFA               	movlw	-6
 21371  01A0BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21372  01A0C2  0EFB               	movlw	-5
 21373  01A0C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21374                           
 21375                           ;stkvar	_dividend @ sp[(-2)+-2]
 21376  01A0CA  0EFC               	movlw	-4
 21377  01A0CC  006F FF8C  F009    	movff	plusw1,btemp+8
 21378  01A0D2  0EFD               	movlw	-3
 21379  01A0D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 21380  01A0DA  500B               	movf	(btemp+10)^0,w,c
 21381  01A0DC  5C09               	subwf	(btemp+8)^0,w,c
 21382  01A0DE  500C               	movf	(btemp+11)^0,w,c
 21383  01A0E0  580A               	subwfb	(btemp+9)^0,w,c
 21384  01A0E2  A0D8               	btfss	status,0,c
 21385  01A0E4  D014               	goto	l8917
 21386                           
 21387                           ;stkvar	_divisor @ sp[(-2)+-4]
 21388                           ;stkvar	_dividend @ sp[(-2)+-2]
 21389  01A0E6  0EFC               	movlw	-4
 21390  01A0E8  50E3               	movf	plusw1,w,c
 21391  01A0EA  6E01               	movwf	btemp^0,c
 21392  01A0EC  0EFA               	movlw	-6
 21393  01A0EE  50E3               	movf	plusw1,w,c
 21394  01A0F0  5E01               	subwf	btemp^0,f,c
 21395  01A0F2  0EFC               	movlw	-4
 21396  01A0F4  0060  F007  FFE3   	movff	btemp,plusw1
 21397  01A0FA  0EFD               	movlw	-3
 21398  01A0FC  50E3               	movf	plusw1,w,c
 21399  01A0FE  6E01               	movwf	btemp^0,c
 21400  01A100  0EFB               	movlw	-5
 21401  01A102  50E3               	movf	plusw1,w,c
 21402  01A104  5A01               	subwfb	btemp^0,f,c
 21403  01A106  0EFD               	movlw	-3
 21404  01A108  0060  F007  FFE3   	movff	btemp,plusw1
 21405  01A10E                     l8917:
 21406                           
 21407                           ;stkvar	_divisor @ sp[(-2)+-4]
 21408  01A10E  90D8               	bcf	status,0,c
 21409  01A110  0EFB               	movlw	-5
 21410  01A112  32E3               	rrcf	plusw1,f,c
 21411  01A114  0EFA               	movlw	-6
 21412  01A116  32E3               	rrcf	plusw1,f,c
 21413                           
 21414                           ;stkvar	_counter @ sp[(-2)+1]
 21415  01A118  0EFF               	movlw	-1
 21416  01A11A  50E3               	movf	plusw1,w,c
 21417  01A11C  6E01               	movwf	btemp^0,c
 21418  01A11E  0E01               	movlw	1
 21419  01A120  5E01               	subwf	btemp^0,f,c
 21420  01A122  0EFF               	movlw	-1
 21421  01A124  0060  F007  FFE3   	movff	btemp,plusw1
 21422  01A12A  A4D8               	btfss	status,2,c
 21423  01A12C  D7C6               	goto	u7310
 21424  01A12E                     u7330:
 21425                           
 21426                           ;stkvar	_sign @ sp[(-2)+0]
 21427  01A12E  0EFE               	movlw	-2
 21428  01A130  50E3               	movf	plusw1,w,c
 21429  01A132  B4D8               	btfsc	status,2,c
 21430  01A134  D006               	goto	l8925
 21431                           
 21432                           ;stkvar	_dividend @ sp[(-2)+-2]
 21433                           ;stkvar	_dividend @ sp[(-2)+-2]
 21434  01A136  0EFC               	movlw	-4
 21435  01A138  6CE3               	negf	plusw1,c
 21436  01A13A  0EFD               	movlw	-3
 21437  01A13C  1EE3               	comf	plusw1,f,c
 21438  01A13E  B0D8               	btfsc	status,0,c
 21439  01A140  2AE3               	incf	plusw1,f,c
 21440  01A142                     l8925:
 21441                           
 21442                           ;stkvar	_dividend @ sp[(-2)+-2]
 21443  01A142  0EFC               	movlw	-4
 21444  01A144  006F FF8C  F001    	movff	plusw1,btemp
 21445  01A14A  0EFD               	movlw	-3
 21446  01A14C  006F FF8C  F002    	movff	plusw1,btemp+1
 21447                           
 21448                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21449  01A152  0EFA               	movlw	250
 21450  01A154  26E1               	addwf	fsr1l,f,c
 21451  01A156  0EFF               	movlw	255
 21452  01A158  22E2               	addwfc	fsr1h,f,c
 21453  01A15A  0012               	return		;funcret
 21454  01A15C                     __end_of___awmod:
 21455                           	opt callstack 0
 21456                           
 21457 ;; *************** function ___awdiv *****************
 21458 ;; Defined at:
 21459 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 21460 ;; Parameters:    Size  Location     Type
 21461 ;;  dividend        2  [STACK] int 
 21462 ;;  divisor         2  [STACK] int 
 21463 ;; Auto vars:     Size  Location     Type
 21464 ;;  quotient        2  [STACK] int 
 21465 ;;  sign            1  [STACK] unsigned char 
 21466 ;;  counter         1  [STACK] unsigned char 
 21467 ;; Return value:  Size  Location     Type
 21468 ;;                  2  [STACK] int 
 21469 ;; Registers used:
 21470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21471 ;; Tracked objects:
 21472 ;;		On entry : 0/0
 21473 ;;		On exit  : 0/0
 21474 ;;		Unchanged: 0/0
 21475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21480 ;;Total ram usage:        0 bytes
 21481 ;; Hardware stack levels used:    1
 21482 ;; Hardware stack levels required when called:   15
 21483 ;; This function calls:
 21484 ;;		Nothing
 21485 ;; This function is called by:
 21486 ;;		_efgtoa
 21487 ;; This function uses a reentrant model
 21488 ;;
 21489                           
 21490                           	psect	text75
 21491  0197D2                     __ptext75:
 21492                           	opt callstack 0
 21493  0197D2                     ___awdiv:
 21494                           	opt callstack 0
 21495                           
 21496                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21497  0197D2  52E6               	movf	postinc1,f,c
 21498  0197D4  52E6               	movf	postinc1,f,c
 21499  0197D6  52E6               	movf	postinc1,f,c
 21500  0197D8  52E6               	movf	postinc1,f,c
 21501                           
 21502                           ;stkvar	_sign @ sp[(-4)+2]
 21503                           
 21504                           ;incstack = 0
 21505 ;; hardware stack exceeded
 21506  0197DA  0EFE               	movlw	-2
 21507  0197DC  6AE3               	clrf	plusw1,c
 21508                           
 21509                           ;stkvar	_divisor @ sp[(-4)+-4]
 21510  0197DE  0EF9               	movlw	-7
 21511  0197E0  AEE3               	btfss	plusw1,7,c
 21512  0197E2  D009               	goto	l8853
 21513                           
 21514                           ;stkvar	_divisor @ sp[(-4)+-4]
 21515                           ;stkvar	_divisor @ sp[(-4)+-4]
 21516  0197E4  0EF8               	movlw	-8
 21517  0197E6  6CE3               	negf	plusw1,c
 21518  0197E8  0EF9               	movlw	-7
 21519  0197EA  1EE3               	comf	plusw1,f,c
 21520  0197EC  B0D8               	btfsc	status,0,c
 21521  0197EE  2AE3               	incf	plusw1,f,c
 21522                           
 21523                           ;stkvar	_sign @ sp[(-4)+2]
 21524  0197F0  0EFE               	movlw	-2
 21525  0197F2  6AE3               	clrf	plusw1,c
 21526  0197F4  2AE3               	incf	plusw1,f,c
 21527  0197F6                     l8853:
 21528                           
 21529                           ;stkvar	_dividend @ sp[(-4)+-2]
 21530  0197F6  0EFB               	movlw	-5
 21531  0197F8  AEE3               	btfss	plusw1,7,c
 21532  0197FA  D008               	goto	l8859
 21533                           
 21534                           ;stkvar	_dividend @ sp[(-4)+-2]
 21535                           ;stkvar	_dividend @ sp[(-4)+-2]
 21536  0197FC  0EFA               	movlw	-6
 21537  0197FE  6CE3               	negf	plusw1,c
 21538  019800  0EFB               	movlw	-5
 21539  019802  1EE3               	comf	plusw1,f,c
 21540  019804  B0D8               	btfsc	status,0,c
 21541  019806  2AE3               	incf	plusw1,f,c
 21542                           
 21543                           ;stkvar	_sign @ sp[(-4)+2]
 21544  019808  0EFE               	movlw	-2
 21545  01980A  70E3               	btg	plusw1,0,c
 21546  01980C                     l8859:
 21547                           
 21548                           ;stkvar	_quotient @ sp[(-4)+0]
 21549  01980C  0EFC               	movlw	-4
 21550  01980E  6AE3               	clrf	plusw1,c
 21551  019810  0EFD               	movlw	-3
 21552  019812  6AE3               	clrf	plusw1,c
 21553                           
 21554                           ;stkvar	_divisor @ sp[(-4)+-4]
 21555  019814  0EF8               	movlw	-8
 21556  019816  006F FF8C  F001    	movff	plusw1,btemp
 21557  01981C  0EF9               	movlw	-7
 21558  01981E  50E3               	movf	plusw1,w,c
 21559  019820  1001               	iorwf	btemp^0,w,c
 21560  019822  B4D8               	btfsc	status,2,c
 21561  019824  D066               	goto	u7260
 21562                           
 21563                           ;stkvar	_counter @ sp[(-4)+3]
 21564  019826  0EFF               	movlw	-1
 21565  019828  6AE3               	clrf	plusw1,c
 21566  01982A  D012               	goto	L26
 21567  01982C                     l8865:
 21568                           
 21569                           ;stkvar	_divisor @ sp[(-4)+-4]
 21570  01982C  0EF8               	movlw	-8
 21571  01982E  50E3               	movf	plusw1,w,c
 21572  019830  90D8               	bcf	status,0,c
 21573  019832  34E8               	rlcf	wreg,w,c
 21574  019834  6E01               	movwf	btemp^0,c
 21575  019836  0EF8               	movlw	-8
 21576  019838  0060  F007  FFE3   	movff	btemp,plusw1
 21577  01983E  0EF9               	movlw	-7
 21578  019840  50E3               	movf	plusw1,w,c
 21579  019842  34E8               	rlcf	wreg,w,c
 21580  019844  6E01               	movwf	btemp^0,c
 21581  019846  0EF9               	movlw	-7
 21582  019848  0060  F007  FFE3   	movff	btemp,plusw1
 21583                           
 21584                           ;stkvar	_counter @ sp[(-4)+3]
 21585  01984E  0EFF               	movlw	-1
 21586  019850                     L26:
 21587  019850  2AE3               	incf	plusw1,f,c
 21588                           
 21589                           ;stkvar	_divisor @ sp[(-4)+-4]
 21590  019852  0EF9               	movlw	-7
 21591  019854  AEE3               	btfss	plusw1,7,c
 21592  019856  D7EA               	goto	l8865
 21593  019858                     u7240:
 21594                           
 21595                           ;stkvar	_quotient @ sp[(-4)+0]
 21596  019858  0EFC               	movlw	-4
 21597  01985A  50E3               	movf	plusw1,w,c
 21598  01985C  90D8               	bcf	status,0,c
 21599  01985E  34E8               	rlcf	wreg,w,c
 21600  019860  6E01               	movwf	btemp^0,c
 21601  019862  0EFC               	movlw	-4
 21602  019864  0060  F007  FFE3   	movff	btemp,plusw1
 21603  01986A  0EFD               	movlw	-3
 21604  01986C  50E3               	movf	plusw1,w,c
 21605  01986E  34E8               	rlcf	wreg,w,c
 21606  019870  6E01               	movwf	btemp^0,c
 21607  019872  0EFD               	movlw	-3
 21608  019874  0060  F007  FFE3   	movff	btemp,plusw1
 21609                           
 21610                           ;stkvar	_divisor @ sp[(-4)+-4]
 21611  01987A  0EF8               	movlw	-8
 21612  01987C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21613  019882  0EF9               	movlw	-7
 21614  019884  006F FF8C  F00C    	movff	plusw1,btemp+11
 21615                           
 21616                           ;stkvar	_dividend @ sp[(-4)+-2]
 21617  01988A  0EFA               	movlw	-6
 21618  01988C  006F FF8C  F009    	movff	plusw1,btemp+8
 21619  019892  0EFB               	movlw	-5
 21620  019894  006F FF8C  F00A    	movff	plusw1,btemp+9
 21621  01989A  500B               	movf	(btemp+10)^0,w,c
 21622  01989C  5C09               	subwf	(btemp+8)^0,w,c
 21623  01989E  500C               	movf	(btemp+11)^0,w,c
 21624  0198A0  580A               	subwfb	(btemp+9)^0,w,c
 21625  0198A2  A0D8               	btfss	status,0,c
 21626  0198A4  D016               	goto	l8879
 21627                           
 21628                           ;stkvar	_divisor @ sp[(-4)+-4]
 21629                           ;stkvar	_dividend @ sp[(-4)+-2]
 21630  0198A6  0EFA               	movlw	-6
 21631  0198A8  50E3               	movf	plusw1,w,c
 21632  0198AA  6E01               	movwf	btemp^0,c
 21633  0198AC  0EF8               	movlw	-8
 21634  0198AE  50E3               	movf	plusw1,w,c
 21635  0198B0  5E01               	subwf	btemp^0,f,c
 21636  0198B2  0EFA               	movlw	-6
 21637  0198B4  0060  F007  FFE3   	movff	btemp,plusw1
 21638  0198BA  0EFB               	movlw	-5
 21639  0198BC  50E3               	movf	plusw1,w,c
 21640  0198BE  6E01               	movwf	btemp^0,c
 21641  0198C0  0EF9               	movlw	-7
 21642  0198C2  50E3               	movf	plusw1,w,c
 21643  0198C4  5A01               	subwfb	btemp^0,f,c
 21644  0198C6  0EFB               	movlw	-5
 21645  0198C8  0060  F007  FFE3   	movff	btemp,plusw1
 21646                           
 21647                           ;stkvar	_quotient @ sp[(-4)+0]
 21648  0198CE  0EFC               	movlw	-4
 21649  0198D0  80E3               	bsf	plusw1,0,c
 21650  0198D2                     l8879:
 21651                           
 21652                           ;stkvar	_divisor @ sp[(-4)+-4]
 21653  0198D2  90D8               	bcf	status,0,c
 21654  0198D4  0EF9               	movlw	-7
 21655  0198D6  32E3               	rrcf	plusw1,f,c
 21656  0198D8  0EF8               	movlw	-8
 21657  0198DA  32E3               	rrcf	plusw1,f,c
 21658                           
 21659                           ;stkvar	_counter @ sp[(-4)+3]
 21660  0198DC  0EFF               	movlw	-1
 21661  0198DE  50E3               	movf	plusw1,w,c
 21662  0198E0  6E01               	movwf	btemp^0,c
 21663  0198E2  0E01               	movlw	1
 21664  0198E4  5E01               	subwf	btemp^0,f,c
 21665  0198E6  0EFF               	movlw	-1
 21666  0198E8  0060  F007  FFE3   	movff	btemp,plusw1
 21667  0198EE  A4D8               	btfss	status,2,c
 21668  0198F0  D7B3               	goto	u7240
 21669  0198F2                     u7260:
 21670                           
 21671                           ;stkvar	_sign @ sp[(-4)+2]
 21672  0198F2  0EFE               	movlw	-2
 21673  0198F4  50E3               	movf	plusw1,w,c
 21674  0198F6  B4D8               	btfsc	status,2,c
 21675  0198F8  D006               	goto	l8887
 21676                           
 21677                           ;stkvar	_quotient @ sp[(-4)+0]
 21678                           ;stkvar	_quotient @ sp[(-4)+0]
 21679  0198FA  0EFC               	movlw	-4
 21680  0198FC  6CE3               	negf	plusw1,c
 21681  0198FE  0EFD               	movlw	-3
 21682  019900  1EE3               	comf	plusw1,f,c
 21683  019902  B0D8               	btfsc	status,0,c
 21684  019904  2AE3               	incf	plusw1,f,c
 21685  019906                     l8887:
 21686                           
 21687                           ;stkvar	_quotient @ sp[(-4)+0]
 21688  019906  0EFC               	movlw	-4
 21689  019908  006F FF8C  F001    	movff	plusw1,btemp
 21690  01990E  0EFD               	movlw	-3
 21691  019910  006F FF8C  F002    	movff	plusw1,btemp+1
 21692                           
 21693                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21694  019916  0EF8               	movlw	248
 21695  019918  26E1               	addwf	fsr1l,f,c
 21696  01991A  0EFF               	movlw	255
 21697  01991C  22E2               	addwfc	fsr1h,f,c
 21698  01991E  0012               	return		;funcret
 21699  019920                     __end_of___awdiv:
 21700                           	opt callstack 0
 21701                           
 21702 ;; *************** function _dtoa *****************
 21703 ;; Defined at:
 21704 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21705 ;; Parameters:    Size  Location     Type
 21706 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21707 ;;		 -> f(6), NULL(0), 
 21708 ;;  d               8  [STACK] long long 
 21709 ;; Auto vars:     Size  Location     Type
 21710 ;;  n               8  [STACK] long long 
 21711 ;;  i               2  [STACK] int 
 21712 ;;  s               2  [STACK] int 
 21713 ;;  w               2  [STACK] int 
 21714 ;;  p               2  [STACK] int 
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  2  [STACK] int 
 21717 ;; Registers used:
 21718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21728 ;;Total ram usage:        0 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:   20
 21731 ;; This function calls:
 21732 ;;		___aodiv
 21733 ;;		___aomod
 21734 ;;		_abs
 21735 ;;		_pad
 21736 ;; This function is called by:
 21737 ;;		_vfpfcnvrt
 21738 ;; This function uses a reentrant model
 21739 ;;
 21740                           
 21741                           	psect	text76
 21742  01585C                     __ptext76:
 21743                           	opt callstack 0
 21744  01585C                     _dtoa:
 21745                           	opt callstack 0
 21746                           
 21747                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 21748  01585C  0E12               	movlw	18
 21749  01585E  26E1               	addwf	fsr1l,f,c
 21750  015860  0E00               	movlw	0
 21751  015862  22E2               	addwfc	fsr1h,f,c
 21752                           
 21753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 21754                           ;stkvar	_d @ sp[(-18)+-10]
 21755                           
 21756                           ;incstack = 0
 21757 ;; hardware stack exceeded
 21758  015864  0EE4               	movlw	228
 21759  015866  24E1               	addwf	fsr1l,w,c
 21760  015868  6ED9               	movwf	fsr2l,c
 21761  01586A  0EFF               	movlw	255
 21762  01586C  20E2               	addwfc	fsr1h,w,c
 21763  01586E  6EDA               	movwf	fsr2h,c
 21764                           
 21765                           ;stkvar	_n @ sp[(-18)+2]
 21766  015870  0E08               	movlw	8
 21767  015872  6E01               	movwf	btemp^0,c
 21768  015874  0EF0               	movlw	-16
 21769  015876                     us1136999:
 21770  015876  006F FF7B FFE3     	movff	postinc2,plusw1
 21771  01587C  28E8               	incf	wreg,w,c
 21772  01587E  2E01               	decfsz	btemp^0,f,c
 21773  015880  D7FA               	bra	us1136999
 21774                           
 21775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 21776                           ;stkvar	_n @ sp[(-18)+2]
 21777  015882  0EF7               	movlw	-9
 21778  015884  AEE3               	btfss	plusw1,7,c
 21779  015886  D002               	goto	u11370
 21780  015888  0E01               	movlw	1
 21781  01588A  D001               	goto	u11380
 21782  01588C                     u11370:
 21783  01588C  0E00               	movlw	0
 21784  01588E                     u11380:
 21785  01588E  6E0B               	movwf	(btemp+10)^0,c
 21786  015890  6A0C               	clrf	(btemp+11)^0,c
 21787                           
 21788                           ;stkvar	_s @ sp[(-18)+12]
 21789  015892  0EFA               	movlw	-6
 21790  015894  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21791  01589A  0EFB               	movlw	-5
 21792  01589C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21793                           
 21794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 21795                           ;stkvar	_s @ sp[(-18)+12]
 21796  0158A2  0EFA               	movlw	-6
 21797  0158A4  006F FF8C  F001    	movff	plusw1,btemp
 21798  0158AA  0EFB               	movlw	-5
 21799  0158AC  50E3               	movf	plusw1,w,c
 21800  0158AE  1001               	iorwf	btemp^0,w,c
 21801  0158B0  B4D8               	btfsc	status,2,c
 21802  0158B2  D025               	goto	u11400
 21803                           
 21804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 21805                           ;stkvar	_n @ sp[(-18)+2]
 21806                           ;stkvar	_n @ sp[(-18)+2]
 21807  0158B4  0EF0               	movlw	-16
 21808  0158B6  6CE3               	negf	plusw1,c
 21809  0158B8  0EF1               	movlw	-15
 21810  0158BA  1EE3               	comf	plusw1,f,c
 21811  0158BC  0EF2               	movlw	-14
 21812  0158BE  1EE3               	comf	plusw1,f,c
 21813  0158C0  0EF3               	movlw	-13
 21814  0158C2  1EE3               	comf	plusw1,f,c
 21815  0158C4  0EF4               	movlw	-12
 21816  0158C6  1EE3               	comf	plusw1,f,c
 21817  0158C8  0EF5               	movlw	-11
 21818  0158CA  1EE3               	comf	plusw1,f,c
 21819  0158CC  0EF6               	movlw	-10
 21820  0158CE  1EE3               	comf	plusw1,f,c
 21821  0158D0  0EF7               	movlw	-9
 21822  0158D2  1EE3               	comf	plusw1,f,c
 21823  0158D4  E314               	bnc	u11400
 21824  0158D6  0EF1               	movlw	-15
 21825  0158D8  2AE3               	incf	plusw1,f,c
 21826  0158DA  E311               	bnc	u11400
 21827  0158DC  0EF2               	movlw	-14
 21828  0158DE  2AE3               	incf	plusw1,f,c
 21829  0158E0  E30E               	bnc	u11400
 21830  0158E2  0EF3               	movlw	-13
 21831  0158E4  2AE3               	incf	plusw1,f,c
 21832  0158E6  E30B               	bnc	u11400
 21833  0158E8  0EF4               	movlw	-12
 21834  0158EA  2AE3               	incf	plusw1,f,c
 21835  0158EC  E308               	bnc	u11400
 21836  0158EE  0EF5               	movlw	-11
 21837  0158F0  2AE3               	incf	plusw1,f,c
 21838  0158F2  E305               	bnc	u11400
 21839  0158F4  0EF6               	movlw	-10
 21840  0158F6  2AE3               	incf	plusw1,f,c
 21841  0158F8  E302               	bnc	u11400
 21842  0158FA  0EF7               	movlw	-9
 21843  0158FC  2AE3               	incf	plusw1,f,c
 21844  0158FE                     u11400:
 21845                           
 21846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 21847  0158FE  AE3D               	btfss	(_prec+1)^0,7,c
 21848                           
 21849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 21850  015900  923E               	bcf	_flags^0,1,c
 21851                           
 21852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 21853  015902  BE3D               	btfsc	(_prec+1)^0,7,c
 21854  015904  D005               	goto	u11420
 21855  015906  503D               	movf	(_prec+1)^0,w,c
 21856  015908  E110               	bnz	l12499
 21857  01590A  043C               	decf	_prec^0,w,c
 21858  01590C  B0D8               	btfsc	status,0,c
 21859  01590E  D00D               	goto	l12499
 21860  015910                     u11420:
 21861  015910  0E01               	movlw	1
 21862  015912  6E0B               	movwf	(btemp+10)^0,c
 21863  015914  0E00               	movlw	0
 21864  015916  6E0C               	movwf	(btemp+11)^0,c
 21865                           
 21866                           ;stkvar	_p @ sp[(-18)+16]
 21867  015918  0EFE               	movlw	-2
 21868  01591A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21869  015920  0EFF               	movlw	-1
 21870  015922  0060  F033  FFE3   	movff	btemp+11,plusw1
 21871  015928  D008               	goto	l2279
 21872  01592A                     l12499:
 21873                           
 21874                           ;stkvar	_p @ sp[(-18)+16]
 21875  01592A  0EFE               	movlw	-2
 21876  01592C  0060  F0F3  FFE3   	movff	_prec,plusw1
 21877  015932  0EFF               	movlw	-1
 21878  015934  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 21879  01593A                     l2279:
 21880                           
 21881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 21882                           ;stkvar	_w @ sp[(-18)+14]
 21883  01593A  0EFC               	movlw	-4
 21884  01593C  0060  F0EB  FFE3   	movff	_width,plusw1
 21885  015942  0EFD               	movlw	-3
 21886  015944  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21887                           
 21888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 21889                           ;stkvar	_s @ sp[(-18)+12]
 21890  01594A  0EFA               	movlw	-6
 21891  01594C  006F FF8C  F001    	movff	plusw1,btemp
 21892  015952  0EFB               	movlw	-5
 21893  015954  50E3               	movf	plusw1,w,c
 21894  015956  1001               	iorwf	btemp^0,w,c
 21895  015958  A4D8               	btfss	status,2,c
 21896  01595A  D002               	goto	u11440
 21897  01595C  A43E               	btfss	_flags^0,2,c
 21898  01595E  D00A               	goto	l12507
 21899  015960                     u11440:
 21900                           
 21901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 21902                           ;stkvar	_w @ sp[(-18)+14]
 21903  015960  50E1               	movf	fsr1l,w,c
 21904  015962  0FFC               	addlw	-4
 21905  015964  6ED9               	movwf	fsr2l,c
 21906  015966  50E2               	movf	fsr1h,w,c
 21907  015968  6EDA               	movwf	fsr2h,c
 21908  01596A  0EFF               	movlw	255
 21909  01596C  22DA               	addwfc	fsr2h,f,c
 21910  01596E  06DE               	decf	postinc2,f,c
 21911  015970  0E00               	movlw	0
 21912  015972  5ADD               	subwfb	postdec2,f,c
 21913  015974                     l12507:
 21914                           
 21915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 21916  015974  0E4F               	movlw	79
 21917  015976  6E0B               	movwf	(btemp+10)^0,c
 21918  015978  0E00               	movlw	0
 21919  01597A  6E0C               	movwf	(btemp+11)^0,c
 21920                           
 21921                           ;stkvar	_i @ sp[(-18)+10]
 21922  01597C  0EF8               	movlw	-8
 21923  01597E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21924  015984  0EF9               	movlw	-7
 21925  015986  0060  F033  FFE3   	movff	btemp+11,plusw1
 21926                           
 21927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 21928  01598C  0102               	movlb	2	; () banked
 21929  01598E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 21930                           
 21931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21932  015990  D109               	goto	l12521
 21933  015992                     l12511:
 21934                           
 21935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 21936                           ;stkvar	_i @ sp[(-18)+10]
 21937  015992  50E1               	movf	fsr1l,w,c
 21938  015994  0FF8               	addlw	-8
 21939  015996  6ED9               	movwf	fsr2l,c
 21940  015998  50E2               	movf	fsr1h,w,c
 21941  01599A  6EDA               	movwf	fsr2h,c
 21942  01599C  0EFF               	movlw	255
 21943  01599E  22DA               	addwfc	fsr2h,f,c
 21944  0159A0  06DE               	decf	postinc2,f,c
 21945  0159A2  0E00               	movlw	0
 21946  0159A4  5ADD               	subwfb	postdec2,f,c
 21947                           
 21948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 21949  0159A6  0E0A               	movlw	10
 21950  0159A8  6EE6               	movwf	postinc1,c
 21951  0159AA  0E00               	movlw	0
 21952  0159AC  6EE6               	movwf	postinc1,c
 21953  0159AE  0E00               	movlw	0
 21954  0159B0  6EE6               	movwf	postinc1,c
 21955  0159B2  0E00               	movlw	0
 21956  0159B4  6EE6               	movwf	postinc1,c
 21957  0159B6  0E00               	movlw	0
 21958  0159B8  6EE6               	movwf	postinc1,c
 21959  0159BA  0E00               	movlw	0
 21960  0159BC  6EE6               	movwf	postinc1,c
 21961  0159BE  0E00               	movlw	0
 21962  0159C0  6EE6               	movwf	postinc1,c
 21963  0159C2  0E00               	movlw	0
 21964  0159C4  6EE6               	movwf	postinc1,c
 21965                           
 21966                           ;stkvar	_n @ sp[(-26)+2]
 21967  0159C6  50E1               	movf	fsr1l,w,c
 21968  0159C8  0FE8               	addlw	-24
 21969  0159CA  6ED9               	movwf	fsr2l,c
 21970  0159CC  50E2               	movf	fsr1h,w,c
 21971  0159CE  6EDA               	movwf	fsr2h,c
 21972  0159D0  0EFF               	movlw	255
 21973  0159D2  22DA               	addwfc	fsr2h,f,c
 21974  0159D4  006F FF7B FFE6     	movff	postinc2,postinc1
 21975  0159DA  006F FF7B FFE6     	movff	postinc2,postinc1
 21976  0159E0  006F FF7B FFE6     	movff	postinc2,postinc1
 21977  0159E6  006F FF7B FFE6     	movff	postinc2,postinc1
 21978  0159EC  006F FF7B FFE6     	movff	postinc2,postinc1
 21979  0159F2  006F FF7B FFE6     	movff	postinc2,postinc1
 21980  0159F8  006F FF7B FFE6     	movff	postinc2,postinc1
 21981  0159FE  006F FF7B FFE6     	movff	postinc2,postinc1
 21982  015A04  EC88  F0C0         	call	___aomod	;wreg free
 21983  015A08  52E5               	movf	postdec1,f,c
 21984  015A0A  006F FF9C  F018    	movff	indf1,btemp+23
 21985  015A10  52E5               	movf	postdec1,f,c
 21986  015A12  006F FF9C  F017    	movff	indf1,btemp+22
 21987  015A18  52E5               	movf	postdec1,f,c
 21988  015A1A  006F FF9C  F016    	movff	indf1,btemp+21
 21989  015A20  52E5               	movf	postdec1,f,c
 21990  015A22  006F FF9C  F015    	movff	indf1,btemp+20
 21991  015A28  52E5               	movf	postdec1,f,c
 21992  015A2A  006F FF9C  F014    	movff	indf1,btemp+19
 21993  015A30  52E5               	movf	postdec1,f,c
 21994  015A32  006F FF9C  F013    	movff	indf1,btemp+18
 21995  015A38  52E5               	movf	postdec1,f,c
 21996  015A3A  006F FF9C  F012    	movff	indf1,btemp+17
 21997  015A40  52E5               	movf	postdec1,f,c
 21998  015A42  006F FF9C  F011    	movff	indf1,btemp+16
 21999  015A48  0EF8               	movlw	248
 22000  015A4A  26E1               	addwf	fsr1l,f,c
 22001  015A4C  0EFF               	movlw	255
 22002  015A4E  22E2               	addwfc	fsr1h,f,c
 22003  015A50  0060  F044  F00B   	movff	btemp+16,btemp+10
 22004  015A56  0060  F048  F00C   	movff	btemp+17,btemp+11
 22005  015A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22006  015A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 22007  015A68  EC37  F0DF         	call	_abs	;wreg free
 22008  015A6C  0E30               	movlw	48
 22009  015A6E  2601               	addwf	btemp^0,f,c
 22010                           
 22011                           ;stkvar	_i @ sp[(-18)+10]
 22012  015A70  0EF8               	movlw	-8
 22013  015A72  006F FF8C  F00B    	movff	plusw1,btemp+10
 22014  015A78  0EF9               	movlw	-7
 22015  015A7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22016  015A80  0E97               	movlw	low _dbuf
 22017  015A82  240B               	addwf	(btemp+10)^0,w,c
 22018  015A84  6ED9               	movwf	fsr2l,c
 22019  015A86  0E02               	movlw	high _dbuf
 22020  015A88  200C               	addwfc	(btemp+11)^0,w,c
 22021  015A8A  6EDA               	movwf	fsr2h,c
 22022  015A8C  0060  F007  FFDF   	movff	btemp,indf2
 22023                           
 22024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 22025                           ;stkvar	_p @ sp[(-18)+16]
 22026  015A92  50E1               	movf	fsr1l,w,c
 22027  015A94  0FFE               	addlw	-2
 22028  015A96  6ED9               	movwf	fsr2l,c
 22029  015A98  50E2               	movf	fsr1h,w,c
 22030  015A9A  6EDA               	movwf	fsr2h,c
 22031  015A9C  0EFF               	movlw	255
 22032  015A9E  22DA               	addwfc	fsr2h,f,c
 22033  015AA0  06DE               	decf	postinc2,f,c
 22034  015AA2  0E00               	movlw	0
 22035  015AA4  5ADD               	subwfb	postdec2,f,c
 22036                           
 22037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 22038                           ;stkvar	_w @ sp[(-18)+14]
 22039  015AA6  50E1               	movf	fsr1l,w,c
 22040  015AA8  0FFC               	addlw	-4
 22041  015AAA  6ED9               	movwf	fsr2l,c
 22042  015AAC  50E2               	movf	fsr1h,w,c
 22043  015AAE  6EDA               	movwf	fsr2h,c
 22044  015AB0  0EFF               	movlw	255
 22045  015AB2  22DA               	addwfc	fsr2h,f,c
 22046  015AB4  06DE               	decf	postinc2,f,c
 22047  015AB6  0E00               	movlw	0
 22048  015AB8  5ADD               	subwfb	postdec2,f,c
 22049                           
 22050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 22051  015ABA  0E0A               	movlw	10
 22052  015ABC  6EE6               	movwf	postinc1,c
 22053  015ABE  0E00               	movlw	0
 22054  015AC0  6EE6               	movwf	postinc1,c
 22055  015AC2  0E00               	movlw	0
 22056  015AC4  6EE6               	movwf	postinc1,c
 22057  015AC6  0E00               	movlw	0
 22058  015AC8  6EE6               	movwf	postinc1,c
 22059  015ACA  0E00               	movlw	0
 22060  015ACC  6EE6               	movwf	postinc1,c
 22061  015ACE  0E00               	movlw	0
 22062  015AD0  6EE6               	movwf	postinc1,c
 22063  015AD2  0E00               	movlw	0
 22064  015AD4  6EE6               	movwf	postinc1,c
 22065  015AD6  0E00               	movlw	0
 22066  015AD8  6EE6               	movwf	postinc1,c
 22067                           
 22068                           ;stkvar	_n @ sp[(-26)+2]
 22069  015ADA  50E1               	movf	fsr1l,w,c
 22070  015ADC  0FE8               	addlw	-24
 22071  015ADE  6ED9               	movwf	fsr2l,c
 22072  015AE0  50E2               	movf	fsr1h,w,c
 22073  015AE2  6EDA               	movwf	fsr2h,c
 22074  015AE4  0EFF               	movlw	255
 22075  015AE6  22DA               	addwfc	fsr2h,f,c
 22076  015AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 22077  015AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 22078  015AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 22079  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 22080  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 22081  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 22082  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 22083  015B12  006F FF7B FFE6     	movff	postinc2,postinc1
 22084  015B18  ECEB  F0BC         	call	___aodiv	;wreg free
 22085  015B1C  52E5               	movf	postdec1,f,c
 22086  015B1E  006F FF9C  F018    	movff	indf1,btemp+23
 22087  015B24  52E5               	movf	postdec1,f,c
 22088  015B26  006F FF9C  F017    	movff	indf1,btemp+22
 22089  015B2C  52E5               	movf	postdec1,f,c
 22090  015B2E  006F FF9C  F016    	movff	indf1,btemp+21
 22091  015B34  52E5               	movf	postdec1,f,c
 22092  015B36  006F FF9C  F015    	movff	indf1,btemp+20
 22093  015B3C  52E5               	movf	postdec1,f,c
 22094  015B3E  006F FF9C  F014    	movff	indf1,btemp+19
 22095  015B44  52E5               	movf	postdec1,f,c
 22096  015B46  006F FF9C  F013    	movff	indf1,btemp+18
 22097  015B4C  52E5               	movf	postdec1,f,c
 22098  015B4E  006F FF9C  F012    	movff	indf1,btemp+17
 22099  015B54  52E5               	movf	postdec1,f,c
 22100  015B56  006F FF9C  F011    	movff	indf1,btemp+16
 22101  015B5C  0EF8               	movlw	248
 22102  015B5E  26E1               	addwf	fsr1l,f,c
 22103  015B60  0EFF               	movlw	255
 22104  015B62  22E2               	addwfc	fsr1h,f,c
 22105                           
 22106                           ;stkvar	_n @ sp[(-18)+2]
 22107  015B64  0EF0               	movlw	-16
 22108  015B66  0060  F047  FFE3   	movff	btemp+16,plusw1
 22109  015B6C  0EF1               	movlw	-15
 22110  015B6E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 22111  015B74  0EF2               	movlw	-14
 22112  015B76  0060  F04F  FFE3   	movff	btemp+18,plusw1
 22113  015B7C  0EF3               	movlw	-13
 22114  015B7E  0060  F053  FFE3   	movff	btemp+19,plusw1
 22115  015B84  0EF4               	movlw	-12
 22116  015B86  0060  F057  FFE3   	movff	btemp+20,plusw1
 22117  015B8C  0EF5               	movlw	-11
 22118  015B8E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 22119  015B94  0EF6               	movlw	-10
 22120  015B96  0060  F05F  FFE3   	movff	btemp+22,plusw1
 22121  015B9C  0EF7               	movlw	-9
 22122  015B9E  0060  F063  FFE3   	movff	btemp+23,plusw1
 22123  015BA4                     l12521:
 22124                           
 22125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22126                           ;stkvar	_i @ sp[(-18)+10]
 22127  015BA4  0EF9               	movlw	-7
 22128  015BA6  BEE3               	btfsc	plusw1,7,c
 22129  015BA8  D036               	goto	u11490
 22130  015BAA  0EF9               	movlw	-7
 22131  015BAC  50E3               	movf	plusw1,w,c
 22132  015BAE  E104               	bnz	u11450
 22133  015BB0  0EF8               	movlw	-8
 22134  015BB2  04E3               	decf	plusw1,w,c
 22135  015BB4  A0D8               	btfss	status,0,c
 22136  015BB6  D02F               	goto	u11490
 22137  015BB8                     u11450:
 22138                           
 22139                           ;stkvar	_n @ sp[(-18)+2]
 22140  015BB8  0EF0               	movlw	-16
 22141  015BBA  50E3               	movf	plusw1,w,c
 22142  015BBC  E115               	bnz	u11461
 22143  015BBE  0EF1               	movlw	-15
 22144  015BC0  50E3               	movf	plusw1,w,c
 22145  015BC2  E112               	bnz	u11461
 22146  015BC4  0EF2               	movlw	-14
 22147  015BC6  50E3               	movf	plusw1,w,c
 22148  015BC8  E10F               	bnz	u11461
 22149  015BCA  0EF3               	movlw	-13
 22150  015BCC  50E3               	movf	plusw1,w,c
 22151  015BCE  E10C               	bnz	u11461
 22152  015BD0  0EF4               	movlw	-12
 22153  015BD2  50E3               	movf	plusw1,w,c
 22154  015BD4  E109               	bnz	u11461
 22155  015BD6  0EF5               	movlw	-11
 22156  015BD8  50E3               	movf	plusw1,w,c
 22157  015BDA  E106               	bnz	u11461
 22158  015BDC  0EF6               	movlw	-10
 22159  015BDE  50E3               	movf	plusw1,w,c
 22160  015BE0  E103               	bnz	u11461
 22161  015BE2  0EF7               	movlw	-9
 22162  015BE4  50E3               	movf	plusw1,w,c
 22163  015BE6  A4D8               	btfss	status,2,c
 22164  015BE8                     u11461:
 22165  015BE8  D6D4               	goto	l12511
 22166                           
 22167                           ;stkvar	_p @ sp[(-18)+16]
 22168  015BEA  0EFF               	movlw	-1
 22169  015BEC  BEE3               	btfsc	plusw1,7,c
 22170  015BEE  D007               	goto	u11470
 22171  015BF0  0EFF               	movlw	-1
 22172  015BF2  50E3               	movf	plusw1,w,c
 22173  015BF4  E103               	bnz	u11471
 22174  015BF6  0EFE               	movlw	-2
 22175  015BF8  04E3               	decf	plusw1,w,c
 22176  015BFA  B0D8               	btfsc	status,0,c
 22177  015BFC                     u11471:
 22178  015BFC  D6CA               	goto	l12511
 22179  015BFE                     u11470:
 22180                           
 22181                           ;stkvar	_w @ sp[(-18)+14]
 22182  015BFE  0EFD               	movlw	-3
 22183  015C00  BEE3               	btfsc	plusw1,7,c
 22184  015C02  D009               	goto	u11490
 22185  015C04  0EFD               	movlw	-3
 22186  015C06  50E3               	movf	plusw1,w,c
 22187  015C08  E104               	bnz	u11480
 22188  015C0A  0EFC               	movlw	-4
 22189  015C0C  04E3               	decf	plusw1,w,c
 22190  015C0E  A0D8               	btfss	status,0,c
 22191  015C10  D002               	goto	u11490
 22192  015C12                     u11480:
 22193  015C12  B23E               	btfsc	_flags^0,1,c
 22194  015C14  D6BE               	goto	l12511
 22195  015C16                     u11490:
 22196                           
 22197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 22198                           ;stkvar	_s @ sp[(-18)+12]
 22199  015C16  0EFA               	movlw	-6
 22200  015C18  006F FF8C  F001    	movff	plusw1,btemp
 22201  015C1E  0EFB               	movlw	-5
 22202  015C20  50E3               	movf	plusw1,w,c
 22203  015C22  1001               	iorwf	btemp^0,w,c
 22204  015C24  A4D8               	btfss	status,2,c
 22205  015C26  D002               	goto	u11510
 22206  015C28  A43E               	btfss	_flags^0,2,c
 22207  015C2A  D033               	goto	l12545
 22208  015C2C                     u11510:
 22209                           
 22210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 22211                           ;stkvar	_i @ sp[(-18)+10]
 22212  015C2C  50E1               	movf	fsr1l,w,c
 22213  015C2E  0FF8               	addlw	-8
 22214  015C30  6ED9               	movwf	fsr2l,c
 22215  015C32  50E2               	movf	fsr1h,w,c
 22216  015C34  6EDA               	movwf	fsr2h,c
 22217  015C36  0EFF               	movlw	255
 22218  015C38  22DA               	addwfc	fsr2h,f,c
 22219  015C3A  06DE               	decf	postinc2,f,c
 22220  015C3C  0E00               	movlw	0
 22221  015C3E  5ADD               	subwfb	postdec2,f,c
 22222                           
 22223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 22224                           ;stkvar	_s @ sp[(-18)+12]
 22225  015C40  0EFA               	movlw	-6
 22226  015C42  006F FF8C  F001    	movff	plusw1,btemp
 22227  015C48  0EFB               	movlw	-5
 22228  015C4A  50E3               	movf	plusw1,w,c
 22229  015C4C  1001               	iorwf	btemp^0,w,c
 22230  015C4E  A4D8               	btfss	status,2,c
 22231  015C50  D002               	goto	l12541
 22232  015C52  0E2B               	movlw	43
 22233  015C54  D001               	goto	L27
 22234  015C56                     l12541:
 22235  015C56  0E2D               	movlw	45
 22236  015C58                     L27:
 22237  015C58  6E0B               	movwf	(btemp+10)^0,c
 22238  015C5A  0E00               	movlw	0
 22239  015C5C  6E0C               	movwf	(btemp+11)^0,c
 22240                           
 22241                           ;stkvar	_dtoa$5831 @ sp[(-18)+0]
 22242  015C5E  0EEE               	movlw	-18
 22243  015C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22244  015C66  0EEF               	movlw	-17
 22245  015C68  0060  F033  FFE3   	movff	btemp+11,plusw1
 22246                           
 22247                           ;stkvar	_dtoa$5831 @ sp[(-18)+0]
 22248                           ;stkvar	_i @ sp[(-18)+10]
 22249  015C6E  0EF8               	movlw	-8
 22250  015C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 22251  015C76  0EF9               	movlw	-7
 22252  015C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22253  015C7E  0E97               	movlw	low _dbuf
 22254  015C80  240B               	addwf	(btemp+10)^0,w,c
 22255  015C82  6ED9               	movwf	fsr2l,c
 22256  015C84  0E02               	movlw	high _dbuf
 22257  015C86  200C               	addwfc	(btemp+11)^0,w,c
 22258  015C88  6EDA               	movwf	fsr2h,c
 22259  015C8A  0EEE               	movlw	-18
 22260  015C8C  006F FF8F FFDF     	movff	plusw1,indf2
 22261  015C92                     l12545:
 22262                           
 22263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 22264                           ;stkvar	_w @ sp[(-18)+14]
 22265  015C92  0EFC               	movlw	-4
 22266  015C94  006F FF8F FFE6     	movff	plusw1,postinc1
 22267  015C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 22268                           
 22269                           ;stkvar	_i @ sp[(-20)+10]
 22270  015CA0  0E97               	movlw	low _dbuf
 22271  015CA2  6E0B               	movwf	(btemp+10)^0,c
 22272  015CA4  0E02               	movlw	high _dbuf
 22273  015CA6  6E0C               	movwf	(btemp+11)^0,c
 22274  015CA8  0EF6               	movlw	-10
 22275  015CAA  50E3               	movf	plusw1,w,c
 22276  015CAC  260B               	addwf	(btemp+10)^0,f,c
 22277  015CAE  0EF7               	movlw	-9
 22278  015CB0  50E3               	movf	plusw1,w,c
 22279  015CB2  220C               	addwfc	(btemp+11)^0,f,c
 22280  015CB4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22281  015CBA  0060  F033  FFE6   	movff	btemp+11,postinc1
 22282                           
 22283                           ;stkvar	_fp @ sp[(-22)+-2]
 22284  015CC0  0EE8               	movlw	-24
 22285  015CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 22286  015CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 22287  015CCE  ECAE  F0D0         	call	_pad	;wreg free
 22288                           
 22289                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 22290  015CD2  0EE4               	movlw	228
 22291  015CD4  26E1               	addwf	fsr1l,f,c
 22292  015CD6  0EFF               	movlw	255
 22293  015CD8  22E2               	addwfc	fsr1h,f,c
 22294  015CDA  0012               	return		;funcret
 22295  015CDC                     __end_of_dtoa:
 22296                           	opt callstack 0
 22297                           
 22298 ;; *************** function _abs *****************
 22299 ;; Defined at:
 22300 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 22301 ;; Parameters:    Size  Location     Type
 22302 ;;  a               2  [STACK] int 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;		None
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  2  [STACK] int 
 22307 ;; Registers used:
 22308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/2
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;Total ram usage:        0 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; Hardware stack levels required when called:   15
 22321 ;; This function calls:
 22322 ;;		Nothing
 22323 ;; This function is called by:
 22324 ;;		_dtoa
 22325 ;; This function uses a reentrant model
 22326 ;;
 22327                           
 22328                           	psect	text77
 22329  01BE6E                     __ptext77:
 22330                           	opt callstack 0
 22331  01BE6E                     _abs:
 22332                           	opt callstack 0
 22333                           
 22334                           ;stkvar	_a @ sp[(0)+-2]
 22335                           
 22336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22337                           ;incstack = 0
 22338 ;; hardware stack exceeded
 22339  01BE6E  0EFF               	movlw	-1
 22340  01BE70  BEE3               	btfsc	plusw1,7,c
 22341  01BE72  D007               	goto	u6220
 22342  01BE74  0EFF               	movlw	-1
 22343  01BE76  50E3               	movf	plusw1,w,c
 22344  01BE78  E112               	bnz	l8341
 22345  01BE7A  0EFE               	movlw	-2
 22346  01BE7C  04E3               	decf	plusw1,w,c
 22347  01BE7E  B0D8               	btfsc	status,0,c
 22348  01BE80  D00E               	goto	l8341
 22349  01BE82                     u6220:
 22350                           
 22351                           ;stkvar	_a @ sp[(0)+-2]
 22352  01BE82  0EFE               	movlw	-2
 22353  01BE84  006F FF8C  F001    	movff	plusw1,btemp
 22354  01BE8A  1E01               	comf	btemp^0,f,c
 22355  01BE8C  0EFF               	movlw	-1
 22356  01BE8E  006F FF8C  F002    	movff	plusw1,btemp+1
 22357  01BE94  1E02               	comf	(btemp+1)^0,f,c
 22358  01BE96  2A01               	incf	btemp^0,f,c
 22359  01BE98  B4D8               	btfsc	status,2,c
 22360  01BE9A  2A02               	incf	(btemp+1)^0,f,c
 22361  01BE9C  D008               	goto	l3205
 22362  01BE9E                     l8341:
 22363                           
 22364                           ;stkvar	_a @ sp[(0)+-2]
 22365  01BE9E  0EFE               	movlw	-2
 22366  01BEA0  006F FF8C  F001    	movff	plusw1,btemp
 22367  01BEA6  0EFF               	movlw	-1
 22368  01BEA8  006F FF8C  F002    	movff	plusw1,btemp+1
 22369  01BEAE                     l3205:
 22370                           
 22371                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 22372  01BEAE  52E5               	movf	postdec1,f,c
 22373  01BEB0  52E5               	movf	postdec1,f,c
 22374  01BEB2  0012               	return		;funcret
 22375  01BEB4                     __end_of_abs:
 22376                           	opt callstack 0
 22377                           
 22378 ;; *************** function ___aomod *****************
 22379 ;; Defined at:
 22380 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 22381 ;; Parameters:    Size  Location     Type
 22382 ;;  dividend        8  [STACK] long long 
 22383 ;;  divisor         8  [STACK] long long 
 22384 ;; Auto vars:     Size  Location     Type
 22385 ;;  sign            1  [STACK] unsigned char 
 22386 ;;  counter         1  [STACK] unsigned char 
 22387 ;; Return value:  Size  Location     Type
 22388 ;;                  8  [STACK] long long 
 22389 ;; Registers used:
 22390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22391 ;; Tracked objects:
 22392 ;;		On entry : 0/2
 22393 ;;		On exit  : 0/0
 22394 ;;		Unchanged: 0/0
 22395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22400 ;;Total ram usage:        0 bytes
 22401 ;; Hardware stack levels used:    1
 22402 ;; Hardware stack levels required when called:   15
 22403 ;; This function calls:
 22404 ;;		Nothing
 22405 ;; This function is called by:
 22406 ;;		_dtoa
 22407 ;; This function uses a reentrant model
 22408 ;;
 22409                           
 22410                           	psect	text78
 22411  018110                     __ptext78:
 22412                           	opt callstack 0
 22413  018110                     ___aomod:
 22414                           	opt callstack 0
 22415                           
 22416                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 22417  018110  52E6               	movf	postinc1,f,c
 22418  018112  52E6               	movf	postinc1,f,c
 22419                           
 22420                           ;stkvar	_sign @ sp[(-2)+0]
 22421                           
 22422                           ;incstack = 0
 22423 ;; hardware stack exceeded
 22424  018114  0EFE               	movlw	-2
 22425  018116  6AE3               	clrf	plusw1,c
 22426                           
 22427                           ;stkvar	_dividend @ sp[(-2)+-8]
 22428  018118  0EFD               	movlw	-3
 22429  01811A  AEE3               	btfss	plusw1,7,c
 22430  01811C  D028               	goto	l8499
 22431                           
 22432                           ;stkvar	_dividend @ sp[(-2)+-8]
 22433                           ;stkvar	_dividend @ sp[(-2)+-8]
 22434  01811E  0EF6               	movlw	-10
 22435  018120  6CE3               	negf	plusw1,c
 22436  018122  0EF7               	movlw	-9
 22437  018124  1EE3               	comf	plusw1,f,c
 22438  018126  0EF8               	movlw	-8
 22439  018128  1EE3               	comf	plusw1,f,c
 22440  01812A  0EF9               	movlw	-7
 22441  01812C  1EE3               	comf	plusw1,f,c
 22442  01812E  0EFA               	movlw	-6
 22443  018130  1EE3               	comf	plusw1,f,c
 22444  018132  0EFB               	movlw	-5
 22445  018134  1EE3               	comf	plusw1,f,c
 22446  018136  0EFC               	movlw	-4
 22447  018138  1EE3               	comf	plusw1,f,c
 22448  01813A  0EFD               	movlw	-3
 22449  01813C  1EE3               	comf	plusw1,f,c
 22450  01813E  E314               	bnc	u6650
 22451  018140  0EF7               	movlw	-9
 22452  018142  2AE3               	incf	plusw1,f,c
 22453  018144  E311               	bnc	u6650
 22454  018146  0EF8               	movlw	-8
 22455  018148  2AE3               	incf	plusw1,f,c
 22456  01814A  E30E               	bnc	u6650
 22457  01814C  0EF9               	movlw	-7
 22458  01814E  2AE3               	incf	plusw1,f,c
 22459  018150  E30B               	bnc	u6650
 22460  018152  0EFA               	movlw	-6
 22461  018154  2AE3               	incf	plusw1,f,c
 22462  018156  E308               	bnc	u6650
 22463  018158  0EFB               	movlw	-5
 22464  01815A  2AE3               	incf	plusw1,f,c
 22465  01815C  E305               	bnc	u6650
 22466  01815E  0EFC               	movlw	-4
 22467  018160  2AE3               	incf	plusw1,f,c
 22468  018162  E302               	bnc	u6650
 22469  018164  0EFD               	movlw	-3
 22470  018166  2AE3               	incf	plusw1,f,c
 22471  018168                     u6650:
 22472                           
 22473                           ;stkvar	_sign @ sp[(-2)+0]
 22474  018168  0EFE               	movlw	-2
 22475  01816A  6AE3               	clrf	plusw1,c
 22476  01816C  2AE3               	incf	plusw1,f,c
 22477  01816E                     l8499:
 22478                           
 22479                           ;stkvar	_divisor @ sp[(-2)+-16]
 22480  01816E  0EF5               	movlw	-11
 22481  018170  AEE3               	btfss	plusw1,7,c
 22482  018172  D025               	goto	u6670
 22483                           
 22484                           ;stkvar	_divisor @ sp[(-2)+-16]
 22485                           ;stkvar	_divisor @ sp[(-2)+-16]
 22486  018174  0EEE               	movlw	-18
 22487  018176  6CE3               	negf	plusw1,c
 22488  018178  0EEF               	movlw	-17
 22489  01817A  1EE3               	comf	plusw1,f,c
 22490  01817C  0EF0               	movlw	-16
 22491  01817E  1EE3               	comf	plusw1,f,c
 22492  018180  0EF1               	movlw	-15
 22493  018182  1EE3               	comf	plusw1,f,c
 22494  018184  0EF2               	movlw	-14
 22495  018186  1EE3               	comf	plusw1,f,c
 22496  018188  0EF3               	movlw	-13
 22497  01818A  1EE3               	comf	plusw1,f,c
 22498  01818C  0EF4               	movlw	-12
 22499  01818E  1EE3               	comf	plusw1,f,c
 22500  018190  0EF5               	movlw	-11
 22501  018192  1EE3               	comf	plusw1,f,c
 22502  018194  E314               	bnc	u6670
 22503  018196  0EEF               	movlw	-17
 22504  018198  2AE3               	incf	plusw1,f,c
 22505  01819A  E311               	bnc	u6670
 22506  01819C  0EF0               	movlw	-16
 22507  01819E  2AE3               	incf	plusw1,f,c
 22508  0181A0  E30E               	bnc	u6670
 22509  0181A2  0EF1               	movlw	-15
 22510  0181A4  2AE3               	incf	plusw1,f,c
 22511  0181A6  E30B               	bnc	u6670
 22512  0181A8  0EF2               	movlw	-14
 22513  0181AA  2AE3               	incf	plusw1,f,c
 22514  0181AC  E308               	bnc	u6670
 22515  0181AE  0EF3               	movlw	-13
 22516  0181B0  2AE3               	incf	plusw1,f,c
 22517  0181B2  E305               	bnc	u6670
 22518  0181B4  0EF4               	movlw	-12
 22519  0181B6  2AE3               	incf	plusw1,f,c
 22520  0181B8  E302               	bnc	u6670
 22521  0181BA  0EF5               	movlw	-11
 22522  0181BC  2AE3               	incf	plusw1,f,c
 22523  0181BE                     u6670:
 22524                           
 22525                           ;stkvar	_divisor @ sp[(-2)+-16]
 22526  0181BE  0EEE               	movlw	-18
 22527  0181C0  50E3               	movf	plusw1,w,c
 22528  0181C2  E116               	bnz	u6680
 22529  0181C4  0EEF               	movlw	-17
 22530  0181C6  50E3               	movf	plusw1,w,c
 22531  0181C8  E113               	bnz	u6680
 22532  0181CA  0EF0               	movlw	-16
 22533  0181CC  50E3               	movf	plusw1,w,c
 22534  0181CE  E110               	bnz	u6680
 22535  0181D0  0EF1               	movlw	-15
 22536  0181D2  50E3               	movf	plusw1,w,c
 22537  0181D4  E10D               	bnz	u6680
 22538  0181D6  0EF2               	movlw	-14
 22539  0181D8  50E3               	movf	plusw1,w,c
 22540  0181DA  E10A               	bnz	u6680
 22541  0181DC  0EF3               	movlw	-13
 22542  0181DE  50E3               	movf	plusw1,w,c
 22543  0181E0  E107               	bnz	u6680
 22544  0181E2  0EF4               	movlw	-12
 22545  0181E4  50E3               	movf	plusw1,w,c
 22546  0181E6  E104               	bnz	u6680
 22547  0181E8  0EF5               	movlw	-11
 22548  0181EA  50E3               	movf	plusw1,w,c
 22549  0181EC  B4D8               	btfsc	status,2,c
 22550  0181EE  D075               	goto	u6710
 22551  0181F0                     u6680:
 22552                           
 22553                           ;stkvar	_counter @ sp[(-2)+1]
 22554  0181F0  0EFF               	movlw	-1
 22555  0181F2  6AE3               	clrf	plusw1,c
 22556  0181F4  D012               	goto	L28
 22557  0181F6                     l8507:
 22558                           
 22559                           ;stkvar	_divisor @ sp[(-2)+-16]
 22560  0181F6  90D8               	bcf	status,0,c
 22561  0181F8  0EEE               	movlw	-18
 22562  0181FA  36E3               	rlcf	plusw1,f,c
 22563  0181FC  0EEF               	movlw	-17
 22564  0181FE  36E3               	rlcf	plusw1,f,c
 22565  018200  0EF0               	movlw	-16
 22566  018202  36E3               	rlcf	plusw1,f,c
 22567  018204  0EF1               	movlw	-15
 22568  018206  36E3               	rlcf	plusw1,f,c
 22569  018208  0EF2               	movlw	-14
 22570  01820A  36E3               	rlcf	plusw1,f,c
 22571  01820C  0EF3               	movlw	-13
 22572  01820E  36E3               	rlcf	plusw1,f,c
 22573  018210  0EF4               	movlw	-12
 22574  018212  36E3               	rlcf	plusw1,f,c
 22575  018214  0EF5               	movlw	-11
 22576  018216  36E3               	rlcf	plusw1,f,c
 22577                           
 22578                           ;stkvar	_counter @ sp[(-2)+1]
 22579  018218  0EFF               	movlw	-1
 22580  01821A                     L28:
 22581  01821A  2AE3               	incf	plusw1,f,c
 22582                           
 22583                           ;stkvar	_divisor @ sp[(-2)+-16]
 22584  01821C  0EF5               	movlw	-11
 22585  01821E  AEE3               	btfss	plusw1,7,c
 22586  018220  D7EA               	goto	l8507
 22587  018222                     u6690:
 22588                           
 22589                           ;stkvar	_divisor @ sp[(-2)+-16]
 22590                           ;stkvar	_dividend @ sp[(-2)+-8]
 22591  018222  50E1               	movf	fsr1l,w,c
 22592  018224  0FF6               	addlw	-10
 22593  018226  6ED9               	movwf	fsr2l,c
 22594  018228  50E2               	movf	fsr1h,w,c
 22595  01822A  6EDA               	movwf	fsr2h,c
 22596  01822C  0EFF               	movlw	255
 22597  01822E  22DA               	addwfc	fsr2h,f,c
 22598  018230  0EEE               	movlw	-18
 22599  018232  50E3               	movf	plusw1,w,c
 22600  018234  5CDE               	subwf	postinc2,w,c
 22601  018236  0EEF               	movlw	-17
 22602  018238  50E3               	movf	plusw1,w,c
 22603  01823A  58DE               	subwfb	postinc2,w,c
 22604  01823C  0EF0               	movlw	-16
 22605  01823E  50E3               	movf	plusw1,w,c
 22606  018240  58DE               	subwfb	postinc2,w,c
 22607  018242  0EF1               	movlw	-15
 22608  018244  50E3               	movf	plusw1,w,c
 22609  018246  58DE               	subwfb	postinc2,w,c
 22610  018248  0EF2               	movlw	-14
 22611  01824A  50E3               	movf	plusw1,w,c
 22612  01824C  58DE               	subwfb	postinc2,w,c
 22613  01824E  0EF3               	movlw	-13
 22614  018250  50E3               	movf	plusw1,w,c
 22615  018252  58DE               	subwfb	postinc2,w,c
 22616  018254  0EF4               	movlw	-12
 22617  018256  50E3               	movf	plusw1,w,c
 22618  018258  58DE               	subwfb	postinc2,w,c
 22619  01825A  0EF5               	movlw	-11
 22620  01825C  50E3               	movf	plusw1,w,c
 22621  01825E  58DE               	subwfb	postinc2,w,c
 22622  018260  A0D8               	btfss	status,0,c
 22623  018262  D01F               	goto	l8515
 22624                           
 22625                           ;stkvar	_divisor @ sp[(-2)+-16]
 22626                           ;stkvar	_dividend @ sp[(-2)+-8]
 22627  018264  50E1               	movf	fsr1l,w,c
 22628  018266  0FF6               	addlw	-10
 22629  018268  6ED9               	movwf	fsr2l,c
 22630  01826A  50E2               	movf	fsr1h,w,c
 22631  01826C  6EDA               	movwf	fsr2h,c
 22632  01826E  0EFF               	movlw	255
 22633  018270  22DA               	addwfc	fsr2h,f,c
 22634  018272  0EEE               	movlw	-18
 22635  018274  50E3               	movf	plusw1,w,c
 22636  018276  5EDE               	subwf	postinc2,f,c
 22637  018278  0EEF               	movlw	-17
 22638  01827A  50E3               	movf	plusw1,w,c
 22639  01827C  5ADE               	subwfb	postinc2,f,c
 22640  01827E  0EF0               	movlw	-16
 22641  018280  50E3               	movf	plusw1,w,c
 22642  018282  5ADE               	subwfb	postinc2,f,c
 22643  018284  0EF1               	movlw	-15
 22644  018286  50E3               	movf	plusw1,w,c
 22645  018288  5ADE               	subwfb	postinc2,f,c
 22646  01828A  0EF2               	movlw	-14
 22647  01828C  50E3               	movf	plusw1,w,c
 22648  01828E  5ADE               	subwfb	postinc2,f,c
 22649  018290  0EF3               	movlw	-13
 22650  018292  50E3               	movf	plusw1,w,c
 22651  018294  5ADE               	subwfb	postinc2,f,c
 22652  018296  0EF4               	movlw	-12
 22653  018298  50E3               	movf	plusw1,w,c
 22654  01829A  5ADE               	subwfb	postinc2,f,c
 22655  01829C  0EF5               	movlw	-11
 22656  01829E  50E3               	movf	plusw1,w,c
 22657  0182A0  5ADE               	subwfb	postinc2,f,c
 22658  0182A2                     l8515:
 22659                           
 22660                           ;stkvar	_divisor @ sp[(-2)+-16]
 22661  0182A2  90D8               	bcf	status,0,c
 22662  0182A4  0EF5               	movlw	-11
 22663  0182A6  32E3               	rrcf	plusw1,f,c
 22664  0182A8  0EF4               	movlw	-12
 22665  0182AA  32E3               	rrcf	plusw1,f,c
 22666  0182AC  0EF3               	movlw	-13
 22667  0182AE  32E3               	rrcf	plusw1,f,c
 22668  0182B0  0EF2               	movlw	-14
 22669  0182B2  32E3               	rrcf	plusw1,f,c
 22670  0182B4  0EF1               	movlw	-15
 22671  0182B6  32E3               	rrcf	plusw1,f,c
 22672  0182B8  0EF0               	movlw	-16
 22673  0182BA  32E3               	rrcf	plusw1,f,c
 22674  0182BC  0EEF               	movlw	-17
 22675  0182BE  32E3               	rrcf	plusw1,f,c
 22676  0182C0  0EEE               	movlw	-18
 22677  0182C2  32E3               	rrcf	plusw1,f,c
 22678                           
 22679                           ;stkvar	_counter @ sp[(-2)+1]
 22680  0182C4  0EFF               	movlw	-1
 22681  0182C6  50E3               	movf	plusw1,w,c
 22682  0182C8  6E01               	movwf	btemp^0,c
 22683  0182CA  0E01               	movlw	1
 22684  0182CC  5E01               	subwf	btemp^0,f,c
 22685  0182CE  0EFF               	movlw	-1
 22686  0182D0  0060  F007  FFE3   	movff	btemp,plusw1
 22687  0182D6  A4D8               	btfss	status,2,c
 22688  0182D8  D7A4               	goto	u6690
 22689  0182DA                     u6710:
 22690                           
 22691                           ;stkvar	_sign @ sp[(-2)+0]
 22692  0182DA  0EFE               	movlw	-2
 22693  0182DC  50E3               	movf	plusw1,w,c
 22694  0182DE  B4D8               	btfsc	status,2,c
 22695  0182E0  D025               	goto	u6730
 22696                           
 22697                           ;stkvar	_dividend @ sp[(-2)+-8]
 22698                           ;stkvar	_dividend @ sp[(-2)+-8]
 22699  0182E2  0EF6               	movlw	-10
 22700  0182E4  6CE3               	negf	plusw1,c
 22701  0182E6  0EF7               	movlw	-9
 22702  0182E8  1EE3               	comf	plusw1,f,c
 22703  0182EA  0EF8               	movlw	-8
 22704  0182EC  1EE3               	comf	plusw1,f,c
 22705  0182EE  0EF9               	movlw	-7
 22706  0182F0  1EE3               	comf	plusw1,f,c
 22707  0182F2  0EFA               	movlw	-6
 22708  0182F4  1EE3               	comf	plusw1,f,c
 22709  0182F6  0EFB               	movlw	-5
 22710  0182F8  1EE3               	comf	plusw1,f,c
 22711  0182FA  0EFC               	movlw	-4
 22712  0182FC  1EE3               	comf	plusw1,f,c
 22713  0182FE  0EFD               	movlw	-3
 22714  018300  1EE3               	comf	plusw1,f,c
 22715  018302  E314               	bnc	u6730
 22716  018304  0EF7               	movlw	-9
 22717  018306  2AE3               	incf	plusw1,f,c
 22718  018308  E311               	bnc	u6730
 22719  01830A  0EF8               	movlw	-8
 22720  01830C  2AE3               	incf	plusw1,f,c
 22721  01830E  E30E               	bnc	u6730
 22722  018310  0EF9               	movlw	-7
 22723  018312  2AE3               	incf	plusw1,f,c
 22724  018314  E30B               	bnc	u6730
 22725  018316  0EFA               	movlw	-6
 22726  018318  2AE3               	incf	plusw1,f,c
 22727  01831A  E308               	bnc	u6730
 22728  01831C  0EFB               	movlw	-5
 22729  01831E  2AE3               	incf	plusw1,f,c
 22730  018320  E305               	bnc	u6730
 22731  018322  0EFC               	movlw	-4
 22732  018324  2AE3               	incf	plusw1,f,c
 22733  018326  E302               	bnc	u6730
 22734  018328  0EFD               	movlw	-3
 22735  01832A  2AE3               	incf	plusw1,f,c
 22736  01832C                     u6730:
 22737                           
 22738                           ;stkvar	_dividend @ sp[(-2)+-8]
 22739  01832C  0EF6               	movlw	246
 22740  01832E  24E1               	addwf	fsr1l,w,c
 22741  018330  6ED9               	movwf	fsr2l,c
 22742  018332  0EFF               	movlw	255
 22743  018334  20E2               	addwfc	fsr1h,w,c
 22744  018336  6EDA               	movwf	fsr2h,c
 22745                           
 22746                           ;stkvar	?___aomod @ sp[(-2)+-8]
 22747  018338  0E08               	movlw	8
 22748  01833A  6E01               	movwf	btemp^0,c
 22749  01833C  0EF6               	movlw	-10
 22750  01833E                     us674999:
 22751  01833E  006F FF7B FFE3     	movff	postinc2,plusw1
 22752  018344  28E8               	incf	wreg,w,c
 22753  018346  2E01               	decfsz	btemp^0,f,c
 22754  018348  D7FA               	bra	us674999
 22755                           
 22756                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 22757  01834A  52E5               	movf	postdec1,f,c
 22758  01834C  52E5               	movf	postdec1,f,c
 22759  01834E  0012               	return		;funcret
 22760  018350                     __end_of___aomod:
 22761                           	opt callstack 0
 22762                           
 22763 ;; *************** function ___aodiv *****************
 22764 ;; Defined at:
 22765 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 22766 ;; Parameters:    Size  Location     Type
 22767 ;;  dividend        8  [STACK] long long 
 22768 ;;  divisor         8  [STACK] long long 
 22769 ;; Auto vars:     Size  Location     Type
 22770 ;;  quotient        8  [STACK] long long 
 22771 ;;  sign            1  [STACK] unsigned char 
 22772 ;;  counter         1  [STACK] unsigned char 
 22773 ;; Return value:  Size  Location     Type
 22774 ;;                  8  [STACK] long long 
 22775 ;; Registers used:
 22776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22777 ;; Tracked objects:
 22778 ;;		On entry : 0/2
 22779 ;;		On exit  : 0/0
 22780 ;;		Unchanged: 0/0
 22781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22786 ;;Total ram usage:        0 bytes
 22787 ;; Hardware stack levels used:    1
 22788 ;; Hardware stack levels required when called:   15
 22789 ;; This function calls:
 22790 ;;		Nothing
 22791 ;; This function is called by:
 22792 ;;		_dtoa
 22793 ;; This function uses a reentrant model
 22794 ;;
 22795                           
 22796                           	psect	text79
 22797  0179D6                     __ptext79:
 22798                           	opt callstack 0
 22799  0179D6                     ___aodiv:
 22800                           	opt callstack 0
 22801                           
 22802                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 22803  0179D6  0E0A               	movlw	10
 22804  0179D8  26E1               	addwf	fsr1l,f,c
 22805  0179DA  0E00               	movlw	0
 22806  0179DC  22E2               	addwfc	fsr1h,f,c
 22807                           
 22808                           ;stkvar	_sign @ sp[(-10)+8]
 22809                           
 22810                           ;incstack = 0
 22811 ;; hardware stack exceeded
 22812  0179DE  0EFE               	movlw	-2
 22813  0179E0  6AE3               	clrf	plusw1,c
 22814                           
 22815                           ;stkvar	_divisor @ sp[(-10)+-16]
 22816  0179E2  0EED               	movlw	-19
 22817  0179E4  AEE3               	btfss	plusw1,7,c
 22818  0179E6  D028               	goto	l8455
 22819                           
 22820                           ;stkvar	_divisor @ sp[(-10)+-16]
 22821                           ;stkvar	_divisor @ sp[(-10)+-16]
 22822  0179E8  0EE6               	movlw	-26
 22823  0179EA  6CE3               	negf	plusw1,c
 22824  0179EC  0EE7               	movlw	-25
 22825  0179EE  1EE3               	comf	plusw1,f,c
 22826  0179F0  0EE8               	movlw	-24
 22827  0179F2  1EE3               	comf	plusw1,f,c
 22828  0179F4  0EE9               	movlw	-23
 22829  0179F6  1EE3               	comf	plusw1,f,c
 22830  0179F8  0EEA               	movlw	-22
 22831  0179FA  1EE3               	comf	plusw1,f,c
 22832  0179FC  0EEB               	movlw	-21
 22833  0179FE  1EE3               	comf	plusw1,f,c
 22834  017A00  0EEC               	movlw	-20
 22835  017A02  1EE3               	comf	plusw1,f,c
 22836  017A04  0EED               	movlw	-19
 22837  017A06  1EE3               	comf	plusw1,f,c
 22838  017A08  E314               	bnc	u6530
 22839  017A0A  0EE7               	movlw	-25
 22840  017A0C  2AE3               	incf	plusw1,f,c
 22841  017A0E  E311               	bnc	u6530
 22842  017A10  0EE8               	movlw	-24
 22843  017A12  2AE3               	incf	plusw1,f,c
 22844  017A14  E30E               	bnc	u6530
 22845  017A16  0EE9               	movlw	-23
 22846  017A18  2AE3               	incf	plusw1,f,c
 22847  017A1A  E30B               	bnc	u6530
 22848  017A1C  0EEA               	movlw	-22
 22849  017A1E  2AE3               	incf	plusw1,f,c
 22850  017A20  E308               	bnc	u6530
 22851  017A22  0EEB               	movlw	-21
 22852  017A24  2AE3               	incf	plusw1,f,c
 22853  017A26  E305               	bnc	u6530
 22854  017A28  0EEC               	movlw	-20
 22855  017A2A  2AE3               	incf	plusw1,f,c
 22856  017A2C  E302               	bnc	u6530
 22857  017A2E  0EED               	movlw	-19
 22858  017A30  2AE3               	incf	plusw1,f,c
 22859  017A32                     u6530:
 22860                           
 22861                           ;stkvar	_sign @ sp[(-10)+8]
 22862  017A32  0EFE               	movlw	-2
 22863  017A34  6AE3               	clrf	plusw1,c
 22864  017A36  2AE3               	incf	plusw1,f,c
 22865  017A38                     l8455:
 22866                           
 22867                           ;stkvar	_dividend @ sp[(-10)+-8]
 22868  017A38  0EF5               	movlw	-11
 22869  017A3A  AEE3               	btfss	plusw1,7,c
 22870  017A3C  D027               	goto	l8461
 22871                           
 22872                           ;stkvar	_dividend @ sp[(-10)+-8]
 22873                           ;stkvar	_dividend @ sp[(-10)+-8]
 22874  017A3E  0EEE               	movlw	-18
 22875  017A40  6CE3               	negf	plusw1,c
 22876  017A42  0EEF               	movlw	-17
 22877  017A44  1EE3               	comf	plusw1,f,c
 22878  017A46  0EF0               	movlw	-16
 22879  017A48  1EE3               	comf	plusw1,f,c
 22880  017A4A  0EF1               	movlw	-15
 22881  017A4C  1EE3               	comf	plusw1,f,c
 22882  017A4E  0EF2               	movlw	-14
 22883  017A50  1EE3               	comf	plusw1,f,c
 22884  017A52  0EF3               	movlw	-13
 22885  017A54  1EE3               	comf	plusw1,f,c
 22886  017A56  0EF4               	movlw	-12
 22887  017A58  1EE3               	comf	plusw1,f,c
 22888  017A5A  0EF5               	movlw	-11
 22889  017A5C  1EE3               	comf	plusw1,f,c
 22890  017A5E  E314               	bnc	u6550
 22891  017A60  0EEF               	movlw	-17
 22892  017A62  2AE3               	incf	plusw1,f,c
 22893  017A64  E311               	bnc	u6550
 22894  017A66  0EF0               	movlw	-16
 22895  017A68  2AE3               	incf	plusw1,f,c
 22896  017A6A  E30E               	bnc	u6550
 22897  017A6C  0EF1               	movlw	-15
 22898  017A6E  2AE3               	incf	plusw1,f,c
 22899  017A70  E30B               	bnc	u6550
 22900  017A72  0EF2               	movlw	-14
 22901  017A74  2AE3               	incf	plusw1,f,c
 22902  017A76  E308               	bnc	u6550
 22903  017A78  0EF3               	movlw	-13
 22904  017A7A  2AE3               	incf	plusw1,f,c
 22905  017A7C  E305               	bnc	u6550
 22906  017A7E  0EF4               	movlw	-12
 22907  017A80  2AE3               	incf	plusw1,f,c
 22908  017A82  E302               	bnc	u6550
 22909  017A84  0EF5               	movlw	-11
 22910  017A86  2AE3               	incf	plusw1,f,c
 22911  017A88                     u6550:
 22912                           
 22913                           ;stkvar	_sign @ sp[(-10)+8]
 22914  017A88  0EFE               	movlw	-2
 22915  017A8A  70E3               	btg	plusw1,0,c
 22916  017A8C                     l8461:
 22917                           
 22918                           ;stkvar	_quotient @ sp[(-10)+0]
 22919  017A8C  0E07               	movlw	7
 22920  017A8E  6E01               	movwf	btemp^0,c
 22921  017A90  0EF6               	movlw	-10
 22922  017A92                     u6561:
 22923  017A92  6AE3               	clrf	plusw1,c
 22924  017A94  2AE8               	incf	wreg,f,c
 22925  017A96  0601               	decf	btemp^0,f,c
 22926  017A98  E2FC               	bc	u6561
 22927                           
 22928                           ;stkvar	_divisor @ sp[(-10)+-16]
 22929  017A9A  0EE6               	movlw	-26
 22930  017A9C  50E3               	movf	plusw1,w,c
 22931  017A9E  E116               	bnz	u6570
 22932  017AA0  0EE7               	movlw	-25
 22933  017AA2  50E3               	movf	plusw1,w,c
 22934  017AA4  E113               	bnz	u6570
 22935  017AA6  0EE8               	movlw	-24
 22936  017AA8  50E3               	movf	plusw1,w,c
 22937  017AAA  E110               	bnz	u6570
 22938  017AAC  0EE9               	movlw	-23
 22939  017AAE  50E3               	movf	plusw1,w,c
 22940  017AB0  E10D               	bnz	u6570
 22941  017AB2  0EEA               	movlw	-22
 22942  017AB4  50E3               	movf	plusw1,w,c
 22943  017AB6  E10A               	bnz	u6570
 22944  017AB8  0EEB               	movlw	-21
 22945  017ABA  50E3               	movf	plusw1,w,c
 22946  017ABC  E107               	bnz	u6570
 22947  017ABE  0EEC               	movlw	-20
 22948  017AC0  50E3               	movf	plusw1,w,c
 22949  017AC2  E104               	bnz	u6570
 22950  017AC4  0EED               	movlw	-19
 22951  017AC6  50E3               	movf	plusw1,w,c
 22952  017AC8  B4D8               	btfsc	status,2,c
 22953  017ACA  D088               	goto	u6600
 22954  017ACC                     u6570:
 22955                           
 22956                           ;stkvar	_counter @ sp[(-10)+9]
 22957  017ACC  0EFF               	movlw	-1
 22958  017ACE  6AE3               	clrf	plusw1,c
 22959  017AD0  D012               	goto	L29
 22960  017AD2                     l8467:
 22961                           
 22962                           ;stkvar	_divisor @ sp[(-10)+-16]
 22963  017AD2  90D8               	bcf	status,0,c
 22964  017AD4  0EE6               	movlw	-26
 22965  017AD6  36E3               	rlcf	plusw1,f,c
 22966  017AD8  0EE7               	movlw	-25
 22967  017ADA  36E3               	rlcf	plusw1,f,c
 22968  017ADC  0EE8               	movlw	-24
 22969  017ADE  36E3               	rlcf	plusw1,f,c
 22970  017AE0  0EE9               	movlw	-23
 22971  017AE2  36E3               	rlcf	plusw1,f,c
 22972  017AE4  0EEA               	movlw	-22
 22973  017AE6  36E3               	rlcf	plusw1,f,c
 22974  017AE8  0EEB               	movlw	-21
 22975  017AEA  36E3               	rlcf	plusw1,f,c
 22976  017AEC  0EEC               	movlw	-20
 22977  017AEE  36E3               	rlcf	plusw1,f,c
 22978  017AF0  0EED               	movlw	-19
 22979  017AF2  36E3               	rlcf	plusw1,f,c
 22980                           
 22981                           ;stkvar	_counter @ sp[(-10)+9]
 22982  017AF4  0EFF               	movlw	-1
 22983  017AF6                     L29:
 22984  017AF6  2AE3               	incf	plusw1,f,c
 22985                           
 22986                           ;stkvar	_divisor @ sp[(-10)+-16]
 22987  017AF8  0EED               	movlw	-19
 22988  017AFA  AEE3               	btfss	plusw1,7,c
 22989  017AFC  D7EA               	goto	l8467
 22990  017AFE                     u6580:
 22991                           
 22992                           ;stkvar	_quotient @ sp[(-10)+0]
 22993  017AFE  90D8               	bcf	status,0,c
 22994  017B00  0EF6               	movlw	-10
 22995  017B02  36E3               	rlcf	plusw1,f,c
 22996  017B04  0EF7               	movlw	-9
 22997  017B06  36E3               	rlcf	plusw1,f,c
 22998  017B08  0EF8               	movlw	-8
 22999  017B0A  36E3               	rlcf	plusw1,f,c
 23000  017B0C  0EF9               	movlw	-7
 23001  017B0E  36E3               	rlcf	plusw1,f,c
 23002  017B10  0EFA               	movlw	-6
 23003  017B12  36E3               	rlcf	plusw1,f,c
 23004  017B14  0EFB               	movlw	-5
 23005  017B16  36E3               	rlcf	plusw1,f,c
 23006  017B18  0EFC               	movlw	-4
 23007  017B1A  36E3               	rlcf	plusw1,f,c
 23008  017B1C  0EFD               	movlw	-3
 23009  017B1E  36E3               	rlcf	plusw1,f,c
 23010                           
 23011                           ;stkvar	_divisor @ sp[(-10)+-16]
 23012                           ;stkvar	_dividend @ sp[(-10)+-8]
 23013  017B20  50E1               	movf	fsr1l,w,c
 23014  017B22  0FEE               	addlw	-18
 23015  017B24  6ED9               	movwf	fsr2l,c
 23016  017B26  50E2               	movf	fsr1h,w,c
 23017  017B28  6EDA               	movwf	fsr2h,c
 23018  017B2A  0EFF               	movlw	255
 23019  017B2C  22DA               	addwfc	fsr2h,f,c
 23020  017B2E  0EE6               	movlw	-26
 23021  017B30  50E3               	movf	plusw1,w,c
 23022  017B32  5CDE               	subwf	postinc2,w,c
 23023  017B34  0EE7               	movlw	-25
 23024  017B36  50E3               	movf	plusw1,w,c
 23025  017B38  58DE               	subwfb	postinc2,w,c
 23026  017B3A  0EE8               	movlw	-24
 23027  017B3C  50E3               	movf	plusw1,w,c
 23028  017B3E  58DE               	subwfb	postinc2,w,c
 23029  017B40  0EE9               	movlw	-23
 23030  017B42  50E3               	movf	plusw1,w,c
 23031  017B44  58DE               	subwfb	postinc2,w,c
 23032  017B46  0EEA               	movlw	-22
 23033  017B48  50E3               	movf	plusw1,w,c
 23034  017B4A  58DE               	subwfb	postinc2,w,c
 23035  017B4C  0EEB               	movlw	-21
 23036  017B4E  50E3               	movf	plusw1,w,c
 23037  017B50  58DE               	subwfb	postinc2,w,c
 23038  017B52  0EEC               	movlw	-20
 23039  017B54  50E3               	movf	plusw1,w,c
 23040  017B56  58DE               	subwfb	postinc2,w,c
 23041  017B58  0EED               	movlw	-19
 23042  017B5A  50E3               	movf	plusw1,w,c
 23043  017B5C  58DE               	subwfb	postinc2,w,c
 23044  017B5E  A0D8               	btfss	status,0,c
 23045  017B60  D021               	goto	l8479
 23046                           
 23047                           ;stkvar	_divisor @ sp[(-10)+-16]
 23048                           ;stkvar	_dividend @ sp[(-10)+-8]
 23049  017B62  50E1               	movf	fsr1l,w,c
 23050  017B64  0FEE               	addlw	-18
 23051  017B66  6ED9               	movwf	fsr2l,c
 23052  017B68  50E2               	movf	fsr1h,w,c
 23053  017B6A  6EDA               	movwf	fsr2h,c
 23054  017B6C  0EFF               	movlw	255
 23055  017B6E  22DA               	addwfc	fsr2h,f,c
 23056  017B70  0EE6               	movlw	-26
 23057  017B72  50E3               	movf	plusw1,w,c
 23058  017B74  5EDE               	subwf	postinc2,f,c
 23059  017B76  0EE7               	movlw	-25
 23060  017B78  50E3               	movf	plusw1,w,c
 23061  017B7A  5ADE               	subwfb	postinc2,f,c
 23062  017B7C  0EE8               	movlw	-24
 23063  017B7E  50E3               	movf	plusw1,w,c
 23064  017B80  5ADE               	subwfb	postinc2,f,c
 23065  017B82  0EE9               	movlw	-23
 23066  017B84  50E3               	movf	plusw1,w,c
 23067  017B86  5ADE               	subwfb	postinc2,f,c
 23068  017B88  0EEA               	movlw	-22
 23069  017B8A  50E3               	movf	plusw1,w,c
 23070  017B8C  5ADE               	subwfb	postinc2,f,c
 23071  017B8E  0EEB               	movlw	-21
 23072  017B90  50E3               	movf	plusw1,w,c
 23073  017B92  5ADE               	subwfb	postinc2,f,c
 23074  017B94  0EEC               	movlw	-20
 23075  017B96  50E3               	movf	plusw1,w,c
 23076  017B98  5ADE               	subwfb	postinc2,f,c
 23077  017B9A  0EED               	movlw	-19
 23078  017B9C  50E3               	movf	plusw1,w,c
 23079  017B9E  5ADE               	subwfb	postinc2,f,c
 23080                           
 23081                           ;stkvar	_quotient @ sp[(-10)+0]
 23082  017BA0  0EF6               	movlw	-10
 23083  017BA2  80E3               	bsf	plusw1,0,c
 23084  017BA4                     l8479:
 23085                           
 23086                           ;stkvar	_divisor @ sp[(-10)+-16]
 23087  017BA4  90D8               	bcf	status,0,c
 23088  017BA6  0EED               	movlw	-19
 23089  017BA8  32E3               	rrcf	plusw1,f,c
 23090  017BAA  0EEC               	movlw	-20
 23091  017BAC  32E3               	rrcf	plusw1,f,c
 23092  017BAE  0EEB               	movlw	-21
 23093  017BB0  32E3               	rrcf	plusw1,f,c
 23094  017BB2  0EEA               	movlw	-22
 23095  017BB4  32E3               	rrcf	plusw1,f,c
 23096  017BB6  0EE9               	movlw	-23
 23097  017BB8  32E3               	rrcf	plusw1,f,c
 23098  017BBA  0EE8               	movlw	-24
 23099  017BBC  32E3               	rrcf	plusw1,f,c
 23100  017BBE  0EE7               	movlw	-25
 23101  017BC0  32E3               	rrcf	plusw1,f,c
 23102  017BC2  0EE6               	movlw	-26
 23103  017BC4  32E3               	rrcf	plusw1,f,c
 23104                           
 23105                           ;stkvar	_counter @ sp[(-10)+9]
 23106  017BC6  0EFF               	movlw	-1
 23107  017BC8  50E3               	movf	plusw1,w,c
 23108  017BCA  6E01               	movwf	btemp^0,c
 23109  017BCC  0E01               	movlw	1
 23110  017BCE  5E01               	subwf	btemp^0,f,c
 23111  017BD0  0EFF               	movlw	-1
 23112  017BD2  0060  F007  FFE3   	movff	btemp,plusw1
 23113  017BD8  A4D8               	btfss	status,2,c
 23114  017BDA  D791               	goto	u6580
 23115  017BDC                     u6600:
 23116                           
 23117                           ;stkvar	_sign @ sp[(-10)+8]
 23118  017BDC  0EFE               	movlw	-2
 23119  017BDE  50E3               	movf	plusw1,w,c
 23120  017BE0  B4D8               	btfsc	status,2,c
 23121  017BE2  D025               	goto	u6620
 23122                           
 23123                           ;stkvar	_quotient @ sp[(-10)+0]
 23124                           ;stkvar	_quotient @ sp[(-10)+0]
 23125  017BE4  0EF6               	movlw	-10
 23126  017BE6  6CE3               	negf	plusw1,c
 23127  017BE8  0EF7               	movlw	-9
 23128  017BEA  1EE3               	comf	plusw1,f,c
 23129  017BEC  0EF8               	movlw	-8
 23130  017BEE  1EE3               	comf	plusw1,f,c
 23131  017BF0  0EF9               	movlw	-7
 23132  017BF2  1EE3               	comf	plusw1,f,c
 23133  017BF4  0EFA               	movlw	-6
 23134  017BF6  1EE3               	comf	plusw1,f,c
 23135  017BF8  0EFB               	movlw	-5
 23136  017BFA  1EE3               	comf	plusw1,f,c
 23137  017BFC  0EFC               	movlw	-4
 23138  017BFE  1EE3               	comf	plusw1,f,c
 23139  017C00  0EFD               	movlw	-3
 23140  017C02  1EE3               	comf	plusw1,f,c
 23141  017C04  E314               	bnc	u6620
 23142  017C06  0EF7               	movlw	-9
 23143  017C08  2AE3               	incf	plusw1,f,c
 23144  017C0A  E311               	bnc	u6620
 23145  017C0C  0EF8               	movlw	-8
 23146  017C0E  2AE3               	incf	plusw1,f,c
 23147  017C10  E30E               	bnc	u6620
 23148  017C12  0EF9               	movlw	-7
 23149  017C14  2AE3               	incf	plusw1,f,c
 23150  017C16  E30B               	bnc	u6620
 23151  017C18  0EFA               	movlw	-6
 23152  017C1A  2AE3               	incf	plusw1,f,c
 23153  017C1C  E308               	bnc	u6620
 23154  017C1E  0EFB               	movlw	-5
 23155  017C20  2AE3               	incf	plusw1,f,c
 23156  017C22  E305               	bnc	u6620
 23157  017C24  0EFC               	movlw	-4
 23158  017C26  2AE3               	incf	plusw1,f,c
 23159  017C28  E302               	bnc	u6620
 23160  017C2A  0EFD               	movlw	-3
 23161  017C2C  2AE3               	incf	plusw1,f,c
 23162  017C2E                     u6620:
 23163                           
 23164                           ;stkvar	_quotient @ sp[(-10)+0]
 23165  017C2E  0EF6               	movlw	246
 23166  017C30  24E1               	addwf	fsr1l,w,c
 23167  017C32  6ED9               	movwf	fsr2l,c
 23168  017C34  0EFF               	movlw	255
 23169  017C36  20E2               	addwfc	fsr1h,w,c
 23170  017C38  6EDA               	movwf	fsr2h,c
 23171                           
 23172                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 23173  017C3A  0E08               	movlw	8
 23174  017C3C  6E01               	movwf	btemp^0,c
 23175  017C3E  0EEE               	movlw	-18
 23176  017C40                     us663999:
 23177  017C40  006F FF7B FFE3     	movff	postinc2,plusw1
 23178  017C46  28E8               	incf	wreg,w,c
 23179  017C48  2E01               	decfsz	btemp^0,f,c
 23180  017C4A  D7FA               	bra	us663999
 23181                           
 23182                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 23183  017C4C  0EF6               	movlw	246
 23184  017C4E  26E1               	addwf	fsr1l,f,c
 23185  017C50  0EFF               	movlw	255
 23186  017C52  22E2               	addwfc	fsr1h,f,c
 23187  017C54  0012               	return		;funcret
 23188  017C56                     __end_of___aodiv:
 23189                           	opt callstack 0
 23190                           
 23191 ;; *************** function _ctoa *****************
 23192 ;; Defined at:
 23193 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23194 ;; Parameters:    Size  Location     Type
 23195 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23196 ;;		 -> f(6), NULL(0), 
 23197 ;;  c               1  [STACK] unsigned char 
 23198 ;; Auto vars:     Size  Location     Type
 23199 ;;  w               2  [STACK] int 
 23200 ;;  l               2    0        int 
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  2  [STACK] int 
 23203 ;; Registers used:
 23204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/0
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:   20
 23217 ;; This function calls:
 23218 ;;		_pad
 23219 ;; This function is called by:
 23220 ;;		_vfpfcnvrt
 23221 ;; This function uses a reentrant model
 23222 ;;
 23223                           
 23224                           	psect	text80
 23225  01B334                     __ptext80:
 23226                           	opt callstack 0
 23227  01B334                     _ctoa:
 23228                           	opt callstack 0
 23229                           
 23230                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23231  01B334  52E6               	movf	postinc1,f,c
 23232  01B336  52E6               	movf	postinc1,f,c
 23233                           
 23234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 23235                           
 23236                           ;incstack = 0
 23237 ;; hardware stack exceeded
 23238  01B338  503A               	movf	_width^0,w,c
 23239  01B33A  103B               	iorwf	(_width+1)^0,w,c
 23240  01B33C  A4D8               	btfss	status,2,c
 23241  01B33E  D009               	goto	l12473
 23242                           
 23243                           ;stkvar	_w @ sp[(-2)+0]
 23244  01B340  0EFE               	movlw	-2
 23245  01B342  0060  F0EB  FFE3   	movff	_width,plusw1
 23246  01B348  0EFF               	movlw	-1
 23247  01B34A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23248  01B350  D016               	goto	l12475
 23249  01B352                     l12473:
 23250  01B352  0EFF               	movlw	255
 23251  01B354  6E0B               	movwf	(btemp+10)^0,c
 23252  01B356  0EFF               	movlw	255
 23253  01B358  6E0C               	movwf	(btemp+11)^0,c
 23254  01B35A  0060  F0E8  F009   	movff	_width,btemp+8
 23255  01B360  0060  F0EC  F00A   	movff	_width+1,btemp+9
 23256  01B366  500B               	movf	(btemp+10)^0,w,c
 23257  01B368  2609               	addwf	(btemp+8)^0,f,c
 23258  01B36A  500C               	movf	(btemp+11)^0,w,c
 23259  01B36C  220A               	addwfc	(btemp+9)^0,f,c
 23260                           
 23261                           ;stkvar	_w @ sp[(-2)+0]
 23262  01B36E  0EFE               	movlw	-2
 23263  01B370  0060  F027  FFE3   	movff	btemp+8,plusw1
 23264  01B376  0EFF               	movlw	-1
 23265  01B378  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23266  01B37E                     l12475:
 23267                           
 23268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 23269                           ;stkvar	_c @ sp[(-2)+-3]
 23270  01B37E  0EFB               	movlw	-5
 23271  01B380  006F FF8C  F297    	movff	plusw1,_dbuf
 23272                           
 23273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 23274  01B386  0102               	movlb	2	; () banked
 23275  01B388  6B98               	clrf	(_dbuf+1)& (0+255),b
 23276                           
 23277                           ; BSR set to: 2
 23278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 23279                           ;stkvar	_w @ sp[(-2)+0]
 23280  01B38A  0EFE               	movlw	-2
 23281  01B38C  006F FF8F FFE6     	movff	plusw1,postinc1
 23282  01B392  006F FF8F FFE6     	movff	plusw1,postinc1
 23283  01B398  0E97               	movlw	low _dbuf
 23284  01B39A  6EE6               	movwf	postinc1,c
 23285  01B39C  0E02               	movlw	high _dbuf
 23286  01B39E  6EE6               	movwf	postinc1,c
 23287                           
 23288                           ;stkvar	_fp @ sp[(-6)+-2]
 23289  01B3A0  0EF8               	movlw	-8
 23290  01B3A2  006F FF8F FFE6     	movff	plusw1,postinc1
 23291  01B3A8  006F FF8F FFE6     	movff	plusw1,postinc1
 23292  01B3AE  ECAE  F0D0         	call	_pad	;wreg free
 23293                           
 23294                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 23295  01B3B2  0EFB               	movlw	251
 23296  01B3B4  26E1               	addwf	fsr1l,f,c
 23297  01B3B6  0EFF               	movlw	255
 23298  01B3B8  22E2               	addwfc	fsr1h,f,c
 23299  01B3BA  0012               	return		;funcret
 23300  01B3BC                     __end_of_ctoa:
 23301                           	opt callstack 0
 23302                           
 23303 ;; *************** function _pad *****************
 23304 ;; Defined at:
 23305 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23308 ;;		 -> f(6), NULL(0), 
 23309 ;;  buf             2  [STACK] PTR unsigned char 
 23310 ;;		 -> dbuf(80), 
 23311 ;;  p               2  [STACK] int 
 23312 ;; Auto vars:     Size  Location     Type
 23313 ;;  w               2  [STACK] int 
 23314 ;;  i               2  [STACK] int 
 23315 ;; Return value:  Size  Location     Type
 23316 ;;                  2  [STACK] int 
 23317 ;; Registers used:
 23318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 23319 ;; Tracked objects:
 23320 ;;		On entry : 0/2
 23321 ;;		On exit  : 0/0
 23322 ;;		Unchanged: 0/0
 23323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23328 ;;Total ram usage:        0 bytes
 23329 ;; Hardware stack levels used:    1
 23330 ;; Hardware stack levels required when called:   19
 23331 ;; This function calls:
 23332 ;;		_fputc
 23333 ;;		_fputs
 23334 ;;		_strlen
 23335 ;; This function is called by:
 23336 ;;		_ctoa
 23337 ;;		_dtoa
 23338 ;;		_efgtoa
 23339 ;;		_utoa
 23340 ;;		_xtoa
 23341 ;; This function uses a reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text81
 23345  01A15C                     __ptext81:
 23346                           	opt callstack 0
 23347  01A15C                     _pad:
 23348                           	opt callstack 0
 23349                           
 23350                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23351  01A15C  52E6               	movf	postinc1,f,c
 23352  01A15E  52E6               	movf	postinc1,f,c
 23353  01A160  52E6               	movf	postinc1,f,c
 23354  01A162  52E6               	movf	postinc1,f,c
 23355                           
 23356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 23357                           
 23358                           ;incstack = 0
 23359 ;; hardware stack exceeded
 23360  01A164  A03E               	btfss	_flags^0,0,c
 23361  01A166  D010               	goto	l12435
 23362                           
 23363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 23364                           ;stkvar	_fp @ sp[(-4)+-2]
 23365  01A168  0EFA               	movlw	-6
 23366  01A16A  006F FF8F FFE6     	movff	plusw1,postinc1
 23367  01A170  006F FF8F FFE6     	movff	plusw1,postinc1
 23368                           
 23369                           ;stkvar	_buf @ sp[(-6)+-4]
 23370  01A176  0EF6               	movlw	-10
 23371  01A178  006F FF8F FFE6     	movff	plusw1,postinc1
 23372  01A17E  006F FF8F FFE6     	movff	plusw1,postinc1
 23373  01A184  ECBC  F0D8         	call	_fputs	;wreg free
 23374  01A188                     l12435:
 23375                           
 23376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 23377                           ;stkvar	_p @ sp[(-4)+-6]
 23378  01A188  0EF7               	movlw	-9
 23379  01A18A  BEE3               	btfsc	plusw1,7,c
 23380  01A18C  D011               	goto	l12439
 23381                           
 23382                           ;stkvar	_p @ sp[(-4)+-6]
 23383                           ;stkvar	_w @ sp[(-4)+0]
 23384  01A18E  0EF6               	movlw	-10
 23385  01A190  006F FF8C  F001    	movff	plusw1,btemp
 23386  01A196  0EFC               	movlw	-4
 23387  01A198  0060  F007  FFE3   	movff	btemp,plusw1
 23388  01A19E  0EF7               	movlw	-9
 23389  01A1A0  006F FF8C  F001    	movff	plusw1,btemp
 23390  01A1A6  0EFD               	movlw	-3
 23391  01A1A8  0060  F007  FFE3   	movff	btemp,plusw1
 23392  01A1AE  D004               	goto	l2259
 23393  01A1B0                     l12439:
 23394                           
 23395                           ;stkvar	_w @ sp[(-4)+0]
 23396  01A1B0  0EFC               	movlw	-4
 23397  01A1B2  6AE3               	clrf	plusw1,c
 23398  01A1B4  0EFD               	movlw	-3
 23399  01A1B6  6AE3               	clrf	plusw1,c
 23400  01A1B8                     l2259:
 23401                           
 23402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 23403                           ;stkvar	_i @ sp[(-4)+2]
 23404  01A1B8  0EFE               	movlw	-2
 23405  01A1BA  6AE3               	clrf	plusw1,c
 23406  01A1BC  0EFF               	movlw	-1
 23407  01A1BE  6AE3               	clrf	plusw1,c
 23408                           
 23409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23410  01A1C0  D01E               	goto	l12445
 23411  01A1C2                     l12441:
 23412                           
 23413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 23414                           ;stkvar	_fp @ sp[(-4)+-2]
 23415  01A1C2  0EFA               	movlw	-6
 23416  01A1C4  006F FF8F FFE6     	movff	plusw1,postinc1
 23417  01A1CA  006F FF8F FFE6     	movff	plusw1,postinc1
 23418  01A1D0  0E20               	movlw	32
 23419  01A1D2  6EE6               	movwf	postinc1,c
 23420  01A1D4  0E00               	movlw	0
 23421  01A1D6  6EE6               	movwf	postinc1,c
 23422  01A1D8  EC04  F0CF         	call	_fputc	;wreg free
 23423                           
 23424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 23425                           ;stkvar	_i @ sp[(-4)+2]
 23426  01A1DC  0EFE               	movlw	-2
 23427  01A1DE  50E3               	movf	plusw1,w,c
 23428  01A1E0  0F01               	addlw	1
 23429  01A1E2  6E01               	movwf	btemp^0,c
 23430  01A1E4  0EFE               	movlw	-2
 23431  01A1E6  0060  F007  FFE3   	movff	btemp,plusw1
 23432  01A1EC  6A01               	clrf	btemp^0,c
 23433  01A1EE  0EFF               	movlw	-1
 23434  01A1F0  50E3               	movf	plusw1,w,c
 23435  01A1F2  2001               	addwfc	btemp^0,w,c
 23436  01A1F4  6E01               	movwf	btemp^0,c
 23437  01A1F6  0EFF               	movlw	-1
 23438  01A1F8  0060  F007  FFE3   	movff	btemp,plusw1
 23439  01A1FE                     l12445:
 23440                           
 23441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 23442                           ;stkvar	_w @ sp[(-4)+0]
 23443                           ;stkvar	_i @ sp[(-4)+2]
 23444  01A1FE  50E1               	movf	fsr1l,w,c
 23445  01A200  0FFE               	addlw	-2
 23446  01A202  6ED9               	movwf	fsr2l,c
 23447  01A204  50E2               	movf	fsr1h,w,c
 23448  01A206  6EDA               	movwf	fsr2h,c
 23449  01A208  0EFF               	movlw	255
 23450  01A20A  22DA               	addwfc	fsr2h,f,c
 23451  01A20C  0EFC               	movlw	-4
 23452  01A20E  50E3               	movf	plusw1,w,c
 23453  01A210  5CDE               	subwf	postinc2,w,c
 23454  01A212  50DE               	movf	postinc2,w,c
 23455  01A214  0A80               	xorlw	128
 23456  01A216  6E01               	movwf	btemp^0,c
 23457  01A218  0EFD               	movlw	-3
 23458  01A21A  50E3               	movf	plusw1,w,c
 23459  01A21C  0A80               	xorlw	128
 23460  01A21E  5801               	subwfb	btemp^0,w,c
 23461  01A220  A0D8               	btfss	status,0,c
 23462  01A222  D7CF               	goto	l12441
 23463                           
 23464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 23465  01A224  B03E               	btfsc	_flags^0,0,c
 23466  01A226  D010               	goto	l12449
 23467                           
 23468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 23469                           ;stkvar	_fp @ sp[(-4)+-2]
 23470  01A228  0EFA               	movlw	-6
 23471  01A22A  006F FF8F FFE6     	movff	plusw1,postinc1
 23472  01A230  006F FF8F FFE6     	movff	plusw1,postinc1
 23473                           
 23474                           ;stkvar	_buf @ sp[(-6)+-4]
 23475  01A236  0EF6               	movlw	-10
 23476  01A238  006F FF8F FFE6     	movff	plusw1,postinc1
 23477  01A23E  006F FF8F FFE6     	movff	plusw1,postinc1
 23478  01A244  ECBC  F0D8         	call	_fputs	;wreg free
 23479  01A248                     l12449:
 23480                           
 23481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 23482                           ;stkvar	_w @ sp[(-4)+0]
 23483                           ;stkvar	_buf @ sp[(-4)+-4]
 23484  01A248  0EF8               	movlw	-8
 23485  01A24A  006F FF8F FFE6     	movff	plusw1,postinc1
 23486  01A250  006F FF8F FFE6     	movff	plusw1,postinc1
 23487  01A256  EC6B  F0D8         	call	_strlen	;wreg free
 23488  01A25A  0EFC               	movlw	-4
 23489  01A25C  50E3               	movf	plusw1,w,c
 23490  01A25E  2601               	addwf	btemp^0,f,c
 23491  01A260  0EFD               	movlw	-3
 23492  01A262  50E3               	movf	plusw1,w,c
 23493  01A264  2202               	addwfc	(btemp+1)^0,f,c
 23494                           
 23495                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 23496  01A266  0EF6               	movlw	246
 23497  01A268  26E1               	addwf	fsr1l,f,c
 23498  01A26A  0EFF               	movlw	255
 23499  01A26C  22E2               	addwfc	fsr1h,f,c
 23500  01A26E  0012               	return		;funcret
 23501  01A270                     __end_of_pad:
 23502                           	opt callstack 0
 23503                           
 23504 ;; *************** function _strlen *****************
 23505 ;; Defined at:
 23506 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;  s               2  [STACK] PTR const unsigned char 
 23509 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23510 ;;		 -> spin(120), STR_57(9), STR_56(12), D.lcd(480), 
 23511 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23512 ;;		 -> V(192), 
 23513 ;; Auto vars:     Size  Location     Type
 23514 ;;  a               2  [STACK] PTR const unsigned char 
 23515 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 23516 ;;		 -> spin(120), STR_57(9), STR_56(12), D.lcd(480), 
 23517 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 23518 ;;		 -> V(192), 
 23519 ;; Return value:  Size  Location     Type
 23520 ;;                  2  [STACK] unsigned int 
 23521 ;; Registers used:
 23522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 23523 ;; Tracked objects:
 23524 ;;		On entry : 0/0
 23525 ;;		On exit  : 0/0
 23526 ;;		Unchanged: 0/0
 23527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23532 ;;Total ram usage:        0 bytes
 23533 ;; Hardware stack levels used:    1
 23534 ;; Hardware stack levels required when called:   15
 23535 ;; This function calls:
 23536 ;;		Nothing
 23537 ;; This function is called by:
 23538 ;;		_eaDogM_WriteString
 23539 ;;		_spinners
 23540 ;;		_calc_bsoc
 23541 ;;		_pad
 23542 ;;		_stoa
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text82
 23547  01B0D6                     __ptext82:
 23548                           	opt callstack 0
 23549  01B0D6                     _strlen:
 23550                           	opt callstack 0
 23551                           
 23552                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23553  01B0D6  52E6               	movf	postinc1,f,c
 23554  01B0D8  52E6               	movf	postinc1,f,c
 23555                           
 23556                           ;stkvar	_s @ sp[(-2)+-2]
 23557                           
 23558                           ;incstack = 0
 23559 ;; hardware stack exceeded
 23560  01B0DA  0EFC               	movlw	-4
 23561  01B0DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23562  01B0E2  0EFD               	movlw	-3
 23563  01B0E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23564                           
 23565                           ;stkvar	_a @ sp[(-2)+0]
 23566  01B0EA  0EFF               	movlw	-1
 23567  01B0EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23568  01B0F2  0EFE               	movlw	-2
 23569  01B0F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23570  01B0FA  D011               	goto	l8031
 23571  01B0FC                     l8029:
 23572                           
 23573                           ;stkvar	_s @ sp[(-2)+-2]
 23574  01B0FC  0EFC               	movlw	-4
 23575  01B0FE  50E3               	movf	plusw1,w,c
 23576  01B100  0F01               	addlw	1
 23577  01B102  6E01               	movwf	btemp^0,c
 23578  01B104  0EFC               	movlw	-4
 23579  01B106  0060  F007  FFE3   	movff	btemp,plusw1
 23580  01B10C  6A01               	clrf	btemp^0,c
 23581  01B10E  0EFD               	movlw	-3
 23582  01B110  50E3               	movf	plusw1,w,c
 23583  01B112  2001               	addwfc	btemp^0,w,c
 23584  01B114  6E01               	movwf	btemp^0,c
 23585  01B116  0EFD               	movlw	-3
 23586  01B118  0060  F007  FFE3   	movff	btemp,plusw1
 23587  01B11E                     l8031:
 23588                           
 23589                           ;stkvar	_s @ sp[(-2)+-2]
 23590  01B11E  0EFC               	movlw	-4
 23591  01B120  006F FF8F FFF6     	movff	plusw1,tblptrl
 23592  01B126  0EFD               	movlw	-3
 23593  01B128  006F FF8F FFF7     	movff	plusw1,tblptrh
 23594  01B12E  0E00               	movlw	low (__mediumconst shr (0+16))
 23595  01B130  6EF8               	movwf	tblptru,c
 23596  01B132  0E1F               	movlw	(high __ramtop+-1)
 23597  01B134  64F7               	cpfsgt	tblptrh,c
 23598  01B136  D003               	bra	u5647
 23599  01B138  0008               	tblrd		*
 23600  01B13A  50F5               	movf	tablat,w,c
 23601  01B13C  D007               	bra	u5640
 23602  01B13E                     u5647:
 23603  01B13E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 23604  01B144  006F FFDF FFEA     	movff	tblptrh,fsr0h
 23605  01B14A  50EF               	movf	indf0,w,c
 23606  01B14C                     u5640:
 23607  01B14C  0900               	iorlw	0
 23608  01B14E  A4D8               	btfss	status,2,c
 23609  01B150  D7D5               	goto	l8029
 23610                           
 23611                           ;stkvar	_a @ sp[(-2)+0]
 23612                           ;stkvar	_s @ sp[(-2)+-2]
 23613  01B152  0EFC               	movlw	-4
 23614  01B154  006F FF8C  F001    	movff	plusw1,btemp
 23615  01B15A  0EFD               	movlw	-3
 23616  01B15C  006F FF8C  F002    	movff	plusw1,btemp+1
 23617  01B162  0EFE               	movlw	-2
 23618  01B164  50E3               	movf	plusw1,w,c
 23619  01B166  5E01               	subwf	btemp^0,f,c
 23620  01B168  0EFF               	movlw	-1
 23621  01B16A  50E3               	movf	plusw1,w,c
 23622  01B16C  5A02               	subwfb	(btemp+1)^0,f,c
 23623                           
 23624                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23625  01B16E  52E5               	movf	postdec1,f,c
 23626  01B170  52E5               	movf	postdec1,f,c
 23627  01B172  52E5               	movf	postdec1,f,c
 23628  01B174  52E5               	movf	postdec1,f,c
 23629  01B176  0012               	return		;funcret
 23630  01B178                     __end_of_strlen:
 23631                           	opt callstack 0
 23632                           
 23633 ;; *************** function _fputs *****************
 23634 ;; Defined at:
 23635 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 23636 ;; Parameters:    Size  Location     Type
 23637 ;;  s               2  [STACK] PTR const unsigned char 
 23638 ;;		 -> dbuf(80), 
 23639 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23640 ;;		 -> f(6), NULL(0), 
 23641 ;; Auto vars:     Size  Location     Type
 23642 ;;  i               2  [STACK] int 
 23643 ;;  c               1  [STACK] unsigned char 
 23644 ;; Return value:  Size  Location     Type
 23645 ;;                  2  [STACK] int 
 23646 ;; Registers used:
 23647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23648 ;; Tracked objects:
 23649 ;;		On entry : 0/2
 23650 ;;		On exit  : 0/0
 23651 ;;		Unchanged: 0/0
 23652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23657 ;;Total ram usage:        0 bytes
 23658 ;; Hardware stack levels used:    1
 23659 ;; Hardware stack levels required when called:   18
 23660 ;; This function calls:
 23661 ;;		_fputc
 23662 ;; This function is called by:
 23663 ;;		_pad
 23664 ;; This function uses a reentrant model
 23665 ;;
 23666                           
 23667                           	psect	text83
 23668  01B178                     __ptext83:
 23669                           	opt callstack 0
 23670  01B178                     _fputs:
 23671                           	opt callstack 0
 23672                           
 23673                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23674  01B178  52E6               	movf	postinc1,f,c
 23675  01B17A  52E6               	movf	postinc1,f,c
 23676  01B17C  52E6               	movf	postinc1,f,c
 23677                           
 23678                           ;stkvar	_i @ sp[(-3)+0]
 23679                           
 23680                           ;incstack = 0
 23681 ;; hardware stack exceeded
 23682  01B17E  0EFD               	movlw	-3
 23683  01B180  6AE3               	clrf	plusw1,c
 23684  01B182  0EFE               	movlw	-2
 23685  01B184  6AE3               	clrf	plusw1,c
 23686  01B186  D01F               	goto	l12387
 23687  01B188                     l12383:
 23688                           
 23689                           ;stkvar	_fp @ sp[(-3)+-4]
 23690  01B188  0EF9               	movlw	-7
 23691  01B18A  006F FF8F FFE6     	movff	plusw1,postinc1
 23692  01B190  006F FF8F FFE6     	movff	plusw1,postinc1
 23693                           
 23694                           ;stkvar	_c @ sp[(-5)+2]
 23695  01B196  0EFD               	movlw	-3
 23696  01B198  50E3               	movf	plusw1,w,c
 23697  01B19A  6EE6               	movwf	postinc1,c
 23698  01B19C  0E00               	movlw	0
 23699  01B19E  6EE6               	movwf	postinc1,c
 23700  01B1A0  EC04  F0CF         	call	_fputc	;wreg free
 23701                           
 23702                           ;stkvar	_i @ sp[(-3)+0]
 23703  01B1A4  0EFD               	movlw	-3
 23704  01B1A6  50E3               	movf	plusw1,w,c
 23705  01B1A8  0F01               	addlw	1
 23706  01B1AA  6E01               	movwf	btemp^0,c
 23707  01B1AC  0EFD               	movlw	-3
 23708  01B1AE  0060  F007  FFE3   	movff	btemp,plusw1
 23709  01B1B4  6A01               	clrf	btemp^0,c
 23710  01B1B6  0EFE               	movlw	-2
 23711  01B1B8  50E3               	movf	plusw1,w,c
 23712  01B1BA  2001               	addwfc	btemp^0,w,c
 23713  01B1BC  6E01               	movwf	btemp^0,c
 23714  01B1BE  0EFE               	movlw	-2
 23715  01B1C0  0060  F007  FFE3   	movff	btemp,plusw1
 23716  01B1C6                     l12387:
 23717                           
 23718                           ;stkvar	_i @ sp[(-3)+0]
 23719  01B1C6  0EFD               	movlw	-3
 23720  01B1C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23721  01B1CE  0EFE               	movlw	-2
 23722  01B1D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 23723                           
 23724                           ;stkvar	_s @ sp[(-3)+-2]
 23725  01B1D6  0EFB               	movlw	-5
 23726  01B1D8  006F FF8C  F009    	movff	plusw1,btemp+8
 23727  01B1DE  0EFC               	movlw	-4
 23728  01B1E0  006F FF8C  F00A    	movff	plusw1,btemp+9
 23729  01B1E6  500B               	movf	(btemp+10)^0,w,c
 23730  01B1E8  2409               	addwf	(btemp+8)^0,w,c
 23731  01B1EA  6ED9               	movwf	fsr2l,c
 23732  01B1EC  500C               	movf	(btemp+11)^0,w,c
 23733  01B1EE  200A               	addwfc	(btemp+9)^0,w,c
 23734  01B1F0  6EDA               	movwf	fsr2h,c
 23735  01B1F2  50DF               	movf	indf2,w,c
 23736  01B1F4  6E0C               	movwf	(btemp+11)^0,c
 23737                           
 23738                           ;stkvar	_c @ sp[(-3)+2]
 23739  01B1F6  0EFF               	movlw	-1
 23740  01B1F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 23741  01B1FE  0EFF               	movlw	-1
 23742  01B200  50E3               	movf	plusw1,w,c
 23743  01B202  A4D8               	btfss	status,2,c
 23744  01B204  D7C1               	goto	l12383
 23745                           
 23746                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23747  01B206  0EF9               	movlw	249
 23748  01B208  26E1               	addwf	fsr1l,f,c
 23749  01B20A  0EFF               	movlw	255
 23750  01B20C  22E2               	addwfc	fsr1h,f,c
 23751  01B20E  0012               	return		;funcret
 23752  01B210                     __end_of_fputs:
 23753                           	opt callstack 0
 23754                           
 23755 ;; *************** function _fputc *****************
 23756 ;; Defined at:
 23757 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 23758 ;; Parameters:    Size  Location     Type
 23759 ;;  c               2  [STACK] int 
 23760 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23761 ;;		 -> f(6), NULL(0), 
 23762 ;; Auto vars:     Size  Location     Type
 23763 ;;		None
 23764 ;; Return value:  Size  Location     Type
 23765 ;;                  2  [STACK] int 
 23766 ;; Registers used:
 23767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 23768 ;; Tracked objects:
 23769 ;;		On entry : 0/0
 23770 ;;		On exit  : 0/0
 23771 ;;		Unchanged: 0/0
 23772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23777 ;;Total ram usage:        0 bytes
 23778 ;; Hardware stack levels used:    1
 23779 ;; Hardware stack levels required when called:   17
 23780 ;; This function calls:
 23781 ;;		_putch
 23782 ;; This function is called by:
 23783 ;;		_pad
 23784 ;;		_stoa
 23785 ;;		_vfpfcnvrt
 23786 ;;		_fputs
 23787 ;; This function uses a reentrant model
 23788 ;;
 23789                           
 23790                           	psect	text84
 23791  019E08                     __ptext84:
 23792                           	opt callstack 0
 23793  019E08                     _fputc:
 23794                           	opt callstack 0
 23795                           
 23796                           ;stkvar	_fp @ sp[(0)+-4]
 23797                           
 23798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23799                           ;incstack = 0
 23800 ;; hardware stack exceeded
 23801  019E08  0EFC               	movlw	-4
 23802  019E0A  006F FF8C  F001    	movff	plusw1,btemp
 23803  019E10  0EFD               	movlw	-3
 23804  019E12  50E3               	movf	plusw1,w,c
 23805  019E14  1001               	iorwf	btemp^0,w,c
 23806  019E16  B4D8               	btfsc	status,2,c
 23807  019E18  D009               	goto	u11190
 23808                           
 23809                           ;stkvar	_fp @ sp[(0)+-4]
 23810  019E1A  0EFC               	movlw	-4
 23811  019E1C  006F FF8C  F001    	movff	plusw1,btemp
 23812  019E22  0EFD               	movlw	-3
 23813  019E24  50E3               	movf	plusw1,w,c
 23814  019E26  1001               	iorwf	btemp^0,w,c
 23815  019E28  A4D8               	btfss	status,2,c
 23816  019E2A  D006               	goto	l12371
 23817  019E2C                     u11190:
 23818                           
 23819                           ;stkvar	_c @ sp[(0)+-2]
 23820  019E2C  0EFE               	movlw	-2
 23821  019E2E  50E3               	movf	plusw1,w,c
 23822  019E30  6EE6               	movwf	postinc1,c
 23823  019E32  EC78  F0E4         	call	_putch	;wreg free
 23824  019E36  D075               	goto	l3305
 23825  019E38                     l12371:
 23826                           
 23827                           ;stkvar	_fp @ sp[(0)+-4]
 23828  019E38  0EFC               	movlw	-4
 23829  019E3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23830  019E40  0EFD               	movlw	-3
 23831  019E42  006F FF8C  F00C    	movff	plusw1,btemp+11
 23832  019E48  0E04               	movlw	4
 23833  019E4A  240B               	addwf	(btemp+10)^0,w,c
 23834  019E4C  6ED9               	movwf	fsr2l,c
 23835  019E4E  0E00               	movlw	0
 23836  019E50  200C               	addwfc	(btemp+11)^0,w,c
 23837  019E52  6EDA               	movwf	fsr2h,c
 23838  019E54  50DE               	movf	postinc2,w,c
 23839  019E56  10DE               	iorwf	postinc2,w,c
 23840  019E58  B4D8               	btfsc	status,2,c
 23841  019E5A  D026               	goto	u11210
 23842                           
 23843                           ;stkvar	_fp @ sp[(0)+-4]
 23844  019E5C  0EFC               	movlw	-4
 23845  019E5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23846  019E64  0EFD               	movlw	-3
 23847  019E66  006F FF8C  F00C    	movff	plusw1,btemp+11
 23848  019E6C  0E04               	movlw	4
 23849  019E6E  240B               	addwf	(btemp+10)^0,w,c
 23850  019E70  6ED9               	movwf	fsr2l,c
 23851  019E72  0E00               	movlw	0
 23852  019E74  200C               	addwfc	(btemp+11)^0,w,c
 23853  019E76  6EDA               	movwf	fsr2h,c
 23854                           
 23855                           ;stkvar	_fp @ sp[(0)+-4]
 23856  019E78  0EFC               	movlw	-4
 23857  019E7A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23858  019E80  0EFD               	movlw	-3
 23859  019E82  006F FF8C  F00C    	movff	plusw1,btemp+11
 23860  019E88  0E02               	movlw	2
 23861  019E8A  240B               	addwf	(btemp+10)^0,w,c
 23862  019E8C  6EE9               	movwf	fsr0l,c
 23863  019E8E  0E00               	movlw	0
 23864  019E90  200C               	addwfc	(btemp+11)^0,w,c
 23865  019E92  6EEA               	movwf	fsr0h,c
 23866  019E94  50DE               	movf	postinc2,w,c
 23867  019E96  5CEE               	subwf	postinc0,w,c
 23868  019E98  50EE               	movf	postinc0,w,c
 23869  019E9A  0A80               	xorlw	128
 23870  019E9C  6E01               	movwf	btemp^0,c
 23871  019E9E  50DE               	movf	postinc2,w,c
 23872  019EA0  0A80               	xorlw	128
 23873  019EA2  5801               	subwfb	btemp^0,w,c
 23874  019EA4  B0D8               	btfsc	status,0,c
 23875  019EA6  D03D               	goto	l3305
 23876  019EA8                     u11210:
 23877                           
 23878                           ;stkvar	_c @ sp[(0)+-2]
 23879                           ;stkvar	_fp @ sp[(0)+-4]
 23880  019EA8  0EFC               	movlw	-4
 23881  019EAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23882  019EB0  0EFD               	movlw	-3
 23883  019EB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23884  019EB8  0E02               	movlw	2
 23885  019EBA  240B               	addwf	(btemp+10)^0,w,c
 23886  019EBC  6ED9               	movwf	fsr2l,c
 23887  019EBE  0E00               	movlw	0
 23888  019EC0  200C               	addwfc	(btemp+11)^0,w,c
 23889  019EC2  6EDA               	movwf	fsr2h,c
 23890  019EC4  006F FF78  F00B    	movff	postinc2,btemp+10
 23891  019ECA  006F FF74  F00C    	movff	postdec2,btemp+11
 23892                           
 23893                           ;stkvar	_fp @ sp[(0)+-4]
 23894  019ED0  0EFC               	movlw	-4
 23895  019ED2  006F FF8F FFD9     	movff	plusw1,fsr2l
 23896  019ED8  0EFD               	movlw	-3
 23897  019EDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 23898  019EE0  006F FF78  F009    	movff	postinc2,btemp+8
 23899  019EE6  006F FF74  F00A    	movff	postdec2,btemp+9
 23900  019EEC  500B               	movf	(btemp+10)^0,w,c
 23901  019EEE  2409               	addwf	(btemp+8)^0,w,c
 23902  019EF0  6ED9               	movwf	fsr2l,c
 23903  019EF2  500C               	movf	(btemp+11)^0,w,c
 23904  019EF4  200A               	addwfc	(btemp+9)^0,w,c
 23905  019EF6  6EDA               	movwf	fsr2h,c
 23906  019EF8  0EFE               	movlw	-2
 23907  019EFA  006F FF8F FFDF     	movff	plusw1,indf2
 23908                           
 23909                           ;stkvar	_fp @ sp[(0)+-4]
 23910  019F00  0EFC               	movlw	-4
 23911  019F02  006F FF8C  F00B    	movff	plusw1,btemp+10
 23912  019F08  0EFD               	movlw	-3
 23913  019F0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23914  019F10  0E02               	movlw	2
 23915  019F12  240B               	addwf	(btemp+10)^0,w,c
 23916  019F14  6ED9               	movwf	fsr2l,c
 23917  019F16  0E00               	movlw	0
 23918  019F18  200C               	addwfc	(btemp+11)^0,w,c
 23919  019F1A  6EDA               	movwf	fsr2h,c
 23920  019F1C  2ADE               	incf	postinc2,f,c
 23921  019F1E  0E00               	movlw	0
 23922  019F20  22DD               	addwfc	postdec2,f,c
 23923  019F22                     l3305:
 23924                           
 23925                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23926  019F22  52E5               	movf	postdec1,f,c
 23927  019F24  52E5               	movf	postdec1,f,c
 23928  019F26  52E5               	movf	postdec1,f,c
 23929  019F28  52E5               	movf	postdec1,f,c
 23930  019F2A  0012               	return		;funcret
 23931  019F2C                     __end_of_fputc:
 23932                           	opt callstack 0
 23933                           
 23934 ;; *************** function _putch *****************
 23935 ;; Defined at:
 23936 ;;		line 421 in file "eadog.c"
 23937 ;; Parameters:    Size  Location     Type
 23938 ;;  c               1  [STACK] unsigned char 
 23939 ;; Auto vars:     Size  Location     Type
 23940 ;;		None
 23941 ;; Return value:  Size  Location     Type
 23942 ;;                  1  [STACK] void 
 23943 ;; Registers used:
 23944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23945 ;; Tracked objects:
 23946 ;;		On entry : 0/0
 23947 ;;		On exit  : 0/0
 23948 ;;		Unchanged: 0/0
 23949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;Total ram usage:        0 bytes
 23955 ;; Hardware stack levels used:    1
 23956 ;; Hardware stack levels required when called:   16
 23957 ;; This function calls:
 23958 ;;		_ringBufS_put_dma
 23959 ;; This function is called by:
 23960 ;;		_fputc
 23961 ;; This function uses a reentrant model
 23962 ;;
 23963                           
 23964                           	psect	text85
 23965  01C8F0                     __ptext85:
 23966                           	opt callstack 0
 23967  01C8F0                     _putch:
 23968                           	opt callstack 0
 23969                           
 23970                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 23971                           ;stkvar	_c @ sp[(0)+-1]
 23972                           
 23973                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23974                           ;incstack = 0
 23975 ;; hardware stack exceeded
 23976  01C8F0  0EFF               	movlw	-1
 23977  01C8F2  50E3               	movf	plusw1,w,c
 23978  01C8F4  6EE6               	movwf	postinc1,c
 23979  01C8F6  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 23980  01C8FC  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 23981  01C902  EC6F  F0D7         	call	_ringBufS_put_dma	;wreg free
 23982                           
 23983                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 23984  01C906  52E5               	movf	postdec1,f,c
 23985  01C908  0012               	return		;funcret
 23986  01C90A                     __end_of_putch:
 23987                           	opt callstack 0
 23988                           
 23989 ;; *************** function _ringBufS_put_dma *****************
 23990 ;; Defined at:
 23991 ;;		line 67 in file "ringbufs.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;  _this           2  [STACK] PTR struct ringBufS_t
 23994 ;;		 -> ring_buf1(67), 
 23995 ;;  c               1  [STACK] const unsigned char 
 23996 ;; Auto vars:     Size  Location     Type
 23997 ;;		None
 23998 ;; Return value:  Size  Location     Type
 23999 ;;                  1  [STACK] void 
 24000 ;; Registers used:
 24001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24002 ;; Tracked objects:
 24003 ;;		On entry : 0/0
 24004 ;;		On exit  : 0/0
 24005 ;;		Unchanged: 0/0
 24006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24011 ;;Total ram usage:        0 bytes
 24012 ;; Hardware stack levels used:    1
 24013 ;; Hardware stack levels required when called:   15
 24014 ;; This function calls:
 24015 ;;		Nothing
 24016 ;; This function is called by:
 24017 ;;		_putch
 24018 ;; This function uses a reentrant model
 24019 ;;
 24020                           
 24021                           	psect	text86
 24022  01AEDE                     __ptext86:
 24023                           	opt callstack 0
 24024  01AEDE                     _ringBufS_put_dma:
 24025                           	opt callstack 0
 24026                           
 24027                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 24028                           ;stkvar	__this @ sp[(0)+-2]
 24029                           
 24030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24031                           ;incstack = 0
 24032 ;; hardware stack exceeded
 24033  01AEDE  0EFE               	movlw	-2
 24034  01AEE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24035  01AEE6  0EFF               	movlw	-1
 24036  01AEE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24037  01AEEE  0E42               	movlw	66
 24038  01AEF0  240B               	addwf	(btemp+10)^0,w,c
 24039  01AEF2  6ED9               	movwf	fsr2l,c
 24040  01AEF4  0E00               	movlw	0
 24041  01AEF6  200C               	addwfc	(btemp+11)^0,w,c
 24042  01AEF8  6EDA               	movwf	fsr2h,c
 24043  01AEFA  0E40               	movlw	64
 24044  01AEFC  60DF               	cpfslt	indf2,c
 24045  01AEFE  D040               	goto	l1610
 24046                           
 24047                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 24048                           ;stkvar	_c @ sp[(0)+-3]
 24049                           ;stkvar	__this @ sp[(0)+-2]
 24050  01AF00  0EFE               	movlw	-2
 24051  01AF02  006F FF8C  F00B    	movff	plusw1,btemp+10
 24052  01AF08  0EFF               	movlw	-1
 24053  01AF0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24054  01AF10  0E40               	movlw	64
 24055  01AF12  240B               	addwf	(btemp+10)^0,w,c
 24056  01AF14  6ED9               	movwf	fsr2l,c
 24057  01AF16  0E00               	movlw	0
 24058  01AF18  200C               	addwfc	(btemp+11)^0,w,c
 24059  01AF1A  6EDA               	movwf	fsr2h,c
 24060  01AF1C  50DF               	movf	indf2,w,c
 24061  01AF1E  6E0C               	movwf	(btemp+11)^0,c
 24062                           
 24063                           ;stkvar	__this @ sp[(0)+-2]
 24064  01AF20  0EFE               	movlw	-2
 24065  01AF22  006F FF8C  F009    	movff	plusw1,btemp+8
 24066  01AF28  0EFF               	movlw	-1
 24067  01AF2A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24068  01AF30  500C               	movf	(btemp+11)^0,w,c
 24069  01AF32  2409               	addwf	(btemp+8)^0,w,c
 24070  01AF34  6ED9               	movwf	fsr2l,c
 24071  01AF36  0E00               	movlw	0
 24072  01AF38  200A               	addwfc	(btemp+9)^0,w,c
 24073  01AF3A  6EDA               	movwf	fsr2h,c
 24074  01AF3C  0EFD               	movlw	-3
 24075  01AF3E  006F FF8F FFDF     	movff	plusw1,indf2
 24076                           
 24077                           ;ringbufs.c: 71:   ++_this->head;
 24078                           ;stkvar	__this @ sp[(0)+-2]
 24079  01AF44  0EFE               	movlw	-2
 24080  01AF46  006F FF8C  F00B    	movff	plusw1,btemp+10
 24081  01AF4C  0EFF               	movlw	-1
 24082  01AF4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24083  01AF54  0E40               	movlw	64
 24084  01AF56  240B               	addwf	(btemp+10)^0,w,c
 24085  01AF58  6ED9               	movwf	fsr2l,c
 24086  01AF5A  0E00               	movlw	0
 24087  01AF5C  200C               	addwfc	(btemp+11)^0,w,c
 24088  01AF5E  6EDA               	movwf	fsr2h,c
 24089  01AF60  2ADF               	incf	indf2,f,c
 24090                           
 24091                           ;ringbufs.c: 72:   ++_this->count;
 24092                           ;stkvar	__this @ sp[(0)+-2]
 24093  01AF62  0EFE               	movlw	-2
 24094  01AF64  006F FF8C  F00B    	movff	plusw1,btemp+10
 24095  01AF6A  0EFF               	movlw	-1
 24096  01AF6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24097  01AF72  0E42               	movlw	66
 24098  01AF74  240B               	addwf	(btemp+10)^0,w,c
 24099  01AF76  6ED9               	movwf	fsr2l,c
 24100  01AF78  0E00               	movlw	0
 24101  01AF7A  200C               	addwfc	(btemp+11)^0,w,c
 24102  01AF7C  6EDA               	movwf	fsr2h,c
 24103  01AF7E  2ADF               	incf	indf2,f,c
 24104  01AF80                     l1610:
 24105                           
 24106                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 24107  01AF80  52E5               	movf	postdec1,f,c
 24108  01AF82  52E5               	movf	postdec1,f,c
 24109  01AF84  52E5               	movf	postdec1,f,c
 24110  01AF86  0012               	return		;funcret
 24111  01AF88                     __end_of_ringBufS_put_dma:
 24112                           	opt callstack 0
 24113                           
 24114 ;; *************** function _atoi *****************
 24115 ;; Defined at:
 24116 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 24117 ;; Parameters:    Size  Location     Type
 24118 ;;  s               2  [STACK] PTR const unsigned char 
 24119 ;;		 -> STR_75(127), STR_73(3), STR_72(3), STR_71(19), 
 24120 ;;		 -> STR_70(19), STR_69(19), STR_68(19), STR_67(19), 
 24121 ;;		 -> STR_66(19), STR_65(24), STR_64(15), STR_63(15), 
 24122 ;;		 -> STR_62(15), STR_61(10), STR_60(10), STR_59(19), 
 24123 ;;		 -> STR_58(19), STR_55(3), STR_54(3), STR_53(21), 
 24124 ;;		 -> STR_52(21), STR_51(21), STR_50(21), STR_49(21), 
 24125 ;;		 -> STR_48(21), STR_47(20), STR_46(20), STR_45(21), 
 24126 ;;		 -> STR_44(21), STR_43(21), STR_42(22), STR_41(22), 
 24127 ;;		 -> STR_40(22), STR_39(23), STR_38(23), STR_37(23), 
 24128 ;;		 -> STR_36(29), STR_35(23), STR_34(23), STR_33(22), 
 24129 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 24130 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 24131 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(17), 
 24132 ;;		 -> STR_20(16), STR_19(16), STR_18(26), STR_17(26), 
 24133 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 24134 ;;		 -> STR_12(21), STR_11(22), STR_10(22), STR_9(26), 
 24135 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 24136 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 24137 ;; Auto vars:     Size  Location     Type
 24138 ;;  n               2  [STACK] int 
 24139 ;;  neg             2  [STACK] int 
 24140 ;; Return value:  Size  Location     Type
 24141 ;;                  2  [STACK] int 
 24142 ;; Registers used:
 24143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 24144 ;; Tracked objects:
 24145 ;;		On entry : 0/0
 24146 ;;		On exit  : 0/0
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;Total ram usage:        0 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; Hardware stack levels required when called:   16
 24156 ;; This function calls:
 24157 ;;		_isdigit
 24158 ;;		_isspace
 24159 ;; This function is called by:
 24160 ;;		_vfpfcnvrt
 24161 ;; This function uses a reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text87
 24165  017C56                     __ptext87:
 24166                           	opt callstack 0
 24167  017C56                     _atoi:
 24168                           	opt callstack 0
 24169                           
 24170                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24171  017C56  0E09               	movlw	9
 24172  017C58  26E1               	addwf	fsr1l,f,c
 24173  017C5A  0E00               	movlw	0
 24174  017C5C  22E2               	addwfc	fsr1h,f,c
 24175                           
 24176                           ;stkvar	_n @ sp[(-9)+5]
 24177                           
 24178                           ;incstack = 0
 24179 ;; hardware stack exceeded
 24180  017C5E  0EFC               	movlw	-4
 24181  017C60  6AE3               	clrf	plusw1,c
 24182  017C62  0EFD               	movlw	-3
 24183  017C64  6AE3               	clrf	plusw1,c
 24184                           
 24185                           ;stkvar	_neg @ sp[(-9)+7]
 24186  017C66  0EFE               	movlw	-2
 24187  017C68  6AE3               	clrf	plusw1,c
 24188  017C6A  0EFF               	movlw	-1
 24189  017C6C  6AE3               	clrf	plusw1,c
 24190  017C6E  D011               	goto	l9655
 24191  017C70                     l9653:
 24192                           
 24193                           ;stkvar	_s @ sp[(-9)+-2]
 24194  017C70  0EF5               	movlw	-11
 24195  017C72  50E3               	movf	plusw1,w,c
 24196  017C74  0F01               	addlw	1
 24197  017C76  6E01               	movwf	btemp^0,c
 24198  017C78  0EF5               	movlw	-11
 24199  017C7A  0060  F007  FFE3   	movff	btemp,plusw1
 24200  017C80  6A01               	clrf	btemp^0,c
 24201  017C82  0EF6               	movlw	-10
 24202  017C84  50E3               	movf	plusw1,w,c
 24203  017C86  2001               	addwfc	btemp^0,w,c
 24204  017C88  6E01               	movwf	btemp^0,c
 24205  017C8A  0EF6               	movlw	-10
 24206  017C8C  0060  F007  FFE3   	movff	btemp,plusw1
 24207  017C92                     l9655:
 24208                           
 24209                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24210  017C92  0EFB               	movlw	-5
 24211  017C94  6AE3               	clrf	plusw1,c
 24212  017C96  2AE3               	incf	plusw1,f,c
 24213                           
 24214                           ;stkvar	_s @ sp[(-9)+-2]
 24215  017C98  50E1               	movf	fsr1l,w,c
 24216  017C9A  0FF5               	addlw	-11
 24217  017C9C  6ED9               	movwf	fsr2l,c
 24218  017C9E  50E2               	movf	fsr1h,w,c
 24219  017CA0  6EDA               	movwf	fsr2h,c
 24220  017CA2  0EFF               	movlw	255
 24221  017CA4  22DA               	addwfc	fsr2h,f,c
 24222  017CA6  006F FF7B FFF6     	movff	postinc2,tblptrl
 24223  017CAC  006F FF77 FFF7     	movff	postdec2,tblptrh
 24224  017CB2                     	if	0	;tblptru may be non-zero
 24225  017CB2                     	endif
 24226  017CB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24227  017CB2  0E00               	movlw	low (__mediumconst shr (0+16))
 24228  017CB4  6EF8               	movwf	tblptru,c
 24229  017CB6                     	endif
 24230  017CB6  0008               	tblrd		*
 24231  017CB8  50F5               	movf	tablat,w,c
 24232  017CBA  0A20               	xorlw	32
 24233  017CBC  B4D8               	btfsc	status,2,c
 24234  017CBE  D023               	goto	l9663
 24235  017CC0  0EF7               	movlw	247
 24236  017CC2  6E0B               	movwf	(btemp+10)^0,c
 24237  017CC4  0EFF               	movlw	255
 24238  017CC6  6E0C               	movwf	(btemp+11)^0,c
 24239                           
 24240                           ;stkvar	_s @ sp[(-9)+-2]
 24241  017CC8  50E1               	movf	fsr1l,w,c
 24242  017CCA  0FF5               	addlw	-11
 24243  017CCC  6ED9               	movwf	fsr2l,c
 24244  017CCE  50E2               	movf	fsr1h,w,c
 24245  017CD0  6EDA               	movwf	fsr2h,c
 24246  017CD2  0EFF               	movlw	255
 24247  017CD4  22DA               	addwfc	fsr2h,f,c
 24248  017CD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 24249  017CDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 24250  017CE2                     	if	0	;tblptru may be non-zero
 24251  017CE2                     	endif
 24252  017CE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24253  017CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 24254  017CE4  6EF8               	movwf	tblptru,c
 24255  017CE6                     	endif
 24256  017CE6  0008               	tblrd		*
 24257  017CE8  50F5               	movf	tablat,w,c
 24258  017CEA  6E09               	movwf	(btemp+8)^0,c
 24259  017CEC  6A0A               	clrf	(btemp+9)^0,c
 24260  017CEE  500B               	movf	(btemp+10)^0,w,c
 24261  017CF0  2609               	addwf	(btemp+8)^0,f,c
 24262  017CF2  500C               	movf	(btemp+11)^0,w,c
 24263  017CF4  220A               	addwfc	(btemp+9)^0,f,c
 24264  017CF6  500A               	movf	(btemp+9)^0,w,c
 24265  017CF8  E104               	bnz	u8760
 24266  017CFA  0E05               	movlw	5
 24267  017CFC  5C09               	subwf	(btemp+8)^0,w,c
 24268  017CFE  A0D8               	btfss	status,0,c
 24269  017D00  D002               	goto	l9663
 24270  017D02                     u8760:
 24271                           
 24272                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24273  017D02  0EFB               	movlw	-5
 24274  017D04  6AE3               	clrf	plusw1,c
 24275  017D06                     l9663:
 24276                           
 24277                           ;stkvar	_atoi$6414 @ sp[(-9)+4]
 24278  017D06  0EFB               	movlw	-5
 24279  017D08  50E3               	movf	plusw1,w,c
 24280  017D0A  6E0B               	movwf	(btemp+10)^0,c
 24281  017D0C  6A0C               	clrf	(btemp+11)^0,c
 24282                           
 24283                           ;stkvar	_atoi$6413 @ sp[(-9)+2]
 24284  017D0E  0EF9               	movlw	-7
 24285  017D10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24286  017D16  0EFA               	movlw	-6
 24287  017D18  0060  F033  FFE3   	movff	btemp+11,plusw1
 24288                           
 24289                           ;stkvar	_atoi$6413 @ sp[(-9)+2]
 24290  017D1E  0EF9               	movlw	-7
 24291  017D20  006F FF8C  F001    	movff	plusw1,btemp
 24292  017D26  0EFA               	movlw	-6
 24293  017D28  50E3               	movf	plusw1,w,c
 24294  017D2A  1001               	iorwf	btemp^0,w,c
 24295  017D2C  B4D8               	btfsc	status,2,c
 24296  017D2E  D01F               	goto	l9673
 24297  017D30  D79F               	goto	l9653
 24298  017D32                     l9669:
 24299  017D32  0E01               	movlw	1
 24300  017D34  6E0B               	movwf	(btemp+10)^0,c
 24301  017D36  0E00               	movlw	0
 24302  017D38  6E0C               	movwf	(btemp+11)^0,c
 24303                           
 24304                           ;stkvar	_neg @ sp[(-9)+7]
 24305  017D3A  0EFE               	movlw	-2
 24306  017D3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24307  017D42  0EFF               	movlw	-1
 24308  017D44  0060  F033  FFE3   	movff	btemp+11,plusw1
 24309  017D4A                     l9671:
 24310                           
 24311                           ;stkvar	_s @ sp[(-9)+-2]
 24312  017D4A  0EF5               	movlw	-11
 24313  017D4C  50E3               	movf	plusw1,w,c
 24314  017D4E  0F01               	addlw	1
 24315  017D50  6E01               	movwf	btemp^0,c
 24316  017D52  0EF5               	movlw	-11
 24317  017D54  0060  F007  FFE3   	movff	btemp,plusw1
 24318  017D5A  6A01               	clrf	btemp^0,c
 24319  017D5C  0EF6               	movlw	-10
 24320  017D5E  50E3               	movf	plusw1,w,c
 24321  017D60  2001               	addwfc	btemp^0,w,c
 24322  017D62  6E01               	movwf	btemp^0,c
 24323  017D64  0EF6               	movlw	-10
 24324  017D66  0060  F007  FFE3   	movff	btemp,plusw1
 24325  017D6C  D053               	goto	l9679
 24326  017D6E                     l9673:
 24327                           
 24328                           ;stkvar	_s @ sp[(-9)+-2]
 24329  017D6E  50E1               	movf	fsr1l,w,c
 24330  017D70  0FF5               	addlw	-11
 24331  017D72  6ED9               	movwf	fsr2l,c
 24332  017D74  50E2               	movf	fsr1h,w,c
 24333  017D76  6EDA               	movwf	fsr2h,c
 24334  017D78  0EFF               	movlw	255
 24335  017D7A  22DA               	addwfc	fsr2h,f,c
 24336  017D7C  006F FF7B FFF6     	movff	postinc2,tblptrl
 24337  017D82  006F FF77 FFF7     	movff	postdec2,tblptrh
 24338  017D88                     	if	0	;tblptru may be non-zero
 24339  017D88                     	endif
 24340  017D88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24341  017D88  0E00               	movlw	low (__mediumconst shr (0+16))
 24342  017D8A  6EF8               	movwf	tblptru,c
 24343  017D8C                     	endif
 24344  017D8C  0008               	tblrd		*
 24345  017D8E  50F5               	movf	tablat,w,c
 24346  017D90  6E0B               	movwf	(btemp+10)^0,c
 24347  017D92  6A0C               	clrf	(btemp+11)^0,c
 24348                           
 24349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24350                           ; Switch size 1, requested type "simple"
 24351                           ; Number of cases is 1, Range of values is 0 to 0
 24352                           ; switch strategies available:
 24353                           ; Name         Instructions Cycles
 24354                           ; simple_byte            4     3 (average)
 24355                           ;	Chosen strategy is simple_byte
 24356  017D94  500C               	movf	(btemp+11)^0,w,c
 24357  017D96  0A00               	xorlw	0	; case 0
 24358  017D98  A4D8               	btfss	status,2,c
 24359  017D9A  D03C               	goto	l9679
 24360                           
 24361                           ; Switch size 1, requested type "simple"
 24362                           ; Number of cases is 2, Range of values is 43 to 45
 24363                           ; switch strategies available:
 24364                           ; Name         Instructions Cycles
 24365                           ; simple_byte            7     4 (average)
 24366                           ;	Chosen strategy is simple_byte
 24367  017D9C  500B               	movf	(btemp+10)^0,w,c
 24368  017D9E  0A2B               	xorlw	43	; case 43
 24369  017DA0  B4D8               	btfsc	status,2,c
 24370  017DA2  D7D3               	goto	l9671
 24371  017DA4  0A06               	xorlw	6	; case 45
 24372  017DA6  B4D8               	btfsc	status,2,c
 24373  017DA8  D7C4               	goto	l9669
 24374  017DAA  D034               	goto	l9679
 24375  017DAC                     l9675:
 24376                           
 24377                           ;stkvar	_n @ sp[(-9)+5]
 24378  017DAC  0EFC               	movlw	-4
 24379  017DAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24380  017DB4  0EFD               	movlw	-3
 24381  017DB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24382  017DBC  0E0A               	movlw	10
 24383  017DBE  020B               	mulwf	(btemp+10)^0,c
 24384  017DC0  006F FFCC  F009    	movff	prodl,btemp+8
 24385  017DC6  006F FFD0  F00A    	movff	prodh,btemp+9
 24386  017DCC  020C               	mulwf	(btemp+11)^0,c
 24387  017DCE  50F3               	movf	prodl,w,c
 24388  017DD0  260A               	addwf	(btemp+9)^0,f,c
 24389                           
 24390                           ;stkvar	_s @ sp[(-9)+-2]
 24391  017DD2  50E1               	movf	fsr1l,w,c
 24392  017DD4  0FF5               	addlw	-11
 24393  017DD6  6ED9               	movwf	fsr2l,c
 24394  017DD8  50E2               	movf	fsr1h,w,c
 24395  017DDA  6EDA               	movwf	fsr2h,c
 24396  017DDC  0EFF               	movlw	255
 24397  017DDE  22DA               	addwfc	fsr2h,f,c
 24398  017DE0  006F FF7B FFF6     	movff	postinc2,tblptrl
 24399  017DE6  006F FF77 FFF7     	movff	postdec2,tblptrh
 24400  017DEC                     	if	0	;tblptru may be non-zero
 24401  017DEC                     	endif
 24402  017DEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24403  017DEC  0E00               	movlw	low (__mediumconst shr (0+16))
 24404  017DEE  6EF8               	movwf	tblptru,c
 24405  017DF0                     	endif
 24406  017DF0  0008               	tblrd		*
 24407  017DF2  50F5               	movf	tablat,w,c
 24408  017DF4  5E09               	subwf	(btemp+8)^0,f,c
 24409  017DF6  0E00               	movlw	0
 24410  017DF8  5A0A               	subwfb	(btemp+9)^0,f,c
 24411  017DFA  0E30               	movlw	48
 24412  017DFC  2609               	addwf	(btemp+8)^0,f,c
 24413  017DFE  0E00               	movlw	0
 24414  017E00  220A               	addwfc	(btemp+9)^0,f,c
 24415                           
 24416                           ;stkvar	_n @ sp[(-9)+5]
 24417  017E02  0EFC               	movlw	-4
 24418  017E04  0060  F027  FFE3   	movff	btemp+8,plusw1
 24419  017E0A  0EFD               	movlw	-3
 24420  017E0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24421  017E12  D79B               	goto	l9671
 24422  017E14                     l9679:
 24423  017E14  0ED0               	movlw	208
 24424  017E16  6E0B               	movwf	(btemp+10)^0,c
 24425  017E18  0EFF               	movlw	255
 24426  017E1A  6E0C               	movwf	(btemp+11)^0,c
 24427                           
 24428                           ;stkvar	_s @ sp[(-9)+-2]
 24429  017E1C  50E1               	movf	fsr1l,w,c
 24430  017E1E  0FF5               	addlw	-11
 24431  017E20  6ED9               	movwf	fsr2l,c
 24432  017E22  50E2               	movf	fsr1h,w,c
 24433  017E24  6EDA               	movwf	fsr2h,c
 24434  017E26  0EFF               	movlw	255
 24435  017E28  22DA               	addwfc	fsr2h,f,c
 24436  017E2A  006F FF7B FFF6     	movff	postinc2,tblptrl
 24437  017E30  006F FF77 FFF7     	movff	postdec2,tblptrh
 24438  017E36                     	if	0	;tblptru may be non-zero
 24439  017E36                     	endif
 24440  017E36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24441  017E36  0E00               	movlw	low (__mediumconst shr (0+16))
 24442  017E38  6EF8               	movwf	tblptru,c
 24443  017E3A                     	endif
 24444  017E3A  0008               	tblrd		*
 24445  017E3C  50F5               	movf	tablat,w,c
 24446  017E3E  6E09               	movwf	(btemp+8)^0,c
 24447  017E40  6A0A               	clrf	(btemp+9)^0,c
 24448  017E42  500B               	movf	(btemp+10)^0,w,c
 24449  017E44  2609               	addwf	(btemp+8)^0,f,c
 24450  017E46  500C               	movf	(btemp+11)^0,w,c
 24451  017E48  220A               	addwfc	(btemp+9)^0,f,c
 24452  017E4A  500A               	movf	(btemp+9)^0,w,c
 24453  017E4C  E106               	bnz	u8780
 24454  017E4E  0E0A               	movlw	10
 24455  017E50  5C09               	subwf	(btemp+8)^0,w,c
 24456  017E52  B0D8               	btfsc	status,0,c
 24457  017E54  D002               	goto	u8780
 24458  017E56  0E01               	movlw	1
 24459  017E58  D001               	goto	u8790
 24460  017E5A                     u8780:
 24461  017E5A  0E00               	movlw	0
 24462  017E5C                     u8790:
 24463  017E5C  6E0B               	movwf	(btemp+10)^0,c
 24464  017E5E  6A0C               	clrf	(btemp+11)^0,c
 24465                           
 24466                           ;stkvar	_atoi$6415 @ sp[(-9)+0]
 24467  017E60  0EF7               	movlw	-9
 24468  017E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24469  017E68  0EF8               	movlw	-8
 24470  017E6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24471                           
 24472                           ;stkvar	_atoi$6415 @ sp[(-9)+0]
 24473  017E70  0EF7               	movlw	-9
 24474  017E72  006F FF8C  F001    	movff	plusw1,btemp
 24475  017E78  0EF8               	movlw	-8
 24476  017E7A  50E3               	movf	plusw1,w,c
 24477  017E7C  1001               	iorwf	btemp^0,w,c
 24478  017E7E  A4D8               	btfss	status,2,c
 24479  017E80  D795               	goto	l9675
 24480                           
 24481                           ;stkvar	_neg @ sp[(-9)+7]
 24482  017E82  0EFE               	movlw	-2
 24483  017E84  006F FF8C  F001    	movff	plusw1,btemp
 24484  017E8A  0EFF               	movlw	-1
 24485  017E8C  50E3               	movf	plusw1,w,c
 24486  017E8E  1001               	iorwf	btemp^0,w,c
 24487  017E90  A4D8               	btfss	status,2,c
 24488  017E92  D00E               	goto	l9689
 24489                           
 24490                           ;stkvar	_n @ sp[(-9)+5]
 24491  017E94  0EFC               	movlw	-4
 24492  017E96  006F FF8C  F001    	movff	plusw1,btemp
 24493  017E9C  1E01               	comf	btemp^0,f,c
 24494  017E9E  0EFD               	movlw	-3
 24495  017EA0  006F FF8C  F002    	movff	plusw1,btemp+1
 24496  017EA6  1E02               	comf	(btemp+1)^0,f,c
 24497  017EA8  2A01               	incf	btemp^0,f,c
 24498  017EAA  B4D8               	btfsc	status,2,c
 24499  017EAC  2A02               	incf	(btemp+1)^0,f,c
 24500  017EAE  D008               	goto	l3236
 24501  017EB0                     l9689:
 24502                           
 24503                           ;stkvar	_n @ sp[(-9)+5]
 24504  017EB0  0EFC               	movlw	-4
 24505  017EB2  006F FF8C  F001    	movff	plusw1,btemp
 24506  017EB8  0EFD               	movlw	-3
 24507  017EBA  006F FF8C  F002    	movff	plusw1,btemp+1
 24508  017EC0                     l3236:
 24509                           
 24510                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24511  017EC0  0EF5               	movlw	245
 24512  017EC2  26E1               	addwf	fsr1l,f,c
 24513  017EC4  0EFF               	movlw	255
 24514  017EC6  22E2               	addwfc	fsr1h,f,c
 24515  017EC8  0012               	return		;funcret
 24516  017ECA                     __end_of_atoi:
 24517                           	opt callstack 0
 24518                           
 24519 ;; *************** function _isspace *****************
 24520 ;; Defined at:
 24521 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 24522 ;; Parameters:    Size  Location     Type
 24523 ;;  c               2  [STACK] int 
 24524 ;; Auto vars:     Size  Location     Type
 24525 ;;		None
 24526 ;; Return value:  Size  Location     Type
 24527 ;;                  2  [STACK] int 
 24528 ;; Registers used:
 24529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24530 ;; Tracked objects:
 24531 ;;		On entry : 0/0
 24532 ;;		On exit  : 0/0
 24533 ;;		Unchanged: 0/0
 24534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24539 ;;Total ram usage:        0 bytes
 24540 ;; Hardware stack levels used:    1
 24541 ;; Hardware stack levels required when called:   15
 24542 ;; This function calls:
 24543 ;;		Nothing
 24544 ;; This function is called by:
 24545 ;;		_atoi
 24546 ;; This function uses a reentrant model
 24547 ;;
 24548                           
 24549                           	psect	text88
 24550  01BBC8                     __ptext88:
 24551                           	opt callstack 0
 24552  01BBC8                     _isspace:
 24553                           	opt callstack 0
 24554                           
 24555                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24556  01BBC8  52E6               	movf	postinc1,f,c
 24557                           
 24558                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24559                           
 24560                           ;incstack = 0
 24561 ;; hardware stack exceeded
 24562  01BBCA  0EFF               	movlw	-1
 24563  01BBCC  6AE3               	clrf	plusw1,c
 24564  01BBCE  2AE3               	incf	plusw1,f,c
 24565                           
 24566                           ;stkvar	_c @ sp[(-1)+-2]
 24567  01BBD0  0EFD               	movlw	-3
 24568  01BBD2  006F FF8C  F001    	movff	plusw1,btemp
 24569  01BBD8  0E20               	movlw	32
 24570  01BBDA  1801               	xorwf	btemp^0,w,c
 24571  01BBDC  E104               	bnz	u7650
 24572  01BBDE  0EFE               	movlw	-2
 24573  01BBE0  50E3               	movf	plusw1,w,c
 24574  01BBE2  B4D8               	btfsc	status,2,c
 24575  01BBE4  D012               	goto	l9073
 24576  01BBE6                     u7650:
 24577                           
 24578                           ;stkvar	_c @ sp[(-1)+-2]
 24579  01BBE6  0EFD               	movlw	-3
 24580  01BBE8  50E3               	movf	plusw1,w,c
 24581  01BBEA  0FF7               	addlw	247
 24582  01BBEC  6E0B               	movwf	(btemp+10)^0,c
 24583  01BBEE  0EFE               	movlw	-2
 24584  01BBF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 24585  01BBF6  0EFF               	movlw	255
 24586  01BBF8  220C               	addwfc	(btemp+11)^0,f,c
 24587  01BBFA  500C               	movf	(btemp+11)^0,w,c
 24588  01BBFC  E104               	bnz	u7660
 24589  01BBFE  0E05               	movlw	5
 24590  01BC00  5C0B               	subwf	(btemp+10)^0,w,c
 24591  01BC02  A0D8               	btfss	status,0,c
 24592  01BC04  D002               	goto	l9073
 24593  01BC06                     u7660:
 24594                           
 24595                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24596  01BC06  0EFF               	movlw	-1
 24597  01BC08  6AE3               	clrf	plusw1,c
 24598  01BC0A                     l9073:
 24599                           
 24600                           ;stkvar	_isspace$6464 @ sp[(-1)+0]
 24601  01BC0A  0EFF               	movlw	-1
 24602  01BC0C  50E3               	movf	plusw1,w,c
 24603  01BC0E  6E01               	movwf	btemp^0,c
 24604  01BC10  6A02               	clrf	(btemp+1)^0,c
 24605                           
 24606                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24607  01BC12  52E5               	movf	postdec1,f,c
 24608  01BC14  52E5               	movf	postdec1,f,c
 24609  01BC16  52E5               	movf	postdec1,f,c
 24610  01BC18  0012               	return		;funcret
 24611  01BC1A                     __end_of_isspace:
 24612                           	opt callstack 0
 24613                           
 24614 ;; *************** function _isdigit *****************
 24615 ;; Defined at:
 24616 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 24617 ;; Parameters:    Size  Location     Type
 24618 ;;  c               2  [STACK] int 
 24619 ;; Auto vars:     Size  Location     Type
 24620 ;;		None
 24621 ;; Return value:  Size  Location     Type
 24622 ;;                  2  [STACK] int 
 24623 ;; Registers used:
 24624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 24625 ;; Tracked objects:
 24626 ;;		On entry : 0/0
 24627 ;;		On exit  : 0/0
 24628 ;;		Unchanged: 0/0
 24629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24634 ;;Total ram usage:        0 bytes
 24635 ;; Hardware stack levels used:    1
 24636 ;; Hardware stack levels required when called:   15
 24637 ;; This function calls:
 24638 ;;		Nothing
 24639 ;; This function is called by:
 24640 ;;		_vfpfcnvrt
 24641 ;;		_atoi
 24642 ;; This function uses a reentrant model
 24643 ;;
 24644                           
 24645                           	psect	text89
 24646  01C374                     __ptext89:
 24647                           	opt callstack 0
 24648  01C374                     _isdigit:
 24649                           	opt callstack 0
 24650                           
 24651                           ;stkvar	_c @ sp[(0)+-2]
 24652                           
 24653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24654                           ;incstack = 0
 24655 ;; hardware stack exceeded
 24656  01C374  0EFE               	movlw	-2
 24657  01C376  50E3               	movf	plusw1,w,c
 24658  01C378  0FD0               	addlw	208
 24659  01C37A  6E0B               	movwf	(btemp+10)^0,c
 24660  01C37C  0EFF               	movlw	-1
 24661  01C37E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24662  01C384  0EFF               	movlw	255
 24663  01C386  220C               	addwfc	(btemp+11)^0,f,c
 24664  01C388  500C               	movf	(btemp+11)^0,w,c
 24665  01C38A  E106               	bnz	u6500
 24666  01C38C  0E0A               	movlw	10
 24667  01C38E  5C0B               	subwf	(btemp+10)^0,w,c
 24668  01C390  B0D8               	btfsc	status,0,c
 24669  01C392  D002               	goto	u6500
 24670  01C394  0E01               	movlw	1
 24671  01C396  D001               	goto	u6510
 24672  01C398                     u6500:
 24673  01C398  0E00               	movlw	0
 24674  01C39A                     u6510:
 24675  01C39A  6E01               	movwf	btemp^0,c
 24676  01C39C  6A02               	clrf	(btemp+1)^0,c
 24677                           
 24678                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 24679  01C39E  52E5               	movf	postdec1,f,c
 24680  01C3A0  52E5               	movf	postdec1,f,c
 24681  01C3A2  0012               	return		;funcret
 24682  01C3A4                     __end_of_isdigit:
 24683                           	opt callstack 0
 24684                           
 24685 ;; *************** function _set_vterm *****************
 24686 ;; Defined at:
 24687 ;;		line 107 in file "mconfig.c"
 24688 ;; Parameters:    Size  Location     Type
 24689 ;;  vterm           1  [STACK] const unsigned char 
 24690 ;; Auto vars:     Size  Location     Type
 24691 ;;		None
 24692 ;; Return value:  Size  Location     Type
 24693 ;;                  1  [STACK] unsigned char 
 24694 ;; Registers used:
 24695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 24696 ;; Tracked objects:
 24697 ;;		On entry : 0/1
 24698 ;;		On exit  : 0/0
 24699 ;;		Unchanged: 0/0
 24700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;Total ram usage:        0 bytes
 24706 ;; Hardware stack levels used:    1
 24707 ;; Hardware stack levels required when called:   15
 24708 ;; This function calls:
 24709 ;;		Nothing
 24710 ;; This function is called by:
 24711 ;;		_main
 24712 ;;		_check_help
 24713 ;; This function uses a reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text90
 24717  01C896                     __ptext90:
 24718                           	opt callstack 0
 24719  01C896                     _set_vterm:
 24720                           	opt callstack 15
 24721                           
 24722                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 24723                           ;stkvar	_vterm @ sp[(0)+-1]
 24724                           
 24725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24726                           ;incstack = 0
 24727  01C896  0EFF               	movlw	-1
 24728  01C898  006F FF8C  F00C    	movff	plusw1,btemp+11
 24729  01C89E  0E03               	movlw	3
 24730  01C8A0  160C               	andwf	(btemp+11)^0,f,c
 24731  01C8A2  EE22  F20A         	lfsr	2,_D+480
 24732  01C8A6  50DF               	movf	223,w,c
 24733  01C8A8  180C               	xorwf	(btemp+11)^0,w,c
 24734  01C8AA  0BFE               	andlw	-2
 24735  01C8AC  180C               	xorwf	(btemp+11)^0,w,c
 24736  01C8AE  6EDF               	movwf	223,c
 24737                           
 24738                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24739  01C8B0  52E5               	movf	postdec1,f,c
 24740  01C8B2  0012               	return		;funcret
 24741  01C8B4                     __end_of_set_vterm:
 24742                           	opt callstack 0
 24743                           
 24744 ;; *************** function _set_temp_display_help *****************
 24745 ;; Defined at:
 24746 ;;		line 211 in file "mconfig.c"
 24747 ;; Parameters:    Size  Location     Type
 24748 ;;  new_response    1  [STACK] const enum E16509
 24749 ;; Auto vars:     Size  Location     Type
 24750 ;;		None
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  1  [STACK] enum E16509
 24753 ;; Registers used:
 24754 ;;		wreg, fsr1l, fsr1h
 24755 ;; Tracked objects:
 24756 ;;		On entry : 0/1
 24757 ;;		On exit  : 3F/1
 24758 ;;		Unchanged: 0/0
 24759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24764 ;;Total ram usage:        0 bytes
 24765 ;; Hardware stack levels used:    1
 24766 ;; Hardware stack levels required when called:   15
 24767 ;; This function calls:
 24768 ;;		Nothing
 24769 ;; This function is called by:
 24770 ;;		_check_help
 24771 ;; This function uses a reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text91
 24775  01C9DE                     __ptext91:
 24776                           	opt callstack 0
 24777  01C9DE                     _set_temp_display_help:
 24778                           	opt callstack 14
 24779                           
 24780                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 24781                           
 24782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24783                           ;incstack = 0
 24784  01C9DE  0101               	movlb	1	; () banked
 24785  01C9E0  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 24786                           
 24787                           ; BSR set to: 1
 24788                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 24789                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24790  01C9E2  0EFF               	movlw	-1
 24791  01C9E4  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 24792                           
 24793                           ; BSR set to: 1
 24794                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 24795  01C9EA  52E5               	movf	postdec1,f,c
 24796  01C9EC  0012               	return		;funcret
 24797  01C9EE                     __end_of_set_temp_display_help:
 24798                           	opt callstack 0
 24799                           
 24800 ;; *************** function _set_display_info *****************
 24801 ;; Defined at:
 24802 ;;		line 200 in file "mconfig.c"
 24803 ;; Parameters:    Size  Location     Type
 24804 ;;  new_response    1  [STACK] const enum E16509
 24805 ;; Auto vars:     Size  Location     Type
 24806 ;;		None
 24807 ;; Return value:  Size  Location     Type
 24808 ;;                  1  [STACK] enum E16994
 24809 ;; Registers used:
 24810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24811 ;; Tracked objects:
 24812 ;;		On entry : 0/1
 24813 ;;		On exit  : 0/0
 24814 ;;		Unchanged: 0/0
 24815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24820 ;;Total ram usage:        0 bytes
 24821 ;; Hardware stack levels used:    1
 24822 ;; Hardware stack levels required when called:   16
 24823 ;; This function calls:
 24824 ;;		_TimerDone
 24825 ;; This function is called by:
 24826 ;;		_main
 24827 ;;		_check_help
 24828 ;; This function uses a reentrant model
 24829 ;;
 24830                           
 24831                           	psect	text92
 24832  01C8B4                     __ptext92:
 24833                           	opt callstack 0
 24834  01C8B4                     _set_display_info:
 24835                           	opt callstack 14
 24836                           
 24837                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 24838                           
 24839                           ; BSR set to: 1
 24840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24841                           ;incstack = 0
 24842  01C8B4  0E07               	movlw	7
 24843  01C8B6  6EE6               	movwf	postinc1,c
 24844  01C8B8  EC55  F0E2         	call	_TimerDone	;wreg free
 24845  01C8BC  5001               	movf	btemp^0,w,c
 24846  01C8BE  B4D8               	btfsc	status,2,c
 24847  01C8C0  D006               	goto	l1745
 24848                           
 24849                           ;mconfig.c: 205:   old_info = V.response.info;
 24850  01C8C2  0101               	movlb	1	; () banked
 24851  01C8C4  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 24852                           
 24853                           ; BSR set to: 1
 24854                           ;mconfig.c: 206:   V.response.info = new_response_info;
 24855                           ;stkvar	_new_response_info @ sp[(0)+-1]
 24856  01C8C6  0EFF               	movlw	-1
 24857  01C8C8  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 24858  01C8CE                     l1745:
 24859                           
 24860                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24861  01C8CE  52E5               	movf	postdec1,f,c
 24862  01C8D0  0012               	return		;funcret
 24863  01C8D2                     __end_of_set_display_info:
 24864                           	opt callstack 0
 24865                           
 24866 ;; *************** function _mode_lamp_dim *****************
 24867 ;; Defined at:
 24868 ;;		line 13 in file "mconfig.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;  level           2  [STACK] const unsigned short 
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;		None
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  1  [STACK] void 
 24875 ;; Registers used:
 24876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24877 ;; Tracked objects:
 24878 ;;		On entry : 0/1
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24886 ;;Total ram usage:        0 bytes
 24887 ;; Hardware stack levels used:    1
 24888 ;; Hardware stack levels required when called:   16
 24889 ;; This function calls:
 24890 ;;		_PWM8_LoadDutyValue
 24891 ;; This function is called by:
 24892 ;;		_main
 24893 ;;		_check_help
 24894 ;; This function uses a reentrant model
 24895 ;;
 24896                           
 24897                           	psect	text93
 24898  01C926                     __ptext93:
 24899                           	opt callstack 0
 24900  01C926                     _mode_lamp_dim:
 24901                           	opt callstack 14
 24902                           
 24903                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 24904                           ;stkvar	_level @ sp[(0)+-2]
 24905                           
 24906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24907                           ;incstack = 0
 24908  01C926  0EFE               	movlw	-2
 24909  01C928  006F FF8F FFE6     	movff	plusw1,postinc1
 24910  01C92E  006F FF8F FFE6     	movff	plusw1,postinc1
 24911  01C934  EC9F  F0DF         	call	_PWM8_LoadDutyValue	;wreg free
 24912                           
 24913                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24914  01C938  52E5               	movf	postdec1,f,c
 24915  01C93A  52E5               	movf	postdec1,f,c
 24916  01C93C  0012               	return		;funcret
 24917  01C93E                     __end_of_mode_lamp_dim:
 24918                           	opt callstack 0
 24919                           
 24920 ;; *************** function _mode_lamp_bright *****************
 24921 ;; Defined at:
 24922 ;;		line 18 in file "mconfig.c"
 24923 ;; Parameters:    Size  Location     Type
 24924 ;;		None
 24925 ;; Auto vars:     Size  Location     Type
 24926 ;;		None
 24927 ;; Return value:  Size  Location     Type
 24928 ;;                  1  [STACK] void 
 24929 ;; Registers used:
 24930 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24931 ;; Tracked objects:
 24932 ;;		On entry : 0/0
 24933 ;;		On exit  : 0/0
 24934 ;;		Unchanged: 0/0
 24935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24940 ;;Total ram usage:        0 bytes
 24941 ;; Hardware stack levels used:    1
 24942 ;; Hardware stack levels required when called:   16
 24943 ;; This function calls:
 24944 ;;		_PWM8_LoadDutyValue
 24945 ;; This function is called by:
 24946 ;;		_check_help
 24947 ;; This function uses a reentrant model
 24948 ;;
 24949                           
 24950                           	psect	text94
 24951  01CA0C                     __ptext94:
 24952                           	opt callstack 0
 24953  01CA0C                     _mode_lamp_bright:
 24954                           	opt callstack 13
 24955                           
 24956                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 24957                           
 24958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24959                           ;incstack = 0
 24960  01CA0C  0E2C               	movlw	44
 24961  01CA0E  6EE6               	movwf	postinc1,c
 24962  01CA10  0E01               	movlw	1
 24963  01CA12  6EE6               	movwf	postinc1,c
 24964  01CA14  EC9F  F0DF         	call	_PWM8_LoadDutyValue	;wreg free
 24965                           
 24966                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24967  01CA18  0012               	return		;funcret
 24968  01CA1A                     __end_of_mode_lamp_bright:
 24969                           	opt callstack 0
 24970                           
 24971 ;; *************** function _PWM8_LoadDutyValue *****************
 24972 ;; Defined at:
 24973 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 24974 ;; Parameters:    Size  Location     Type
 24975 ;;  dutyValue       2  [STACK] unsigned short 
 24976 ;; Auto vars:     Size  Location     Type
 24977 ;;		None
 24978 ;; Return value:  Size  Location     Type
 24979 ;;                  1  [STACK] void 
 24980 ;; Registers used:
 24981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24982 ;; Tracked objects:
 24983 ;;		On entry : 0/1
 24984 ;;		On exit  : 0/0
 24985 ;;		Unchanged: 0/0
 24986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24991 ;;Total ram usage:        0 bytes
 24992 ;; Hardware stack levels used:    1
 24993 ;; Hardware stack levels required when called:   15
 24994 ;; This function calls:
 24995 ;;		Nothing
 24996 ;; This function is called by:
 24997 ;;		_mode_lamp_dim
 24998 ;;		_mode_lamp_bright
 24999 ;; This function uses a reentrant model
 25000 ;;
 25001                           
 25002                           	psect	text95
 25003  01BF3E                     __ptext95:
 25004                           	opt callstack 0
 25005  01BF3E                     _PWM8_LoadDutyValue:
 25006                           	opt callstack 14
 25007                           
 25008                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 25009                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25010                           
 25011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25012                           ;incstack = 0
 25013  01BF3E  0EFE               	movlw	-2
 25014  01BF40  006F FF8C  F00B    	movff	plusw1,btemp+10
 25015  01BF46  0EFF               	movlw	-1
 25016  01BF48  006F FF8C  F00C    	movff	plusw1,btemp+11
 25017  01BF4E  90D8               	bcf	status,0,c
 25018  01BF50  320C               	rrcf	(btemp+11)^0,f,c
 25019  01BF52  320B               	rrcf	(btemp+10)^0,f,c
 25020  01BF54  90D8               	bcf	status,0,c
 25021  01BF56  320C               	rrcf	(btemp+11)^0,f,c
 25022  01BF58  320B               	rrcf	(btemp+10)^0,f,c
 25023  01BF5A  500B               	movf	(btemp+10)^0,w,c
 25024  01BF5C  6E61               	movwf	97,c	;volatile
 25025                           
 25026                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 25027                           ;stkvar	_dutyValue @ sp[(0)+-2]
 25028  01BF5E  0EFE               	movlw	-2
 25029  01BF60  006F FF8C  F00C    	movff	plusw1,btemp+11
 25030  01BF66  0E03               	movlw	3
 25031  01BF68  160C               	andwf	(btemp+11)^0,f,c
 25032  01BF6A  0E06               	movlw	6
 25033  01BF6C  6E01               	movwf	btemp^0,c
 25034  01BF6E                     u9605:
 25035  01BF6E  90D8               	bcf	status,0,c
 25036  01BF70  360C               	rlcf	(btemp+11)^0,f,c
 25037  01BF72  2E01               	decfsz	btemp^0,f,c
 25038  01BF74  D7FC               	goto	u9605
 25039  01BF76  500C               	movf	(btemp+11)^0,w,c
 25040  01BF78  6E60               	movwf	96,c	;volatile
 25041                           
 25042                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25043  01BF7A  52E5               	movf	postdec1,f,c
 25044  01BF7C  52E5               	movf	postdec1,f,c
 25045  01BF7E  0012               	return		;funcret
 25046  01BF80                     __end_of_PWM8_LoadDutyValue:
 25047                           	opt callstack 0
 25048                           
 25049 ;; *************** function _help_button *****************
 25050 ;; Defined at:
 25051 ;;		line 26 in file "mconfig.c"
 25052 ;; Parameters:    Size  Location     Type
 25053 ;;		None
 25054 ;; Auto vars:     Size  Location     Type
 25055 ;;		None
 25056 ;; Return value:  Size  Location     Type
 25057 ;;                  1  [STACK] _Bool 
 25058 ;; Registers used:
 25059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25060 ;; Tracked objects:
 25061 ;;		On entry : 0/1
 25062 ;;		On exit  : 0/0
 25063 ;;		Unchanged: 0/0
 25064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25069 ;;Total ram usage:        0 bytes
 25070 ;; Hardware stack levels used:    1
 25071 ;; Hardware stack levels required when called:   16
 25072 ;; This function calls:
 25073 ;;		_StartTimer
 25074 ;;		_TimerDone
 25075 ;; This function is called by:
 25076 ;;		_check_help
 25077 ;; This function uses a reentrant model
 25078 ;;
 25079                           
 25080                           	psect	text96
 25081  01C138                     __ptext96:
 25082                           	opt callstack 0
 25083  01C138                     _help_button:
 25084                           	opt callstack 13
 25085                           
 25086                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 25087                           
 25088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25089                           ;incstack = 0
 25090  01C138  B0CB               	btfsc	203,0,c	;volatile
 25091  01C13A  D00C               	goto	l1688
 25092                           
 25093                           ;mconfig.c: 29:   V.help = 1;
 25094  01C13C  0101               	movlb	1	; () banked
 25095  01C13E  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 25096                           
 25097                           ; BSR set to: 1
 25098                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 25099  01C140  0E08               	movlw	8
 25100  01C142  6EE6               	movwf	postinc1,c
 25101  01C144  EC55  F0E2         	call	_TimerDone	;wreg free
 25102  01C148  5001               	movf	btemp^0,w,c
 25103  01C14A  B4D8               	btfsc	status,2,c
 25104  01C14C  D003               	goto	l1688
 25105                           
 25106                           ;mconfig.c: 31:    return 1;
 25107  01C14E  0E01               	movlw	1
 25108  01C150  6E01               	movwf	btemp^0,c
 25109  01C152  0012               	return	
 25110  01C154                     l1688:
 25111                           
 25112                           ;mconfig.c: 34:  if (!V.help)
 25113  01C154  0101               	movlb	1	; () banked
 25114  01C156  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 25115  01C158  D008               	goto	l10861
 25116                           
 25117                           ; BSR set to: 1
 25118                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 25119  01C15A  0E2C               	movlw	44
 25120  01C15C  6EE6               	movwf	postinc1,c
 25121  01C15E  0E01               	movlw	1
 25122  01C160  6EE6               	movwf	postinc1,c
 25123  01C162  0E08               	movlw	8
 25124  01C164  6EE6               	movwf	postinc1,c
 25125  01C166  EC00  F0E0         	call	_StartTimer	;wreg free
 25126  01C16A                     l10861:
 25127                           
 25128                           ;mconfig.c: 37:  return 0;
 25129  01C16A  0E00               	movlw	0
 25130  01C16C  6E01               	movwf	btemp^0,c
 25131                           
 25132                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 25133  01C16E  0012               	return		;funcret
 25134  01C170                     __end_of_help_button:
 25135                           	opt callstack 0
 25136                           
 25137 ;; *************** function _TimerDone *****************
 25138 ;; Defined at:
 25139 ;;		line 20 in file "timers.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;  timer           1  [STACK] const unsigned char 
 25142 ;; Auto vars:     Size  Location     Type
 25143 ;;		None
 25144 ;; Return value:  Size  Location     Type
 25145 ;;                  1  [STACK] _Bool 
 25146 ;; Registers used:
 25147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25148 ;; Tracked objects:
 25149 ;;		On entry : 0/1
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25157 ;;Total ram usage:        0 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:   15
 25160 ;; This function calls:
 25161 ;;		Nothing
 25162 ;; This function is called by:
 25163 ;;		_main
 25164 ;;		_WaitMs
 25165 ;;		_help_button
 25166 ;;		_check_help
 25167 ;;		_set_display_info
 25168 ;;		_update_adc_result
 25169 ;;		_esr_check
 25170 ;; This function uses a reentrant model
 25171 ;;
 25172                           
 25173                           	psect	text97
 25174  01C4AA                     __ptext97:
 25175                           	opt callstack 0
 25176  01C4AA                     _TimerDone:
 25177                           	opt callstack 14
 25178                           
 25179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25180                           ;incstack = 0
 25181  01C4AA  0004               	clrwdt		;# 
 25182                           
 25183                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 25184                           ;stkvar	_timer @ sp[(0)+-1]
 25185  01C4AC  0EFF               	movlw	-1
 25186  01C4AE  50E3               	movf	plusw1,w,c
 25187  01C4B0  0D02               	mullw	2
 25188  01C4B2  0E7D               	movlw	low _tickCount
 25189  01C4B4  24F3               	addwf	243,w,c
 25190  01C4B6  6ED9               	movwf	fsr2l,c
 25191  01C4B8  0E02               	movlw	high _tickCount
 25192  01C4BA  20F4               	addwfc	prodh,w,c
 25193  01C4BC  6EDA               	movwf	fsr2h,c
 25194  01C4BE  50DE               	movf	postinc2,w,c
 25195  01C4C0  10DE               	iorwf	postinc2,w,c
 25196  01C4C2  A4D8               	btfss	status,2,c
 25197  01C4C4  D002               	goto	l10087
 25198                           
 25199                           ;timers.c: 24:   return 1;
 25200  01C4C6  0E01               	movlw	1
 25201  01C4C8  D001               	goto	L30
 25202  01C4CA                     l10087:
 25203                           
 25204                           ;timers.c: 26:  return 0;
 25205  01C4CA  0E00               	movlw	0
 25206  01C4CC                     L30:
 25207  01C4CC  6E01               	movwf	btemp^0,c
 25208                           
 25209                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25210  01C4CE  52E5               	movf	postdec1,f,c
 25211  01C4D0  0012               	return		;funcret
 25212  01C4D2                     __end_of_TimerDone:
 25213                           	opt callstack 0
 25214                           
 25215 ;; *************** function _StartTimer *****************
 25216 ;; Defined at:
 25217 ;;		line 12 in file "timers.c"
 25218 ;; Parameters:    Size  Location     Type
 25219 ;;  timer           1  [STACK] const unsigned char 
 25220 ;;  count           2  [STACK] const unsigned short 
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;		None
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  1  [STACK] void 
 25225 ;; Registers used:
 25226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25227 ;; Tracked objects:
 25228 ;;		On entry : 0/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25236 ;;Total ram usage:        0 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; Hardware stack levels required when called:   15
 25239 ;; This function calls:
 25240 ;;		Nothing
 25241 ;; This function is called by:
 25242 ;;		_main
 25243 ;;		_WaitMs
 25244 ;;		_help_button
 25245 ;;		_check_help
 25246 ;;		_update_adc_result
 25247 ;;		_calc_bsoc
 25248 ;;		_esr_check
 25249 ;; This function uses a reentrant model
 25250 ;;
 25251                           
 25252                           	psect	text98
 25253  01C000                     __ptext98:
 25254                           	opt callstack 0
 25255  01C000                     _StartTimer:
 25256                           	opt callstack 0
 25257                           
 25258                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 25259                           ;stkvar	_count @ sp[(0)+-3]
 25260                           
 25261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25262                           ;incstack = 0
 25263 ;; hardware stack exceeded
 25264  01C000  0EFD               	movlw	-3
 25265  01C002  006F FF8C  F00B    	movff	plusw1,btemp+10
 25266  01C008  0EFE               	movlw	-2
 25267  01C00A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25268  01C010  90D8               	bcf	status,0,c
 25269  01C012  340B               	rlcf	(btemp+10)^0,w,c
 25270  01C014  6E09               	movwf	(btemp+8)^0,c
 25271  01C016  340C               	rlcf	(btemp+11)^0,w,c
 25272  01C018  6E0A               	movwf	(btemp+9)^0,c
 25273                           
 25274                           ;stkvar	_timer @ sp[(0)+-1]
 25275  01C01A  0EFF               	movlw	-1
 25276  01C01C  50E3               	movf	plusw1,w,c
 25277  01C01E  0D02               	mullw	2
 25278  01C020  0E7D               	movlw	low _tickCount
 25279  01C022  24F3               	addwf	243,w,c
 25280  01C024  6ED9               	movwf	fsr2l,c
 25281  01C026  0E02               	movlw	high _tickCount
 25282  01C028  20F4               	addwfc	prodh,w,c
 25283  01C02A  6EDA               	movwf	fsr2h,c
 25284  01C02C  0060  F027  FFDE   	movff	btemp+8,postinc2
 25285  01C032  0060  F02B  FFDD   	movff	btemp+9,postdec2
 25286                           
 25287                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 25288  01C038  52E5               	movf	postdec1,f,c
 25289  01C03A  52E5               	movf	postdec1,f,c
 25290  01C03C  52E5               	movf	postdec1,f,c
 25291  01C03E  0012               	return		;funcret
 25292  01C040                     __end_of_StartTimer:
 25293                           	opt callstack 0
 25294                           
 25295 ;; *************** function _display_info *****************
 25296 ;; Defined at:
 25297 ;;		line 190 in file "mconfig.c"
 25298 ;; Parameters:    Size  Location     Type
 25299 ;;		None
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;		None
 25302 ;; Return value:  Size  Location     Type
 25303 ;;                  1  [STACK] enum E16509
 25304 ;; Registers used:
 25305 ;;		btemp
 25306 ;; Tracked objects:
 25307 ;;		On entry : 0/1
 25308 ;;		On exit  : 0/0
 25309 ;;		Unchanged: 0/0
 25310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;Total ram usage:        0 bytes
 25316 ;; Hardware stack levels used:    1
 25317 ;; Hardware stack levels required when called:   15
 25318 ;; This function calls:
 25319 ;;		Nothing
 25320 ;; This function is called by:
 25321 ;;		_check_help
 25322 ;; This function uses a reentrant model
 25323 ;;
 25324                           
 25325                           	psect	text99
 25326  01CA8E                     __ptext99:
 25327                           	opt callstack 0
 25328  01CA8E                     _display_info:
 25329                           	opt callstack 14
 25330                           
 25331                           ;mconfig.c: 192:  return V.response.info;
 25332                           
 25333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25334                           ;incstack = 0
 25335  01CA8E  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 25336                           
 25337                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25338  01CA94  0012               	return		;funcret
 25339  01CA96                     __end_of_display_info:
 25340                           	opt callstack 0
 25341                           
 25342 ;; *************** function _display_help *****************
 25343 ;; Defined at:
 25344 ;;		line 195 in file "mconfig.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;		None
 25347 ;; Auto vars:     Size  Location     Type
 25348 ;;		None
 25349 ;; Return value:  Size  Location     Type
 25350 ;;                  1  [STACK] enum E16509
 25351 ;; Registers used:
 25352 ;;		btemp
 25353 ;; Tracked objects:
 25354 ;;		On entry : 3F/1
 25355 ;;		On exit  : 0/0
 25356 ;;		Unchanged: 0/0
 25357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25362 ;;Total ram usage:        0 bytes
 25363 ;; Hardware stack levels used:    1
 25364 ;; Hardware stack levels required when called:   15
 25365 ;; This function calls:
 25366 ;;		Nothing
 25367 ;; This function is called by:
 25368 ;;		_check_help
 25369 ;; This function uses a reentrant model
 25370 ;;
 25371                           
 25372                           	psect	text100
 25373  01CA96                     __ptext100:
 25374                           	opt callstack 0
 25375  01CA96                     _display_help:
 25376                           	opt callstack 14
 25377                           
 25378                           ;mconfig.c: 197:  return V.response.help_temp;
 25379                           
 25380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25381                           ;incstack = 0
 25382  01CA96  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 25383                           
 25384                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25385  01CA9C  0012               	return		;funcret
 25386  01CA9E                     __end_of_display_help:
 25387                           	opt callstack 0
 25388                           
 25389 ;; *************** function _check_enter_button *****************
 25390 ;; Defined at:
 25391 ;;		line 49 in file "hid.c"
 25392 ;; Parameters:    Size  Location     Type
 25393 ;;  h               2  [STACK] PTR struct H_data
 25394 ;;		 -> H(9), 
 25395 ;; Auto vars:     Size  Location     Type
 25396 ;;		None
 25397 ;; Return value:  Size  Location     Type
 25398 ;;                  1  [STACK] _Bool 
 25399 ;; Registers used:
 25400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 25401 ;; Tracked objects:
 25402 ;;		On entry : 0/0
 25403 ;;		On exit  : 0/0
 25404 ;;		Unchanged: 0/0
 25405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;Total ram usage:        0 bytes
 25411 ;; Hardware stack levels used:    1
 25412 ;; Hardware stack levels required when called:   15
 25413 ;; This function calls:
 25414 ;;		Nothing
 25415 ;; This function is called by:
 25416 ;;		_main
 25417 ;; This function uses a reentrant model
 25418 ;;
 25419                           
 25420                           	psect	text101
 25421  01B6B4                     __ptext101:
 25422                           	opt callstack 0
 25423  01B6B4                     _check_enter_button:
 25424                           	opt callstack 15
 25425                           
 25426                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 25427                           ;stkvar	_h @ sp[(0)+-2]
 25428                           
 25429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25430                           ;incstack = 0
 25431  01B6B4  0EFE               	movlw	-2
 25432  01B6B6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25433  01B6BC  0EFF               	movlw	-1
 25434  01B6BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25435  01B6C4  0E04               	movlw	4
 25436  01B6C6  240B               	addwf	(btemp+10)^0,w,c
 25437  01B6C8  6ED9               	movwf	fsr2l,c
 25438  01B6CA  0E00               	movlw	0
 25439  01B6CC  200C               	addwfc	(btemp+11)^0,w,c
 25440  01B6CE  6EDA               	movwf	fsr2h,c
 25441  01B6D0  50DF               	movf	indf2,w,c
 25442  01B6D2  A4D8               	btfss	status,2,c
 25443  01B6D4  D023               	goto	l13627
 25444                           
 25445                           ;stkvar	_h @ sp[(0)+-2]
 25446  01B6D6  0EFE               	movlw	-2
 25447  01B6D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 25448  01B6DE  0EFF               	movlw	-1
 25449  01B6E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25450  01B6E6  0E05               	movlw	5
 25451  01B6E8  240B               	addwf	(btemp+10)^0,w,c
 25452  01B6EA  6ED9               	movwf	fsr2l,c
 25453  01B6EC  0E00               	movlw	0
 25454  01B6EE  200C               	addwfc	(btemp+11)^0,w,c
 25455  01B6F0  6EDA               	movwf	fsr2h,c
 25456  01B6F2  50DF               	movf	indf2,w,c
 25457  01B6F4  A4D8               	btfss	status,2,c
 25458  01B6F6  D012               	goto	l13627
 25459                           
 25460                           ;hid.c: 52:   h->wait_enter = 1;
 25461                           ;stkvar	_h @ sp[(0)+-2]
 25462  01B6F8  0EFE               	movlw	-2
 25463  01B6FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25464  01B700  0EFF               	movlw	-1
 25465  01B702  006F FF8C  F00C    	movff	plusw1,btemp+11
 25466  01B708  0E04               	movlw	4
 25467  01B70A  240B               	addwf	(btemp+10)^0,w,c
 25468  01B70C  6ED9               	movwf	fsr2l,c
 25469  01B70E  0E00               	movlw	0
 25470  01B710  200C               	addwfc	(btemp+11)^0,w,c
 25471  01B712  6EDA               	movwf	fsr2h,c
 25472  01B714  0E01               	movlw	1
 25473  01B716  6EDF               	movwf	indf2,c
 25474                           
 25475                           ;hid.c: 53:   return 1;
 25476  01B718  0E01               	movlw	1
 25477  01B71A  D001               	goto	L31
 25478  01B71C                     l13627:
 25479                           
 25480                           ;hid.c: 55:  return 0;
 25481  01B71C  0E00               	movlw	0
 25482  01B71E                     L31:
 25483  01B71E  6E01               	movwf	btemp^0,c
 25484                           
 25485                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25486  01B720  52E5               	movf	postdec1,f,c
 25487  01B722  52E5               	movf	postdec1,f,c
 25488  01B724  0012               	return		;funcret
 25489  01B726                     __end_of_check_enter_button:
 25490                           	opt callstack 0
 25491                           
 25492 ;; *************** function _calc_ror_data *****************
 25493 ;; Defined at:
 25494 ;;		line 102 in file "mbmc.c"
 25495 ;; Parameters:    Size  Location     Type
 25496 ;;		None
 25497 ;; Auto vars:     Size  Location     Type
 25498 ;;		None
 25499 ;; Return value:  Size  Location     Type
 25500 ;;                  1  [STACK] void 
 25501 ;; Registers used:
 25502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25503 ;; Tracked objects:
 25504 ;;		On entry : 0/39
 25505 ;;		On exit  : 0/0
 25506 ;;		Unchanged: 0/0
 25507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25512 ;;Total ram usage:        0 bytes
 25513 ;; Hardware stack levels used:    1
 25514 ;; Hardware stack levels required when called:   18
 25515 ;; This function calls:
 25516 ;;		___flge
 25517 ;;		___flsub
 25518 ;;		_conv_raw_result
 25519 ;;		_fabsf
 25520 ;; This function is called by:
 25521 ;;		_main
 25522 ;; This function uses a reentrant model
 25523 ;;
 25524                           
 25525                           	psect	text102
 25526  019094                     __ptext102:
 25527                           	opt callstack 0
 25528  019094                     _calc_ror_data:
 25529                           	opt callstack 12
 25530                           
 25531                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 25532                           
 25533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25534                           ;incstack = 0
 25535  019094  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 25536  01909A  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 25537  0190A0  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 25538  0190A6  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 25539  0190AC  0E00               	movlw	0
 25540  0190AE  6EE6               	movwf	postinc1,c
 25541  0190B0  0E00               	movlw	0
 25542  0190B2  6EE6               	movwf	postinc1,c
 25543  0190B4  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25544  0190B8  0060  F007  FFE6   	movff	btemp,postinc1
 25545  0190BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25546  0190C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25547  0190CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 25548  0190D0  EC5A  F0DF         	call	___flsub	;wreg free
 25549  0190D4  0060  F007  FFE6   	movff	btemp,postinc1
 25550  0190DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25551  0190E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25552  0190E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 25553  0190EC  ECC2  F0D6         	call	_fabsf	;wreg free
 25554  0190F0  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 25555  0190F6  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 25556  0190FC  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 25557  019102  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 25558                           
 25559                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 25560  019108  0E00               	movlw	0
 25561  01910A  6EE6               	movwf	postinc1,c
 25562  01910C  0E00               	movlw	0
 25563  01910E  6EE6               	movwf	postinc1,c
 25564  019110  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25565  019114  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 25566  01911A  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 25567  019120  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 25568  019126  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 25569                           
 25570                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 25571  01912C  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 25572  019132  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 25573  019138  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 25574  01913E  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 25575  019144  0E00               	movlw	0
 25576  019146  6EE6               	movwf	postinc1,c
 25577  019148  0E04               	movlw	4
 25578  01914A  6EE6               	movwf	postinc1,c
 25579  01914C  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25580  019150  0060  F007  FFE6   	movff	btemp,postinc1
 25581  019156  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25582  01915C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25583  019162  0060  F013  FFE6   	movff	btemp+3,postinc1
 25584  019168  EC5A  F0DF         	call	___flsub	;wreg free
 25585  01916C  0060  F007  FFE6   	movff	btemp,postinc1
 25586  019172  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25587  019178  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25588  01917E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25589  019184  ECC2  F0D6         	call	_fabsf	;wreg free
 25590  019188  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 25591  01918E  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 25592  019194  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 25593  01919A  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 25594                           
 25595                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 25596  0191A0  0EE7               	movlw	231
 25597  0191A2  6EE6               	movwf	postinc1,c
 25598  0191A4  0E1D               	movlw	29
 25599  0191A6  6EE6               	movwf	postinc1,c
 25600  0191A8  0EA7               	movlw	167
 25601  0191AA  6EE6               	movwf	postinc1,c
 25602  0191AC  0E3B               	movlw	59
 25603  0191AE  6EE6               	movwf	postinc1,c
 25604  0191B0  EE21  F36B         	lfsr	2,_C+108	;volatile
 25605  0191B4  006F FF7B FFE6     	movff	postinc2,postinc1
 25606  0191BA  006F FF7B FFE6     	movff	postinc2,postinc1
 25607  0191C0  006F FF7B FFE6     	movff	postinc2,postinc1
 25608  0191C6  006F FF7B FFE6     	movff	postinc2,postinc1
 25609  0191CC  EC86  F0CA         	call	___flge	;wreg free
 25610  0191D0  B001               	btfsc	btemp& (0+255),0,c
 25611  0191D2  D010               	goto	l11367
 25612                           
 25613                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 25614  0191D4  0EB0               	movlw	176
 25615  0191D6  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 25616  0191DC  0E03               	movlw	3
 25617  0191DE  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 25618  0191E4  0E67               	movlw	103
 25619  0191E6  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 25620  0191EC  0E3C               	movlw	60
 25621  0191EE  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 25622  0191F4                     l11367:
 25623                           
 25624                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 25625  0191F4  0E00               	movlw	0
 25626  0191F6  6EE6               	movwf	postinc1,c
 25627  0191F8  0E04               	movlw	4
 25628  0191FA  6EE6               	movwf	postinc1,c
 25629  0191FC  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 25630  019200  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 25631  019206  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 25632  01920C  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 25633  019212  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 25634                           
 25635                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25636  019218  0012               	return		;funcret
 25637  01921A                     __end_of_calc_ror_data:
 25638                           	opt callstack 0
 25639                           
 25640 ;; *************** function _fabsf *****************
 25641 ;; Defined at:
 25642 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;  x               4  [STACK] float 
 25645 ;; Auto vars:     Size  Location     Type
 25646 ;;  u               4  [STACK] struct .
 25647 ;; Return value:  Size  Location     Type
 25648 ;;                  4  [STACK] float 
 25649 ;; Registers used:
 25650 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25651 ;; Tracked objects:
 25652 ;;		On entry : 0/0
 25653 ;;		On exit  : 0/0
 25654 ;;		Unchanged: 0/0
 25655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;Total ram usage:        0 bytes
 25661 ;; Hardware stack levels used:    1
 25662 ;; Hardware stack levels required when called:   15
 25663 ;; This function calls:
 25664 ;;		Nothing
 25665 ;; This function is called by:
 25666 ;;		_main
 25667 ;;		_calc_ror_data
 25668 ;;		_calc_bsoc
 25669 ;;		_esr_check
 25670 ;; This function uses a reentrant model
 25671 ;;
 25672                           
 25673                           	psect	text103
 25674  01AD84                     __ptext103:
 25675                           	opt callstack 0
 25676  01AD84                     _fabsf:
 25677                           	opt callstack 0
 25678                           
 25679                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25680  01AD84  52E6               	movf	postinc1,f,c
 25681  01AD86  52E6               	movf	postinc1,f,c
 25682  01AD88  52E6               	movf	postinc1,f,c
 25683  01AD8A  52E6               	movf	postinc1,f,c
 25684                           
 25685                           ;incstack = 0
 25686 ;; hardware stack exceeded
 25687  01AD8C  0060  F180  F009   	movff	fabsf@F463,btemp+8
 25688  01AD92  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 25689  01AD98  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 25690  01AD9E  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 25691                           
 25692                           ;stkvar	_u @ sp[(-4)+0]
 25693  01ADA4  0EFC               	movlw	-4
 25694  01ADA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25695  01ADAC  0EFD               	movlw	-3
 25696  01ADAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25697  01ADB4  0EFE               	movlw	-2
 25698  01ADB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25699  01ADBC  0EFF               	movlw	-1
 25700  01ADBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25701                           
 25702                           ;stkvar	_x @ sp[(-4)+-4]
 25703  01ADC4  0EF8               	movlw	-8
 25704  01ADC6  006F FF8C  F009    	movff	plusw1,btemp+8
 25705  01ADCC  0EF9               	movlw	-7
 25706  01ADCE  006F FF8C  F00A    	movff	plusw1,btemp+9
 25707  01ADD4  0EFA               	movlw	-6
 25708  01ADD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25709  01ADDC  0EFB               	movlw	-5
 25710  01ADDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25711                           
 25712                           ;stkvar	_u @ sp[(-4)+0]
 25713  01ADE4  0EFC               	movlw	-4
 25714  01ADE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25715  01ADEC  0EFD               	movlw	-3
 25716  01ADEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25717  01ADF4  0EFE               	movlw	-2
 25718  01ADF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25719  01ADFC  0EFF               	movlw	-1
 25720  01ADFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25721                           
 25722                           ;stkvar	_u @ sp[(-4)+0]
 25723  01AE04  0EFF               	movlw	-1
 25724  01AE06  9EE3               	bcf	plusw1,7,c
 25725                           
 25726                           ;stkvar	_u @ sp[(-4)+0]
 25727  01AE08  0EFC               	movlw	-4
 25728  01AE0A  006F FF8C  F001    	movff	plusw1,btemp
 25729  01AE10  0EFD               	movlw	-3
 25730  01AE12  006F FF8C  F002    	movff	plusw1,btemp+1
 25731  01AE18  0EFE               	movlw	-2
 25732  01AE1A  006F FF8C  F003    	movff	plusw1,btemp+2
 25733  01AE20  0EFF               	movlw	-1
 25734  01AE22  006F FF8C  F004    	movff	plusw1,btemp+3
 25735                           
 25736                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25737  01AE28  0EF8               	movlw	248
 25738  01AE2A  26E1               	addwf	fsr1l,f,c
 25739  01AE2C  0EFF               	movlw	255
 25740  01AE2E  22E2               	addwfc	fsr1h,f,c
 25741  01AE30  0012               	return		;funcret
 25742  01AE32                     __end_of_fabsf:
 25743                           	opt callstack 0
 25744                           
 25745 ;; *************** function _conv_raw_result *****************
 25746 ;; Defined at:
 25747 ;;		line 123 in file "daq.c"
 25748 ;; Parameters:    Size  Location     Type
 25749 ;;  chan            1  [STACK] const enum E16590
 25750 ;;  to_what         1  [STACK] const enum E16652
 25751 ;; Auto vars:     Size  Location     Type
 25752 ;;		None
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  4  [STACK] float 
 25755 ;; Registers used:
 25756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/39
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25766 ;;Total ram usage:        0 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:   17
 25769 ;; This function calls:
 25770 ;;		___fldiv
 25771 ;;		___flmul
 25772 ;;		___flsub
 25773 ;;		___xxtofl
 25774 ;;		_get_raw_result
 25775 ;;		_nanf
 25776 ;; This function is called by:
 25777 ;;		_main
 25778 ;;		_convert_adc_data
 25779 ;;		_calc_ror_data
 25780 ;;		_check_day_time
 25781 ;;		_init_bsoc
 25782 ;;		_esr_check
 25783 ;; This function uses a reentrant model
 25784 ;;
 25785                           
 25786                           	psect	text104
 25787  0153A0                     __ptext104:
 25788                           	opt callstack 0
 25789  0153A0                     _conv_raw_result:
 25790                           	opt callstack 0
 25791                           
 25792                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 25793                           
 25794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25795                           ;incstack = 0
 25796 ;; hardware stack exceeded
 25797  0153A0  D24A               	goto	l10069
 25798  0153A2                     l10015:
 25799                           
 25800                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 25801                           ;stkvar	_chan @ sp[(0)+-1]
 25802  0153A2  0EFF               	movlw	-1
 25803  0153A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25804  0153AA  0E77               	movlw	119
 25805  0153AC  6E09               	movwf	(btemp+8)^0,c
 25806  0153AE  0E3C               	movlw	60
 25807  0153B0  6E0A               	movwf	(btemp+9)^0,c
 25808  0153B2  2A0C               	incf	(btemp+11)^0,f,c
 25809  0153B4  D003               	goto	u9324
 25810  0153B6                     u9325:
 25811  0153B6  340A               	rlcf	(btemp+9)^0,w,c
 25812  0153B8  320A               	rrcf	(btemp+9)^0,f,c
 25813  0153BA  3209               	rrcf	(btemp+8)^0,f,c
 25814  0153BC                     u9324:
 25815  0153BC  2E0C               	decfsz	(btemp+11)^0,f,c
 25816  0153BE  D7FB               	goto	u9325
 25817  0153C0  B009               	btfsc	(btemp+8)^0,0,c
 25818  0153C2  D007               	goto	l10021
 25819                           
 25820                           ;daq.c: 129:    return nanf("");
 25821  0153C4  0EA1               	movlw	low (STR_75+126)
 25822  0153C6  6EE6               	movwf	postinc1,c
 25823  0153C8  0EFB               	movlw	high (STR_75+126)
 25824  0153CA  6EE6               	movwf	postinc1,c
 25825  0153CC  ECFC  F0DC         	call	_nanf	;wreg free
 25826  0153D0  D242               	goto	l1829
 25827  0153D2                     l10021:
 25828                           
 25829                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 25830                           ;stkvar	_chan @ sp[(0)+-1]
 25831  0153D2  0EFF               	movlw	-1
 25832  0153D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25833  0153DA  0E03               	movlw	3
 25834  0153DC  6E09               	movwf	(btemp+8)^0,c
 25835  0153DE  0E00               	movlw	0
 25836  0153E0  6E0A               	movwf	(btemp+9)^0,c
 25837  0153E2  2A0C               	incf	(btemp+11)^0,f,c
 25838  0153E4  D003               	goto	u9344
 25839  0153E6                     u9345:
 25840  0153E6  340A               	rlcf	(btemp+9)^0,w,c
 25841  0153E8  320A               	rrcf	(btemp+9)^0,f,c
 25842  0153EA  3209               	rrcf	(btemp+8)^0,f,c
 25843  0153EC                     u9344:
 25844  0153EC  2E0C               	decfsz	(btemp+11)^0,f,c
 25845  0153EE  D7FB               	goto	u9345
 25846  0153F0  A009               	btfss	(btemp+8)^0,0,c
 25847  0153F2  D0F3               	goto	l10035
 25848                           
 25849                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 25850                           ;stkvar	_chan @ sp[(0)+-1]
 25851  0153F4  0EFF               	movlw	-1
 25852  0153F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25853  0153FC  0E01               	movlw	1
 25854  0153FE  6E09               	movwf	(btemp+8)^0,c
 25855  015400  0E00               	movlw	0
 25856  015402  6E0A               	movwf	(btemp+9)^0,c
 25857  015404  2A0C               	incf	(btemp+11)^0,f,c
 25858  015406  D003               	goto	u9364
 25859  015408                     u9365:
 25860  015408  340A               	rlcf	(btemp+9)^0,w,c
 25861  01540A  320A               	rrcf	(btemp+9)^0,f,c
 25862  01540C  3209               	rrcf	(btemp+8)^0,f,c
 25863  01540E                     u9364:
 25864  01540E  2E0C               	decfsz	(btemp+11)^0,f,c
 25865  015410  D7FB               	goto	u9365
 25866  015412  A009               	btfss	(btemp+8)^0,0,c
 25867  015414  D071               	goto	l10031
 25868                           
 25869                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 25870  015416  0060  F367  FFE6   	movff	_R+42,postinc1
 25871  01541C  0060  F36B  FFE6   	movff	_R+43,postinc1
 25872  015422  0060  F36F  FFE6   	movff	_R+44,postinc1
 25873  015428  0060  F373  FFE6   	movff	_R+45,postinc1
 25874  01542E  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 25875  015434  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 25876  01543A  0E00               	movlw	0
 25877  01543C  BE0A               	btfsc	(btemp+9)^0,7,c
 25878  01543E  0EFF               	movlw	255
 25879  015440  6E0B               	movwf	(btemp+10)^0,c
 25880  015442  6E0C               	movwf	(btemp+11)^0,c
 25881  015444  0060  F027  FFE6   	movff	btemp+8,postinc1
 25882  01544A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25883  015450  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25884  015456  0060  F033  FFE6   	movff	btemp+11,postinc1
 25885  01545C  0E01               	movlw	1
 25886  01545E  6EE6               	movwf	postinc1,c
 25887  015460  ECCF  F0C4         	call	___xxtofl	;wreg free
 25888  015464  0060  F007  FFE6   	movff	btemp,postinc1
 25889  01546A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25890  015470  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25891  015476  0060  F013  FFE6   	movff	btemp+3,postinc1
 25892                           
 25893                           ;stkvar	_chan @ sp[(-8)+-1]
 25894  01547C  0EF7               	movlw	-9
 25895  01547E  50E3               	movf	plusw1,w,c
 25896  015480  6EE6               	movwf	postinc1,c
 25897  015482  EC69  F0E4         	call	_get_raw_result	;wreg free
 25898  015486  0060  F004  F00B   	movff	btemp,btemp+10
 25899  01548C  0060  F008  F00C   	movff	btemp+1,btemp+11
 25900  015492  500B               	movf	(btemp+10)^0,w,c
 25901  015494  6E05               	movwf	(btemp+4)^0,c
 25902  015496  500C               	movf	(btemp+11)^0,w,c
 25903  015498  6E06               	movwf	(btemp+5)^0,c
 25904  01549A  6A07               	clrf	(btemp+6)^0,c
 25905  01549C  6A08               	clrf	(btemp+7)^0,c
 25906  01549E  0060  F017  FFE6   	movff	btemp+4,postinc1
 25907  0154A4  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25908  0154AA  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25909  0154B0  0060  F023  FFE6   	movff	btemp+7,postinc1
 25910  0154B6  0E00               	movlw	0
 25911  0154B8  6EE6               	movwf	postinc1,c
 25912  0154BA  ECCF  F0C4         	call	___xxtofl	;wreg free
 25913  0154BE  0060  F007  FFE6   	movff	btemp,postinc1
 25914  0154C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25915  0154CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25916  0154D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 25917  0154D6  EC5A  F0DF         	call	___flsub	;wreg free
 25918  0154DA  0060  F007  FFE6   	movff	btemp,postinc1
 25919  0154E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25920  0154E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25921  0154EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 25922  0154F2  EC20  F09F         	call	___flmul	;wreg free
 25923  0154F6  D1AF               	goto	l1829
 25924  0154F8                     l10031:
 25925                           
 25926                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 25927  0154F8  0060  F377  FFE6   	movff	_R+46,postinc1
 25928  0154FE  0060  F37B  FFE6   	movff	_R+47,postinc1
 25929  015504  0060  F37F  FFE6   	movff	_R+48,postinc1
 25930  01550A  0060  F383  FFE6   	movff	_R+49,postinc1
 25931  015510  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 25932  015516  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 25933  01551C  0E00               	movlw	0
 25934  01551E  BE0A               	btfsc	(btemp+9)^0,7,c
 25935  015520  0EFF               	movlw	255
 25936  015522  6E0B               	movwf	(btemp+10)^0,c
 25937  015524  6E0C               	movwf	(btemp+11)^0,c
 25938  015526  0060  F027  FFE6   	movff	btemp+8,postinc1
 25939  01552C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25940  015532  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25941  015538  0060  F033  FFE6   	movff	btemp+11,postinc1
 25942  01553E  0E01               	movlw	1
 25943  015540  6EE6               	movwf	postinc1,c
 25944  015542  ECCF  F0C4         	call	___xxtofl	;wreg free
 25945  015546  0060  F007  FFE6   	movff	btemp,postinc1
 25946  01554C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25947  015552  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25948  015558  0060  F013  FFE6   	movff	btemp+3,postinc1
 25949                           
 25950                           ;stkvar	_chan @ sp[(-8)+-1]
 25951  01555E  0EF7               	movlw	-9
 25952  015560  50E3               	movf	plusw1,w,c
 25953  015562  6EE6               	movwf	postinc1,c
 25954  015564  EC69  F0E4         	call	_get_raw_result	;wreg free
 25955  015568  0060  F004  F00B   	movff	btemp,btemp+10
 25956  01556E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25957  015574  500B               	movf	(btemp+10)^0,w,c
 25958  015576  6E05               	movwf	(btemp+4)^0,c
 25959  015578  500C               	movf	(btemp+11)^0,w,c
 25960  01557A  6E06               	movwf	(btemp+5)^0,c
 25961  01557C  6A07               	clrf	(btemp+6)^0,c
 25962  01557E  6A08               	clrf	(btemp+7)^0,c
 25963  015580  0060  F017  FFE6   	movff	btemp+4,postinc1
 25964  015586  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25965  01558C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25966  015592  0060  F023  FFE6   	movff	btemp+7,postinc1
 25967  015598  0E00               	movlw	0
 25968  01559A  6EE6               	movwf	postinc1,c
 25969  01559C  ECCF  F0C4         	call	___xxtofl	;wreg free
 25970  0155A0  0060  F007  FFE6   	movff	btemp,postinc1
 25971  0155A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25972  0155AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25973  0155B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25974  0155B8  EC5A  F0DF         	call	___flsub	;wreg free
 25975  0155BC  0060  F007  FFE6   	movff	btemp,postinc1
 25976  0155C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25977  0155C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25978  0155CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25979  0155D4  EC20  F09F         	call	___flmul	;wreg free
 25980  0155D8  D13E               	goto	l1829
 25981  0155DA                     l10035:
 25982                           
 25983                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 25984                           ;stkvar	_chan @ sp[(0)+-1]
 25985  0155DA  0EFF               	movlw	-1
 25986  0155DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25987  0155E2  0E00               	movlw	0
 25988  0155E4  6E09               	movwf	(btemp+8)^0,c
 25989  0155E6  0E08               	movlw	8
 25990  0155E8  6E0A               	movwf	(btemp+9)^0,c
 25991  0155EA  2A0C               	incf	(btemp+11)^0,f,c
 25992  0155EC  D003               	goto	u9384
 25993  0155EE                     u9385:
 25994  0155EE  340A               	rlcf	(btemp+9)^0,w,c
 25995  0155F0  320A               	rrcf	(btemp+9)^0,f,c
 25996  0155F2  3209               	rrcf	(btemp+8)^0,f,c
 25997  0155F4                     u9384:
 25998  0155F4  2E0C               	decfsz	(btemp+11)^0,f,c
 25999  0155F6  D7FB               	goto	u9385
 26000  0155F8  A009               	btfss	(btemp+8)^0,0,c
 26001  0155FA  D008               	goto	l10043
 26002                           
 26003                           ;daq.c: 139:     return 25.0;
 26004  0155FC  0E00               	movlw	0
 26005  0155FE  6E01               	movwf	btemp^0,c
 26006  015600  0E00               	movlw	0
 26007  015602  6E02               	movwf	(btemp+1)^0,c
 26008  015604  0EC8               	movlw	200
 26009  015606  6E03               	movwf	(btemp+2)^0,c
 26010  015608  0E41               	movlw	65
 26011  01560A  D113               	goto	L32
 26012  01560C                     l10043:
 26013                           
 26014                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26015  01560C  0E00               	movlw	0
 26016  01560E  6EE6               	movwf	postinc1,c
 26017  015610  0E00               	movlw	0
 26018  015612  6EE6               	movwf	postinc1,c
 26019  015614  0E7A               	movlw	122
 26020  015616  6EE6               	movwf	postinc1,c
 26021  015618  0E44               	movlw	68
 26022  01561A  6EE6               	movwf	postinc1,c
 26023  01561C  0E61               	movlw	97
 26024  01561E  6EE6               	movwf	postinc1,c
 26025  015620  0E03               	movlw	3
 26026  015622  6EE6               	movwf	postinc1,c
 26027  015624  0E84               	movlw	132
 26028  015626  6EE6               	movwf	postinc1,c
 26029  015628  0E40               	movlw	64
 26030  01562A  6EE6               	movwf	postinc1,c
 26031                           
 26032                           ;stkvar	_chan @ sp[(-8)+-1]
 26033  01562C  0EF7               	movlw	-9
 26034  01562E  50E3               	movf	plusw1,w,c
 26035  015630  6EE6               	movwf	postinc1,c
 26036  015632  EC69  F0E4         	call	_get_raw_result	;wreg free
 26037  015636  0060  F004  F00B   	movff	btemp,btemp+10
 26038  01563C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26039  015642  500B               	movf	(btemp+10)^0,w,c
 26040  015644  6E05               	movwf	(btemp+4)^0,c
 26041  015646  500C               	movf	(btemp+11)^0,w,c
 26042  015648  6E06               	movwf	(btemp+5)^0,c
 26043  01564A  6A07               	clrf	(btemp+6)^0,c
 26044  01564C  6A08               	clrf	(btemp+7)^0,c
 26045  01564E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26046  015654  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26047  01565A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26048  015660  0060  F023  FFE6   	movff	btemp+7,postinc1
 26049  015666  0E00               	movlw	0
 26050  015668  6EE6               	movwf	postinc1,c
 26051  01566A  ECCF  F0C4         	call	___xxtofl	;wreg free
 26052  01566E  0060  F007  FFE6   	movff	btemp,postinc1
 26053  015674  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26054  01567A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26055  015680  0060  F013  FFE6   	movff	btemp+3,postinc1
 26056  015686  EC20  F09F         	call	___flmul	;wreg free
 26057  01568A  0060  F007  FFE6   	movff	btemp,postinc1
 26058  015690  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26059  015696  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26060  01569C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26061  0156A2  EC13  F0A7         	call	___fldiv	;wreg free
 26062  0156A6  D0D7               	goto	l1829
 26063  0156A8                     l10047:
 26064                           
 26065                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 26066                           ;stkvar	_chan @ sp[(0)+-1]
 26067  0156A8  0EFF               	movlw	-1
 26068  0156AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26069  0156B0  0E03               	movlw	3
 26070  0156B2  6E09               	movwf	(btemp+8)^0,c
 26071  0156B4  0E00               	movlw	0
 26072  0156B6  6E0A               	movwf	(btemp+9)^0,c
 26073  0156B8  2A0C               	incf	(btemp+11)^0,f,c
 26074  0156BA  D003               	goto	u9404
 26075  0156BC                     u9405:
 26076  0156BC  340A               	rlcf	(btemp+9)^0,w,c
 26077  0156BE  320A               	rrcf	(btemp+9)^0,f,c
 26078  0156C0  3209               	rrcf	(btemp+8)^0,f,c
 26079  0156C2                     u9404:
 26080  0156C2  2E0C               	decfsz	(btemp+11)^0,f,c
 26081  0156C4  D7FB               	goto	u9405
 26082  0156C6  B009               	btfsc	(btemp+8)^0,0,c
 26083  0156C8  D011               	goto	u9430
 26084                           
 26085                           ;stkvar	_chan @ sp[(0)+-1]
 26086  0156CA  0EFF               	movlw	-1
 26087  0156CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26088  0156D2  0E00               	movlw	0
 26089  0156D4  6E09               	movwf	(btemp+8)^0,c
 26090  0156D6  0E08               	movlw	8
 26091  0156D8  6E0A               	movwf	(btemp+9)^0,c
 26092  0156DA  2A0C               	incf	(btemp+11)^0,f,c
 26093  0156DC  D003               	goto	u9424
 26094  0156DE                     u9425:
 26095  0156DE  340A               	rlcf	(btemp+9)^0,w,c
 26096  0156E0  320A               	rrcf	(btemp+9)^0,f,c
 26097  0156E2  3209               	rrcf	(btemp+8)^0,f,c
 26098  0156E4                     u9424:
 26099  0156E4  2E0C               	decfsz	(btemp+11)^0,f,c
 26100  0156E6  D7FB               	goto	u9425
 26101  0156E8  A009               	btfss	(btemp+8)^0,0,c
 26102  0156EA  D04E               	goto	l10055
 26103  0156EC                     u9430:
 26104                           
 26105                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 26106  0156EC  0E00               	movlw	0
 26107  0156EE  6EE6               	movwf	postinc1,c
 26108  0156F0  0E00               	movlw	0
 26109  0156F2  6EE6               	movwf	postinc1,c
 26110  0156F4  0E7A               	movlw	122
 26111  0156F6  6EE6               	movwf	postinc1,c
 26112  0156F8  0E44               	movlw	68
 26113  0156FA  6EE6               	movwf	postinc1,c
 26114  0156FC  0E00               	movlw	0
 26115  0156FE  6EE6               	movwf	postinc1,c
 26116  015700  0E00               	movlw	0
 26117  015702  6EE6               	movwf	postinc1,c
 26118  015704  0E20               	movlw	32
 26119  015706  6EE6               	movwf	postinc1,c
 26120  015708  0E3F               	movlw	63
 26121  01570A  6EE6               	movwf	postinc1,c
 26122                           
 26123                           ;stkvar	_chan @ sp[(-8)+-1]
 26124  01570C  0EF7               	movlw	-9
 26125  01570E  50E3               	movf	plusw1,w,c
 26126  015710  6EE6               	movwf	postinc1,c
 26127  015712  EC69  F0E4         	call	_get_raw_result	;wreg free
 26128  015716  0060  F004  F00B   	movff	btemp,btemp+10
 26129  01571C  0060  F008  F00C   	movff	btemp+1,btemp+11
 26130  015722  500B               	movf	(btemp+10)^0,w,c
 26131  015724  6E05               	movwf	(btemp+4)^0,c
 26132  015726  500C               	movf	(btemp+11)^0,w,c
 26133  015728  6E06               	movwf	(btemp+5)^0,c
 26134  01572A  6A07               	clrf	(btemp+6)^0,c
 26135  01572C  6A08               	clrf	(btemp+7)^0,c
 26136  01572E  0060  F017  FFE6   	movff	btemp+4,postinc1
 26137  015734  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26138  01573A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26139  015740  0060  F023  FFE6   	movff	btemp+7,postinc1
 26140  015746  0E00               	movlw	0
 26141  015748  6EE6               	movwf	postinc1,c
 26142  01574A  ECCF  F0C4         	call	___xxtofl	;wreg free
 26143  01574E  0060  F007  FFE6   	movff	btemp,postinc1
 26144  015754  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26145  01575A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26146  015760  0060  F013  FFE6   	movff	btemp+3,postinc1
 26147  015766  EC20  F09F         	call	___flmul	;wreg free
 26148  01576A  0060  F007  FFE6   	movff	btemp,postinc1
 26149  015770  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26150  015776  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26151  01577C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26152  015782  EC13  F0A7         	call	___fldiv	;wreg free
 26153  015786  D067               	goto	l1829
 26154  015788                     l10055:
 26155                           
 26156                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 26157  015788  0E00               	movlw	0
 26158  01578A  6EE6               	movwf	postinc1,c
 26159  01578C  0E00               	movlw	0
 26160  01578E  6EE6               	movwf	postinc1,c
 26161  015790  0E7A               	movlw	122
 26162  015792  6EE6               	movwf	postinc1,c
 26163  015794  0E44               	movlw	68
 26164  015796  6EE6               	movwf	postinc1,c
 26165  015798  0E61               	movlw	97
 26166  01579A  6EE6               	movwf	postinc1,c
 26167  01579C  0E03               	movlw	3
 26168  01579E  6EE6               	movwf	postinc1,c
 26169  0157A0  0E84               	movlw	132
 26170  0157A2  6EE6               	movwf	postinc1,c
 26171  0157A4  0E40               	movlw	64
 26172  0157A6  6EE6               	movwf	postinc1,c
 26173                           
 26174                           ;stkvar	_chan @ sp[(-8)+-1]
 26175  0157A8  0EF7               	movlw	-9
 26176  0157AA  50E3               	movf	plusw1,w,c
 26177  0157AC  6EE6               	movwf	postinc1,c
 26178  0157AE  EC69  F0E4         	call	_get_raw_result	;wreg free
 26179  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 26180  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 26181  0157BE  500B               	movf	(btemp+10)^0,w,c
 26182  0157C0  6E05               	movwf	(btemp+4)^0,c
 26183  0157C2  500C               	movf	(btemp+11)^0,w,c
 26184  0157C4  6E06               	movwf	(btemp+5)^0,c
 26185  0157C6  6A07               	clrf	(btemp+6)^0,c
 26186  0157C8  6A08               	clrf	(btemp+7)^0,c
 26187  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 26188  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26189  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26190  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 26191  0157E2  0E00               	movlw	0
 26192  0157E4  6EE6               	movwf	postinc1,c
 26193  0157E6  ECCF  F0C4         	call	___xxtofl	;wreg free
 26194  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 26195  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26196  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26197  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26198  015802  EC20  F09F         	call	___flmul	;wreg free
 26199  015806  0060  F007  FFE6   	movff	btemp,postinc1
 26200  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26201  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26202  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 26203  01581E  EC13  F0A7         	call	___fldiv	;wreg free
 26204  015822  D019               	goto	l1829
 26205  015824                     l10061:
 26206                           
 26207                           ;daq.c: 152:   return 0.0;
 26208  015824  0E00               	movlw	0
 26209  015826  6E01               	movwf	btemp^0,c
 26210  015828  0E00               	movlw	0
 26211  01582A  6E02               	movwf	(btemp+1)^0,c
 26212  01582C  0E00               	movlw	0
 26213  01582E  6E03               	movwf	(btemp+2)^0,c
 26214  015830  0E00               	movlw	0
 26215  015832                     L32:
 26216  015832  6E04               	movwf	(btemp+3)^0,c
 26217  015834  D010               	goto	l1829
 26218  015836                     l10069:
 26219                           
 26220                           ;stkvar	_to_what @ sp[(0)+-2]
 26221  015836  0EFE               	movlw	-2
 26222  015838  50E3               	movf	plusw1,w,c
 26223  01583A  6E0B               	movwf	(btemp+10)^0,c
 26224  01583C  6A0C               	clrf	(btemp+11)^0,c
 26225                           
 26226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26227                           ; Switch size 1, requested type "simple"
 26228                           ; Number of cases is 1, Range of values is 0 to 0
 26229                           ; switch strategies available:
 26230                           ; Name         Instructions Cycles
 26231                           ; simple_byte            4     3 (average)
 26232                           ;	Chosen strategy is simple_byte
 26233  01583E  500C               	movf	(btemp+11)^0,w,c
 26234  015840  0A00               	xorlw	0	; case 0
 26235  015842  A4D8               	btfss	status,2,c
 26236  015844  D7EF               	goto	l10061
 26237                           
 26238                           ; Switch size 1, requested type "simple"
 26239                           ; Number of cases is 2, Range of values is 0 to 1
 26240                           ; switch strategies available:
 26241                           ; Name         Instructions Cycles
 26242                           ; simple_byte            7     4 (average)
 26243                           ;	Chosen strategy is simple_byte
 26244  015846  500B               	movf	(btemp+10)^0,w,c
 26245  015848  0A00               	xorlw	0	; case 0
 26246  01584A  B4D8               	btfsc	status,2,c
 26247  01584C  D5AA               	goto	l10015
 26248  01584E  0A01               	xorlw	1	; case 1
 26249  015850  B4D8               	btfsc	status,2,c
 26250  015852  D72A               	goto	l10047
 26251  015854  D7E7               	goto	l10061
 26252  015856                     l1829:
 26253                           
 26254                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26255  015856  52E5               	movf	postdec1,f,c
 26256  015858  52E5               	movf	postdec1,f,c
 26257  01585A  0012               	return		;funcret
 26258  01585C                     __end_of_conv_raw_result:
 26259                           	opt callstack 0
 26260                           
 26261 ;; *************** function _nanf *****************
 26262 ;; Defined at:
 26263 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 26264 ;; Parameters:    Size  Location     Type
 26265 ;;  s               2  [STACK] PTR const unsigned char 
 26266 ;;		 -> STR_112(1), STR_74(1), 
 26267 ;; Auto vars:     Size  Location     Type
 26268 ;;  u               4  [STACK] struct .
 26269 ;; Return value:  Size  Location     Type
 26270 ;;                  4  [STACK] float 
 26271 ;; Registers used:
 26272 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26273 ;; Tracked objects:
 26274 ;;		On entry : 0/39
 26275 ;;		On exit  : 0/0
 26276 ;;		Unchanged: 0/0
 26277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26282 ;;Total ram usage:        0 bytes
 26283 ;; Hardware stack levels used:    1
 26284 ;; Hardware stack levels required when called:   15
 26285 ;; This function calls:
 26286 ;;		Nothing
 26287 ;; This function is called by:
 26288 ;;		_conv_raw_result
 26289 ;; This function uses a reentrant model
 26290 ;;
 26291                           
 26292                           	psect	text105
 26293  01B9F8                     __ptext105:
 26294                           	opt callstack 0
 26295  01B9F8                     _nanf:
 26296                           	opt callstack 0
 26297                           
 26298                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26299  01B9F8  52E6               	movf	postinc1,f,c
 26300  01B9FA  52E6               	movf	postinc1,f,c
 26301  01B9FC  52E6               	movf	postinc1,f,c
 26302  01B9FE  52E6               	movf	postinc1,f,c
 26303                           
 26304                           ;incstack = 0
 26305 ;; hardware stack exceeded
 26306  01BA00  0EFF               	movlw	255
 26307  01BA02  6E09               	movwf	(btemp+8)^0,c
 26308  01BA04  0EFF               	movlw	255
 26309  01BA06  6E0A               	movwf	(btemp+9)^0,c
 26310  01BA08  0EFF               	movlw	255
 26311  01BA0A  6E0B               	movwf	(btemp+10)^0,c
 26312  01BA0C  0E7F               	movlw	127
 26313  01BA0E  6E0C               	movwf	(btemp+11)^0,c
 26314                           
 26315                           ;stkvar	_u @ sp[(-4)+0]
 26316  01BA10  0EFC               	movlw	-4
 26317  01BA12  0060  F027  FFE3   	movff	btemp+8,plusw1
 26318  01BA18  0EFD               	movlw	-3
 26319  01BA1A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26320  01BA20  0EFE               	movlw	-2
 26321  01BA22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26322  01BA28  0EFF               	movlw	-1
 26323  01BA2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26324                           
 26325                           ;stkvar	_u @ sp[(-4)+0]
 26326  01BA30  0EFC               	movlw	-4
 26327  01BA32  006F FF8C  F001    	movff	plusw1,btemp
 26328  01BA38  0EFD               	movlw	-3
 26329  01BA3A  006F FF8C  F002    	movff	plusw1,btemp+1
 26330  01BA40  0EFE               	movlw	-2
 26331  01BA42  006F FF8C  F003    	movff	plusw1,btemp+2
 26332  01BA48  0EFF               	movlw	-1
 26333  01BA4A  006F FF8C  F004    	movff	plusw1,btemp+3
 26334                           
 26335                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26336  01BA50  0EFA               	movlw	250
 26337  01BA52  26E1               	addwf	fsr1l,f,c
 26338  01BA54  0EFF               	movlw	255
 26339  01BA56  22E2               	addwfc	fsr1h,f,c
 26340  01BA58  0012               	return		;funcret
 26341  01BA5A                     __end_of_nanf:
 26342                           	opt callstack 0
 26343                           
 26344 ;; *************** function _get_raw_result *****************
 26345 ;; Defined at:
 26346 ;;		line 115 in file "daq.c"
 26347 ;; Parameters:    Size  Location     Type
 26348 ;;  index           1  [STACK] const enum E16590
 26349 ;; Auto vars:     Size  Location     Type
 26350 ;;		None
 26351 ;; Return value:  Size  Location     Type
 26352 ;;                  2  [STACK] unsigned short 
 26353 ;; Registers used:
 26354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 26355 ;; Tracked objects:
 26356 ;;		On entry : 0/1
 26357 ;;		On exit  : 0/0
 26358 ;;		Unchanged: 0/0
 26359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26364 ;;Total ram usage:        0 bytes
 26365 ;; Hardware stack levels used:    1
 26366 ;; Hardware stack levels required when called:   15
 26367 ;; This function calls:
 26368 ;;		Nothing
 26369 ;; This function is called by:
 26370 ;;		_main
 26371 ;;		_current_sensor_cal
 26372 ;;		_conv_raw_result
 26373 ;;		_cal_current_zero
 26374 ;; This function uses a reentrant model
 26375 ;;
 26376                           
 26377                           	psect	text106
 26378  01C8D2                     __ptext106:
 26379                           	opt callstack 0
 26380  01C8D2                     _get_raw_result:
 26381                           	opt callstack 0
 26382                           
 26383                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 26384                           ;stkvar	_index @ sp[(0)+-1]
 26385                           
 26386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26387                           ;incstack = 0
 26388 ;; hardware stack exceeded
 26389  01C8D2  0EFF               	movlw	-1
 26390  01C8D4  50E3               	movf	plusw1,w,c
 26391  01C8D6  0D02               	mullw	2
 26392  01C8D8  50F3               	movf	243,w,c
 26393  01C8DA  0FAF               	addlw	low _R
 26394  01C8DC  6ED9               	movwf	fsr2l,c
 26395  01C8DE  6ADA               	clrf	fsr2h,c
 26396  01C8E0  006F FF78  F001    	movff	postinc2,btemp
 26397  01C8E6  006F FF74  F002    	movff	postdec2,btemp+1
 26398                           
 26399                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 26400  01C8EC  52E5               	movf	postdec1,f,c
 26401  01C8EE  0012               	return		;funcret
 26402  01C8F0                     __end_of_get_raw_result:
 26403                           	opt callstack 0
 26404                           
 26405 ;; *************** function ___xxtofl *****************
 26406 ;; Defined at:
 26407 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 26408 ;; Parameters:    Size  Location     Type
 26409 ;;  sign            1  [STACK] unsigned char 
 26410 ;;  val             4  [STACK] long 
 26411 ;; Auto vars:     Size  Location     Type
 26412 ;;  arg             4  [STACK] unsigned long 
 26413 ;;  exp             1  [STACK] unsigned char 
 26414 ;; Return value:  Size  Location     Type
 26415 ;;                  4  [STACK] unsigned char 
 26416 ;; Registers used:
 26417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26418 ;; Tracked objects:
 26419 ;;		On entry : 0/0
 26420 ;;		On exit  : 0/0
 26421 ;;		Unchanged: 0/0
 26422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26427 ;;Total ram usage:        0 bytes
 26428 ;; Hardware stack levels used:    1
 26429 ;; Hardware stack levels required when called:   15
 26430 ;; This function calls:
 26431 ;;		Nothing
 26432 ;; This function is called by:
 26433 ;;		_conv_raw_result
 26434 ;;		_init_bsoc
 26435 ;; This function uses a reentrant model
 26436 ;;
 26437                           
 26438                           	psect	text107
 26439  01899E                     __ptext107:
 26440                           	opt callstack 0
 26441  01899E                     ___xxtofl:
 26442                           	opt callstack 0
 26443                           
 26444                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26445  01899E  0E05               	movlw	5
 26446  0189A0  26E1               	addwf	fsr1l,f,c
 26447  0189A2  0E00               	movlw	0
 26448  0189A4  22E2               	addwfc	fsr1h,f,c
 26449                           
 26450                           ;stkvar	_sign @ sp[(-5)+-1]
 26451                           
 26452                           ;incstack = 0
 26453 ;; hardware stack exceeded
 26454  0189A6  0EFA               	movlw	-6
 26455  0189A8  50E3               	movf	plusw1,w,c
 26456  0189AA  B4D8               	btfsc	status,2,c
 26457  0189AC  D01D               	goto	l9963
 26458                           
 26459                           ;stkvar	_val @ sp[(-5)+-5]
 26460  0189AE  0EF9               	movlw	-7
 26461  0189B0  AEE3               	btfss	plusw1,7,c
 26462  0189B2  D01A               	goto	l9963
 26463                           
 26464                           ;stkvar	_val @ sp[(-5)+-5]
 26465  0189B4  0EF6               	movlw	-10
 26466  0189B6  006F FF8C  F009    	movff	plusw1,btemp+8
 26467  0189BC  0EF7               	movlw	-9
 26468  0189BE  006F FF8C  F00A    	movff	plusw1,btemp+9
 26469  0189C4  0EF8               	movlw	-8
 26470  0189C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 26471  0189CC  0EF9               	movlw	-7
 26472  0189CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26473  0189D4  1E09               	comf	(btemp+8)^0,f,c
 26474  0189D6  1E0A               	comf	(btemp+9)^0,f,c
 26475  0189D8  1E0B               	comf	(btemp+10)^0,f,c
 26476  0189DA  1E0C               	comf	(btemp+11)^0,f,c
 26477  0189DC  2A09               	incf	(btemp+8)^0,f,c
 26478  0189DE  0E00               	movlw	0
 26479  0189E0  220A               	addwfc	(btemp+9)^0,f,c
 26480  0189E2  220B               	addwfc	(btemp+10)^0,f,c
 26481  0189E4  220C               	addwfc	(btemp+11)^0,f,c
 26482  0189E6  D010               	goto	L33
 26483  0189E8                     l9963:
 26484                           
 26485                           ;stkvar	_val @ sp[(-5)+-5]
 26486  0189E8  0EF6               	movlw	-10
 26487  0189EA  006F FF8C  F009    	movff	plusw1,btemp+8
 26488  0189F0  0EF7               	movlw	-9
 26489  0189F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 26490  0189F8  0EF8               	movlw	-8
 26491  0189FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 26492  018A00  0EF9               	movlw	-7
 26493  018A02  006F FF8C  F00C    	movff	plusw1,btemp+11
 26494  018A08                     L33:
 26495                           
 26496                           ;stkvar	_arg @ sp[(-5)+0]
 26497  018A08  0EFB               	movlw	-5
 26498  018A0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26499  018A10  0EFC               	movlw	-4
 26500  018A12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26501  018A18  0EFD               	movlw	-3
 26502  018A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26503  018A20  0EFE               	movlw	-2
 26504  018A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 26505                           
 26506                           ;stkvar	_val @ sp[(-5)+-5]
 26507  018A28  0EF6               	movlw	-10
 26508  018A2A  50E3               	movf	plusw1,w,c
 26509  018A2C  E113               	bnz	l9971
 26510  018A2E  0EF7               	movlw	-9
 26511  018A30  50E3               	movf	plusw1,w,c
 26512  018A32  E110               	bnz	l9971
 26513  018A34  0EF8               	movlw	-8
 26514  018A36  50E3               	movf	plusw1,w,c
 26515  018A38  E10D               	bnz	l9971
 26516  018A3A  0EF9               	movlw	-7
 26517  018A3C  50E3               	movf	plusw1,w,c
 26518  018A3E  A4D8               	btfss	status,2,c
 26519  018A40  D009               	goto	l9971
 26520  018A42  0E00               	movlw	0
 26521  018A44  6E01               	movwf	btemp^0,c
 26522  018A46  0E00               	movlw	0
 26523  018A48  6E02               	movwf	(btemp+1)^0,c
 26524  018A4A  0E00               	movlw	0
 26525  018A4C  6E03               	movwf	(btemp+2)^0,c
 26526  018A4E  0E00               	movlw	0
 26527  018A50  6E04               	movwf	(btemp+3)^0,c
 26528  018A52  D0A2               	goto	l3174
 26529  018A54                     l9971:
 26530  018A54  0E96               	movlw	150
 26531  018A56  6E0C               	movwf	(btemp+11)^0,c
 26532                           
 26533                           ;stkvar	_exp @ sp[(-5)+4]
 26534  018A58  0EFF               	movlw	-1
 26535  018A5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26536  018A60  D00B               	goto	l9975
 26537  018A62                     l9973:
 26538                           
 26539                           ;stkvar	_exp @ sp[(-5)+4]
 26540  018A62  0EFF               	movlw	-1
 26541  018A64  2AE3               	incf	plusw1,f,c
 26542                           
 26543                           ;stkvar	_arg @ sp[(-5)+0]
 26544  018A66  90D8               	bcf	status,0,c
 26545  018A68  0EFE               	movlw	-2
 26546  018A6A  32E3               	rrcf	plusw1,f,c
 26547  018A6C  0EFD               	movlw	-3
 26548  018A6E  32E3               	rrcf	plusw1,f,c
 26549  018A70  0EFC               	movlw	-4
 26550  018A72  32E3               	rrcf	plusw1,f,c
 26551  018A74  0EFB               	movlw	-5
 26552  018A76  32E3               	rrcf	plusw1,f,c
 26553  018A78                     l9975:
 26554                           
 26555                           ;stkvar	_arg @ sp[(-5)+0]
 26556  018A78  50E1               	movf	fsr1l,w,c
 26557  018A7A  0FFB               	addlw	-5
 26558  018A7C  6ED9               	movwf	fsr2l,c
 26559  018A7E  50E2               	movf	fsr1h,w,c
 26560  018A80  6EDA               	movwf	fsr2h,c
 26561  018A82  0EFF               	movlw	255
 26562  018A84  22DA               	addwfc	fsr2h,f,c
 26563  018A86  52DE               	movf	postinc2,f,c
 26564  018A88  52DE               	movf	postinc2,f,c
 26565  018A8A  52DE               	movf	postinc2,f,c
 26566  018A8C  0EFE               	movlw	254
 26567  018A8E  14DD               	andwf	postdec2,w,c
 26568  018A90  B4D8               	btfsc	status,2,c
 26569  018A92  D018               	goto	l9983
 26570  018A94  D7E6               	goto	l9973
 26571  018A96                     l9977:
 26572                           
 26573                           ;stkvar	_exp @ sp[(-5)+4]
 26574  018A96  0EFF               	movlw	-1
 26575  018A98  2AE3               	incf	plusw1,f,c
 26576                           
 26577                           ;stkvar	_arg @ sp[(-5)+0]
 26578  018A9A  50E1               	movf	fsr1l,w,c
 26579  018A9C  0FFB               	addlw	-5
 26580  018A9E  6ED9               	movwf	fsr2l,c
 26581  018AA0  50E2               	movf	fsr1h,w,c
 26582  018AA2  6EDA               	movwf	fsr2h,c
 26583  018AA4  0EFF               	movlw	255
 26584  018AA6  22DA               	addwfc	fsr2h,f,c
 26585  018AA8  2ADE               	incf	postinc2,f,c
 26586  018AAA  0E00               	movlw	0
 26587  018AAC  22DE               	addwfc	postinc2,f,c
 26588  018AAE  22DE               	addwfc	postinc2,f,c
 26589  018AB0  22DE               	addwfc	postinc2,f,c
 26590                           
 26591                           ;stkvar	_arg @ sp[(-5)+0]
 26592  018AB2  90D8               	bcf	status,0,c
 26593  018AB4  0EFE               	movlw	-2
 26594  018AB6  32E3               	rrcf	plusw1,f,c
 26595  018AB8  0EFD               	movlw	-3
 26596  018ABA  32E3               	rrcf	plusw1,f,c
 26597  018ABC  0EFC               	movlw	-4
 26598  018ABE  32E3               	rrcf	plusw1,f,c
 26599  018AC0  0EFB               	movlw	-5
 26600  018AC2  32E3               	rrcf	plusw1,f,c
 26601  018AC4                     l9983:
 26602                           
 26603                           ;stkvar	_arg @ sp[(-5)+0]
 26604  018AC4  50E1               	movf	fsr1l,w,c
 26605  018AC6  0FFB               	addlw	-5
 26606  018AC8  6ED9               	movwf	fsr2l,c
 26607  018ACA  50E2               	movf	fsr1h,w,c
 26608  018ACC  6EDA               	movwf	fsr2h,c
 26609  018ACE  0EFF               	movlw	255
 26610  018AD0  22DA               	addwfc	fsr2h,f,c
 26611  018AD2  52DE               	movf	postinc2,f,c
 26612  018AD4  52DE               	movf	postinc2,f,c
 26613  018AD6  52DE               	movf	postinc2,f,c
 26614  018AD8  0EFF               	movlw	255
 26615  018ADA  14DD               	andwf	postdec2,w,c
 26616  018ADC  B4D8               	btfsc	status,2,c
 26617  018ADE  D00C               	goto	l9987
 26618  018AE0  D7DA               	goto	l9977
 26619  018AE2                     l9985:
 26620                           
 26621                           ;stkvar	_exp @ sp[(-5)+4]
 26622  018AE2  0EFF               	movlw	-1
 26623  018AE4  06E3               	decf	plusw1,f,c
 26624                           
 26625                           ;stkvar	_arg @ sp[(-5)+0]
 26626  018AE6  90D8               	bcf	status,0,c
 26627  018AE8  0EFB               	movlw	-5
 26628  018AEA  36E3               	rlcf	plusw1,f,c
 26629  018AEC  0EFC               	movlw	-4
 26630  018AEE  36E3               	rlcf	plusw1,f,c
 26631  018AF0  0EFD               	movlw	-3
 26632  018AF2  36E3               	rlcf	plusw1,f,c
 26633  018AF4  0EFE               	movlw	-2
 26634  018AF6  36E3               	rlcf	plusw1,f,c
 26635  018AF8                     l9987:
 26636                           
 26637                           ;stkvar	_arg @ sp[(-5)+0]
 26638  018AF8  0EFD               	movlw	-3
 26639  018AFA  BEE3               	btfsc	plusw1,7,c
 26640  018AFC  D007               	goto	u9280
 26641                           
 26642                           ;stkvar	_exp @ sp[(-5)+4]
 26643  018AFE  0EFF               	movlw	-1
 26644  018B00  006F FF8C  F001    	movff	plusw1,btemp
 26645  018B06  0E02               	movlw	2
 26646  018B08  6001               	cpfslt	btemp^0,c
 26647  018B0A  D7EB               	goto	l9985
 26648  018B0C                     u9280:
 26649                           
 26650                           ;stkvar	_exp @ sp[(-5)+4]
 26651  018B0C  0EFF               	movlw	-1
 26652  018B0E  B0E3               	btfsc	plusw1,0,c
 26653  018B10  D002               	goto	l9995
 26654                           
 26655                           ;stkvar	_arg @ sp[(-5)+0]
 26656  018B12  0EFD               	movlw	-3
 26657  018B14  9EE3               	bcf	plusw1,7,c
 26658  018B16                     l9995:
 26659                           
 26660                           ;stkvar	_exp @ sp[(-5)+4]
 26661  018B16  50E1               	movf	fsr1l,w,c
 26662  018B18  0FFF               	addlw	-1
 26663  018B1A  6ED9               	movwf	fsr2l,c
 26664  018B1C  50E2               	movf	fsr1h,w,c
 26665  018B1E  6EDA               	movwf	fsr2h,c
 26666  018B20  0EFF               	movlw	255
 26667  018B22  22DA               	addwfc	fsr2h,f,c
 26668  018B24  90D8               	bcf	status,0,c
 26669  018B26  32DF               	rrcf	indf2,f,c
 26670                           
 26671                           ;stkvar	_exp @ sp[(-5)+4]
 26672  018B28  0EFF               	movlw	-1
 26673  018B2A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26674  018B30  0060  F030  F005   	movff	btemp+11,btemp+4
 26675  018B36  6A06               	clrf	(btemp+5)^0,c
 26676  018B38  6A07               	clrf	(btemp+6)^0,c
 26677  018B3A  6A08               	clrf	(btemp+7)^0,c
 26678  018B3C  0060  F014  F008   	movff	btemp+4,btemp+7
 26679  018B42  6A07               	clrf	(btemp+6)^0,c
 26680  018B44  6A06               	clrf	(btemp+5)^0,c
 26681  018B46  6A05               	clrf	(btemp+4)^0,c
 26682                           
 26683                           ;stkvar	_arg @ sp[(-5)+0]
 26684  018B48  50E1               	movf	fsr1l,w,c
 26685  018B4A  0FFB               	addlw	-5
 26686  018B4C  6ED9               	movwf	fsr2l,c
 26687  018B4E  50E2               	movf	fsr1h,w,c
 26688  018B50  6EDA               	movwf	fsr2h,c
 26689  018B52  0EFF               	movlw	255
 26690  018B54  22DA               	addwfc	fsr2h,f,c
 26691  018B56  5005               	movf	(btemp+4)^0,w,c
 26692  018B58  12DE               	iorwf	postinc2,f,c
 26693  018B5A  5006               	movf	(btemp+5)^0,w,c
 26694  018B5C  12DE               	iorwf	postinc2,f,c
 26695  018B5E  5007               	movf	(btemp+6)^0,w,c
 26696  018B60  12DE               	iorwf	postinc2,f,c
 26697  018B62  5008               	movf	(btemp+7)^0,w,c
 26698  018B64  12DE               	iorwf	postinc2,f,c
 26699                           
 26700                           ;stkvar	_sign @ sp[(-5)+-1]
 26701  018B66  0EFA               	movlw	-6
 26702  018B68  50E3               	movf	plusw1,w,c
 26703  018B6A  B4D8               	btfsc	status,2,c
 26704  018B6C  D005               	goto	l10005
 26705                           
 26706                           ;stkvar	_val @ sp[(-5)+-5]
 26707  018B6E  0EF9               	movlw	-7
 26708  018B70  AEE3               	btfss	plusw1,7,c
 26709  018B72  D002               	goto	l10005
 26710                           
 26711                           ;stkvar	_arg @ sp[(-5)+0]
 26712  018B74  0EFE               	movlw	-2
 26713  018B76  8EE3               	bsf	plusw1,7,c
 26714  018B78                     l10005:
 26715                           
 26716                           ;stkvar	_arg @ sp[(-5)+0]
 26717  018B78  0EFB               	movlw	-5
 26718  018B7A  006F FF8C  F001    	movff	plusw1,btemp
 26719  018B80  0EFC               	movlw	-4
 26720  018B82  006F FF8C  F002    	movff	plusw1,btemp+1
 26721  018B88  0EFD               	movlw	-3
 26722  018B8A  006F FF8C  F003    	movff	plusw1,btemp+2
 26723  018B90  0EFE               	movlw	-2
 26724  018B92  006F FF8C  F004    	movff	plusw1,btemp+3
 26725  018B98                     l3174:
 26726                           
 26727                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 26728  018B98  0EF6               	movlw	246
 26729  018B9A  26E1               	addwf	fsr1l,f,c
 26730  018B9C  0EFF               	movlw	255
 26731  018B9E  22E2               	addwfc	fsr1h,f,c
 26732  018BA0  0012               	return		;funcret
 26733  018BA2                     __end_of___xxtofl:
 26734                           	opt callstack 0
 26735                           
 26736 ;; *************** function ___fldiv *****************
 26737 ;; Defined at:
 26738 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 26739 ;; Parameters:    Size  Location     Type
 26740 ;;  b               4  [STACK] unsigned char 
 26741 ;;  a               4  [STACK] unsigned char 
 26742 ;; Auto vars:     Size  Location     Type
 26743 ;;  grs             4  [STACK] unsigned long 
 26744 ;;  rem             4  [STACK] unsigned long 
 26745 ;;  new_exp         2  [STACK] short 
 26746 ;;  aexp            1  [STACK] unsigned char 
 26747 ;;  bexp            1  [STACK] unsigned char 
 26748 ;;  sign            1  [STACK] unsigned char 
 26749 ;; Return value:  Size  Location     Type
 26750 ;;                  4  [STACK] unsigned char 
 26751 ;; Registers used:
 26752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 26753 ;; Tracked objects:
 26754 ;;		On entry : 0/0
 26755 ;;		On exit  : 0/0
 26756 ;;		Unchanged: 0/0
 26757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26762 ;;Total ram usage:        0 bytes
 26763 ;; Hardware stack levels used:    1
 26764 ;; Hardware stack levels required when called:   15
 26765 ;; This function calls:
 26766 ;;		Nothing
 26767 ;; This function is called by:
 26768 ;;		_conv_raw_result
 26769 ;;		_convert_dac_raw
 26770 ;;		_calc_bsoc
 26771 ;;		_init_bsoc
 26772 ;;		_esr_check
 26773 ;;		_efgtoa
 26774 ;; This function uses a reentrant model
 26775 ;;
 26776                           
 26777                           	psect	text108
 26778  014E26                     __ptext108:
 26779                           	opt callstack 0
 26780  014E26                     ___fldiv:
 26781                           	opt callstack 0
 26782                           
 26783                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26784  014E26  0E0D               	movlw	13
 26785  014E28  26E1               	addwf	fsr1l,f,c
 26786  014E2A  0E00               	movlw	0
 26787  014E2C  22E2               	addwfc	fsr1h,f,c
 26788                           
 26789                           ;stkvar	_b @ sp[(-13)+-4]
 26790                           
 26791                           ;incstack = 0
 26792 ;; hardware stack exceeded
 26793  014E2E  0EF2               	movlw	242
 26794  014E30  24E1               	addwf	fsr1l,w,c
 26795  014E32  6ED9               	movwf	fsr2l,c
 26796  014E34  0EFF               	movlw	255
 26797  014E36  20E2               	addwfc	fsr1h,w,c
 26798  014E38  6EDA               	movwf	fsr2h,c
 26799  014E3A  50DF               	movf	indf2,w,c
 26800  014E3C  6E0C               	movwf	(btemp+11)^0,c
 26801  014E3E  0E80               	movlw	128
 26802  014E40  160C               	andwf	(btemp+11)^0,f,c
 26803                           
 26804                           ;stkvar	_sign @ sp[(-13)+12]
 26805  014E42  0EFF               	movlw	-1
 26806  014E44  0060  F033  FFE3   	movff	btemp+11,plusw1
 26807                           
 26808                           ;stkvar	_b @ sp[(-13)+-4]
 26809  014E4A  0EF2               	movlw	242
 26810  014E4C  24E1               	addwf	fsr1l,w,c
 26811  014E4E  6ED9               	movwf	fsr2l,c
 26812  014E50  0EFF               	movlw	255
 26813  014E52  20E2               	addwfc	fsr1h,w,c
 26814  014E54  6EDA               	movwf	fsr2h,c
 26815  014E56  50DF               	movf	indf2,w,c
 26816  014E58  6E0C               	movwf	(btemp+11)^0,c
 26817  014E5A  90D8               	bcf	status,0,c
 26818  014E5C  340C               	rlcf	(btemp+11)^0,w,c
 26819  014E5E  6E0B               	movwf	(btemp+10)^0,c
 26820                           
 26821                           ;stkvar	_bexp @ sp[(-13)+11]
 26822  014E60  0EFE               	movlw	-2
 26823  014E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26824                           
 26825                           ;stkvar	_b @ sp[(-13)+-4]
 26826  014E68  0EF1               	movlw	241
 26827  014E6A  24E1               	addwf	fsr1l,w,c
 26828  014E6C  6ED9               	movwf	fsr2l,c
 26829  014E6E  0EFF               	movlw	255
 26830  014E70  20E2               	addwfc	fsr1h,w,c
 26831  014E72  6EDA               	movwf	fsr2h,c
 26832  014E74  AEDF               	btfss	indf2,7,c
 26833  014E76  D002               	goto	l8535
 26834                           
 26835                           ;stkvar	_bexp @ sp[(-13)+11]
 26836  014E78  0EFE               	movlw	-2
 26837  014E7A  80E3               	bsf	plusw1,0,c
 26838  014E7C                     l8535:
 26839                           
 26840                           ;stkvar	_bexp @ sp[(-13)+11]
 26841  014E7C  0EFE               	movlw	-2
 26842  014E7E  50E3               	movf	plusw1,w,c
 26843  014E80  B4D8               	btfsc	status,2,c
 26844  014E82  D027               	goto	l8545
 26845                           
 26846                           ;stkvar	_bexp @ sp[(-13)+11]
 26847  014E84  0EFE               	movlw	-2
 26848  014E86  28E3               	incf	plusw1,w,c
 26849  014E88  A4D8               	btfss	status,2,c
 26850  014E8A  D018               	goto	l8541
 26851  014E8C  0E00               	movlw	0
 26852  014E8E  6E09               	movwf	(btemp+8)^0,c
 26853  014E90  0E00               	movlw	0
 26854  014E92  6E0A               	movwf	(btemp+9)^0,c
 26855  014E94  0E00               	movlw	0
 26856  014E96  6E0B               	movwf	(btemp+10)^0,c
 26857  014E98  0E00               	movlw	0
 26858  014E9A  6E0C               	movwf	(btemp+11)^0,c
 26859                           
 26860                           ;stkvar	_b @ sp[(-13)+-4]
 26861  014E9C  0EEF               	movlw	-17
 26862  014E9E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26863  014EA4  0EF0               	movlw	-16
 26864  014EA6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26865  014EAC  0EF1               	movlw	-15
 26866  014EAE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26867  014EB4  0EF2               	movlw	-14
 26868  014EB6  0060  F033  FFE3   	movff	btemp+11,plusw1
 26869  014EBC                     l8541:
 26870                           
 26871                           ;stkvar	_b @ sp[(-13)+-4]
 26872  014EBC  0EF1               	movlw	-15
 26873  014EBE  8EE3               	bsf	plusw1,7,c
 26874                           
 26875                           ;stkvar	_b @ sp[(-13)+-4]
 26876  014EC0  0EF2               	movlw	242
 26877  014EC2  24E1               	addwf	fsr1l,w,c
 26878  014EC4  6ED9               	movwf	fsr2l,c
 26879  014EC6  0EFF               	movlw	255
 26880  014EC8  20E2               	addwfc	fsr1h,w,c
 26881  014ECA  6EDA               	movwf	fsr2h,c
 26882  014ECC  0E00               	movlw	0
 26883  014ECE  6EDF               	movwf	indf2,c
 26884  014ED0  D018               	goto	l8547
 26885  014ED2                     l8545:
 26886  014ED2  0E00               	movlw	0
 26887  014ED4  6E09               	movwf	(btemp+8)^0,c
 26888  014ED6  0E00               	movlw	0
 26889  014ED8  6E0A               	movwf	(btemp+9)^0,c
 26890  014EDA  0E00               	movlw	0
 26891  014EDC  6E0B               	movwf	(btemp+10)^0,c
 26892  014EDE  0E00               	movlw	0
 26893  014EE0  6E0C               	movwf	(btemp+11)^0,c
 26894                           
 26895                           ;stkvar	_b @ sp[(-13)+-4]
 26896  014EE2  0EEF               	movlw	-17
 26897  014EE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26898  014EEA  0EF0               	movlw	-16
 26899  014EEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26900  014EF2  0EF1               	movlw	-15
 26901  014EF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26902  014EFA  0EF2               	movlw	-14
 26903  014EFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26904  014F02                     l8547:
 26905                           
 26906                           ;stkvar	_a @ sp[(-13)+-8]
 26907  014F02  0EEE               	movlw	238
 26908  014F04  24E1               	addwf	fsr1l,w,c
 26909  014F06  6ED9               	movwf	fsr2l,c
 26910  014F08  0EFF               	movlw	255
 26911  014F0A  20E2               	addwfc	fsr1h,w,c
 26912  014F0C  6EDA               	movwf	fsr2h,c
 26913  014F0E  50DF               	movf	indf2,w,c
 26914  014F10  6E0C               	movwf	(btemp+11)^0,c
 26915  014F12  0E80               	movlw	128
 26916  014F14  160C               	andwf	(btemp+11)^0,f,c
 26917                           
 26918                           ;stkvar	_sign @ sp[(-13)+12]
 26919  014F16  50E1               	movf	fsr1l,w,c
 26920  014F18  0FFF               	addlw	-1
 26921  014F1A  6ED9               	movwf	fsr2l,c
 26922  014F1C  50E2               	movf	fsr1h,w,c
 26923  014F1E  6EDA               	movwf	fsr2h,c
 26924  014F20  0EFF               	movlw	255
 26925  014F22  22DA               	addwfc	fsr2h,f,c
 26926  014F24  500C               	movf	(btemp+11)^0,w,c
 26927  014F26  1ADF               	xorwf	indf2,f,c
 26928                           
 26929                           ;stkvar	_a @ sp[(-13)+-8]
 26930  014F28  0EEE               	movlw	238
 26931  014F2A  24E1               	addwf	fsr1l,w,c
 26932  014F2C  6ED9               	movwf	fsr2l,c
 26933  014F2E  0EFF               	movlw	255
 26934  014F30  20E2               	addwfc	fsr1h,w,c
 26935  014F32  6EDA               	movwf	fsr2h,c
 26936  014F34  50DF               	movf	indf2,w,c
 26937  014F36  6E0C               	movwf	(btemp+11)^0,c
 26938  014F38  90D8               	bcf	status,0,c
 26939  014F3A  340C               	rlcf	(btemp+11)^0,w,c
 26940  014F3C  6E0B               	movwf	(btemp+10)^0,c
 26941                           
 26942                           ;stkvar	_aexp @ sp[(-13)+10]
 26943  014F3E  0EFD               	movlw	-3
 26944  014F40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26945                           
 26946                           ;stkvar	_a @ sp[(-13)+-8]
 26947  014F46  0EED               	movlw	237
 26948  014F48  24E1               	addwf	fsr1l,w,c
 26949  014F4A  6ED9               	movwf	fsr2l,c
 26950  014F4C  0EFF               	movlw	255
 26951  014F4E  20E2               	addwfc	fsr1h,w,c
 26952  014F50  6EDA               	movwf	fsr2h,c
 26953  014F52  AEDF               	btfss	indf2,7,c
 26954  014F54  D002               	goto	l8555
 26955                           
 26956                           ;stkvar	_aexp @ sp[(-13)+10]
 26957  014F56  0EFD               	movlw	-3
 26958  014F58  80E3               	bsf	plusw1,0,c
 26959  014F5A                     l8555:
 26960                           
 26961                           ;stkvar	_aexp @ sp[(-13)+10]
 26962  014F5A  0EFD               	movlw	-3
 26963  014F5C  50E3               	movf	plusw1,w,c
 26964  014F5E  B4D8               	btfsc	status,2,c
 26965  014F60  D027               	goto	l8565
 26966                           
 26967                           ;stkvar	_aexp @ sp[(-13)+10]
 26968  014F62  0EFD               	movlw	-3
 26969  014F64  28E3               	incf	plusw1,w,c
 26970  014F66  A4D8               	btfss	status,2,c
 26971  014F68  D018               	goto	l8561
 26972  014F6A  0E00               	movlw	0
 26973  014F6C  6E09               	movwf	(btemp+8)^0,c
 26974  014F6E  0E00               	movlw	0
 26975  014F70  6E0A               	movwf	(btemp+9)^0,c
 26976  014F72  0E00               	movlw	0
 26977  014F74  6E0B               	movwf	(btemp+10)^0,c
 26978  014F76  0E00               	movlw	0
 26979  014F78  6E0C               	movwf	(btemp+11)^0,c
 26980                           
 26981                           ;stkvar	_a @ sp[(-13)+-8]
 26982  014F7A  0EEB               	movlw	-21
 26983  014F7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 26984  014F82  0EEC               	movlw	-20
 26985  014F84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26986  014F8A  0EED               	movlw	-19
 26987  014F8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26988  014F92  0EEE               	movlw	-18
 26989  014F94  0060  F033  FFE3   	movff	btemp+11,plusw1
 26990  014F9A                     l8561:
 26991                           
 26992                           ;stkvar	_a @ sp[(-13)+-8]
 26993  014F9A  0EED               	movlw	-19
 26994  014F9C  8EE3               	bsf	plusw1,7,c
 26995                           
 26996                           ;stkvar	_a @ sp[(-13)+-8]
 26997  014F9E  0EEE               	movlw	238
 26998  014FA0  24E1               	addwf	fsr1l,w,c
 26999  014FA2  6ED9               	movwf	fsr2l,c
 27000  014FA4  0EFF               	movlw	255
 27001  014FA6  20E2               	addwfc	fsr1h,w,c
 27002  014FA8  6EDA               	movwf	fsr2h,c
 27003  014FAA  0E00               	movlw	0
 27004  014FAC  6EDF               	movwf	indf2,c
 27005  014FAE  D018               	goto	l8567
 27006  014FB0                     l8565:
 27007  014FB0  0E00               	movlw	0
 27008  014FB2  6E09               	movwf	(btemp+8)^0,c
 27009  014FB4  0E00               	movlw	0
 27010  014FB6  6E0A               	movwf	(btemp+9)^0,c
 27011  014FB8  0E00               	movlw	0
 27012  014FBA  6E0B               	movwf	(btemp+10)^0,c
 27013  014FBC  0E00               	movlw	0
 27014  014FBE  6E0C               	movwf	(btemp+11)^0,c
 27015                           
 27016                           ;stkvar	_a @ sp[(-13)+-8]
 27017  014FC0  0EEB               	movlw	-21
 27018  014FC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27019  014FC8  0EEC               	movlw	-20
 27020  014FCA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27021  014FD0  0EED               	movlw	-19
 27022  014FD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27023  014FD8  0EEE               	movlw	-18
 27024  014FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27025  014FE0                     l8567:
 27026                           
 27027                           ;stkvar	_a @ sp[(-13)+-8]
 27028  014FE0  0EEB               	movlw	-21
 27029  014FE2  50E3               	movf	plusw1,w,c
 27030  014FE4  E139               	bnz	l8579
 27031  014FE6  0EEC               	movlw	-20
 27032  014FE8  50E3               	movf	plusw1,w,c
 27033  014FEA  E136               	bnz	l8579
 27034  014FEC  0EED               	movlw	-19
 27035  014FEE  50E3               	movf	plusw1,w,c
 27036  014FF0  E133               	bnz	l8579
 27037  014FF2  0EEE               	movlw	-18
 27038  014FF4  50E3               	movf	plusw1,w,c
 27039  014FF6  A4D8               	btfss	status,2,c
 27040  014FF8  D02F               	goto	l8579
 27041                           
 27042                           ;stkvar	_b @ sp[(-13)+-4]
 27043  014FFA  0EEF               	movlw	-17
 27044  014FFC  6AE3               	clrf	plusw1,c
 27045  014FFE  0EF0               	movlw	-16
 27046  015000  6AE3               	clrf	plusw1,c
 27047  015002  0EF1               	movlw	-15
 27048  015004  6AE3               	clrf	plusw1,c
 27049  015006  0EF2               	movlw	-14
 27050  015008  6AE3               	clrf	plusw1,c
 27051                           
 27052                           ;stkvar	_b @ sp[(-13)+-4]
 27053  01500A  0EF1               	movlw	241
 27054  01500C  24E1               	addwf	fsr1l,w,c
 27055  01500E  6ED9               	movwf	fsr2l,c
 27056  015010  0EFF               	movlw	255
 27057  015012  20E2               	addwfc	fsr1h,w,c
 27058  015014  6EDA               	movwf	fsr2h,c
 27059  015016  0E80               	movlw	128
 27060  015018  12DE               	iorwf	postinc2,f,c
 27061  01501A  0E7F               	movlw	127
 27062  01501C  12DD               	iorwf	postdec2,f,c
 27063  01501E                     l8573:
 27064                           
 27065                           ;stkvar	_sign @ sp[(-13)+12]
 27066  01501E  0EFF               	movlw	-1
 27067  015020  006F FF8C  F00C    	movff	plusw1,btemp+11
 27068                           
 27069                           ;stkvar	_b @ sp[(-13)+-4]
 27070  015026  0EF2               	movlw	242
 27071  015028  24E1               	addwf	fsr1l,w,c
 27072  01502A  6ED9               	movwf	fsr2l,c
 27073  01502C  0EFF               	movlw	255
 27074  01502E  20E2               	addwfc	fsr1h,w,c
 27075  015030  6EDA               	movwf	fsr2h,c
 27076  015032  500C               	movf	(btemp+11)^0,w,c
 27077  015034  12DF               	iorwf	indf2,f,c
 27078                           
 27079                           ;stkvar	_b @ sp[(-13)+-4]
 27080  015036  0EEF               	movlw	-17
 27081  015038  006F FF8C  F001    	movff	plusw1,btemp
 27082  01503E  0EF0               	movlw	-16
 27083  015040  006F FF8C  F002    	movff	plusw1,btemp+1
 27084  015046  0EF1               	movlw	-15
 27085  015048  006F FF8C  F003    	movff	plusw1,btemp+2
 27086  01504E  0EF2               	movlw	-14
 27087  015050  006F FF8C  F004    	movff	plusw1,btemp+3
 27088  015056  D19F               	goto	l3098
 27089  015058                     l8579:
 27090                           
 27091                           ;stkvar	_bexp @ sp[(-13)+11]
 27092  015058  0EFE               	movlw	-2
 27093  01505A  50E3               	movf	plusw1,w,c
 27094  01505C  A4D8               	btfss	status,2,c
 27095  01505E  D009               	goto	l8587
 27096  015060  0E00               	movlw	0
 27097  015062  6E01               	movwf	btemp^0,c
 27098  015064  0E00               	movlw	0
 27099  015066  6E02               	movwf	(btemp+1)^0,c
 27100  015068  0E00               	movlw	0
 27101  01506A  6E03               	movwf	(btemp+2)^0,c
 27102  01506C  0E00               	movlw	0
 27103  01506E  6E04               	movwf	(btemp+3)^0,c
 27104  015070  D192               	goto	l3098
 27105  015072                     l8587:
 27106                           
 27107                           ;stkvar	_bexp @ sp[(-13)+11]
 27108  015072  0EFE               	movlw	-2
 27109  015074  50E3               	movf	plusw1,w,c
 27110  015076  6E0B               	movwf	(btemp+10)^0,c
 27111  015078  6A0C               	clrf	(btemp+11)^0,c
 27112                           
 27113                           ;stkvar	_aexp @ sp[(-13)+10]
 27114  01507A  0EFD               	movlw	-3
 27115  01507C  50E3               	movf	plusw1,w,c
 27116  01507E  5E0B               	subwf	(btemp+10)^0,f,c
 27117  015080  0E00               	movlw	0
 27118  015082  5A0C               	subwfb	(btemp+11)^0,f,c
 27119  015084  0E7F               	movlw	127
 27120  015086  260B               	addwf	(btemp+10)^0,f,c
 27121  015088  0E00               	movlw	0
 27122  01508A  220C               	addwfc	(btemp+11)^0,f,c
 27123                           
 27124                           ;stkvar	_new_exp @ sp[(-13)+8]
 27125  01508C  0EFB               	movlw	-5
 27126  01508E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27127  015094  0EFC               	movlw	-4
 27128  015096  0060  F033  FFE3   	movff	btemp+11,plusw1
 27129                           
 27130                           ;stkvar	_b @ sp[(-13)+-4]
 27131  01509C  0EEF               	movlw	-17
 27132  01509E  006F FF8C  F009    	movff	plusw1,btemp+8
 27133  0150A4  0EF0               	movlw	-16
 27134  0150A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 27135  0150AC  0EF1               	movlw	-15
 27136  0150AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27137  0150B4  0EF2               	movlw	-14
 27138  0150B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27139                           
 27140                           ;stkvar	_rem @ sp[(-13)+4]
 27141  0150BC  0EF7               	movlw	-9
 27142  0150BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27143  0150C4  0EF8               	movlw	-8
 27144  0150C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27145  0150CC  0EF9               	movlw	-7
 27146  0150CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27147  0150D4  0EFA               	movlw	-6
 27148  0150D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27149                           
 27150                           ;stkvar	_b @ sp[(-13)+-4]
 27151  0150DC  0EEF               	movlw	-17
 27152  0150DE  6AE3               	clrf	plusw1,c
 27153  0150E0  0EF0               	movlw	-16
 27154  0150E2  6AE3               	clrf	plusw1,c
 27155  0150E4  0EF1               	movlw	-15
 27156  0150E6  6AE3               	clrf	plusw1,c
 27157  0150E8  0EF2               	movlw	-14
 27158  0150EA  6AE3               	clrf	plusw1,c
 27159                           
 27160                           ;stkvar	_grs @ sp[(-13)+0]
 27161  0150EC  0EF3               	movlw	-13
 27162  0150EE  6AE3               	clrf	plusw1,c
 27163  0150F0  0EF4               	movlw	-12
 27164  0150F2  6AE3               	clrf	plusw1,c
 27165  0150F4  0EF5               	movlw	-11
 27166  0150F6  6AE3               	clrf	plusw1,c
 27167  0150F8  0EF6               	movlw	-10
 27168  0150FA  6AE3               	clrf	plusw1,c
 27169                           
 27170                           ;stkvar	_aexp @ sp[(-13)+10]
 27171  0150FC  0EFD               	movlw	-3
 27172  0150FE  6AE3               	clrf	plusw1,c
 27173  015100  D050               	goto	l8615
 27174  015102                     l8597:
 27175                           
 27176                           ;stkvar	_aexp @ sp[(-13)+10]
 27177  015102  0EFD               	movlw	-3
 27178  015104  50E3               	movf	plusw1,w,c
 27179  015106  B4D8               	btfsc	status,2,c
 27180  015108  D020               	goto	l8607
 27181                           
 27182                           ;stkvar	_rem @ sp[(-13)+4]
 27183  01510A  90D8               	bcf	status,0,c
 27184  01510C  0EF7               	movlw	-9
 27185  01510E  36E3               	rlcf	plusw1,f,c
 27186  015110  0EF8               	movlw	-8
 27187  015112  36E3               	rlcf	plusw1,f,c
 27188  015114  0EF9               	movlw	-7
 27189  015116  36E3               	rlcf	plusw1,f,c
 27190  015118  0EFA               	movlw	-6
 27191  01511A  36E3               	rlcf	plusw1,f,c
 27192                           
 27193                           ;stkvar	_b @ sp[(-13)+-4]
 27194  01511C  90D8               	bcf	status,0,c
 27195  01511E  0EEF               	movlw	-17
 27196  015120  36E3               	rlcf	plusw1,f,c
 27197  015122  0EF0               	movlw	-16
 27198  015124  36E3               	rlcf	plusw1,f,c
 27199  015126  0EF1               	movlw	-15
 27200  015128  36E3               	rlcf	plusw1,f,c
 27201  01512A  0EF2               	movlw	-14
 27202  01512C  36E3               	rlcf	plusw1,f,c
 27203                           
 27204                           ;stkvar	_grs @ sp[(-13)+0]
 27205  01512E  0EF6               	movlw	-10
 27206  015130  AEE3               	btfss	plusw1,7,c
 27207  015132  D002               	goto	l8605
 27208                           
 27209                           ;stkvar	_b @ sp[(-13)+-4]
 27210  015134  0EEF               	movlw	-17
 27211  015136  80E3               	bsf	plusw1,0,c
 27212  015138                     l8605:
 27213                           
 27214                           ;stkvar	_grs @ sp[(-13)+0]
 27215  015138  90D8               	bcf	status,0,c
 27216  01513A  0EF3               	movlw	-13
 27217  01513C  36E3               	rlcf	plusw1,f,c
 27218  01513E  0EF4               	movlw	-12
 27219  015140  36E3               	rlcf	plusw1,f,c
 27220  015142  0EF5               	movlw	-11
 27221  015144  36E3               	rlcf	plusw1,f,c
 27222  015146  0EF6               	movlw	-10
 27223  015148  36E3               	rlcf	plusw1,f,c
 27224  01514A                     l8607:
 27225                           
 27226                           ;stkvar	_a @ sp[(-13)+-8]
 27227                           ;stkvar	_rem @ sp[(-13)+4]
 27228  01514A  50E1               	movf	fsr1l,w,c
 27229  01514C  0FF7               	addlw	-9
 27230  01514E  6ED9               	movwf	fsr2l,c
 27231  015150  50E2               	movf	fsr1h,w,c
 27232  015152  6EDA               	movwf	fsr2h,c
 27233  015154  0EFF               	movlw	255
 27234  015156  22DA               	addwfc	fsr2h,f,c
 27235  015158  0EEB               	movlw	-21
 27236  01515A  50E3               	movf	plusw1,w,c
 27237  01515C  5CDE               	subwf	postinc2,w,c
 27238  01515E  0EEC               	movlw	-20
 27239  015160  50E3               	movf	plusw1,w,c
 27240  015162  58DE               	subwfb	postinc2,w,c
 27241  015164  0EED               	movlw	-19
 27242  015166  50E3               	movf	plusw1,w,c
 27243  015168  58DE               	subwfb	postinc2,w,c
 27244  01516A  0EEE               	movlw	-18
 27245  01516C  50E3               	movf	plusw1,w,c
 27246  01516E  58DE               	subwfb	postinc2,w,c
 27247  015170  A0D8               	btfss	status,0,c
 27248  015172  D015               	goto	l8613
 27249                           
 27250                           ;stkvar	_grs @ sp[(-13)+0]
 27251  015174  0EF6               	movlw	-10
 27252  015176  8CE3               	bsf	plusw1,6,c
 27253                           
 27254                           ;stkvar	_a @ sp[(-13)+-8]
 27255                           ;stkvar	_rem @ sp[(-13)+4]
 27256  015178  50E1               	movf	fsr1l,w,c
 27257  01517A  0FF7               	addlw	-9
 27258  01517C  6ED9               	movwf	fsr2l,c
 27259  01517E  50E2               	movf	fsr1h,w,c
 27260  015180  6EDA               	movwf	fsr2h,c
 27261  015182  0EFF               	movlw	255
 27262  015184  22DA               	addwfc	fsr2h,f,c
 27263  015186  0EEB               	movlw	-21
 27264  015188  50E3               	movf	plusw1,w,c
 27265  01518A  5EDE               	subwf	postinc2,f,c
 27266  01518C  0EEC               	movlw	-20
 27267  01518E  50E3               	movf	plusw1,w,c
 27268  015190  5ADE               	subwfb	postinc2,f,c
 27269  015192  0EED               	movlw	-19
 27270  015194  50E3               	movf	plusw1,w,c
 27271  015196  5ADE               	subwfb	postinc2,f,c
 27272  015198  0EEE               	movlw	-18
 27273  01519A  50E3               	movf	plusw1,w,c
 27274  01519C  5ADE               	subwfb	postinc2,f,c
 27275  01519E                     l8613:
 27276                           
 27277                           ;stkvar	_aexp @ sp[(-13)+10]
 27278  01519E  0EFD               	movlw	-3
 27279  0151A0  2AE3               	incf	plusw1,f,c
 27280  0151A2                     l8615:
 27281                           
 27282                           ;stkvar	_aexp @ sp[(-13)+10]
 27283  0151A2  0EFD               	movlw	-3
 27284  0151A4  006F FF8C  F001    	movff	plusw1,btemp
 27285  0151AA  0E19               	movlw	25
 27286  0151AC  6401               	cpfsgt	btemp^0,c
 27287  0151AE  D7A9               	goto	l8597
 27288                           
 27289                           ;stkvar	_rem @ sp[(-13)+4]
 27290  0151B0  0EF7               	movlw	-9
 27291  0151B2  50E3               	movf	plusw1,w,c
 27292  0151B4  E10A               	bnz	u6870
 27293  0151B6  0EF8               	movlw	-8
 27294  0151B8  50E3               	movf	plusw1,w,c
 27295  0151BA  E107               	bnz	u6870
 27296  0151BC  0EF9               	movlw	-7
 27297  0151BE  50E3               	movf	plusw1,w,c
 27298  0151C0  E104               	bnz	u6870
 27299  0151C2  0EFA               	movlw	-6
 27300  0151C4  50E3               	movf	plusw1,w,c
 27301  0151C6  B4D8               	btfsc	status,2,c
 27302  0151C8  D024               	goto	l8631
 27303  0151CA                     u6870:
 27304                           
 27305                           ;stkvar	_grs @ sp[(-13)+0]
 27306  0151CA  0EF3               	movlw	-13
 27307  0151CC  80E3               	bsf	plusw1,0,c
 27308  0151CE  D021               	goto	l8631
 27309  0151D0                     l8621:
 27310                           
 27311                           ;stkvar	_b @ sp[(-13)+-4]
 27312  0151D0  90D8               	bcf	status,0,c
 27313  0151D2  0EEF               	movlw	-17
 27314  0151D4  36E3               	rlcf	plusw1,f,c
 27315  0151D6  0EF0               	movlw	-16
 27316  0151D8  36E3               	rlcf	plusw1,f,c
 27317  0151DA  0EF1               	movlw	-15
 27318  0151DC  36E3               	rlcf	plusw1,f,c
 27319  0151DE  0EF2               	movlw	-14
 27320  0151E0  36E3               	rlcf	plusw1,f,c
 27321                           
 27322                           ;stkvar	_grs @ sp[(-13)+0]
 27323  0151E2  0EF6               	movlw	-10
 27324  0151E4  AEE3               	btfss	plusw1,7,c
 27325  0151E6  D002               	goto	l8627
 27326                           
 27327                           ;stkvar	_b @ sp[(-13)+-4]
 27328  0151E8  0EEF               	movlw	-17
 27329  0151EA  80E3               	bsf	plusw1,0,c
 27330  0151EC                     l8627:
 27331                           
 27332                           ;stkvar	_grs @ sp[(-13)+0]
 27333  0151EC  90D8               	bcf	status,0,c
 27334  0151EE  0EF3               	movlw	-13
 27335  0151F0  36E3               	rlcf	plusw1,f,c
 27336  0151F2  0EF4               	movlw	-12
 27337  0151F4  36E3               	rlcf	plusw1,f,c
 27338  0151F6  0EF5               	movlw	-11
 27339  0151F8  36E3               	rlcf	plusw1,f,c
 27340  0151FA  0EF6               	movlw	-10
 27341  0151FC  36E3               	rlcf	plusw1,f,c
 27342                           
 27343                           ;stkvar	_new_exp @ sp[(-13)+8]
 27344  0151FE  50E1               	movf	fsr1l,w,c
 27345  015200  0FFB               	addlw	-5
 27346  015202  6ED9               	movwf	fsr2l,c
 27347  015204  50E2               	movf	fsr1h,w,c
 27348  015206  6EDA               	movwf	fsr2h,c
 27349  015208  0EFF               	movlw	255
 27350  01520A  22DA               	addwfc	fsr2h,f,c
 27351  01520C  06DE               	decf	postinc2,f,c
 27352  01520E  0E00               	movlw	0
 27353  015210  5ADD               	subwfb	postdec2,f,c
 27354  015212                     l8631:
 27355                           
 27356                           ;stkvar	_b @ sp[(-13)+-4]
 27357  015212  0EF1               	movlw	-15
 27358  015214  AEE3               	btfss	plusw1,7,c
 27359  015216  D7DC               	goto	l8621
 27360                           
 27361                           ;stkvar	_aexp @ sp[(-13)+10]
 27362  015218  0EFD               	movlw	-3
 27363  01521A  6AE3               	clrf	plusw1,c
 27364                           
 27365                           ;stkvar	_grs @ sp[(-13)+0]
 27366  01521C  0EF6               	movlw	-10
 27367  01521E  AEE3               	btfss	plusw1,7,c
 27368  015220  D020               	goto	l8645
 27369                           
 27370                           ;stkvar	_grs @ sp[(-13)+0]
 27371  015222  50E1               	movf	fsr1l,w,c
 27372  015224  0FF3               	addlw	-13
 27373  015226  6ED9               	movwf	fsr2l,c
 27374  015228  50E2               	movf	fsr1h,w,c
 27375  01522A  6EDA               	movwf	fsr2h,c
 27376  01522C  0EFF               	movlw	255
 27377  01522E  22DA               	addwfc	fsr2h,f,c
 27378  015230  0EFF               	movlw	255
 27379  015232  14DE               	andwf	postinc2,w,c
 27380  015234  6E09               	movwf	(btemp+8)^0,c
 27381  015236  0EFF               	movlw	255
 27382  015238  14DE               	andwf	postinc2,w,c
 27383  01523A  6E0A               	movwf	(btemp+9)^0,c
 27384  01523C  0EFF               	movlw	255
 27385  01523E  14DE               	andwf	postinc2,w,c
 27386  015240  6E0B               	movwf	(btemp+10)^0,c
 27387  015242  0E7F               	movlw	127
 27388  015244  14DE               	andwf	postinc2,w,c
 27389  015246  6E0C               	movwf	(btemp+11)^0,c
 27390  015248  5009               	movf	(btemp+8)^0,w,c
 27391  01524A  100A               	iorwf	(btemp+9)^0,w,c
 27392  01524C  100B               	iorwf	(btemp+10)^0,w,c
 27393  01524E  100C               	iorwf	(btemp+11)^0,w,c
 27394  015250  B4D8               	btfsc	status,2,c
 27395  015252  D004               	goto	l8641
 27396  015254                     u6910:
 27397                           
 27398                           ;stkvar	_aexp @ sp[(-13)+10]
 27399  015254  0EFD               	movlw	-3
 27400  015256  6AE3               	clrf	plusw1,c
 27401  015258  2AE3               	incf	plusw1,f,c
 27402  01525A  D003               	goto	l8645
 27403  01525C                     l8641:
 27404                           
 27405                           ;stkvar	_b @ sp[(-13)+-4]
 27406  01525C  0EEF               	movlw	-17
 27407  01525E  B0E3               	btfsc	plusw1,0,c
 27408  015260  D7F9               	goto	u6910
 27409  015262                     l8645:
 27410                           
 27411                           ;stkvar	_aexp @ sp[(-13)+10]
 27412  015262  0EFD               	movlw	-3
 27413  015264  50E3               	movf	plusw1,w,c
 27414  015266  B4D8               	btfsc	status,2,c
 27415  015268  D036               	goto	l8655
 27416                           
 27417                           ;stkvar	_b @ sp[(-13)+-4]
 27418  01526A  50E1               	movf	fsr1l,w,c
 27419  01526C  0FEF               	addlw	-17
 27420  01526E  6ED9               	movwf	fsr2l,c
 27421  015270  50E2               	movf	fsr1h,w,c
 27422  015272  6EDA               	movwf	fsr2h,c
 27423  015274  0EFF               	movlw	255
 27424  015276  22DA               	addwfc	fsr2h,f,c
 27425  015278  2ADE               	incf	postinc2,f,c
 27426  01527A  0E00               	movlw	0
 27427  01527C  22DE               	addwfc	postinc2,f,c
 27428  01527E  22DE               	addwfc	postinc2,f,c
 27429  015280  22DE               	addwfc	postinc2,f,c
 27430                           
 27431                           ;stkvar	_b @ sp[(-13)+-4]
 27432  015282  0EF2               	movlw	-14
 27433  015284  A0E3               	btfss	plusw1,0,c
 27434  015286  D027               	goto	l8655
 27435  015288  0E01               	movlw	1
 27436  01528A  6E0C               	movwf	(btemp+11)^0,c
 27437                           
 27438                           ;stkvar	_b @ sp[(-13)+-4]
 27439  01528C  50E1               	movf	fsr1l,w,c
 27440  01528E  0FEF               	addlw	-17
 27441  015290  6ED9               	movwf	fsr2l,c
 27442  015292  50E2               	movf	fsr1h,w,c
 27443  015294  6EDA               	movwf	fsr2h,c
 27444  015296  0EFF               	movlw	255
 27445  015298  22DA               	addwfc	fsr2h,f,c
 27446  01529A  280C               	incf	(btemp+11)^0,w,c
 27447  01529C  52DE               	movf	postinc2,f,c
 27448  01529E  D008               	goto	u6950
 27449  0152A0                     u6955:
 27450  0152A0  52DE               	movf	postinc2,f,c
 27451  0152A2  90D8               	bcf	status,0,c
 27452  0152A4  BEDC               	btfsc	preinc2,7,c
 27453  0152A6  80D8               	bsf	status,0,c
 27454  0152A8  32DD               	rrcf	postdec2,f,c
 27455  0152AA  32DD               	rrcf	postdec2,f,c
 27456  0152AC  32DD               	rrcf	postdec2,f,c
 27457  0152AE  32DE               	rrcf	postinc2,f,c
 27458  0152B0                     u6950:
 27459  0152B0  2EE8               	decfsz	wreg,f,c
 27460  0152B2  D7F6               	goto	u6955
 27461                           
 27462                           ;stkvar	_new_exp @ sp[(-13)+8]
 27463  0152B4  0EFB               	movlw	-5
 27464  0152B6  50E3               	movf	plusw1,w,c
 27465  0152B8  0F01               	addlw	1
 27466  0152BA  6E01               	movwf	btemp^0,c
 27467  0152BC  0EFB               	movlw	-5
 27468  0152BE  0060  F007  FFE3   	movff	btemp,plusw1
 27469  0152C4  6A01               	clrf	btemp^0,c
 27470  0152C6  0EFC               	movlw	-4
 27471  0152C8  50E3               	movf	plusw1,w,c
 27472  0152CA  2001               	addwfc	btemp^0,w,c
 27473  0152CC  6E01               	movwf	btemp^0,c
 27474  0152CE  0EFC               	movlw	-4
 27475  0152D0  0060  F007  FFE3   	movff	btemp,plusw1
 27476  0152D6                     l8655:
 27477                           
 27478                           ;stkvar	_new_exp @ sp[(-13)+8]
 27479  0152D6  0EFC               	movlw	-4
 27480  0152D8  BEE3               	btfsc	plusw1,7,c
 27481  0152DA  D01B               	goto	l8661
 27482  0152DC  0EFC               	movlw	-4
 27483  0152DE  50E3               	movf	plusw1,w,c
 27484  0152E0  E104               	bnz	u6960
 27485  0152E2  0EFB               	movlw	-5
 27486  0152E4  28E3               	incf	plusw1,w,c
 27487  0152E6  A0D8               	btfss	status,0,c
 27488  0152E8  D014               	goto	l8661
 27489  0152EA                     u6960:
 27490  0152EA  0EFF               	movlw	255
 27491  0152EC  6E0B               	movwf	(btemp+10)^0,c
 27492  0152EE  0E00               	movlw	0
 27493  0152F0  6E0C               	movwf	(btemp+11)^0,c
 27494                           
 27495                           ;stkvar	_new_exp @ sp[(-13)+8]
 27496  0152F2  0EFB               	movlw	-5
 27497  0152F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27498  0152FA  0EFC               	movlw	-4
 27499  0152FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27500                           
 27501                           ;stkvar	_b @ sp[(-13)+-4]
 27502  015302  0EEF               	movlw	-17
 27503  015304  6AE3               	clrf	plusw1,c
 27504  015306  0EF0               	movlw	-16
 27505  015308  6AE3               	clrf	plusw1,c
 27506  01530A  0EF1               	movlw	-15
 27507  01530C  6AE3               	clrf	plusw1,c
 27508  01530E  0EF2               	movlw	-14
 27509  015310  6AE3               	clrf	plusw1,c
 27510  015312                     l8661:
 27511                           
 27512                           ;stkvar	_new_exp @ sp[(-13)+8]
 27513  015312  0EFC               	movlw	-4
 27514  015314  BEE3               	btfsc	plusw1,7,c
 27515  015316  D007               	goto	u6970
 27516  015318  0EFC               	movlw	-4
 27517  01531A  50E3               	movf	plusw1,w,c
 27518  01531C  E112               	bnz	l8667
 27519  01531E  0EFB               	movlw	-5
 27520  015320  04E3               	decf	plusw1,w,c
 27521  015322  B0D8               	btfsc	status,0,c
 27522  015324  D00E               	goto	l8667
 27523  015326                     u6970:
 27524                           
 27525                           ;stkvar	_new_exp @ sp[(-13)+8]
 27526  015326  0EFB               	movlw	-5
 27527  015328  6AE3               	clrf	plusw1,c
 27528  01532A  0EFC               	movlw	-4
 27529  01532C  6AE3               	clrf	plusw1,c
 27530                           
 27531                           ;stkvar	_b @ sp[(-13)+-4]
 27532  01532E  0EEF               	movlw	-17
 27533  015330  6AE3               	clrf	plusw1,c
 27534  015332  0EF0               	movlw	-16
 27535  015334  6AE3               	clrf	plusw1,c
 27536  015336  0EF1               	movlw	-15
 27537  015338  6AE3               	clrf	plusw1,c
 27538  01533A  0EF2               	movlw	-14
 27539  01533C  6AE3               	clrf	plusw1,c
 27540                           
 27541                           ;stkvar	_sign @ sp[(-13)+12]
 27542  01533E  0EFF               	movlw	-1
 27543  015340  6AE3               	clrf	plusw1,c
 27544  015342                     l8667:
 27545                           
 27546                           ;stkvar	_new_exp @ sp[(-13)+8]
 27547                           ;stkvar	_bexp @ sp[(-13)+11]
 27548  015342  0EFB               	movlw	-5
 27549  015344  006F FF8C  F001    	movff	plusw1,btemp
 27550  01534A  0EFE               	movlw	-2
 27551  01534C  0060  F007  FFE3   	movff	btemp,plusw1
 27552                           
 27553                           ;stkvar	_bexp @ sp[(-13)+11]
 27554  015352  0EFE               	movlw	-2
 27555  015354  A0E3               	btfss	plusw1,0,c
 27556  015356  D009               	goto	l8673
 27557                           
 27558                           ;stkvar	_b @ sp[(-13)+-4]
 27559  015358  0EF1               	movlw	241
 27560  01535A  24E1               	addwf	fsr1l,w,c
 27561  01535C  6ED9               	movwf	fsr2l,c
 27562  01535E  0EFF               	movlw	255
 27563  015360  20E2               	addwfc	fsr1h,w,c
 27564  015362  6EDA               	movwf	fsr2h,c
 27565  015364  0E00               	movlw	0
 27566  015366  8EDB               	bsf	plusw2,7,c
 27567  015368  D008               	goto	l8675
 27568  01536A                     l8673:
 27569                           
 27570                           ;stkvar	_b @ sp[(-13)+-4]
 27571  01536A  0EF1               	movlw	241
 27572  01536C  24E1               	addwf	fsr1l,w,c
 27573  01536E  6ED9               	movwf	fsr2l,c
 27574  015370  0EFF               	movlw	255
 27575  015372  20E2               	addwfc	fsr1h,w,c
 27576  015374  6EDA               	movwf	fsr2h,c
 27577  015376  0E7F               	movlw	127
 27578  015378  16DF               	andwf	indf2,f,c
 27579  01537A                     l8675:
 27580                           
 27581                           ;stkvar	_b @ sp[(-13)+-4]
 27582  01537A  0EF2               	movlw	242
 27583  01537C  24E1               	addwf	fsr1l,w,c
 27584  01537E  6ED9               	movwf	fsr2l,c
 27585  015380  0EFF               	movlw	255
 27586  015382  20E2               	addwfc	fsr1h,w,c
 27587  015384  6EDA               	movwf	fsr2h,c
 27588                           
 27589                           ;stkvar	_bexp @ sp[(-13)+11]
 27590  015386  0EFE               	movlw	-2
 27591  015388  006F FF8C  F00C    	movff	plusw1,btemp+11
 27592  01538E  90D8               	bcf	status,0,c
 27593  015390  300C               	rrcf	(btemp+11)^0,w,c
 27594  015392  6EDF               	movwf	indf2,c
 27595  015394  D644               	goto	l8573
 27596  015396                     l3098:
 27597                           
 27598                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27599  015396  0EEB               	movlw	235
 27600  015398  26E1               	addwf	fsr1l,f,c
 27601  01539A  0EFF               	movlw	255
 27602  01539C  22E2               	addwfc	fsr1h,f,c
 27603  01539E  0012               	return		;funcret
 27604  0153A0                     __end_of___fldiv:
 27605                           	opt callstack 0
 27606                           
 27607 ;; *************** function ___flge *****************
 27608 ;; Defined at:
 27609 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 27610 ;; Parameters:    Size  Location     Type
 27611 ;;  ff1             4  [STACK] unsigned char 
 27612 ;;  ff2             4  [STACK] unsigned char 
 27613 ;; Auto vars:     Size  Location     Type
 27614 ;;		None
 27615 ;; Return value:  Size  Location     Type
 27616 ;;		None               void
 27617 ;; Registers used:
 27618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 27619 ;; Tracked objects:
 27620 ;;		On entry : 0/0
 27621 ;;		On exit  : 0/0
 27622 ;;		Unchanged: 0/0
 27623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27628 ;;Total ram usage:        0 bytes
 27629 ;; Hardware stack levels used:    1
 27630 ;; Hardware stack levels required when called:   15
 27631 ;; This function calls:
 27632 ;;		Nothing
 27633 ;; This function is called by:
 27634 ;;		_main
 27635 ;;		_convert_dac_raw
 27636 ;;		_calc_ror_data
 27637 ;;		_check_day_time
 27638 ;;		_calc_bsoc
 27639 ;;		_efgtoa
 27640 ;; This function uses a reentrant model
 27641 ;;
 27642                           
 27643                           	psect	text109
 27644  01950C                     __ptext109:
 27645                           	opt callstack 0
 27646  01950C                     ___flge:
 27647                           	opt callstack 0
 27648                           
 27649                           ;stkvar	_ff1 @ sp[(0)+-4]
 27650                           
 27651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27652                           ;incstack = 0
 27653 ;; hardware stack exceeded
 27654  01950C  50E1               	movf	fsr1l,w,c
 27655  01950E  0FFC               	addlw	-4
 27656  019510  6ED9               	movwf	fsr2l,c
 27657  019512  50E2               	movf	fsr1h,w,c
 27658  019514  6EDA               	movwf	fsr2h,c
 27659  019516  0EFF               	movlw	255
 27660  019518  22DA               	addwfc	fsr2h,f,c
 27661  01951A  0E00               	movlw	0
 27662  01951C  14DE               	andwf	postinc2,w,c
 27663  01951E  6E09               	movwf	(btemp+8)^0,c
 27664  019520  0E00               	movlw	0
 27665  019522  14DE               	andwf	postinc2,w,c
 27666  019524  6E0A               	movwf	(btemp+9)^0,c
 27667  019526  0E80               	movlw	128
 27668  019528  14DE               	andwf	postinc2,w,c
 27669  01952A  6E0B               	movwf	(btemp+10)^0,c
 27670  01952C  0E7F               	movlw	127
 27671  01952E  14DE               	andwf	postinc2,w,c
 27672  019530  6E0C               	movwf	(btemp+11)^0,c
 27673  019532  5009               	movf	(btemp+8)^0,w,c
 27674  019534  100A               	iorwf	(btemp+9)^0,w,c
 27675  019536  100B               	iorwf	(btemp+10)^0,w,c
 27676  019538  100C               	iorwf	(btemp+11)^0,w,c
 27677  01953A  A4D8               	btfss	status,2,c
 27678  01953C  D008               	goto	l8949
 27679                           
 27680                           ;stkvar	_ff1 @ sp[(0)+-4]
 27681  01953E  0EFC               	movlw	-4
 27682  019540  6AE3               	clrf	plusw1,c
 27683  019542  0EFD               	movlw	-3
 27684  019544  6AE3               	clrf	plusw1,c
 27685  019546  0EFE               	movlw	-2
 27686  019548  6AE3               	clrf	plusw1,c
 27687  01954A  0EFF               	movlw	-1
 27688  01954C  6AE3               	clrf	plusw1,c
 27689  01954E                     l8949:
 27690                           
 27691                           ;stkvar	_ff2 @ sp[(0)+-8]
 27692  01954E  50E1               	movf	fsr1l,w,c
 27693  019550  0FF8               	addlw	-8
 27694  019552  6ED9               	movwf	fsr2l,c
 27695  019554  50E2               	movf	fsr1h,w,c
 27696  019556  6EDA               	movwf	fsr2h,c
 27697  019558  0EFF               	movlw	255
 27698  01955A  22DA               	addwfc	fsr2h,f,c
 27699  01955C  0E00               	movlw	0
 27700  01955E  14DE               	andwf	postinc2,w,c
 27701  019560  6E09               	movwf	(btemp+8)^0,c
 27702  019562  0E00               	movlw	0
 27703  019564  14DE               	andwf	postinc2,w,c
 27704  019566  6E0A               	movwf	(btemp+9)^0,c
 27705  019568  0E80               	movlw	128
 27706  01956A  14DE               	andwf	postinc2,w,c
 27707  01956C  6E0B               	movwf	(btemp+10)^0,c
 27708  01956E  0E7F               	movlw	127
 27709  019570  14DE               	andwf	postinc2,w,c
 27710  019572  6E0C               	movwf	(btemp+11)^0,c
 27711  019574  5009               	movf	(btemp+8)^0,w,c
 27712  019576  100A               	iorwf	(btemp+9)^0,w,c
 27713  019578  100B               	iorwf	(btemp+10)^0,w,c
 27714  01957A  100C               	iorwf	(btemp+11)^0,w,c
 27715  01957C  A4D8               	btfss	status,2,c
 27716  01957E  D008               	goto	l2779
 27717                           
 27718                           ;stkvar	_ff2 @ sp[(0)+-8]
 27719  019580  0EF8               	movlw	-8
 27720  019582  6AE3               	clrf	plusw1,c
 27721  019584  0EF9               	movlw	-7
 27722  019586  6AE3               	clrf	plusw1,c
 27723  019588  0EFA               	movlw	-6
 27724  01958A  6AE3               	clrf	plusw1,c
 27725  01958C  0EFB               	movlw	-5
 27726  01958E  6AE3               	clrf	plusw1,c
 27727  019590                     l2779:
 27728                           
 27729                           ;stkvar	_ff1 @ sp[(0)+-4]
 27730  019590  0EFF               	movlw	-1
 27731  019592  AEE3               	btfss	plusw1,7,c
 27732  019594  D024               	goto	l8955
 27733                           
 27734                           ;stkvar	_ff1 @ sp[(0)+-4]
 27735  019596  0E00               	movlw	0
 27736  019598  6E09               	movwf	(btemp+8)^0,c
 27737  01959A  0E00               	movlw	0
 27738  01959C  6E0A               	movwf	(btemp+9)^0,c
 27739  01959E  0E00               	movlw	0
 27740  0195A0  6E0B               	movwf	(btemp+10)^0,c
 27741  0195A2  0E80               	movlw	128
 27742  0195A4  6E0C               	movwf	(btemp+11)^0,c
 27743  0195A6  0EFC               	movlw	-4
 27744  0195A8  50E3               	movf	plusw1,w,c
 27745  0195AA  5E09               	subwf	(btemp+8)^0,f,c
 27746  0195AC  0EFD               	movlw	-3
 27747  0195AE  50E3               	movf	plusw1,w,c
 27748  0195B0  5A0A               	subwfb	(btemp+9)^0,f,c
 27749  0195B2  0EFE               	movlw	-2
 27750  0195B4  50E3               	movf	plusw1,w,c
 27751  0195B6  5A0B               	subwfb	(btemp+10)^0,f,c
 27752  0195B8  0EFF               	movlw	-1
 27753  0195BA  50E3               	movf	plusw1,w,c
 27754  0195BC  5A0C               	subwfb	(btemp+11)^0,f,c
 27755                           
 27756                           ;stkvar	_ff1 @ sp[(0)+-4]
 27757  0195BE  0EFC               	movlw	-4
 27758  0195C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 27759  0195C6  0EFD               	movlw	-3
 27760  0195C8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27761  0195CE  0EFE               	movlw	-2
 27762  0195D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27763  0195D6  0EFF               	movlw	-1
 27764  0195D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 27765  0195DE                     l8955:
 27766                           
 27767                           ;stkvar	_ff2 @ sp[(0)+-8]
 27768  0195DE  0EFB               	movlw	-5
 27769  0195E0  AEE3               	btfss	plusw1,7,c
 27770  0195E2  D024               	goto	l8959
 27771                           
 27772                           ;stkvar	_ff2 @ sp[(0)+-8]
 27773  0195E4  0E00               	movlw	0
 27774  0195E6  6E09               	movwf	(btemp+8)^0,c
 27775  0195E8  0E00               	movlw	0
 27776  0195EA  6E0A               	movwf	(btemp+9)^0,c
 27777  0195EC  0E00               	movlw	0
 27778  0195EE  6E0B               	movwf	(btemp+10)^0,c
 27779  0195F0  0E80               	movlw	128
 27780  0195F2  6E0C               	movwf	(btemp+11)^0,c
 27781  0195F4  0EF8               	movlw	-8
 27782  0195F6  50E3               	movf	plusw1,w,c
 27783  0195F8  5E09               	subwf	(btemp+8)^0,f,c
 27784  0195FA  0EF9               	movlw	-7
 27785  0195FC  50E3               	movf	plusw1,w,c
 27786  0195FE  5A0A               	subwfb	(btemp+9)^0,f,c
 27787  019600  0EFA               	movlw	-6
 27788  019602  50E3               	movf	plusw1,w,c
 27789  019604  5A0B               	subwfb	(btemp+10)^0,f,c
 27790  019606  0EFB               	movlw	-5
 27791  019608  50E3               	movf	plusw1,w,c
 27792  01960A  5A0C               	subwfb	(btemp+11)^0,f,c
 27793                           
 27794                           ;stkvar	_ff2 @ sp[(0)+-8]
 27795  01960C  0EF8               	movlw	-8
 27796  01960E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27797  019614  0EF9               	movlw	-7
 27798  019616  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27799  01961C  0EFA               	movlw	-6
 27800  01961E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27801  019624  0EFB               	movlw	-5
 27802  019626  0060  F033  FFE3   	movff	btemp+11,plusw1
 27803  01962C                     l8959:
 27804                           
 27805                           ;stkvar	_ff1 @ sp[(0)+-4]
 27806  01962C  0EFF               	movlw	-1
 27807  01962E  7EE3               	btg	plusw1,7,c
 27808                           
 27809                           ;stkvar	_ff2 @ sp[(0)+-8]
 27810  019630  0EFB               	movlw	-5
 27811  019632  7EE3               	btg	plusw1,7,c
 27812                           
 27813                           ;stkvar	_ff2 @ sp[(0)+-8]
 27814                           ;stkvar	_ff1 @ sp[(0)+-4]
 27815  019634  50E1               	movf	fsr1l,w,c
 27816  019636  0FFC               	addlw	-4
 27817  019638  6ED9               	movwf	fsr2l,c
 27818  01963A  50E2               	movf	fsr1h,w,c
 27819  01963C  6EDA               	movwf	fsr2h,c
 27820  01963E  0EFF               	movlw	255
 27821  019640  22DA               	addwfc	fsr2h,f,c
 27822  019642  0EF8               	movlw	-8
 27823  019644  50E3               	movf	plusw1,w,c
 27824  019646  5CDE               	subwf	postinc2,w,c
 27825  019648  0EF9               	movlw	-7
 27826  01964A  50E3               	movf	plusw1,w,c
 27827  01964C  58DE               	subwfb	postinc2,w,c
 27828  01964E  0EFA               	movlw	-6
 27829  019650  50E3               	movf	plusw1,w,c
 27830  019652  58DE               	subwfb	postinc2,w,c
 27831  019654  0EFB               	movlw	-5
 27832  019656  50E3               	movf	plusw1,w,c
 27833  019658  58DE               	subwfb	postinc2,w,c
 27834  01965A  B0D8               	btfsc	status,0,c
 27835  01965C  D002               	goto	l8967
 27836  01965E  9001               	bcf	btemp& (0+255),0,c
 27837  019660  D001               	goto	l2786
 27838  019662                     l8967:
 27839  019662  8001               	bsf	btemp& (0+255),0,c
 27840  019664                     l2786:
 27841                           
 27842                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 27843  019664  0EF8               	movlw	248
 27844  019666  26E1               	addwf	fsr1l,f,c
 27845  019668  0EFF               	movlw	255
 27846  01966A  22E2               	addwfc	fsr1h,f,c
 27847  01966C  0012               	return		;funcret
 27848  01966E                     __end_of___flge:
 27849                           	opt callstack 0
 27850                           
 27851 ;; *************** function _calc_model_data *****************
 27852 ;; Defined at:
 27853 ;;		line 67 in file "mbmc.c"
 27854 ;; Parameters:    Size  Location     Type
 27855 ;;		None
 27856 ;; Auto vars:     Size  Location     Type
 27857 ;;		None
 27858 ;; Return value:  Size  Location     Type
 27859 ;;                  1  [STACK] void 
 27860 ;; Registers used:
 27861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27862 ;; Tracked objects:
 27863 ;;		On entry : 0/1
 27864 ;;		On exit  : 3F/39
 27865 ;;		Unchanged: 0/0
 27866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27871 ;;Total ram usage:        0 bytes
 27872 ;; Hardware stack levels used:    1
 27873 ;; Hardware stack levels required when called:   18
 27874 ;; This function calls:
 27875 ;;		___fladd
 27876 ;;		___flmul
 27877 ;;		___flsub
 27878 ;;		_lp_filter
 27879 ;;		_start_bsoc
 27880 ;;		_stop_bsoc
 27881 ;; This function is called by:
 27882 ;;		_main
 27883 ;; This function uses a reentrant model
 27884 ;;
 27885                           
 27886                           	psect	text110
 27887  015CDC                     __ptext110:
 27888                           	opt callstack 0
 27889  015CDC                     _calc_model_data:
 27890                           	opt callstack 12
 27891                           
 27892                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 27893                           
 27894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27895                           ;incstack = 0
 27896  015CDC  EC5C  F0E5         	call	_stop_bsoc	;wreg free
 27897                           
 27898                           ; BSR set to: 57
 27899                           ;mbmc.c: 72:  if (!V.calib) {
 27900  015CE0  0101               	movlb	1	; () banked
 27901  015CE2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 27902  015CE4  A4D8               	btfss	status,2,c
 27903  015CE6  D219               	goto	l11563
 27904                           
 27905                           ; BSR set to: 1
 27906                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 27907  015CE8  EE21  F2FF         	lfsr	2,_C
 27908  015CEC  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 27909  015CF2  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 27910  015CF8  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 27911  015CFE  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 27912                           
 27913                           ; BSR set to: 1
 27914                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 27915  015D04  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 27916  015D0A  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 27917  015D10  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 27918  015D16  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 27919  015D1C  EE21  F343         	lfsr	2,_C+68	;volatile
 27920  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 27921  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 27922  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 27923  015D32  006F FF7B FFE6     	movff	postinc2,postinc1
 27924  015D38  EC5A  F0DF         	call	___flsub	;wreg free
 27925  015D3C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 27926  015D42  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 27927  015D48  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 27928  015D4E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 27929                           
 27930                           ;mbmc.c: 75:   bcror = C.c_bat;
 27931  015D54  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 27932  015D58  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 27933  015D5C  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 27934  015D60  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 27935                           
 27936                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 27937  015D64  EE21  F303         	lfsr	2,_C+4	;volatile
 27938  015D68  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 27939  015D6E  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 27940  015D74  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 27941  015D7A  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 27942                           
 27943                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 27944  015D80  EE21  F30F         	lfsr	2,_C+16	;volatile
 27945  015D84  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 27946  015D8A  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 27947  015D90  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 27948  015D96  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 27949                           
 27950                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 27951  015D9C  EE21  F333         	lfsr	2,_C+52	;volatile
 27952  015DA0  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 27953  015DA6  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 27954  015DAC  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 27955  015DB2  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 27956                           
 27957                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 27958  015DB8  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 27959  015DBE  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 27960  015DC4  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 27961  015DCA  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 27962  015DD0  EE21  F353         	lfsr	2,_C+84	;volatile
 27963  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 27964  015DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 27965  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27966  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27967  015DEC  EC5A  F0DF         	call	___flsub	;wreg free
 27968  015DF0  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 27969  015DF6  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 27970  015DFC  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 27971  015E02  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 27972                           
 27973                           ;mbmc.c: 80:   bvror = C.v_bat;
 27974  015E08  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 27975  015E0C  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 27976  015E10  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 27977  015E14  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 27978                           
 27979                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 27980  015E18  EE21  F313         	lfsr	2,_C+20	;volatile
 27981  015E1C  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27982  015E22  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27983  015E28  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27984  015E2E  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27985                           
 27986                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27987  015E34  EE21  F307         	lfsr	2,_C+8	;volatile
 27988  015E38  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27989  015E3E  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27990  015E44  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27991  015E4A  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27992                           
 27993                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27994  015E50  EE21  F32F         	lfsr	2,_C+48	;volatile
 27995  015E54  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27996  015E5A  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27997  015E60  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27998  015E66  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27999                           
 28000                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 28001  015E6C  0E01               	movlw	1
 28002  015E6E  6EE6               	movwf	postinc1,c
 28003  015E70  0E10               	movlw	16
 28004  015E72  6EE6               	movwf	postinc1,c
 28005  015E74  EE21  F2FF         	lfsr	2,_C
 28006  015E78  006F FF7B FFE6     	movff	postinc2,postinc1
 28007  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 28008  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 28009  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28010  015E90  EE21  F303         	lfsr	2,_C+4	;volatile
 28011  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 28012  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 28013  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 28014  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 28015  015EAC  EC5A  F0DF         	call	___flsub	;wreg free
 28016  015EB0  0060  F007  FFE6   	movff	btemp,postinc1
 28017  015EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28018  015EBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28019  015EC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28020  015EC8  ECD1  F0C5         	call	_lp_filter	;wreg free
 28021  015ECC  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 28022  015ED2  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 28023  015ED8  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 28024  015EDE  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 28025                           
 28026                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 28027  015EE4  0E01               	movlw	1
 28028  015EE6  6EE6               	movwf	postinc1,c
 28029  015EE8  0E11               	movlw	17
 28030  015EEA  6EE6               	movwf	postinc1,c
 28031  015EEC  EE21  F353         	lfsr	2,_C+84	;volatile
 28032  015EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28033  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28034  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28035  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 28036  015F08  EE21  F33F         	lfsr	2,_C+64	;volatile
 28037  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 28038  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 28039  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 28040  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 28041  015F24  EC20  F09F         	call	___flmul	;wreg free
 28042  015F28  0060  F007  FFE6   	movff	btemp,postinc1
 28043  015F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28044  015F34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28045  015F3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28046  015F40  ECD1  F0C5         	call	_lp_filter	;wreg free
 28047  015F44  0060  F004  F773   	movff	btemp,_C+116	;volatile
 28048  015F4A  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 28049  015F50  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 28050  015F56  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 28051                           
 28052                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 28053  015F5C  0E01               	movlw	1
 28054  015F5E  6EE6               	movwf	postinc1,c
 28055  015F60  0E12               	movlw	18
 28056  015F62  6EE6               	movwf	postinc1,c
 28057  015F64  EE21  F34F         	lfsr	2,_C+80	;volatile
 28058  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 28059  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28060  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 28061  015F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 28062  015F80  EE21  F347         	lfsr	2,_C+72	;volatile
 28063  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 28064  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 28065  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 28066  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 28067  015F9C  EC20  F09F         	call	___flmul	;wreg free
 28068  015FA0  0060  F007  FFE6   	movff	btemp,postinc1
 28069  015FA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28070  015FAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28071  015FB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 28072  015FB8  ECD1  F0C5         	call	_lp_filter	;wreg free
 28073  015FBC  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 28074  015FC2  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 28075  015FC8  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 28076  015FCE  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 28077                           
 28078                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 28079  015FD4  0E01               	movlw	1
 28080  015FD6  6EE6               	movwf	postinc1,c
 28081  015FD8  0E13               	movlw	19
 28082  015FDA  6EE6               	movwf	postinc1,c
 28083  015FDC  0E00               	movlw	0
 28084  015FDE  6EE6               	movwf	postinc1,c
 28085  015FE0  0E00               	movlw	0
 28086  015FE2  6EE6               	movwf	postinc1,c
 28087  015FE4  0E60               	movlw	96
 28088  015FE6  6EE6               	movwf	postinc1,c
 28089  015FE8  0EC1               	movlw	193
 28090  015FEA  6EE6               	movwf	postinc1,c
 28091  015FEC  EE21  F363         	lfsr	2,_C+100	;volatile
 28092  015FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 28093  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 28094  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 28095  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 28096  016008  EE21  F33F         	lfsr	2,_C+64	;volatile
 28097  01600C  006F FF7B FFE6     	movff	postinc2,postinc1
 28098  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 28099  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 28100  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 28101  016024  EC20  F09F         	call	___flmul	;wreg free
 28102  016028  0060  F007  FFE6   	movff	btemp,postinc1
 28103  01602E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28104  016034  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28105  01603A  0060  F013  FFE6   	movff	btemp+3,postinc1
 28106  016040  EC35  F0A3         	call	___fladd	;wreg free
 28107  016044  0060  F007  FFE6   	movff	btemp,postinc1
 28108  01604A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28109  016050  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28110  016056  0060  F013  FFE6   	movff	btemp+3,postinc1
 28111  01605C  ECD1  F0C5         	call	_lp_filter	;wreg free
 28112  016060  0060  F004  F777   	movff	btemp,_C+120	;volatile
 28113  016066  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 28114  01606C  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 28115  016072  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 28116                           
 28117                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 28118  016078  0E01               	movlw	1
 28119  01607A  6EE6               	movwf	postinc1,c
 28120  01607C  0E14               	movlw	20
 28121  01607E  6EE6               	movwf	postinc1,c
 28122  016080  EE21  F353         	lfsr	2,_C+84	;volatile
 28123  016084  006F FF7B FFE6     	movff	postinc2,postinc1
 28124  01608A  006F FF7B FFE6     	movff	postinc2,postinc1
 28125  016090  006F FF7B FFE6     	movff	postinc2,postinc1
 28126  016096  006F FF7B FFE6     	movff	postinc2,postinc1
 28127  01609C  EE21  F343         	lfsr	2,_C+68	;volatile
 28128  0160A0  006F FF7B FFE6     	movff	postinc2,postinc1
 28129  0160A6  006F FF7B FFE6     	movff	postinc2,postinc1
 28130  0160AC  006F FF7B FFE6     	movff	postinc2,postinc1
 28131  0160B2  006F FF7B FFE6     	movff	postinc2,postinc1
 28132  0160B8  EC20  F09F         	call	___flmul	;wreg free
 28133  0160BC  0060  F007  FFE6   	movff	btemp,postinc1
 28134  0160C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28135  0160C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28136  0160CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 28137  0160D4  ECD1  F0C5         	call	_lp_filter	;wreg free
 28138  0160D8  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 28139  0160DE  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 28140  0160E4  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 28141  0160EA  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 28142                           
 28143                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 28144  0160F0  EE21  F377         	lfsr	2,_C+120	;volatile
 28145  0160F4  0E03               	movlw	3
 28146  0160F6  AEDB               	btfss	plusw2,7,c
 28147  0160F8  D010               	goto	l11563
 28148                           
 28149                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 28150  0160FA  0E17               	movlw	23
 28151  0160FC  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 28152  016102  0EB7               	movlw	183
 28153  016104  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 28154  01610A  0ED1               	movlw	209
 28155  01610C  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 28156  016112  0E38               	movlw	56
 28157  016114  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 28158  01611A                     l11563:
 28159                           
 28160                           ;mbmc.c: 95:  start_bsoc();
 28161  01611A  ECEB  F0E3         	call	_start_bsoc	;wreg free
 28162                           
 28163                           ; BSR set to: 57
 28164                           ;mbmc.c: 96:  C.update = 1;
 28165  01611E  0E01               	movlw	1
 28166  016120  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 28167                           
 28168                           ; BSR set to: 57
 28169                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28170  016126  0012               	return		;funcret
 28171  016128                     __end_of_calc_model_data:
 28172                           	opt callstack 0
 28173                           
 28174 ;; *************** function _stop_bsoc *****************
 28175 ;; Defined at:
 28176 ;;		line 130 in file "bsoc.c"
 28177 ;; Parameters:    Size  Location     Type
 28178 ;;		None
 28179 ;; Auto vars:     Size  Location     Type
 28180 ;;		None
 28181 ;; Return value:  Size  Location     Type
 28182 ;;                  1  [STACK] void 
 28183 ;; Registers used:
 28184 ;;		None
 28185 ;; Tracked objects:
 28186 ;;		On entry : 0/1
 28187 ;;		On exit  : 3F/39
 28188 ;;		Unchanged: 0/0
 28189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28194 ;;Total ram usage:        0 bytes
 28195 ;; Hardware stack levels used:    1
 28196 ;; Hardware stack levels required when called:   15
 28197 ;; This function calls:
 28198 ;;		Nothing
 28199 ;; This function is called by:
 28200 ;;		_calc_model_data
 28201 ;; This function uses a reentrant model
 28202 ;;
 28203                           
 28204                           	psect	text111
 28205  01CAB8                     __ptext111:
 28206                           	opt callstack 0
 28207  01CAB8                     _stop_bsoc:
 28208                           	opt callstack 14
 28209                           
 28210                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 28211                           
 28212                           ; BSR set to: 57
 28213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28214                           ;incstack = 0
 28215  01CAB8  0139               	movlb	57	; () banked
 28216  01CABA  9D96               	bcf	150,6,b	;volatile
 28217                           
 28218                           ; BSR set to: 57
 28219                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28220  01CABC  0012               	return		;funcret
 28221  01CABE                     __end_of_stop_bsoc:
 28222                           	opt callstack 0
 28223                           
 28224 ;; *************** function _start_bsoc *****************
 28225 ;; Defined at:
 28226 ;;		line 121 in file "bsoc.c"
 28227 ;; Parameters:    Size  Location     Type
 28228 ;;		None
 28229 ;; Auto vars:     Size  Location     Type
 28230 ;;		None
 28231 ;; Return value:  Size  Location     Type
 28232 ;;                  1  [STACK] void 
 28233 ;; Registers used:
 28234 ;;		wreg, status,2, status,0, btemp+11
 28235 ;; Tracked objects:
 28236 ;;		On entry : 0/1
 28237 ;;		On exit  : 3F/39
 28238 ;;		Unchanged: 0/0
 28239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28244 ;;Total ram usage:        0 bytes
 28245 ;; Hardware stack levels used:    1
 28246 ;; Hardware stack levels required when called:   15
 28247 ;; This function calls:
 28248 ;;		Nothing
 28249 ;; This function is called by:
 28250 ;;		_calc_model_data
 28251 ;; This function uses a reentrant model
 28252 ;;
 28253                           
 28254                           	psect	text112
 28255  01C7D6                     __ptext112:
 28256                           	opt callstack 0
 28257  01C7D6                     _start_bsoc:
 28258                           	opt callstack 14
 28259                           
 28260                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 28261                           
 28262                           ; BSR set to: 57
 28263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28264                           ;incstack = 0
 28265  01C7D6  0139               	movlb	57	; () banked
 28266  01C7D8  8D96               	bsf	150,6,b	;volatile
 28267                           
 28268                           ; BSR set to: 57
 28269  01C7DA  A4BE               	btfss	190,2,c	;volatile
 28270  01C7DC  D002               	goto	u10000
 28271  01C7DE  0E01               	movlw	1
 28272  01C7E0  D001               	goto	u10006
 28273  01C7E2                     u10000:
 28274  01C7E2  0E00               	movlw	0
 28275  01C7E4                     u10006:
 28276  01C7E4  0AFF               	xorlw	255
 28277  01C7E6  6E0C               	movwf	(btemp+11)^0,c
 28278  01C7E8  460C               	rlncf	(btemp+11)^0,f,c
 28279  01C7EA  460C               	rlncf	(btemp+11)^0,f,c
 28280  01C7EC  50BE               	movf	190,w,c	;volatile
 28281  01C7EE  180C               	xorwf	(btemp+11)^0,w,c
 28282  01C7F0  0BFB               	andlw	-5
 28283  01C7F2  180C               	xorwf	(btemp+11)^0,w,c
 28284  01C7F4  6EBE               	movwf	190,c	;volatile
 28285                           
 28286                           ; BSR set to: 57
 28287                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 28288  01C7F6  0012               	return		;funcret
 28289  01C7F8                     __end_of_start_bsoc:
 28290                           	opt callstack 0
 28291                           
 28292 ;; *************** function _lp_filter *****************
 28293 ;; Defined at:
 28294 ;;		line 29 in file "mbmc.c"
 28295 ;; Parameters:    Size  Location     Type
 28296 ;;  new             4  [STACK] const float 
 28297 ;;  bn              1  [STACK] const unsigned char 
 28298 ;;  slow            1  [STACK] const char 
 28299 ;; Auto vars:     Size  Location     Type
 28300 ;;  lp_speed        4  [STACK] float 
 28301 ;; Return value:  Size  Location     Type
 28302 ;;                  4  [STACK] float 
 28303 ;; Registers used:
 28304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28305 ;; Tracked objects:
 28306 ;;		On entry : 0/1
 28307 ;;		On exit  : 0/0
 28308 ;;		Unchanged: 0/0
 28309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28314 ;;Total ram usage:        0 bytes
 28315 ;; Hardware stack levels used:    1
 28316 ;; Hardware stack levels required when called:   17
 28317 ;; This function calls:
 28318 ;;		___fladd
 28319 ;;		___flmul
 28320 ;;		___flsub
 28321 ;; This function is called by:
 28322 ;;		_main
 28323 ;;		_convert_adc_data
 28324 ;;		_calc_model_data
 28325 ;; This function uses a reentrant model
 28326 ;;
 28327                           
 28328                           	psect	text113
 28329  018BA2                     __ptext113:
 28330                           	opt callstack 0
 28331  018BA2                     _lp_filter:
 28332                           	opt callstack 0
 28333                           
 28334                           ; BSR set to: 57
 28335                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28336  018BA2  52E6               	movf	postinc1,f,c
 28337  018BA4  52E6               	movf	postinc1,f,c
 28338  018BA6  52E6               	movf	postinc1,f,c
 28339  018BA8  52E6               	movf	postinc1,f,c
 28340                           
 28341                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 28342                           ;stkvar	_bn @ sp[(-4)+-5]
 28343                           
 28344                           ;incstack = 0
 28345  018BAA  0EF7               	movlw	-9
 28346  018BAC  006F FF8C  F001    	movff	plusw1,btemp
 28347  018BB2  0E14               	movlw	20
 28348  018BB4  6401               	cpfsgt	btemp^0,c
 28349  018BB6  D011               	goto	l10783
 28350  018BB8                     u9830:
 28351                           
 28352                           ;mbmc.c: 35:   return new;
 28353                           ;stkvar	_new @ sp[(-4)+-4]
 28354  018BB8  0EF8               	movlw	-8
 28355  018BBA  006F FF8C  F001    	movff	plusw1,btemp
 28356  018BC0  0EF9               	movlw	-7
 28357  018BC2  006F FF8C  F002    	movff	plusw1,btemp+1
 28358  018BC8  0EFA               	movlw	-6
 28359  018BCA  006F FF8C  F003    	movff	plusw1,btemp+2
 28360  018BD0  0EFB               	movlw	-5
 28361  018BD2  006F FF8C  F004    	movff	plusw1,btemp+3
 28362  018BD8  D0BD               	goto	l1945
 28363  018BDA                     l10783:
 28364                           
 28365                           ;mbmc.c: 37:  if (slow == (-1)) {
 28366                           ;stkvar	_slow @ sp[(-4)+-6]
 28367  018BDA  0EF6               	movlw	-10
 28368  018BDC  28E3               	incf	plusw1,w,c
 28369  018BDE  A4D8               	btfss	status,2,c
 28370  018BE0  D012               	goto	l10791
 28371                           
 28372                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 28373                           ;stkvar	_bn @ sp[(-4)+-5]
 28374  018BE2  0EF7               	movlw	-9
 28375  018BE4  50E3               	movf	plusw1,w,c
 28376  018BE6  0D04               	mullw	4
 28377  018BE8  0E00               	movlw	low lp_filter@smooth
 28378  018BEA  24F3               	addwf	243,w,c
 28379  018BEC  6ED9               	movwf	fsr2l,c
 28380  018BEE  0E02               	movlw	high lp_filter@smooth
 28381  018BF0  20F4               	addwfc	prodh,w,c
 28382  018BF2  6EDA               	movwf	fsr2h,c
 28383  018BF4  0E00               	movlw	0
 28384  018BF6  6EDE               	movwf	postinc2,c
 28385  018BF8  0E00               	movlw	0
 28386  018BFA  6EDE               	movwf	postinc2,c
 28387  018BFC  0E00               	movlw	0
 28388  018BFE  6EDE               	movwf	postinc2,c
 28389  018C00  0E00               	movlw	0
 28390  018C02  6EDD               	movwf	postdec2,c
 28391  018C04  D7D9               	goto	u9830
 28392  018C06                     l10791:
 28393                           
 28394                           ;mbmc.c: 42:  if (slow) {
 28395                           ;stkvar	_slow @ sp[(-4)+-6]
 28396  018C06  0EF6               	movlw	-10
 28397  018C08  50E3               	movf	plusw1,w,c
 28398  018C0A  B4D8               	btfsc	status,2,c
 28399  018C0C  D006               	goto	l10795
 28400                           
 28401                           ;mbmc.c: 43:   lp_speed = 0.033;
 28402  018C0E  0E02               	movlw	2
 28403  018C10  6E09               	movwf	(btemp+8)^0,c
 28404  018C12  0E2B               	movlw	43
 28405  018C14  6E0A               	movwf	(btemp+9)^0,c
 28406  018C16  0E07               	movlw	7
 28407  018C18  D005               	goto	L34
 28408  018C1A                     l10795:
 28409                           
 28410                           ;mbmc.c: 45:   lp_speed = 0.066;
 28411  018C1A  0E02               	movlw	2
 28412  018C1C  6E09               	movwf	(btemp+8)^0,c
 28413  018C1E  0E2B               	movlw	43
 28414  018C20  6E0A               	movwf	(btemp+9)^0,c
 28415  018C22  0E87               	movlw	135
 28416  018C24                     L34:
 28417  018C24  6E0B               	movwf	(btemp+10)^0,c
 28418  018C26  0E3D               	movlw	61
 28419  018C28  6E0C               	movwf	(btemp+11)^0,c
 28420                           
 28421                           ;stkvar	_lp_speed @ sp[(-4)+0]
 28422  018C2A  0EFC               	movlw	-4
 28423  018C2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 28424  018C32  0EFD               	movlw	-3
 28425  018C34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28426  018C3A  0EFE               	movlw	-2
 28427  018C3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28428  018C42  0EFF               	movlw	-1
 28429  018C44  0060  F033  FFE3   	movff	btemp+11,plusw1
 28430                           
 28431                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 28432                           ;stkvar	_bn @ sp[(-4)+-5]
 28433  018C4A  0EF7               	movlw	-9
 28434  018C4C  50E3               	movf	plusw1,w,c
 28435  018C4E  0D04               	mullw	4
 28436  018C50  0E00               	movlw	low lp_filter@smooth
 28437  018C52  24F3               	addwf	243,w,c
 28438  018C54  6ED9               	movwf	fsr2l,c
 28439  018C56  0E02               	movlw	high lp_filter@smooth
 28440  018C58  20F4               	addwfc	prodh,w,c
 28441  018C5A  6EDA               	movwf	fsr2h,c
 28442  018C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 28443  018C62  006F FF7B FFE6     	movff	postinc2,postinc1
 28444  018C68  006F FF7B FFE6     	movff	postinc2,postinc1
 28445  018C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 28446                           
 28447                           ;stkvar	_lp_speed @ sp[(-8)+0]
 28448  018C74  0EF8               	movlw	-8
 28449  018C76  006F FF8F FFE6     	movff	plusw1,postinc1
 28450  018C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 28451  018C82  006F FF8F FFE6     	movff	plusw1,postinc1
 28452  018C88  006F FF8F FFE6     	movff	plusw1,postinc1
 28453                           
 28454                           ;stkvar	_bn @ sp[(-12)+-5]
 28455  018C8E  0EEF               	movlw	-17
 28456  018C90  50E3               	movf	plusw1,w,c
 28457  018C92  0D04               	mullw	4
 28458  018C94  0E00               	movlw	low lp_filter@smooth
 28459  018C96  24F3               	addwf	243,w,c
 28460  018C98  6ED9               	movwf	fsr2l,c
 28461  018C9A  0E02               	movlw	high lp_filter@smooth
 28462  018C9C  20F4               	addwfc	prodh,w,c
 28463  018C9E  6EDA               	movwf	fsr2h,c
 28464  018CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 28465  018CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 28466  018CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 28467  018CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 28468                           
 28469                           ;stkvar	_new @ sp[(-16)+-4]
 28470  018CB8  0EEC               	movlw	-20
 28471  018CBA  006F FF8F FFE6     	movff	plusw1,postinc1
 28472  018CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 28473  018CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 28474  018CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 28475  018CD2  EC5A  F0DF         	call	___flsub	;wreg free
 28476  018CD6  0060  F007  FFE6   	movff	btemp,postinc1
 28477  018CDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28478  018CE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28479  018CE8  0060  F013  FFE6   	movff	btemp+3,postinc1
 28480  018CEE  EC20  F09F         	call	___flmul	;wreg free
 28481  018CF2  0060  F007  FFE6   	movff	btemp,postinc1
 28482  018CF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28483  018CFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28484  018D04  0060  F013  FFE6   	movff	btemp+3,postinc1
 28485  018D0A  EC35  F0A3         	call	___fladd	;wreg free
 28486                           
 28487                           ;stkvar	_bn @ sp[(-4)+-5]
 28488  018D0E  0EF7               	movlw	-9
 28489  018D10  50E3               	movf	plusw1,w,c
 28490  018D12  0D04               	mullw	4
 28491  018D14  0E00               	movlw	low lp_filter@smooth
 28492  018D16  24F3               	addwf	243,w,c
 28493  018D18  6ED9               	movwf	fsr2l,c
 28494  018D1A  0E02               	movlw	high lp_filter@smooth
 28495  018D1C  20F4               	addwfc	prodh,w,c
 28496  018D1E  6EDA               	movwf	fsr2h,c
 28497  018D20  0060  F007  FFDE   	movff	btemp,postinc2
 28498  018D26  0060  F00B  FFDE   	movff	btemp+1,postinc2
 28499  018D2C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 28500  018D32  0060  F013  FFDD   	movff	btemp+3,postdec2
 28501  018D38  52DD               	movf	postdec2,f,c
 28502  018D3A  52DD               	movf	postdec2,f,c
 28503  018D3C  006F FF78  F001    	movff	postinc2,btemp
 28504  018D42  006F FF78  F002    	movff	postinc2,btemp+1
 28505  018D48  006F FF78  F003    	movff	postinc2,btemp+2
 28506  018D4E  006F FF78  F004    	movff	postinc2,btemp+3
 28507  018D54                     l1945:
 28508                           
 28509                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 28510  018D54  0EF6               	movlw	246
 28511  018D56  26E1               	addwf	fsr1l,f,c
 28512  018D58  0EFF               	movlw	255
 28513  018D5A  22E2               	addwfc	fsr1h,f,c
 28514  018D5C  0012               	return		;funcret
 28515  018D5E                     __end_of_lp_filter:
 28516                           	opt callstack 0
 28517                           
 28518 ;; *************** function ___flsub *****************
 28519 ;; Defined at:
 28520 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28521 ;; Parameters:    Size  Location     Type
 28522 ;;  b               4  [STACK] float 
 28523 ;;  a               4  [STACK] float 
 28524 ;; Auto vars:     Size  Location     Type
 28525 ;;		None
 28526 ;; Return value:  Size  Location     Type
 28527 ;;                  4  [STACK] float 
 28528 ;; Registers used:
 28529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28530 ;; Tracked objects:
 28531 ;;		On entry : 0/0
 28532 ;;		On exit  : 0/0
 28533 ;;		Unchanged: 0/0
 28534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28539 ;;Total ram usage:        0 bytes
 28540 ;; Hardware stack levels used:    1
 28541 ;; Hardware stack levels required when called:   16
 28542 ;; This function calls:
 28543 ;;		___fladd
 28544 ;; This function is called by:
 28545 ;;		_conv_raw_result
 28546 ;;		_lp_filter
 28547 ;;		_calc_model_data
 28548 ;;		_calc_ror_data
 28549 ;;		_esr_check
 28550 ;;		_efgtoa
 28551 ;; This function uses a reentrant model
 28552 ;;
 28553                           
 28554                           	psect	text114
 28555  01BEB4                     __ptext114:
 28556                           	opt callstack 0
 28557  01BEB4                     ___flsub:
 28558                           	opt callstack 0
 28559                           
 28560                           ;stkvar	_a @ sp[(0)+-8]
 28561                           
 28562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28563                           ;incstack = 0
 28564 ;; hardware stack exceeded
 28565  01BEB4  0EFB               	movlw	-5
 28566  01BEB6  7EE3               	btg	plusw1,7,c
 28567                           
 28568                           ;stkvar	_a @ sp[(0)+-8]
 28569  01BEB8  0EF8               	movlw	-8
 28570  01BEBA  006F FF8F FFE6     	movff	plusw1,postinc1
 28571  01BEC0  006F FF8F FFE6     	movff	plusw1,postinc1
 28572  01BEC6  006F FF8F FFE6     	movff	plusw1,postinc1
 28573  01BECC  006F FF8F FFE6     	movff	plusw1,postinc1
 28574                           
 28575                           ;stkvar	_b @ sp[(-4)+-4]
 28576  01BED2  0EF8               	movlw	-8
 28577  01BED4  006F FF8F FFE6     	movff	plusw1,postinc1
 28578  01BEDA  006F FF8F FFE6     	movff	plusw1,postinc1
 28579  01BEE0  006F FF8F FFE6     	movff	plusw1,postinc1
 28580  01BEE6  006F FF8F FFE6     	movff	plusw1,postinc1
 28581  01BEEC  EC35  F0A3         	call	___fladd	;wreg free
 28582                           
 28583                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28584  01BEF0  0EF8               	movlw	248
 28585  01BEF2  26E1               	addwf	fsr1l,f,c
 28586  01BEF4  0EFF               	movlw	255
 28587  01BEF6  22E2               	addwfc	fsr1h,f,c
 28588  01BEF8  0012               	return		;funcret
 28589  01BEFA                     __end_of___flsub:
 28590                           	opt callstack 0
 28591                           
 28592 ;; *************** function ___fladd *****************
 28593 ;; Defined at:
 28594 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 28595 ;; Parameters:    Size  Location     Type
 28596 ;;  b               4  [STACK] float 
 28597 ;;  a               4  [STACK] float 
 28598 ;; Auto vars:     Size  Location     Type
 28599 ;;  grs             1  [STACK] unsigned char 
 28600 ;;  bexp            1  [STACK] unsigned char 
 28601 ;;  aexp            1  [STACK] unsigned char 
 28602 ;;  signs           1  [STACK] unsigned char 
 28603 ;; Return value:  Size  Location     Type
 28604 ;;                  4  [STACK] unsigned char 
 28605 ;; Registers used:
 28606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28607 ;; Tracked objects:
 28608 ;;		On entry : 0/0
 28609 ;;		On exit  : 0/0
 28610 ;;		Unchanged: 0/0
 28611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28616 ;;Total ram usage:        0 bytes
 28617 ;; Hardware stack levels used:    1
 28618 ;; Hardware stack levels required when called:   15
 28619 ;; This function calls:
 28620 ;;		Nothing
 28621 ;; This function is called by:
 28622 ;;		_main
 28623 ;;		_lp_filter
 28624 ;;		_calc_model_data
 28625 ;;		_efgtoa
 28626 ;;		___asfladd
 28627 ;;		___flsub
 28628 ;; This function uses a reentrant model
 28629 ;;
 28630                           
 28631                           	psect	text115
 28632  01466A                     __ptext115:
 28633                           	opt callstack 0
 28634  01466A                     ___fladd:
 28635                           	opt callstack 0
 28636                           
 28637                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28638  01466A  52E6               	movf	postinc1,f,c
 28639  01466C  52E6               	movf	postinc1,f,c
 28640  01466E  52E6               	movf	postinc1,f,c
 28641  014670  52E6               	movf	postinc1,f,c
 28642                           
 28643                           ;stkvar	_b @ sp[(-4)+-4]
 28644                           
 28645                           ;incstack = 0
 28646 ;; hardware stack exceeded
 28647  014672  0EFB               	movlw	251
 28648  014674  24E1               	addwf	fsr1l,w,c
 28649  014676  6ED9               	movwf	fsr2l,c
 28650  014678  0EFF               	movlw	255
 28651  01467A  20E2               	addwfc	fsr1h,w,c
 28652  01467C  6EDA               	movwf	fsr2h,c
 28653  01467E  50DF               	movf	indf2,w,c
 28654  014680  6E0C               	movwf	(btemp+11)^0,c
 28655  014682  0E80               	movlw	128
 28656  014684  160C               	andwf	(btemp+11)^0,f,c
 28657                           
 28658                           ;stkvar	_signs @ sp[(-4)+3]
 28659  014686  0EFF               	movlw	-1
 28660  014688  0060  F033  FFE3   	movff	btemp+11,plusw1
 28661                           
 28662                           ;stkvar	_b @ sp[(-4)+-4]
 28663  01468E  0EFB               	movlw	251
 28664  014690  24E1               	addwf	fsr1l,w,c
 28665  014692  6ED9               	movwf	fsr2l,c
 28666  014694  0EFF               	movlw	255
 28667  014696  20E2               	addwfc	fsr1h,w,c
 28668  014698  6EDA               	movwf	fsr2h,c
 28669  01469A  50DF               	movf	indf2,w,c
 28670  01469C  6E0C               	movwf	(btemp+11)^0,c
 28671  01469E  90D8               	bcf	status,0,c
 28672  0146A0  340C               	rlcf	(btemp+11)^0,w,c
 28673  0146A2  6E0B               	movwf	(btemp+10)^0,c
 28674                           
 28675                           ;stkvar	_bexp @ sp[(-4)+1]
 28676  0146A4  0EFD               	movlw	-3
 28677  0146A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28678                           
 28679                           ;stkvar	_b @ sp[(-4)+-4]
 28680  0146AC  0EFA               	movlw	250
 28681  0146AE  24E1               	addwf	fsr1l,w,c
 28682  0146B0  6ED9               	movwf	fsr2l,c
 28683  0146B2  0EFF               	movlw	255
 28684  0146B4  20E2               	addwfc	fsr1h,w,c
 28685  0146B6  6EDA               	movwf	fsr2h,c
 28686  0146B8  AEDF               	btfss	indf2,7,c
 28687  0146BA  D002               	goto	l8057
 28688                           
 28689                           ;stkvar	_bexp @ sp[(-4)+1]
 28690  0146BC  0EFD               	movlw	-3
 28691  0146BE  80E3               	bsf	plusw1,0,c
 28692  0146C0                     l8057:
 28693                           
 28694                           ;stkvar	_bexp @ sp[(-4)+1]
 28695  0146C0  0EFD               	movlw	-3
 28696  0146C2  50E3               	movf	plusw1,w,c
 28697  0146C4  B4D8               	btfsc	status,2,c
 28698  0146C6  D027               	goto	l8067
 28699                           
 28700                           ;stkvar	_bexp @ sp[(-4)+1]
 28701  0146C8  0EFD               	movlw	-3
 28702  0146CA  28E3               	incf	plusw1,w,c
 28703  0146CC  A4D8               	btfss	status,2,c
 28704  0146CE  D018               	goto	l8063
 28705  0146D0  0E00               	movlw	0
 28706  0146D2  6E09               	movwf	(btemp+8)^0,c
 28707  0146D4  0E00               	movlw	0
 28708  0146D6  6E0A               	movwf	(btemp+9)^0,c
 28709  0146D8  0E00               	movlw	0
 28710  0146DA  6E0B               	movwf	(btemp+10)^0,c
 28711  0146DC  0E00               	movlw	0
 28712  0146DE  6E0C               	movwf	(btemp+11)^0,c
 28713                           
 28714                           ;stkvar	_b @ sp[(-4)+-4]
 28715  0146E0  0EF8               	movlw	-8
 28716  0146E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28717  0146E8  0EF9               	movlw	-7
 28718  0146EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28719  0146F0  0EFA               	movlw	-6
 28720  0146F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28721  0146F8  0EFB               	movlw	-5
 28722  0146FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28723  014700                     l8063:
 28724                           
 28725                           ;stkvar	_b @ sp[(-4)+-4]
 28726  014700  0EFA               	movlw	-6
 28727  014702  8EE3               	bsf	plusw1,7,c
 28728                           
 28729                           ;stkvar	_b @ sp[(-4)+-4]
 28730  014704  0EFB               	movlw	251
 28731  014706  24E1               	addwf	fsr1l,w,c
 28732  014708  6ED9               	movwf	fsr2l,c
 28733  01470A  0EFF               	movlw	255
 28734  01470C  20E2               	addwfc	fsr1h,w,c
 28735  01470E  6EDA               	movwf	fsr2h,c
 28736  014710  0E00               	movlw	0
 28737  014712  6EDF               	movwf	indf2,c
 28738  014714  D018               	goto	l8069
 28739  014716                     l8067:
 28740  014716  0E00               	movlw	0
 28741  014718  6E09               	movwf	(btemp+8)^0,c
 28742  01471A  0E00               	movlw	0
 28743  01471C  6E0A               	movwf	(btemp+9)^0,c
 28744  01471E  0E00               	movlw	0
 28745  014720  6E0B               	movwf	(btemp+10)^0,c
 28746  014722  0E00               	movlw	0
 28747  014724  6E0C               	movwf	(btemp+11)^0,c
 28748                           
 28749                           ;stkvar	_b @ sp[(-4)+-4]
 28750  014726  0EF8               	movlw	-8
 28751  014728  0060  F027  FFE3   	movff	btemp+8,plusw1
 28752  01472E  0EF9               	movlw	-7
 28753  014730  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28754  014736  0EFA               	movlw	-6
 28755  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28756  01473E  0EFB               	movlw	-5
 28757  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 28758  014746                     l8069:
 28759                           
 28760                           ;stkvar	_a @ sp[(-4)+-8]
 28761  014746  0EF7               	movlw	247
 28762  014748  24E1               	addwf	fsr1l,w,c
 28763  01474A  6ED9               	movwf	fsr2l,c
 28764  01474C  0EFF               	movlw	255
 28765  01474E  20E2               	addwfc	fsr1h,w,c
 28766  014750  6EDA               	movwf	fsr2h,c
 28767  014752  50DF               	movf	indf2,w,c
 28768  014754  6E0C               	movwf	(btemp+11)^0,c
 28769  014756  0E80               	movlw	128
 28770  014758  160C               	andwf	(btemp+11)^0,f,c
 28771                           
 28772                           ;stkvar	_aexp @ sp[(-4)+2]
 28773  01475A  0EFE               	movlw	-2
 28774  01475C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28775                           
 28776                           ;stkvar	_signs @ sp[(-4)+3]
 28777                           ;stkvar	_aexp @ sp[(-4)+2]
 28778  014762  50E1               	movf	fsr1l,w,c
 28779  014764  0FFE               	addlw	-2
 28780  014766  6ED9               	movwf	fsr2l,c
 28781  014768  50E2               	movf	fsr1h,w,c
 28782  01476A  6EDA               	movwf	fsr2h,c
 28783  01476C  0EFF               	movlw	255
 28784  01476E  22DA               	addwfc	fsr2h,f,c
 28785  014770  0EFF               	movlw	-1
 28786  014772  50E3               	movf	plusw1,w,c
 28787  014774  18DE               	xorwf	postinc2,w,c
 28788  014776  B4D8               	btfsc	status,2,c
 28789  014778  D002               	goto	l8075
 28790                           
 28791                           ;stkvar	_signs @ sp[(-4)+3]
 28792  01477A  0EFF               	movlw	-1
 28793  01477C  8CE3               	bsf	plusw1,6,c
 28794  01477E                     l8075:
 28795                           
 28796                           ;stkvar	_a @ sp[(-4)+-8]
 28797  01477E  0EF7               	movlw	247
 28798  014780  24E1               	addwf	fsr1l,w,c
 28799  014782  6ED9               	movwf	fsr2l,c
 28800  014784  0EFF               	movlw	255
 28801  014786  20E2               	addwfc	fsr1h,w,c
 28802  014788  6EDA               	movwf	fsr2h,c
 28803  01478A  50DF               	movf	indf2,w,c
 28804  01478C  6E0C               	movwf	(btemp+11)^0,c
 28805  01478E  90D8               	bcf	status,0,c
 28806  014790  340C               	rlcf	(btemp+11)^0,w,c
 28807  014792  6E0B               	movwf	(btemp+10)^0,c
 28808                           
 28809                           ;stkvar	_aexp @ sp[(-4)+2]
 28810  014794  0EFE               	movlw	-2
 28811  014796  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28812                           
 28813                           ;stkvar	_a @ sp[(-4)+-8]
 28814  01479C  0EF6               	movlw	246
 28815  01479E  24E1               	addwf	fsr1l,w,c
 28816  0147A0  6ED9               	movwf	fsr2l,c
 28817  0147A2  0EFF               	movlw	255
 28818  0147A4  20E2               	addwfc	fsr1h,w,c
 28819  0147A6  6EDA               	movwf	fsr2h,c
 28820  0147A8  AEDF               	btfss	indf2,7,c
 28821  0147AA  D002               	goto	l8081
 28822                           
 28823                           ;stkvar	_aexp @ sp[(-4)+2]
 28824  0147AC  0EFE               	movlw	-2
 28825  0147AE  80E3               	bsf	plusw1,0,c
 28826  0147B0                     l8081:
 28827                           
 28828                           ;stkvar	_aexp @ sp[(-4)+2]
 28829  0147B0  0EFE               	movlw	-2
 28830  0147B2  50E3               	movf	plusw1,w,c
 28831  0147B4  B4D8               	btfsc	status,2,c
 28832  0147B6  D027               	goto	l8091
 28833                           
 28834                           ;stkvar	_aexp @ sp[(-4)+2]
 28835  0147B8  0EFE               	movlw	-2
 28836  0147BA  28E3               	incf	plusw1,w,c
 28837  0147BC  A4D8               	btfss	status,2,c
 28838  0147BE  D018               	goto	l8087
 28839  0147C0  0E00               	movlw	0
 28840  0147C2  6E09               	movwf	(btemp+8)^0,c
 28841  0147C4  0E00               	movlw	0
 28842  0147C6  6E0A               	movwf	(btemp+9)^0,c
 28843  0147C8  0E00               	movlw	0
 28844  0147CA  6E0B               	movwf	(btemp+10)^0,c
 28845  0147CC  0E00               	movlw	0
 28846  0147CE  6E0C               	movwf	(btemp+11)^0,c
 28847                           
 28848                           ;stkvar	_a @ sp[(-4)+-8]
 28849  0147D0  0EF4               	movlw	-12
 28850  0147D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28851  0147D8  0EF5               	movlw	-11
 28852  0147DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28853  0147E0  0EF6               	movlw	-10
 28854  0147E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28855  0147E8  0EF7               	movlw	-9
 28856  0147EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28857  0147F0                     l8087:
 28858                           
 28859                           ;stkvar	_a @ sp[(-4)+-8]
 28860  0147F0  0EF6               	movlw	-10
 28861  0147F2  8EE3               	bsf	plusw1,7,c
 28862                           
 28863                           ;stkvar	_a @ sp[(-4)+-8]
 28864  0147F4  0EF7               	movlw	247
 28865  0147F6  24E1               	addwf	fsr1l,w,c
 28866  0147F8  6ED9               	movwf	fsr2l,c
 28867  0147FA  0EFF               	movlw	255
 28868  0147FC  20E2               	addwfc	fsr1h,w,c
 28869  0147FE  6EDA               	movwf	fsr2h,c
 28870  014800  0E00               	movlw	0
 28871  014802  6EDF               	movwf	indf2,c
 28872  014804  D018               	goto	l8093
 28873  014806                     l8091:
 28874  014806  0E00               	movlw	0
 28875  014808  6E09               	movwf	(btemp+8)^0,c
 28876  01480A  0E00               	movlw	0
 28877  01480C  6E0A               	movwf	(btemp+9)^0,c
 28878  01480E  0E00               	movlw	0
 28879  014810  6E0B               	movwf	(btemp+10)^0,c
 28880  014812  0E00               	movlw	0
 28881  014814  6E0C               	movwf	(btemp+11)^0,c
 28882                           
 28883                           ;stkvar	_a @ sp[(-4)+-8]
 28884  014816  0EF4               	movlw	-12
 28885  014818  0060  F027  FFE3   	movff	btemp+8,plusw1
 28886  01481E  0EF5               	movlw	-11
 28887  014820  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28888  014826  0EF6               	movlw	-10
 28889  014828  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28890  01482E  0EF7               	movlw	-9
 28891  014830  0060  F033  FFE3   	movff	btemp+11,plusw1
 28892  014836                     l8093:
 28893                           
 28894                           ;stkvar	_bexp @ sp[(-4)+1]
 28895                           ;stkvar	_aexp @ sp[(-4)+2]
 28896  014836  50E1               	movf	fsr1l,w,c
 28897  014838  0FFE               	addlw	-2
 28898  01483A  6ED9               	movwf	fsr2l,c
 28899  01483C  50E2               	movf	fsr1h,w,c
 28900  01483E  6EDA               	movwf	fsr2h,c
 28901  014840  0EFF               	movlw	255
 28902  014842  22DA               	addwfc	fsr2h,f,c
 28903  014844  0EFD               	movlw	-3
 28904  014846  50E3               	movf	plusw1,w,c
 28905  014848  5CDE               	subwf	postinc2,w,c
 28906  01484A  B0D8               	btfsc	status,0,c
 28907  01484C  D0A4               	goto	l8129
 28908                           
 28909                           ;stkvar	_signs @ sp[(-4)+3]
 28910  01484E  0EFF               	movlw	-1
 28911  014850  ACE3               	btfss	plusw1,6,c
 28912  014852  D002               	goto	l8099
 28913                           
 28914                           ;stkvar	_signs @ sp[(-4)+3]
 28915  014854  0EFF               	movlw	-1
 28916  014856  7EE3               	btg	plusw1,7,c
 28917  014858                     l8099:
 28918                           
 28919                           ;stkvar	_bexp @ sp[(-4)+1]
 28920                           ;stkvar	_grs @ sp[(-4)+0]
 28921  014858  0EFD               	movlw	-3
 28922  01485A  006F FF8C  F001    	movff	plusw1,btemp
 28923  014860  0EFC               	movlw	-4
 28924  014862  0060  F007  FFE3   	movff	btemp,plusw1
 28925                           
 28926                           ;stkvar	_aexp @ sp[(-4)+2]
 28927                           ;stkvar	_bexp @ sp[(-4)+1]
 28928  014868  0EFE               	movlw	-2
 28929  01486A  006F FF8C  F001    	movff	plusw1,btemp
 28930  014870  0EFD               	movlw	-3
 28931  014872  0060  F007  FFE3   	movff	btemp,plusw1
 28932                           
 28933                           ;stkvar	_grs @ sp[(-4)+0]
 28934                           ;stkvar	_aexp @ sp[(-4)+2]
 28935  014878  0EFC               	movlw	-4
 28936  01487A  006F FF8C  F001    	movff	plusw1,btemp
 28937  014880  0EFE               	movlw	-2
 28938  014882  0060  F007  FFE3   	movff	btemp,plusw1
 28939                           
 28940                           ;stkvar	_b @ sp[(-4)+-4]
 28941                           ;stkvar	_grs @ sp[(-4)+0]
 28942  014888  0EF8               	movlw	-8
 28943  01488A  006F FF8C  F001    	movff	plusw1,btemp
 28944  014890  0EFC               	movlw	-4
 28945  014892  0060  F007  FFE3   	movff	btemp,plusw1
 28946                           
 28947                           ;stkvar	_a @ sp[(-4)+-8]
 28948                           ;stkvar	_b @ sp[(-4)+-4]
 28949  014898  0EF4               	movlw	-12
 28950  01489A  006F FF8C  F001    	movff	plusw1,btemp
 28951  0148A0  0EF8               	movlw	-8
 28952  0148A2  0060  F007  FFE3   	movff	btemp,plusw1
 28953                           
 28954                           ;stkvar	_grs @ sp[(-4)+0]
 28955                           ;stkvar	_a @ sp[(-4)+-8]
 28956  0148A8  0EFC               	movlw	-4
 28957  0148AA  006F FF8C  F001    	movff	plusw1,btemp
 28958  0148B0  0EF4               	movlw	-12
 28959  0148B2  0060  F007  FFE3   	movff	btemp,plusw1
 28960                           
 28961                           ;stkvar	_b @ sp[(-4)+-4]
 28962  0148B8  0EF9               	movlw	249
 28963  0148BA  24E1               	addwf	fsr1l,w,c
 28964  0148BC  6ED9               	movwf	fsr2l,c
 28965  0148BE  0EFF               	movlw	255
 28966  0148C0  20E2               	addwfc	fsr1h,w,c
 28967  0148C2  6EDA               	movwf	fsr2h,c
 28968  0148C4  50DF               	movf	indf2,w,c
 28969  0148C6  6E0C               	movwf	(btemp+11)^0,c
 28970                           
 28971                           ;stkvar	_grs @ sp[(-4)+0]
 28972  0148C8  0EFC               	movlw	-4
 28973  0148CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28974                           
 28975                           ;stkvar	_a @ sp[(-4)+-8]
 28976  0148D0  0EF5               	movlw	245
 28977  0148D2  24E1               	addwf	fsr1l,w,c
 28978  0148D4  6ED9               	movwf	fsr2l,c
 28979  0148D6  0EFF               	movlw	255
 28980  0148D8  20E2               	addwfc	fsr1h,w,c
 28981  0148DA  6EDA               	movwf	fsr2h,c
 28982                           
 28983                           ;stkvar	_b @ sp[(-4)+-4]
 28984  0148DC  0EF9               	movlw	249
 28985  0148DE  24E1               	addwf	fsr1l,w,c
 28986  0148E0  6EE9               	movwf	fsr0l,c
 28987  0148E2  0EFF               	movlw	255
 28988  0148E4  20E2               	addwfc	fsr1h,w,c
 28989  0148E6  6EEA               	movwf	fsr0h,c
 28990  0148E8  006F FF7F FFEF     	movff	indf2,indf0
 28991                           
 28992                           ;stkvar	_grs @ sp[(-4)+0]
 28993                           ;stkvar	_a @ sp[(-4)+-8]
 28994  0148EE  0EF5               	movlw	245
 28995  0148F0  24E1               	addwf	fsr1l,w,c
 28996  0148F2  6ED9               	movwf	fsr2l,c
 28997  0148F4  0EFF               	movlw	255
 28998  0148F6  20E2               	addwfc	fsr1h,w,c
 28999  0148F8  6EDA               	movwf	fsr2h,c
 29000  0148FA  0EFC               	movlw	-4
 29001  0148FC  006F FF8F FFDF     	movff	plusw1,indf2
 29002                           
 29003                           ;stkvar	_b @ sp[(-4)+-4]
 29004  014902  0EFA               	movlw	250
 29005  014904  24E1               	addwf	fsr1l,w,c
 29006  014906  6ED9               	movwf	fsr2l,c
 29007  014908  0EFF               	movlw	255
 29008  01490A  20E2               	addwfc	fsr1h,w,c
 29009  01490C  6EDA               	movwf	fsr2h,c
 29010  01490E  50DF               	movf	indf2,w,c
 29011  014910  6E0C               	movwf	(btemp+11)^0,c
 29012                           
 29013                           ;stkvar	_grs @ sp[(-4)+0]
 29014  014912  0EFC               	movlw	-4
 29015  014914  0060  F033  FFE3   	movff	btemp+11,plusw1
 29016                           
 29017                           ;stkvar	_a @ sp[(-4)+-8]
 29018  01491A  0EF6               	movlw	246
 29019  01491C  24E1               	addwf	fsr1l,w,c
 29020  01491E  6ED9               	movwf	fsr2l,c
 29021  014920  0EFF               	movlw	255
 29022  014922  20E2               	addwfc	fsr1h,w,c
 29023  014924  6EDA               	movwf	fsr2h,c
 29024                           
 29025                           ;stkvar	_b @ sp[(-4)+-4]
 29026  014926  0EFA               	movlw	250
 29027  014928  24E1               	addwf	fsr1l,w,c
 29028  01492A  6EE9               	movwf	fsr0l,c
 29029  01492C  0EFF               	movlw	255
 29030  01492E  20E2               	addwfc	fsr1h,w,c
 29031  014930  6EEA               	movwf	fsr0h,c
 29032  014932  006F FF7F FFEF     	movff	indf2,indf0
 29033                           
 29034                           ;stkvar	_grs @ sp[(-4)+0]
 29035                           ;stkvar	_a @ sp[(-4)+-8]
 29036  014938  0EF6               	movlw	246
 29037  01493A  24E1               	addwf	fsr1l,w,c
 29038  01493C  6ED9               	movwf	fsr2l,c
 29039  01493E  0EFF               	movlw	255
 29040  014940  20E2               	addwfc	fsr1h,w,c
 29041  014942  6EDA               	movwf	fsr2h,c
 29042  014944  0EFC               	movlw	-4
 29043  014946  006F FF8F FFDF     	movff	plusw1,indf2
 29044                           
 29045                           ;stkvar	_b @ sp[(-4)+-4]
 29046  01494C  0EFB               	movlw	251
 29047  01494E  24E1               	addwf	fsr1l,w,c
 29048  014950  6ED9               	movwf	fsr2l,c
 29049  014952  0EFF               	movlw	255
 29050  014954  20E2               	addwfc	fsr1h,w,c
 29051  014956  6EDA               	movwf	fsr2h,c
 29052  014958  50DF               	movf	indf2,w,c
 29053  01495A  6E0C               	movwf	(btemp+11)^0,c
 29054                           
 29055                           ;stkvar	_grs @ sp[(-4)+0]
 29056  01495C  0EFC               	movlw	-4
 29057  01495E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29058                           
 29059                           ;stkvar	_a @ sp[(-4)+-8]
 29060  014964  0EF7               	movlw	247
 29061  014966  24E1               	addwf	fsr1l,w,c
 29062  014968  6ED9               	movwf	fsr2l,c
 29063  01496A  0EFF               	movlw	255
 29064  01496C  20E2               	addwfc	fsr1h,w,c
 29065  01496E  6EDA               	movwf	fsr2h,c
 29066                           
 29067                           ;stkvar	_b @ sp[(-4)+-4]
 29068  014970  0EFB               	movlw	251
 29069  014972  24E1               	addwf	fsr1l,w,c
 29070  014974  6EE9               	movwf	fsr0l,c
 29071  014976  0EFF               	movlw	255
 29072  014978  20E2               	addwfc	fsr1h,w,c
 29073  01497A  6EEA               	movwf	fsr0h,c
 29074  01497C  006F FF7F FFEF     	movff	indf2,indf0
 29075                           
 29076                           ;stkvar	_grs @ sp[(-4)+0]
 29077                           ;stkvar	_a @ sp[(-4)+-8]
 29078  014982  0EF7               	movlw	247
 29079  014984  24E1               	addwf	fsr1l,w,c
 29080  014986  6ED9               	movwf	fsr2l,c
 29081  014988  0EFF               	movlw	255
 29082  01498A  20E2               	addwfc	fsr1h,w,c
 29083  01498C  6EDA               	movwf	fsr2h,c
 29084  01498E  0EFC               	movlw	-4
 29085  014990  006F FF8F FFDF     	movff	plusw1,indf2
 29086  014996                     l8129:
 29087                           
 29088                           ;stkvar	_grs @ sp[(-4)+0]
 29089  014996  0EFC               	movlw	-4
 29090  014998  6AE3               	clrf	plusw1,c
 29091                           
 29092                           ;stkvar	_aexp @ sp[(-4)+2]
 29093  01499A  0EFE               	movlw	-2
 29094  01499C  50E3               	movf	plusw1,w,c
 29095  01499E  6E0B               	movwf	(btemp+10)^0,c
 29096  0149A0  6A0C               	clrf	(btemp+11)^0,c
 29097                           
 29098                           ;stkvar	_bexp @ sp[(-4)+1]
 29099  0149A2  0EFD               	movlw	-3
 29100  0149A4  50E3               	movf	plusw1,w,c
 29101  0149A6  5E0B               	subwf	(btemp+10)^0,f,c
 29102  0149A8  0E00               	movlw	0
 29103  0149AA  5A0C               	subwfb	(btemp+11)^0,f,c
 29104  0149AC  BE0C               	btfsc	(btemp+11)^0,7,c
 29105  0149AE  D062               	goto	l8153
 29106  0149B0  500C               	movf	(btemp+11)^0,w,c
 29107  0149B2  E104               	bnz	u5780
 29108  0149B4  0E1A               	movlw	26
 29109  0149B6  5C0B               	subwf	(btemp+10)^0,w,c
 29110  0149B8  A0D8               	btfss	status,0,c
 29111  0149BA  D05C               	goto	l8153
 29112  0149BC                     u5780:
 29113                           
 29114                           ;stkvar	_b @ sp[(-4)+-4]
 29115  0149BC  0EF8               	movlw	-8
 29116  0149BE  50E3               	movf	plusw1,w,c
 29117  0149C0  E10A               	bnz	u5791
 29118  0149C2  0EF9               	movlw	-7
 29119  0149C4  50E3               	movf	plusw1,w,c
 29120  0149C6  E107               	bnz	u5791
 29121  0149C8  0EFA               	movlw	-6
 29122  0149CA  50E3               	movf	plusw1,w,c
 29123  0149CC  E104               	bnz	u5791
 29124  0149CE  0EFB               	movlw	-5
 29125  0149D0  50E3               	movf	plusw1,w,c
 29126  0149D2  B4D8               	btfsc	status,2,c
 29127  0149D4  D003               	goto	u5790
 29128  0149D6                     u5791:
 29129  0149D6  6A0C               	clrf	(btemp+11)^0,c
 29130  0149D8  2A0C               	incf	(btemp+11)^0,f,c
 29131  0149DA  D001               	goto	u5808
 29132  0149DC                     u5790:
 29133  0149DC  6A0C               	clrf	(btemp+11)^0,c
 29134  0149DE                     u5808:
 29135                           
 29136                           ;stkvar	_grs @ sp[(-4)+0]
 29137  0149DE  0EFC               	movlw	-4
 29138  0149E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29139                           
 29140                           ;stkvar	_b @ sp[(-4)+-4]
 29141  0149E6  0EF8               	movlw	-8
 29142  0149E8  6AE3               	clrf	plusw1,c
 29143  0149EA  0EF9               	movlw	-7
 29144  0149EC  6AE3               	clrf	plusw1,c
 29145  0149EE  0EFA               	movlw	-6
 29146  0149F0  6AE3               	clrf	plusw1,c
 29147  0149F2  0EFB               	movlw	-5
 29148  0149F4  6AE3               	clrf	plusw1,c
 29149                           
 29150                           ;stkvar	_aexp @ sp[(-4)+2]
 29151                           ;stkvar	_bexp @ sp[(-4)+1]
 29152  0149F6  0EFE               	movlw	-2
 29153  0149F8  006F FF8C  F001    	movff	plusw1,btemp
 29154  0149FE  0EFD               	movlw	-3
 29155  014A00  0060  F007  FFE3   	movff	btemp,plusw1
 29156  014A06  D042               	goto	u5840
 29157  014A08                     l8139:
 29158                           
 29159                           ;stkvar	_grs @ sp[(-4)+0]
 29160  014A08  0EFC               	movlw	-4
 29161  014A0A  A0E3               	btfss	plusw1,0,c
 29162  014A0C  D00D               	goto	l8143
 29163                           
 29164                           ;stkvar	_grs @ sp[(-4)+0]
 29165  014A0E  0EFC               	movlw	-4
 29166  014A10  006F FF8C  F00C    	movff	plusw1,btemp+11
 29167  014A16  90D8               	bcf	status,0,c
 29168  014A18  320C               	rrcf	(btemp+11)^0,f,c
 29169  014A1A  0E01               	movlw	1
 29170  014A1C  120C               	iorwf	(btemp+11)^0,f,c
 29171                           
 29172                           ;stkvar	_grs @ sp[(-4)+0]
 29173  014A1E  0EFC               	movlw	-4
 29174  014A20  0060  F033  FFE3   	movff	btemp+11,plusw1
 29175  014A26  D009               	goto	l8145
 29176  014A28                     l8143:
 29177                           
 29178                           ;stkvar	_grs @ sp[(-4)+0]
 29179  014A28  50E1               	movf	fsr1l,w,c
 29180  014A2A  0FFC               	addlw	-4
 29181  014A2C  6ED9               	movwf	fsr2l,c
 29182  014A2E  50E2               	movf	fsr1h,w,c
 29183  014A30  6EDA               	movwf	fsr2h,c
 29184  014A32  0EFF               	movlw	255
 29185  014A34  22DA               	addwfc	fsr2h,f,c
 29186  014A36  90D8               	bcf	status,0,c
 29187  014A38  32DF               	rrcf	indf2,f,c
 29188  014A3A                     l8145:
 29189                           
 29190                           ;stkvar	_b @ sp[(-4)+-4]
 29191  014A3A  0EF8               	movlw	-8
 29192  014A3C  A0E3               	btfss	plusw1,0,c
 29193  014A3E  D002               	goto	l8149
 29194                           
 29195                           ;stkvar	_grs @ sp[(-4)+0]
 29196  014A40  0EFC               	movlw	-4
 29197  014A42  8EE3               	bsf	plusw1,7,c
 29198  014A44                     l8149:
 29199  014A44  0E01               	movlw	1
 29200  014A46  6E0C               	movwf	(btemp+11)^0,c
 29201                           
 29202                           ;stkvar	_b @ sp[(-4)+-4]
 29203  014A48  50E1               	movf	fsr1l,w,c
 29204  014A4A  0FF8               	addlw	-8
 29205  014A4C  6ED9               	movwf	fsr2l,c
 29206  014A4E  50E2               	movf	fsr1h,w,c
 29207  014A50  6EDA               	movwf	fsr2h,c
 29208  014A52  0EFF               	movlw	255
 29209  014A54  22DA               	addwfc	fsr2h,f,c
 29210  014A56  280C               	incf	(btemp+11)^0,w,c
 29211  014A58  52DE               	movf	postinc2,f,c
 29212  014A5A  D008               	goto	u5830
 29213  014A5C                     u5835:
 29214  014A5C  52DE               	movf	postinc2,f,c
 29215  014A5E  90D8               	bcf	status,0,c
 29216  014A60  BEDC               	btfsc	preinc2,7,c
 29217  014A62  80D8               	bsf	status,0,c
 29218  014A64  32DD               	rrcf	postdec2,f,c
 29219  014A66  32DD               	rrcf	postdec2,f,c
 29220  014A68  32DD               	rrcf	postdec2,f,c
 29221  014A6A  32DE               	rrcf	postinc2,f,c
 29222  014A6C                     u5830:
 29223  014A6C  2EE8               	decfsz	wreg,f,c
 29224  014A6E  D7F6               	goto	u5835
 29225                           
 29226                           ;stkvar	_bexp @ sp[(-4)+1]
 29227  014A70  0EFD               	movlw	-3
 29228  014A72  2AE3               	incf	plusw1,f,c
 29229  014A74                     l8153:
 29230                           
 29231                           ;stkvar	_aexp @ sp[(-4)+2]
 29232                           ;stkvar	_bexp @ sp[(-4)+1]
 29233  014A74  50E1               	movf	fsr1l,w,c
 29234  014A76  0FFD               	addlw	-3
 29235  014A78  6ED9               	movwf	fsr2l,c
 29236  014A7A  50E2               	movf	fsr1h,w,c
 29237  014A7C  6EDA               	movwf	fsr2h,c
 29238  014A7E  0EFF               	movlw	255
 29239  014A80  22DA               	addwfc	fsr2h,f,c
 29240  014A82  0EFE               	movlw	-2
 29241  014A84  50E3               	movf	plusw1,w,c
 29242  014A86  5CDE               	subwf	postinc2,w,c
 29243  014A88  A0D8               	btfss	status,0,c
 29244  014A8A  D7BE               	goto	l8139
 29245  014A8C                     u5840:
 29246                           
 29247                           ;stkvar	_signs @ sp[(-4)+3]
 29248  014A8C  0EFF               	movlw	-1
 29249  014A8E  BCE3               	btfsc	plusw1,6,c
 29250  014A90  D066               	goto	l8181
 29251                           
 29252                           ;stkvar	_bexp @ sp[(-4)+1]
 29253  014A92  0EFD               	movlw	-3
 29254  014A94  50E3               	movf	plusw1,w,c
 29255  014A96  B4D8               	btfsc	status,2,c
 29256  014A98  D0F2               	goto	u5940
 29257                           
 29258                           ;stkvar	_a @ sp[(-4)+-8]
 29259                           ;stkvar	_b @ sp[(-4)+-4]
 29260  014A9A  0EF8               	movlw	-8
 29261  014A9C  50E3               	movf	plusw1,w,c
 29262  014A9E  6E01               	movwf	btemp^0,c
 29263  014AA0  0EF4               	movlw	-12
 29264  014AA2  50E3               	movf	plusw1,w,c
 29265  014AA4  2601               	addwf	btemp^0,f,c
 29266  014AA6  0EF8               	movlw	-8
 29267  014AA8  0060  F007  FFE3   	movff	btemp,plusw1
 29268  014AAE  0EF9               	movlw	-7
 29269  014AB0  50E3               	movf	plusw1,w,c
 29270  014AB2  6E01               	movwf	btemp^0,c
 29271  014AB4  0EF5               	movlw	-11
 29272  014AB6  50E3               	movf	plusw1,w,c
 29273  014AB8  2201               	addwfc	btemp^0,f,c
 29274  014ABA  0EF9               	movlw	-7
 29275  014ABC  0060  F007  FFE3   	movff	btemp,plusw1
 29276  014AC2  0EFA               	movlw	-6
 29277  014AC4  50E3               	movf	plusw1,w,c
 29278  014AC6  6E01               	movwf	btemp^0,c
 29279  014AC8  0EF6               	movlw	-10
 29280  014ACA  50E3               	movf	plusw1,w,c
 29281  014ACC  2201               	addwfc	btemp^0,f,c
 29282  014ACE  0EFA               	movlw	-6
 29283  014AD0  0060  F007  FFE3   	movff	btemp,plusw1
 29284  014AD6  0EFB               	movlw	-5
 29285  014AD8  50E3               	movf	plusw1,w,c
 29286  014ADA  6E01               	movwf	btemp^0,c
 29287  014ADC  0EF7               	movlw	-9
 29288  014ADE  50E3               	movf	plusw1,w,c
 29289  014AE0  2201               	addwfc	btemp^0,f,c
 29290  014AE2  0EFB               	movlw	-5
 29291  014AE4  0060  F007  FFE3   	movff	btemp,plusw1
 29292                           
 29293                           ;stkvar	_b @ sp[(-4)+-4]
 29294  014AEA  0EFB               	movlw	-5
 29295  014AEC  A0E3               	btfss	plusw1,0,c
 29296  014AEE  D101               	goto	u5980
 29297                           
 29298                           ;stkvar	_grs @ sp[(-4)+0]
 29299  014AF0  0EFC               	movlw	-4
 29300  014AF2  A0E3               	btfss	plusw1,0,c
 29301  014AF4  D00D               	goto	l8171
 29302                           
 29303                           ;stkvar	_grs @ sp[(-4)+0]
 29304  014AF6  0EFC               	movlw	-4
 29305  014AF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29306  014AFE  90D8               	bcf	status,0,c
 29307  014B00  320C               	rrcf	(btemp+11)^0,f,c
 29308  014B02  0E01               	movlw	1
 29309  014B04  120C               	iorwf	(btemp+11)^0,f,c
 29310                           
 29311                           ;stkvar	_grs @ sp[(-4)+0]
 29312  014B06  0EFC               	movlw	-4
 29313  014B08  0060  F033  FFE3   	movff	btemp+11,plusw1
 29314  014B0E  D009               	goto	l8173
 29315  014B10                     l8171:
 29316                           
 29317                           ;stkvar	_grs @ sp[(-4)+0]
 29318  014B10  50E1               	movf	fsr1l,w,c
 29319  014B12  0FFC               	addlw	-4
 29320  014B14  6ED9               	movwf	fsr2l,c
 29321  014B16  50E2               	movf	fsr1h,w,c
 29322  014B18  6EDA               	movwf	fsr2h,c
 29323  014B1A  0EFF               	movlw	255
 29324  014B1C  22DA               	addwfc	fsr2h,f,c
 29325  014B1E  90D8               	bcf	status,0,c
 29326  014B20  32DF               	rrcf	indf2,f,c
 29327  014B22                     l8173:
 29328                           
 29329                           ;stkvar	_b @ sp[(-4)+-4]
 29330  014B22  0EF8               	movlw	-8
 29331  014B24  A0E3               	btfss	plusw1,0,c
 29332  014B26  D002               	goto	l8177
 29333                           
 29334                           ;stkvar	_grs @ sp[(-4)+0]
 29335  014B28  0EFC               	movlw	-4
 29336  014B2A  8EE3               	bsf	plusw1,7,c
 29337  014B2C                     l8177:
 29338  014B2C  0E01               	movlw	1
 29339  014B2E  6E0C               	movwf	(btemp+11)^0,c
 29340                           
 29341                           ;stkvar	_b @ sp[(-4)+-4]
 29342  014B30  50E1               	movf	fsr1l,w,c
 29343  014B32  0FF8               	addlw	-8
 29344  014B34  6ED9               	movwf	fsr2l,c
 29345  014B36  50E2               	movf	fsr1h,w,c
 29346  014B38  6EDA               	movwf	fsr2h,c
 29347  014B3A  0EFF               	movlw	255
 29348  014B3C  22DA               	addwfc	fsr2h,f,c
 29349  014B3E  280C               	incf	(btemp+11)^0,w,c
 29350  014B40  52DE               	movf	postinc2,f,c
 29351  014B42  D008               	goto	u5900
 29352  014B44                     u5905:
 29353  014B44  52DE               	movf	postinc2,f,c
 29354  014B46  90D8               	bcf	status,0,c
 29355  014B48  BEDC               	btfsc	preinc2,7,c
 29356  014B4A  80D8               	bsf	status,0,c
 29357  014B4C  32DD               	rrcf	postdec2,f,c
 29358  014B4E  32DD               	rrcf	postdec2,f,c
 29359  014B50  32DD               	rrcf	postdec2,f,c
 29360  014B52  32DE               	rrcf	postinc2,f,c
 29361  014B54                     u5900:
 29362  014B54  2EE8               	decfsz	wreg,f,c
 29363  014B56  D7F6               	goto	u5905
 29364                           
 29365                           ;stkvar	_bexp @ sp[(-4)+1]
 29366  014B58  0EFD               	movlw	-3
 29367  014B5A  2AE3               	incf	plusw1,f,c
 29368  014B5C  D0CA               	goto	u5980
 29369  014B5E                     l8181:
 29370                           
 29371                           ;stkvar	_a @ sp[(-4)+-8]
 29372                           ;stkvar	_b @ sp[(-4)+-4]
 29373  014B5E  50E1               	movf	fsr1l,w,c
 29374  014B60  0FF8               	addlw	-8
 29375  014B62  6ED9               	movwf	fsr2l,c
 29376  014B64  50E2               	movf	fsr1h,w,c
 29377  014B66  6EDA               	movwf	fsr2h,c
 29378  014B68  0EFF               	movlw	255
 29379  014B6A  22DA               	addwfc	fsr2h,f,c
 29380  014B6C  0EF4               	movlw	-12
 29381  014B6E  50E3               	movf	plusw1,w,c
 29382  014B70  5CDE               	subwf	postinc2,w,c
 29383  014B72  0EF5               	movlw	-11
 29384  014B74  50E3               	movf	plusw1,w,c
 29385  014B76  58DE               	subwfb	postinc2,w,c
 29386  014B78  0EF6               	movlw	-10
 29387  014B7A  50E3               	movf	plusw1,w,c
 29388  014B7C  58DE               	subwfb	postinc2,w,c
 29389  014B7E  50DE               	movf	postinc2,w,c
 29390  014B80  0A80               	xorlw	128
 29391  014B82  6E01               	movwf	btemp^0,c
 29392  014B84  0EF7               	movlw	-9
 29393  014B86  50E3               	movf	plusw1,w,c
 29394  014B88  0A80               	xorlw	128
 29395  014B8A  5801               	subwfb	btemp^0,w,c
 29396  014B8C  B0D8               	btfsc	status,0,c
 29397  014B8E  D053               	goto	l8193
 29398                           
 29399                           ;stkvar	_b @ sp[(-4)+-4]
 29400                           ;stkvar	_a @ sp[(-4)+-8]
 29401  014B90  0EF4               	movlw	-12
 29402  014B92  006F FF8C  F009    	movff	plusw1,btemp+8
 29403  014B98  0EF5               	movlw	-11
 29404  014B9A  006F FF8C  F00A    	movff	plusw1,btemp+9
 29405  014BA0  0EF6               	movlw	-10
 29406  014BA2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29407  014BA8  0EF7               	movlw	-9
 29408  014BAA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29409  014BB0  0EF8               	movlw	-8
 29410  014BB2  50E3               	movf	plusw1,w,c
 29411  014BB4  5E09               	subwf	(btemp+8)^0,f,c
 29412  014BB6  0EF9               	movlw	-7
 29413  014BB8  50E3               	movf	plusw1,w,c
 29414  014BBA  5A0A               	subwfb	(btemp+9)^0,f,c
 29415  014BBC  0EFA               	movlw	-6
 29416  014BBE  50E3               	movf	plusw1,w,c
 29417  014BC0  5A0B               	subwfb	(btemp+10)^0,f,c
 29418  014BC2  0EFB               	movlw	-5
 29419  014BC4  50E3               	movf	plusw1,w,c
 29420  014BC6  5A0C               	subwfb	(btemp+11)^0,f,c
 29421  014BC8  0EFF               	movlw	255
 29422  014BCA  2409               	addwf	(btemp+8)^0,w,c
 29423  014BCC  6E05               	movwf	(btemp+4)^0,c
 29424  014BCE  0EFF               	movlw	255
 29425  014BD0  200A               	addwfc	(btemp+9)^0,w,c
 29426  014BD2  6E06               	movwf	(btemp+5)^0,c
 29427  014BD4  0EFF               	movlw	255
 29428  014BD6  200B               	addwfc	(btemp+10)^0,w,c
 29429  014BD8  6E07               	movwf	(btemp+6)^0,c
 29430  014BDA  0EFF               	movlw	255
 29431  014BDC  200C               	addwfc	(btemp+11)^0,w,c
 29432  014BDE  6E08               	movwf	(btemp+7)^0,c
 29433                           
 29434                           ;stkvar	_b @ sp[(-4)+-4]
 29435  014BE0  0EF8               	movlw	-8
 29436  014BE2  0060  F017  FFE3   	movff	btemp+4,plusw1
 29437  014BE8  0EF9               	movlw	-7
 29438  014BEA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29439  014BF0  0EFA               	movlw	-6
 29440  014BF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29441  014BF8  0EFB               	movlw	-5
 29442  014BFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 29443                           
 29444                           ;stkvar	_signs @ sp[(-4)+3]
 29445  014C00  0EFF               	movlw	-1
 29446  014C02  7EE3               	btg	plusw1,7,c
 29447                           
 29448                           ;stkvar	_grs @ sp[(-4)+0]
 29449  014C04  0EFC               	movlw	-4
 29450  014C06  50E3               	movf	plusw1,w,c
 29451  014C08  0800               	sublw	0
 29452  014C0A  6E0C               	movwf	(btemp+11)^0,c
 29453                           
 29454                           ;stkvar	_grs @ sp[(-4)+0]
 29455  014C0C  0EFC               	movlw	-4
 29456  014C0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29457                           
 29458                           ;stkvar	_grs @ sp[(-4)+0]
 29459  014C14  0EFC               	movlw	-4
 29460  014C16  50E3               	movf	plusw1,w,c
 29461  014C18  A4D8               	btfss	status,2,c
 29462  014C1A  D020               	goto	l8195
 29463                           
 29464                           ;stkvar	_b @ sp[(-4)+-4]
 29465  014C1C  50E1               	movf	fsr1l,w,c
 29466  014C1E  0FF8               	addlw	-8
 29467  014C20  6ED9               	movwf	fsr2l,c
 29468  014C22  50E2               	movf	fsr1h,w,c
 29469  014C24  6EDA               	movwf	fsr2h,c
 29470  014C26  0EFF               	movlw	255
 29471  014C28  22DA               	addwfc	fsr2h,f,c
 29472  014C2A  2ADE               	incf	postinc2,f,c
 29473  014C2C  0E00               	movlw	0
 29474  014C2E  22DE               	addwfc	postinc2,f,c
 29475  014C30  22DE               	addwfc	postinc2,f,c
 29476  014C32  22DE               	addwfc	postinc2,f,c
 29477  014C34  D013               	goto	l8195
 29478  014C36                     l8193:
 29479                           
 29480                           ;stkvar	_a @ sp[(-4)+-8]
 29481                           ;stkvar	_b @ sp[(-4)+-4]
 29482  014C36  50E1               	movf	fsr1l,w,c
 29483  014C38  0FF8               	addlw	-8
 29484  014C3A  6ED9               	movwf	fsr2l,c
 29485  014C3C  50E2               	movf	fsr1h,w,c
 29486  014C3E  6EDA               	movwf	fsr2h,c
 29487  014C40  0EFF               	movlw	255
 29488  014C42  22DA               	addwfc	fsr2h,f,c
 29489  014C44  0EF4               	movlw	-12
 29490  014C46  50E3               	movf	plusw1,w,c
 29491  014C48  5EDE               	subwf	postinc2,f,c
 29492  014C4A  0EF5               	movlw	-11
 29493  014C4C  50E3               	movf	plusw1,w,c
 29494  014C4E  5ADE               	subwfb	postinc2,f,c
 29495  014C50  0EF6               	movlw	-10
 29496  014C52  50E3               	movf	plusw1,w,c
 29497  014C54  5ADE               	subwfb	postinc2,f,c
 29498  014C56  0EF7               	movlw	-9
 29499  014C58  50E3               	movf	plusw1,w,c
 29500  014C5A  5ADE               	subwfb	postinc2,f,c
 29501  014C5C                     l8195:
 29502                           
 29503                           ;stkvar	_b @ sp[(-4)+-4]
 29504  014C5C  0EF8               	movlw	-8
 29505  014C5E  50E3               	movf	plusw1,w,c
 29506  014C60  E145               	bnz	l8217
 29507  014C62  0EF9               	movlw	-7
 29508  014C64  50E3               	movf	plusw1,w,c
 29509  014C66  E142               	bnz	l8217
 29510  014C68  0EFA               	movlw	-6
 29511  014C6A  50E3               	movf	plusw1,w,c
 29512  014C6C  E13F               	bnz	l8217
 29513  014C6E  0EFB               	movlw	-5
 29514  014C70  50E3               	movf	plusw1,w,c
 29515  014C72  A4D8               	btfss	status,2,c
 29516  014C74  D03B               	goto	l8217
 29517                           
 29518                           ;stkvar	_grs @ sp[(-4)+0]
 29519  014C76  0EFC               	movlw	-4
 29520  014C78  50E3               	movf	plusw1,w,c
 29521  014C7A  A4D8               	btfss	status,2,c
 29522  014C7C  D037               	goto	l8217
 29523  014C7E                     u5940:
 29524  014C7E  0E00               	movlw	0
 29525  014C80  6E01               	movwf	btemp^0,c
 29526  014C82  0E00               	movlw	0
 29527  014C84  6E02               	movwf	(btemp+1)^0,c
 29528  014C86  0E00               	movlw	0
 29529  014C88  6E03               	movwf	(btemp+2)^0,c
 29530  014C8A  0E00               	movlw	0
 29531  014C8C  6E04               	movwf	(btemp+3)^0,c
 29532  014C8E  D0C6               	goto	l3053
 29533  014C90                     l8203:
 29534                           
 29535                           ;stkvar	_b @ sp[(-4)+-4]
 29536  014C90  90D8               	bcf	status,0,c
 29537  014C92  0EF8               	movlw	-8
 29538  014C94  36E3               	rlcf	plusw1,f,c
 29539  014C96  0EF9               	movlw	-7
 29540  014C98  36E3               	rlcf	plusw1,f,c
 29541  014C9A  0EFA               	movlw	-6
 29542  014C9C  36E3               	rlcf	plusw1,f,c
 29543  014C9E  0EFB               	movlw	-5
 29544  014CA0  36E3               	rlcf	plusw1,f,c
 29545                           
 29546                           ;stkvar	_grs @ sp[(-4)+0]
 29547  014CA2  0EFC               	movlw	-4
 29548  014CA4  AEE3               	btfss	plusw1,7,c
 29549  014CA6  D002               	goto	l3065
 29550                           
 29551                           ;stkvar	_b @ sp[(-4)+-4]
 29552  014CA8  0EF8               	movlw	-8
 29553  014CAA  80E3               	bsf	plusw1,0,c
 29554  014CAC                     l3065:
 29555                           
 29556                           ;stkvar	_grs @ sp[(-4)+0]
 29557  014CAC  0EFC               	movlw	-4
 29558  014CAE  A0E3               	btfss	plusw1,0,c
 29559  014CB0  D00E               	goto	l8211
 29560                           
 29561                           ;stkvar	_grs @ sp[(-4)+0]
 29562  014CB2  0EFC               	movlw	-4
 29563  014CB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29564  014CBA  90D8               	bcf	status,0,c
 29565  014CBC  340C               	rlcf	(btemp+11)^0,w,c
 29566  014CBE  6E0B               	movwf	(btemp+10)^0,c
 29567  014CC0  0E01               	movlw	1
 29568  014CC2  120B               	iorwf	(btemp+10)^0,f,c
 29569                           
 29570                           ;stkvar	_grs @ sp[(-4)+0]
 29571  014CC4  0EFC               	movlw	-4
 29572  014CC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29573  014CCC  D009               	goto	l8213
 29574  014CCE                     l8211:
 29575                           
 29576                           ;stkvar	_grs @ sp[(-4)+0]
 29577  014CCE  50E1               	movf	fsr1l,w,c
 29578  014CD0  0FFC               	addlw	-4
 29579  014CD2  6ED9               	movwf	fsr2l,c
 29580  014CD4  50E2               	movf	fsr1h,w,c
 29581  014CD6  6EDA               	movwf	fsr2h,c
 29582  014CD8  0EFF               	movlw	255
 29583  014CDA  22DA               	addwfc	fsr2h,f,c
 29584  014CDC  90D8               	bcf	status,0,c
 29585  014CDE  36DF               	rlcf	indf2,f,c
 29586  014CE0                     l8213:
 29587                           
 29588                           ;stkvar	_bexp @ sp[(-4)+1]
 29589  014CE0  0EFD               	movlw	-3
 29590  014CE2  50E3               	movf	plusw1,w,c
 29591  014CE4  B4D8               	btfsc	status,2,c
 29592  014CE6  D002               	goto	l8217
 29593                           
 29594                           ;stkvar	_bexp @ sp[(-4)+1]
 29595  014CE8  0EFD               	movlw	-3
 29596  014CEA  06E3               	decf	plusw1,f,c
 29597  014CEC                     l8217:
 29598                           
 29599                           ;stkvar	_b @ sp[(-4)+-4]
 29600  014CEC  0EFA               	movlw	-6
 29601  014CEE  AEE3               	btfss	plusw1,7,c
 29602  014CF0  D7CF               	goto	l8203
 29603  014CF2                     u5980:
 29604                           
 29605                           ;stkvar	_aexp @ sp[(-4)+2]
 29606  014CF2  0EFE               	movlw	-2
 29607  014CF4  6AE3               	clrf	plusw1,c
 29608                           
 29609                           ;stkvar	_grs @ sp[(-4)+0]
 29610  014CF6  0EFC               	movlw	-4
 29611  014CF8  AEE3               	btfss	plusw1,7,c
 29612  014CFA  D00F               	goto	l8231
 29613                           
 29614                           ;stkvar	_grs @ sp[(-4)+0]
 29615  014CFC  0EFC               	movlw	-4
 29616  014CFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29617  014D04  0E7F               	movlw	127
 29618  014D06  160C               	andwf	(btemp+11)^0,f,c
 29619  014D08  B4D8               	btfsc	status,2,c
 29620  014D0A  D004               	goto	l8227
 29621  014D0C                     u6000:
 29622                           
 29623                           ;stkvar	_aexp @ sp[(-4)+2]
 29624  014D0C  0EFE               	movlw	-2
 29625  014D0E  6AE3               	clrf	plusw1,c
 29626  014D10  2AE3               	incf	plusw1,f,c
 29627  014D12  D003               	goto	l8231
 29628  014D14                     l8227:
 29629                           
 29630                           ;stkvar	_b @ sp[(-4)+-4]
 29631  014D14  0EF8               	movlw	-8
 29632  014D16  B0E3               	btfsc	plusw1,0,c
 29633  014D18  D7F9               	goto	u6000
 29634  014D1A                     l8231:
 29635                           
 29636                           ;stkvar	_aexp @ sp[(-4)+2]
 29637  014D1A  0EFE               	movlw	-2
 29638  014D1C  50E3               	movf	plusw1,w,c
 29639  014D1E  B4D8               	btfsc	status,2,c
 29640  014D20  D02B               	goto	l8243
 29641                           
 29642                           ;stkvar	_b @ sp[(-4)+-4]
 29643  014D22  50E1               	movf	fsr1l,w,c
 29644  014D24  0FF8               	addlw	-8
 29645  014D26  6ED9               	movwf	fsr2l,c
 29646  014D28  50E2               	movf	fsr1h,w,c
 29647  014D2A  6EDA               	movwf	fsr2h,c
 29648  014D2C  0EFF               	movlw	255
 29649  014D2E  22DA               	addwfc	fsr2h,f,c
 29650  014D30  2ADE               	incf	postinc2,f,c
 29651  014D32  0E00               	movlw	0
 29652  014D34  22DE               	addwfc	postinc2,f,c
 29653  014D36  22DE               	addwfc	postinc2,f,c
 29654  014D38  22DE               	addwfc	postinc2,f,c
 29655                           
 29656                           ;stkvar	_b @ sp[(-4)+-4]
 29657  014D3A  0EFB               	movlw	-5
 29658  014D3C  A0E3               	btfss	plusw1,0,c
 29659  014D3E  D01C               	goto	l8243
 29660  014D40  0E01               	movlw	1
 29661  014D42  6E0C               	movwf	(btemp+11)^0,c
 29662                           
 29663                           ;stkvar	_b @ sp[(-4)+-4]
 29664  014D44  50E1               	movf	fsr1l,w,c
 29665  014D46  0FF8               	addlw	-8
 29666  014D48  6ED9               	movwf	fsr2l,c
 29667  014D4A  50E2               	movf	fsr1h,w,c
 29668  014D4C  6EDA               	movwf	fsr2h,c
 29669  014D4E  0EFF               	movlw	255
 29670  014D50  22DA               	addwfc	fsr2h,f,c
 29671  014D52  280C               	incf	(btemp+11)^0,w,c
 29672  014D54  52DE               	movf	postinc2,f,c
 29673  014D56  D008               	goto	u6040
 29674  014D58                     u6045:
 29675  014D58  52DE               	movf	postinc2,f,c
 29676  014D5A  90D8               	bcf	status,0,c
 29677  014D5C  BEDC               	btfsc	preinc2,7,c
 29678  014D5E  80D8               	bsf	status,0,c
 29679  014D60  32DD               	rrcf	postdec2,f,c
 29680  014D62  32DD               	rrcf	postdec2,f,c
 29681  014D64  32DD               	rrcf	postdec2,f,c
 29682  014D66  32DE               	rrcf	postinc2,f,c
 29683  014D68                     u6040:
 29684  014D68  2EE8               	decfsz	wreg,f,c
 29685  014D6A  D7F6               	goto	u6045
 29686                           
 29687                           ;stkvar	_bexp @ sp[(-4)+1]
 29688  014D6C  0EFD               	movlw	-3
 29689  014D6E  28E3               	incf	plusw1,w,c
 29690  014D70  B4D8               	btfsc	status,2,c
 29691  014D72  D002               	goto	l8243
 29692                           
 29693                           ;stkvar	_bexp @ sp[(-4)+1]
 29694  014D74  0EFD               	movlw	-3
 29695  014D76  2AE3               	incf	plusw1,f,c
 29696  014D78                     l8243:
 29697                           
 29698                           ;stkvar	_bexp @ sp[(-4)+1]
 29699  014D78  0EFD               	movlw	-3
 29700  014D7A  28E3               	incf	plusw1,w,c
 29701  014D7C  B4D8               	btfsc	status,2,c
 29702  014D7E  D004               	goto	u6070
 29703                           
 29704                           ;stkvar	_bexp @ sp[(-4)+1]
 29705  014D80  0EFD               	movlw	-3
 29706  014D82  50E3               	movf	plusw1,w,c
 29707  014D84  A4D8               	btfss	status,2,c
 29708  014D86  D00E               	goto	l8253
 29709  014D88                     u6070:
 29710                           
 29711                           ;stkvar	_b @ sp[(-4)+-4]
 29712  014D88  0EF8               	movlw	-8
 29713  014D8A  6AE3               	clrf	plusw1,c
 29714  014D8C  0EF9               	movlw	-7
 29715  014D8E  6AE3               	clrf	plusw1,c
 29716  014D90  0EFA               	movlw	-6
 29717  014D92  6AE3               	clrf	plusw1,c
 29718  014D94  0EFB               	movlw	-5
 29719  014D96  6AE3               	clrf	plusw1,c
 29720                           
 29721                           ;stkvar	_bexp @ sp[(-4)+1]
 29722  014D98  0EFD               	movlw	-3
 29723  014D9A  50E3               	movf	plusw1,w,c
 29724  014D9C  A4D8               	btfss	status,2,c
 29725  014D9E  D002               	goto	l8253
 29726                           
 29727                           ;stkvar	_signs @ sp[(-4)+3]
 29728  014DA0  0EFF               	movlw	-1
 29729  014DA2  6AE3               	clrf	plusw1,c
 29730  014DA4                     l8253:
 29731                           
 29732                           ;stkvar	_bexp @ sp[(-4)+1]
 29733  014DA4  0EFD               	movlw	-3
 29734  014DA6  A0E3               	btfss	plusw1,0,c
 29735  014DA8  D009               	goto	l8257
 29736                           
 29737                           ;stkvar	_b @ sp[(-4)+-4]
 29738  014DAA  0EFA               	movlw	250
 29739  014DAC  24E1               	addwf	fsr1l,w,c
 29740  014DAE  6ED9               	movwf	fsr2l,c
 29741  014DB0  0EFF               	movlw	255
 29742  014DB2  20E2               	addwfc	fsr1h,w,c
 29743  014DB4  6EDA               	movwf	fsr2h,c
 29744  014DB6  0E00               	movlw	0
 29745  014DB8  8EDB               	bsf	plusw2,7,c
 29746  014DBA  D008               	goto	l8259
 29747  014DBC                     l8257:
 29748                           
 29749                           ;stkvar	_b @ sp[(-4)+-4]
 29750  014DBC  0EFA               	movlw	250
 29751  014DBE  24E1               	addwf	fsr1l,w,c
 29752  014DC0  6ED9               	movwf	fsr2l,c
 29753  014DC2  0EFF               	movlw	255
 29754  014DC4  20E2               	addwfc	fsr1h,w,c
 29755  014DC6  6EDA               	movwf	fsr2h,c
 29756  014DC8  0E7F               	movlw	127
 29757  014DCA  16DF               	andwf	indf2,f,c
 29758  014DCC                     l8259:
 29759                           
 29760                           ;stkvar	_b @ sp[(-4)+-4]
 29761  014DCC  0EFB               	movlw	251
 29762  014DCE  24E1               	addwf	fsr1l,w,c
 29763  014DD0  6ED9               	movwf	fsr2l,c
 29764  014DD2  0EFF               	movlw	255
 29765  014DD4  20E2               	addwfc	fsr1h,w,c
 29766  014DD6  6EDA               	movwf	fsr2h,c
 29767                           
 29768                           ;stkvar	_bexp @ sp[(-4)+1]
 29769  014DD8  0EFD               	movlw	-3
 29770  014DDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29771  014DE0  90D8               	bcf	status,0,c
 29772  014DE2  300C               	rrcf	(btemp+11)^0,w,c
 29773  014DE4  6EDF               	movwf	indf2,c
 29774                           
 29775                           ;stkvar	_signs @ sp[(-4)+3]
 29776  014DE6  0EFF               	movlw	-1
 29777  014DE8  AEE3               	btfss	plusw1,7,c
 29778  014DEA  D008               	goto	l8265
 29779                           
 29780                           ;stkvar	_b @ sp[(-4)+-4]
 29781  014DEC  0EFB               	movlw	251
 29782  014DEE  24E1               	addwf	fsr1l,w,c
 29783  014DF0  6ED9               	movwf	fsr2l,c
 29784  014DF2  0EFF               	movlw	255
 29785  014DF4  20E2               	addwfc	fsr1h,w,c
 29786  014DF6  6EDA               	movwf	fsr2h,c
 29787  014DF8  0E00               	movlw	0
 29788  014DFA  8EDB               	bsf	plusw2,7,c
 29789  014DFC                     l8265:
 29790                           
 29791                           ;stkvar	_b @ sp[(-4)+-4]
 29792  014DFC  0EF8               	movlw	-8
 29793  014DFE  006F FF8C  F001    	movff	plusw1,btemp
 29794  014E04  0EF9               	movlw	-7
 29795  014E06  006F FF8C  F002    	movff	plusw1,btemp+1
 29796  014E0C  0EFA               	movlw	-6
 29797  014E0E  006F FF8C  F003    	movff	plusw1,btemp+2
 29798  014E14  0EFB               	movlw	-5
 29799  014E16  006F FF8C  F004    	movff	plusw1,btemp+3
 29800  014E1C                     l3053:
 29801                           
 29802                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29803  014E1C  0EF4               	movlw	244
 29804  014E1E  26E1               	addwf	fsr1l,f,c
 29805  014E20  0EFF               	movlw	255
 29806  014E22  22E2               	addwfc	fsr1h,f,c
 29807  014E24  0012               	return		;funcret
 29808  014E26                     __end_of___fladd:
 29809                           	opt callstack 0
 29810                           
 29811 ;; *************** function ___flmul *****************
 29812 ;; Defined at:
 29813 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 29814 ;; Parameters:    Size  Location     Type
 29815 ;;  b               4  [STACK] unsigned char 
 29816 ;;  a               4  [STACK] unsigned char 
 29817 ;; Auto vars:     Size  Location     Type
 29818 ;;  prod            4  [STACK] struct .
 29819 ;;  grs             4  [STACK] unsigned long 
 29820 ;;  temp            2  [STACK] struct .
 29821 ;;  bexp            1  [STACK] unsigned char 
 29822 ;;  aexp            1  [STACK] unsigned char 
 29823 ;;  sign            1  [STACK] unsigned char 
 29824 ;; Return value:  Size  Location     Type
 29825 ;;                  4  [STACK] unsigned char 
 29826 ;; Registers used:
 29827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29828 ;; Tracked objects:
 29829 ;;		On entry : 0/0
 29830 ;;		On exit  : 0/0
 29831 ;;		Unchanged: 0/0
 29832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29837 ;;Total ram usage:        0 bytes
 29838 ;; Hardware stack levels used:    1
 29839 ;; Hardware stack levels required when called:   15
 29840 ;; This function calls:
 29841 ;;		Nothing
 29842 ;; This function is called by:
 29843 ;;		_conv_raw_result
 29844 ;;		_lp_filter
 29845 ;;		_calc_model_data
 29846 ;;		_calc_bsoc
 29847 ;;		_init_bsoc
 29848 ;;		_efgtoa
 29849 ;; This function uses a reentrant model
 29850 ;;
 29851                           
 29852                           	psect	text116
 29853  013E40                     __ptext116:
 29854                           	opt callstack 0
 29855  013E40                     ___flmul:
 29856                           	opt callstack 0
 29857                           
 29858                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29859  013E40  0E0D               	movlw	13
 29860  013E42  26E1               	addwf	fsr1l,f,c
 29861  013E44  0E00               	movlw	0
 29862  013E46  22E2               	addwfc	fsr1h,f,c
 29863                           
 29864                           ;stkvar	_b @ sp[(-13)+-4]
 29865                           
 29866                           ;incstack = 0
 29867 ;; hardware stack exceeded
 29868  013E48  0EF2               	movlw	242
 29869  013E4A  24E1               	addwf	fsr1l,w,c
 29870  013E4C  6ED9               	movwf	fsr2l,c
 29871  013E4E  0EFF               	movlw	255
 29872  013E50  20E2               	addwfc	fsr1h,w,c
 29873  013E52  6EDA               	movwf	fsr2h,c
 29874  013E54  50DF               	movf	indf2,w,c
 29875  013E56  6E0C               	movwf	(btemp+11)^0,c
 29876  013E58  0E80               	movlw	128
 29877  013E5A  160C               	andwf	(btemp+11)^0,f,c
 29878                           
 29879                           ;stkvar	_sign @ sp[(-13)+12]
 29880  013E5C  0EFF               	movlw	-1
 29881  013E5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29882                           
 29883                           ;stkvar	_b @ sp[(-13)+-4]
 29884  013E64  0EF2               	movlw	242
 29885  013E66  24E1               	addwf	fsr1l,w,c
 29886  013E68  6ED9               	movwf	fsr2l,c
 29887  013E6A  0EFF               	movlw	255
 29888  013E6C  20E2               	addwfc	fsr1h,w,c
 29889  013E6E  6EDA               	movwf	fsr2h,c
 29890  013E70  50DF               	movf	indf2,w,c
 29891  013E72  6E0C               	movwf	(btemp+11)^0,c
 29892  013E74  90D8               	bcf	status,0,c
 29893  013E76  340C               	rlcf	(btemp+11)^0,w,c
 29894  013E78  6E0B               	movwf	(btemp+10)^0,c
 29895                           
 29896                           ;stkvar	_bexp @ sp[(-13)+10]
 29897  013E7A  0EFD               	movlw	-3
 29898  013E7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29899                           
 29900                           ;stkvar	_b @ sp[(-13)+-4]
 29901  013E82  0EF1               	movlw	241
 29902  013E84  24E1               	addwf	fsr1l,w,c
 29903  013E86  6ED9               	movwf	fsr2l,c
 29904  013E88  0EFF               	movlw	255
 29905  013E8A  20E2               	addwfc	fsr1h,w,c
 29906  013E8C  6EDA               	movwf	fsr2h,c
 29907  013E8E  AEDF               	btfss	indf2,7,c
 29908  013E90  D002               	goto	l8691
 29909                           
 29910                           ;stkvar	_bexp @ sp[(-13)+10]
 29911  013E92  0EFD               	movlw	-3
 29912  013E94  80E3               	bsf	plusw1,0,c
 29913  013E96                     l8691:
 29914                           
 29915                           ;stkvar	_bexp @ sp[(-13)+10]
 29916  013E96  0EFD               	movlw	-3
 29917  013E98  50E3               	movf	plusw1,w,c
 29918  013E9A  B4D8               	btfsc	status,2,c
 29919  013E9C  D01F               	goto	l8699
 29920                           
 29921                           ;stkvar	_bexp @ sp[(-13)+10]
 29922  013E9E  0EFD               	movlw	-3
 29923  013EA0  28E3               	incf	plusw1,w,c
 29924  013EA2  A4D8               	btfss	status,2,c
 29925  013EA4  D018               	goto	l8697
 29926  013EA6  0E00               	movlw	0
 29927  013EA8  6E09               	movwf	(btemp+8)^0,c
 29928  013EAA  0E00               	movlw	0
 29929  013EAC  6E0A               	movwf	(btemp+9)^0,c
 29930  013EAE  0E00               	movlw	0
 29931  013EB0  6E0B               	movwf	(btemp+10)^0,c
 29932  013EB2  0E00               	movlw	0
 29933  013EB4  6E0C               	movwf	(btemp+11)^0,c
 29934                           
 29935                           ;stkvar	_b @ sp[(-13)+-4]
 29936  013EB6  0EEF               	movlw	-17
 29937  013EB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29938  013EBE  0EF0               	movlw	-16
 29939  013EC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29940  013EC6  0EF1               	movlw	-15
 29941  013EC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29942  013ECE  0EF2               	movlw	-14
 29943  013ED0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29944  013ED6                     l8697:
 29945                           
 29946                           ;stkvar	_b @ sp[(-13)+-4]
 29947  013ED6  0EF1               	movlw	-15
 29948  013ED8  8EE3               	bsf	plusw1,7,c
 29949  013EDA  D018               	goto	l8701
 29950  013EDC                     l8699:
 29951  013EDC  0E00               	movlw	0
 29952  013EDE  6E09               	movwf	(btemp+8)^0,c
 29953  013EE0  0E00               	movlw	0
 29954  013EE2  6E0A               	movwf	(btemp+9)^0,c
 29955  013EE4  0E00               	movlw	0
 29956  013EE6  6E0B               	movwf	(btemp+10)^0,c
 29957  013EE8  0E00               	movlw	0
 29958  013EEA  6E0C               	movwf	(btemp+11)^0,c
 29959                           
 29960                           ;stkvar	_b @ sp[(-13)+-4]
 29961  013EEC  0EEF               	movlw	-17
 29962  013EEE  0060  F027  FFE3   	movff	btemp+8,plusw1
 29963  013EF4  0EF0               	movlw	-16
 29964  013EF6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29965  013EFC  0EF1               	movlw	-15
 29966  013EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29967  013F04  0EF2               	movlw	-14
 29968  013F06  0060  F033  FFE3   	movff	btemp+11,plusw1
 29969  013F0C                     l8701:
 29970                           
 29971                           ;stkvar	_a @ sp[(-13)+-8]
 29972  013F0C  0EEE               	movlw	238
 29973  013F0E  24E1               	addwf	fsr1l,w,c
 29974  013F10  6ED9               	movwf	fsr2l,c
 29975  013F12  0EFF               	movlw	255
 29976  013F14  20E2               	addwfc	fsr1h,w,c
 29977  013F16  6EDA               	movwf	fsr2h,c
 29978  013F18  50DF               	movf	indf2,w,c
 29979  013F1A  6E0C               	movwf	(btemp+11)^0,c
 29980  013F1C  0E80               	movlw	128
 29981  013F1E  160C               	andwf	(btemp+11)^0,f,c
 29982                           
 29983                           ;stkvar	_sign @ sp[(-13)+12]
 29984  013F20  50E1               	movf	fsr1l,w,c
 29985  013F22  0FFF               	addlw	-1
 29986  013F24  6ED9               	movwf	fsr2l,c
 29987  013F26  50E2               	movf	fsr1h,w,c
 29988  013F28  6EDA               	movwf	fsr2h,c
 29989  013F2A  0EFF               	movlw	255
 29990  013F2C  22DA               	addwfc	fsr2h,f,c
 29991  013F2E  500C               	movf	(btemp+11)^0,w,c
 29992  013F30  1ADF               	xorwf	indf2,f,c
 29993                           
 29994                           ;stkvar	_a @ sp[(-13)+-8]
 29995  013F32  0EEE               	movlw	238
 29996  013F34  24E1               	addwf	fsr1l,w,c
 29997  013F36  6ED9               	movwf	fsr2l,c
 29998  013F38  0EFF               	movlw	255
 29999  013F3A  20E2               	addwfc	fsr1h,w,c
 30000  013F3C  6EDA               	movwf	fsr2h,c
 30001  013F3E  50DF               	movf	indf2,w,c
 30002  013F40  6E0C               	movwf	(btemp+11)^0,c
 30003  013F42  90D8               	bcf	status,0,c
 30004  013F44  340C               	rlcf	(btemp+11)^0,w,c
 30005  013F46  6E0B               	movwf	(btemp+10)^0,c
 30006                           
 30007                           ;stkvar	_aexp @ sp[(-13)+11]
 30008  013F48  0EFE               	movlw	-2
 30009  013F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30010                           
 30011                           ;stkvar	_a @ sp[(-13)+-8]
 30012  013F50  0EED               	movlw	237
 30013  013F52  24E1               	addwf	fsr1l,w,c
 30014  013F54  6ED9               	movwf	fsr2l,c
 30015  013F56  0EFF               	movlw	255
 30016  013F58  20E2               	addwfc	fsr1h,w,c
 30017  013F5A  6EDA               	movwf	fsr2h,c
 30018  013F5C  AEDF               	btfss	indf2,7,c
 30019  013F5E  D002               	goto	l8709
 30020                           
 30021                           ;stkvar	_aexp @ sp[(-13)+11]
 30022  013F60  0EFE               	movlw	-2
 30023  013F62  80E3               	bsf	plusw1,0,c
 30024  013F64                     l8709:
 30025                           
 30026                           ;stkvar	_aexp @ sp[(-13)+11]
 30027  013F64  0EFE               	movlw	-2
 30028  013F66  50E3               	movf	plusw1,w,c
 30029  013F68  B4D8               	btfsc	status,2,c
 30030  013F6A  D01F               	goto	l8717
 30031                           
 30032                           ;stkvar	_aexp @ sp[(-13)+11]
 30033  013F6C  0EFE               	movlw	-2
 30034  013F6E  28E3               	incf	plusw1,w,c
 30035  013F70  A4D8               	btfss	status,2,c
 30036  013F72  D018               	goto	l8715
 30037  013F74  0E00               	movlw	0
 30038  013F76  6E09               	movwf	(btemp+8)^0,c
 30039  013F78  0E00               	movlw	0
 30040  013F7A  6E0A               	movwf	(btemp+9)^0,c
 30041  013F7C  0E00               	movlw	0
 30042  013F7E  6E0B               	movwf	(btemp+10)^0,c
 30043  013F80  0E00               	movlw	0
 30044  013F82  6E0C               	movwf	(btemp+11)^0,c
 30045                           
 30046                           ;stkvar	_a @ sp[(-13)+-8]
 30047  013F84  0EEB               	movlw	-21
 30048  013F86  0060  F027  FFE3   	movff	btemp+8,plusw1
 30049  013F8C  0EEC               	movlw	-20
 30050  013F8E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30051  013F94  0EED               	movlw	-19
 30052  013F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30053  013F9C  0EEE               	movlw	-18
 30054  013F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 30055  013FA4                     l8715:
 30056                           
 30057                           ;stkvar	_a @ sp[(-13)+-8]
 30058  013FA4  0EED               	movlw	-19
 30059  013FA6  8EE3               	bsf	plusw1,7,c
 30060  013FA8  D018               	goto	l8719
 30061  013FAA                     l8717:
 30062  013FAA  0E00               	movlw	0
 30063  013FAC  6E09               	movwf	(btemp+8)^0,c
 30064  013FAE  0E00               	movlw	0
 30065  013FB0  6E0A               	movwf	(btemp+9)^0,c
 30066  013FB2  0E00               	movlw	0
 30067  013FB4  6E0B               	movwf	(btemp+10)^0,c
 30068  013FB6  0E00               	movlw	0
 30069  013FB8  6E0C               	movwf	(btemp+11)^0,c
 30070                           
 30071                           ;stkvar	_a @ sp[(-13)+-8]
 30072  013FBA  0EEB               	movlw	-21
 30073  013FBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 30074  013FC2  0EEC               	movlw	-20
 30075  013FC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30076  013FCA  0EED               	movlw	-19
 30077  013FCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30078  013FD2  0EEE               	movlw	-18
 30079  013FD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 30080  013FDA                     l8719:
 30081                           
 30082                           ;stkvar	_aexp @ sp[(-13)+11]
 30083  013FDA  0EFE               	movlw	-2
 30084  013FDC  50E3               	movf	plusw1,w,c
 30085  013FDE  B4D8               	btfsc	status,2,c
 30086  013FE0  D004               	goto	u7060
 30087                           
 30088                           ;stkvar	_bexp @ sp[(-13)+10]
 30089  013FE2  0EFD               	movlw	-3
 30090  013FE4  50E3               	movf	plusw1,w,c
 30091  013FE6  A4D8               	btfss	status,2,c
 30092  013FE8  D009               	goto	l8727
 30093  013FEA                     u7060:
 30094  013FEA  0E00               	movlw	0
 30095  013FEC  6E01               	movwf	btemp^0,c
 30096  013FEE  0E00               	movlw	0
 30097  013FF0  6E02               	movwf	(btemp+1)^0,c
 30098  013FF2  0E00               	movlw	0
 30099  013FF4  6E03               	movwf	(btemp+2)^0,c
 30100  013FF6  0E00               	movlw	0
 30101  013FF8  6E04               	movwf	(btemp+3)^0,c
 30102  013FFA  D332               	goto	l3134
 30103  013FFC                     l8727:
 30104                           
 30105                           ;stkvar	_b @ sp[(-13)+-4]
 30106  013FFC  0EEF               	movlw	-17
 30107  013FFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 30108                           
 30109                           ;stkvar	_a @ sp[(-13)+-8]
 30110  014004  0EED               	movlw	237
 30111  014006  24E1               	addwf	fsr1l,w,c
 30112  014008  6ED9               	movwf	fsr2l,c
 30113  01400A  0EFF               	movlw	255
 30114  01400C  20E2               	addwfc	fsr1h,w,c
 30115  01400E  6EDA               	movwf	fsr2h,c
 30116  014010  50DF               	movf	indf2,w,c
 30117  014012  020C               	mulwf	(btemp+11)^0,c
 30118                           
 30119                           ;stkvar	_temp @ sp[(-13)+8]
 30120  014014  0EFB               	movlw	-5
 30121  014016  006F FFCF FFE3     	movff	prodl,plusw1
 30122  01401C  0EFC               	movlw	-4
 30123  01401E  006F FFD3 FFE3     	movff	prodh,plusw1
 30124                           
 30125                           ;stkvar	_temp @ sp[(-13)+8]
 30126  014024  0EFB               	movlw	-5
 30127  014026  006F FF8C  F00C    	movff	plusw1,btemp+11
 30128  01402C  0060  F030  F005   	movff	btemp+11,btemp+4
 30129  014032  6A06               	clrf	(btemp+5)^0,c
 30130  014034  6A07               	clrf	(btemp+6)^0,c
 30131  014036  6A08               	clrf	(btemp+7)^0,c
 30132                           
 30133                           ;stkvar	_grs @ sp[(-13)+4]
 30134  014038  0EF7               	movlw	-9
 30135  01403A  0060  F017  FFE3   	movff	btemp+4,plusw1
 30136  014040  0EF8               	movlw	-8
 30137  014042  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30138  014048  0EF9               	movlw	-7
 30139  01404A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30140  014050  0EFA               	movlw	-6
 30141  014052  0060  F023  FFE3   	movff	btemp+7,plusw1
 30142                           
 30143                           ;stkvar	_temp @ sp[(-13)+8]
 30144  014058  0EFC               	movlw	252
 30145  01405A  24E1               	addwf	fsr1l,w,c
 30146  01405C  6ED9               	movwf	fsr2l,c
 30147  01405E  0EFF               	movlw	255
 30148  014060  20E2               	addwfc	fsr1h,w,c
 30149  014062  6EDA               	movwf	fsr2h,c
 30150  014064  50DF               	movf	indf2,w,c
 30151  014066  6E0C               	movwf	(btemp+11)^0,c
 30152  014068  0060  F030  F005   	movff	btemp+11,btemp+4
 30153  01406E  6A06               	clrf	(btemp+5)^0,c
 30154  014070  6A07               	clrf	(btemp+6)^0,c
 30155  014072  6A08               	clrf	(btemp+7)^0,c
 30156                           
 30157                           ;stkvar	_prod @ sp[(-13)+0]
 30158  014074  0EF3               	movlw	-13
 30159  014076  0060  F017  FFE3   	movff	btemp+4,plusw1
 30160  01407C  0EF4               	movlw	-12
 30161  01407E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30162  014084  0EF5               	movlw	-11
 30163  014086  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30164  01408C  0EF6               	movlw	-10
 30165  01408E  0060  F023  FFE3   	movff	btemp+7,plusw1
 30166                           
 30167                           ;stkvar	_b @ sp[(-13)+-4]
 30168  014094  0EF0               	movlw	240
 30169  014096  24E1               	addwf	fsr1l,w,c
 30170  014098  6ED9               	movwf	fsr2l,c
 30171  01409A  0EFF               	movlw	255
 30172  01409C  20E2               	addwfc	fsr1h,w,c
 30173  01409E  6EDA               	movwf	fsr2h,c
 30174  0140A0  50DF               	movf	indf2,w,c
 30175  0140A2  6E0C               	movwf	(btemp+11)^0,c
 30176                           
 30177                           ;stkvar	_a @ sp[(-13)+-8]
 30178  0140A4  0EEC               	movlw	236
 30179  0140A6  24E1               	addwf	fsr1l,w,c
 30180  0140A8  6ED9               	movwf	fsr2l,c
 30181  0140AA  0EFF               	movlw	255
 30182  0140AC  20E2               	addwfc	fsr1h,w,c
 30183  0140AE  6EDA               	movwf	fsr2h,c
 30184  0140B0  50DF               	movf	indf2,w,c
 30185  0140B2  020C               	mulwf	(btemp+11)^0,c
 30186                           
 30187                           ;stkvar	_temp @ sp[(-13)+8]
 30188  0140B4  0EFB               	movlw	-5
 30189  0140B6  006F FFCF FFE3     	movff	prodl,plusw1
 30190  0140BC  0EFC               	movlw	-4
 30191  0140BE  006F FFD3 FFE3     	movff	prodh,plusw1
 30192                           
 30193                           ;stkvar	_grs @ sp[(-13)+4]
 30194  0140C4  50E1               	movf	fsr1l,w,c
 30195  0140C6  0FF7               	addlw	-9
 30196  0140C8  6ED9               	movwf	fsr2l,c
 30197  0140CA  50E2               	movf	fsr1h,w,c
 30198  0140CC  6EDA               	movwf	fsr2h,c
 30199  0140CE  0EFF               	movlw	255
 30200  0140D0  22DA               	addwfc	fsr2h,f,c
 30201                           
 30202                           ;stkvar	_temp @ sp[(-13)+8]
 30203  0140D2  0EFB               	movlw	-5
 30204  0140D4  50E3               	movf	plusw1,w,c
 30205  0140D6  26DE               	addwf	postinc2,f,c
 30206  0140D8  0E00               	movlw	0
 30207  0140DA  22DE               	addwfc	postinc2,f,c
 30208  0140DC  22DE               	addwfc	postinc2,f,c
 30209  0140DE  22DE               	addwfc	postinc2,f,c
 30210                           
 30211                           ;stkvar	_prod @ sp[(-13)+0]
 30212  0140E0  50E1               	movf	fsr1l,w,c
 30213  0140E2  0FF3               	addlw	-13
 30214  0140E4  6ED9               	movwf	fsr2l,c
 30215  0140E6  50E2               	movf	fsr1h,w,c
 30216  0140E8  6EDA               	movwf	fsr2h,c
 30217  0140EA  0EFF               	movlw	255
 30218  0140EC  22DA               	addwfc	fsr2h,f,c
 30219                           
 30220                           ;stkvar	_temp @ sp[(-13)+8]
 30221  0140EE  0EFC               	movlw	252
 30222  0140F0  24E1               	addwf	fsr1l,w,c
 30223  0140F2  6EE9               	movwf	fsr0l,c
 30224  0140F4  0EFF               	movlw	255
 30225  0140F6  20E2               	addwfc	fsr1h,w,c
 30226  0140F8  6EEA               	movwf	fsr0h,c
 30227  0140FA  50EF               	movf	indf0,w,c
 30228  0140FC  26DE               	addwf	postinc2,f,c
 30229  0140FE  0E00               	movlw	0
 30230  014100  22DE               	addwfc	postinc2,f,c
 30231  014102  22DE               	addwfc	postinc2,f,c
 30232  014104  22DE               	addwfc	postinc2,f,c
 30233                           
 30234                           ;stkvar	_b @ sp[(-13)+-4]
 30235  014106  0EF1               	movlw	241
 30236  014108  24E1               	addwf	fsr1l,w,c
 30237  01410A  6ED9               	movwf	fsr2l,c
 30238  01410C  0EFF               	movlw	255
 30239  01410E  20E2               	addwfc	fsr1h,w,c
 30240  014110  6EDA               	movwf	fsr2h,c
 30241  014112  50DF               	movf	indf2,w,c
 30242  014114  6E0C               	movwf	(btemp+11)^0,c
 30243                           
 30244                           ;stkvar	_a @ sp[(-13)+-8]
 30245  014116  0EEB               	movlw	-21
 30246  014118  50E3               	movf	plusw1,w,c
 30247  01411A  020C               	mulwf	(btemp+11)^0,c
 30248                           
 30249                           ;stkvar	_temp @ sp[(-13)+8]
 30250  01411C  0EFB               	movlw	-5
 30251  01411E  006F FFCF FFE3     	movff	prodl,plusw1
 30252  014124  0EFC               	movlw	-4
 30253  014126  006F FFD3 FFE3     	movff	prodh,plusw1
 30254                           
 30255                           ;stkvar	_grs @ sp[(-13)+4]
 30256  01412C  50E1               	movf	fsr1l,w,c
 30257  01412E  0FF7               	addlw	-9
 30258  014130  6ED9               	movwf	fsr2l,c
 30259  014132  50E2               	movf	fsr1h,w,c
 30260  014134  6EDA               	movwf	fsr2h,c
 30261  014136  0EFF               	movlw	255
 30262  014138  22DA               	addwfc	fsr2h,f,c
 30263                           
 30264                           ;stkvar	_temp @ sp[(-13)+8]
 30265  01413A  0EFB               	movlw	-5
 30266  01413C  50E3               	movf	plusw1,w,c
 30267  01413E  26DE               	addwf	postinc2,f,c
 30268  014140  0E00               	movlw	0
 30269  014142  22DE               	addwfc	postinc2,f,c
 30270  014144  22DE               	addwfc	postinc2,f,c
 30271  014146  22DE               	addwfc	postinc2,f,c
 30272                           
 30273                           ;stkvar	_prod @ sp[(-13)+0]
 30274  014148  50E1               	movf	fsr1l,w,c
 30275  01414A  0FF3               	addlw	-13
 30276  01414C  6ED9               	movwf	fsr2l,c
 30277  01414E  50E2               	movf	fsr1h,w,c
 30278  014150  6EDA               	movwf	fsr2h,c
 30279  014152  0EFF               	movlw	255
 30280  014154  22DA               	addwfc	fsr2h,f,c
 30281                           
 30282                           ;stkvar	_temp @ sp[(-13)+8]
 30283  014156  0EFC               	movlw	252
 30284  014158  24E1               	addwf	fsr1l,w,c
 30285  01415A  6EE9               	movwf	fsr0l,c
 30286  01415C  0EFF               	movlw	255
 30287  01415E  20E2               	addwfc	fsr1h,w,c
 30288  014160  6EEA               	movwf	fsr0h,c
 30289  014162  50EF               	movf	indf0,w,c
 30290  014164  26DE               	addwf	postinc2,f,c
 30291  014166  0E00               	movlw	0
 30292  014168  22DE               	addwfc	postinc2,f,c
 30293  01416A  22DE               	addwfc	postinc2,f,c
 30294  01416C  22DE               	addwfc	postinc2,f,c
 30295                           
 30296                           ;stkvar	_grs @ sp[(-13)+4]
 30297  01416E  50E1               	movf	fsr1l,w,c
 30298  014170  0FF7               	addlw	-9
 30299  014172  6ED9               	movwf	fsr2l,c
 30300  014174  50E2               	movf	fsr1h,w,c
 30301  014176  6EDA               	movwf	fsr2h,c
 30302  014178  0EFF               	movlw	255
 30303  01417A  22DA               	addwfc	fsr2h,f,c
 30304  01417C  0E08               	movlw	8
 30305  01417E                     u7075:
 30306  01417E  90D8               	bcf	status,0,c
 30307  014180  36DE               	rlcf	postinc2,f,c
 30308  014182  36DE               	rlcf	postinc2,f,c
 30309  014184  36DE               	rlcf	postinc2,f,c
 30310  014186  36DD               	rlcf	postdec2,f,c
 30311  014188  52DD               	movf	postdec2,f,c
 30312  01418A  52DD               	movf	postdec2,f,c
 30313  01418C  2EE8               	decfsz	wreg,f,c
 30314  01418E  D7F7               	goto	u7075
 30315                           
 30316                           ;stkvar	_b @ sp[(-13)+-4]
 30317  014190  0EF0               	movlw	240
 30318  014192  24E1               	addwf	fsr1l,w,c
 30319  014194  6ED9               	movwf	fsr2l,c
 30320  014196  0EFF               	movlw	255
 30321  014198  20E2               	addwfc	fsr1h,w,c
 30322  01419A  6EDA               	movwf	fsr2h,c
 30323  01419C  50DF               	movf	indf2,w,c
 30324  01419E  6E0C               	movwf	(btemp+11)^0,c
 30325                           
 30326                           ;stkvar	_a @ sp[(-13)+-8]
 30327  0141A0  0EEB               	movlw	-21
 30328  0141A2  50E3               	movf	plusw1,w,c
 30329  0141A4  020C               	mulwf	(btemp+11)^0,c
 30330                           
 30331                           ;stkvar	_temp @ sp[(-13)+8]
 30332  0141A6  0EFB               	movlw	-5
 30333  0141A8  006F FFCF FFE3     	movff	prodl,plusw1
 30334  0141AE  0EFC               	movlw	-4
 30335  0141B0  006F FFD3 FFE3     	movff	prodh,plusw1
 30336                           
 30337                           ;stkvar	_temp @ sp[(-13)+8]
 30338  0141B6  0EFB               	movlw	-5
 30339  0141B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30340  0141BE  0EFC               	movlw	-4
 30341  0141C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30342                           
 30343                           ;stkvar	_grs @ sp[(-13)+4]
 30344  0141C6  50E1               	movf	fsr1l,w,c
 30345  0141C8  0FF7               	addlw	-9
 30346  0141CA  6ED9               	movwf	fsr2l,c
 30347  0141CC  50E2               	movf	fsr1h,w,c
 30348  0141CE  6EDA               	movwf	fsr2h,c
 30349  0141D0  0EFF               	movlw	255
 30350  0141D2  22DA               	addwfc	fsr2h,f,c
 30351  0141D4  500B               	movf	(btemp+10)^0,w,c
 30352  0141D6  26DE               	addwf	postinc2,f,c
 30353  0141D8  500C               	movf	(btemp+11)^0,w,c
 30354  0141DA  22DE               	addwfc	postinc2,f,c
 30355  0141DC  0E00               	movlw	0
 30356  0141DE  22DE               	addwfc	postinc2,f,c
 30357  0141E0  22DE               	addwfc	postinc2,f,c
 30358                           
 30359                           ;stkvar	_b @ sp[(-13)+-4]
 30360  0141E2  0EEF               	movlw	-17
 30361  0141E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 30362                           
 30363                           ;stkvar	_a @ sp[(-13)+-8]
 30364  0141EA  0EEC               	movlw	236
 30365  0141EC  24E1               	addwf	fsr1l,w,c
 30366  0141EE  6ED9               	movwf	fsr2l,c
 30367  0141F0  0EFF               	movlw	255
 30368  0141F2  20E2               	addwfc	fsr1h,w,c
 30369  0141F4  6EDA               	movwf	fsr2h,c
 30370  0141F6  50DF               	movf	indf2,w,c
 30371  0141F8  020C               	mulwf	(btemp+11)^0,c
 30372                           
 30373                           ;stkvar	_temp @ sp[(-13)+8]
 30374  0141FA  0EFB               	movlw	-5
 30375  0141FC  006F FFCF FFE3     	movff	prodl,plusw1
 30376  014202  0EFC               	movlw	-4
 30377  014204  006F FFD3 FFE3     	movff	prodh,plusw1
 30378                           
 30379                           ;stkvar	_temp @ sp[(-13)+8]
 30380  01420A  0EFB               	movlw	-5
 30381  01420C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30382  014212  0EFC               	movlw	-4
 30383  014214  006F FF8C  F00C    	movff	plusw1,btemp+11
 30384                           
 30385                           ;stkvar	_grs @ sp[(-13)+4]
 30386  01421A  50E1               	movf	fsr1l,w,c
 30387  01421C  0FF7               	addlw	-9
 30388  01421E  6ED9               	movwf	fsr2l,c
 30389  014220  50E2               	movf	fsr1h,w,c
 30390  014222  6EDA               	movwf	fsr2h,c
 30391  014224  0EFF               	movlw	255
 30392  014226  22DA               	addwfc	fsr2h,f,c
 30393  014228  500B               	movf	(btemp+10)^0,w,c
 30394  01422A  26DE               	addwf	postinc2,f,c
 30395  01422C  500C               	movf	(btemp+11)^0,w,c
 30396  01422E  22DE               	addwfc	postinc2,f,c
 30397  014230  0E00               	movlw	0
 30398  014232  22DE               	addwfc	postinc2,f,c
 30399  014234  22DE               	addwfc	postinc2,f,c
 30400                           
 30401                           ;stkvar	_grs @ sp[(-13)+4]
 30402  014236  50E1               	movf	fsr1l,w,c
 30403  014238  0FF7               	addlw	-9
 30404  01423A  6ED9               	movwf	fsr2l,c
 30405  01423C  50E2               	movf	fsr1h,w,c
 30406  01423E  6EDA               	movwf	fsr2h,c
 30407  014240  0EFF               	movlw	255
 30408  014242  22DA               	addwfc	fsr2h,f,c
 30409  014244  0E08               	movlw	8
 30410  014246                     u7085:
 30411  014246  90D8               	bcf	status,0,c
 30412  014248  36DE               	rlcf	postinc2,f,c
 30413  01424A  36DE               	rlcf	postinc2,f,c
 30414  01424C  36DE               	rlcf	postinc2,f,c
 30415  01424E  36DD               	rlcf	postdec2,f,c
 30416  014250  52DD               	movf	postdec2,f,c
 30417  014252  52DD               	movf	postdec2,f,c
 30418  014254  2EE8               	decfsz	wreg,f,c
 30419  014256  D7F7               	goto	u7085
 30420                           
 30421                           ;stkvar	_b @ sp[(-13)+-4]
 30422  014258  0EEF               	movlw	-17
 30423  01425A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30424                           
 30425                           ;stkvar	_a @ sp[(-13)+-8]
 30426  014260  0EEB               	movlw	-21
 30427  014262  50E3               	movf	plusw1,w,c
 30428  014264  020C               	mulwf	(btemp+11)^0,c
 30429                           
 30430                           ;stkvar	_temp @ sp[(-13)+8]
 30431  014266  0EFB               	movlw	-5
 30432  014268  006F FFCF FFE3     	movff	prodl,plusw1
 30433  01426E  0EFC               	movlw	-4
 30434  014270  006F FFD3 FFE3     	movff	prodh,plusw1
 30435                           
 30436                           ;stkvar	_temp @ sp[(-13)+8]
 30437  014276  0EFB               	movlw	-5
 30438  014278  006F FF8C  F00B    	movff	plusw1,btemp+10
 30439  01427E  0EFC               	movlw	-4
 30440  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 30441                           
 30442                           ;stkvar	_grs @ sp[(-13)+4]
 30443  014286  50E1               	movf	fsr1l,w,c
 30444  014288  0FF7               	addlw	-9
 30445  01428A  6ED9               	movwf	fsr2l,c
 30446  01428C  50E2               	movf	fsr1h,w,c
 30447  01428E  6EDA               	movwf	fsr2h,c
 30448  014290  0EFF               	movlw	255
 30449  014292  22DA               	addwfc	fsr2h,f,c
 30450  014294  500B               	movf	(btemp+10)^0,w,c
 30451  014296  26DE               	addwf	postinc2,f,c
 30452  014298  500C               	movf	(btemp+11)^0,w,c
 30453  01429A  22DE               	addwfc	postinc2,f,c
 30454  01429C  0E00               	movlw	0
 30455  01429E  22DE               	addwfc	postinc2,f,c
 30456  0142A0  22DE               	addwfc	postinc2,f,c
 30457                           
 30458                           ;stkvar	_b @ sp[(-13)+-4]
 30459  0142A2  0EF0               	movlw	240
 30460  0142A4  24E1               	addwf	fsr1l,w,c
 30461  0142A6  6ED9               	movwf	fsr2l,c
 30462  0142A8  0EFF               	movlw	255
 30463  0142AA  20E2               	addwfc	fsr1h,w,c
 30464  0142AC  6EDA               	movwf	fsr2h,c
 30465  0142AE  50DF               	movf	indf2,w,c
 30466  0142B0  6E0C               	movwf	(btemp+11)^0,c
 30467                           
 30468                           ;stkvar	_a @ sp[(-13)+-8]
 30469  0142B2  0EED               	movlw	237
 30470  0142B4  24E1               	addwf	fsr1l,w,c
 30471  0142B6  6ED9               	movwf	fsr2l,c
 30472  0142B8  0EFF               	movlw	255
 30473  0142BA  20E2               	addwfc	fsr1h,w,c
 30474  0142BC  6EDA               	movwf	fsr2h,c
 30475  0142BE  50DF               	movf	indf2,w,c
 30476  0142C0  020C               	mulwf	(btemp+11)^0,c
 30477                           
 30478                           ;stkvar	_temp @ sp[(-13)+8]
 30479  0142C2  0EFB               	movlw	-5
 30480  0142C4  006F FFCF FFE3     	movff	prodl,plusw1
 30481  0142CA  0EFC               	movlw	-4
 30482  0142CC  006F FFD3 FFE3     	movff	prodh,plusw1
 30483                           
 30484                           ;stkvar	_temp @ sp[(-13)+8]
 30485  0142D2  0EFB               	movlw	-5
 30486  0142D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 30487  0142DA  0EFC               	movlw	-4
 30488  0142DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30489                           
 30490                           ;stkvar	_prod @ sp[(-13)+0]
 30491  0142E2  50E1               	movf	fsr1l,w,c
 30492  0142E4  0FF3               	addlw	-13
 30493  0142E6  6ED9               	movwf	fsr2l,c
 30494  0142E8  50E2               	movf	fsr1h,w,c
 30495  0142EA  6EDA               	movwf	fsr2h,c
 30496  0142EC  0EFF               	movlw	255
 30497  0142EE  22DA               	addwfc	fsr2h,f,c
 30498  0142F0  500B               	movf	(btemp+10)^0,w,c
 30499  0142F2  26DE               	addwf	postinc2,f,c
 30500  0142F4  500C               	movf	(btemp+11)^0,w,c
 30501  0142F6  22DE               	addwfc	postinc2,f,c
 30502  0142F8  0E00               	movlw	0
 30503  0142FA  22DE               	addwfc	postinc2,f,c
 30504  0142FC  22DE               	addwfc	postinc2,f,c
 30505                           
 30506                           ;stkvar	_b @ sp[(-13)+-4]
 30507  0142FE  0EF1               	movlw	241
 30508  014300  24E1               	addwf	fsr1l,w,c
 30509  014302  6ED9               	movwf	fsr2l,c
 30510  014304  0EFF               	movlw	255
 30511  014306  20E2               	addwfc	fsr1h,w,c
 30512  014308  6EDA               	movwf	fsr2h,c
 30513  01430A  50DF               	movf	indf2,w,c
 30514  01430C  6E0C               	movwf	(btemp+11)^0,c
 30515                           
 30516                           ;stkvar	_a @ sp[(-13)+-8]
 30517  01430E  0EEC               	movlw	236
 30518  014310  24E1               	addwf	fsr1l,w,c
 30519  014312  6ED9               	movwf	fsr2l,c
 30520  014314  0EFF               	movlw	255
 30521  014316  20E2               	addwfc	fsr1h,w,c
 30522  014318  6EDA               	movwf	fsr2h,c
 30523  01431A  50DF               	movf	indf2,w,c
 30524  01431C  020C               	mulwf	(btemp+11)^0,c
 30525                           
 30526                           ;stkvar	_temp @ sp[(-13)+8]
 30527  01431E  0EFB               	movlw	-5
 30528  014320  006F FFCF FFE3     	movff	prodl,plusw1
 30529  014326  0EFC               	movlw	-4
 30530  014328  006F FFD3 FFE3     	movff	prodh,plusw1
 30531                           
 30532                           ;stkvar	_temp @ sp[(-13)+8]
 30533  01432E  0EFB               	movlw	-5
 30534  014330  006F FF8C  F00B    	movff	plusw1,btemp+10
 30535  014336  0EFC               	movlw	-4
 30536  014338  006F FF8C  F00C    	movff	plusw1,btemp+11
 30537                           
 30538                           ;stkvar	_prod @ sp[(-13)+0]
 30539  01433E  50E1               	movf	fsr1l,w,c
 30540  014340  0FF3               	addlw	-13
 30541  014342  6ED9               	movwf	fsr2l,c
 30542  014344  50E2               	movf	fsr1h,w,c
 30543  014346  6EDA               	movwf	fsr2h,c
 30544  014348  0EFF               	movlw	255
 30545  01434A  22DA               	addwfc	fsr2h,f,c
 30546  01434C  500B               	movf	(btemp+10)^0,w,c
 30547  01434E  26DE               	addwf	postinc2,f,c
 30548  014350  500C               	movf	(btemp+11)^0,w,c
 30549  014352  22DE               	addwfc	postinc2,f,c
 30550  014354  0E00               	movlw	0
 30551  014356  22DE               	addwfc	postinc2,f,c
 30552  014358  22DE               	addwfc	postinc2,f,c
 30553                           
 30554                           ;stkvar	_b @ sp[(-13)+-4]
 30555  01435A  0EF1               	movlw	241
 30556  01435C  24E1               	addwf	fsr1l,w,c
 30557  01435E  6ED9               	movwf	fsr2l,c
 30558  014360  0EFF               	movlw	255
 30559  014362  20E2               	addwfc	fsr1h,w,c
 30560  014364  6EDA               	movwf	fsr2h,c
 30561  014366  50DF               	movf	indf2,w,c
 30562  014368  6E0C               	movwf	(btemp+11)^0,c
 30563                           
 30564                           ;stkvar	_a @ sp[(-13)+-8]
 30565  01436A  0EED               	movlw	237
 30566  01436C  24E1               	addwf	fsr1l,w,c
 30567  01436E  6ED9               	movwf	fsr2l,c
 30568  014370  0EFF               	movlw	255
 30569  014372  20E2               	addwfc	fsr1h,w,c
 30570  014374  6EDA               	movwf	fsr2h,c
 30571  014376  50DF               	movf	indf2,w,c
 30572  014378  020C               	mulwf	(btemp+11)^0,c
 30573                           
 30574                           ;stkvar	_temp @ sp[(-13)+8]
 30575  01437A  0EFB               	movlw	-5
 30576  01437C  006F FFCF FFE3     	movff	prodl,plusw1
 30577  014382  0EFC               	movlw	-4
 30578  014384  006F FFD3 FFE3     	movff	prodh,plusw1
 30579                           
 30580                           ;stkvar	_temp @ sp[(-13)+8]
 30581  01438A  0EFB               	movlw	-5
 30582  01438C  006F FF8C  F00B    	movff	plusw1,btemp+10
 30583  014392  0EFC               	movlw	-4
 30584  014394  006F FF8C  F00C    	movff	plusw1,btemp+11
 30585  01439A  500B               	movf	(btemp+10)^0,w,c
 30586  01439C  6E05               	movwf	(btemp+4)^0,c
 30587  01439E  500C               	movf	(btemp+11)^0,w,c
 30588  0143A0  6E06               	movwf	(btemp+5)^0,c
 30589  0143A2  6A07               	clrf	(btemp+6)^0,c
 30590  0143A4  6A08               	clrf	(btemp+7)^0,c
 30591  0143A6  0060  F01C  F008   	movff	btemp+6,btemp+7
 30592  0143AC  0060  F018  F007   	movff	btemp+5,btemp+6
 30593  0143B2  0060  F014  F006   	movff	btemp+4,btemp+5
 30594  0143B8  6A05               	clrf	(btemp+4)^0,c
 30595                           
 30596                           ;stkvar	_prod @ sp[(-13)+0]
 30597  0143BA  50E1               	movf	fsr1l,w,c
 30598  0143BC  0FF3               	addlw	-13
 30599  0143BE  6ED9               	movwf	fsr2l,c
 30600  0143C0  50E2               	movf	fsr1h,w,c
 30601  0143C2  6EDA               	movwf	fsr2h,c
 30602  0143C4  0EFF               	movlw	255
 30603  0143C6  22DA               	addwfc	fsr2h,f,c
 30604  0143C8  5005               	movf	(btemp+4)^0,w,c
 30605  0143CA  26DE               	addwf	postinc2,f,c
 30606  0143CC  5006               	movf	(btemp+5)^0,w,c
 30607  0143CE  22DE               	addwfc	postinc2,f,c
 30608  0143D0  5007               	movf	(btemp+6)^0,w,c
 30609  0143D2  22DE               	addwfc	postinc2,f,c
 30610  0143D4  5008               	movf	(btemp+7)^0,w,c
 30611  0143D6  22DE               	addwfc	postinc2,f,c
 30612                           
 30613                           ;stkvar	_prod @ sp[(-13)+0]
 30614  0143D8  50E1               	movf	fsr1l,w,c
 30615  0143DA  0FF3               	addlw	-13
 30616  0143DC  6ED9               	movwf	fsr2l,c
 30617  0143DE  50E2               	movf	fsr1h,w,c
 30618  0143E0  6EDA               	movwf	fsr2h,c
 30619  0143E2  0EFF               	movlw	255
 30620  0143E4  22DA               	addwfc	fsr2h,f,c
 30621                           
 30622                           ;stkvar	_grs @ sp[(-13)+4]
 30623  0143E6  0EFA               	movlw	250
 30624  0143E8  24E1               	addwf	fsr1l,w,c
 30625  0143EA  6EE9               	movwf	fsr0l,c
 30626  0143EC  0EFF               	movlw	255
 30627  0143EE  20E2               	addwfc	fsr1h,w,c
 30628  0143F0  6EEA               	movwf	fsr0h,c
 30629  0143F2  50EF               	movf	indf0,w,c
 30630  0143F4  26DE               	addwf	postinc2,f,c
 30631  0143F6  0E00               	movlw	0
 30632  0143F8  22DE               	addwfc	postinc2,f,c
 30633  0143FA  22DE               	addwfc	postinc2,f,c
 30634  0143FC  22DE               	addwfc	postinc2,f,c
 30635                           
 30636                           ;stkvar	_grs @ sp[(-13)+4]
 30637  0143FE  50E1               	movf	fsr1l,w,c
 30638  014400  0FF7               	addlw	-9
 30639  014402  6ED9               	movwf	fsr2l,c
 30640  014404  50E2               	movf	fsr1h,w,c
 30641  014406  6EDA               	movwf	fsr2h,c
 30642  014408  0EFF               	movlw	255
 30643  01440A  22DA               	addwfc	fsr2h,f,c
 30644  01440C  0E08               	movlw	8
 30645  01440E                     u7095:
 30646  01440E  90D8               	bcf	status,0,c
 30647  014410  36DE               	rlcf	postinc2,f,c
 30648  014412  36DE               	rlcf	postinc2,f,c
 30649  014414  36DE               	rlcf	postinc2,f,c
 30650  014416  36DD               	rlcf	postdec2,f,c
 30651  014418  52DD               	movf	postdec2,f,c
 30652  01441A  52DD               	movf	postdec2,f,c
 30653  01441C  2EE8               	decfsz	wreg,f,c
 30654  01441E  D7F7               	goto	u7095
 30655  014420  0E82               	movlw	130
 30656  014422  6E0B               	movwf	(btemp+10)^0,c
 30657  014424  0EFF               	movlw	255
 30658  014426  6E0C               	movwf	(btemp+11)^0,c
 30659                           
 30660                           ;stkvar	_bexp @ sp[(-13)+10]
 30661  014428  0EFD               	movlw	-3
 30662  01442A  50E3               	movf	plusw1,w,c
 30663  01442C  6E09               	movwf	(btemp+8)^0,c
 30664  01442E  6A0A               	clrf	(btemp+9)^0,c
 30665                           
 30666                           ;stkvar	_aexp @ sp[(-13)+11]
 30667  014430  0EFE               	movlw	-2
 30668  014432  50E3               	movf	plusw1,w,c
 30669  014434  2609               	addwf	(btemp+8)^0,f,c
 30670  014436  0E00               	movlw	0
 30671  014438  220A               	addwfc	(btemp+9)^0,f,c
 30672  01443A  500B               	movf	(btemp+10)^0,w,c
 30673  01443C  2609               	addwf	(btemp+8)^0,f,c
 30674  01443E  500C               	movf	(btemp+11)^0,w,c
 30675  014440  220A               	addwfc	(btemp+9)^0,f,c
 30676                           
 30677                           ;stkvar	_temp @ sp[(-13)+8]
 30678  014442  0EFB               	movlw	-5
 30679  014444  0060  F027  FFE3   	movff	btemp+8,plusw1
 30680  01444A  0EFC               	movlw	-4
 30681  01444C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30682  014452  D021               	goto	l8789
 30683  014454                     l8779:
 30684                           
 30685                           ;stkvar	_prod @ sp[(-13)+0]
 30686  014454  90D8               	bcf	status,0,c
 30687  014456  0EF3               	movlw	-13
 30688  014458  36E3               	rlcf	plusw1,f,c
 30689  01445A  0EF4               	movlw	-12
 30690  01445C  36E3               	rlcf	plusw1,f,c
 30691  01445E  0EF5               	movlw	-11
 30692  014460  36E3               	rlcf	plusw1,f,c
 30693  014462  0EF6               	movlw	-10
 30694  014464  36E3               	rlcf	plusw1,f,c
 30695                           
 30696                           ;stkvar	_grs @ sp[(-13)+4]
 30697  014466  0EFA               	movlw	-6
 30698  014468  AEE3               	btfss	plusw1,7,c
 30699  01446A  D002               	goto	l8785
 30700                           
 30701                           ;stkvar	_prod @ sp[(-13)+0]
 30702  01446C  0EF3               	movlw	-13
 30703  01446E  80E3               	bsf	plusw1,0,c
 30704  014470                     l8785:
 30705                           
 30706                           ;stkvar	_grs @ sp[(-13)+4]
 30707  014470  90D8               	bcf	status,0,c
 30708  014472  0EF7               	movlw	-9
 30709  014474  36E3               	rlcf	plusw1,f,c
 30710  014476  0EF8               	movlw	-8
 30711  014478  36E3               	rlcf	plusw1,f,c
 30712  01447A  0EF9               	movlw	-7
 30713  01447C  36E3               	rlcf	plusw1,f,c
 30714  01447E  0EFA               	movlw	-6
 30715  014480  36E3               	rlcf	plusw1,f,c
 30716                           
 30717                           ;stkvar	_temp @ sp[(-13)+8]
 30718  014482  50E1               	movf	fsr1l,w,c
 30719  014484  0FFB               	addlw	-5
 30720  014486  6ED9               	movwf	fsr2l,c
 30721  014488  50E2               	movf	fsr1h,w,c
 30722  01448A  6EDA               	movwf	fsr2h,c
 30723  01448C  0EFF               	movlw	255
 30724  01448E  22DA               	addwfc	fsr2h,f,c
 30725  014490  06DE               	decf	postinc2,f,c
 30726  014492  0E00               	movlw	0
 30727  014494  5ADD               	subwfb	postdec2,f,c
 30728  014496                     l8789:
 30729                           
 30730                           ;stkvar	_prod @ sp[(-13)+0]
 30731  014496  0EF5               	movlw	-11
 30732  014498  AEE3               	btfss	plusw1,7,c
 30733  01449A  D7DC               	goto	l8779
 30734                           
 30735                           ;stkvar	_aexp @ sp[(-13)+11]
 30736  01449C  0EFE               	movlw	-2
 30737  01449E  6AE3               	clrf	plusw1,c
 30738                           
 30739                           ;stkvar	_grs @ sp[(-13)+4]
 30740  0144A0  0EFA               	movlw	-6
 30741  0144A2  AEE3               	btfss	plusw1,7,c
 30742  0144A4  D020               	goto	l8803
 30743                           
 30744                           ;stkvar	_grs @ sp[(-13)+4]
 30745  0144A6  50E1               	movf	fsr1l,w,c
 30746  0144A8  0FF7               	addlw	-9
 30747  0144AA  6ED9               	movwf	fsr2l,c
 30748  0144AC  50E2               	movf	fsr1h,w,c
 30749  0144AE  6EDA               	movwf	fsr2h,c
 30750  0144B0  0EFF               	movlw	255
 30751  0144B2  22DA               	addwfc	fsr2h,f,c
 30752  0144B4  0EFF               	movlw	255
 30753  0144B6  14DE               	andwf	postinc2,w,c
 30754  0144B8  6E09               	movwf	(btemp+8)^0,c
 30755  0144BA  0EFF               	movlw	255
 30756  0144BC  14DE               	andwf	postinc2,w,c
 30757  0144BE  6E0A               	movwf	(btemp+9)^0,c
 30758  0144C0  0EFF               	movlw	255
 30759  0144C2  14DE               	andwf	postinc2,w,c
 30760  0144C4  6E0B               	movwf	(btemp+10)^0,c
 30761  0144C6  0E7F               	movlw	127
 30762  0144C8  14DE               	andwf	postinc2,w,c
 30763  0144CA  6E0C               	movwf	(btemp+11)^0,c
 30764  0144CC  5009               	movf	(btemp+8)^0,w,c
 30765  0144CE  100A               	iorwf	(btemp+9)^0,w,c
 30766  0144D0  100B               	iorwf	(btemp+10)^0,w,c
 30767  0144D2  100C               	iorwf	(btemp+11)^0,w,c
 30768  0144D4  B4D8               	btfsc	status,2,c
 30769  0144D6  D004               	goto	l8799
 30770  0144D8                     u7130:
 30771                           
 30772                           ;stkvar	_aexp @ sp[(-13)+11]
 30773  0144D8  0EFE               	movlw	-2
 30774  0144DA  6AE3               	clrf	plusw1,c
 30775  0144DC  2AE3               	incf	plusw1,f,c
 30776  0144DE  D003               	goto	l8803
 30777  0144E0                     l8799:
 30778                           
 30779                           ;stkvar	_prod @ sp[(-13)+0]
 30780  0144E0  0EF3               	movlw	-13
 30781  0144E2  B0E3               	btfsc	plusw1,0,c
 30782  0144E4  D7F9               	goto	u7130
 30783  0144E6                     l8803:
 30784                           
 30785                           ;stkvar	_aexp @ sp[(-13)+11]
 30786  0144E6  0EFE               	movlw	-2
 30787  0144E8  50E3               	movf	plusw1,w,c
 30788  0144EA  B4D8               	btfsc	status,2,c
 30789  0144EC  D036               	goto	l8813
 30790                           
 30791                           ;stkvar	_prod @ sp[(-13)+0]
 30792  0144EE  50E1               	movf	fsr1l,w,c
 30793  0144F0  0FF3               	addlw	-13
 30794  0144F2  6ED9               	movwf	fsr2l,c
 30795  0144F4  50E2               	movf	fsr1h,w,c
 30796  0144F6  6EDA               	movwf	fsr2h,c
 30797  0144F8  0EFF               	movlw	255
 30798  0144FA  22DA               	addwfc	fsr2h,f,c
 30799  0144FC  2ADE               	incf	postinc2,f,c
 30800  0144FE  0E00               	movlw	0
 30801  014500  22DE               	addwfc	postinc2,f,c
 30802  014502  22DE               	addwfc	postinc2,f,c
 30803  014504  22DE               	addwfc	postinc2,f,c
 30804                           
 30805                           ;stkvar	_prod @ sp[(-13)+0]
 30806  014506  0EF6               	movlw	-10
 30807  014508  A0E3               	btfss	plusw1,0,c
 30808  01450A  D027               	goto	l8813
 30809  01450C  0E01               	movlw	1
 30810  01450E  6E0C               	movwf	(btemp+11)^0,c
 30811                           
 30812                           ;stkvar	_prod @ sp[(-13)+0]
 30813  014510  50E1               	movf	fsr1l,w,c
 30814  014512  0FF3               	addlw	-13
 30815  014514  6ED9               	movwf	fsr2l,c
 30816  014516  50E2               	movf	fsr1h,w,c
 30817  014518  6EDA               	movwf	fsr2h,c
 30818  01451A  0EFF               	movlw	255
 30819  01451C  22DA               	addwfc	fsr2h,f,c
 30820  01451E  280C               	incf	(btemp+11)^0,w,c
 30821  014520  52DE               	movf	postinc2,f,c
 30822  014522  D008               	goto	u7170
 30823  014524                     u7175:
 30824  014524  52DE               	movf	postinc2,f,c
 30825  014526  90D8               	bcf	status,0,c
 30826  014528  BEDC               	btfsc	preinc2,7,c
 30827  01452A  80D8               	bsf	status,0,c
 30828  01452C  32DD               	rrcf	postdec2,f,c
 30829  01452E  32DD               	rrcf	postdec2,f,c
 30830  014530  32DD               	rrcf	postdec2,f,c
 30831  014532  32DE               	rrcf	postinc2,f,c
 30832  014534                     u7170:
 30833  014534  2EE8               	decfsz	wreg,f,c
 30834  014536  D7F6               	goto	u7175
 30835                           
 30836                           ;stkvar	_temp @ sp[(-13)+8]
 30837  014538  0EFB               	movlw	-5
 30838  01453A  50E3               	movf	plusw1,w,c
 30839  01453C  0F01               	addlw	1
 30840  01453E  6E01               	movwf	btemp^0,c
 30841  014540  0EFB               	movlw	-5
 30842  014542  0060  F007  FFE3   	movff	btemp,plusw1
 30843  014548  6A01               	clrf	btemp^0,c
 30844  01454A  0EFC               	movlw	-4
 30845  01454C  50E3               	movf	plusw1,w,c
 30846  01454E  2001               	addwfc	btemp^0,w,c
 30847  014550  6E01               	movwf	btemp^0,c
 30848  014552  0EFC               	movlw	-4
 30849  014554  0060  F007  FFE3   	movff	btemp,plusw1
 30850  01455A                     l8813:
 30851                           
 30852                           ;stkvar	_temp @ sp[(-13)+8]
 30853  01455A  0EFC               	movlw	-4
 30854  01455C  BEE3               	btfsc	plusw1,7,c
 30855  01455E  D020               	goto	l8817
 30856  014560  0EFC               	movlw	-4
 30857  014562  50E3               	movf	plusw1,w,c
 30858  014564  E104               	bnz	u7180
 30859  014566  0EFB               	movlw	-5
 30860  014568  28E3               	incf	plusw1,w,c
 30861  01456A  A0D8               	btfss	status,0,c
 30862  01456C  D019               	goto	l8817
 30863  01456E                     u7180:
 30864  01456E  0E00               	movlw	0
 30865  014570  6E09               	movwf	(btemp+8)^0,c
 30866  014572  0E00               	movlw	0
 30867  014574  6E0A               	movwf	(btemp+9)^0,c
 30868  014576  0E80               	movlw	128
 30869  014578  6E0B               	movwf	(btemp+10)^0,c
 30870  01457A  0E7F               	movlw	127
 30871  01457C  6E0C               	movwf	(btemp+11)^0,c
 30872                           
 30873                           ;stkvar	_prod @ sp[(-13)+0]
 30874  01457E  0EF3               	movlw	-13
 30875  014580  0060  F027  FFE3   	movff	btemp+8,plusw1
 30876  014586  0EF4               	movlw	-12
 30877  014588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30878  01458E  0EF5               	movlw	-11
 30879  014590  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30880  014596  0EF6               	movlw	-10
 30881  014598  0060  F033  FFE3   	movff	btemp+11,plusw1
 30882  01459E  D044               	goto	l8833
 30883  0145A0                     l8817:
 30884                           
 30885                           ;stkvar	_temp @ sp[(-13)+8]
 30886  0145A0  0EFC               	movlw	-4
 30887  0145A2  BEE3               	btfsc	plusw1,7,c
 30888  0145A4  D007               	goto	u7190
 30889  0145A6  0EFC               	movlw	-4
 30890  0145A8  50E3               	movf	plusw1,w,c
 30891  0145AA  E10F               	bnz	l8823
 30892  0145AC  0EFB               	movlw	-5
 30893  0145AE  04E3               	decf	plusw1,w,c
 30894  0145B0  B0D8               	btfsc	status,0,c
 30895  0145B2  D00B               	goto	l8823
 30896  0145B4                     u7190:
 30897                           
 30898                           ;stkvar	_prod @ sp[(-13)+0]
 30899  0145B4  0EF3               	movlw	-13
 30900  0145B6  6AE3               	clrf	plusw1,c
 30901  0145B8  0EF4               	movlw	-12
 30902  0145BA  6AE3               	clrf	plusw1,c
 30903  0145BC  0EF5               	movlw	-11
 30904  0145BE  6AE3               	clrf	plusw1,c
 30905  0145C0  0EF6               	movlw	-10
 30906  0145C2  6AE3               	clrf	plusw1,c
 30907                           
 30908                           ;stkvar	_sign @ sp[(-13)+12]
 30909  0145C4  0EFF               	movlw	-1
 30910  0145C6  6AE3               	clrf	plusw1,c
 30911  0145C8  D02F               	goto	l8833
 30912  0145CA                     l8823:
 30913                           
 30914                           ;stkvar	_temp @ sp[(-13)+8]
 30915                           ;stkvar	_bexp @ sp[(-13)+10]
 30916  0145CA  0EFB               	movlw	-5
 30917  0145CC  006F FF8C  F001    	movff	plusw1,btemp
 30918  0145D2  0EFD               	movlw	-3
 30919  0145D4  0060  F007  FFE3   	movff	btemp,plusw1
 30920                           
 30921                           ;stkvar	_prod @ sp[(-13)+0]
 30922  0145DA  50E1               	movf	fsr1l,w,c
 30923  0145DC  0FF3               	addlw	-13
 30924  0145DE  6ED9               	movwf	fsr2l,c
 30925  0145E0  50E2               	movf	fsr1h,w,c
 30926  0145E2  6EDA               	movwf	fsr2h,c
 30927  0145E4  0EFF               	movlw	255
 30928  0145E6  22DA               	addwfc	fsr2h,f,c
 30929  0145E8  0EFF               	movlw	255
 30930  0145EA  16DE               	andwf	postinc2,f,c
 30931  0145EC  0EFF               	movlw	255
 30932  0145EE  16DE               	andwf	postinc2,f,c
 30933  0145F0  0E7F               	movlw	127
 30934  0145F2  16DE               	andwf	postinc2,f,c
 30935  0145F4  0E00               	movlw	0
 30936  0145F6  16DE               	andwf	postinc2,f,c
 30937                           
 30938                           ;stkvar	_bexp @ sp[(-13)+10]
 30939  0145F8  0EFD               	movlw	-3
 30940  0145FA  A0E3               	btfss	plusw1,0,c
 30941  0145FC  D008               	goto	l8831
 30942                           
 30943                           ;stkvar	_prod @ sp[(-13)+0]
 30944  0145FE  0EF5               	movlw	245
 30945  014600  24E1               	addwf	fsr1l,w,c
 30946  014602  6ED9               	movwf	fsr2l,c
 30947  014604  0EFF               	movlw	255
 30948  014606  20E2               	addwfc	fsr1h,w,c
 30949  014608  6EDA               	movwf	fsr2h,c
 30950  01460A  0E00               	movlw	0
 30951  01460C  8EDB               	bsf	plusw2,7,c
 30952  01460E                     l8831:
 30953                           
 30954                           ;stkvar	_prod @ sp[(-13)+0]
 30955  01460E  0EF6               	movlw	246
 30956  014610  24E1               	addwf	fsr1l,w,c
 30957  014612  6ED9               	movwf	fsr2l,c
 30958  014614  0EFF               	movlw	255
 30959  014616  20E2               	addwfc	fsr1h,w,c
 30960  014618  6EDA               	movwf	fsr2h,c
 30961                           
 30962                           ;stkvar	_bexp @ sp[(-13)+10]
 30963  01461A  0EFD               	movlw	-3
 30964  01461C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30965  014622  90D8               	bcf	status,0,c
 30966  014624  300C               	rrcf	(btemp+11)^0,w,c
 30967  014626  6EDF               	movwf	indf2,c
 30968  014628                     l8833:
 30969                           
 30970                           ;stkvar	_sign @ sp[(-13)+12]
 30971  014628  0EFF               	movlw	-1
 30972  01462A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30973                           
 30974                           ;stkvar	_prod @ sp[(-13)+0]
 30975  014630  0EF6               	movlw	246
 30976  014632  24E1               	addwf	fsr1l,w,c
 30977  014634  6ED9               	movwf	fsr2l,c
 30978  014636  0EFF               	movlw	255
 30979  014638  20E2               	addwfc	fsr1h,w,c
 30980  01463A  6EDA               	movwf	fsr2h,c
 30981  01463C  500C               	movf	(btemp+11)^0,w,c
 30982  01463E  12DF               	iorwf	indf2,f,c
 30983                           
 30984                           ;stkvar	_prod @ sp[(-13)+0]
 30985  014640  0EF3               	movlw	-13
 30986  014642  006F FF8C  F001    	movff	plusw1,btemp
 30987  014648  0EF4               	movlw	-12
 30988  01464A  006F FF8C  F002    	movff	plusw1,btemp+1
 30989  014650  0EF5               	movlw	-11
 30990  014652  006F FF8C  F003    	movff	plusw1,btemp+2
 30991  014658  0EF6               	movlw	-10
 30992  01465A  006F FF8C  F004    	movff	plusw1,btemp+3
 30993  014660                     l3134:
 30994                           
 30995                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30996  014660  0EEB               	movlw	235
 30997  014662  26E1               	addwf	fsr1l,f,c
 30998  014664  0EFF               	movlw	255
 30999  014666  22E2               	addwfc	fsr1h,f,c
 31000  014668  0012               	return		;funcret
 31001  01466A                     __end_of___flmul:
 31002                           	opt callstack 0
 31003                           
 31004 ;; *************** function _SYSTEM_Initialize *****************
 31005 ;; Defined at:
 31006 ;;		line 50 in file "mcc_generated_files/mcc.c"
 31007 ;; Parameters:    Size  Location     Type
 31008 ;;		None
 31009 ;; Auto vars:     Size  Location     Type
 31010 ;;		None
 31011 ;; Return value:  Size  Location     Type
 31012 ;;                  1  [STACK] void 
 31013 ;; Registers used:
 31014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 31015 ;; Tracked objects:
 31016 ;;		On entry : 0/0
 31017 ;;		On exit  : 3F/3C
 31018 ;;		Unchanged: 0/0
 31019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31024 ;;Total ram usage:        0 bytes
 31025 ;; Hardware stack levels used:    1
 31026 ;; Hardware stack levels required when called:   17
 31027 ;; This function calls:
 31028 ;;		_ADCC_Initialize
 31029 ;;		_CLKREF_Initialize
 31030 ;;		_DMA1_Initialize
 31031 ;;		_DMA2_Initialize
 31032 ;;		_EXT_INT_Initialize
 31033 ;;		_FVR_Initialize
 31034 ;;		_INTERRUPT_Initialize
 31035 ;;		_OSCILLATOR_Initialize
 31036 ;;		_PIN_MANAGER_Initialize
 31037 ;;		_PMD_Initialize
 31038 ;;		_PWM8_Initialize
 31039 ;;		_SPI1_Initialize
 31040 ;;		_TMR2_Initialize
 31041 ;;		_TMR3_Initialize
 31042 ;;		_TMR5_Initialize
 31043 ;;		_TMR6_Initialize
 31044 ;;		_UART1_Initialize
 31045 ;;		_UART2_Initialize
 31046 ;; This function is called by:
 31047 ;;		_main
 31048 ;; This function uses a reentrant model
 31049 ;;
 31050                           
 31051                           	psect	text117
 31052  01BD04                     __ptext117:
 31053                           	opt callstack 0
 31054  01BD04                     _SYSTEM_Initialize:
 31055                           	opt callstack 13
 31056                           
 31057                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31058                           
 31059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31060                           ;incstack = 0
 31061  01BD04  EC66  F0DC         	call	_INTERRUPT_Initialize	;wreg free
 31062                           
 31063                           ; BSR set to: 57
 31064                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31065  01BD08  ECCC  F0E4         	call	_PMD_Initialize	;wreg free
 31066                           
 31067                           ; BSR set to: 57
 31068                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31069  01BD0C  EC51  F0D9         	call	_PIN_MANAGER_Initialize	;wreg free
 31070                           
 31071                           ; BSR set to: 58
 31072                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31073  01BD10  ECC1  F0E4         	call	_OSCILLATOR_Initialize	;wreg free
 31074                           
 31075                           ; BSR set to: 57
 31076                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 31077  01BD14  EC4F  F0E5         	call	_FVR_Initialize	;wreg free
 31078                           
 31079                           ; BSR set to: 62
 31080                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 31081  01BD18  ECC8  F0DB         	call	_ADCC_Initialize	;wreg free
 31082                           
 31083                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 31084  01BD1C  ECB6  F0E4         	call	_PWM8_Initialize	;wreg free
 31085                           
 31086                           ; BSR set to: 63
 31087                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 31088  01BD20  EC9F  F0E4         	call	_TMR2_Initialize	;wreg free
 31089                           
 31090                           ; BSR set to: 57
 31091                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 31092  01BD24  EC58  F0E1         	call	_EXT_INT_Initialize	;wreg free
 31093                           
 31094                           ; BSR set to: 57
 31095                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 31096  01BD28  EC2C  F0E2         	call	_TMR6_Initialize	;wreg free
 31097                           
 31098                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 31099  01BD2C  EC13  F0DF         	call	_TMR3_Initialize	;wreg free
 31100                           
 31101                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 31102  01BD30  ECEF  F0DE         	call	_TMR5_Initialize	;wreg free
 31103                           
 31104                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 31105  01BD34  ECCB  F0DE         	call	_UART1_Initialize	;wreg free
 31106                           
 31107                           ; BSR set to: 57
 31108                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 31109  01BD38  EC2D  F0DD         	call	_UART2_Initialize	;wreg free
 31110                           
 31111                           ; BSR set to: 57
 31112                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 31113  01BD3C  ECAB  F0E4         	call	_SPI1_Initialize	;wreg free
 31114                           
 31115                           ; BSR set to: 61
 31116                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 31117  01BD40  ECB7  F0DD         	call	_DMA2_Initialize	;wreg free
 31118                           
 31119                           ; BSR set to: 59
 31120                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 31121  01BD44  EC93  F0DB         	call	_DMA1_Initialize	;wreg free
 31122                           
 31123                           ; BSR set to: 59
 31124                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 31125  01BD48  EC23  F0E5         	call	_CLKREF_Initialize	;wreg free
 31126                           
 31127                           ; BSR set to: 60
 31128                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31129  01BD4C  0012               	return		;funcret
 31130  01BD4E                     __end_of_SYSTEM_Initialize:
 31131                           	opt callstack 0
 31132                           
 31133 ;; *************** function _UART2_Initialize *****************
 31134 ;; Defined at:
 31135 ;;		line 78 in file "mcc_generated_files/uart2.c"
 31136 ;; Parameters:    Size  Location     Type
 31137 ;;		None
 31138 ;; Auto vars:     Size  Location     Type
 31139 ;;		None
 31140 ;; Return value:  Size  Location     Type
 31141 ;;                  1  [STACK] void 
 31142 ;; Registers used:
 31143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31144 ;; Tracked objects:
 31145 ;;		On entry : 3F/39
 31146 ;;		On exit  : 3F/39
 31147 ;;		Unchanged: 0/0
 31148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31153 ;;Total ram usage:        0 bytes
 31154 ;; Hardware stack levels used:    1
 31155 ;; Hardware stack levels required when called:   16
 31156 ;; This function calls:
 31157 ;;		_UART2_SetRxInterruptHandler
 31158 ;;		_UART2_SetTxInterruptHandler
 31159 ;; This function is called by:
 31160 ;;		_SYSTEM_Initialize
 31161 ;; This function uses a reentrant model
 31162 ;;
 31163                           
 31164                           	psect	text118
 31165  01BA5A                     __ptext118:
 31166                           	opt callstack 0
 31167  01BA5A                     _UART2_Initialize:
 31168                           	opt callstack 13
 31169                           
 31170                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 31171                           
 31172                           ; BSR set to: 60
 31173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31174                           ;incstack = 0
 31175  01BA5A  0139               	movlb	57	; () banked
 31176  01BA5C  9596               	bcf	150,2,b	;volatile
 31177                           
 31178                           ; BSR set to: 57
 31179                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 31180  01BA5E  0E3A               	movlw	low _UART2_Receive_ISR
 31181  01BA60  6EE6               	movwf	postinc1,c
 31182  01BA62  0EC8               	movlw	high _UART2_Receive_ISR
 31183  01BA64  6EE6               	movwf	postinc1,c
 31184  01BA66  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 31185  01BA68  6EE6               	movwf	postinc1,c
 31186  01BA6A  EC7D  F0E2         	call	_UART2_SetRxInterruptHandler	;wreg free
 31187                           
 31188                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 31189  01BA6E  0139               	movlb	57	; () banked
 31190  01BA70  9796               	bcf	150,3,b	;volatile
 31191                           
 31192                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 31193  01BA72  0E2C               	movlw	low _UART2_Transmit_ISR
 31194  01BA74  6EE6               	movwf	postinc1,c
 31195  01BA76  0EC4               	movlw	high _UART2_Transmit_ISR
 31196  01BA78  6EE6               	movwf	postinc1,c
 31197  01BA7A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 31198  01BA7C  6EE6               	movwf	postinc1,c
 31199  01BA7E  EC69  F0E2         	call	_UART2_SetTxInterruptHandler	;wreg free
 31200                           
 31201                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 31202  01BA82  013D               	movlb	61	; () banked
 31203  01BA84  6BD4               	clrf	212,b	;volatile
 31204                           
 31205                           ; BSR set to: 61
 31206                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 31207  01BA86  6BD6               	clrf	214,b	;volatile
 31208                           
 31209                           ; BSR set to: 61
 31210                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 31211  01BA88  6BD8               	clrf	216,b	;volatile
 31212                           
 31213                           ; BSR set to: 61
 31214                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 31215  01BA8A  0EB0               	movlw	176
 31216  01BA8C  6FDA               	movwf	218,b	;volatile
 31217                           
 31218                           ; BSR set to: 61
 31219                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 31220  01BA8E  0E80               	movlw	128
 31221  01BA90  6FDB               	movwf	219,b	;volatile
 31222                           
 31223                           ; BSR set to: 61
 31224                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 31225  01BA92  6BDC               	clrf	220,b	;volatile
 31226                           
 31227                           ; BSR set to: 61
 31228                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 31229  01BA94  0E82               	movlw	130
 31230  01BA96  6FDD               	movwf	221,b	;volatile
 31231                           
 31232                           ; BSR set to: 61
 31233                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 31234  01BA98  0E06               	movlw	6
 31235  01BA9A  6FDE               	movwf	222,b	;volatile
 31236                           
 31237                           ; BSR set to: 61
 31238                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 31239  01BA9C  6BDF               	clrf	223,b	;volatile
 31240                           
 31241                           ; BSR set to: 61
 31242                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 31243  01BA9E  6BE0               	clrf	224,b	;volatile
 31244                           
 31245                           ; BSR set to: 61
 31246                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 31247  01BAA0  6BE1               	clrf	225,b	;volatile
 31248                           
 31249                           ; BSR set to: 61
 31250                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 31251  01BAA2  6BE2               	clrf	226,b	;volatile
 31252                           
 31253                           ; BSR set to: 61
 31254                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 31255  01BAA4  0100               	movlb	0	; () banked
 31256  01BAA6  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 31260  01BAA8  6A46               	clrf	_uart2TxTail^0,c	;volatile
 31261                           
 31262                           ; BSR set to: 0
 31263                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 31264  01BAAA  0E40               	movlw	64
 31265  01BAAC  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 31266                           
 31267                           ; BSR set to: 0
 31268                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 31269  01BAAE  6A44               	clrf	_uart2RxHead^0,c	;volatile
 31270                           
 31271                           ; BSR set to: 0
 31272                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 31273  01BAB0  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 31274                           
 31275                           ; BSR set to: 0
 31276                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 31277  01BAB2  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 31278                           
 31279                           ; BSR set to: 0
 31280                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 31281  01BAB4  0139               	movlb	57	; () banked
 31282  01BAB6  8596               	bsf	150,2,b	;volatile
 31283                           
 31284                           ; BSR set to: 57
 31285                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31286  01BAB8  0012               	return		;funcret
 31287  01BABA                     __end_of_UART2_Initialize:
 31288                           	opt callstack 0
 31289                           
 31290 ;; *************** function _UART2_SetTxInterruptHandler *****************
 31291 ;; Defined at:
 31292 ;;		line 252 in file "mcc_generated_files/uart2.c"
 31293 ;; Parameters:    Size  Location     Type
 31294 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31295 ;;		 -> UART2_Transmit_ISR(1), 
 31296 ;; Auto vars:     Size  Location     Type
 31297 ;;		None
 31298 ;; Return value:  Size  Location     Type
 31299 ;;                  1  [STACK] void 
 31300 ;; Registers used:
 31301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31302 ;; Tracked objects:
 31303 ;;		On entry : 3F/39
 31304 ;;		On exit  : 0/0
 31305 ;;		Unchanged: 0/0
 31306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31311 ;;Total ram usage:        0 bytes
 31312 ;; Hardware stack levels used:    1
 31313 ;; Hardware stack levels required when called:   15
 31314 ;; This function calls:
 31315 ;;		Nothing
 31316 ;; This function is called by:
 31317 ;;		_UART2_Initialize
 31318 ;; This function uses a reentrant model
 31319 ;;
 31320                           
 31321                           	psect	text119
 31322  01C4D2                     __ptext119:
 31323                           	opt callstack 0
 31324  01C4D2                     _UART2_SetTxInterruptHandler:
 31325                           	opt callstack 13
 31326                           
 31327                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 31328                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31329                           
 31330                           ; BSR set to: 57
 31331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31332                           ;incstack = 0
 31333  01C4D2  50E1               	movf	fsr1l,w,c
 31334  01C4D4  0FFD               	addlw	-3
 31335  01C4D6  6ED9               	movwf	fsr2l,c
 31336  01C4D8  50E2               	movf	fsr1h,w,c
 31337  01C4DA  6EDA               	movwf	fsr2h,c
 31338  01C4DC  0EFF               	movlw	255
 31339  01C4DE  22DA               	addwfc	fsr2h,f,c
 31340  01C4E0  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 31341  01C4E6  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 31342  01C4EC  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 31343                           
 31344                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31345  01C4F2  52E5               	movf	postdec1,f,c
 31346  01C4F4  52E5               	movf	postdec1,f,c
 31347  01C4F6  52E5               	movf	postdec1,f,c
 31348  01C4F8  0012               	return		;funcret
 31349  01C4FA                     __end_of_UART2_SetTxInterruptHandler:
 31350                           	opt callstack 0
 31351                           
 31352 ;; *************** function _UART2_SetRxInterruptHandler *****************
 31353 ;; Defined at:
 31354 ;;		line 248 in file "mcc_generated_files/uart2.c"
 31355 ;; Parameters:    Size  Location     Type
 31356 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31357 ;;		 -> UART2_Receive_ISR(1), 
 31358 ;; Auto vars:     Size  Location     Type
 31359 ;;		None
 31360 ;; Return value:  Size  Location     Type
 31361 ;;                  1  [STACK] void 
 31362 ;; Registers used:
 31363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31364 ;; Tracked objects:
 31365 ;;		On entry : 3F/39
 31366 ;;		On exit  : 0/0
 31367 ;;		Unchanged: 0/0
 31368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31373 ;;Total ram usage:        0 bytes
 31374 ;; Hardware stack levels used:    1
 31375 ;; Hardware stack levels required when called:   15
 31376 ;; This function calls:
 31377 ;;		Nothing
 31378 ;; This function is called by:
 31379 ;;		_UART2_Initialize
 31380 ;; This function uses a reentrant model
 31381 ;;
 31382                           
 31383                           	psect	text120
 31384  01C4FA                     __ptext120:
 31385                           	opt callstack 0
 31386  01C4FA                     _UART2_SetRxInterruptHandler:
 31387                           	opt callstack 13
 31388                           
 31389                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 31390                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31391                           
 31392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31393                           ;incstack = 0
 31394  01C4FA  50E1               	movf	fsr1l,w,c
 31395  01C4FC  0FFD               	addlw	-3
 31396  01C4FE  6ED9               	movwf	fsr2l,c
 31397  01C500  50E2               	movf	fsr1h,w,c
 31398  01C502  6EDA               	movwf	fsr2h,c
 31399  01C504  0EFF               	movlw	255
 31400  01C506  22DA               	addwfc	fsr2h,f,c
 31401  01C508  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 31402  01C50E  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 31403  01C514  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 31404                           
 31405                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31406  01C51A  52E5               	movf	postdec1,f,c
 31407  01C51C  52E5               	movf	postdec1,f,c
 31408  01C51E  52E5               	movf	postdec1,f,c
 31409  01C520  0012               	return		;funcret
 31410  01C522                     __end_of_UART2_SetRxInterruptHandler:
 31411                           	opt callstack 0
 31412                           
 31413 ;; *************** function _UART1_Initialize *****************
 31414 ;; Defined at:
 31415 ;;		line 75 in file "mcc_generated_files/uart1.c"
 31416 ;; Parameters:    Size  Location     Type
 31417 ;;		None
 31418 ;; Auto vars:     Size  Location     Type
 31419 ;;		None
 31420 ;; Return value:  Size  Location     Type
 31421 ;;                  1  [STACK] void 
 31422 ;; Registers used:
 31423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31424 ;; Tracked objects:
 31425 ;;		On entry : 0/39
 31426 ;;		On exit  : 3F/39
 31427 ;;		Unchanged: 0/0
 31428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31433 ;;Total ram usage:        0 bytes
 31434 ;; Hardware stack levels used:    1
 31435 ;; Hardware stack levels required when called:   16
 31436 ;; This function calls:
 31437 ;;		_UART1_SetRxInterruptHandler
 31438 ;; This function is called by:
 31439 ;;		_SYSTEM_Initialize
 31440 ;; This function uses a reentrant model
 31441 ;;
 31442                           
 31443                           	psect	text121
 31444  01BD96                     __ptext121:
 31445                           	opt callstack 0
 31446  01BD96                     _UART1_Initialize:
 31447                           	opt callstack 13
 31448                           
 31449                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 31450                           
 31451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31452                           ;incstack = 0
 31453  01BD96  0139               	movlb	57	; () banked
 31454  01BD98  9793               	bcf	147,3,b	;volatile
 31455                           
 31456                           ; BSR set to: 57
 31457                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 31458  01BD9A  0EF8               	movlw	low _UART1_Receive_ISR
 31459  01BD9C  6EE6               	movwf	postinc1,c
 31460  01BD9E  0EC7               	movlw	high _UART1_Receive_ISR
 31461  01BDA0  6EE6               	movwf	postinc1,c
 31462  01BDA2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 31463  01BDA4  6EE6               	movwf	postinc1,c
 31464  01BDA6  EC91  F0E2         	call	_UART1_SetRxInterruptHandler	;wreg free
 31465                           
 31466                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 31467  01BDAA  013D               	movlb	61	; () banked
 31468  01BDAC  6BEC               	clrf	236,b	;volatile
 31469                           
 31470                           ; BSR set to: 61
 31471                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 31472  01BDAE  6BED               	clrf	237,b	;volatile
 31473                           
 31474                           ; BSR set to: 61
 31475                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 31476  01BDB0  6BEE               	clrf	238,b	;volatile
 31477                           
 31478                           ; BSR set to: 61
 31479                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 31480  01BDB2  6BEF               	clrf	239,b	;volatile
 31481                           
 31482                           ; BSR set to: 61
 31483                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 31484  01BDB4  6BF0               	clrf	240,b	;volatile
 31485                           
 31486                           ; BSR set to: 61
 31487                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 31488  01BDB6  6BF1               	clrf	241,b	;volatile
 31489                           
 31490                           ; BSR set to: 61
 31491                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 31492  01BDB8  0EB0               	movlw	176
 31493  01BDBA  6FF2               	movwf	242,b	;volatile
 31494                           
 31495                           ; BSR set to: 61
 31496                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 31497  01BDBC  0E80               	movlw	128
 31498  01BDBE  6FF3               	movwf	243,b	;volatile
 31499                           
 31500                           ; BSR set to: 61
 31501                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 31502  01BDC0  6BF4               	clrf	244,b	;volatile
 31503                           
 31504                           ; BSR set to: 61
 31505                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 31506  01BDC2  0E8A               	movlw	138
 31507  01BDC4  6FF5               	movwf	245,b	;volatile
 31508                           
 31509                           ; BSR set to: 61
 31510                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 31511  01BDC6  6BF6               	clrf	246,b	;volatile
 31512                           
 31513                           ; BSR set to: 61
 31514                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 31515  01BDC8  6BF7               	clrf	247,b	;volatile
 31516                           
 31517                           ; BSR set to: 61
 31518                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 31519  01BDCA  6BF8               	clrf	248,b	;volatile
 31520                           
 31521                           ; BSR set to: 61
 31522                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 31523  01BDCC  6BF9               	clrf	249,b	;volatile
 31524                           
 31525                           ; BSR set to: 61
 31526                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 31527  01BDCE  6BFA               	clrf	250,b	;volatile
 31528                           
 31529                           ; BSR set to: 61
 31530                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 31531  01BDD0  6A47               	clrf	_uart1RxHead^0,c	;volatile
 31532                           
 31533                           ; BSR set to: 61
 31534                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 31535  01BDD2  0100               	movlb	0	; () banked
 31536  01BDD4  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 31537                           
 31538                           ; BSR set to: 0
 31539                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 31540  01BDD6  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 31541                           
 31542                           ; BSR set to: 0
 31543                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 31544  01BDD8  0139               	movlb	57	; () banked
 31545  01BDDA  8793               	bsf	147,3,b	;volatile
 31546                           
 31547                           ; BSR set to: 57
 31548                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 31549  01BDDC  0012               	return		;funcret
 31550  01BDDE                     __end_of_UART1_Initialize:
 31551                           	opt callstack 0
 31552                           
 31553 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31554 ;; Defined at:
 31555 ;;		line 207 in file "mcc_generated_files/uart1.c"
 31556 ;; Parameters:    Size  Location     Type
 31557 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31558 ;;		 -> UART1_Receive_ISR(1), 
 31559 ;; Auto vars:     Size  Location     Type
 31560 ;;		None
 31561 ;; Return value:  Size  Location     Type
 31562 ;;                  1  [STACK] void 
 31563 ;; Registers used:
 31564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31565 ;; Tracked objects:
 31566 ;;		On entry : 3F/39
 31567 ;;		On exit  : 0/0
 31568 ;;		Unchanged: 0/0
 31569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31574 ;;Total ram usage:        0 bytes
 31575 ;; Hardware stack levels used:    1
 31576 ;; Hardware stack levels required when called:   15
 31577 ;; This function calls:
 31578 ;;		Nothing
 31579 ;; This function is called by:
 31580 ;;		_UART1_Initialize
 31581 ;; This function uses a reentrant model
 31582 ;;
 31583                           
 31584                           	psect	text122
 31585  01C522                     __ptext122:
 31586                           	opt callstack 0
 31587  01C522                     _UART1_SetRxInterruptHandler:
 31588                           	opt callstack 13
 31589                           
 31590                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 31591                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31592                           
 31593                           ; BSR set to: 57
 31594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31595                           ;incstack = 0
 31596  01C522  50E1               	movf	fsr1l,w,c
 31597  01C524  0FFD               	addlw	-3
 31598  01C526  6ED9               	movwf	fsr2l,c
 31599  01C528  50E2               	movf	fsr1h,w,c
 31600  01C52A  6EDA               	movwf	fsr2h,c
 31601  01C52C  0EFF               	movlw	255
 31602  01C52E  22DA               	addwfc	fsr2h,f,c
 31603  01C530  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 31604  01C536  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 31605  01C53C  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 31606                           
 31607                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31608  01C542  52E5               	movf	postdec1,f,c
 31609  01C544  52E5               	movf	postdec1,f,c
 31610  01C546  52E5               	movf	postdec1,f,c
 31611  01C548  0012               	return		;funcret
 31612  01C54A                     __end_of_UART1_SetRxInterruptHandler:
 31613                           	opt callstack 0
 31614                           
 31615 ;; *************** function _TMR6_Initialize *****************
 31616 ;; Defined at:
 31617 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 31618 ;; Parameters:    Size  Location     Type
 31619 ;;		None
 31620 ;; Auto vars:     Size  Location     Type
 31621 ;;		None
 31622 ;; Return value:  Size  Location     Type
 31623 ;;                  1  [STACK] void 
 31624 ;; Registers used:
 31625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31626 ;; Tracked objects:
 31627 ;;		On entry : 3F/39
 31628 ;;		On exit  : 0/0
 31629 ;;		Unchanged: 0/0
 31630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31635 ;;Total ram usage:        0 bytes
 31636 ;; Hardware stack levels used:    1
 31637 ;; Hardware stack levels required when called:   16
 31638 ;; This function calls:
 31639 ;;		_TMR6_SetInterruptHandler
 31640 ;; This function is called by:
 31641 ;;		_SYSTEM_Initialize
 31642 ;; This function uses a reentrant model
 31643 ;;
 31644                           
 31645                           	psect	text123
 31646  01C458                     __ptext123:
 31647                           	opt callstack 0
 31648  01C458                     _TMR6_Initialize:
 31649                           	opt callstack 13
 31650                           
 31651                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 31652                           
 31653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31654                           ;incstack = 0
 31655  01C458  0E01               	movlw	1
 31656  01C45A  6E96               	movwf	150,c	;volatile
 31657                           
 31658                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 31659  01C45C  6A95               	clrf	149,c	;volatile
 31660                           
 31661                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 31662  01C45E  6A97               	clrf	151,c	;volatile
 31663                           
 31664                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 31665  01C460  0E7C               	movlw	124
 31666  01C462  6E93               	movwf	147,c	;volatile
 31667                           
 31668                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 31669  01C464  6A92               	clrf	146,c	;volatile
 31670                           
 31671                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 31672  01C466  0139               	movlb	57	; () banked
 31673  01C468  91A9               	bcf	169,0,b	;volatile
 31674                           
 31675                           ; BSR set to: 57
 31676                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 31677  01C46A  8199               	bsf	153,0,b	;volatile
 31678                           
 31679                           ; BSR set to: 57
 31680                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 31681  01C46C  0E6C               	movlw	low _TMR6_DefaultInterruptHandler
 31682  01C46E  6EE6               	movwf	postinc1,c
 31683  01C470  0EBC               	movlw	high _TMR6_DefaultInterruptHandler
 31684  01C472  6EE6               	movwf	postinc1,c
 31685  01C474  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 31686  01C476  6EE6               	movwf	postinc1,c
 31687  01C478  ECA5  F0E2         	call	_TMR6_SetInterruptHandler	;wreg free
 31688                           
 31689                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 31690  01C47C  0EE0               	movlw	224
 31691  01C47E  6E94               	movwf	148,c	;volatile
 31692                           
 31693                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31694  01C480  0012               	return		;funcret
 31695  01C482                     __end_of_TMR6_Initialize:
 31696                           	opt callstack 0
 31697                           
 31698 ;; *************** function _TMR6_SetInterruptHandler *****************
 31699 ;; Defined at:
 31700 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 31701 ;; Parameters:    Size  Location     Type
 31702 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31703 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 31704 ;; Auto vars:     Size  Location     Type
 31705 ;;		None
 31706 ;; Return value:  Size  Location     Type
 31707 ;;                  1  [STACK] void 
 31708 ;; Registers used:
 31709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31710 ;; Tracked objects:
 31711 ;;		On entry : 3F/39
 31712 ;;		On exit  : 0/0
 31713 ;;		Unchanged: 0/0
 31714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31719 ;;Total ram usage:        0 bytes
 31720 ;; Hardware stack levels used:    1
 31721 ;; Hardware stack levels required when called:   15
 31722 ;; This function calls:
 31723 ;;		Nothing
 31724 ;; This function is called by:
 31725 ;;		_TMR6_Initialize
 31726 ;; This function uses a reentrant model
 31727 ;;
 31728                           
 31729                           	psect	text124
 31730  01C54A                     __ptext124:
 31731                           	opt callstack 0
 31732  01C54A                     _TMR6_SetInterruptHandler:
 31733                           	opt callstack 13
 31734                           
 31735                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 31736                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31737                           
 31738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31739                           ;incstack = 0
 31740  01C54A  50E1               	movf	fsr1l,w,c
 31741  01C54C  0FFD               	addlw	-3
 31742  01C54E  6ED9               	movwf	fsr2l,c
 31743  01C550  50E2               	movf	fsr1h,w,c
 31744  01C552  6EDA               	movwf	fsr2h,c
 31745  01C554  0EFF               	movlw	255
 31746  01C556  22DA               	addwfc	fsr2h,f,c
 31747  01C558  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 31748  01C55E  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 31749  01C564  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 31750                           
 31751                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31752  01C56A  52E5               	movf	postdec1,f,c
 31753  01C56C  52E5               	movf	postdec1,f,c
 31754  01C56E  52E5               	movf	postdec1,f,c
 31755  01C570  0012               	return		;funcret
 31756  01C572                     __end_of_TMR6_SetInterruptHandler:
 31757                           	opt callstack 0
 31758                           
 31759 ;; *************** function _TMR5_Initialize *****************
 31760 ;; Defined at:
 31761 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 31762 ;; Parameters:    Size  Location     Type
 31763 ;;		None
 31764 ;; Auto vars:     Size  Location     Type
 31765 ;;		None
 31766 ;; Return value:  Size  Location     Type
 31767 ;;                  1  [STACK] void 
 31768 ;; Registers used:
 31769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31770 ;; Tracked objects:
 31771 ;;		On entry : 0/39
 31772 ;;		On exit  : 0/0
 31773 ;;		Unchanged: 0/0
 31774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31779 ;;Total ram usage:        0 bytes
 31780 ;; Hardware stack levels used:    1
 31781 ;; Hardware stack levels required when called:   16
 31782 ;; This function calls:
 31783 ;;		_TMR5_SetInterruptHandler
 31784 ;; This function is called by:
 31785 ;;		_SYSTEM_Initialize
 31786 ;; This function uses a reentrant model
 31787 ;;
 31788                           
 31789                           	psect	text125
 31790  01BDDE                     __ptext125:
 31791                           	opt callstack 0
 31792  01BDDE                     _TMR5_Initialize:
 31793                           	opt callstack 13
 31794                           
 31795                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 31796                           
 31797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31798                           ;incstack = 0
 31799  01BDDE  6A9B               	clrf	155,c	;volatile
 31800                           
 31801                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 31802  01BDE0  6A9C               	clrf	156,c	;volatile
 31803                           
 31804                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 31805  01BDE2  0E01               	movlw	1
 31806  01BDE4  6E9D               	movwf	157,c	;volatile
 31807                           
 31808                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 31809  01BDE6  0E63               	movlw	99
 31810  01BDE8  6E99               	movwf	153,c	;volatile
 31811                           
 31812                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 31813  01BDEA  0EC0               	movlw	192
 31814  01BDEC  6E98               	movwf	152,c	;volatile
 31815                           
 31816                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 31817  01BDEE  5098               	movf	152,w,c	;volatile
 31818  01BDF0  006F FE64  F001    	movff	16281,btemp	;volatile
 31819  01BDF6  6A02               	clrf	(btemp+1)^0,c
 31820  01BDF8  0060  F004  F002   	movff	btemp,btemp+1
 31821  01BDFE  6A01               	clrf	btemp^0,c
 31822  01BE00  1001               	iorwf	btemp^0,w,c
 31823  01BE02  0100               	movlb	0	; () banked
 31824  01BE04  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 31825  01BE06  5002               	movf	(btemp+1)^0,w,c
 31826  01BE08  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 31827                           
 31828                           ; BSR set to: 0
 31829                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 31830  01BE0A  0139               	movlb	57	; () banked
 31831  01BE0C  9DA8               	bcf	168,6,b	;volatile
 31832                           
 31833                           ; BSR set to: 57
 31834                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 31835  01BE0E  8D98               	bsf	152,6,b	;volatile
 31836                           
 31837                           ; BSR set to: 57
 31838                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 31839  01BE10  0E70               	movlw	low _TMR5_DefaultInterruptHandler
 31840  01BE12  6EE6               	movwf	postinc1,c
 31841  01BE14  0EC1               	movlw	high _TMR5_DefaultInterruptHandler
 31842  01BE16  6EE6               	movwf	postinc1,c
 31843  01BE18  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 31844  01BE1A  6EE6               	movwf	postinc1,c
 31845  01BE1C  ECB9  F0E2         	call	_TMR5_SetInterruptHandler	;wreg free
 31846                           
 31847                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 31848  01BE20  0E31               	movlw	49
 31849  01BE22  6E9A               	movwf	154,c	;volatile
 31850                           
 31851                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31852  01BE24  0012               	return		;funcret
 31853  01BE26                     __end_of_TMR5_Initialize:
 31854                           	opt callstack 0
 31855                           
 31856 ;; *************** function _TMR5_SetInterruptHandler *****************
 31857 ;; Defined at:
 31858 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 31859 ;; Parameters:    Size  Location     Type
 31860 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31861 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 31862 ;; Auto vars:     Size  Location     Type
 31863 ;;		None
 31864 ;; Return value:  Size  Location     Type
 31865 ;;                  1  [STACK] void 
 31866 ;; Registers used:
 31867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31868 ;; Tracked objects:
 31869 ;;		On entry : 3F/39
 31870 ;;		On exit  : 0/0
 31871 ;;		Unchanged: 0/0
 31872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31877 ;;Total ram usage:        0 bytes
 31878 ;; Hardware stack levels used:    1
 31879 ;; Hardware stack levels required when called:   15
 31880 ;; This function calls:
 31881 ;;		Nothing
 31882 ;; This function is called by:
 31883 ;;		_TMR5_Initialize
 31884 ;; This function uses a reentrant model
 31885 ;;
 31886                           
 31887                           	psect	text126
 31888  01C572                     __ptext126:
 31889                           	opt callstack 0
 31890  01C572                     _TMR5_SetInterruptHandler:
 31891                           	opt callstack 13
 31892                           
 31893                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 31894                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31895                           
 31896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31897                           ;incstack = 0
 31898  01C572  50E1               	movf	fsr1l,w,c
 31899  01C574  0FFD               	addlw	-3
 31900  01C576  6ED9               	movwf	fsr2l,c
 31901  01C578  50E2               	movf	fsr1h,w,c
 31902  01C57A  6EDA               	movwf	fsr2h,c
 31903  01C57C  0EFF               	movlw	255
 31904  01C57E  22DA               	addwfc	fsr2h,f,c
 31905  01C580  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 31906  01C586  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 31907  01C58C  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 31908                           
 31909                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31910  01C592  52E5               	movf	postdec1,f,c
 31911  01C594  52E5               	movf	postdec1,f,c
 31912  01C596  52E5               	movf	postdec1,f,c
 31913  01C598  0012               	return		;funcret
 31914  01C59A                     __end_of_TMR5_SetInterruptHandler:
 31915                           	opt callstack 0
 31916                           
 31917 ;; *************** function _TMR3_Initialize *****************
 31918 ;; Defined at:
 31919 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 31920 ;; Parameters:    Size  Location     Type
 31921 ;;		None
 31922 ;; Auto vars:     Size  Location     Type
 31923 ;;		None
 31924 ;; Return value:  Size  Location     Type
 31925 ;;                  1  [STACK] void 
 31926 ;; Registers used:
 31927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31928 ;; Tracked objects:
 31929 ;;		On entry : 0/39
 31930 ;;		On exit  : 0/0
 31931 ;;		Unchanged: 0/0
 31932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31937 ;;Total ram usage:        0 bytes
 31938 ;; Hardware stack levels used:    1
 31939 ;; Hardware stack levels required when called:   16
 31940 ;; This function calls:
 31941 ;;		_TMR3_SetInterruptHandler
 31942 ;; This function is called by:
 31943 ;;		_SYSTEM_Initialize
 31944 ;; This function uses a reentrant model
 31945 ;;
 31946                           
 31947                           	psect	text127
 31948  01BE26                     __ptext127:
 31949                           	opt callstack 0
 31950  01BE26                     _TMR3_Initialize:
 31951                           	opt callstack 13
 31952                           
 31953                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 31954                           
 31955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31956                           ;incstack = 0
 31957  01BE26  6AA7               	clrf	167,c	;volatile
 31958                           
 31959                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 31960  01BE28  6AA8               	clrf	168,c	;volatile
 31961                           
 31962                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 31963  01BE2A  0E01               	movlw	1
 31964  01BE2C  6EA9               	movwf	169,c	;volatile
 31965                           
 31966                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 31967  01BE2E  0E3C               	movlw	60
 31968  01BE30  6EA5               	movwf	165,c	;volatile
 31969                           
 31970                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 31971  01BE32  0EB0               	movlw	176
 31972  01BE34  6EA4               	movwf	164,c	;volatile
 31973                           
 31974                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 31975  01BE36  50A4               	movf	164,w,c	;volatile
 31976  01BE38  006F FE94  F001    	movff	16293,btemp	;volatile
 31977  01BE3E  6A02               	clrf	(btemp+1)^0,c
 31978  01BE40  0060  F004  F002   	movff	btemp,btemp+1
 31979  01BE46  6A01               	clrf	btemp^0,c
 31980  01BE48  1001               	iorwf	btemp^0,w,c
 31981  01BE4A  0100               	movlb	0	; () banked
 31982  01BE4C  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31983  01BE4E  5002               	movf	(btemp+1)^0,w,c
 31984  01BE50  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31985                           
 31986                           ; BSR set to: 0
 31987                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31988  01BE52  0139               	movlb	57	; () banked
 31989  01BE54  9DA6               	bcf	166,6,b	;volatile
 31990                           
 31991                           ; BSR set to: 57
 31992                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31993  01BE56  8D96               	bsf	150,6,b	;volatile
 31994                           
 31995                           ; BSR set to: 57
 31996                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31997  01BE58  0EC8               	movlw	low _TMR3_DefaultInterruptHandler
 31998  01BE5A  6EE6               	movwf	postinc1,c
 31999  01BE5C  0ECA               	movlw	high _TMR3_DefaultInterruptHandler
 32000  01BE5E  6EE6               	movwf	postinc1,c
 32001  01BE60  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 32002  01BE62  6EE6               	movwf	postinc1,c
 32003  01BE64  ECCD  F0E2         	call	_TMR3_SetInterruptHandler	;wreg free
 32004                           
 32005                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 32006  01BE68  0E31               	movlw	49
 32007  01BE6A  6EA6               	movwf	166,c	;volatile
 32008                           
 32009                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32010  01BE6C  0012               	return		;funcret
 32011  01BE6E                     __end_of_TMR3_Initialize:
 32012                           	opt callstack 0
 32013                           
 32014 ;; *************** function _TMR3_SetInterruptHandler *****************
 32015 ;; Defined at:
 32016 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 32017 ;; Parameters:    Size  Location     Type
 32018 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32019 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 32020 ;; Auto vars:     Size  Location     Type
 32021 ;;		None
 32022 ;; Return value:  Size  Location     Type
 32023 ;;                  1  [STACK] void 
 32024 ;; Registers used:
 32025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32026 ;; Tracked objects:
 32027 ;;		On entry : 0/0
 32028 ;;		On exit  : 0/0
 32029 ;;		Unchanged: 0/0
 32030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32035 ;;Total ram usage:        0 bytes
 32036 ;; Hardware stack levels used:    1
 32037 ;; Hardware stack levels required when called:   15
 32038 ;; This function calls:
 32039 ;;		Nothing
 32040 ;; This function is called by:
 32041 ;;		_TMR3_Initialize
 32042 ;;		_init_bsoc
 32043 ;; This function uses a reentrant model
 32044 ;;
 32045                           
 32046                           	psect	text128
 32047  01C59A                     __ptext128:
 32048                           	opt callstack 0
 32049  01C59A                     _TMR3_SetInterruptHandler:
 32050                           	opt callstack 14
 32051                           
 32052                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 32053                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32054                           
 32055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32056                           ;incstack = 0
 32057  01C59A  50E1               	movf	fsr1l,w,c
 32058  01C59C  0FFD               	addlw	-3
 32059  01C59E  6ED9               	movwf	fsr2l,c
 32060  01C5A0  50E2               	movf	fsr1h,w,c
 32061  01C5A2  6EDA               	movwf	fsr2h,c
 32062  01C5A4  0EFF               	movlw	255
 32063  01C5A6  22DA               	addwfc	fsr2h,f,c
 32064  01C5A8  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 32065  01C5AE  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 32066  01C5B4  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 32067                           
 32068                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32069  01C5BA  52E5               	movf	postdec1,f,c
 32070  01C5BC  52E5               	movf	postdec1,f,c
 32071  01C5BE  52E5               	movf	postdec1,f,c
 32072  01C5C0  0012               	return		;funcret
 32073  01C5C2                     __end_of_TMR3_SetInterruptHandler:
 32074                           	opt callstack 0
 32075                           
 32076 ;; *************** function _TMR2_Initialize *****************
 32077 ;; Defined at:
 32078 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 32079 ;; Parameters:    Size  Location     Type
 32080 ;;		None
 32081 ;; Auto vars:     Size  Location     Type
 32082 ;;		None
 32083 ;; Return value:  Size  Location     Type
 32084 ;;                  1  [STACK] void 
 32085 ;; Registers used:
 32086 ;;		wreg, status,2
 32087 ;; Tracked objects:
 32088 ;;		On entry : 3F/3F
 32089 ;;		On exit  : 3F/39
 32090 ;;		Unchanged: 0/0
 32091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32096 ;;Total ram usage:        0 bytes
 32097 ;; Hardware stack levels used:    1
 32098 ;; Hardware stack levels required when called:   15
 32099 ;; This function calls:
 32100 ;;		Nothing
 32101 ;; This function is called by:
 32102 ;;		_SYSTEM_Initialize
 32103 ;; This function uses a reentrant model
 32104 ;;
 32105                           
 32106                           	psect	text129
 32107  01C93E                     __ptext129:
 32108                           	opt callstack 0
 32109  01C93E                     _TMR2_Initialize:
 32110                           	opt callstack 14
 32111                           
 32112                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 32113                           
 32114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32115                           ;incstack = 0
 32116  01C93E  0E01               	movlw	1
 32117  01C940  6EAE               	movwf	174,c	;volatile
 32118                           
 32119                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 32120  01C942  6AAD               	clrf	173,c	;volatile
 32121                           
 32122                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 32123  01C944  6AAF               	clrf	175,c	;volatile
 32124                           
 32125                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 32126  01C946  0E63               	movlw	99
 32127  01C948  6EAB               	movwf	171,c	;volatile
 32128                           
 32129                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 32130  01C94A  6AAA               	clrf	170,c	;volatile
 32131                           
 32132                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 32133  01C94C  0139               	movlb	57	; () banked
 32134  01C94E  95A4               	bcf	164,2,b	;volatile
 32135                           
 32136                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 32137  01C950  0EC0               	movlw	192
 32138  01C952  6EAC               	movwf	172,c	;volatile
 32139                           
 32140                           ; BSR set to: 57
 32141                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32142  01C954  0012               	return		;funcret
 32143  01C956                     __end_of_TMR2_Initialize:
 32144                           	opt callstack 0
 32145                           
 32146 ;; *************** function _SPI1_Initialize *****************
 32147 ;; Defined at:
 32148 ;;		line 64 in file "mcc_generated_files/spi1.c"
 32149 ;; Parameters:    Size  Location     Type
 32150 ;;		None
 32151 ;; Auto vars:     Size  Location     Type
 32152 ;;		None
 32153 ;; Return value:  Size  Location     Type
 32154 ;;                  1  [STACK] void 
 32155 ;; Registers used:
 32156 ;;		wreg, status,2
 32157 ;; Tracked objects:
 32158 ;;		On entry : 3F/39
 32159 ;;		On exit  : 3F/3D
 32160 ;;		Unchanged: 0/0
 32161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32166 ;;Total ram usage:        0 bytes
 32167 ;; Hardware stack levels used:    1
 32168 ;; Hardware stack levels required when called:   15
 32169 ;; This function calls:
 32170 ;;		Nothing
 32171 ;; This function is called by:
 32172 ;;		_SYSTEM_Initialize
 32173 ;; This function uses a reentrant model
 32174 ;;
 32175                           
 32176                           	psect	text130
 32177  01C956                     __ptext130:
 32178                           	opt callstack 0
 32179  01C956                     _SPI1_Initialize:
 32180                           	opt callstack 14
 32181                           
 32182                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 32183                           
 32184                           ; BSR set to: 57
 32185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32186                           ;incstack = 0
 32187  01C956  0E40               	movlw	64
 32188  01C958  013D               	movlb	61	; () banked
 32189  01C95A  6F15               	movwf	21,b	;volatile
 32190                           
 32191                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 32192  01C95C  0E03               	movlw	3
 32193  01C95E  6F16               	movwf	22,b	;volatile
 32194                           
 32195                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 32196  01C960  0E4F               	movlw	79
 32197  01C962  6F19               	movwf	25,b	;volatile
 32198                           
 32199                           ; BSR set to: 61
 32200                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 32201  01C964  6B1C               	clrf	28,b	;volatile
 32202                           
 32203                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 32204  01C966  0E83               	movlw	131
 32205  01C968  6F14               	movwf	20,b	;volatile
 32206                           
 32207                           ; BSR set to: 61
 32208                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32209  01C96A  0012               	return		;funcret
 32210  01C96C                     __end_of_SPI1_Initialize:
 32211                           	opt callstack 0
 32212                           
 32213 ;; *************** function _PWM8_Initialize *****************
 32214 ;; Defined at:
 32215 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 32216 ;; Parameters:    Size  Location     Type
 32217 ;;		None
 32218 ;; Auto vars:     Size  Location     Type
 32219 ;;		None
 32220 ;; Return value:  Size  Location     Type
 32221 ;;                  1  [STACK] void 
 32222 ;; Registers used:
 32223 ;;		wreg, status,2
 32224 ;; Tracked objects:
 32225 ;;		On entry : 0/3E
 32226 ;;		On exit  : 3F/3F
 32227 ;;		Unchanged: 0/0
 32228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32233 ;;Total ram usage:        0 bytes
 32234 ;; Hardware stack levels used:    1
 32235 ;; Hardware stack levels required when called:   15
 32236 ;; This function calls:
 32237 ;;		Nothing
 32238 ;; This function is called by:
 32239 ;;		_SYSTEM_Initialize
 32240 ;; This function uses a reentrant model
 32241 ;;
 32242                           
 32243                           	psect	text131
 32244  01C96C                     __ptext131:
 32245                           	opt callstack 0
 32246  01C96C                     _PWM8_Initialize:
 32247                           	opt callstack 14
 32248                           
 32249                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 32250                           
 32251                           ; BSR set to: 61
 32252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32253                           ;incstack = 0
 32254  01C96C  0E80               	movlw	128
 32255  01C96E  6E62               	movwf	98,c	;volatile
 32256                           
 32257                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 32258  01C970  6A61               	clrf	97,c	;volatile
 32259                           
 32260                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 32261  01C972  0E40               	movlw	64
 32262  01C974  6E60               	movwf	96,c	;volatile
 32263                           
 32264                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 32265  01C976  013F               	movlb	63	; () banked
 32266  01C978  515F               	movf	95,w,b	;volatile
 32267  01C97A  0B3F               	andlw	-193
 32268  01C97C  0940               	iorlw	64
 32269  01C97E  6F5F               	movwf	95,b	;volatile
 32270                           
 32271                           ; BSR set to: 63
 32272                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32273  01C980  0012               	return		;funcret
 32274  01C982                     __end_of_PWM8_Initialize:
 32275                           	opt callstack 0
 32276                           
 32277 ;; *************** function _PMD_Initialize *****************
 32278 ;; Defined at:
 32279 ;;		line 90 in file "mcc_generated_files/mcc.c"
 32280 ;; Parameters:    Size  Location     Type
 32281 ;;		None
 32282 ;; Auto vars:     Size  Location     Type
 32283 ;;		None
 32284 ;; Return value:  Size  Location     Type
 32285 ;;                  1  [STACK] void 
 32286 ;; Registers used:
 32287 ;;		None
 32288 ;; Tracked objects:
 32289 ;;		On entry : 3F/39
 32290 ;;		On exit  : 3F/39
 32291 ;;		Unchanged: 0/0
 32292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32297 ;;Total ram usage:        0 bytes
 32298 ;; Hardware stack levels used:    1
 32299 ;; Hardware stack levels required when called:   15
 32300 ;; This function calls:
 32301 ;;		Nothing
 32302 ;; This function is called by:
 32303 ;;		_SYSTEM_Initialize
 32304 ;; This function uses a reentrant model
 32305 ;;
 32306                           
 32307                           	psect	text132
 32308  01C998                     __ptext132:
 32309                           	opt callstack 0
 32310  01C998                     _PMD_Initialize:
 32311                           	opt callstack 14
 32312                           
 32313                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 32314                           
 32315                           ; BSR set to: 63
 32316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32317                           ;incstack = 0
 32318  01C998  0139               	movlb	57	; () banked
 32319  01C99A  6BC0               	clrf	192,b	;volatile
 32320                           
 32321                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 32322  01C99C  6BC1               	clrf	193,b	;volatile
 32323                           
 32324                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 32325  01C99E  6BC2               	clrf	194,b	;volatile
 32326                           
 32327                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 32328  01C9A0  6BC3               	clrf	195,b	;volatile
 32329                           
 32330                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 32331  01C9A2  6BC4               	clrf	196,b	;volatile
 32332                           
 32333                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 32334  01C9A4  6BC5               	clrf	197,b	;volatile
 32335                           
 32336                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 32337  01C9A6  6BC6               	clrf	198,b	;volatile
 32338                           
 32339                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 32340  01C9A8  6BC7               	clrf	199,b	;volatile
 32341                           
 32342                           ; BSR set to: 57
 32343                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32344  01C9AA  0012               	return		;funcret
 32345  01C9AC                     __end_of_PMD_Initialize:
 32346                           	opt callstack 0
 32347                           
 32348 ;; *************** function _PIN_MANAGER_Initialize *****************
 32349 ;; Defined at:
 32350 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 32351 ;; Parameters:    Size  Location     Type
 32352 ;;		None
 32353 ;; Auto vars:     Size  Location     Type
 32354 ;;		None
 32355 ;; Return value:  Size  Location     Type
 32356 ;;                  1  [STACK] void 
 32357 ;; Registers used:
 32358 ;;		wreg, status,2
 32359 ;; Tracked objects:
 32360 ;;		On entry : 3F/39
 32361 ;;		On exit  : 3F/3A
 32362 ;;		Unchanged: 0/0
 32363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32368 ;;Total ram usage:        0 bytes
 32369 ;; Hardware stack levels used:    1
 32370 ;; Hardware stack levels required when called:   15
 32371 ;; This function calls:
 32372 ;;		Nothing
 32373 ;; This function is called by:
 32374 ;;		_SYSTEM_Initialize
 32375 ;; This function uses a reentrant model
 32376 ;;
 32377                           
 32378                           	psect	text133
 32379  01B2A2                     __ptext133:
 32380                           	opt callstack 0
 32381  01B2A2                     _PIN_MANAGER_Initialize:
 32382                           	opt callstack 14
 32383                           
 32384                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 32385                           
 32386                           ; BSR set to: 57
 32387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32388                           ;incstack = 0
 32389  01B2A2  0E07               	movlw	7
 32390  01B2A4  6EBE               	movwf	190,c	;volatile
 32391                           
 32392                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 32393  01B2A6  6ABD               	clrf	189,c	;volatile
 32394                           
 32395                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 32396  01B2A8  6ABA               	clrf	186,c	;volatile
 32397                           
 32398                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 32399  01B2AA  0E23               	movlw	35
 32400  01B2AC  6EBF               	movwf	191,c	;volatile
 32401                           
 32402                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 32403  01B2AE  6ABB               	clrf	187,c	;volatile
 32404                           
 32405                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 32406  01B2B0  0E07               	movlw	7
 32407  01B2B2  6EBC               	movwf	188,c	;volatile
 32408                           
 32409                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 32410  01B2B4  6AC6               	clrf	198,c	;volatile
 32411                           
 32412                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 32413  01B2B6  0E0C               	movlw	12
 32414  01B2B8  6EC7               	movwf	199,c	;volatile
 32415                           
 32416                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 32417  01B2BA  68C2               	setf	194,c	;volatile
 32418                           
 32419                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 32420  01B2BC  0EBF               	movlw	191
 32421  01B2BE  6EC3               	movwf	195,c	;volatile
 32422                           
 32423                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 32424  01B2C0  0E90               	movlw	144
 32425  01B2C2  6EC4               	movwf	196,c	;volatile
 32426                           
 32427                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 32428  01B2C4  0E0C               	movlw	12
 32429  01B2C6  6EC5               	movwf	197,c	;volatile
 32430                           
 32431                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 32432  01B2C8  013A               	movlb	58	; () banked
 32433  01B2CA  6B70               	clrf	112,b	;volatile
 32434                           
 32435                           ; BSR set to: 58
 32436                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 32437  01B2CC  6B60               	clrf	96,b	;volatile
 32438                           
 32439                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 32440  01B2CE  0E3C               	movlw	60
 32441  01B2D0  6F50               	movwf	80,b	;volatile
 32442                           
 32443                           ; BSR set to: 58
 32444                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 32445  01B2D2  6B80               	clrf	128,b	;volatile
 32446                           
 32447                           ; BSR set to: 58
 32448                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 32449  01B2D4  6B90               	clrf	144,b	;volatile
 32450                           
 32451                           ; BSR set to: 58
 32452                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 32453  01B2D6  6940               	setf	64,b	;volatile
 32454                           
 32455                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 32456  01B2D8  0E0C               	movlw	12
 32457  01B2DA  6F71               	movwf	113,b	;volatile
 32458                           
 32459                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 32460  01B2DC  0E0C               	movlw	12
 32461  01B2DE  6F91               	movwf	145,b	;volatile
 32462                           
 32463                           ; BSR set to: 58
 32464                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 32465  01B2E0  6B81               	clrf	129,b	;volatile
 32466                           
 32467                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 32468  01B2E2  0E83               	movlw	131
 32469  01B2E4  6F51               	movwf	81,b	;volatile
 32470                           
 32471                           ; BSR set to: 58
 32472                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 32473  01B2E6  6B41               	clrf	65,b	;volatile
 32474                           
 32475                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 32476  01B2E8  0E97               	movlw	151
 32477  01B2EA  6F61               	movwf	97,b	;volatile
 32478                           
 32479                           ; BSR set to: 58
 32480                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 32481  01B2EC  6B82               	clrf	130,b	;volatile
 32482                           
 32483                           ; BSR set to: 58
 32484                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 32485  01B2EE  6B92               	clrf	146,b	;volatile
 32486                           
 32487                           ; BSR set to: 58
 32488                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 32489  01B2F0  6B42               	clrf	66,b	;volatile
 32490                           
 32491                           ; BSR set to: 58
 32492                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 32493  01B2F2  6B52               	clrf	82,b	;volatile
 32494                           
 32495                           ; BSR set to: 58
 32496                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 32497  01B2F4  6B62               	clrf	98,b	;volatile
 32498                           
 32499                           ; BSR set to: 58
 32500                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 32501  01B2F6  6B72               	clrf	114,b	;volatile
 32502                           
 32503                           ; BSR set to: 58
 32504                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 32505  01B2F8  6943               	setf	67,b	;volatile
 32506                           
 32507                           ; BSR set to: 58
 32508                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 32509  01B2FA  6953               	setf	83,b	;volatile
 32510                           
 32511                           ; BSR set to: 58
 32512                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 32513  01B2FC  6963               	setf	99,b	;volatile
 32514                           
 32515                           ; BSR set to: 58
 32516                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 32517  01B2FE  6973               	setf	115,b	;volatile
 32518                           
 32519                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 32520  01B300  0E07               	movlw	7
 32521  01B302  6F83               	movwf	131,b	;volatile
 32522                           
 32523                           ; BSR set to: 58
 32524                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 32525  01B304  6993               	setf	147,b	;volatile
 32526                           
 32527                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 32528  01B306  0E0F               	movlw	15
 32529  01B308  6FE8               	movwf	232,b	;volatile
 32530                           
 32531                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 32532  01B30A  0E13               	movlw	19
 32533  01B30C  6FDE               	movwf	222,b	;volatile
 32534                           
 32535                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 32536  01B30E  0E16               	movlw	22
 32537  01B310  6F0E               	movwf	14,b	;volatile
 32538                           
 32539                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 32540  01B312  0E1E               	movlw	30
 32541  01B314  6F13               	movwf	19,b	;volatile
 32542                           
 32543                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 32544  01B316  0E08               	movlw	8
 32545  01B318  6FC0               	movwf	192,b	;volatile
 32546                           
 32547                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 32548  01B31A  0E10               	movlw	16
 32549  01B31C  6F19               	movwf	25,b	;volatile
 32550                           
 32551                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 32552  01B31E  0E09               	movlw	9
 32553  01B320  6FC1               	movwf	193,b	;volatile
 32554                           
 32555                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 32556  01B322  0E1F               	movlw	31
 32557  01B324  6F15               	movwf	21,b	;volatile
 32558                           
 32559                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 32560  01B326  0E13               	movlw	19
 32561  01B328  6F16               	movwf	22,b	;volatile
 32562                           
 32563                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 32564  01B32A  0E17               	movlw	23
 32565  01B32C  6FE5               	movwf	229,b	;volatile
 32566                           
 32567                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 32568  01B32E  0E14               	movlw	20
 32569  01B330  6FDF               	movwf	223,b	;volatile
 32570                           
 32571                           ; BSR set to: 58
 32572                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 32573  01B332  0012               	return		;funcret
 32574  01B334                     __end_of_PIN_MANAGER_Initialize:
 32575                           	opt callstack 0
 32576                           
 32577 ;; *************** function _OSCILLATOR_Initialize *****************
 32578 ;; Defined at:
 32579 ;;		line 72 in file "mcc_generated_files/mcc.c"
 32580 ;; Parameters:    Size  Location     Type
 32581 ;;		None
 32582 ;; Auto vars:     Size  Location     Type
 32583 ;;		None
 32584 ;; Return value:  Size  Location     Type
 32585 ;;                  1  [STACK] void 
 32586 ;; Registers used:
 32587 ;;		wreg, status,2
 32588 ;; Tracked objects:
 32589 ;;		On entry : 3F/3A
 32590 ;;		On exit  : 3F/39
 32591 ;;		Unchanged: 0/0
 32592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32597 ;;Total ram usage:        0 bytes
 32598 ;; Hardware stack levels used:    1
 32599 ;; Hardware stack levels required when called:   15
 32600 ;; This function calls:
 32601 ;;		Nothing
 32602 ;; This function is called by:
 32603 ;;		_SYSTEM_Initialize
 32604 ;; This function uses a reentrant model
 32605 ;;
 32606                           
 32607                           	psect	text134
 32608  01C982                     __ptext134:
 32609                           	opt callstack 0
 32610  01C982                     _OSCILLATOR_Initialize:
 32611                           	opt callstack 14
 32612                           
 32613                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 32614                           
 32615                           ; BSR set to: 58
 32616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32617                           ;incstack = 0
 32618  01C982  0E20               	movlw	32
 32619  01C984  0139               	movlb	57	; () banked
 32620  01C986  6FD9               	movwf	217,b	;volatile
 32621                           
 32622                           ; BSR set to: 57
 32623                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 32624  01C988  6BDB               	clrf	219,b	;volatile
 32625                           
 32626                           ; BSR set to: 57
 32627                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 32628  01C98A  6BDD               	clrf	221,b	;volatile
 32629                           
 32630                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 32631  01C98C  0E02               	movlw	2
 32632  01C98E  6FDF               	movwf	223,b	;volatile
 32633                           
 32634                           ; BSR set to: 57
 32635                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 32636  01C990  6BDE               	clrf	222,b	;volatile
 32637  01C992                     l169:
 32638                           
 32639                           ; BSR set to: 57
 32640                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 32641  01C992  B1DC               	btfsc	220,0,b	;volatile
 32642  01C994  0012               	return	
 32643  01C996  D7FD               	goto	l169
 32644  01C998                     __end_of_OSCILLATOR_Initialize:
 32645                           	opt callstack 0
 32646                           
 32647 ;; *************** function _INTERRUPT_Initialize *****************
 32648 ;; Defined at:
 32649 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 32650 ;; Parameters:    Size  Location     Type
 32651 ;;		None
 32652 ;; Auto vars:     Size  Location     Type
 32653 ;;  state           1  [STACK] _Bool 
 32654 ;; Return value:  Size  Location     Type
 32655 ;;                  1  [STACK] void 
 32656 ;; Registers used:
 32657 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 32658 ;; Tracked objects:
 32659 ;;		On entry : 0/0
 32660 ;;		On exit  : 3F/39
 32661 ;;		Unchanged: 0/0
 32662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32667 ;;Total ram usage:        0 bytes
 32668 ;; Hardware stack levels used:    1
 32669 ;; Hardware stack levels required when called:   15
 32670 ;; This function calls:
 32671 ;;		Nothing
 32672 ;; This function is called by:
 32673 ;;		_SYSTEM_Initialize
 32674 ;; This function uses a reentrant model
 32675 ;;
 32676                           
 32677                           	psect	text135
 32678  01B8CC                     __ptext135:
 32679                           	opt callstack 0
 32680  01B8CC                     _INTERRUPT_Initialize:
 32681                           	opt callstack 0
 32682                           
 32683                           ; BSR set to: 57
 32684                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32685  01B8CC  52E6               	movf	postinc1,f,c
 32686                           
 32687                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32688                           
 32689                           ;incstack = 0
 32690  01B8CE  8AD2               	bsf	210,5,c	;volatile
 32691                           
 32692                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32693  01B8D0  AED2               	btfss	16338,7,c	;volatile
 32694  01B8D2  D003               	goto	u9680
 32695  01B8D4  6A0C               	clrf	(btemp+11)^0,c
 32696  01B8D6  2A0C               	incf	(btemp+11)^0,f,c
 32697  01B8D8  D001               	goto	u9698
 32698  01B8DA                     u9680:
 32699  01B8DA  6A0C               	clrf	(btemp+11)^0,c
 32700  01B8DC                     u9698:
 32701                           
 32702                           ;stkvar	_state @ sp[(-1)+0]
 32703  01B8DC  0EFF               	movlw	-1
 32704  01B8DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 32705                           
 32706                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32707  01B8E4  9ED2               	bcf	16338,7,c	;volatile
 32708                           
 32709                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32710  01B8E6  0E55               	movlw	85
 32711  01B8E8  6ED4               	movwf	212,c	;volatile
 32712                           
 32713                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32714  01B8EA  0EAA               	movlw	170
 32715  01B8EC  6ED4               	movwf	212,c	;volatile
 32716                           
 32717                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32718  01B8EE  90D4               	bcf	212,0,c	;volatile
 32719                           
 32720                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 32721  01B8F0  0138               	movlb	56	; () banked
 32722  01B8F2  6B9F               	clrf	159,b	;volatile
 32723                           
 32724                           ; BSR set to: 56
 32725                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 32726  01B8F4  6B9E               	clrf	158,b	;volatile
 32727                           
 32728                           ; BSR set to: 56
 32729                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 32730  01B8F6  0E08               	movlw	8
 32731  01B8F8  6F9D               	movwf	157,b	;volatile
 32732                           
 32733                           ; BSR set to: 56
 32734                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32735  01B8FA  0E55               	movlw	85
 32736  01B8FC  6ED4               	movwf	212,c	;volatile
 32737                           
 32738                           ; BSR set to: 56
 32739                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32740  01B8FE  0EAA               	movlw	170
 32741  01B900  6ED4               	movwf	212,c	;volatile
 32742                           
 32743                           ; BSR set to: 56
 32744                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32745  01B902  80D4               	bsf	212,0,c	;volatile
 32746                           
 32747                           ; BSR set to: 56
 32748                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32749                           ;stkvar	_state @ sp[(-1)+0]
 32750  01B904  0EFF               	movlw	-1
 32751  01B906  B0E3               	btfsc	plusw1,0,c
 32752  01B908  D002               	bra	u9705
 32753  01B90A  9ED2               	bcf	16338,7,c	;volatile
 32754  01B90C  D001               	bra	u9706
 32755  01B90E                     u9705:
 32756  01B90E  8ED2               	bsf	16338,7,c	;volatile
 32757  01B910                     u9706:
 32758                           
 32759                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 32760  01B910  0139               	movlb	57	; () banked
 32761  01B912  8782               	bsf	130,3,b	;volatile
 32762                           
 32763                           ; BSR set to: 57
 32764                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 32765  01B914  8382               	bsf	130,1,b	;volatile
 32766                           
 32767                           ; BSR set to: 57
 32768                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 32769  01B916  8182               	bsf	130,0,b	;volatile
 32770                           
 32771                           ; BSR set to: 57
 32772                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 32773  01B918  8582               	bsf	130,2,b	;volatile
 32774                           
 32775                           ; BSR set to: 57
 32776                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 32777  01B91A  8786               	bsf	134,3,b	;volatile
 32778                           
 32779                           ; BSR set to: 57
 32780                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 32781  01B91C  8586               	bsf	134,2,b	;volatile
 32782                           
 32783                           ; BSR set to: 57
 32784                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 32785  01B91E  8783               	bsf	131,3,b	;volatile
 32786                           
 32787                           ; BSR set to: 57
 32788                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 32789  01B920  8181               	bsf	129,0,b	;volatile
 32790                           
 32791                           ; BSR set to: 57
 32792                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 32793  01B922  9185               	bcf	133,0,b	;volatile
 32794                           
 32795                           ; BSR set to: 57
 32796                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 32797  01B924  8189               	bsf	137,0,b	;volatile
 32798                           
 32799                           ; BSR set to: 57
 32800                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 32801  01B926  9D88               	bcf	136,6,b	;volatile
 32802                           
 32803                           ; BSR set to: 57
 32804                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 32805  01B928  9D86               	bcf	134,6,b	;volatile
 32806                           
 32807                           ; BSR set to: 57
 32808                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 32809  01B92A  8581               	bsf	129,2,b	;volatile
 32810                           
 32811                           ; BSR set to: 57
 32812                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 32813  01B92C  8781               	bsf	129,3,b	;volatile
 32814                           
 32815                           ; BSR set to: 57
 32816                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 32817  01B92E  52E5               	movf	postdec1,f,c
 32818  01B930  0012               	return		;funcret
 32819  01B932                     __end_of_INTERRUPT_Initialize:
 32820                           	opt callstack 0
 32821                           
 32822 ;; *************** function _FVR_Initialize *****************
 32823 ;; Defined at:
 32824 ;;		line 58 in file "mcc_generated_files/fvr.c"
 32825 ;; Parameters:    Size  Location     Type
 32826 ;;		None
 32827 ;; Auto vars:     Size  Location     Type
 32828 ;;		None
 32829 ;; Return value:  Size  Location     Type
 32830 ;;                  1  [STACK] void 
 32831 ;; Registers used:
 32832 ;;		wreg, status,2
 32833 ;; Tracked objects:
 32834 ;;		On entry : 3F/39
 32835 ;;		On exit  : 3F/3E
 32836 ;;		Unchanged: 0/0
 32837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32842 ;;Total ram usage:        0 bytes
 32843 ;; Hardware stack levels used:    1
 32844 ;; Hardware stack levels required when called:   15
 32845 ;; This function calls:
 32846 ;;		Nothing
 32847 ;; This function is called by:
 32848 ;;		_SYSTEM_Initialize
 32849 ;; This function uses a reentrant model
 32850 ;;
 32851                           
 32852                           	psect	text136
 32853  01CA9E                     __ptext136:
 32854                           	opt callstack 0
 32855  01CA9E                     _FVR_Initialize:
 32856                           	opt callstack 14
 32857                           
 32858                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 32859                           
 32860                           ; BSR set to: 57
 32861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32862                           ;incstack = 0
 32863  01CA9E  0EAF               	movlw	175
 32864  01CAA0  013E               	movlb	62	; () banked
 32865  01CAA2  6FC1               	movwf	193,b	;volatile
 32866                           
 32867                           ; BSR set to: 62
 32868                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32869  01CAA4  0012               	return		;funcret
 32870  01CAA6                     __end_of_FVR_Initialize:
 32871                           	opt callstack 0
 32872                           
 32873 ;; *************** function _EXT_INT_Initialize *****************
 32874 ;; Defined at:
 32875 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 32876 ;; Parameters:    Size  Location     Type
 32877 ;;		None
 32878 ;; Auto vars:     Size  Location     Type
 32879 ;;		None
 32880 ;; Return value:  Size  Location     Type
 32881 ;;                  1  [STACK] void 
 32882 ;; Registers used:
 32883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32884 ;; Tracked objects:
 32885 ;;		On entry : 3F/39
 32886 ;;		On exit  : 3F/39
 32887 ;;		Unchanged: 0/0
 32888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32893 ;;Total ram usage:        0 bytes
 32894 ;; Hardware stack levels used:    1
 32895 ;; Hardware stack levels required when called:   16
 32896 ;; This function calls:
 32897 ;;		_INT0_SetInterruptHandler
 32898 ;;		_INT1_SetInterruptHandler
 32899 ;; This function is called by:
 32900 ;;		_SYSTEM_Initialize
 32901 ;; This function uses a reentrant model
 32902 ;;
 32903                           
 32904                           	psect	text137
 32905  01C2B0                     __ptext137:
 32906                           	opt callstack 0
 32907  01C2B0                     _EXT_INT_Initialize:
 32908                           	opt callstack 13
 32909                           
 32910                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 32911                           
 32912                           ; BSR set to: 62
 32913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32914                           ;incstack = 0
 32915  01C2B0  0139               	movlb	57	; () banked
 32916  01C2B2  91A1               	bcf	161,0,b	;volatile
 32917                           
 32918                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 32919  01C2B4  90D2               	bcf	210,0,c	;volatile
 32920                           
 32921                           ; BSR set to: 57
 32922                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 32923  01C2B6  0ECA               	movlw	low _INT0_DefaultInterruptHandler
 32924  01C2B8  6EE6               	movwf	postinc1,c
 32925  01C2BA  0ECA               	movlw	high _INT0_DefaultInterruptHandler
 32926  01C2BC  6EE6               	movwf	postinc1,c
 32927  01C2BE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 32928  01C2C0  6EE6               	movwf	postinc1,c
 32929  01C2C2  ECF5  F0E2         	call	_INT0_SetInterruptHandler	;wreg free
 32930                           
 32931                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 32932  01C2C6  0139               	movlb	57	; () banked
 32933  01C2C8  8191               	bsf	145,0,b	;volatile
 32934                           
 32935                           ; BSR set to: 57
 32936                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 32937  01C2CA  91A5               	bcf	165,0,b	;volatile
 32938                           
 32939                           ; BSR set to: 57
 32940                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 32941  01C2CC  92D2               	bcf	210,1,c	;volatile
 32942                           
 32943                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 32944  01C2CE  0EC6               	movlw	low _INT1_DefaultInterruptHandler
 32945  01C2D0  6EE6               	movwf	postinc1,c
 32946  01C2D2  0ECA               	movlw	high _INT1_DefaultInterruptHandler
 32947  01C2D4  6EE6               	movwf	postinc1,c
 32948  01C2D6  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 32949  01C2D8  6EE6               	movwf	postinc1,c
 32950  01C2DA  ECE1  F0E2         	call	_INT1_SetInterruptHandler	;wreg free
 32951                           
 32952                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 32953  01C2DE  0139               	movlb	57	; () banked
 32954  01C2E0  8195               	bsf	149,0,b	;volatile
 32955                           
 32956                           ; BSR set to: 57
 32957                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32958  01C2E2  0012               	return		;funcret
 32959  01C2E4                     __end_of_EXT_INT_Initialize:
 32960                           	opt callstack 0
 32961                           
 32962 ;; *************** function _INT1_SetInterruptHandler *****************
 32963 ;; Defined at:
 32964 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32967 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 32968 ;; Auto vars:     Size  Location     Type
 32969 ;;		None
 32970 ;; Return value:  Size  Location     Type
 32971 ;;                  1  [STACK] void 
 32972 ;; Registers used:
 32973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32974 ;; Tracked objects:
 32975 ;;		On entry : 3F/39
 32976 ;;		On exit  : 0/0
 32977 ;;		Unchanged: 0/0
 32978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32983 ;;Total ram usage:        0 bytes
 32984 ;; Hardware stack levels used:    1
 32985 ;; Hardware stack levels required when called:   15
 32986 ;; This function calls:
 32987 ;;		Nothing
 32988 ;; This function is called by:
 32989 ;;		_EXT_INT_Initialize
 32990 ;;		_start_switch_handler
 32991 ;; This function uses a reentrant model
 32992 ;;
 32993                           
 32994                           	psect	text138
 32995  01C5C2                     __ptext138:
 32996                           	opt callstack 0
 32997  01C5C2                     _INT1_SetInterruptHandler:
 32998                           	opt callstack 14
 32999                           
 33000                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 33001                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33002                           
 33003                           ; BSR set to: 57
 33004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33005                           ;incstack = 0
 33006  01C5C2  50E1               	movf	fsr1l,w,c
 33007  01C5C4  0FFD               	addlw	-3
 33008  01C5C6  6ED9               	movwf	fsr2l,c
 33009  01C5C8  50E2               	movf	fsr1h,w,c
 33010  01C5CA  6EDA               	movwf	fsr2h,c
 33011  01C5CC  0EFF               	movlw	255
 33012  01C5CE  22DA               	addwfc	fsr2h,f,c
 33013  01C5D0  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 33014  01C5D6  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 33015  01C5DC  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 33016                           
 33017                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33018  01C5E2  52E5               	movf	postdec1,f,c
 33019  01C5E4  52E5               	movf	postdec1,f,c
 33020  01C5E6  52E5               	movf	postdec1,f,c
 33021  01C5E8  0012               	return		;funcret
 33022  01C5EA                     __end_of_INT1_SetInterruptHandler:
 33023                           	opt callstack 0
 33024                           
 33025 ;; *************** function _INT0_SetInterruptHandler *****************
 33026 ;; Defined at:
 33027 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 33028 ;; Parameters:    Size  Location     Type
 33029 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33030 ;;		 -> INT0_DefaultInterruptHandler(1), 
 33031 ;; Auto vars:     Size  Location     Type
 33032 ;;		None
 33033 ;; Return value:  Size  Location     Type
 33034 ;;                  1  [STACK] void 
 33035 ;; Registers used:
 33036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33037 ;; Tracked objects:
 33038 ;;		On entry : 3F/39
 33039 ;;		On exit  : 0/0
 33040 ;;		Unchanged: 0/0
 33041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33046 ;;Total ram usage:        0 bytes
 33047 ;; Hardware stack levels used:    1
 33048 ;; Hardware stack levels required when called:   15
 33049 ;; This function calls:
 33050 ;;		Nothing
 33051 ;; This function is called by:
 33052 ;;		_EXT_INT_Initialize
 33053 ;; This function uses a reentrant model
 33054 ;;
 33055                           
 33056                           	psect	text139
 33057  01C5EA                     __ptext139:
 33058                           	opt callstack 0
 33059  01C5EA                     _INT0_SetInterruptHandler:
 33060                           	opt callstack 13
 33061                           
 33062                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 33063                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33064                           
 33065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33066                           ;incstack = 0
 33067  01C5EA  50E1               	movf	fsr1l,w,c
 33068  01C5EC  0FFD               	addlw	-3
 33069  01C5EE  6ED9               	movwf	fsr2l,c
 33070  01C5F0  50E2               	movf	fsr1h,w,c
 33071  01C5F2  6EDA               	movwf	fsr2h,c
 33072  01C5F4  0EFF               	movlw	255
 33073  01C5F6  22DA               	addwfc	fsr2h,f,c
 33074  01C5F8  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 33075  01C5FE  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 33076  01C604  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 33077                           
 33078                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33079  01C60A  52E5               	movf	postdec1,f,c
 33080  01C60C  52E5               	movf	postdec1,f,c
 33081  01C60E  52E5               	movf	postdec1,f,c
 33082  01C610  0012               	return		;funcret
 33083  01C612                     __end_of_INT0_SetInterruptHandler:
 33084                           	opt callstack 0
 33085                           
 33086 ;; *************** function _DMA2_Initialize *****************
 33087 ;; Defined at:
 33088 ;;		line 61 in file "mcc_generated_files/dma2.c"
 33089 ;; Parameters:    Size  Location     Type
 33090 ;;		None
 33091 ;; Auto vars:     Size  Location     Type
 33092 ;;		None
 33093 ;; Return value:  Size  Location     Type
 33094 ;;                  1  [STACK] void 
 33095 ;; Registers used:
 33096 ;;		wreg, status,2
 33097 ;; Tracked objects:
 33098 ;;		On entry : 3F/3D
 33099 ;;		On exit  : 3F/3B
 33100 ;;		Unchanged: 0/0
 33101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33106 ;;Total ram usage:        0 bytes
 33107 ;; Hardware stack levels used:    1
 33108 ;; Hardware stack levels required when called:   15
 33109 ;; This function calls:
 33110 ;;		Nothing
 33111 ;; This function is called by:
 33112 ;;		_SYSTEM_Initialize
 33113 ;; This function uses a reentrant model
 33114 ;;
 33115                           
 33116                           	psect	text140
 33117  01BB6E                     __ptext140:
 33118                           	opt callstack 0
 33119  01BB6E                     _DMA2_Initialize:
 33120                           	opt callstack 14
 33121                           
 33122                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 33123                           
 33124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33125                           ;incstack = 0
 33126  01BB6E  0E00               	movlw	0
 33127  01BB70  013B               	movlb	59	; () banked
 33128  01BB72  6FD9               	movwf	217,b	;volatile
 33129  01BB74  0E10               	movlw	16
 33130  01BB76  6FDA               	movwf	218,b	;volatile
 33131  01BB78  0E00               	movlw	0
 33132  01BB7A  6FDB               	movwf	219,b	;volatile
 33133                           
 33134                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 33135  01BB7C  0E3F               	movlw	63
 33136  01BB7E  6FD1               	movwf	209,b	;volatile
 33137  01BB80  0EBB               	movlw	187
 33138  01BB82  6FD0               	movwf	208,b	;volatile
 33139                           
 33140                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 33141  01BB84  0E03               	movlw	3
 33142  01BB86  6FDD               	movwf	221,b	;volatile
 33143                           
 33144                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 33145  01BB88  0E00               	movlw	0
 33146  01BB8A  6FD8               	movwf	216,b	;volatile
 33147  01BB8C  0E01               	movlw	1
 33148  01BB8E  6FD7               	movwf	215,b	;volatile
 33149                           
 33150                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 33151  01BB90  0E00               	movlw	0
 33152  01BB92  6FCF               	movwf	207,b	;volatile
 33153  01BB94  0E01               	movlw	1
 33154  01BB96  6FCE               	movwf	206,b	;volatile
 33155                           
 33156                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 33157  01BB98  0E1C               	movlw	28
 33158  01BB9A  6FDF               	movwf	223,b	;volatile
 33159                           
 33160                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 33161  01BB9C  0E3D               	movlw	61
 33162  01BB9E  6FDE               	movwf	222,b	;volatile
 33163                           
 33164                           ; BSR set to: 59
 33165                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 33166  01BBA0  0139               	movlb	57	; () banked
 33167  01BBA2  97A5               	bcf	165,3,b	;volatile
 33168                           
 33169                           ; BSR set to: 57
 33170                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 33171  01BBA4  95A5               	bcf	165,2,b	;volatile
 33172                           
 33173                           ; BSR set to: 57
 33174                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 33175  01BBA6  9BA5               	bcf	165,5,b	;volatile
 33176                           
 33177                           ; BSR set to: 57
 33178                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 33179  01BBA8  99A5               	bcf	165,4,b	;volatile
 33180                           
 33181                           ; BSR set to: 57
 33182                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 33183  01BBAA  9795               	bcf	149,3,b	;volatile
 33184                           
 33185                           ; BSR set to: 57
 33186                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 33187  01BBAC  9595               	bcf	149,2,b	;volatile
 33188                           
 33189                           ; BSR set to: 57
 33190                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 33191  01BBAE  9B95               	bcf	149,5,b	;volatile
 33192                           
 33193                           ; BSR set to: 57
 33194                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 33195  01BBB0  9995               	bcf	149,4,b	;volatile
 33196  01BBB2  9ED2               	bcf	16338,7,c	;# 
 33197  01BBB4  0139               	banksel	14831	;# 
 33198  01BBB6  0E55               	movlw	85	;# 
 33199  01BBB8  6FEF               	movwf	14831,b	;# 
 33200  01BBBA  0EAA               	movlw	170	;# 
 33201  01BBBC  6FEF               	movwf	14831,b	;# 
 33202  01BBBE  81EF               	bsf	14831,0,b	;# 
 33203  01BBC0  8ED2               	bsf	16338,7,c	;# 
 33204                           
 33205                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 33206  01BBC2  013B               	movlb	59	; () banked
 33207  01BBC4  6BDC               	clrf	220,b	;volatile
 33208                           
 33209                           ; BSR set to: 59
 33210                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33211  01BBC6  0012               	return		;funcret
 33212  01BBC8                     __end_of_DMA2_Initialize:
 33213                           	opt callstack 0
 33214                           
 33215 ;; *************** function _DMA1_Initialize *****************
 33216 ;; Defined at:
 33217 ;;		line 86 in file "mcc_generated_files/dma1.c"
 33218 ;; Parameters:    Size  Location     Type
 33219 ;;		None
 33220 ;; Auto vars:     Size  Location     Type
 33221 ;;		None
 33222 ;; Return value:  Size  Location     Type
 33223 ;;                  1  [STACK] void 
 33224 ;; Registers used:
 33225 ;;		wreg, status,2
 33226 ;; Tracked objects:
 33227 ;;		On entry : 3F/3B
 33228 ;;		On exit  : 3F/3B
 33229 ;;		Unchanged: 0/0
 33230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;Total ram usage:        0 bytes
 33236 ;; Hardware stack levels used:    1
 33237 ;; Hardware stack levels required when called:   15
 33238 ;; This function calls:
 33239 ;;		Nothing
 33240 ;; This function is called by:
 33241 ;;		_SYSTEM_Initialize
 33242 ;; This function uses a reentrant model
 33243 ;;
 33244                           
 33245                           	psect	text141
 33246  01B726                     __ptext141:
 33247                           	opt callstack 0
 33248  01B726                     _DMA1_Initialize:
 33249                           	opt callstack 14
 33250                           
 33251                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 33252                           
 33253                           ; BSR set to: 59
 33254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33255                           ;incstack = 0
 33256  01B726  0E00               	movlw	0
 33257  01B728  013B               	movlb	59	; () banked
 33258  01B72A  6FF9               	movwf	249,b	;volatile
 33259  01B72C  0E10               	movlw	16
 33260  01B72E  6FFA               	movwf	250,b	;volatile
 33261  01B730  0E00               	movlw	0
 33262  01B732  6FFB               	movwf	251,b	;volatile
 33263                           
 33264                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 33265  01B734  0E3D               	movlw	61
 33266  01B736  6FF1               	movwf	241,b	;volatile
 33267  01B738  0E11               	movlw	17
 33268  01B73A  6FF0               	movwf	240,b	;volatile
 33269                           
 33270                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 33271  01B73C  0E03               	movlw	3
 33272  01B73E  6FFD               	movwf	253,b	;volatile
 33273                           
 33274                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 33275  01B740  0E00               	movlw	0
 33276  01B742  6FF8               	movwf	248,b	;volatile
 33277  01B744  0E01               	movlw	1
 33278  01B746  6FF7               	movwf	247,b	;volatile
 33279                           
 33280                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 33281  01B748  0E00               	movlw	0
 33282  01B74A  6FEF               	movwf	239,b	;volatile
 33283  01B74C  0E01               	movlw	1
 33284  01B74E  6FEE               	movwf	238,b	;volatile
 33285                           
 33286                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 33287  01B750  0E15               	movlw	21
 33288  01B752  6FFF               	movwf	255,b	;volatile
 33289                           
 33290                           ; BSR set to: 59
 33291                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 33292  01B754  6BFE               	clrf	254,b	;volatile
 33293                           
 33294                           ; BSR set to: 59
 33295                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 33296  01B756  0139               	movlb	57	; () banked
 33297  01B758  93A2               	bcf	162,1,b	;volatile
 33298                           
 33299                           ; BSR set to: 57
 33300                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 33301  01B75A  91A2               	bcf	162,0,b	;volatile
 33302                           
 33303                           ; BSR set to: 57
 33304                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 33305  01B75C  97A2               	bcf	162,3,b	;volatile
 33306                           
 33307                           ; BSR set to: 57
 33308                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 33309  01B75E  95A2               	bcf	162,2,b	;volatile
 33310                           
 33311                           ; BSR set to: 57
 33312                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 33313  01B760  8392               	bsf	146,1,b	;volatile
 33314                           
 33315                           ; BSR set to: 57
 33316                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 33317  01B762  8192               	bsf	146,0,b	;volatile
 33318                           
 33319                           ; BSR set to: 57
 33320                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 33321  01B764  8792               	bsf	146,3,b	;volatile
 33322                           
 33323                           ; BSR set to: 57
 33324                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 33325  01B766  8592               	bsf	146,2,b	;volatile
 33326                           
 33327                           ; BSR set to: 57
 33328                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 33329  01B768  6BF1               	clrf	241,b	;volatile
 33330                           
 33331                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 33332  01B76A  0E01               	movlw	1
 33333  01B76C  6FF2               	movwf	242,b	;volatile
 33334                           
 33335                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 33336  01B76E  0E04               	movlw	4
 33337  01B770  6FF3               	movwf	243,b	;volatile
 33338                           
 33339                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 33340  01B772  0E02               	movlw	2
 33341  01B774  6FF4               	movwf	244,b	;volatile
 33342                           
 33343                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 33344  01B776  0E03               	movlw	3
 33345  01B778  6FF7               	movwf	247,b	;volatile
 33346  01B77A  9ED2               	bcf	16338,7,c	;# 
 33347  01B77C  0139               	banksel	14831	;# 
 33348  01B77E  0E55               	movlw	85	;# 
 33349  01B780  6FEF               	movwf	14831,b	;# 
 33350  01B782  0EAA               	movlw	170	;# 
 33351  01B784  6FEF               	movwf	14831,b	;# 
 33352  01B786  81EF               	bsf	14831,0,b	;# 
 33353  01B788  8ED2               	bsf	16338,7,c	;# 
 33354                           
 33355                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 33356  01B78A  013B               	movlb	59	; () banked
 33357  01B78C  6BFC               	clrf	252,b	;volatile
 33358                           
 33359                           ; BSR set to: 59
 33360                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33361  01B78E  0012               	return		;funcret
 33362  01B790                     __end_of_DMA1_Initialize:
 33363                           	opt callstack 0
 33364                           
 33365 ;; *************** function _CLKREF_Initialize *****************
 33366 ;; Defined at:
 33367 ;;		line 58 in file "mcc_generated_files/clkref.c"
 33368 ;; Parameters:    Size  Location     Type
 33369 ;;		None
 33370 ;; Auto vars:     Size  Location     Type
 33371 ;;		None
 33372 ;; Return value:  Size  Location     Type
 33373 ;;                  1  [STACK] void 
 33374 ;; Registers used:
 33375 ;;		wreg, status,2
 33376 ;; Tracked objects:
 33377 ;;		On entry : 3F/3B
 33378 ;;		On exit  : 3F/3C
 33379 ;;		Unchanged: 0/0
 33380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33385 ;;Total ram usage:        0 bytes
 33386 ;; Hardware stack levels used:    1
 33387 ;; Hardware stack levels required when called:   15
 33388 ;; This function calls:
 33389 ;;		Nothing
 33390 ;; This function is called by:
 33391 ;;		_SYSTEM_Initialize
 33392 ;; This function uses a reentrant model
 33393 ;;
 33394                           
 33395                           	psect	text142
 33396  01CA46                     __ptext142:
 33397                           	opt callstack 0
 33398  01CA46                     _CLKREF_Initialize:
 33399                           	opt callstack 14
 33400                           
 33401                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 33402                           
 33403                           ; BSR set to: 59
 33404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33405                           ;incstack = 0
 33406  01CA46  013C               	movlb	60	; () banked
 33407  01CA48  6BE6               	clrf	230,b	;volatile
 33408                           
 33409                           ; BSR set to: 60
 33410                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 33411  01CA4A  0E94               	movlw	148
 33412  01CA4C  6FE5               	movwf	229,b	;volatile
 33413                           
 33414                           ; BSR set to: 60
 33415                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33416  01CA4E  0012               	return		;funcret
 33417  01CA50                     __end_of_CLKREF_Initialize:
 33418                           	opt callstack 0
 33419                           
 33420 ;; *************** function _ADCC_Initialize *****************
 33421 ;; Defined at:
 33422 ;;		line 65 in file "mcc_generated_files/adcc.c"
 33423 ;; Parameters:    Size  Location     Type
 33424 ;;		None
 33425 ;; Auto vars:     Size  Location     Type
 33426 ;;		None
 33427 ;; Return value:  Size  Location     Type
 33428 ;;                  1  [STACK] void 
 33429 ;; Registers used:
 33430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33431 ;; Tracked objects:
 33432 ;;		On entry : 3F/3E
 33433 ;;		On exit  : 0/0
 33434 ;;		Unchanged: 0/0
 33435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33440 ;;Total ram usage:        0 bytes
 33441 ;; Hardware stack levels used:    1
 33442 ;; Hardware stack levels required when called:   16
 33443 ;; This function calls:
 33444 ;;		_ADCC_SetADIInterruptHandler
 33445 ;;		_ADCC_SetADTIInterruptHandler
 33446 ;; This function is called by:
 33447 ;;		_SYSTEM_Initialize
 33448 ;; This function uses a reentrant model
 33449 ;;
 33450                           
 33451                           	psect	text143
 33452  01B790                     __ptext143:
 33453                           	opt callstack 0
 33454  01B790                     _ADCC_Initialize:
 33455                           	opt callstack 13
 33456                           
 33457                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 33458                           
 33459                           ; BSR set to: 60
 33460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33461                           ;incstack = 0
 33462  01B790  013E               	movlb	62	; () banked
 33463  01B792  6BDE               	clrf	222,b	;volatile
 33464                           
 33465                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 33466  01B794  6BDF               	clrf	223,b	;volatile
 33467                           
 33468                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 33469  01B796  6BE0               	clrf	224,b	;volatile
 33470                           
 33471                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 33472  01B798  6BE1               	clrf	225,b	;volatile
 33473                           
 33474                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 33475  01B79A  6BE4               	clrf	228,b	;volatile
 33476                           
 33477                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 33478  01B79C  6BE5               	clrf	229,b	;volatile
 33479                           
 33480                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 33481  01B79E  6BEA               	clrf	234,b	;volatile
 33482                           
 33483                           ; BSR set to: 62
 33484                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 33485  01B7A0  0E40               	movlw	64
 33486  01B7A2  6FEC               	movwf	236,b	;volatile
 33487                           
 33488                           ; BSR set to: 62
 33489                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 33490  01B7A4  6BF1               	clrf	241,b	;volatile
 33491                           
 33492                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 33493  01B7A6  0E20               	movlw	32
 33494  01B7A8  6FF3               	movwf	243,b	;volatile
 33495                           
 33496                           ; BSR set to: 62
 33497                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 33498  01B7AA  6BF4               	clrf	244,b	;volatile
 33499                           
 33500                           ; BSR set to: 62
 33501                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 33502  01B7AC  6BF5               	clrf	245,b	;volatile
 33503                           
 33504                           ; BSR set to: 62
 33505                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 33506  01B7AE  6BF6               	clrf	246,b	;volatile
 33507                           
 33508                           ; BSR set to: 62
 33509                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 33510  01B7B0  6BF7               	clrf	247,b	;volatile
 33511                           
 33512                           ; BSR set to: 62
 33513                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 33514  01B7B2  6BF9               	clrf	249,b	;volatile
 33515                           
 33516                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 33517  01B7B4  0E5B               	movlw	91
 33518  01B7B6  6FFA               	movwf	250,b	;volatile
 33519                           
 33520                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 33521  01B7B8  0E27               	movlw	39
 33522  01B7BA  6FFB               	movwf	251,b	;volatile
 33523                           
 33524                           ; BSR set to: 62
 33525                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 33526  01B7BC  6BFC               	clrf	252,b	;volatile
 33527                           
 33528                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 33529  01B7BE  0E02               	movlw	2
 33530  01B7C0  6FFD               	movwf	253,b	;volatile
 33531                           
 33532                           ; BSR set to: 62
 33533                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 33534  01B7C2  6BFE               	clrf	254,b	;volatile
 33535                           
 33536                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 33537  01B7C4  0E07               	movlw	7
 33538  01B7C6  6FFF               	movwf	255,b	;volatile
 33539                           
 33540                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 33541  01B7C8  0E84               	movlw	132
 33542  01B7CA  6FF8               	movwf	248,b	;volatile
 33543                           
 33544                           ; BSR set to: 62
 33545                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 33546  01B7CC  0139               	movlb	57	; () banked
 33547  01B7CE  95A1               	bcf	161,2,b	;volatile
 33548                           
 33549                           ; BSR set to: 57
 33550                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 33551  01B7D0  8591               	bsf	145,2,b	;volatile
 33552                           
 33553                           ; BSR set to: 57
 33554                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 33555  01B7D2  0ECC               	movlw	low _ADCC_DefaultInterruptHandler
 33556  01B7D4  6EE6               	movwf	postinc1,c
 33557  01B7D6  0ECA               	movlw	high _ADCC_DefaultInterruptHandler
 33558  01B7D8  6EE6               	movwf	postinc1,c
 33559  01B7DA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33560  01B7DC  6EE6               	movwf	postinc1,c
 33561  01B7DE  EC1D  F0E3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 33562                           
 33563                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 33564  01B7E2  0139               	movlb	57	; () banked
 33565  01B7E4  97A1               	bcf	161,3,b	;volatile
 33566                           
 33567                           ; BSR set to: 57
 33568                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 33569  01B7E6  8791               	bsf	145,3,b	;volatile
 33570                           
 33571                           ; BSR set to: 57
 33572                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 33573  01B7E8  0ECC               	movlw	low _ADCC_DefaultInterruptHandler
 33574  01B7EA  6EE6               	movwf	postinc1,c
 33575  01B7EC  0ECA               	movlw	high _ADCC_DefaultInterruptHandler
 33576  01B7EE  6EE6               	movwf	postinc1,c
 33577  01B7F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 33578  01B7F2  6EE6               	movwf	postinc1,c
 33579  01B7F4  EC09  F0E3         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 33580                           
 33581                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33582  01B7F8  0012               	return		;funcret
 33583  01B7FA                     __end_of_ADCC_Initialize:
 33584                           	opt callstack 0
 33585                           
 33586 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 33587 ;; Defined at:
 33588 ;;		line 336 in file "mcc_generated_files/adcc.c"
 33589 ;; Parameters:    Size  Location     Type
 33590 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33591 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 33592 ;; Auto vars:     Size  Location     Type
 33593 ;;		None
 33594 ;; Return value:  Size  Location     Type
 33595 ;;                  1  [STACK] void 
 33596 ;; Registers used:
 33597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33598 ;; Tracked objects:
 33599 ;;		On entry : 0/0
 33600 ;;		On exit  : 0/0
 33601 ;;		Unchanged: 0/0
 33602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33607 ;;Total ram usage:        0 bytes
 33608 ;; Hardware stack levels used:    1
 33609 ;; Hardware stack levels required when called:   15
 33610 ;; This function calls:
 33611 ;;		Nothing
 33612 ;; This function is called by:
 33613 ;;		_ADCC_Initialize
 33614 ;;		_start_adc_scan
 33615 ;; This function uses a reentrant model
 33616 ;;
 33617                           
 33618                           	psect	text144
 33619  01C612                     __ptext144:
 33620                           	opt callstack 0
 33621  01C612                     _ADCC_SetADTIInterruptHandler:
 33622                           	opt callstack 14
 33623                           
 33624                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 33625                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33626                           
 33627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33628                           ;incstack = 0
 33629  01C612  50E1               	movf	fsr1l,w,c
 33630  01C614  0FFD               	addlw	-3
 33631  01C616  6ED9               	movwf	fsr2l,c
 33632  01C618  50E2               	movf	fsr1h,w,c
 33633  01C61A  6EDA               	movwf	fsr2h,c
 33634  01C61C  0EFF               	movlw	255
 33635  01C61E  22DA               	addwfc	fsr2h,f,c
 33636  01C620  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 33637  01C626  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 33638  01C62C  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 33639                           
 33640                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 33641  01C632  52E5               	movf	postdec1,f,c
 33642  01C634  52E5               	movf	postdec1,f,c
 33643  01C636  52E5               	movf	postdec1,f,c
 33644  01C638  0012               	return		;funcret
 33645  01C63A                     __end_of_ADCC_SetADTIInterruptHandler:
 33646                           	opt callstack 0
 33647                           
 33648 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 33649 ;; Defined at:
 33650 ;;		line 323 in file "mcc_generated_files/adcc.c"
 33651 ;; Parameters:    Size  Location     Type
 33652 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33653 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 33654 ;; Auto vars:     Size  Location     Type
 33655 ;;		None
 33656 ;; Return value:  Size  Location     Type
 33657 ;;                  1  [STACK] void 
 33658 ;; Registers used:
 33659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33660 ;; Tracked objects:
 33661 ;;		On entry : 6/0
 33662 ;;		On exit  : 0/0
 33663 ;;		Unchanged: 0/0
 33664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33669 ;;Total ram usage:        0 bytes
 33670 ;; Hardware stack levels used:    1
 33671 ;; Hardware stack levels required when called:   15
 33672 ;; This function calls:
 33673 ;;		Nothing
 33674 ;; This function is called by:
 33675 ;;		_ADCC_Initialize
 33676 ;;		_start_adc_scan
 33677 ;; This function uses a reentrant model
 33678 ;;
 33679                           
 33680                           	psect	text145
 33681  01C63A                     __ptext145:
 33682                           	opt callstack 0
 33683  01C63A                     _ADCC_SetADIInterruptHandler:
 33684                           	opt callstack 14
 33685                           
 33686                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 33687                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33688                           
 33689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33690                           ;incstack = 0
 33691  01C63A  50E1               	movf	fsr1l,w,c
 33692  01C63C  0FFD               	addlw	-3
 33693  01C63E  6ED9               	movwf	fsr2l,c
 33694  01C640  50E2               	movf	fsr1h,w,c
 33695  01C642  6EDA               	movwf	fsr2h,c
 33696  01C644  0EFF               	movlw	255
 33697  01C646  22DA               	addwfc	fsr2h,f,c
 33698  01C648  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 33699  01C64E  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 33700  01C654  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 33701                           
 33702                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33703  01C65A  52E5               	movf	postdec1,f,c
 33704  01C65C  52E5               	movf	postdec1,f,c
 33705  01C65E  52E5               	movf	postdec1,f,c
 33706  01C660  0012               	return		;funcret
 33707  01C662                     __end_of_ADCC_SetADIInterruptHandler:
 33708                           	opt callstack 0
 33709                           
 33710 ;; *************** function _INT1_ISR *****************
 33711 ;; Defined at:
 33712 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 33713 ;; Parameters:    Size  Location     Type
 33714 ;;		None
 33715 ;; Auto vars:     Size  Location     Type
 33716 ;;		None
 33717 ;; Return value:  Size  Location     Type
 33718 ;;                  1    wreg      void 
 33719 ;; Registers used:
 33720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33721 ;; Tracked objects:
 33722 ;;		On entry : 0/0
 33723 ;;		On exit  : 0/0
 33724 ;;		Unchanged: 0/0
 33725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33730 ;;Total ram usage:        4 bytes
 33731 ;; Hardware stack levels used:    1
 33732 ;; Hardware stack levels required when called:    5
 33733 ;; This function calls:
 33734 ;;		_INT1_CallBack
 33735 ;; This function is called by:
 33736 ;;		Interrupt level 1
 33737 ;; This function uses a non-reentrant model
 33738 ;;
 33739                           
 33740                           	psect	text146
 33741  01C0C0                     __ptext146:
 33742                           	opt callstack 0
 33743  01C0C0                     _INT1_ISR:
 33744                           	opt callstack 11
 33745                           
 33746                           ;incstack = 0
 33747  01C0C0  006F FF60  F027    	movff	status,??_INT1_ISR
 33748  01C0C6  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 33749  01C0CC  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 33750  01C0D2  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 33751  01C0D8  EE16  F0AF         	lfsr	1,___intlo_sp
 33752                           
 33753                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 33754  01C0DC  0139               	movlb	57	; () banked
 33755  01C0DE  91A5               	bcf	165,0,b	;volatile
 33756                           
 33757                           ; BSR set to: 57
 33758                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 33759  01C0E0  EC80  F0E3         	call	_INT1_CallBack	;wreg free
 33760  01C0E4  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 33761  01C0EA  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 33762  01C0F0  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 33763  01C0F6  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 33764  01C0FC  0011               	retfie		f
 33765  01C0FE                     __end_of_INT1_ISR:
 33766                           	opt callstack 0
 33767                           
 33768 ;; *************** function _INT1_CallBack *****************
 33769 ;; Defined at:
 33770 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 33771 ;; Parameters:    Size  Location     Type
 33772 ;;		None
 33773 ;; Auto vars:     Size  Location     Type
 33774 ;;		None
 33775 ;; Return value:  Size  Location     Type
 33776 ;;                  1  [STACK] void 
 33777 ;; Registers used:
 33778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 33779 ;; Tracked objects:
 33780 ;;		On entry : 3F/39
 33781 ;;		On exit  : 0/0
 33782 ;;		Unchanged: 0/0
 33783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33788 ;;Total ram usage:        0 bytes
 33789 ;; Hardware stack levels used:    1
 33790 ;; Hardware stack levels required when called:    4
 33791 ;; This function calls:
 33792 ;;		Absolute function
 33793 ;;		_INT1_DefaultInterruptHandler
 33794 ;;		_switch_handler
 33795 ;; This function is called by:
 33796 ;;		_INT1_ISR
 33797 ;; This function uses a reentrant model
 33798 ;;
 33799                           
 33800                           	psect	text147
 33801  01C700                     __ptext147:
 33802                           	opt callstack 0
 33803  01C700                     _INT1_CallBack:
 33804                           	opt callstack 11
 33805                           
 33806                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 33807                           
 33808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33809                           ;incstack = 0
 33810  01C700  0100               	movlb	0	; () banked
 33811  01C702  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33812  01C704  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33813  01C706  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33814  01C708  B4D8               	btfsc	status,2,c
 33815  01C70A  0012               	return	
 33816                           
 33817                           ; BSR set to: 0
 33818                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 33819  01C70C  D801               	call	u1037_28
 33820  01C70E  0012               	return	
 33821  01C710                     u1037_28:
 33822  01C710  0005               	push	
 33823  01C712  6EFA               	movwf	pclath,c
 33824  01C714  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 33825  01C716  6EFD               	movwf	tosl,c
 33826  01C718  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 33827  01C71A  6EFE               	movwf	tosh,c
 33828  01C71C  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 33829  01C71E  6EFF               	movwf	tosu,c
 33830  01C720  50FA               	movf	pclath,w,c
 33831  01C722  0012               	return		;indir
 33832  01C724                     __end_of_INT1_CallBack:
 33833                           	opt callstack 0
 33834                           
 33835 ;; *************** function _INT1_DefaultInterruptHandler *****************
 33836 ;; Defined at:
 33837 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 33838 ;; Parameters:    Size  Location     Type
 33839 ;;		None
 33840 ;; Auto vars:     Size  Location     Type
 33841 ;;		None
 33842 ;; Return value:  Size  Location     Type
 33843 ;;                  1  [STACK] void 
 33844 ;; Registers used:
 33845 ;;		None
 33846 ;; Tracked objects:
 33847 ;;		On entry : 3F/0
 33848 ;;		On exit  : 0/0
 33849 ;;		Unchanged: 0/0
 33850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33855 ;;Total ram usage:        0 bytes
 33856 ;; Hardware stack levels used:    1
 33857 ;; Hardware stack levels required when called:    3
 33858 ;; This function calls:
 33859 ;;		Nothing
 33860 ;; This function is called by:
 33861 ;;		_EXT_INT_Initialize
 33862 ;;		_INT1_CallBack
 33863 ;; This function uses a reentrant model
 33864 ;;
 33865                           
 33866                           	psect	text148
 33867  01CAC6                     __ptext148:
 33868                           	opt callstack 0
 33869  01CAC6                     _INT1_DefaultInterruptHandler:
 33870                           	opt callstack 11
 33871                           
 33872                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33873                           
 33874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33875                           ;incstack = 0
 33876  01CAC6  0012               	return		;funcret
 33877  01CAC8                     __end_of_INT1_DefaultInterruptHandler:
 33878                           	opt callstack 0
 33879                           
 33880 ;; *************** function _switch_handler *****************
 33881 ;; Defined at:
 33882 ;;		line 58 in file "dio.c"
 33883 ;; Parameters:    Size  Location     Type
 33884 ;;		None
 33885 ;; Auto vars:     Size  Location     Type
 33886 ;;  i               1  [STACK] unsigned char 
 33887 ;;  sw_value        1  [STACK] unsigned char 
 33888 ;; Return value:  Size  Location     Type
 33889 ;;                  1  [STACK] void 
 33890 ;; Registers used:
 33891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 33892 ;; Tracked objects:
 33893 ;;		On entry : 3F/0
 33894 ;;		On exit  : 0/0
 33895 ;;		Unchanged: 0/0
 33896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33901 ;;Total ram usage:        0 bytes
 33902 ;; Hardware stack levels used:    1
 33903 ;; Hardware stack levels required when called:    3
 33904 ;; This function calls:
 33905 ;;		Nothing
 33906 ;; This function is called by:
 33907 ;;		_start_switch_handler
 33908 ;;		_INT1_CallBack
 33909 ;; This function uses a reentrant model
 33910 ;;
 33911                           
 33912                           	psect	text149
 33913  019920                     __ptext149:
 33914                           	opt callstack 0
 33915  019920                     _switch_handler:
 33916                           	opt callstack 0
 33917                           
 33918                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33919  019920  52E6               	movf	postinc1,f,c
 33920  019922  52E6               	movf	postinc1,f,c
 33921                           
 33922                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 33923                           ;stkvar	_i @ sp[(-2)+0]
 33924                           
 33925                           ;incstack = 0
 33926  019924  0EFE               	movlw	-2
 33927  019926  6AE3               	clrf	plusw1,c
 33928  019928  9ABF               	bcf	191,5,c	;volatile
 33929                           
 33930                           ;dio.c: 72:  __nop();
 33931  01992A  F000               	nop	
 33932                           
 33933                           ;dio.c: 73:  __nop();
 33934  01992C  F000               	nop	
 33935                           
 33936                           ;dio.c: 74:  __nop();
 33937  01992E  F000               	nop	
 33938                           
 33939                           ;dio.c: 75:  __nop();
 33940  019930  F000               	nop	
 33941                           
 33942                           ;dio.c: 76:  __nop();
 33943  019932  F000               	nop	
 33944                           
 33945                           ;dio.c: 77:  __nop();
 33946  019934  F000               	nop	
 33947  019936  D016               	goto	l10991
 33948  019938                     l10977:
 33949                           
 33950                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 33951  019938  A6CF               	btfss	207,3,c	;volatile
 33952  01993A  D00E               	goto	u1003_20
 33953  01993C  D00A               	goto	u1003_21
 33954  01993E                     u1001_28:
 33955                           
 33956                           ;stkvar	_sw_value @ sp[(-2)+1]
 33957  01993E  0EFF               	movlw	-1
 33958  019940  0060  F033  FFE3   	movff	btemp+11,plusw1
 33959                           
 33960                           ;dio.c: 83:    break;
 33961  019946  D027               	goto	l10993
 33962  019948                     l10979:
 33963                           
 33964                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 33965  019948  A4CF               	btfss	207,2,c	;volatile
 33966  01994A  D006               	goto	u1003_20
 33967  01994C  D002               	goto	u1003_21
 33968  01994E                     l10981:
 33969                           
 33970                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 33971  01994E  A6CD               	btfss	205,3,c	;volatile
 33972  019950  D003               	goto	u1003_20
 33973  019952                     u1003_21:
 33974  019952  6A0C               	clrf	(btemp+11)^0,c
 33975  019954  2A0C               	incf	(btemp+11)^0,f,c
 33976  019956  D7F3               	goto	u1001_28
 33977  019958                     u1003_20:
 33978  019958  6A0C               	clrf	(btemp+11)^0,c
 33979  01995A  D7F1               	goto	u1001_28
 33980  01995C                     l10983:
 33981                           
 33982                           ;dio.c: 91:    sw_value = 1;
 33983                           ;stkvar	_sw_value @ sp[(-2)+1]
 33984  01995C  0EFF               	movlw	-1
 33985  01995E  6AE3               	clrf	plusw1,c
 33986  019960  2AE3               	incf	plusw1,f,c
 33987                           
 33988                           ;dio.c: 92:    break;
 33989  019962  D019               	goto	l10993
 33990  019964                     l10991:
 33991                           
 33992                           ;stkvar	_i @ sp[(-2)+0]
 33993  019964  0EFE               	movlw	-2
 33994  019966  50E3               	movf	plusw1,w,c
 33995  019968  6E0B               	movwf	(btemp+10)^0,c
 33996  01996A  6A0C               	clrf	(btemp+11)^0,c
 33997                           
 33998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33999                           ; Switch size 1, requested type "simple"
 34000                           ; Number of cases is 1, Range of values is 0 to 0
 34001                           ; switch strategies available:
 34002                           ; Name         Instructions Cycles
 34003                           ; simple_byte            4     3 (average)
 34004                           ;	Chosen strategy is simple_byte
 34005  01996C  500C               	movf	(btemp+11)^0,w,c
 34006  01996E  0A00               	xorlw	0	; case 0
 34007  019970  A4D8               	btfss	status,2,c
 34008  019972  D7F4               	goto	l10983
 34009                           
 34010                           ; Switch size 1, requested type "simple"
 34011                           ; Number of cases is 5, Range of values is 0 to 4
 34012                           ; switch strategies available:
 34013                           ; Name         Instructions Cycles
 34014                           ; simple_byte           16     9 (average)
 34015                           ;	Chosen strategy is simple_byte
 34016  019974  500B               	movf	(btemp+10)^0,w,c
 34017  019976  0A00               	xorlw	0	; case 0
 34018  019978  B4D8               	btfsc	status,2,c
 34019  01997A  D7F0               	goto	l10983
 34020  01997C  0A01               	xorlw	1	; case 1
 34021  01997E  B4D8               	btfsc	status,2,c
 34022  019980  D7ED               	goto	l10983
 34023  019982  0A03               	xorlw	3	; case 2
 34024  019984  B4D8               	btfsc	status,2,c
 34025  019986  D7E0               	goto	l10979
 34026  019988  0A01               	xorlw	1	; case 3
 34027  01998A  B4D8               	btfsc	status,2,c
 34028  01998C  D7D5               	goto	l10977
 34029  01998E  0A07               	xorlw	7	; case 4
 34030  019990  B4D8               	btfsc	status,2,c
 34031  019992  D7DD               	goto	l10981
 34032  019994  D7E3               	goto	l10983
 34033  019996                     l10993:
 34034                           
 34035                           ;dio.c: 102:   if (sw_value) {
 34036                           ;stkvar	_sw_value @ sp[(-2)+1]
 34037  019996  0EFF               	movlw	-1
 34038  019998  50E3               	movf	plusw1,w,c
 34039  01999A  B4D8               	btfsc	status,2,c
 34040  01999C  D018               	goto	l10999
 34041                           
 34042                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 34043                           ;stkvar	_i @ sp[(-2)+0]
 34044  01999E  0EFE               	movlw	-2
 34045  0199A0  50E3               	movf	plusw1,w,c
 34046  0199A2  0D05               	mullw	5
 34047  0199A4  0E54               	movlw	low _S
 34048  0199A6  24F3               	addwf	243,w,c
 34049  0199A8  6ED9               	movwf	fsr2l,c
 34050  0199AA  0E02               	movlw	high _S
 34051  0199AC  20F4               	addwfc	prodh,w,c
 34052  0199AE  6EDA               	movwf	fsr2h,c
 34053  0199B0  04DE               	decf	postinc2,w,c
 34054  0199B2  A4D8               	btfss	status,2,c
 34055  0199B4  D049               	goto	l11007
 34056                           
 34057                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 34058                           ;stkvar	_i @ sp[(-2)+0]
 34059  0199B6  0EFE               	movlw	-2
 34060  0199B8  50E3               	movf	plusw1,w,c
 34061  0199BA  0D05               	mullw	5
 34062  0199BC  0E54               	movlw	low _S
 34063  0199BE  24F3               	addwf	243,w,c
 34064  0199C0  6ED9               	movwf	fsr2l,c
 34065  0199C2  0E02               	movlw	high _S
 34066  0199C4  20F4               	addwfc	prodh,w,c
 34067  0199C6  6EDA               	movwf	fsr2h,c
 34068  0199C8  0E00               	movlw	0
 34069  0199CA  6EDF               	movwf	indf2,c
 34070  0199CC  D03D               	goto	l11007
 34071  0199CE                     l10999:
 34072                           
 34073                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 34074                           ;stkvar	_i @ sp[(-2)+0]
 34075  0199CE  0EFE               	movlw	-2
 34076  0199D0  50E3               	movf	plusw1,w,c
 34077  0199D2  0D05               	mullw	5
 34078  0199D4  0E54               	movlw	low _S
 34079  0199D6  24F3               	addwf	243,w,c
 34080  0199D8  6ED9               	movwf	fsr2l,c
 34081  0199DA  0E02               	movlw	high _S
 34082  0199DC  20F4               	addwfc	prodh,w,c
 34083  0199DE  6EDA               	movwf	fsr2h,c
 34084  0199E0  50DF               	movf	indf2,w,c
 34085  0199E2  A4D8               	btfss	status,2,c
 34086  0199E4  D031               	goto	l11007
 34087                           
 34088                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 34089                           ;stkvar	_i @ sp[(-2)+0]
 34090  0199E6  0EFE               	movlw	-2
 34091  0199E8  50E3               	movf	plusw1,w,c
 34092  0199EA  0D05               	mullw	5
 34093  0199EC  0E54               	movlw	low _S
 34094  0199EE  24F3               	addwf	243,w,c
 34095  0199F0  6ED9               	movwf	fsr2l,c
 34096  0199F2  0E02               	movlw	high _S
 34097  0199F4  20F4               	addwfc	prodh,w,c
 34098  0199F6  6EDA               	movwf	fsr2h,c
 34099  0199F8  0E01               	movlw	1
 34100  0199FA  6EDF               	movwf	indf2,c
 34101                           
 34102                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 34103  0199FC  EE20  F1C3         	lfsr	2,_V+188	;volatile
 34104                           
 34105                           ;stkvar	_i @ sp[(-2)+0]
 34106  019A00  0EFE               	movlw	-2
 34107  019A02  50E3               	movf	plusw1,w,c
 34108  019A04  0D05               	mullw	5
 34109  019A06  0E55               	movlw	low (_S+1)
 34110  019A08  24F3               	addwf	243,w,c
 34111  019A0A  6EE9               	movwf	fsr0l,c
 34112  019A0C  0E02               	movlw	high (_S+1)
 34113  019A0E  20F4               	addwfc	prodh,w,c
 34114  019A10  6EEA               	movwf	fsr0h,c
 34115  019A12  006F FF7B FFEE     	movff	postinc2,postinc0
 34116  019A18  006F FF7B FFEE     	movff	postinc2,postinc0
 34117  019A1E  006F FF7B FFEE     	movff	postinc2,postinc0
 34118  019A24  006F FF7B FFEE     	movff	postinc2,postinc0
 34119                           
 34120                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 34121                           ;stkvar	_i @ sp[(-2)+0]
 34122  019A2A  0EFE               	movlw	-2
 34123  019A2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 34124  019A32  0E01               	movlw	1
 34125  019A34  6E0B               	movwf	(btemp+10)^0,c
 34126  019A36  2A0C               	incf	(btemp+11)^0,f,c
 34127  019A38  D002               	goto	u1007_24
 34128  019A3A                     u1007_25:
 34129  019A3A  90D8               	bcf	status,0,c
 34130  019A3C  360B               	rlcf	(btemp+10)^0,f,c
 34131  019A3E                     u1007_24:
 34132  019A3E  2E0C               	decfsz	(btemp+11)^0,f,c
 34133  019A40  D7FC               	goto	u1007_25
 34134  019A42  500B               	movf	(btemp+10)^0,w,c
 34135  019A44  0102               	movlb	2	; () banked
 34136  019A46  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 34137  019A48                     l11007:
 34138                           
 34139                           ;dio.c: 113:  } while (++i < 6);
 34140                           ;stkvar	_i @ sp[(-2)+0]
 34141  019A48  0EFE               	movlw	-2
 34142  019A4A  2AE3               	incf	plusw1,f,c
 34143  019A4C  0EFE               	movlw	-2
 34144  019A4E  006F FF8C  F001    	movff	plusw1,btemp
 34145  019A54  0E05               	movlw	5
 34146  019A56  6401               	cpfsgt	btemp^0,c
 34147  019A58  D785               	goto	l10991
 34148                           
 34149                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 34150  019A5A  8ABF               	bsf	191,5,c	;volatile
 34151                           
 34152                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34153  019A5C  52E5               	movf	postdec1,f,c
 34154  019A5E  52E5               	movf	postdec1,f,c
 34155  019A60  0012               	return		;funcret
 34156  019A62                     __end_of_switch_handler:
 34157                           	opt callstack 0
 34158                           
 34159 ;; *************** function _TMR5_ISR *****************
 34160 ;; Defined at:
 34161 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 34162 ;; Parameters:    Size  Location     Type
 34163 ;;		None
 34164 ;; Auto vars:     Size  Location     Type
 34165 ;;		None
 34166 ;; Return value:  Size  Location     Type
 34167 ;;                  1    wreg      void 
 34168 ;; Registers used:
 34169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34170 ;; Tracked objects:
 34171 ;;		On entry : 0/0
 34172 ;;		On exit  : 3F/0
 34173 ;;		Unchanged: 0/0
 34174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34177 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34178 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34179 ;;Total ram usage:       15 bytes
 34180 ;; Hardware stack levels used:    1
 34181 ;; Hardware stack levels required when called:    9
 34182 ;; This function calls:
 34183 ;;		_TMR5_CallBack
 34184 ;;		_TMR5_WriteTimer
 34185 ;; This function is called by:
 34186 ;;		Interrupt level 1
 34187 ;; This function uses a non-reentrant model
 34188 ;;
 34189                           
 34190                           	psect	text150
 34191  01A66C                     __ptext150:
 34192                           	opt callstack 0
 34193  01A66C                     _TMR5_ISR:
 34194                           	opt callstack 7
 34195                           
 34196                           ;incstack = 0
 34197  01A66C  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 34198  01A672  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 34199  01A678  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 34200  01A67E  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 34201  01A684  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 34202  01A68A  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 34203  01A690  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 34204  01A696  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 34205  01A69C  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 34206  01A6A2  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 34207  01A6A8  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 34208  01A6AE  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 34209  01A6B4  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 34210  01A6BA  EE16  F0AF         	lfsr	1,___intlo_sp
 34211                           
 34212                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 34213  01A6BE  0139               	movlb	57	; () banked
 34214  01A6C0  9DA8               	bcf	168,6,b	;volatile
 34215                           
 34216                           ; BSR set to: 57
 34217                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 34218  01A6C2  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 34219  01A6C8  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 34220  01A6CE  EC20  F0E0         	call	_TMR5_WriteTimer	;wreg free
 34221                           
 34222                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 34223  01A6D2  0101               	movlb	1	; () banked
 34224  01A6D4  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 34225  01A6D6  6E2B               	movwf	??_TMR5_ISR^0,c
 34226  01A6D8  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 34227  01A6DA  0E05               	movlw	5
 34228  01A6DC  262B               	addwf	??_TMR5_ISR^0,f,c
 34229  01A6DE  0E00               	movlw	0
 34230  01A6E0  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 34231  01A6E2  0100               	movlb	0	; () banked
 34232  01A6E4  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 34233  01A6E6  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34234  01A6E8  502B               	movf	??_TMR5_ISR^0,w,c
 34235  01A6EA  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 34236  01A6EC  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 34237  01A6EE  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34238  01A6F0  A0D8               	btfss	status,0,c
 34239  01A6F2  D005               	goto	i1l1019
 34240                           
 34241                           ; BSR set to: 0
 34242                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 34243  01A6F4  EC92  F0E3         	call	_TMR5_CallBack	;wreg free
 34244                           
 34245                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 34246  01A6F8  0100               	movlb	0	; () banked
 34247  01A6FA  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 34248  01A6FC  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 34249  01A6FE                     i1l1019:
 34250                           
 34251                           ; BSR set to: 0
 34252  01A6FE  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 34253  01A704  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 34254  01A70A  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 34255  01A710  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 34256  01A716  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 34257  01A71C  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 34258  01A722  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 34259  01A728  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 34260  01A72E  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 34261  01A734  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 34262  01A73A  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 34263  01A740  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 34264  01A746  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 34265  01A74C  0011               	retfie		f
 34266  01A74E                     __end_of_TMR5_ISR:
 34267                           	opt callstack 0
 34268                           
 34269 ;; *************** function _TMR5_WriteTimer *****************
 34270 ;; Defined at:
 34271 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 34272 ;; Parameters:    Size  Location     Type
 34273 ;;  timerVal        2  [STACK] unsigned short 
 34274 ;; Auto vars:     Size  Location     Type
 34275 ;;		None
 34276 ;; Return value:  Size  Location     Type
 34277 ;;                  1  [STACK] void 
 34278 ;; Registers used:
 34279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34280 ;; Tracked objects:
 34281 ;;		On entry : 3F/39
 34282 ;;		On exit  : 0/0
 34283 ;;		Unchanged: 0/0
 34284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34289 ;;Total ram usage:        0 bytes
 34290 ;; Hardware stack levels used:    1
 34291 ;; Hardware stack levels required when called:    3
 34292 ;; This function calls:
 34293 ;;		Nothing
 34294 ;; This function is called by:
 34295 ;;		_TMR5_ISR
 34296 ;; This function uses a reentrant model
 34297 ;;
 34298                           
 34299                           	psect	text151
 34300  01C040                     __ptext151:
 34301                           	opt callstack 0
 34302  01C040                     _TMR5_WriteTimer:
 34303                           	opt callstack 12
 34304                           
 34305                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 34306                           
 34307                           ; BSR set to: 0
 34308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34309                           ;incstack = 0
 34310  01C040  A49A               	btfss	154,2,c	;volatile
 34311  01C042  D00F               	goto	l11217
 34312                           
 34313                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 34314  01C044  909A               	bcf	154,0,c	;volatile
 34315                           
 34316                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 34317                           ;stkvar	_timerVal @ sp[(0)+-2]
 34318  01C046  0EFF               	movlw	255
 34319  01C048  24E1               	addwf	fsr1l,w,c
 34320  01C04A  6ED9               	movwf	fsr2l,c
 34321  01C04C  0EFF               	movlw	255
 34322  01C04E  20E2               	addwfc	fsr1h,w,c
 34323  01C050  6EDA               	movwf	fsr2h,c
 34324  01C052  50DF               	movf	indf2,w,c
 34325  01C054  6E99               	movwf	153,c	;volatile
 34326                           
 34327                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 34328                           ;stkvar	_timerVal @ sp[(0)+-2]
 34329  01C056  0EFE               	movlw	-2
 34330  01C058  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34331                           
 34332                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 34333  01C05E  809A               	bsf	154,0,c	;volatile
 34334                           
 34335                           ;mcc_generated_files/tmr5.c: 144:  } else {
 34336  01C060  D00C               	goto	l1002
 34337  01C062                     l11217:
 34338                           
 34339                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 34340                           ;stkvar	_timerVal @ sp[(0)+-2]
 34341  01C062  0EFF               	movlw	255
 34342  01C064  24E1               	addwf	fsr1l,w,c
 34343  01C066  6ED9               	movwf	fsr2l,c
 34344  01C068  0EFF               	movlw	255
 34345  01C06A  20E2               	addwfc	fsr1h,w,c
 34346  01C06C  6EDA               	movwf	fsr2h,c
 34347  01C06E  50DF               	movf	indf2,w,c
 34348  01C070  6E99               	movwf	153,c	;volatile
 34349                           
 34350                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 34351                           ;stkvar	_timerVal @ sp[(0)+-2]
 34352  01C072  0EFE               	movlw	-2
 34353  01C074  006F FF8F FF98     	movff	plusw1,16280	;volatile
 34354  01C07A                     l1002:
 34355                           
 34356                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34357  01C07A  52E5               	movf	postdec1,f,c
 34358  01C07C  52E5               	movf	postdec1,f,c
 34359  01C07E  0012               	return		;funcret
 34360  01C080                     __end_of_TMR5_WriteTimer:
 34361                           	opt callstack 0
 34362                           
 34363 ;; *************** function _TMR5_CallBack *****************
 34364 ;; Defined at:
 34365 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 34366 ;; Parameters:    Size  Location     Type
 34367 ;;		None
 34368 ;; Auto vars:     Size  Location     Type
 34369 ;;		None
 34370 ;; Return value:  Size  Location     Type
 34371 ;;                  1  [STACK] void 
 34372 ;; Registers used:
 34373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 34374 ;; Tracked objects:
 34375 ;;		On entry : 3F/0
 34376 ;;		On exit  : 0/0
 34377 ;;		Unchanged: 0/0
 34378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34383 ;;Total ram usage:        0 bytes
 34384 ;; Hardware stack levels used:    1
 34385 ;; Hardware stack levels required when called:    8
 34386 ;; This function calls:
 34387 ;;		Absolute function
 34388 ;;		_TMR5_DefaultInterruptHandler
 34389 ;; This function is called by:
 34390 ;;		_TMR5_ISR
 34391 ;; This function uses a reentrant model
 34392 ;;
 34393                           
 34394                           	psect	text152
 34395  01C724                     __ptext152:
 34396                           	opt callstack 0
 34397  01C724                     _TMR5_CallBack:
 34398                           	opt callstack 7
 34399                           
 34400                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 34401                           
 34402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34403                           ;incstack = 0
 34404  01C724  0100               	movlb	0	; () banked
 34405  01C726  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34406  01C728  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34407  01C72A  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34408  01C72C  B4D8               	btfsc	status,2,c
 34409  01C72E  0012               	return	
 34410                           
 34411                           ; BSR set to: 0
 34412                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 34413  01C730  D801               	call	u1046_28
 34414  01C732  0012               	return	
 34415  01C734                     u1046_28:
 34416  01C734  0005               	push	
 34417  01C736  6EFA               	movwf	pclath,c
 34418  01C738  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 34419  01C73A  6EFD               	movwf	tosl,c
 34420  01C73C  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 34421  01C73E  6EFE               	movwf	tosh,c
 34422  01C740  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 34423  01C742  6EFF               	movwf	tosu,c
 34424  01C744  50FA               	movf	pclath,w,c
 34425  01C746  0012               	return		;indir
 34426  01C748                     __end_of_TMR5_CallBack:
 34427                           	opt callstack 0
 34428                           
 34429 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 34430 ;; Defined at:
 34431 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 34432 ;; Parameters:    Size  Location     Type
 34433 ;;		None
 34434 ;; Auto vars:     Size  Location     Type
 34435 ;;		None
 34436 ;; Return value:  Size  Location     Type
 34437 ;;                  1  [STACK] void 
 34438 ;; Registers used:
 34439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34440 ;; Tracked objects:
 34441 ;;		On entry : 3F/0
 34442 ;;		On exit  : 0/0
 34443 ;;		Unchanged: 0/0
 34444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34449 ;;Total ram usage:        0 bytes
 34450 ;; Hardware stack levels used:    1
 34451 ;; Hardware stack levels required when called:    7
 34452 ;; This function calls:
 34453 ;;		_check_day_time
 34454 ;; This function is called by:
 34455 ;;		_TMR5_Initialize
 34456 ;;		_TMR5_CallBack
 34457 ;; This function uses a reentrant model
 34458 ;;
 34459                           
 34460                           	psect	text153
 34461  01C170                     __ptext153:
 34462                           	opt callstack 0
 34463  01C170                     _TMR5_DefaultInterruptHandler:
 34464                           	opt callstack 7
 34465                           
 34466                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 34467                           
 34468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34469                           ;incstack = 0
 34470  01C170  A0BE               	btfss	190,0,c	;volatile
 34471  01C172  D002               	goto	u974_20
 34472  01C174  0E01               	movlw	1
 34473  01C176  D001               	goto	u974_26
 34474  01C178                     u974_20:
 34475  01C178  0E00               	movlw	0
 34476  01C17A                     u974_26:
 34477  01C17A  0AFF               	xorlw	255
 34478  01C17C  6E0C               	movwf	(btemp+11)^0,c
 34479  01C17E  50BE               	movf	190,w,c	;volatile
 34480  01C180  180C               	xorwf	(btemp+11)^0,w,c
 34481  01C182  0BFE               	andlw	-2
 34482  01C184  180C               	xorwf	(btemp+11)^0,w,c
 34483  01C186  6EBE               	movwf	190,c	;volatile
 34484                           
 34485                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 34486  01C188  0E01               	movlw	1
 34487  01C18A  0101               	movlb	1	; () banked
 34488  01C18C  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 34489  01C18E  0E00               	movlw	0
 34490  01C190  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 34491  01C192  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 34492  01C194  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 34493                           
 34494                           ; BSR set to: 1
 34495                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 34496  01C196  0E01               	movlw	1
 34497  01C198  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 34498  01C19A  0E00               	movlw	0
 34499  01C19C  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 34500  01C19E  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 34501  01C1A0  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 34502                           
 34503                           ; BSR set to: 1
 34504                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 34505  01C1A2  ECAF  F0C6         	call	_check_day_time	;wreg free
 34506                           
 34507                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34508  01C1A6  0012               	return		;funcret
 34509  01C1A8                     __end_of_TMR5_DefaultInterruptHandler:
 34510                           	opt callstack 0
 34511                           
 34512 ;; *************** function _check_day_time *****************
 34513 ;; Defined at:
 34514 ;;		line 165 in file "mbmc.c"
 34515 ;; Parameters:    Size  Location     Type
 34516 ;;		None
 34517 ;; Auto vars:     Size  Location     Type
 34518 ;;  light           4  [STACK] float 
 34519 ;; Return value:  Size  Location     Type
 34520 ;;                  1  [STACK] _Bool 
 34521 ;; Registers used:
 34522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 34523 ;; Tracked objects:
 34524 ;;		On entry : 3F/1
 34525 ;;		On exit  : 0/0
 34526 ;;		Unchanged: 0/0
 34527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34532 ;;Total ram usage:        0 bytes
 34533 ;; Hardware stack levels used:    1
 34534 ;; Hardware stack levels required when called:    6
 34535 ;; This function calls:
 34536 ;;		___flge
 34537 ;;		_conv_raw_result
 34538 ;;		_get_ac_charger_relay
 34539 ;;		_set_ac_charger_relay
 34540 ;; This function is called by:
 34541 ;;		_TMR5_DefaultInterruptHandler
 34542 ;; This function uses a reentrant model
 34543 ;;
 34544                           
 34545                           	psect	text154
 34546  018D5E                     __ptext154:
 34547                           	opt callstack 0
 34548  018D5E                     _check_day_time:
 34549                           	opt callstack 0
 34550                           
 34551                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34552  018D5E  52E6               	movf	postinc1,f,c
 34553  018D60  52E6               	movf	postinc1,f,c
 34554  018D62  52E6               	movf	postinc1,f,c
 34555  018D64  52E6               	movf	postinc1,f,c
 34556                           
 34557                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 34558                           
 34559                           ;incstack = 0
 34560  018D66  0E00               	movlw	0
 34561  018D68  6EE6               	movwf	postinc1,c
 34562  018D6A  0E0D               	movlw	13
 34563  018D6C  6EE6               	movwf	postinc1,c
 34564  018D6E  ECD0  F0A9         	call	_conv_raw_result	;wreg free
 34565                           
 34566                           ;stkvar	_light @ sp[(-4)+0]
 34567  018D72  0EFC               	movlw	-4
 34568  018D74  0060  F007  FFE3   	movff	btemp,plusw1
 34569  018D7A  0EFD               	movlw	-3
 34570  018D7C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34571  018D82  0EFE               	movlw	-2
 34572  018D84  0060  F00F  FFE3   	movff	btemp+2,plusw1
 34573  018D8A  0EFF               	movlw	-1
 34574  018D8C  0060  F013  FFE3   	movff	btemp+3,plusw1
 34575                           
 34576                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 34577  018D92  2A41               	incf	check_day_time@day_delay^0,f,c
 34578  018D94  0441               	decf	check_day_time@day_delay^0,w,c
 34579  018D96  A4D8               	btfss	status,2,c
 34580  018D98  D0A9               	goto	l2009
 34581  018D9A  0101               	movlb	1	; () banked
 34582  018D9C  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 34583  018D9E  B4D8               	btfsc	status,2,c
 34584  018DA0  D0A5               	goto	l2009
 34585                           
 34586                           ; BSR set to: 1
 34587                           ;mbmc.c: 173:   if (C.soc > 3) {
 34588  018DA2  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34589  018DA6  0E01               	movlw	1
 34590  018DA8  50DB               	movf	plusw2,w,c
 34591  018DAA  E104               	bnz	u951_20
 34592  018DAC  0E04               	movlw	4
 34593  018DAE  5CDE               	subwf	postinc2,w,c
 34594  018DB0  A0D8               	btfss	status,0,c
 34595  018DB2  D073               	goto	l10187
 34596  018DB4                     u951_20:
 34597                           
 34598                           ; BSR set to: 1
 34599                           ;mbmc.c: 174:    if (!C.day) {
 34600  018DB4  EE22  F021         	lfsr	2,_C+290	;volatile
 34601  018DB8  50DF               	movf	indf2,w,c
 34602  018DBA  A4D8               	btfss	status,2,c
 34603  018DBC  D035               	goto	l10175
 34604                           
 34605                           ; BSR set to: 1
 34606                           ;mbmc.c: 175:     if (light > 22.0) {
 34607                           ;stkvar	_light @ sp[(-4)+0]
 34608  018DBE  0EFC               	movlw	-4
 34609  018DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 34610  018DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 34611  018DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 34612  018DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 34613  018DD8  0E00               	movlw	0
 34614  018DDA  6EE6               	movwf	postinc1,c
 34615  018DDC  0E00               	movlw	0
 34616  018DDE  6EE6               	movwf	postinc1,c
 34617  018DE0  0EB0               	movlw	176
 34618  018DE2  6EE6               	movwf	postinc1,c
 34619  018DE4  0E41               	movlw	65
 34620  018DE6  6EE6               	movwf	postinc1,c
 34621  018DE8  EC86  F0CA         	call	___flge	;wreg free
 34622  018DEC  B001               	btfsc	btemp& (0+255),0,c
 34623  018DEE  D07E               	goto	l2009
 34624                           
 34625                           ;mbmc.c: 176:      C.day = 1;
 34626  018DF0  0E01               	movlw	1
 34627  018DF2  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34628                           
 34629                           ;mbmc.c: 177:      C.day_start = V.ticks;
 34630  018DF8  EE20  F188         	lfsr	2,_V+129	;volatile
 34631  018DFC  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 34632  018E02  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 34633  018E08  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 34634  018E0E  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 34635                           
 34636                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 34637  018E14  EC0D  F0E5         	call	_get_ac_charger_relay	;wreg free
 34638  018E18  5001               	movf	btemp^0,w,c
 34639  018E1A  B4D8               	btfsc	status,2,c
 34640  018E1C  D06B               	goto	l2005
 34641                           
 34642                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 34643  018E1E  0E00               	movlw	0
 34644  018E20  6EE6               	movwf	postinc1,c
 34645  018E22  ECF7  F0E4         	call	_set_ac_charger_relay	;wreg free
 34646  018E26  D066               	goto	l2005
 34647  018E28                     l10175:
 34648                           
 34649                           ; BSR set to: 1
 34650                           ;mbmc.c: 184:     if (light < 12.0) {
 34651  018E28  0E00               	movlw	0
 34652  018E2A  6EE6               	movwf	postinc1,c
 34653  018E2C  0E00               	movlw	0
 34654  018E2E  6EE6               	movwf	postinc1,c
 34655  018E30  0E40               	movlw	64
 34656  018E32  6EE6               	movwf	postinc1,c
 34657  018E34  0E41               	movlw	65
 34658  018E36  6EE6               	movwf	postinc1,c
 34659                           
 34660                           ;stkvar	_light @ sp[(-8)+0]
 34661  018E38  0EF8               	movlw	-8
 34662  018E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 34663  018E40  006F FF8F FFE6     	movff	plusw1,postinc1
 34664  018E46  006F FF8F FFE6     	movff	plusw1,postinc1
 34665  018E4C  006F FF8F FFE6     	movff	plusw1,postinc1
 34666  018E52  EC86  F0CA         	call	___flge	;wreg free
 34667  018E56  B001               	btfsc	btemp& (0+255),0,c
 34668  018E58  D049               	goto	l2009
 34669                           
 34670                           ;mbmc.c: 185:      C.day = 0;
 34671  018E5A  0E00               	movlw	0
 34672  018E5C  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 34673                           
 34674                           ;mbmc.c: 186:      C.day_end = V.ticks;
 34675  018E62  EE20  F188         	lfsr	2,_V+129	;volatile
 34676  018E66  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 34677  018E6C  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 34678  018E72  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 34679  018E78  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 34680                           
 34681                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 34682  018E7E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34683  018E82  0E01               	movlw	1
 34684  018E84  50DB               	movf	plusw2,w,c
 34685  018E86  E136               	bnz	l2005
 34686  018E88  0E14               	movlw	20
 34687  018E8A  5CDE               	subwf	postinc2,w,c
 34688  018E8C  B0D8               	btfsc	status,0,c
 34689  018E8E  D032               	goto	l2005
 34690                           
 34691                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 34692  018E90  0E01               	movlw	1
 34693  018E92  6EE6               	movwf	postinc1,c
 34694  018E94  ECF7  F0E4         	call	_set_ac_charger_relay	;wreg free
 34695  018E98  D02D               	goto	l2005
 34696  018E9A                     l10187:
 34697                           
 34698                           ; BSR set to: 1
 34699                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 34700  018E9A  EE21  F377         	lfsr	2,_C+120	;volatile
 34701  018E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34702  018EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34703  018EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 34704  018EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 34705  018EB6  EE21  F37B         	lfsr	2,_C+124	;volatile
 34706  018EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34707  018EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34708  018EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34709  018ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 34710  018ED2  EC86  F0CA         	call	___flge	;wreg free
 34711  018ED6  B001               	btfsc	btemp& (0+255),0,c
 34712  018ED8  D009               	goto	l2009
 34713                           
 34714                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 34715  018EDA  EC0D  F0E5         	call	_get_ac_charger_relay	;wreg free
 34716  018EDE  5001               	movf	btemp^0,w,c
 34717  018EE0  A4D8               	btfss	status,2,c
 34718  018EE2  D004               	goto	l2009
 34719                           
 34720                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 34721  018EE4  0E01               	movlw	1
 34722  018EE6  6EE6               	movwf	postinc1,c
 34723  018EE8  ECF7  F0E4         	call	_set_ac_charger_relay	;wreg free
 34724  018EEC                     l2009:
 34725                           
 34726                           ;mbmc.c: 204:  if (day_delay >= 240)
 34727  018EEC  0EEF               	movlw	239
 34728  018EEE  6441               	cpfsgt	check_day_time@day_delay^0,c
 34729  018EF0  D001               	goto	l2005
 34730                           
 34731                           ;mbmc.c: 205:   day_delay = 0;
 34732  018EF2  6A41               	clrf	check_day_time@day_delay^0,c
 34733  018EF4                     l2005:
 34734                           
 34735                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34736  018EF4  52E5               	movf	postdec1,f,c
 34737  018EF6  52E5               	movf	postdec1,f,c
 34738  018EF8  52E5               	movf	postdec1,f,c
 34739  018EFA  52E5               	movf	postdec1,f,c
 34740  018EFC  0012               	return		;funcret
 34741  018EFE                     __end_of_check_day_time:
 34742                           	opt callstack 0
 34743                           
 34744 ;; *************** function _set_ac_charger_relay *****************
 34745 ;; Defined at:
 34746 ;;		line 135 in file "mbmc.c"
 34747 ;; Parameters:    Size  Location     Type
 34748 ;;  mode            1  [STACK] const _Bool 
 34749 ;; Auto vars:     Size  Location     Type
 34750 ;;		None
 34751 ;; Return value:  Size  Location     Type
 34752 ;;                  1  [STACK] void 
 34753 ;; Registers used:
 34754 ;;		wreg, fsr1l, fsr1h
 34755 ;; Tracked objects:
 34756 ;;		On entry : 0/1
 34757 ;;		On exit  : 0/0
 34758 ;;		Unchanged: 0/0
 34759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34764 ;;Total ram usage:        0 bytes
 34765 ;; Hardware stack levels used:    1
 34766 ;; Hardware stack levels required when called:    3
 34767 ;; This function calls:
 34768 ;;		Nothing
 34769 ;; This function is called by:
 34770 ;;		_check_day_time
 34771 ;; This function uses a reentrant model
 34772 ;;
 34773                           
 34774                           	psect	text155
 34775  01C9EE                     __ptext155:
 34776                           	opt callstack 0
 34777  01C9EE                     _set_ac_charger_relay:
 34778                           	opt callstack 9
 34779                           
 34780                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 34781                           ;stkvar	_mode @ sp[(0)+-1]
 34782                           
 34783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34784                           ;incstack = 0
 34785  01C9EE  0EFF               	movlw	-1
 34786  01C9F0  B0E3               	btfsc	plusw1,0,c
 34787  01C9F2  D002               	bra	u946_25
 34788  01C9F4  9CBD               	bcf	189,6,c	;volatile
 34789  01C9F6  D001               	bra	u946_26
 34790  01C9F8                     u946_25:
 34791  01C9F8  8CBD               	bsf	189,6,c	;volatile
 34792  01C9FA                     u946_26:
 34793                           
 34794                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 34795  01C9FA  52E5               	movf	postdec1,f,c
 34796  01C9FC  0012               	return		;funcret
 34797  01C9FE                     __end_of_set_ac_charger_relay:
 34798                           	opt callstack 0
 34799                           
 34800 ;; *************** function _get_ac_charger_relay *****************
 34801 ;; Defined at:
 34802 ;;		line 140 in file "mbmc.c"
 34803 ;; Parameters:    Size  Location     Type
 34804 ;;		None
 34805 ;; Auto vars:     Size  Location     Type
 34806 ;;		None
 34807 ;; Return value:  Size  Location     Type
 34808 ;;                  1  [STACK] _Bool 
 34809 ;; Registers used:
 34810 ;;		btemp
 34811 ;; Tracked objects:
 34812 ;;		On entry : 0/1
 34813 ;;		On exit  : 0/0
 34814 ;;		Unchanged: 0/0
 34815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34820 ;;Total ram usage:        0 bytes
 34821 ;; Hardware stack levels used:    1
 34822 ;; Hardware stack levels required when called:    3
 34823 ;; This function calls:
 34824 ;;		Nothing
 34825 ;; This function is called by:
 34826 ;;		_check_day_time
 34827 ;;		_calc_bsoc
 34828 ;; This function uses a reentrant model
 34829 ;;
 34830                           
 34831                           	psect	text156
 34832  01CA1A                     __ptext156:
 34833                           	opt callstack 0
 34834  01CA1A                     _get_ac_charger_relay:
 34835                           	opt callstack 10
 34836                           
 34837                           ;mbmc.c: 142:  return LATDbits.LATD6;
 34838                           
 34839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34840                           ;incstack = 0
 34841  01CA1A  ACBD               	btfss	189,6,c	;volatile
 34842  01CA1C  D003               	goto	u967_20
 34843  01CA1E  6A01               	clrf	btemp^0,c
 34844  01CA20  2A01               	incf	btemp^0,f,c
 34845  01CA22  0012               	return	
 34846  01CA24                     u967_20:
 34847  01CA24  6A01               	clrf	btemp^0,c
 34848                           
 34849                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34850  01CA26  0012               	return		;funcret
 34851  01CA28                     __end_of_get_ac_charger_relay:
 34852                           	opt callstack 0
 34853                           
 34854 ;; *************** function _TMR3_ISR *****************
 34855 ;; Defined at:
 34856 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 34857 ;; Parameters:    Size  Location     Type
 34858 ;;		None
 34859 ;; Auto vars:     Size  Location     Type
 34860 ;;		None
 34861 ;; Return value:  Size  Location     Type
 34862 ;;                  1    wreg      void 
 34863 ;; Registers used:
 34864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34865 ;; Tracked objects:
 34866 ;;		On entry : 0/0
 34867 ;;		On exit  : 3F/0
 34868 ;;		Unchanged: 0/0
 34869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34872 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34873 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34874 ;;Total ram usage:       25 bytes
 34875 ;; Hardware stack levels used:    1
 34876 ;; Hardware stack levels required when called:   14
 34877 ;; This function calls:
 34878 ;;		_TMR3_CallBack
 34879 ;;		_TMR3_WriteTimer
 34880 ;; This function is called by:
 34881 ;;		Interrupt level 1
 34882 ;; This function uses a non-reentrant model
 34883 ;;
 34884                           
 34885                           	psect	text157
 34886  019670                     __ptext157:
 34887                           	opt callstack 0
 34888  019670                     _TMR3_ISR:
 34889                           	opt callstack 2
 34890                           
 34891                           ;incstack = 0
 34892  019670  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 34893  019676  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 34894  01967C  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 34895  019682  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 34896  019688  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 34897  01968E  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 34898  019694  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 34899  01969A  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 34900  0196A0  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 34901  0196A6  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 34902  0196AC  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 34903  0196B2  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 34904  0196B8  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 34905  0196BE  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 34906  0196C4  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 34907  0196CA  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 34908  0196D0  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 34909  0196D6  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 34910  0196DC  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 34911  0196E2  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 34912  0196E8  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 34913  0196EE  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 34914  0196F4  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 34915  0196FA  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 34916  019700  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 34917  019706  EE16  F0AF         	lfsr	1,___intlo_sp
 34918                           
 34919                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 34920  01970A  0139               	movlb	57	; () banked
 34921  01970C  9DA6               	bcf	166,6,b	;volatile
 34922                           
 34923                           ; BSR set to: 57
 34924                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 34925  01970E  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 34926  019714  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 34927  01971A  EC40  F0E0         	call	_TMR3_WriteTimer	;wreg free
 34928                           
 34929                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 34930  01971E  0100               	movlb	0	; () banked
 34931  019720  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 34932  019722  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34933  019724  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34934  019726  E104               	bnz	i1u1316_20
 34935  019728  0E28               	movlw	40
 34936  01972A  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 34937  01972C  A0D8               	btfss	status,0,c
 34938  01972E  D005               	goto	i1l1207
 34939  019730                     i1u1316_20:
 34940                           
 34941                           ; BSR set to: 0
 34942                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 34943  019730  ECA4  F0E3         	call	_TMR3_CallBack	;wreg free
 34944                           
 34945                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 34946  019734  0100               	movlb	0	; () banked
 34947  019736  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 34948  019738  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 34949  01973A                     i1l1207:
 34950                           
 34951                           ; BSR set to: 0
 34952  01973A  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 34953  019740  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 34954  019746  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 34955  01974C  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 34956  019752  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 34957  019758  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 34958  01975E  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 34959  019764  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 34960  01976A  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 34961  019770  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 34962  019776  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 34963  01977C  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 34964  019782  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 34965  019788  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 34966  01978E  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 34967  019794  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 34968  01979A  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 34969  0197A0  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 34970  0197A6  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 34971  0197AC  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 34972  0197B2  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 34973  0197B8  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 34974  0197BE  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 34975  0197C4  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 34976  0197CA  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 34977  0197D0  0011               	retfie		f
 34978  0197D2                     __end_of_TMR3_ISR:
 34979                           	opt callstack 0
 34980                           
 34981 ;; *************** function _TMR3_WriteTimer *****************
 34982 ;; Defined at:
 34983 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 34984 ;; Parameters:    Size  Location     Type
 34985 ;;  timerVal        2  [STACK] unsigned short 
 34986 ;; Auto vars:     Size  Location     Type
 34987 ;;		None
 34988 ;; Return value:  Size  Location     Type
 34989 ;;                  1  [STACK] void 
 34990 ;; Registers used:
 34991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34992 ;; Tracked objects:
 34993 ;;		On entry : 3F/39
 34994 ;;		On exit  : 0/0
 34995 ;;		Unchanged: 0/0
 34996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35001 ;;Total ram usage:        0 bytes
 35002 ;; Hardware stack levels used:    1
 35003 ;; Hardware stack levels required when called:    3
 35004 ;; This function calls:
 35005 ;;		Nothing
 35006 ;; This function is called by:
 35007 ;;		_TMR3_ISR
 35008 ;; This function uses a reentrant model
 35009 ;;
 35010                           
 35011                           	psect	text158
 35012  01C080                     __ptext158:
 35013                           	opt callstack 0
 35014  01C080                     _TMR3_WriteTimer:
 35015                           	opt callstack 12
 35016                           
 35017                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 35018                           
 35019                           ; BSR set to: 0
 35020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35021                           ;incstack = 0
 35022  01C080  A4A6               	btfss	166,2,c	;volatile
 35023  01C082  D00F               	goto	l11235
 35024                           
 35025                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 35026  01C084  90A6               	bcf	166,0,c	;volatile
 35027                           
 35028                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 35029                           ;stkvar	_timerVal @ sp[(0)+-2]
 35030  01C086  0EFF               	movlw	255
 35031  01C088  24E1               	addwf	fsr1l,w,c
 35032  01C08A  6ED9               	movwf	fsr2l,c
 35033  01C08C  0EFF               	movlw	255
 35034  01C08E  20E2               	addwfc	fsr1h,w,c
 35035  01C090  6EDA               	movwf	fsr2h,c
 35036  01C092  50DF               	movf	indf2,w,c
 35037  01C094  6EA5               	movwf	165,c	;volatile
 35038                           
 35039                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 35040                           ;stkvar	_timerVal @ sp[(0)+-2]
 35041  01C096  0EFE               	movlw	-2
 35042  01C098  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35043                           
 35044                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 35045  01C09E  80A6               	bsf	166,0,c	;volatile
 35046                           
 35047                           ;mcc_generated_files/tmr3.c: 141:     }
 35048  01C0A0  D00C               	goto	l1190
 35049  01C0A2                     l11235:
 35050                           
 35051                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 35052                           ;stkvar	_timerVal @ sp[(0)+-2]
 35053  01C0A2  0EFF               	movlw	255
 35054  01C0A4  24E1               	addwf	fsr1l,w,c
 35055  01C0A6  6ED9               	movwf	fsr2l,c
 35056  01C0A8  0EFF               	movlw	255
 35057  01C0AA  20E2               	addwfc	fsr1h,w,c
 35058  01C0AC  6EDA               	movwf	fsr2h,c
 35059  01C0AE  50DF               	movf	indf2,w,c
 35060  01C0B0  6EA5               	movwf	165,c	;volatile
 35061                           
 35062                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 35063                           ;stkvar	_timerVal @ sp[(0)+-2]
 35064  01C0B2  0EFE               	movlw	-2
 35065  01C0B4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 35066  01C0BA                     l1190:
 35067                           
 35068                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35069  01C0BA  52E5               	movf	postdec1,f,c
 35070  01C0BC  52E5               	movf	postdec1,f,c
 35071  01C0BE  0012               	return		;funcret
 35072  01C0C0                     __end_of_TMR3_WriteTimer:
 35073                           	opt callstack 0
 35074                           
 35075 ;; *************** function _TMR3_CallBack *****************
 35076 ;; Defined at:
 35077 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 35078 ;; Parameters:    Size  Location     Type
 35079 ;;		None
 35080 ;; Auto vars:     Size  Location     Type
 35081 ;;		None
 35082 ;; Return value:  Size  Location     Type
 35083 ;;                  1  [STACK] void 
 35084 ;; Registers used:
 35085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35086 ;; Tracked objects:
 35087 ;;		On entry : 3F/0
 35088 ;;		On exit  : 0/0
 35089 ;;		Unchanged: 0/0
 35090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35095 ;;Total ram usage:        0 bytes
 35096 ;; Hardware stack levels used:    1
 35097 ;; Hardware stack levels required when called:   13
 35098 ;; This function calls:
 35099 ;;		Absolute function
 35100 ;;		_TMR3_DefaultInterruptHandler
 35101 ;;		_calc_bsoc
 35102 ;; This function is called by:
 35103 ;;		_TMR3_ISR
 35104 ;; This function uses a reentrant model
 35105 ;;
 35106                           
 35107                           	psect	text159
 35108  01C748                     __ptext159:
 35109                           	opt callstack 0
 35110  01C748                     _TMR3_CallBack:
 35111                           	opt callstack 2
 35112                           
 35113                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 35114                           
 35115                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35116                           ;incstack = 0
 35117  01C748  0100               	movlb	0	; () banked
 35118  01C74A  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35119  01C74C  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35120  01C74E  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35121  01C750  B4D8               	btfsc	status,2,c
 35122  01C752  0012               	return	
 35123                           
 35124                           ; BSR set to: 0
 35125                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 35126  01C754  D801               	call	u1300_28
 35127  01C756  0012               	return	
 35128  01C758                     u1300_28:
 35129  01C758  0005               	push	
 35130  01C75A  6EFA               	movwf	pclath,c
 35131  01C75C  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 35132  01C75E  6EFD               	movwf	tosl,c
 35133  01C760  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 35134  01C762  6EFE               	movwf	tosh,c
 35135  01C764  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 35136  01C766  6EFF               	movwf	tosu,c
 35137  01C768  50FA               	movf	pclath,w,c
 35138  01C76A  0012               	return		;indir
 35139  01C76C                     __end_of_TMR3_CallBack:
 35140                           	opt callstack 0
 35141                           
 35142 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 35143 ;; Defined at:
 35144 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 35145 ;; Parameters:    Size  Location     Type
 35146 ;;		None
 35147 ;; Auto vars:     Size  Location     Type
 35148 ;;		None
 35149 ;; Return value:  Size  Location     Type
 35150 ;;                  1  [STACK] void 
 35151 ;; Registers used:
 35152 ;;		None
 35153 ;; Tracked objects:
 35154 ;;		On entry : 3F/0
 35155 ;;		On exit  : 0/0
 35156 ;;		Unchanged: 0/0
 35157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35162 ;;Total ram usage:        0 bytes
 35163 ;; Hardware stack levels used:    1
 35164 ;; Hardware stack levels required when called:    3
 35165 ;; This function calls:
 35166 ;;		Nothing
 35167 ;; This function is called by:
 35168 ;;		_TMR3_Initialize
 35169 ;;		_TMR3_CallBack
 35170 ;; This function uses a reentrant model
 35171 ;;
 35172                           
 35173                           	psect	text160
 35174  01CAC8                     __ptext160:
 35175                           	opt callstack 0
 35176  01CAC8                     _TMR3_DefaultInterruptHandler:
 35177                           	opt callstack 11
 35178                           
 35179                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35180                           
 35181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35182                           ;incstack = 0
 35183  01CAC8  0012               	return		;funcret
 35184  01CACA                     __end_of_TMR3_DefaultInterruptHandler:
 35185                           	opt callstack 0
 35186                           
 35187 ;; *************** function _calc_bsoc *****************
 35188 ;; Defined at:
 35189 ;;		line 39 in file "bsoc.c"
 35190 ;; Parameters:    Size  Location     Type
 35191 ;;		None
 35192 ;; Auto vars:     Size  Location     Type
 35193 ;;  adj             4  [STACK] float 
 35194 ;;  log_ptr         2  [STACK] PTR unsigned char 
 35195 ;;		 -> port_data(512), 
 35196 ;; Return value:  Size  Location     Type
 35197 ;;                  1  [STACK] void 
 35198 ;; Registers used:
 35199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 35200 ;; Tracked objects:
 35201 ;;		On entry : 3F/0
 35202 ;;		On exit  : 5/1
 35203 ;;		Unchanged: 0/0
 35204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35209 ;;Total ram usage:        0 bytes
 35210 ;; Hardware stack levels used:    1
 35211 ;; Hardware stack levels required when called:   12
 35212 ;; This function calls:
 35213 ;;		_StartTimer
 35214 ;;		___asfladd
 35215 ;;		___fldiv
 35216 ;;		___flge
 35217 ;;		___flmul
 35218 ;;		___flneg
 35219 ;;		___fltol
 35220 ;;		_fabsf
 35221 ;;		_get_ac_charger_relay
 35222 ;;		_port_data_dma_ptr
 35223 ;;		_send_port_data_dma
 35224 ;;		_sprintf
 35225 ;;		_strlen
 35226 ;; This function is called by:
 35227 ;;		_init_bsoc
 35228 ;;		_TMR3_CallBack
 35229 ;; This function uses a reentrant model
 35230 ;;
 35231                           
 35232                           	psect	text161
 35233  0133D2                     __ptext161:
 35234                           	opt callstack 0
 35235  0133D2                     _calc_bsoc:
 35236                           	opt callstack 0
 35237                           
 35238                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35239  0133D2  0E06               	movlw	6
 35240  0133D4  26E1               	addwf	fsr1l,f,c
 35241  0133D6  0E00               	movlw	0
 35242  0133D8  22E2               	addwfc	fsr1h,f,c
 35243                           
 35244                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 35245                           
 35246                           ;incstack = 0
 35247  0133DA  0E00               	movlw	0
 35248  0133DC  6E09               	movwf	(btemp+8)^0,c
 35249  0133DE  0E00               	movlw	0
 35250  0133E0  6E0A               	movwf	(btemp+9)^0,c
 35251  0133E2  0E80               	movlw	128
 35252  0133E4  6E0B               	movwf	(btemp+10)^0,c
 35253  0133E6  0E3F               	movlw	63
 35254  0133E8  6E0C               	movwf	(btemp+11)^0,c
 35255                           
 35256                           ;stkvar	_adj @ sp[(-6)+0]
 35257  0133EA  0EFA               	movlw	-6
 35258  0133EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 35259  0133F2  0EFB               	movlw	-5
 35260  0133F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35261  0133FA  0EFC               	movlw	-4
 35262  0133FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35263  013402  0EFD               	movlw	-3
 35264  013404  0060  F033  FFE3   	movff	btemp+11,plusw1
 35265  01340A  82BE               	bsf	190,1,c	;volatile
 35266                           
 35267                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 35268  01340C  0E00               	movlw	0
 35269  01340E  6EE6               	movwf	postinc1,c
 35270  013410  0E00               	movlw	0
 35271  013412  6EE6               	movwf	postinc1,c
 35272  013414  0E61               	movlw	97
 35273  013416  6EE6               	movwf	postinc1,c
 35274  013418  0E45               	movlw	69
 35275  01341A  6EE6               	movwf	postinc1,c
 35276  01341C  EE21  F343         	lfsr	2,_C+68	;volatile
 35277  013420  006F FF7B FFE6     	movff	postinc2,postinc1
 35278  013426  006F FF7B FFE6     	movff	postinc2,postinc1
 35279  01342C  006F FF7B FFE6     	movff	postinc2,postinc1
 35280  013432  006F FF7B FFE6     	movff	postinc2,postinc1
 35281  013438  EC13  F0A7         	call	___fldiv	;wreg free
 35282  01343C  0060  F007  FFE6   	movff	btemp,postinc1
 35283  013442  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35284  013448  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35285  01344E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35286  013454  0E8F               	movlw	low (_C+144)
 35287  013456  6EE6               	movwf	postinc1,c
 35288  013458  0E07               	movlw	high (_C+144)
 35289  01345A  6EE6               	movwf	postinc1,c
 35290  01345C  EC1E  F0DB         	call	___asfladd	;wreg free
 35291                           
 35292                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 35293  013460  EE21  F38F         	lfsr	2,_C+144	;volatile
 35294  013464  006F FF7B FFE6     	movff	postinc2,postinc1
 35295  01346A  006F FF7B FFE6     	movff	postinc2,postinc1
 35296  013470  006F FF7B FFE6     	movff	postinc2,postinc1
 35297  013476  006F FF7B FFE6     	movff	postinc2,postinc1
 35298  01347C  EE21  F38B         	lfsr	2,_C+140	;volatile
 35299  013480  006F FF7B FFE6     	movff	postinc2,postinc1
 35300  013486  006F FF7B FFE6     	movff	postinc2,postinc1
 35301  01348C  006F FF7B FFE6     	movff	postinc2,postinc1
 35302  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 35303  013498  EC86  F0CA         	call	___flge	;wreg free
 35304  01349C  B001               	btfsc	btemp& (0+255),0,c
 35305  01349E  D00E               	goto	l13395
 35306                           
 35307                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 35308  0134A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35309  0134A4  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 35310  0134AA  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 35311  0134B0  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 35312  0134B6  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 35313  0134BC                     l13395:
 35314                           
 35315                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 35316  0134BC  0ECD               	movlw	205
 35317  0134BE  6EE6               	movwf	postinc1,c
 35318  0134C0  0ECC               	movlw	204
 35319  0134C2  6EE6               	movwf	postinc1,c
 35320  0134C4  0ECC               	movlw	204
 35321  0134C6  6EE6               	movwf	postinc1,c
 35322  0134C8  0E3D               	movlw	61
 35323  0134CA  6EE6               	movwf	postinc1,c
 35324  0134CC  EE21  F38F         	lfsr	2,_C+144	;volatile
 35325  0134D0  006F FF7B FFE6     	movff	postinc2,postinc1
 35326  0134D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35327  0134DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35328  0134E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35329  0134E8  EC86  F0CA         	call	___flge	;wreg free
 35330  0134EC  B001               	btfsc	btemp& (0+255),0,c
 35331  0134EE  D010               	goto	l13399
 35332                           
 35333                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 35334  0134F0  0ECD               	movlw	205
 35335  0134F2  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 35336  0134F8  0ECC               	movlw	204
 35337  0134FA  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 35338  013500  0ECC               	movlw	204
 35339  013502  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 35340  013508  0E3D               	movlw	61
 35341  01350A  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 35342  013510                     l13399:
 35343                           
 35344                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 35345  013510  EE21  F343         	lfsr	2,_C+68	;volatile
 35346  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 35347  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 35348  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 35349  013526  006F FF7B FFE6     	movff	postinc2,postinc1
 35350  01352C  0E0A               	movlw	10
 35351  01352E  6EE6               	movwf	postinc1,c
 35352  013530  0ED7               	movlw	215
 35353  013532  6EE6               	movwf	postinc1,c
 35354  013534  0E23               	movlw	35
 35355  013536  6EE6               	movwf	postinc1,c
 35356  013538  0E3C               	movlw	60
 35357  01353A  6EE6               	movwf	postinc1,c
 35358  01353C  EC86  F0CA         	call	___flge	;wreg free
 35359  013540  B001               	btfsc	btemp& (0+255),0,c
 35360  013542  D01C               	goto	l13403
 35361                           
 35362                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 35363  013544  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 35364  01354A  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 35365  013550  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 35366  013556  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 35367                           
 35368                           ;stkvar	_adj @ sp[(-6)+0]
 35369  01355C  0EFA               	movlw	-6
 35370  01355E  0060  F027  FFE3   	movff	btemp+8,plusw1
 35371  013564  0EFB               	movlw	-5
 35372  013566  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35373  01356C  0EFC               	movlw	-4
 35374  01356E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35375  013574  0EFD               	movlw	-3
 35376  013576  0060  F033  FFE3   	movff	btemp+11,plusw1
 35377  01357C                     l13403:
 35378                           
 35379                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 35380  01357C  0E0A               	movlw	10
 35381  01357E  6EE6               	movwf	postinc1,c
 35382  013580  0ED7               	movlw	215
 35383  013582  6EE6               	movwf	postinc1,c
 35384  013584  0E23               	movlw	35
 35385  013586  6EE6               	movwf	postinc1,c
 35386  013588  0E3C               	movlw	60
 35387  01358A  6EE6               	movwf	postinc1,c
 35388  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 35389  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 35390  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 35391  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 35392  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 35393  0135A8  EC86  F0CA         	call	___flge	;wreg free
 35394  0135AC  B001               	btfsc	btemp& (0+255),0,c
 35395  0135AE  D01C               	goto	l13407
 35396                           
 35397                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 35398  0135B0  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 35399  0135B6  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 35400  0135BC  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 35401  0135C2  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 35402                           
 35403                           ;stkvar	_adj @ sp[(-6)+0]
 35404  0135C8  0EFA               	movlw	-6
 35405  0135CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 35406  0135D0  0EFB               	movlw	-5
 35407  0135D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35408  0135D8  0EFC               	movlw	-4
 35409  0135DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35410  0135E0  0EFD               	movlw	-3
 35411  0135E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 35412  0135E8                     l13407:
 35413                           
 35414                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 35415  0135E8  0E00               	movlw	0
 35416  0135EA  6EE6               	movwf	postinc1,c
 35417  0135EC  0E00               	movlw	0
 35418  0135EE  6EE6               	movwf	postinc1,c
 35419  0135F0  0E61               	movlw	97
 35420  0135F2  6EE6               	movwf	postinc1,c
 35421  0135F4  0E45               	movlw	69
 35422  0135F6  6EE6               	movwf	postinc1,c
 35423                           
 35424                           ;stkvar	_adj @ sp[(-10)+0]
 35425  0135F8  0EF6               	movlw	-10
 35426  0135FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35427  013600  006F FF8F FFE6     	movff	plusw1,postinc1
 35428  013606  006F FF8F FFE6     	movff	plusw1,postinc1
 35429  01360C  006F FF8F FFE6     	movff	plusw1,postinc1
 35430  013612  EE21  F343         	lfsr	2,_C+68	;volatile
 35431  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 35432  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 35433  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 35434  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 35435  01362E  EC20  F09F         	call	___flmul	;wreg free
 35436  013632  0060  F007  FFE6   	movff	btemp,postinc1
 35437  013638  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35438  01363E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35439  013644  0060  F013  FFE6   	movff	btemp+3,postinc1
 35440  01364A  EC13  F0A7         	call	___fldiv	;wreg free
 35441  01364E  0060  F007  FFE6   	movff	btemp,postinc1
 35442  013654  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35443  01365A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35444  013660  0060  F013  FFE6   	movff	btemp+3,postinc1
 35445  013666  0E8F               	movlw	low (_C+144)
 35446  013668  6EE6               	movwf	postinc1,c
 35447  01366A  0E07               	movlw	high (_C+144)
 35448  01366C  6EE6               	movwf	postinc1,c
 35449  01366E  EC1E  F0DB         	call	___asfladd	;wreg free
 35450                           
 35451                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 35452  013672  EE21  F38F         	lfsr	2,_C+144	;volatile
 35453  013676  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35454  01367C  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35455  013682  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35456  013688  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35457                           
 35458                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 35459  01368E  EE21  F39B         	lfsr	2,_C+156	;volatile
 35460  013692  006F FF7B FFE6     	movff	postinc2,postinc1
 35461  013698  006F FF7B FFE6     	movff	postinc2,postinc1
 35462  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
 35463  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35464  0136AA  EE21  F38B         	lfsr	2,_C+140	;volatile
 35465  0136AE  006F FF7B FFE6     	movff	postinc2,postinc1
 35466  0136B4  006F FF7B FFE6     	movff	postinc2,postinc1
 35467  0136BA  006F FF7B FFE6     	movff	postinc2,postinc1
 35468  0136C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35469  0136C6  EC86  F0CA         	call	___flge	;wreg free
 35470  0136CA  B001               	btfsc	btemp& (0+255),0,c
 35471  0136CC  D00E               	goto	l13415
 35472                           
 35473                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 35474  0136CE  EE21  F38B         	lfsr	2,_C+140	;volatile
 35475  0136D2  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 35476  0136D8  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 35477  0136DE  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 35478  0136E4  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 35479  0136EA                     l13415:
 35480                           
 35481                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 35482  0136EA  0ECD               	movlw	205
 35483  0136EC  6EE6               	movwf	postinc1,c
 35484  0136EE  0ECC               	movlw	204
 35485  0136F0  6EE6               	movwf	postinc1,c
 35486  0136F2  0ECC               	movlw	204
 35487  0136F4  6EE6               	movwf	postinc1,c
 35488  0136F6  0E3D               	movlw	61
 35489  0136F8  6EE6               	movwf	postinc1,c
 35490  0136FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 35491  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 35492  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 35493  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 35494  013710  006F FF7B FFE6     	movff	postinc2,postinc1
 35495  013716  EC86  F0CA         	call	___flge	;wreg free
 35496  01371A  B001               	btfsc	btemp& (0+255),0,c
 35497  01371C  D010               	goto	l13419
 35498                           
 35499                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 35500  01371E  0ECD               	movlw	205
 35501  013720  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 35502  013726  0ECC               	movlw	204
 35503  013728  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 35504  01372E  0ECC               	movlw	204
 35505  013730  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 35506  013736  0E3D               	movlw	61
 35507  013738  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 35508  01373E                     l13419:
 35509                           
 35510                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 35511  01373E  0E00               	movlw	0
 35512  013740  6EE6               	movwf	postinc1,c
 35513  013742  0E00               	movlw	0
 35514  013744  6EE6               	movwf	postinc1,c
 35515  013746  0E61               	movlw	97
 35516  013748  6EE6               	movwf	postinc1,c
 35517  01374A  0E45               	movlw	69
 35518  01374C  6EE6               	movwf	postinc1,c
 35519  01374E  EE21  F347         	lfsr	2,_C+72	;volatile
 35520  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 35521  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 35522  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 35523  013764  006F FF7B FFE6     	movff	postinc2,postinc1
 35524  01376A  EC13  F0A7         	call	___fldiv	;wreg free
 35525  01376E  0060  F007  FFE6   	movff	btemp,postinc1
 35526  013774  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35527  01377A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35528  013780  0060  F013  FFE6   	movff	btemp+3,postinc1
 35529  013786  0E93               	movlw	low (_C+148)
 35530  013788  6EE6               	movwf	postinc1,c
 35531  01378A  0E07               	movlw	high (_C+148)
 35532  01378C  6EE6               	movwf	postinc1,c
 35533  01378E  EC1E  F0DB         	call	___asfladd	;wreg free
 35534                           
 35535                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 35536  013792  0E00               	movlw	0
 35537  013794  6EE6               	movwf	postinc1,c
 35538  013796  0E00               	movlw	0
 35539  013798  6EE6               	movwf	postinc1,c
 35540  01379A  0E61               	movlw	97
 35541  01379C  6EE6               	movwf	postinc1,c
 35542  01379E  0E45               	movlw	69
 35543  0137A0  6EE6               	movwf	postinc1,c
 35544  0137A2  EE21  F37B         	lfsr	2,_C+124	;volatile
 35545  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35546  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35547  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35548  0137B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35549  0137BE  EC13  F0A7         	call	___fldiv	;wreg free
 35550  0137C2  0060  F007  FFE6   	movff	btemp,postinc1
 35551  0137C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35552  0137CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35553  0137D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 35554  0137DA  0EA7               	movlw	low (_C+168)
 35555  0137DC  6EE6               	movwf	postinc1,c
 35556  0137DE  0E07               	movlw	high (_C+168)
 35557  0137E0  6EE6               	movwf	postinc1,c
 35558  0137E2  EC1E  F0DB         	call	___asfladd	;wreg free
 35559                           
 35560                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 35561  0137E6  0E00               	movlw	0
 35562  0137E8  6EE6               	movwf	postinc1,c
 35563  0137EA  0E00               	movlw	0
 35564  0137EC  6EE6               	movwf	postinc1,c
 35565  0137EE  0E61               	movlw	97
 35566  0137F0  6EE6               	movwf	postinc1,c
 35567  0137F2  0E45               	movlw	69
 35568  0137F4  6EE6               	movwf	postinc1,c
 35569  0137F6  EE21  F377         	lfsr	2,_C+120	;volatile
 35570  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 35571  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 35572  013806  006F FF7B FFE6     	movff	postinc2,postinc1
 35573  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 35574  013812  EC13  F0A7         	call	___fldiv	;wreg free
 35575  013816  0060  F007  FFE6   	movff	btemp,postinc1
 35576  01381C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35577  013822  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35578  013828  0060  F013  FFE6   	movff	btemp+3,postinc1
 35579  01382E  0EAB               	movlw	low (_C+172)
 35580  013830  6EE6               	movwf	postinc1,c
 35581  013832  0E07               	movlw	high (_C+172)
 35582  013834  6EE6               	movwf	postinc1,c
 35583  013836  EC1E  F0DB         	call	___asfladd	;wreg free
 35584                           
 35585                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 35586  01383A  0E00               	movlw	0
 35587  01383C  6EE6               	movwf	postinc1,c
 35588  01383E  0E00               	movlw	0
 35589  013840  6EE6               	movwf	postinc1,c
 35590  013842  0E61               	movlw	97
 35591  013844  6EE6               	movwf	postinc1,c
 35592  013846  0E45               	movlw	69
 35593  013848  6EE6               	movwf	postinc1,c
 35594  01384A  EE21  F373         	lfsr	2,_C+116	;volatile
 35595  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 35596  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 35597  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 35598  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 35599  013866  EC13  F0A7         	call	___fldiv	;wreg free
 35600  01386A  0060  F007  FFE6   	movff	btemp,postinc1
 35601  013870  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35602  013876  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35603  01387C  0060  F013  FFE6   	movff	btemp+3,postinc1
 35604  013882  0EAF               	movlw	low (_C+176)
 35605  013884  6EE6               	movwf	postinc1,c
 35606  013886  0E07               	movlw	high (_C+176)
 35607  013888  6EE6               	movwf	postinc1,c
 35608  01388A  EC1E  F0DB         	call	___asfladd	;wreg free
 35609                           
 35610                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 35611  01388E  EE21  F37F         	lfsr	2,_C+128	;volatile
 35612  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 35613  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 35614  01389E  006F FF7B FFE6     	movff	postinc2,postinc1
 35615  0138A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35616  0138AA  0E00               	movlw	0
 35617  0138AC  6EE6               	movwf	postinc1,c
 35618  0138AE  0E00               	movlw	0
 35619  0138B0  6EE6               	movwf	postinc1,c
 35620  0138B2  0E00               	movlw	0
 35621  0138B4  6EE6               	movwf	postinc1,c
 35622  0138B6  0E00               	movlw	0
 35623  0138B8  6EE6               	movwf	postinc1,c
 35624  0138BA  EC86  F0CA         	call	___flge	;wreg free
 35625  0138BE  B001               	btfsc	btemp& (0+255),0,c
 35626  0138C0  D02A               	goto	l13425
 35627                           
 35628                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 35629  0138C2  0E00               	movlw	0
 35630  0138C4  6EE6               	movwf	postinc1,c
 35631  0138C6  0E00               	movlw	0
 35632  0138C8  6EE6               	movwf	postinc1,c
 35633  0138CA  0E61               	movlw	97
 35634  0138CC  6EE6               	movwf	postinc1,c
 35635  0138CE  0E45               	movlw	69
 35636  0138D0  6EE6               	movwf	postinc1,c
 35637  0138D2  EE21  F37F         	lfsr	2,_C+128	;volatile
 35638  0138D6  006F FF7B FFE6     	movff	postinc2,postinc1
 35639  0138DC  006F FF7B FFE6     	movff	postinc2,postinc1
 35640  0138E2  006F FF7B FFE6     	movff	postinc2,postinc1
 35641  0138E8  006F FF7B FFE6     	movff	postinc2,postinc1
 35642  0138EE  EC13  F0A7         	call	___fldiv	;wreg free
 35643  0138F2  0060  F007  FFE6   	movff	btemp,postinc1
 35644  0138F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35645  0138FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35646  013904  0060  F013  FFE6   	movff	btemp+3,postinc1
 35647  01390A  0E9F               	movlw	low (_C+160)
 35648  01390C  6EE6               	movwf	postinc1,c
 35649  01390E  0E07               	movlw	high (_C+160)
 35650  013910  6EE6               	movwf	postinc1,c
 35651  013912  EC1E  F0DB         	call	___asfladd	;wreg free
 35652  013916                     l13425:
 35653                           
 35654                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 35655  013916  EE21  F37F         	lfsr	2,_C+128	;volatile
 35656  01391A  0E03               	movlw	3
 35657  01391C  AEDB               	btfss	plusw2,7,c
 35658  01391E  D038               	goto	l13429
 35659                           
 35660                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 35661  013920  0E00               	movlw	0
 35662  013922  6EE6               	movwf	postinc1,c
 35663  013924  0E00               	movlw	0
 35664  013926  6EE6               	movwf	postinc1,c
 35665  013928  0E61               	movlw	97
 35666  01392A  6EE6               	movwf	postinc1,c
 35667  01392C  0E45               	movlw	69
 35668  01392E  6EE6               	movwf	postinc1,c
 35669  013930  EE21  F37F         	lfsr	2,_C+128	;volatile
 35670  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 35671  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 35672  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 35673  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 35674  01394C  EC13  F0A7         	call	___fldiv	;wreg free
 35675  013950  0060  F007  FFE6   	movff	btemp,postinc1
 35676  013956  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35677  01395C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35678  013962  0060  F013  FFE6   	movff	btemp+3,postinc1
 35679  013968  ECC2  F0D6         	call	_fabsf	;wreg free
 35680  01396C  0060  F007  FFE6   	movff	btemp,postinc1
 35681  013972  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35682  013978  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35683  01397E  0060  F013  FFE6   	movff	btemp+3,postinc1
 35684  013984  0EA3               	movlw	low (_C+164)
 35685  013986  6EE6               	movwf	postinc1,c
 35686  013988  0E07               	movlw	high (_C+164)
 35687  01398A  6EE6               	movwf	postinc1,c
 35688  01398C  EC1E  F0DB         	call	___asfladd	;wreg free
 35689  013990                     l13429:
 35690                           
 35691                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 35692  013990  0E00               	movlw	0
 35693  013992  6EE6               	movwf	postinc1,c
 35694  013994  0E00               	movlw	0
 35695  013996  6EE6               	movwf	postinc1,c
 35696  013998  0EC8               	movlw	200
 35697  01399A  6EE6               	movwf	postinc1,c
 35698  01399C  0E42               	movlw	66
 35699  01399E  6EE6               	movwf	postinc1,c
 35700  0139A0  EE21  F38B         	lfsr	2,_C+140	;volatile
 35701  0139A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35702  0139AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35703  0139B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35704  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35705  0139BC  EE21  F39B         	lfsr	2,_C+156	;volatile
 35706  0139C0  006F FF7B FFE6     	movff	postinc2,postinc1
 35707  0139C6  006F FF7B FFE6     	movff	postinc2,postinc1
 35708  0139CC  006F FF7B FFE6     	movff	postinc2,postinc1
 35709  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 35710  0139D8  EC13  F0A7         	call	___fldiv	;wreg free
 35711  0139DC  0060  F007  FFE6   	movff	btemp,postinc1
 35712  0139E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35713  0139E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35714  0139EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35715  0139F4  EC20  F09F         	call	___flmul	;wreg free
 35716  0139F8  0060  F007  FFE6   	movff	btemp,postinc1
 35717  0139FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35718  013A04  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35719  013A0A  0060  F013  FFE6   	movff	btemp+3,postinc1
 35720  013A10  ECCD  F0C9         	call	___fltol	;wreg free
 35721  013A14  0060  F004  F00B   	movff	btemp,btemp+10
 35722  013A1A  0060  F008  F00C   	movff	btemp+1,btemp+11
 35723  013A20  0E01               	movlw	1
 35724  013A22  260B               	addwf	(btemp+10)^0,f,c
 35725  013A24  0E00               	movlw	0
 35726  013A26  220C               	addwfc	(btemp+11)^0,f,c
 35727  013A28  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 35728  013A2E  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 35729                           
 35730                           ;bsoc.c: 76:  if (C.soc > 100)
 35731  013A34  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35732  013A38  0E01               	movlw	1
 35733  013A3A  50DB               	movf	plusw2,w,c
 35734  013A3C  E104               	bnz	u1293_20
 35735  013A3E  0E65               	movlw	101
 35736  013A40  5CDE               	subwf	postinc2,w,c
 35737  013A42  A0D8               	btfss	status,0,c
 35738  013A44  D008               	goto	l13435
 35739  013A46                     u1293_20:
 35740                           
 35741                           ;bsoc.c: 77:   C.soc = 100;
 35742  013A46  0E64               	movlw	100
 35743  013A48  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 35744  013A4E  0E00               	movlw	0
 35745  013A50  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 35746  013A56                     l13435:
 35747                           
 35748                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 35749  013A56  EE21  F343         	lfsr	2,_C+68	;volatile
 35750  013A5A  0E03               	movlw	3
 35751  013A5C  AEDB               	btfss	plusw2,7,c
 35752  013A5E  D047               	goto	l2154
 35753                           
 35754                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 35755  013A60  EE21  F343         	lfsr	2,_C+68	;volatile
 35756  013A64  006F FF7B FFE6     	movff	postinc2,postinc1
 35757  013A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35758  013A70  006F FF7B FFE6     	movff	postinc2,postinc1
 35759  013A76  006F FF7B FFE6     	movff	postinc2,postinc1
 35760  013A7C  EE21  F39B         	lfsr	2,_C+156	;volatile
 35761  013A80  006F FF7B FFE6     	movff	postinc2,postinc1
 35762  013A86  006F FF7B FFE6     	movff	postinc2,postinc1
 35763  013A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35764  013A92  006F FF7B FFE6     	movff	postinc2,postinc1
 35765  013A98  EC13  F0A7         	call	___fldiv	;wreg free
 35766  013A9C  0060  F007  FFE6   	movff	btemp,postinc1
 35767  013AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35768  013AA8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35769  013AAE  0060  F013  FFE6   	movff	btemp+3,postinc1
 35770  013AB4  ECA7  F0DE         	call	___flneg	;wreg free
 35771  013AB8  0060  F007  FFE6   	movff	btemp,postinc1
 35772  013ABE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35773  013AC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 35774  013ACA  0060  F013  FFE6   	movff	btemp+3,postinc1
 35775  013AD0  ECCD  F0C9         	call	___fltol	;wreg free
 35776  013AD4  0060  F004  F00B   	movff	btemp,btemp+10
 35777  013ADA  0060  F008  F00C   	movff	btemp+1,btemp+11
 35778  013AE0  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 35779  013AE6  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 35780                           
 35781                           ;bsoc.c: 81:  } else {
 35782  013AEC  D008               	goto	l13439
 35783  013AEE                     l2154:
 35784                           
 35785                           ;bsoc.c: 82:   C.runtime = 99;
 35786  013AEE  0E63               	movlw	99
 35787  013AF0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35788  013AF6  0E00               	movlw	0
 35789  013AF8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35790  013AFE                     l13439:
 35791                           
 35792                           ;bsoc.c: 84:  if (C.runtime > 99)
 35793  013AFE  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35794  013B02  0E01               	movlw	1
 35795  013B04  50DB               	movf	plusw2,w,c
 35796  013B06  E104               	bnz	u1295_20
 35797  013B08  0E64               	movlw	100
 35798  013B0A  5CDE               	subwf	postinc2,w,c
 35799  013B0C  A0D8               	btfss	status,0,c
 35800  013B0E  D008               	goto	l13443
 35801  013B10                     u1295_20:
 35802                           
 35803                           ;bsoc.c: 85:   C.runtime = 99;
 35804  013B10  0E63               	movlw	99
 35805  013B12  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 35806  013B18  0E00               	movlw	0
 35807  013B1A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 35808  013B20                     l13443:
 35809                           
 35810                           ;bsoc.c: 87:  V.lowint_count++;
 35811  013B20  0E01               	movlw	1
 35812  013B22  0101               	movlb	1	; () banked
 35813  013B24  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 35814  013B26  0E00               	movlw	0
 35815  013B28  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 35816  013B2A  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 35817  013B2C  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 35818                           
 35819                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 35820  013B2E  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 35821  013B30  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 35822  013B32  A4D8               	btfss	status,2,c
 35823  013B34  D177               	goto	l13455
 35824                           
 35825                           ; BSR set to: 1
 35826  013B36  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35827  013B38  B4D8               	btfsc	status,2,c
 35828  013B3A  D174               	goto	l13455
 35829                           
 35830                           ; BSR set to: 1
 35831                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 35832  013B3C  EC28  F0E5         	call	_port_data_dma_ptr	;wreg free
 35833                           
 35834                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35835  013B40  0EFF               	movlw	-1
 35836  013B42  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35837  013B48  0EFE               	movlw	-2
 35838  013B4A  0060  F007  FFE3   	movff	btemp,plusw1
 35839                           
 35840                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 35841  013B50  EE21  F3B9         	lfsr	2,_C+186	;volatile
 35842  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 35843  013B5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35844  013B60  006F FF7B FFE6     	movff	postinc2,postinc1
 35845  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 35846  013B6C  EE21  F3BD         	lfsr	2,_C+190	;volatile
 35847  013B70  006F FF7B FFE6     	movff	postinc2,postinc1
 35848  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 35849  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 35850  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 35851  013B88  EE21  F39B         	lfsr	2,_C+156	;volatile
 35852  013B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35853  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 35854  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 35855  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 35856  013BA4  EE22  F026         	lfsr	2,_C+295	;volatile
 35857  013BA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35858  013BAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35859  013BB4  006F FF7B FFE6     	movff	postinc2,postinc1
 35860  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 35861  013BC0  EE22  F022         	lfsr	2,_C+291	;volatile
 35862  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 35863  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 35864  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 35865  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 35866  013BDC  EE22  F021         	lfsr	2,_C+290	;volatile
 35867  013BE0  50DF               	movf	indf2,w,c
 35868  013BE2  6EE6               	movwf	postinc1,c
 35869  013BE4  0E00               	movlw	0
 35870  013BE6  6EE6               	movwf	postinc1,c
 35871  013BE8  EC0D  F0E5         	call	_get_ac_charger_relay	;wreg free
 35872  013BEC  5001               	movf	btemp^0,w,c
 35873  013BEE  6EE6               	movwf	postinc1,c
 35874  013BF0  0E00               	movlw	0
 35875  013BF2  6EE6               	movwf	postinc1,c
 35876  013BF4  EE21  F367         	lfsr	2,_C+104	;volatile
 35877  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 35878  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 35879  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 35880  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 35881  013C10  EE21  F387         	lfsr	2,_C+136	;volatile
 35882  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 35883  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 35884  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 35885  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 35886  013C2C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 35887  013C30  006F FF78  F00B    	movff	postinc2,btemp+10
 35888  013C36  006F FF74  F00C    	movff	postdec2,btemp+11
 35889  013C3C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35890  013C42  0060  F033  FFE6   	movff	btemp+11,postinc1
 35891  013C48  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35892  013C4C  006F FF78  F00B    	movff	postinc2,btemp+10
 35893  013C52  006F FF74  F00C    	movff	postdec2,btemp+11
 35894  013C58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 35895  013C5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 35896  013C64  EE21  F393         	lfsr	2,_C+148	;volatile
 35897  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 35898  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 35899  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 35900  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 35901  013C80  EE21  F38F         	lfsr	2,_C+144	;volatile
 35902  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 35903  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 35904  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 35905  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 35906  013C9C  EE21  F377         	lfsr	2,_C+120	;volatile
 35907  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 35908  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 35909  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 35910  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 35911  013CB8  EE21  F373         	lfsr	2,_C+116	;volatile
 35912  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 35913  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 35914  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 35915  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 35916  013CD4  EE21  F37B         	lfsr	2,_C+124	;volatile
 35917  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 35918  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 35919  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 35920  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 35921  013CF0  EE21  F37F         	lfsr	2,_C+128	;volatile
 35922  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 35923  013CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 35924  013D00  006F FF7B FFE6     	movff	postinc2,postinc1
 35925  013D06  006F FF7B FFE6     	movff	postinc2,postinc1
 35926  013D0C  EE21  F347         	lfsr	2,_C+72	;volatile
 35927  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 35928  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 35929  013D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 35930  013D22  006F FF7B FFE6     	movff	postinc2,postinc1
 35931  013D28  EE21  F343         	lfsr	2,_C+68	;volatile
 35932  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 35933  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 35934  013D38  006F FF7B FFE6     	movff	postinc2,postinc1
 35935  013D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 35936  013D44  EE21  F363         	lfsr	2,_C+100	;volatile
 35937  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 35938  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 35939  013D54  006F FF7B FFE6     	movff	postinc2,postinc1
 35940  013D5A  006F FF7B FFE6     	movff	postinc2,postinc1
 35941  013D60  EE21  F34B         	lfsr	2,_C+76	;volatile
 35942  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 35943  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 35944  013D70  006F FF7B FFE6     	movff	postinc2,postinc1
 35945  013D76  006F FF7B FFE6     	movff	postinc2,postinc1
 35946  013D7C  EE21  F34F         	lfsr	2,_C+80	;volatile
 35947  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 35948  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 35949  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 35950  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 35951  013D98  EE21  F353         	lfsr	2,_C+84	;volatile
 35952  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 35953  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 35954  013DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 35955  013DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 35956  013DB4  0060  F623  FFE6   	movff	_V+129,postinc1
 35957  013DBA  0060  F627  FFE6   	movff	_V+130,postinc1
 35958  013DC0  0060  F62B  FFE6   	movff	_V+131,postinc1
 35959  013DC6  0060  F62F  FFE6   	movff	_V+132,postinc1
 35960  013DCC  0E32               	movlw	50
 35961  013DCE  6EE6               	movwf	postinc1,c
 35962  013DD0  0E00               	movlw	0
 35963  013DD2  6EE6               	movwf	postinc1,c
 35964  013DD4  0E23               	movlw	low STR_75
 35965  013DD6  6EE6               	movwf	postinc1,c
 35966  013DD8  0EFB               	movlw	high STR_75
 35967  013DDA  6EE6               	movwf	postinc1,c
 35968                           
 35969                           ;stkvar	_log_ptr @ sp[(-98)+4]
 35970  013DDC  0EA2               	movlw	-94
 35971  013DDE  006F FF8F FFE6     	movff	plusw1,postinc1
 35972  013DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 35973  013DEA  0E5E               	movlw	94
 35974  013DEC  6EE6               	movwf	postinc1,c
 35975  013DEE  ECC0  F0D1         	call	_sprintf	;wreg free
 35976                           
 35977                           ; BSR set to: 0
 35978                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 35979  013DF2  0E7D               	movlw	125
 35980  013DF4  6EE6               	movwf	postinc1,c
 35981  013DF6  0E00               	movlw	0
 35982  013DF8  6EE6               	movwf	postinc1,c
 35983  013DFA  0E0A               	movlw	10
 35984  013DFC  6EE6               	movwf	postinc1,c
 35985  013DFE  EC00  F0E0         	call	_StartTimer	;wreg free
 35986                           
 35987                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 35988                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35989  013E02  0EFE               	movlw	-2
 35990  013E04  006F FF8F FFE6     	movff	plusw1,postinc1
 35991  013E0A  006F FF8F FFE6     	movff	plusw1,postinc1
 35992  013E10  EC6B  F0D8         	call	_strlen	;wreg free
 35993  013E14  0060  F007  FFE6   	movff	btemp,postinc1
 35994  013E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35995  013E20  EC0D  F0DE         	call	_send_port_data_dma	;wreg free
 35996  013E24                     l13455:
 35997                           
 35998                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 35999  013E24  0E09               	movlw	9
 36000  013E26  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 36001  013E28  D001               	goto	l2158
 36002                           
 36003                           ;bsoc.c: 102:   log_update_wait = 0;
 36004  013E2A  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 36005  013E2C                     l2158:
 36006                           
 36007                           ;bsoc.c: 104:  C.update = 0;
 36008  013E2C  0E00               	movlw	0
 36009  013E2E  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 36010                           
 36011                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 36012  013E34  92BE               	bcf	190,1,c	;volatile
 36013                           
 36014                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 36015  013E36  0EFA               	movlw	250
 36016  013E38  26E1               	addwf	fsr1l,f,c
 36017  013E3A  0EFF               	movlw	255
 36018  013E3C  22E2               	addwfc	fsr1h,f,c
 36019  013E3E  0012               	return		;funcret
 36020  013E40                     __end_of_calc_bsoc:
 36021                           	opt callstack 0
 36022                           
 36023 ;; *************** function _send_port_data_dma *****************
 36024 ;; Defined at:
 36025 ;;		line 398 in file "eadog.c"
 36026 ;; Parameters:    Size  Location     Type
 36027 ;;  dsize           2  [STACK] unsigned short 
 36028 ;; Auto vars:     Size  Location     Type
 36029 ;;		None
 36030 ;; Return value:  Size  Location     Type
 36031 ;;                  1  [STACK] void 
 36032 ;; Registers used:
 36033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36034 ;; Tracked objects:
 36035 ;;		On entry : 0/0
 36036 ;;		On exit  : 3F/3B
 36037 ;;		Unchanged: 0/0
 36038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36043 ;;Total ram usage:        0 bytes
 36044 ;; Hardware stack levels used:    1
 36045 ;; Hardware stack levels required when called:    3
 36046 ;; This function calls:
 36047 ;;		Nothing
 36048 ;; This function is called by:
 36049 ;;		_calc_bsoc
 36050 ;; This function uses a reentrant model
 36051 ;;
 36052                           
 36053                           	psect	text162
 36054  01BC1A                     __ptext162:
 36055                           	opt callstack 0
 36056  01BC1A                     _send_port_data_dma:
 36057                           	opt callstack 10
 36058                           
 36059                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 36060                           ;stkvar	_dsize @ sp[(0)+-2]
 36061                           
 36062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36063                           ;incstack = 0
 36064  01BC1A  0EFE               	movlw	-2
 36065  01BC1C  04E3               	decf	plusw1,w,c
 36066  01BC1E  0EFF               	movlw	-1
 36067  01BC20  006F FF8C  F001    	movff	plusw1,btemp
 36068  01BC26  0E02               	movlw	2
 36069  01BC28  5A01               	subwfb	btemp^0,f,c
 36070  01BC2A  A0D8               	btfss	status,0,c
 36071  01BC2C  D00C               	goto	l10297
 36072                           
 36073                           ;eadog.c: 401:   dsize = 512;
 36074  01BC2E  0E00               	movlw	0
 36075  01BC30  6E0B               	movwf	(btemp+10)^0,c
 36076  01BC32  0E02               	movlw	2
 36077  01BC34  6E0C               	movwf	(btemp+11)^0,c
 36078                           
 36079                           ;stkvar	_dsize @ sp[(0)+-2]
 36080  01BC36  0EFE               	movlw	-2
 36081  01BC38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36082  01BC3E  0EFF               	movlw	-1
 36083  01BC40  0060  F033  FFE3   	movff	btemp+11,plusw1
 36084  01BC46                     l10297:
 36085                           
 36086                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 36087  01BC46  013B               	movlb	59	; () banked
 36088  01BC48  9FDC               	bcf	220,7,b	;volatile
 36089                           
 36090                           ; BSR set to: 59
 36091                           ;eadog.c: 404:  DMA2SSZ = dsize;
 36092                           ;stkvar	_dsize @ sp[(0)+-2]
 36093  01BC4A  0EFE               	movlw	-2
 36094  01BC4C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 36095  01BC52  0EFF               	movlw	-1
 36096  01BC54  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 36097                           
 36098                           ; BSR set to: 59
 36099                           ;eadog.c: 405:  DMA2DSZ = 1;
 36100  01BC5A  0E00               	movlw	0
 36101  01BC5C  6FCF               	movwf	207,b	;volatile
 36102  01BC5E  0E01               	movlw	1
 36103  01BC60  6FCE               	movwf	206,b	;volatile
 36104                           
 36105                           ; BSR set to: 59
 36106                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 36107  01BC62  8FDC               	bsf	220,7,b	;volatile
 36108                           
 36109                           ; BSR set to: 59
 36110                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 36111  01BC64  8DDC               	bsf	220,6,b	;volatile
 36112                           
 36113                           ; BSR set to: 59
 36114                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36115  01BC66  52E5               	movf	postdec1,f,c
 36116  01BC68  52E5               	movf	postdec1,f,c
 36117  01BC6A  0012               	return		;funcret
 36118  01BC6C                     __end_of_send_port_data_dma:
 36119                           	opt callstack 0
 36120                           
 36121 ;; *************** function _port_data_dma_ptr *****************
 36122 ;; Defined at:
 36123 ;;		line 413 in file "eadog.c"
 36124 ;; Parameters:    Size  Location     Type
 36125 ;;		None
 36126 ;; Auto vars:     Size  Location     Type
 36127 ;;		None
 36128 ;; Return value:  Size  Location     Type
 36129 ;;                  2  [STACK] PTR unsigned char 
 36130 ;; Registers used:
 36131 ;;		wreg, status,2, status,0, btemp, btemp+1
 36132 ;; Tracked objects:
 36133 ;;		On entry : 3F/1
 36134 ;;		On exit  : 0/0
 36135 ;;		Unchanged: 0/0
 36136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36141 ;;Total ram usage:        0 bytes
 36142 ;; Hardware stack levels used:    1
 36143 ;; Hardware stack levels required when called:    3
 36144 ;; This function calls:
 36145 ;;		Nothing
 36146 ;; This function is called by:
 36147 ;;		_calc_bsoc
 36148 ;; This function uses a reentrant model
 36149 ;;
 36150                           
 36151                           	psect	text163
 36152  01CA50                     __ptext163:
 36153                           	opt callstack 0
 36154  01CA50                     _port_data_dma_ptr:
 36155                           	opt callstack 10
 36156                           
 36157                           ;eadog.c: 415:  return port_data;
 36158                           
 36159                           ; BSR set to: 59
 36160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36161                           ;incstack = 0
 36162  01CA50  0EFF               	movlw	low _port_data
 36163  01CA52  6E01               	movwf	btemp^0,c
 36164  01CA54  0E04               	movlw	high _port_data
 36165  01CA56  6E02               	movwf	(btemp+1)^0,c
 36166                           
 36167                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36168  01CA58  0012               	return		;funcret
 36169  01CA5A                     __end_of_port_data_dma_ptr:
 36170                           	opt callstack 0
 36171                           
 36172 ;; *************** function ___asfladd *****************
 36173 ;; Defined at:
 36174 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 36175 ;; Parameters:    Size  Location     Type
 36176 ;;  f1p             2  [STACK] PTR 
 36177 ;;		 -> C(299), 
 36178 ;;  f2              4  [STACK] PTR 
 36179 ;; Auto vars:     Size  Location     Type
 36180 ;;		None
 36181 ;; Return value:  Size  Location     Type
 36182 ;;                  4  [STACK] PTR 
 36183 ;; Registers used:
 36184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 36185 ;; Tracked objects:
 36186 ;;		On entry : 0/0
 36187 ;;		On exit  : 0/0
 36188 ;;		Unchanged: 0/0
 36189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36194 ;;Total ram usage:        0 bytes
 36195 ;; Hardware stack levels used:    1
 36196 ;; Hardware stack levels required when called:    4
 36197 ;; This function calls:
 36198 ;;		___fladd
 36199 ;; This function is called by:
 36200 ;;		_calc_bsoc
 36201 ;; This function uses a reentrant model
 36202 ;;
 36203                           
 36204                           	psect	text164
 36205  01B63C                     __ptext164:
 36206                           	opt callstack 0
 36207  01B63C                     ___asfladd:
 36208                           	opt callstack 9
 36209                           
 36210                           ;	Return value of ___asfladd is never used
 36211                           ;stkvar	_f2 @ sp[(0)+-6]
 36212                           
 36213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36214                           ;incstack = 0
 36215  01B63C  0EFA               	movlw	-6
 36216  01B63E  006F FF8F FFE6     	movff	plusw1,postinc1
 36217  01B644  006F FF8F FFE6     	movff	plusw1,postinc1
 36218  01B64A  006F FF8F FFE6     	movff	plusw1,postinc1
 36219  01B650  006F FF8F FFE6     	movff	plusw1,postinc1
 36220                           
 36221                           ;stkvar	_f1p @ sp[(-4)+-2]
 36222  01B656  0EFA               	movlw	-6
 36223  01B658  006F FF8F FFD9     	movff	plusw1,fsr2l
 36224  01B65E  0EFB               	movlw	-5
 36225  01B660  006F FF8F FFDA     	movff	plusw1,fsr2h
 36226  01B666  006F FF7B FFE6     	movff	postinc2,postinc1
 36227  01B66C  006F FF7B FFE6     	movff	postinc2,postinc1
 36228  01B672  006F FF7B FFE6     	movff	postinc2,postinc1
 36229  01B678  006F FF7B FFE6     	movff	postinc2,postinc1
 36230  01B67E  EC35  F0A3         	call	___fladd	;wreg free
 36231                           
 36232                           ;stkvar	_f1p @ sp[(0)+-2]
 36233  01B682  0EFE               	movlw	-2
 36234  01B684  006F FF8F FFD9     	movff	plusw1,fsr2l
 36235  01B68A  0EFF               	movlw	-1
 36236  01B68C  006F FF8F FFDA     	movff	plusw1,fsr2h
 36237  01B692  0060  F007  FFDE   	movff	btemp,postinc2
 36238  01B698  0060  F00B  FFDE   	movff	btemp+1,postinc2
 36239  01B69E  0060  F00F  FFDE   	movff	btemp+2,postinc2
 36240  01B6A4  0060  F013  FFDE   	movff	btemp+3,postinc2
 36241                           
 36242                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 36243  01B6AA  0EFA               	movlw	250
 36244  01B6AC  26E1               	addwf	fsr1l,f,c
 36245  01B6AE  0EFF               	movlw	255
 36246  01B6B0  22E2               	addwfc	fsr1h,f,c
 36247  01B6B2  0012               	return		;funcret
 36248  01B6B4                     __end_of___asfladd:
 36249                           	opt callstack 0
 36250                           
 36251 ;; *************** function _INT0_ISR *****************
 36252 ;; Defined at:
 36253 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 36254 ;; Parameters:    Size  Location     Type
 36255 ;;		None
 36256 ;; Auto vars:     Size  Location     Type
 36257 ;;		None
 36258 ;; Return value:  Size  Location     Type
 36259 ;;                  1    wreg      void 
 36260 ;; Registers used:
 36261 ;;		wreg, status,2, status,0, pclath, tosl
 36262 ;; Tracked objects:
 36263 ;;		On entry : 0/0
 36264 ;;		On exit  : 0/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36271 ;;Total ram usage:        0 bytes
 36272 ;; Hardware stack levels used:    1
 36273 ;; Hardware stack levels required when called:    2
 36274 ;; This function calls:
 36275 ;;		_INT0_CallBack
 36276 ;; This function is called by:
 36277 ;;		Interrupt level 2
 36278 ;; This function uses a non-reentrant model
 36279 ;;
 36280                           
 36281                           	psect	text165
 36282  01CA28                     __ptext165:
 36283                           	opt callstack 0
 36284  01CA28                     _INT0_ISR:
 36285                           	opt callstack 2
 36286                           
 36287                           ;incstack = 0
 36288  01CA28  EE14  F15E         	lfsr	1,___inthi_sp
 36289                           
 36290                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 36291  01CA2C  0139               	movlb	57	; () banked
 36292  01CA2E  91A1               	bcf	161,0,b	;volatile
 36293                           
 36294                           ; BSR set to: 57
 36295                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 36296  01CA30  ECB6  F0E3         	call	_INT0_CallBack	;wreg free
 36297  01CA34  0011               	retfie		f
 36298  01CA36                     __end_of_INT0_ISR:
 36299                           	opt callstack 0
 36300                           
 36301 ;; *************** function _INT0_CallBack *****************
 36302 ;; Defined at:
 36303 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 36304 ;; Parameters:    Size  Location     Type
 36305 ;;		None
 36306 ;; Auto vars:     Size  Location     Type
 36307 ;;		None
 36308 ;; Return value:  Size  Location     Type
 36309 ;;                  1  [STACK] void 
 36310 ;; Registers used:
 36311 ;;		wreg, status,2, status,0, pclath, tosl
 36312 ;; Tracked objects:
 36313 ;;		On entry : 3F/39
 36314 ;;		On exit  : 0/0
 36315 ;;		Unchanged: 0/0
 36316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36321 ;;Total ram usage:        0 bytes
 36322 ;; Hardware stack levels used:    1
 36323 ;; Hardware stack levels required when called:    1
 36324 ;; This function calls:
 36325 ;;		Absolute function
 36326 ;;		_INT0_DefaultInterruptHandler
 36327 ;; This function is called by:
 36328 ;;		_INT0_ISR
 36329 ;; This function uses a reentrant model
 36330 ;;
 36331                           
 36332                           	psect	text166
 36333  01C76C                     __ptext166:
 36334                           	opt callstack 0
 36335  01C76C                     _INT0_CallBack:
 36336                           	opt callstack 2
 36337                           
 36338                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 36339                           
 36340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36341                           ;incstack = 0
 36342  01C76C  0100               	movlb	0	; () banked
 36343  01C76E  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36344  01C770  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36345  01C772  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36346  01C774  B4D8               	btfsc	status,2,c
 36347  01C776  0012               	return	
 36348                           
 36349                           ; BSR set to: 0
 36350                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 36351  01C778  D801               	call	u1035_48
 36352  01C77A  0012               	return	
 36353  01C77C                     u1035_48:
 36354  01C77C  0005               	push	
 36355  01C77E  6EFA               	movwf	pclath,c
 36356  01C780  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 36357  01C782  6EFD               	movwf	tosl,c
 36358  01C784  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36359  01C786  6EFE               	movwf	tosh,c
 36360  01C788  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36361  01C78A  6EFF               	movwf	tosu,c
 36362  01C78C  50FA               	movf	pclath,w,c
 36363  01C78E  0012               	return		;indir
 36364  01C790                     __end_of_INT0_CallBack:
 36365                           	opt callstack 0
 36366                           
 36367 ;; *************** function _INT0_DefaultInterruptHandler *****************
 36368 ;; Defined at:
 36369 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 36370 ;; Parameters:    Size  Location     Type
 36371 ;;		None
 36372 ;; Auto vars:     Size  Location     Type
 36373 ;;		None
 36374 ;; Return value:  Size  Location     Type
 36375 ;;                  1  [STACK] void 
 36376 ;; Registers used:
 36377 ;;		None
 36378 ;; Tracked objects:
 36379 ;;		On entry : 3F/0
 36380 ;;		On exit  : 0/0
 36381 ;;		Unchanged: 0/0
 36382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36387 ;;Total ram usage:        0 bytes
 36388 ;; Hardware stack levels used:    1
 36389 ;; This function calls:
 36390 ;;		Nothing
 36391 ;; This function is called by:
 36392 ;;		_EXT_INT_Initialize
 36393 ;;		_INT0_CallBack
 36394 ;; This function uses a reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text167
 36398  01CACA                     __ptext167:
 36399                           	opt callstack 0
 36400  01CACA                     _INT0_DefaultInterruptHandler:
 36401                           	opt callstack 2
 36402                           
 36403                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36404                           
 36405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36406                           ;incstack = 0
 36407  01CACA  0012               	return		;funcret
 36408  01CACC                     __end_of_INT0_DefaultInterruptHandler:
 36409                           	opt callstack 0
 36410                           
 36411 ;; *************** function _Default_ISR *****************
 36412 ;; Defined at:
 36413 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 36414 ;; Parameters:    Size  Location     Type
 36415 ;;		None
 36416 ;; Auto vars:     Size  Location     Type
 36417 ;;		None
 36418 ;; Return value:  Size  Location     Type
 36419 ;;                  1    wreg      void 
 36420 ;; Registers used:
 36421 ;;		None
 36422 ;; Tracked objects:
 36423 ;;		On entry : 0/0
 36424 ;;		On exit  : 0/0
 36425 ;;		Unchanged: 0/0
 36426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36431 ;;Total ram usage:        0 bytes
 36432 ;; Hardware stack levels used:    1
 36433 ;; This function calls:
 36434 ;;		Nothing
 36435 ;; This function is called by:
 36436 ;;		Interrupt level 2
 36437 ;; This function uses a non-reentrant model
 36438 ;;
 36439                           
 36440                           	psect	text168
 36441  01CAC0                     __ptext168:
 36442                           	opt callstack 0
 36443  01CAC0                     _Default_ISR:
 36444                           	opt callstack 4
 36445                           
 36446                           ;incstack = 0
 36447  01CAC0  EE14  F15E         	lfsr	1,___inthi_sp
 36448  01CAC4  0011               	retfie		f
 36449  01CAC6                     __end_of_Default_ISR:
 36450                           	opt callstack 0
 36451                           
 36452 ;; *************** function _ADCC_ISR *****************
 36453 ;; Defined at:
 36454 ;;		line 314 in file "mcc_generated_files/adcc.c"
 36455 ;; Parameters:    Size  Location     Type
 36456 ;;		None
 36457 ;; Auto vars:     Size  Location     Type
 36458 ;;		None
 36459 ;; Return value:  Size  Location     Type
 36460 ;;                  1    wreg      void 
 36461 ;; Registers used:
 36462 ;;		wreg, status,2, status,0, pclath, tosl
 36463 ;; Tracked objects:
 36464 ;;		On entry : 0/0
 36465 ;;		On exit  : 0/0
 36466 ;;		Unchanged: 0/0
 36467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36472 ;;Total ram usage:        0 bytes
 36473 ;; Hardware stack levels used:    1
 36474 ;; Hardware stack levels required when called:    1
 36475 ;; This function calls:
 36476 ;;		Absolute function
 36477 ;;		_ADCC_DefaultInterruptHandler
 36478 ;;		_adc_int_handler
 36479 ;; This function is called by:
 36480 ;;		Interrupt level 2
 36481 ;; This function uses a non-reentrant model
 36482 ;;
 36483                           
 36484                           	psect	text169
 36485  01C400                     __ptext169:
 36486                           	opt callstack 0
 36487  01C400                     _ADCC_ISR:
 36488                           	opt callstack 3
 36489                           
 36490                           ;incstack = 0
 36491  01C400  EE14  F15E         	lfsr	1,___inthi_sp
 36492                           
 36493                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 36494  01C404  0139               	movlb	57	; () banked
 36495  01C406  95A1               	bcf	161,2,b	;volatile
 36496                           
 36497                           ; BSR set to: 57
 36498                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 36499  01C408  0100               	movlb	0	; () banked
 36500  01C40A  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36501  01C40C  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36502  01C40E  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36503  01C410  B4D8               	btfsc	status,2,c
 36504  01C412  0011               	retfie		f
 36505                           
 36506                           ; BSR set to: 0
 36507                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 36508  01C414  D801               	call	i2u1080_48
 36509  01C416  0011               	retfie		f
 36510  01C418                     i2u1080_48:
 36511  01C418  0005               	push	
 36512  01C41A  6EFA               	movwf	pclath,c
 36513  01C41C  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 36514  01C41E  6EFD               	movwf	tosl,c
 36515  01C420  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 36516  01C422  6EFE               	movwf	tosh,c
 36517  01C424  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 36518  01C426  6EFF               	movwf	tosu,c
 36519  01C428  50FA               	movf	pclath,w,c
 36520  01C42A  0012               	return		;indir
 36521  01C42C                     __end_of_ADCC_ISR:
 36522                           	opt callstack 0
 36523                           
 36524 ;; *************** function _adc_int_t_handler *****************
 36525 ;; Defined at:
 36526 ;;		line 171 in file "daq.c"
 36527 ;; Parameters:    Size  Location     Type
 36528 ;;		None
 36529 ;; Auto vars:     Size  Location     Type
 36530 ;;		None
 36531 ;; Return value:  Size  Location     Type
 36532 ;;                  1  [STACK] void 
 36533 ;; Registers used:
 36534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 36535 ;; Tracked objects:
 36536 ;;		On entry : 3F/0
 36537 ;;		On exit  : 1/0
 36538 ;;		Unchanged: 0/0
 36539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36544 ;;Total ram usage:        0 bytes
 36545 ;; Hardware stack levels used:    1
 36546 ;; Hardware stack levels required when called:    1
 36547 ;; This function calls:
 36548 ;;		_ADCC_DischargeSampleCapacitor
 36549 ;;		_ADCC_StartConversion
 36550 ;; This function is called by:
 36551 ;;		_start_adc_scan
 36552 ;;		_ADCC_ThresholdISR
 36553 ;; This function uses a reentrant model
 36554 ;;
 36555                           
 36556                           	psect	text170
 36557  01B544                     __ptext170:
 36558                           	opt callstack 0
 36559  01B544                     _adc_int_t_handler:
 36560                           	opt callstack 2
 36561                           
 36562                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 36563                           
 36564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36565                           ;incstack = 0
 36566  01B544  013E               	movlb	62	; () banked
 36567  01B546  51E6               	movf	230,w,b	;volatile
 36568  01B548  006F FB9C  F001    	movff	16103,btemp	;volatile
 36569  01B54E  6A02               	clrf	(btemp+1)^0,c
 36570  01B550  0060  F004  F002   	movff	btemp,btemp+1
 36571  01B556  6A01               	clrf	btemp^0,c
 36572  01B558  2601               	addwf	btemp^0,f,c
 36573  01B55A  0E00               	movlw	0
 36574  01B55C  2202               	addwfc	(btemp+1)^0,f,c
 36575  01B55E  0100               	movlb	0	; () banked
 36576  01B560  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36577  01B562  0D02               	mullw	2
 36578  01B564  50F3               	movf	243,w,c
 36579  01B566  0FAF               	addlw	low _R
 36580  01B568  6ED9               	movwf	fsr2l,c
 36581  01B56A  6ADA               	clrf	fsr2h,c
 36582  01B56C  0060  F007  FFDE   	movff	btemp,postinc2
 36583  01B572  0060  F00B  FFDD   	movff	btemp+1,postdec2
 36584  01B578                     l11685:
 36585                           
 36586                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 36587  01B578  0100               	movlb	0	; () banked
 36588  01B57A  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 36589  01B57C  0E0D               	movlw	13
 36590  01B57E  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 36591  01B580  D003               	goto	l11691
 36592                           
 36593                           ; BSR set to: 0
 36594                           ;daq.c: 179:    R.done = 1;
 36595  01B582  0E01               	movlw	1
 36596  01B584  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 36597  01B586  0012               	return	
 36598  01B588                     l11691:
 36599                           
 36600                           ; BSR set to: 0
 36601                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 36602  01B588  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 36603  01B58E  EE20  F0E2         	lfsr	2,_R+51	;volatile
 36604  01B592  006F FF78  F009    	movff	postinc2,btemp+8
 36605  01B598  006F FF74  F00A    	movff	postdec2,btemp+9
 36606  01B59E  2A0C               	incf	(btemp+11)^0,f,c
 36607  01B5A0  D003               	goto	u1077_44
 36608  01B5A2                     u1077_45:
 36609  01B5A2  90D8               	bcf	status,0,c
 36610  01B5A4  320A               	rrcf	(btemp+9)^0,f,c
 36611  01B5A6  3209               	rrcf	(btemp+8)^0,f,c
 36612  01B5A8                     u1077_44:
 36613  01B5A8  2E0C               	decfsz	(btemp+11)^0,f,c
 36614  01B5AA  D7FB               	goto	u1077_45
 36615  01B5AC  A009               	btfss	(btemp+8)^0,0,c
 36616  01B5AE  D7E4               	goto	l11685
 36617                           
 36618                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 36619  01B5B0  EC3F  F0E5         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 36620                           
 36621                           ; BSR set to: 62
 36622                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 36623  01B5B4  0100               	movlb	0	; () banked
 36624  01B5B6  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 36625  01B5B8  0B0F               	andlw	15
 36626  01B5BA  6EE6               	movwf	postinc1,c
 36627  01B5BC  ECD6  F0E4         	call	_ADCC_StartConversion	;wreg free
 36628                           
 36629                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36630  01B5C0  0012               	return		;funcret
 36631  01B5C2                     __end_of_adc_int_t_handler:
 36632                           	opt callstack 0
 36633                           
 36634 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 36635 ;; Defined at:
 36636 ;;		line 339 in file "mcc_generated_files/adcc.c"
 36637 ;; Parameters:    Size  Location     Type
 36638 ;;		None
 36639 ;; Auto vars:     Size  Location     Type
 36640 ;;		None
 36641 ;; Return value:  Size  Location     Type
 36642 ;;                  1  [STACK] void 
 36643 ;; Registers used:
 36644 ;;		None
 36645 ;; Tracked objects:
 36646 ;;		On entry : 3F/0
 36647 ;;		On exit  : 0/0
 36648 ;;		Unchanged: 0/0
 36649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36654 ;;Total ram usage:        0 bytes
 36655 ;; Hardware stack levels used:    1
 36656 ;; This function calls:
 36657 ;;		Nothing
 36658 ;; This function is called by:
 36659 ;;		_ADCC_Initialize
 36660 ;;		_ADCC_ISR
 36661 ;;		_ADCC_ThresholdISR
 36662 ;; This function uses a reentrant model
 36663 ;;
 36664                           
 36665                           	psect	text171
 36666  01CACC                     __ptext171:
 36667                           	opt callstack 0
 36668  01CACC                     _ADCC_DefaultInterruptHandler:
 36669                           	opt callstack 3
 36670                           
 36671                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36672                           
 36673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36674                           ;incstack = 0
 36675  01CACC  0012               	return		;funcret
 36676  01CACE                     __end_of_ADCC_DefaultInterruptHandler:
 36677                           	opt callstack 0
 36678                           
 36679 ;; *************** function _adc_int_handler *****************
 36680 ;; Defined at:
 36681 ;;		line 161 in file "daq.c"
 36682 ;; Parameters:    Size  Location     Type
 36683 ;;		None
 36684 ;; Auto vars:     Size  Location     Type
 36685 ;;		None
 36686 ;; Return value:  Size  Location     Type
 36687 ;;                  1  [STACK] void 
 36688 ;; Registers used:
 36689 ;;		None
 36690 ;; Tracked objects:
 36691 ;;		On entry : 3F/0
 36692 ;;		On exit  : 0/0
 36693 ;;		Unchanged: 0/0
 36694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36699 ;;Total ram usage:        0 bytes
 36700 ;; Hardware stack levels used:    1
 36701 ;; This function calls:
 36702 ;;		Nothing
 36703 ;; This function is called by:
 36704 ;;		_start_adc_scan
 36705 ;;		_ADCC_ISR
 36706 ;; This function uses a reentrant model
 36707 ;;
 36708                           
 36709                           	psect	text172
 36710  01CACE                     __ptext172:
 36711                           	opt callstack 0
 36712  01CACE                     _adc_int_handler:
 36713                           	opt callstack 3
 36714                           
 36715                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 36716                           
 36717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36718                           ;incstack = 0
 36719  01CACE  0012               	return		;funcret
 36720  01CAD0                     __end_of_adc_int_handler:
 36721                           	opt callstack 0
 36722                           
 36723 ;; *************** function _ADCC_ThresholdISR *****************
 36724 ;; Defined at:
 36725 ;;		line 327 in file "mcc_generated_files/adcc.c"
 36726 ;; Parameters:    Size  Location     Type
 36727 ;;		None
 36728 ;; Auto vars:     Size  Location     Type
 36729 ;;		None
 36730 ;; Return value:  Size  Location     Type
 36731 ;;                  1    wreg      void 
 36732 ;; Registers used:
 36733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 36734 ;; Tracked objects:
 36735 ;;		On entry : 0/0
 36736 ;;		On exit  : 0/0
 36737 ;;		Unchanged: 0/0
 36738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36741 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36743 ;;Total ram usage:        5 bytes
 36744 ;; Hardware stack levels used:    1
 36745 ;; Hardware stack levels required when called:    2
 36746 ;; This function calls:
 36747 ;;		Absolute function
 36748 ;;		_ADCC_DefaultInterruptHandler
 36749 ;;		_adc_int_t_handler
 36750 ;; This function is called by:
 36751 ;;		Interrupt level 2
 36752 ;; This function uses a non-reentrant model
 36753 ;;
 36754                           
 36755                           	psect	text173
 36756  01B7FC                     __ptext173:
 36757                           	opt callstack 0
 36758  01B7FC                     _ADCC_ThresholdISR:
 36759                           	opt callstack 2
 36760                           
 36761                           ;incstack = 0
 36762  01B7FC  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 36763  01B802  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 36764  01B808  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 36765  01B80E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 36766  01B814  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 36767  01B81A  EE14  F15E         	lfsr	1,___inthi_sp
 36768                           
 36769                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 36770  01B81E  0139               	movlb	57	; () banked
 36771  01B820  97A1               	bcf	161,3,b	;volatile
 36772                           
 36773                           ; BSR set to: 57
 36774                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 36775  01B822  0100               	movlb	0	; () banked
 36776  01B824  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36777  01B826  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36778  01B828  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36779  01B82A  B4D8               	btfsc	status,2,c
 36780  01B82C  D00C               	goto	i2u1082_49
 36781                           
 36782                           ; BSR set to: 0
 36783                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 36784  01B82E  D801               	call	i2u1082_48
 36785  01B830  D00A               	goto	i2u1082_49
 36786  01B832                     i2u1082_48:
 36787  01B832  0005               	push	
 36788  01B834  6EFA               	movwf	pclath,c
 36789  01B836  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 36790  01B838  6EFD               	movwf	tosl,c
 36791  01B83A  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 36792  01B83C  6EFE               	movwf	tosh,c
 36793  01B83E  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 36794  01B840  6EFF               	movwf	tosu,c
 36795  01B842  50FA               	movf	pclath,w,c
 36796  01B844  0012               	return		;indir
 36797  01B846                     i2u1082_49:
 36798  01B846  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 36799  01B84C  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 36800  01B852  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 36801  01B858  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 36802  01B85E  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 36803  01B864  0011               	retfie		f
 36804  01B866                     __end_of_ADCC_ThresholdISR:
 36805                           	opt callstack 0
 36806                           
 36807 ;; *************** function _UART1_rx_vect_isr *****************
 36808 ;; Defined at:
 36809 ;;		line 181 in file "mcc_generated_files/uart1.c"
 36810 ;; Parameters:    Size  Location     Type
 36811 ;;		None
 36812 ;; Auto vars:     Size  Location     Type
 36813 ;;		None
 36814 ;; Return value:  Size  Location     Type
 36815 ;;                  1    wreg      void 
 36816 ;; Registers used:
 36817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36818 ;; Tracked objects:
 36819 ;;		On entry : 0/0
 36820 ;;		On exit  : 0/0
 36821 ;;		Unchanged: 0/0
 36822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36827 ;;Total ram usage:        0 bytes
 36828 ;; Hardware stack levels used:    1
 36829 ;; Hardware stack levels required when called:    1
 36830 ;; This function calls:
 36831 ;;		Absolute function
 36832 ;;		_UART1_Receive_ISR
 36833 ;; This function is called by:
 36834 ;;		Interrupt level 2
 36835 ;; This function uses a non-reentrant model
 36836 ;;
 36837                           
 36838                           	psect	text174
 36839  01C664                     __ptext174:
 36840                           	opt callstack 0
 36841  01C664                     _UART1_rx_vect_isr:
 36842                           	opt callstack 3
 36843                           
 36844                           ;incstack = 0
 36845  01C664  EE14  F15E         	lfsr	1,___inthi_sp
 36846                           
 36847                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 36848  01C668  0100               	movlb	0	; () banked
 36849  01C66A  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36850  01C66C  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36851  01C66E  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36852  01C670  B4D8               	btfsc	status,2,c
 36853  01C672  0011               	retfie		f
 36854                           
 36855                           ; BSR set to: 0
 36856                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 36857  01C674  D801               	call	i2u1084_48
 36858  01C676  0011               	retfie		f
 36859  01C678                     i2u1084_48:
 36860  01C678  0005               	push	
 36861  01C67A  6EFA               	movwf	pclath,c
 36862  01C67C  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 36863  01C67E  6EFD               	movwf	tosl,c
 36864  01C680  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 36865  01C682  6EFE               	movwf	tosh,c
 36866  01C684  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 36867  01C686  6EFF               	movwf	tosu,c
 36868  01C688  50FA               	movf	pclath,w,c
 36869  01C68A  0012               	return		;indir
 36870  01C68C                     __end_of_UART1_rx_vect_isr:
 36871                           	opt callstack 0
 36872                           
 36873 ;; *************** function _UART1_Receive_ISR *****************
 36874 ;; Defined at:
 36875 ;;		line 192 in file "mcc_generated_files/uart1.c"
 36876 ;; Parameters:    Size  Location     Type
 36877 ;;		None
 36878 ;; Auto vars:     Size  Location     Type
 36879 ;;		None
 36880 ;; Return value:  Size  Location     Type
 36881 ;;                  1  [STACK] void 
 36882 ;; Registers used:
 36883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36884 ;; Tracked objects:
 36885 ;;		On entry : 3F/0
 36886 ;;		On exit  : 3F/0
 36887 ;;		Unchanged: 0/0
 36888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36893 ;;Total ram usage:        0 bytes
 36894 ;; Hardware stack levels used:    1
 36895 ;; This function calls:
 36896 ;;		Nothing
 36897 ;; This function is called by:
 36898 ;;		_UART1_Initialize
 36899 ;;		_UART1_rx_vect_isr
 36900 ;; This function uses a reentrant model
 36901 ;;
 36902                           
 36903                           	psect	text175
 36904  01C7F8                     __ptext175:
 36905                           	opt callstack 0
 36906  01C7F8                     _UART1_Receive_ISR:
 36907                           	opt callstack 3
 36908                           
 36909                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 36910                           
 36911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36912                           ;incstack = 0
 36913  01C7F8  0EDC               	movlw	low _uart1RxBuffer
 36914  01C7FA  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 36915  01C7FC  6ED9               	movwf	fsr2l,c
 36916  01C7FE  6ADA               	clrf	fsr2h,c
 36917  01C800  0E01               	movlw	high _uart1RxBuffer
 36918  01C802  22DA               	addwfc	fsr2h,f,c
 36919  01C804  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 36920  01C80A  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 36921                           
 36922                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 36923  01C80C  0E07               	movlw	7
 36924  01C80E  6447               	cpfsgt	_uart1RxHead^0,c
 36925  01C810  D001               	goto	l11179
 36926                           
 36927                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 36928  01C812  6A47               	clrf	_uart1RxHead^0,c	;volatile
 36929  01C814                     l11179:
 36930                           
 36931                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 36932  01C814  0100               	movlb	0	; () banked
 36933  01C816  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 36934                           
 36935                           ; BSR set to: 0
 36936                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36937  01C818  0012               	return		;funcret
 36938  01C81A                     __end_of_UART1_Receive_ISR:
 36939                           	opt callstack 0
 36940                           
 36941 ;; *************** function _UART2_tx_vect_isr *****************
 36942 ;; Defined at:
 36943 ;;		line 195 in file "mcc_generated_files/uart2.c"
 36944 ;; Parameters:    Size  Location     Type
 36945 ;;		None
 36946 ;; Auto vars:     Size  Location     Type
 36947 ;;		None
 36948 ;; Return value:  Size  Location     Type
 36949 ;;                  1    wreg      void 
 36950 ;; Registers used:
 36951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36952 ;; Tracked objects:
 36953 ;;		On entry : 0/0
 36954 ;;		On exit  : 0/0
 36955 ;;		Unchanged: 0/0
 36956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36961 ;;Total ram usage:        0 bytes
 36962 ;; Hardware stack levels used:    1
 36963 ;; Hardware stack levels required when called:    1
 36964 ;; This function calls:
 36965 ;;		Absolute function
 36966 ;;		_UART2_Transmit_ISR
 36967 ;; This function is called by:
 36968 ;;		Interrupt level 2
 36969 ;; This function uses a non-reentrant model
 36970 ;;
 36971                           
 36972                           	psect	text176
 36973  01C68C                     __ptext176:
 36974                           	opt callstack 0
 36975  01C68C                     _UART2_tx_vect_isr:
 36976                           	opt callstack 3
 36977                           
 36978                           ; BSR set to: 0
 36979                           ;incstack = 0
 36980  01C68C  EE14  F15E         	lfsr	1,___inthi_sp
 36981                           
 36982                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 36983  01C690  0100               	movlb	0	; () banked
 36984  01C692  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36985  01C694  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36986  01C696  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36987  01C698  B4D8               	btfsc	status,2,c
 36988  01C69A  0011               	retfie		f
 36989                           
 36990                           ; BSR set to: 0
 36991                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 36992  01C69C  D801               	call	i2u1086_48
 36993  01C69E  0011               	retfie		f
 36994  01C6A0                     i2u1086_48:
 36995  01C6A0  0005               	push	
 36996  01C6A2  6EFA               	movwf	pclath,c
 36997  01C6A4  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36998  01C6A6  6EFD               	movwf	tosl,c
 36999  01C6A8  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 37000  01C6AA  6EFE               	movwf	tosh,c
 37001  01C6AC  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 37002  01C6AE  6EFF               	movwf	tosu,c
 37003  01C6B0  50FA               	movf	pclath,w,c
 37004  01C6B2  0012               	return		;indir
 37005  01C6B4                     __end_of_UART2_tx_vect_isr:
 37006                           	opt callstack 0
 37007                           
 37008 ;; *************** function _UART2_Transmit_ISR *****************
 37009 ;; Defined at:
 37010 ;;		line 213 in file "mcc_generated_files/uart2.c"
 37011 ;; Parameters:    Size  Location     Type
 37012 ;;		None
 37013 ;; Auto vars:     Size  Location     Type
 37014 ;;		None
 37015 ;; Return value:  Size  Location     Type
 37016 ;;                  1  [STACK] void 
 37017 ;; Registers used:
 37018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37019 ;; Tracked objects:
 37020 ;;		On entry : 3F/0
 37021 ;;		On exit  : 3B/39
 37022 ;;		Unchanged: 0/0
 37023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37028 ;;Total ram usage:        0 bytes
 37029 ;; Hardware stack levels used:    1
 37030 ;; This function calls:
 37031 ;;		Nothing
 37032 ;; This function is called by:
 37033 ;;		_UART2_Initialize
 37034 ;;		_UART2_tx_vect_isr
 37035 ;; This function uses a reentrant model
 37036 ;;
 37037                           
 37038                           	psect	text177
 37039  01C42C                     __ptext177:
 37040                           	opt callstack 0
 37041  01C42C                     _UART2_Transmit_ISR:
 37042                           	opt callstack 3
 37043                           
 37044                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 37045                           
 37046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37047                           ;incstack = 0
 37048  01C42C  0E40               	movlw	64
 37049  01C42E  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 37050  01C430  D010               	goto	l673
 37051                           
 37052                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 37053  01C432  0E00               	movlw	low _uart2TxBuffer
 37054  01C434  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 37055  01C436  6ED9               	movwf	fsr2l,c
 37056  01C438  6ADA               	clrf	fsr2h,c
 37057  01C43A  0E03               	movlw	high _uart2TxBuffer
 37058  01C43C  22DA               	addwfc	fsr2h,f,c
 37059  01C43E  50DF               	movf	indf2,w,c
 37060  01C440  013D               	movlb	61	; () banked
 37061  01C442  6FD2               	movwf	210,b	;volatile
 37062                           
 37063                           ; BSR set to: 61
 37064  01C444  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 37065                           
 37066                           ; BSR set to: 61
 37067                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 37068  01C446  0E3F               	movlw	63
 37069  01C448  6446               	cpfsgt	_uart2TxTail^0,c
 37070  01C44A  D001               	goto	l11191
 37071                           
 37072                           ; BSR set to: 61
 37073                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 37074  01C44C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 37075  01C44E                     l11191:
 37076                           
 37077                           ; BSR set to: 61
 37078                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 37079  01C44E  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 37080                           
 37081                           ;mcc_generated_files/uart2.c: 224:     }
 37082  01C450  0012               	return	
 37083  01C452                     l673:
 37084                           
 37085                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 37086  01C452  0139               	movlb	57	; () banked
 37087  01C454  9796               	bcf	150,3,b	;volatile
 37088                           
 37089                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 37090  01C456  0012               	return		;funcret
 37091  01C458                     __end_of_UART2_Transmit_ISR:
 37092                           	opt callstack 0
 37093                           
 37094 ;; *************** function _UART2_rx_vect_isr *****************
 37095 ;; Defined at:
 37096 ;;		line 203 in file "mcc_generated_files/uart2.c"
 37097 ;; Parameters:    Size  Location     Type
 37098 ;;		None
 37099 ;; Auto vars:     Size  Location     Type
 37100 ;;		None
 37101 ;; Return value:  Size  Location     Type
 37102 ;;                  1    wreg      void 
 37103 ;; Registers used:
 37104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37105 ;; Tracked objects:
 37106 ;;		On entry : 0/0
 37107 ;;		On exit  : 0/0
 37108 ;;		Unchanged: 0/0
 37109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37114 ;;Total ram usage:        0 bytes
 37115 ;; Hardware stack levels used:    1
 37116 ;; Hardware stack levels required when called:    1
 37117 ;; This function calls:
 37118 ;;		Absolute function
 37119 ;;		_UART2_Receive_ISR
 37120 ;; This function is called by:
 37121 ;;		Interrupt level 2
 37122 ;; This function uses a non-reentrant model
 37123 ;;
 37124                           
 37125                           	psect	text178
 37126  01C6B4                     __ptext178:
 37127                           	opt callstack 0
 37128  01C6B4                     _UART2_rx_vect_isr:
 37129                           	opt callstack 3
 37130                           
 37131                           ;incstack = 0
 37132  01C6B4  EE14  F15E         	lfsr	1,___inthi_sp
 37133                           
 37134                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 37135  01C6B8  0100               	movlb	0	; () banked
 37136  01C6BA  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37137  01C6BC  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37138  01C6BE  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37139  01C6C0  B4D8               	btfsc	status,2,c
 37140  01C6C2  0011               	retfie		f
 37141                           
 37142                           ; BSR set to: 0
 37143                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 37144  01C6C4  D801               	call	i2u1088_48
 37145  01C6C6  0011               	retfie		f
 37146  01C6C8                     i2u1088_48:
 37147  01C6C8  0005               	push	
 37148  01C6CA  6EFA               	movwf	pclath,c
 37149  01C6CC  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 37150  01C6CE  6EFD               	movwf	tosl,c
 37151  01C6D0  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 37152  01C6D2  6EFE               	movwf	tosh,c
 37153  01C6D4  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 37154  01C6D6  6EFF               	movwf	tosu,c
 37155  01C6D8  50FA               	movf	pclath,w,c
 37156  01C6DA  0012               	return		;indir
 37157  01C6DC                     __end_of_UART2_rx_vect_isr:
 37158                           	opt callstack 0
 37159                           
 37160 ;; *************** function _UART2_Receive_ISR *****************
 37161 ;; Defined at:
 37162 ;;		line 233 in file "mcc_generated_files/uart2.c"
 37163 ;; Parameters:    Size  Location     Type
 37164 ;;		None
 37165 ;; Auto vars:     Size  Location     Type
 37166 ;;		None
 37167 ;; Return value:  Size  Location     Type
 37168 ;;                  1  [STACK] void 
 37169 ;; Registers used:
 37170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37171 ;; Tracked objects:
 37172 ;;		On entry : 3F/0
 37173 ;;		On exit  : 3F/0
 37174 ;;		Unchanged: 0/0
 37175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37180 ;;Total ram usage:        0 bytes
 37181 ;; Hardware stack levels used:    1
 37182 ;; This function calls:
 37183 ;;		Nothing
 37184 ;; This function is called by:
 37185 ;;		_UART2_Initialize
 37186 ;;		_UART2_rx_vect_isr
 37187 ;; This function uses a reentrant model
 37188 ;;
 37189                           
 37190                           	psect	text179
 37191  01C83A                     __ptext179:
 37192                           	opt callstack 0
 37193  01C83A                     _UART2_Receive_ISR:
 37194                           	opt callstack 3
 37195                           
 37196                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 37197                           
 37198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37199                           ;incstack = 0
 37200  01C83A  0E00               	movlw	low _uart2RxBuffer
 37201  01C83C  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 37202  01C83E  6ED9               	movwf	fsr2l,c
 37203  01C840  6ADA               	clrf	fsr2h,c
 37204  01C842  0E04               	movlw	high _uart2RxBuffer
 37205  01C844  22DA               	addwfc	fsr2h,f,c
 37206  01C846  006F F743 FFDF     	movff	15824,indf2	;volatile
 37207  01C84C  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 37208                           
 37209                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 37210  01C84E  2844               	incf	_uart2RxHead^0,w,c
 37211  01C850  B4D8               	btfsc	status,2,c
 37212                           
 37213                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 37214  01C852  6A44               	clrf	_uart2RxHead^0,c	;volatile
 37215                           
 37216                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 37217  01C854  0100               	movlb	0	; () banked
 37218  01C856  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 37219                           
 37220                           ; BSR set to: 0
 37221                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37222  01C858  0012               	return		;funcret
 37223  01C85A                     __end_of_UART2_Receive_ISR:
 37224                           	opt callstack 0
 37225                           
 37226 ;; *************** function _TMR6_ISR *****************
 37227 ;; Defined at:
 37228 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 37229 ;; Parameters:    Size  Location     Type
 37230 ;;		None
 37231 ;; Auto vars:     Size  Location     Type
 37232 ;;		None
 37233 ;; Return value:  Size  Location     Type
 37234 ;;                  1    wreg      void 
 37235 ;; Registers used:
 37236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37237 ;; Tracked objects:
 37238 ;;		On entry : 0/0
 37239 ;;		On exit  : 0/0
 37240 ;;		Unchanged: 0/0
 37241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37246 ;;Total ram usage:        1 bytes
 37247 ;; Hardware stack levels used:    1
 37248 ;; Hardware stack levels required when called:    2
 37249 ;; This function calls:
 37250 ;;		_TMR6_CallBack
 37251 ;; This function is called by:
 37252 ;;		Interrupt level 2
 37253 ;; This function uses a non-reentrant model
 37254 ;;
 37255                           
 37256                           	psect	text180
 37257  01C90C                     __ptext180:
 37258                           	opt callstack 0
 37259  01C90C                     _TMR6_ISR:
 37260                           	opt callstack 2
 37261                           
 37262                           ; BSR set to: 0
 37263                           ;incstack = 0
 37264  01C90C  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 37265  01C912  EE14  F15E         	lfsr	1,___inthi_sp
 37266                           
 37267                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 37268  01C916  0139               	movlb	57	; () banked
 37269  01C918  91A9               	bcf	169,0,b	;volatile
 37270                           
 37271                           ; BSR set to: 57
 37272                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 37273  01C91A  ECC8  F0E3         	call	_TMR6_CallBack	;wreg free
 37274  01C91E  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 37275  01C924  0011               	retfie		f
 37276  01C926                     __end_of_TMR6_ISR:
 37277                           	opt callstack 0
 37278                           
 37279 ;; *************** function _TMR6_CallBack *****************
 37280 ;; Defined at:
 37281 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 37282 ;; Parameters:    Size  Location     Type
 37283 ;;		None
 37284 ;; Auto vars:     Size  Location     Type
 37285 ;;		None
 37286 ;; Return value:  Size  Location     Type
 37287 ;;                  1  [STACK] void 
 37288 ;; Registers used:
 37289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 37290 ;; Tracked objects:
 37291 ;;		On entry : 3F/39
 37292 ;;		On exit  : 0/0
 37293 ;;		Unchanged: 0/0
 37294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37299 ;;Total ram usage:        0 bytes
 37300 ;; Hardware stack levels used:    1
 37301 ;; Hardware stack levels required when called:    1
 37302 ;; This function calls:
 37303 ;;		Absolute function
 37304 ;;		_TMR6_DefaultInterruptHandler
 37305 ;; This function is called by:
 37306 ;;		_TMR6_ISR
 37307 ;; This function uses a reentrant model
 37308 ;;
 37309                           
 37310                           	psect	text181
 37311  01C790                     __ptext181:
 37312                           	opt callstack 0
 37313  01C790                     _TMR6_CallBack:
 37314                           	opt callstack 2
 37315                           
 37316                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 37317                           
 37318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37319                           ;incstack = 0
 37320  01C790  0100               	movlb	0	; () banked
 37321  01C792  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37322  01C794  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37323  01C796  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37324  01C798  B4D8               	btfsc	status,2,c
 37325  01C79A  0012               	return	
 37326                           
 37327                           ; BSR set to: 0
 37328                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 37329  01C79C  D801               	call	u1043_48
 37330  01C79E  0012               	return	
 37331  01C7A0                     u1043_48:
 37332  01C7A0  0005               	push	
 37333  01C7A2  6EFA               	movwf	pclath,c
 37334  01C7A4  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 37335  01C7A6  6EFD               	movwf	tosl,c
 37336  01C7A8  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 37337  01C7AA  6EFE               	movwf	tosh,c
 37338  01C7AC  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 37339  01C7AE  6EFF               	movwf	tosu,c
 37340  01C7B0  50FA               	movf	pclath,w,c
 37341  01C7B2  0012               	return		;indir
 37342  01C7B4                     __end_of_TMR6_CallBack:
 37343                           	opt callstack 0
 37344                           
 37345 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 37346 ;; Defined at:
 37347 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 37348 ;; Parameters:    Size  Location     Type
 37349 ;;		None
 37350 ;; Auto vars:     Size  Location     Type
 37351 ;;  i               1  [STACK] unsigned char 
 37352 ;; Return value:  Size  Location     Type
 37353 ;;                  1  [STACK] void 
 37354 ;; Registers used:
 37355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37356 ;; Tracked objects:
 37357 ;;		On entry : 3F/0
 37358 ;;		On exit  : 0/0
 37359 ;;		Unchanged: 0/0
 37360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37365 ;;Total ram usage:        0 bytes
 37366 ;; Hardware stack levels used:    1
 37367 ;; This function calls:
 37368 ;;		Nothing
 37369 ;; This function is called by:
 37370 ;;		_TMR6_Initialize
 37371 ;;		_TMR6_CallBack
 37372 ;; This function uses a reentrant model
 37373 ;;
 37374                           
 37375                           	psect	text182
 37376  01BC6C                     __ptext182:
 37377                           	opt callstack 0
 37378  01BC6C                     _TMR6_DefaultInterruptHandler:
 37379                           	opt callstack 0
 37380                           
 37381                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37382  01BC6C  52E6               	movf	postinc1,f,c
 37383                           
 37384                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 37385                           ;stkvar	_i @ sp[(-1)+0]
 37386                           
 37387                           ;incstack = 0
 37388  01BC6E  0EFF               	movlw	-1
 37389  01BC70  6AE3               	clrf	plusw1,c
 37390  01BC72                     l10703:
 37391                           
 37392                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 37393                           ;stkvar	_i @ sp[(-1)+0]
 37394  01BC72  0EFF               	movlw	-1
 37395  01BC74  50E3               	movf	plusw1,w,c
 37396  01BC76  0D02               	mullw	2
 37397  01BC78  0E7D               	movlw	low _tickCount
 37398  01BC7A  24F3               	addwf	243,w,c
 37399  01BC7C  6ED9               	movwf	fsr2l,c
 37400  01BC7E  0E02               	movlw	high _tickCount
 37401  01BC80  20F4               	addwfc	prodh,w,c
 37402  01BC82  6EDA               	movwf	fsr2h,c
 37403  01BC84  50DE               	movf	postinc2,w,c
 37404  01BC86  10DE               	iorwf	postinc2,w,c
 37405  01BC88  B4D8               	btfsc	status,2,c
 37406  01BC8A  D00C               	goto	l10707
 37407                           
 37408                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 37409                           ;stkvar	_i @ sp[(-1)+0]
 37410  01BC8C  0EFF               	movlw	-1
 37411  01BC8E  50E3               	movf	plusw1,w,c
 37412  01BC90  0D02               	mullw	2
 37413  01BC92  0E7D               	movlw	low _tickCount
 37414  01BC94  24F3               	addwf	243,w,c
 37415  01BC96  6ED9               	movwf	fsr2l,c
 37416  01BC98  0E02               	movlw	high _tickCount
 37417  01BC9A  20F4               	addwfc	prodh,w,c
 37418  01BC9C  6EDA               	movwf	fsr2h,c
 37419  01BC9E  06DE               	decf	postinc2,f,c
 37420  01BCA0  0E00               	movlw	0
 37421  01BCA2  5ADD               	subwfb	postdec2,f,c
 37422  01BCA4                     l10707:
 37423                           
 37424                           ;mcc_generated_files/tmr6.c: 207:  }
 37425                           ;stkvar	_i @ sp[(-1)+0]
 37426  01BCA4  0EFF               	movlw	-1
 37427  01BCA6  2AE3               	incf	plusw1,f,c
 37428                           
 37429                           ;stkvar	_i @ sp[(-1)+0]
 37430  01BCA8  0EFF               	movlw	-1
 37431  01BCAA  006F FF8C  F001    	movff	plusw1,btemp
 37432  01BCB0  0E0C               	movlw	12
 37433  01BCB2  6401               	cpfsgt	btemp^0,c
 37434  01BCB4  D7DE               	goto	l10703
 37435                           
 37436                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37437  01BCB6  52E5               	movf	postdec1,f,c
 37438  01BCB8  0012               	return		;funcret
 37439  01BCBA                     __end_of_TMR6_DefaultInterruptHandler:
 37440                           	opt callstack 0
 37441                           
 37442 ;; *************** function _DMA1_DMASCNT_ISR *****************
 37443 ;; Defined at:
 37444 ;;		line 126 in file "mcc_generated_files/dma1.c"
 37445 ;; Parameters:    Size  Location     Type
 37446 ;;		None
 37447 ;; Auto vars:     Size  Location     Type
 37448 ;;		None
 37449 ;; Return value:  Size  Location     Type
 37450 ;;                  1    wreg      void 
 37451 ;; Registers used:
 37452 ;;		None
 37453 ;; Tracked objects:
 37454 ;;		On entry : 0/0
 37455 ;;		On exit  : 3F/1
 37456 ;;		Unchanged: 0/0
 37457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37462 ;;Total ram usage:        0 bytes
 37463 ;; Hardware stack levels used:    1
 37464 ;; This function calls:
 37465 ;;		Nothing
 37466 ;; This function is called by:
 37467 ;;		Interrupt level 2
 37468 ;; This function uses a non-reentrant model
 37469 ;;
 37470                           
 37471                           	psect	text183
 37472  01CA38                     __ptext183:
 37473                           	opt callstack 0
 37474  01CA38                     _DMA1_DMASCNT_ISR:
 37475                           	opt callstack 4
 37476                           
 37477                           ;incstack = 0
 37478  01CA38  EE14  F15E         	lfsr	1,___inthi_sp
 37479                           
 37480                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 37481  01CA3C  0139               	movlb	57	; () banked
 37482  01CA3E  91A2               	bcf	162,0,b	;volatile
 37483                           
 37484                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 37485  01CA40  0101               	movlb	1	; () banked
 37486  01CA42  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 37487                           
 37488                           ; BSR set to: 1
 37489  01CA44  0011               	retfie		f
 37490  01CA46                     __end_of_DMA1_DMASCNT_ISR:
 37491                           	opt callstack 0
 37492                           
 37493 ;; *************** function _DMA1_DMADCNT_ISR *****************
 37494 ;; Defined at:
 37495 ;;		line 133 in file "mcc_generated_files/dma1.c"
 37496 ;; Parameters:    Size  Location     Type
 37497 ;;		None
 37498 ;; Auto vars:     Size  Location     Type
 37499 ;;		None
 37500 ;; Return value:  Size  Location     Type
 37501 ;;                  1    wreg      void 
 37502 ;; Registers used:
 37503 ;;		None
 37504 ;; Tracked objects:
 37505 ;;		On entry : 0/0
 37506 ;;		On exit  : 3F/39
 37507 ;;		Unchanged: 0/0
 37508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37513 ;;Total ram usage:        0 bytes
 37514 ;; Hardware stack levels used:    1
 37515 ;; This function calls:
 37516 ;;		Nothing
 37517 ;; This function is called by:
 37518 ;;		Interrupt level 2
 37519 ;; This function uses a non-reentrant model
 37520 ;;
 37521                           
 37522                           	psect	text184
 37523  01CA5C                     __ptext184:
 37524                           	opt callstack 0
 37525  01CA5C                     _DMA1_DMADCNT_ISR:
 37526                           	opt callstack 4
 37527                           
 37528                           ; BSR set to: 1
 37529                           ;incstack = 0
 37530  01CA5C  EE14  F15E         	lfsr	1,___inthi_sp
 37531                           
 37532                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 37533  01CA60  0139               	movlb	57	; () banked
 37534  01CA62  93A2               	bcf	162,1,b	;volatile
 37535                           
 37536                           ; BSR set to: 57
 37537  01CA64  0011               	retfie		f
 37538  01CA66                     __end_of_DMA1_DMADCNT_ISR:
 37539                           	opt callstack 0
 37540                           
 37541 ;; *************** function _DMA1_DMAA_ISR *****************
 37542 ;; Defined at:
 37543 ;;		line 143 in file "mcc_generated_files/dma1.c"
 37544 ;; Parameters:    Size  Location     Type
 37545 ;;		None
 37546 ;; Auto vars:     Size  Location     Type
 37547 ;;		None
 37548 ;; Return value:  Size  Location     Type
 37549 ;;                  1    wreg      void 
 37550 ;; Registers used:
 37551 ;;		None
 37552 ;; Tracked objects:
 37553 ;;		On entry : 0/0
 37554 ;;		On exit  : 3F/39
 37555 ;;		Unchanged: 0/0
 37556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37561 ;;Total ram usage:        0 bytes
 37562 ;; Hardware stack levels used:    1
 37563 ;; This function calls:
 37564 ;;		Nothing
 37565 ;; This function is called by:
 37566 ;;		Interrupt level 2
 37567 ;; This function uses a non-reentrant model
 37568 ;;
 37569                           
 37570                           	psect	text185
 37571  01CA68                     __ptext185:
 37572                           	opt callstack 0
 37573  01CA68                     _DMA1_DMAA_ISR:
 37574                           	opt callstack 4
 37575                           
 37576                           ; BSR set to: 57
 37577                           ;incstack = 0
 37578  01CA68  EE14  F15E         	lfsr	1,___inthi_sp
 37579                           
 37580                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 37581  01CA6C  0139               	movlb	57	; () banked
 37582  01CA6E  97A2               	bcf	162,3,b	;volatile
 37583                           
 37584                           ; BSR set to: 57
 37585  01CA70  0011               	retfie		f
 37586  01CA72                     __end_of_DMA1_DMAA_ISR:
 37587                           	opt callstack 0
 37588                           
 37589 ;; *************** function _DMA1_DMAOR_ISR *****************
 37590 ;; Defined at:
 37591 ;;		line 154 in file "mcc_generated_files/dma1.c"
 37592 ;; Parameters:    Size  Location     Type
 37593 ;;		None
 37594 ;; Auto vars:     Size  Location     Type
 37595 ;;		None
 37596 ;; Return value:  Size  Location     Type
 37597 ;;                  1    wreg      void 
 37598 ;; Registers used:
 37599 ;;		None
 37600 ;; Tracked objects:
 37601 ;;		On entry : 0/0
 37602 ;;		On exit  : 3F/39
 37603 ;;		Unchanged: 0/0
 37604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37609 ;;Total ram usage:        0 bytes
 37610 ;; Hardware stack levels used:    1
 37611 ;; This function calls:
 37612 ;;		Nothing
 37613 ;; This function is called by:
 37614 ;;		Interrupt level 2
 37615 ;; This function uses a non-reentrant model
 37616 ;;
 37617                           
 37618                           	psect	text186
 37619  01CA74                     __ptext186:
 37620                           	opt callstack 0
 37621  01CA74                     _DMA1_DMAOR_ISR:
 37622                           	opt callstack 4
 37623                           
 37624                           ; BSR set to: 57
 37625                           ;incstack = 0
 37626  01CA74  EE14  F15E         	lfsr	1,___inthi_sp
 37627                           
 37628                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 37629  01CA78  0139               	movlb	57	; () banked
 37630  01CA7A  95A2               	bcf	162,2,b	;volatile
 37631                           
 37632                           ; BSR set to: 57
 37633  01CA7C  0011               	retfie		f
 37634  01CA7E                     __end_of_DMA1_DMAOR_ISR:
 37635                           	opt callstack 0
 37636                           
 37637                           ;
 37638                           ; Interrupt Vector Table @ 0x8
 37639                           ;
 37640                           
 37641                           	psect	ivt0x8
 37642  000008                     __pivt0x8:
 37643                           	opt callstack 0
 37644  000008                     ivt0x8_base:
 37645                           	opt callstack 0
 37646                           
 37647                           ; Vector 0 : SWINT
 37648  000008  72B0               	dw	_Default_ISR shr (0+2)
 37649                           
 37650                           ; Vector 1 : HLVD
 37651  00000A  72B0               	dw	_Default_ISR shr (0+2)
 37652                           
 37653                           ; Vector 2 : OSF
 37654  00000C  72B0               	dw	_Default_ISR shr (0+2)
 37655                           
 37656                           ; Vector 3 : CSW
 37657  00000E  72B0               	dw	_Default_ISR shr (0+2)
 37658                           
 37659                           ; Vector 4 : NVM
 37660  000010  72B0               	dw	_Default_ISR shr (0+2)
 37661                           
 37662                           ; Vector 5 : SCAN
 37663  000012  72B0               	dw	_Default_ISR shr (0+2)
 37664                           
 37665                           ; Vector 6 : CRC
 37666  000014  72B0               	dw	_Default_ISR shr (0+2)
 37667                           
 37668                           ; Vector 7 : IOC
 37669  000016  72B0               	dw	_Default_ISR shr (0+2)
 37670                           
 37671                           ; Vector 8 : INT0
 37672  000018  728A               	dw	_INT0_ISR shr (0+2)
 37673                           
 37674                           ; Vector 9 : ZCD
 37675  00001A  72B0               	dw	_Default_ISR shr (0+2)
 37676                           
 37677                           ; Vector 10 : AD
 37678  00001C  7100               	dw	_ADCC_ISR shr (0+2)
 37679                           
 37680                           ; Vector 11 : ADT
 37681  00001E  6DFF               	dw	_ADCC_ThresholdISR shr (0+2)
 37682                           
 37683                           ; Vector 12 : CMP1
 37684  000020  72B0               	dw	_Default_ISR shr (0+2)
 37685                           
 37686                           ; Vector 13 : SMT1
 37687  000022  72B0               	dw	_Default_ISR shr (0+2)
 37688                           
 37689                           ; Vector 14 : SMT1PRA
 37690  000024  72B0               	dw	_Default_ISR shr (0+2)
 37691                           
 37692                           ; Vector 15 : SMT1PRW
 37693  000026  72B0               	dw	_Default_ISR shr (0+2)
 37694                           
 37695                           ; Vector 16 : DMA1SCNT
 37696  000028  728E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 37697                           
 37698                           ; Vector 17 : DMA1DCNT
 37699  00002A  7297               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 37700                           
 37701                           ; Vector 18 : DMA1OR
 37702  00002C  729D               	dw	_DMA1_DMAOR_ISR shr (0+2)
 37703                           
 37704                           ; Vector 19 : DMA1A
 37705  00002E  729A               	dw	_DMA1_DMAA_ISR shr (0+2)
 37706                           
 37707                           ; Vector 20 : SPI1RX
 37708  000030  72B0               	dw	_Default_ISR shr (0+2)
 37709                           
 37710                           ; Vector 21 : SPI1TX
 37711  000032  72B0               	dw	_Default_ISR shr (0+2)
 37712                           
 37713                           ; Vector 22 : SPI1
 37714  000034  72B0               	dw	_Default_ISR shr (0+2)
 37715                           
 37716                           ; Vector 23 : I2C1RX
 37717  000036  72B0               	dw	_Default_ISR shr (0+2)
 37718                           
 37719                           ; Vector 24 : I2C1TX
 37720  000038  72B0               	dw	_Default_ISR shr (0+2)
 37721                           
 37722                           ; Vector 25 : I2C1
 37723  00003A  72B0               	dw	_Default_ISR shr (0+2)
 37724                           
 37725                           ; Vector 26 : I2C1E
 37726  00003C  72B0               	dw	_Default_ISR shr (0+2)
 37727                           
 37728                           ; Vector 27 : U1RX
 37729  00003E  7199               	dw	_UART1_rx_vect_isr shr (0+2)
 37730                           
 37731                           ; Vector 28 : U1TX
 37732  000040  72B0               	dw	_Default_ISR shr (0+2)
 37733                           
 37734                           ; Vector 29 : U1E
 37735  000042  72B0               	dw	_Default_ISR shr (0+2)
 37736                           
 37737                           ; Vector 30 : U1
 37738  000044  72B0               	dw	_Default_ISR shr (0+2)
 37739                           
 37740                           ; Vector 31 : TMR0
 37741  000046  72B0               	dw	_Default_ISR shr (0+2)
 37742                           
 37743                           ; Vector 32 : TMR1
 37744  000048  72B0               	dw	_Default_ISR shr (0+2)
 37745                           
 37746                           ; Vector 33 : TMR1G
 37747  00004A  72B0               	dw	_Default_ISR shr (0+2)
 37748                           
 37749                           ; Vector 34 : TMR2
 37750  00004C  72B0               	dw	_Default_ISR shr (0+2)
 37751                           
 37752                           ; Vector 35 : CCP1
 37753  00004E  72B0               	dw	_Default_ISR shr (0+2)
 37754                           
 37755                           ; Vector 36 : Undefined
 37756  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 37757                           
 37758                           ; Vector 37 : NCO1
 37759  000052  72B0               	dw	_Default_ISR shr (0+2)
 37760                           
 37761                           ; Vector 38 : CWG1
 37762  000054  72B0               	dw	_Default_ISR shr (0+2)
 37763                           
 37764                           ; Vector 39 : CLC1
 37765  000056  72B0               	dw	_Default_ISR shr (0+2)
 37766                           
 37767                           ; Vector 40 : INT1
 37768  000058  7030               	dw	_INT1_ISR shr (0+2)
 37769                           
 37770                           ; Vector 41 : CMP2
 37771  00005A  72B0               	dw	_Default_ISR shr (0+2)
 37772                           
 37773                           ; Vector 42 : DMA2SCNT
 37774  00005C  72B0               	dw	_Default_ISR shr (0+2)
 37775                           
 37776                           ; Vector 43 : DMA2DCNT
 37777  00005E  72B0               	dw	_Default_ISR shr (0+2)
 37778                           
 37779                           ; Vector 44 : DMA2OR
 37780  000060  72B0               	dw	_Default_ISR shr (0+2)
 37781                           
 37782                           ; Vector 45 : DMA2A
 37783  000062  72B0               	dw	_Default_ISR shr (0+2)
 37784                           
 37785                           ; Vector 46 : I2C2RX
 37786  000064  72B0               	dw	_Default_ISR shr (0+2)
 37787                           
 37788                           ; Vector 47 : I2C2TX
 37789  000066  72B0               	dw	_Default_ISR shr (0+2)
 37790                           
 37791                           ; Vector 48 : I2C2
 37792  000068  72B0               	dw	_Default_ISR shr (0+2)
 37793                           
 37794                           ; Vector 49 : I2C2E
 37795  00006A  72B0               	dw	_Default_ISR shr (0+2)
 37796                           
 37797                           ; Vector 50 : U2RX
 37798  00006C  71AD               	dw	_UART2_rx_vect_isr shr (0+2)
 37799                           
 37800                           ; Vector 51 : U2TX
 37801  00006E  71A3               	dw	_UART2_tx_vect_isr shr (0+2)
 37802                           
 37803                           ; Vector 52 : U2E
 37804  000070  72B0               	dw	_Default_ISR shr (0+2)
 37805                           
 37806                           ; Vector 53 : U2
 37807  000072  72B0               	dw	_Default_ISR shr (0+2)
 37808                           
 37809                           ; Vector 54 : TMR3
 37810  000074  659C               	dw	_TMR3_ISR shr (0+2)
 37811                           
 37812                           ; Vector 55 : TMR3G
 37813  000076  72B0               	dw	_Default_ISR shr (0+2)
 37814                           
 37815                           ; Vector 56 : TMR4
 37816  000078  72B0               	dw	_Default_ISR shr (0+2)
 37817                           
 37818                           ; Vector 57 : CCP2
 37819  00007A  72B0               	dw	_Default_ISR shr (0+2)
 37820                           
 37821                           ; Vector 58 : Undefined
 37822  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 37823                           
 37824                           ; Vector 59 : CWG2
 37825  00007E  72B0               	dw	_Default_ISR shr (0+2)
 37826                           
 37827                           ; Vector 60 : CLC2
 37828  000080  72B0               	dw	_Default_ISR shr (0+2)
 37829                           
 37830                           ; Vector 61 : INT2
 37831  000082  72B0               	dw	_Default_ISR shr (0+2)
 37832                           
 37833                           ; Vector 62 : Undefined
 37834  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 37835                           
 37836                           ; Vector 63 : Undefined
 37837  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 37838                           
 37839                           ; Vector 64 : Undefined
 37840  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 37841                           
 37842                           ; Vector 65 : Undefined
 37843  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 37844                           
 37845                           ; Vector 66 : Undefined
 37846  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 37847                           
 37848                           ; Vector 67 : Undefined
 37849  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 37850                           
 37851                           ; Vector 68 : Undefined
 37852  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 37853                           
 37854                           ; Vector 69 : Undefined
 37855  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 37856                           
 37857                           ; Vector 70 : TMR5
 37858  000094  699B               	dw	_TMR5_ISR shr (0+2)
 37859                           
 37860                           ; Vector 71 : TMR5G
 37861  000096  72B0               	dw	_Default_ISR shr (0+2)
 37862                           
 37863                           ; Vector 72 : TMR6
 37864  000098  7243               	dw	_TMR6_ISR shr (0+2)
 37865                           
 37866                           ; Vector 73 : CCP3
 37867  00009A  72B0               	dw	_Default_ISR shr (0+2)
 37868                           
 37869                           ; Vector 74 : CWG3
 37870  00009C  72B0               	dw	_Default_ISR shr (0+2)
 37871                           
 37872                           ; Vector 75 : CLC3
 37873  00009E  72B0               	dw	_Default_ISR shr (0+2)
 37874                           
 37875                           ; Vector 76 : Undefined
 37876  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 37877                           
 37878                           ; Vector 77 : Undefined
 37879  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 37880                           
 37881                           ; Vector 78 : Undefined
 37882  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 37883                           
 37884                           ; Vector 79 : Undefined
 37885  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 37886                           
 37887                           ; Vector 80 : CCP4
 37888  0000A8  72B0               	dw	_Default_ISR shr (0+2)
 37889                           
 37890                           ; Vector 81 : CLC4
 37891  0000AA  72B0               	dw	_Default_ISR shr (0+2)
 37892  0000AC                     ivt0x8_undefint:
 37893                           	opt callstack 0
 37894  0000AC  00FF               	reset	
 37895                           
 37896                           	psect	text187
 37897  000000                     __ptext187:
 37898                           	opt callstack 0
 37899                           
 37900                           	psect	rparam
 37901  0000                     
 37902                           	psect	temp
 37903  000001                     btemp:
 37904                           	opt callstack 0
 37905  000001                     	ds	32
 37906  0000                     wtemp0	set	btemp
 37907  0000                     wtemp1	set	btemp+2
 37908  0000                     wtemp2	set	btemp+4
 37909  0000                     wtemp3	set	btemp+6
 37910  0000                     wtemp4	set	btemp+8
 37911  0000                     wtemp5	set	btemp+10
 37912  0000                     wtemp8	set	btemp+1
 37913  0000                     ttemp0	set	btemp
 37914  0000                     ttemp1	set	btemp+3
 37915  0000                     ttemp2	set	btemp+6
 37916  0000                     ttemp3	set	btemp+9
 37917  0000                     ttemp5	set	btemp+1
 37918  0000                     ttemp6	set	btemp+4
 37919  0000                     ttemp7	set	btemp+8
 37920  0000                     ltemp0	set	btemp
 37921  0000                     ltemp1	set	btemp+4
 37922  0000                     ltemp2	set	btemp+8
 37923  0000                     lltemp0	set	btemp
 37924  0000                     lltemp1	set	btemp+8
 37925  0000                     lltemp2	set	btemp+16
 37926  0000                     lltemp3	set	btemp+24
 37927                           tosu	equ	0x3FFF
 37928                           tosh	equ	0x3FFE
 37929                           tosl	equ	0x3FFD
 37930                           stkptr	equ	0x3FFC
 37931                           pclatu	equ	0x3FFB
 37932                           pclath	equ	0x3FFA
 37933                           pcl	equ	0x3FF9
 37934                           tblptru	equ	0x3FF8
 37935                           tblptrh	equ	0x3FF7
 37936                           tblptrl	equ	0x3FF6
 37937                           tablat	equ	0x3FF5
 37938                           prodh	equ	0x3FF4
 37939                           prodl	equ	0x3FF3
 37940                           indf0	equ	0x3FEF
 37941                           postinc0	equ	0x3FEE
 37942                           postdec0	equ	0x3FED
 37943                           preinc0	equ	0x3FEC
 37944                           plusw0	equ	0x3FEB
 37945                           fsr0h	equ	0x3FEA
 37946                           fsr0l	equ	0x3FE9
 37947                           wreg	equ	0x3FE8
 37948                           indf1	equ	0x3FE7
 37949                           postinc1	equ	0x3FE6
 37950                           postdec1	equ	0x3FE5
 37951                           preinc1	equ	0x3FE4
 37952                           plusw1	equ	0x3FE3
 37953                           fsr1h	equ	0x3FE2
 37954                           fsr1l	equ	0x3FE1
 37955                           bsr	equ	0x3FE0
 37956                           indf2	equ	0x3FDF
 37957                           postinc2	equ	0x3FDE
 37958                           postdec2	equ	0x3FDD
 37959                           preinc2	equ	0x3FDC
 37960                           plusw2	equ	0x3FDB
 37961                           fsr2h	equ	0x3FDA
 37962                           fsr2l	equ	0x3FD9
 37963                           status	equ	0x3FD8


Data Sizes:
    Strings     1243
    Constant    492
    Data        1073
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     254
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_112(CODE[1]), STR_74(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_109(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[3]), STR_86(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_109(CODE[3]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[3]), STR_86(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), 
		 -> STR_63(CODE[15]), STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), 
		 -> STR_71(CODE[19]), STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), 
		 -> STR_67(CODE[19]), STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), 
		 -> STR_63(CODE[15]), STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), 
		 -> STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), 
		 -> STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_57(CODE[9]), STR_56(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_57(CODE[9]), STR_56(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_81(CODE[4]), STR_80(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_81(CODE[4]), STR_80(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_55(CODE[3]), STR_54(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[21]), STR_49(CODE[21]), STR_48(CODE[21]), STR_47(CODE[20]), 
		 -> STR_46(CODE[20]), STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6492_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_75(CODE[127]), STR_73(CODE[3]), STR_72(CODE[3]), STR_71(CODE[19]), 
		 -> STR_70(CODE[19]), STR_69(CODE[19]), STR_68(CODE[19]), STR_67(CODE[19]), 
		 -> STR_66(CODE[19]), STR_65(CODE[24]), STR_64(CODE[15]), STR_63(CODE[15]), 
		 -> STR_62(CODE[15]), STR_61(CODE[10]), STR_60(CODE[10]), STR_59(CODE[19]), 
		 -> STR_58(CODE[19]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[21]), STR_49(CODE[21]), 
		 -> STR_48(CODE[21]), STR_47(CODE[20]), STR_46(CODE[20]), STR_45(CODE[21]), 
		 -> STR_44(CODE[21]), STR_43(CODE[21]), STR_42(CODE[22]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), 
		 -> STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_57(CODE[9]), STR_56(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_57(CODE[9]), STR_56(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_57(CODE[9]), 
		 -> STR_56(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4896tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_57(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_56(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  596743
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   1     1      0  125019
                             _WaitMs
                   _cal_current_zero
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     4      1     266
                        _check_range
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
       _get_raw_result
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F      58        0.0%
DATA                 0      0     97C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 01:01:02 2020

                     _SPI1_Exchange8bit C85A                __end_of_set_display_info C8D2  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F2  
                                     _R 00AF                                       _S 0254  
                                     _T FA07                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C59A            __end_of_start_switch_handler C83A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FB0F                  __end_of_FVR_Initialize CAA6  
                        _check_day_time 8D5E                             __CFG_LVP$ON 000000  
                                   l169 C992                                     l807 C868  
                                   l673 C452                                     _GIE 01FE97  
                                   _abs BE6E                                     _pad A15C  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C93E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C76C  
                     _update_adc_result C0FE                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C700  
                          __CFG_ZCD$OFF 000000                                    l1002 C07A  
                                  l2005 8EF4                                    l2200 747A  
                                  l2009 8EEC                                    l1190 C0BA  
                                  l1336 12A2                                    l1353 194E  
                                  l2154 3AEE                                    l1610 AF80  
                                  l2315 123A                                    l2075 9CD4  
                                  l1363 19F2                                    l1355 1952  
                       _timer3ReloadVal 009E                                    l2084 8786  
                                  l3053 4E1C                                    l3205 BEAE  
                                  l1373 1BF6                                    l2158 3E2C  
                                  l3134 4660                                    l1614 B29A  
                                  l1374 1E1E                                    l2344 066A  
                                  l3065 4CAC                                    l3305 9F22  
                                  l2433 616C                                    l1705 A37C  
                                  l2418 6892                                    l1482 BB1E  
                                  l2259 A1B8                                    l1379 23E6  
                                  l3236 7EC0                                    l1629 C1F6  
                                  l3174 8B98                                    l1910 AA8E  
                                  l1398 79D2                                    l2279 593A  
                                  l2359 0B1A                                    l3600 B436  
                                  l1745 C8CE                                    l3098 5396  
                                  l2483 33C8                                    l1829 5856  
                                  l2813 9502                                    l3197 908A  
                                  l2397 7568                    _ADCC_StartConversion C9AC  
                                  l1688 C154                                    l1945 8D54  
                                  l1697 883E                                    l1698 899A  
                                  l3572 8566                                    l1869 B638  
                                  l1885 AD72                                    l2775 AB52  
                                  l1992 A49E                                    l2786 9664  
                                  l2779 9590                                    l3587 B4BA  
                                  l8031 B11E                                    l9001 946E  
                                  l8211 4CCE                                    l8203 4C90  
                                  l9011 94B0                                    l9003 948A  
                                  l8213 4CE0                                    l8029 B0FC  
                                  l8231 4D1A                                    l8143 4A28  
                                  l8063 4700                                    l8217 4CEC  
                                  l8145 4A3A                                    l8153 4A74  
                                  l8129 4996                                    l8081 47B0  
                                  l8057 46C0                                    l9009 949A  
                                  l9025 9268                                    l8243 4D78  
                                  l8227 4D14                                    l8171 4B10  
                                  l8139 4A08                                    l8091 4806  
                                  l8075 477E                                    l8067 4716  
                                  l8411 671E                                    l8253 4DA4  
                                  l8173 4B22                                    l8181 4B5E  
                                  l8149 4A44                                    l8093 4836  
                                  l8069 4746                                    l8341 BE9E  
                                  l8421 6824                                    l8413 676E  
                                  l9037 933A                                    l8087 47F0  
                                  l8265 4DFC                                    l8257 4DBC  
                                  l8193 4C36                                    l8177 4B2C  
                                  l9073 BC0A                                    l8417 67B6  
                                  l9057 9B48                                    l9049 9A9C  
                                  l8259 4DCC                                    l8195 4C5C  
                                  l8099 4858                                    l8515 82A2  
                                  l8507 81F6                                    l8355 9028  
                                  l8701 3F0C                                    l8621 51D0  
                                  l8613 519E                                    l8605 5138  
                                  l8541 4EBC                                    l8461 7A8C  
                                  l8365 9082                                    l8631 5212  
                                  l8607 514A                                    l8615 51A2  
                                  l8535 4E7C                                    l8455 7A38  
                                  l8359 902C                                    l8383 B4AA  
                                  l8439 B426                                    l8641 525C  
                                  l8561 4F9A                                    l8545 4ED2  
                                  l8803 44E6                                    l8715 3FA4  
                                  l8627 51EC                                    l8555 4F5A  
                                  l8547 4F02                                    l8467 7AD2  
                                  l8813 455A                                    l8717 3FAA  
                                  l8709 3F64                                    l8661 5312  
                                  l8645 5262                                    l8573 501E  
                                  l8565 4FB0                                    l8397 6600  
                                  l8831 460E                                    l8823 45CA  
                                  l8727 3FFC                                    l8719 3FDA  
                                  l8655 52D6                                    l8567 4FE0  
                                  l8479 7BA4                                    l8903 A076  
                                  l8833 4628                                    l8817 45A0  
                                  l8673 536A                                    l9705 83D8  
                                  l8691 3E96                                    l8675 537A  
                                  l8667 5342                                    l8587 5072  
                                  l8579 5058                                    l8499 816E  
                                  l8907 A08E                                    l9707 8444  
                                  l8597 5102                                    l9653 7C70  
                                  l8853 97F6                                    l8925 A142  
                                  l8917 A10E                                    l8941 AB50  
                                  l8933 AADA                                    l9671 7D4A  
                                  l9663 7D06                                    l9655 7C92  
                                  l8785 4470                                    l8697 3ED6  
                                  l9673 7D6E                                    l8865 982C  
                                  l8937 AB1C                                    l8779 4454  
                                  l8699 3EDC                                    l8955 95DE  
                                  l9675 7DAC                                    l8859 980C  
                                  l8789 4496                                    l8949 954E  
                                  l9669 7D32                                    l8799 44E0  
                                  l8967 9662                                    l8959 962C  
                                  l9679 7E14                                    l8887 9906  
                                  l8879 98D2                                    l8975 BD6C  
                                  STR_1 FEF4                                    STR_2 FEB5  
                                  l9689 7EB0                                    l8985 93EC  
                                  STR_3 FFD1                                    STR_4 FE61  
                                  l9971 8A54                                    l9963 89E8  
                                  l8899 A064                                    STR_5 FDF8  
                                  STR_6 FDF8                                    l9973 8A62  
                                  STR_7 FDF8                                    STR_8 FE4C  
                                  l9983 8AC4                                    l9975 8A78  
                                  STR_9 FBF3                                    l9985 8AE2  
                                  l9977 8A96                                    l9995 8B16  
                                  l9987 8AF8                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 4D0C                                    u6110 C338  
                                  u6040 4D68                                    u6120 C33A  
                                  _T6PR 003F93                                    u6220 BE82  
                                  _PMD0 0039C0                                    u6045 4D58  
                                  _PMD1 0039C1                                    u6070 4D88  
                                  u6230 8FAC                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6400 66C4  
                                  u6320 B468                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u7130 44D8  
                                  u6330 B46A                                    _PMD6 0039C6  
                                  u6235 8FA2                                    _PMD7 0039C7  
                                  u7060 3FEA                                    u6500 C398  
                                  u6420 679C                                    u6405 66BA  
                                  u6510 C39A                                    u7310 A0BA  
                                  u6350 6598                                    u5640 B14C  
                                  u6600 7BDC                                    u7240 9858  
                                  u6280 907A                                    u6360 65E4  
                                  u6425 6792                                    u7170 4534  
                                  u6530 7A32                                    u7330 A12E  
                                  u6290 907C                                    u6450 BF32  
                                  u7075 417E                                    u6275 905C  
                                  u6355 658E                                    u7180 456E  
                                  u5900 4B54                                    u6620 7C2E  
                                  u7260 98F2                                    u6460 BF34  
                                  u7085 4246                                    u7190 45B4  
                                  u5830 4A6C                                    u6550 7A88  
                                  u6710 82DA                                    u7430 BD68  
                                  u7510 94B8                                    u5670 C368  
                                  u6470 B3E4                                    u7175 4524  
                                  u7095 440E                                    u5647 B13E  
                                  u5840 4A8C                                    u5808 49DE  
                                  u7440 93CC                                    u5680 C36A  
                                  u7600 9A96                                    u6480 B3E6  
                                  u5905 4B44                                    u6561 7A92  
                                  u6385 661E                                    u6570 7ACC  
                                  u6730 832C                                    u6650 8168  
                                  u7370 AB4C                                    u7530 94E2  
                                  u7450 93E0                                    u6386 6624  
                                  u7610 9AC8                                    u5835 4A5C  
                                  u6387 6632                                    u5940 4C7E  
                                  u5780 49BC                                    u6580 7AFE  
                                  u7460 941A                                    u7445 93C2  
                                  u7541 9228                                    u5790 49DC  
                                  u6910 5254                                    u6670 81BE  
                                  u7550 9262                                    u7630 9B80  
                                  u5791 49D6                                    u6680 81F0  
                                  u7560 9294                                    u7465 9410  
                                  u7650 BBE6                                    u6690 8222  
                                  u5980 4CF2                                    u9404 56C2  
                                  u9324 53BC                                    u7660 BC06  
                                  u7580 9372                                    u9405 56BC  
                                  u9325 53B6                                    u6950 52B0  
                                  u6870 51CA                                    u9430 56EC  
                                  u6960 52EA                                    u9280 8B0C  
                                  u9424 56E4                                    u9344 53EC  
                                  u9425 56DE                                    u9345 53E6  
                                  u6970 5326                                    u6955 52A0  
                                  u9364 540E                                    u9365 5408  
                                  u9605 BF6E                                    u8830 8472  
                                  u9384 55F4                                    u8760 7D02  
                                  u9705 B90E                                    u9385 55EE  
                                  u9706 B910                                    u9650 B4F8  
                                  _PLLR 01CEE0                                    u8780 7E5A  
                                  u8837 8464                                    u9830 8BB8  
                                  u8790 7E5C                                    u8870 850C  
                                  u9680 B8DA                                    u8880 853A  
                                  u8890 C7BA                                    u8875 8506  
                                  u9755 C9D8                                    u9860 AA1A  
                                  u9756 C9DA                                    u8877 84F8  
                                  u9765 C9C8                                    u9766 C9CA  
                                  u8887 852C                                    u9880 AA66  
                                  u9698 B8DC                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C42C  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FB1F                                    _cp_l FB1B  
                                  _atoi 7C56                                    _ctoa B334  
                                  _main 1244                                    _dtoa 585C  
                                  _nanf B9F8                                    _seed 01F6  
                                  _prec 003C                                    _nout 009A  
                                  _spin FA97                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 747E                                    btemp 0001  
                                  _utoa 684E                                    _xtoa 6128  
                __end_of_check_adc_scan CA8E                           ___fpclassifyf 8EFE  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C878               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize BE26             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C664  
                          ___param_bank 000000                  __end_of_check_day_time 8EFE  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR CA36  
                      __end_of_INT1_ISR C0FE          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma AF88           __end_of_OSCILLATOR_Initialize C998  
                                 l10005 8B78                                   l10021 53D2  
                                 l10031 54F8                                   l10015 53A2  
                                 l10043 560C                                   l10035 55DA  
                                 l10061 5824                                   l10205 C200  
                                 l11007 9A48                                   l10055 5788  
                                 l10047 56A8                                   l11115 AB6E  
                                 l10069 5836                                   l10317 B4FC  
                                 l10175 8E28                                   l10087 C4CA  
                                 l11119 ABEA                                   l11217 C062  
                                 l11401 7214                                   l11235 C0A2  
                                 l10187 8E9A                                   l10259 C3E4  
                                 l13013 6498                                   l11413 7266  
                                 l10703 BC72                                   l11191 C44E  
                                 l13111 29C2                                   l13103 28D6  
                                 l11407 723E                                   l10297 BC46  
                                 l11433 72E6                                   l11425 72C0  
                                 l11417 7272                                   l10707 BCA4  
                                 l11179 C814                                   l13203 31BE  
                                 l13115 2A16                                   l13051 2508  
                                 l12403 6F52                                   l11515 AC1C  
                                 l13053 2542                                   l13301 AFAC  
                                 l11367 91F4                                   l12511 5992  
                                 l13223 3350                                   l13135 2C28  
                                 l13127 2B70                                   l13055 2558  
                                 l12423 7128                                   l12415 707A  
                                 l11519 AC5A                                   l10823 AA6C  
                                 l10903 C11E                                   l11391 71D8  
                                 l11455 7440                                   l12441 A1C2  
                                 l12521 5BA4                                   l13217 32F6  
                                 l13073 268A                                   l13233 3374  
                                 l12409 7010                                   l10809 AA1E  
                                 l11457 746A                                   l13403 357C  
                                 l11563 611A                                   l12371 9E38  
                                 l12435 A188                                   l12507 5974  
                                 l13227 3354                                   l13139 2C5C  
                                 l13075 26C4                                   l13251 B088  
                                 l13307 AFB4                                   l13331 A294  
                                 l11387 71C2                                   l10861 C16A  
                                 l12445 A1FE                                   l12541 5C56  
                                 l13093 283E                                   l13077 26DA  
                                 l13309 AFE0                                   l10765 A570  
                                 l11397 7208                                   l11389 71D2  
                                 PRLOCK 0039EF                                   l13415 36EA  
                                 l13407 35E8                                   l10791 8C06  
                                 l10783 8BDA                                   l12383 B188  
                                 l12439 A1B0                                   l12455 A876  
                                 l12703 0926                                   l12623 0396  
                                 l12607 02FC                                   l12615 032A  
                                 l13159 2DBC                                   l13271 AE5E  
                                 l10759 A4BE                                   l10927 B5F6  
                                 l10951 9FF0                                   l13425 3916  
                                 l12449 A248                                   l12473 B352  
                                 l12545 5C92                                   l12633 04D2  
                                 l13169 2E6A                                   l13273 AEA0  
                                 l11691 B588                                   l13443 3B20  
                                 l13435 3A56                                   l13419 373E  
                                 l10795 8C1A                                   l12387 B1C6  
                                 l12475 B37E                                   l12803 0FD6  
                                 l12651 058E                                   l12627 0406  
                                 l12571 00F0                                   l13179 2F8C  
                                 l13371 9C08                                   l10939 B60E  
                                 l10947 9F8E                                   l11685 B578  
                                 l13429 3990                                   l10981 994E  
                                 l12805 0FF0                                   l12741 0C32  
                                 l12725 0B12                                   l12717 0A48  
                                 l12645 0554                                   l12629 0470  
                                 l13189 3042                                   l13455 3E24  
                                 l13439 3AFE                                   l10983 995C  
                                 l10991 9964                                   l12815 1092  
                                 l12727 0B34                                   l12591 0216  
                                 l12559 00AC                                   l13295 AF8C  
                                 l13551 7812                                   l10993 9996  
                                 l10977 9938                                   l12841 119A  
                                 l12825 10E2                                   l12753 0CBA  
                                 l12761 0D24                                   l12665 05F6  
                                 l12657 0594                                   l12649 057C  
                                 l12593 022C                                   l12921 68DE  
                                 l12913 6882                                   l13297 AF94  
                                 l13377 9C6E                                   l13609 8750  
                                 l13721 12AA                                   l13395 34BC  
                                 l10979 9948                                   l13627 B71C  
                                 l12499 592A                                   l12683 06B8  
                                 l12667 0602                                   l12579 0146  
                                 l12931 6AD4                                   l13299 AF9E  
                                 l13555 7826                                   l13723 12BC  
                                 l13715 1284                                   l12693 077A  
                                 l12589 01EA                                   l12597 0258  
                                 l12861 74EA                                   l13653 880E  
                                 l13573 791A                                   l13901 1B02  
                                 l13821 16DA                                   l13717 128C  
                                 l13399 3510                                   l10999 99CE  
                                 l12687 06F0                                   l13575 7928  
                                 l13583 8584                                   l12769 0D90  
                                 l12777 0EA2                                   l12881 75DA  
                                 l12953 615C                                   l13913 205A  
                                 l13833 17B4                                   l12891 7694  
                                 l13667 8936                                   l13851 1944  
                                 l12789 0F3A                                   l12885 760A  
                                 l12877 759E                                   l12973 6232  
                                 l12965 61D2                                   l13917 20BA  
                                 l12895 76C0                                   l12959 6196  
                                 l13599 8678                                   l13943 22BE  
                                 l13927 223C                                   l13871 19B8  
                                 l13775 1472                                   l13929 2268  
                                 l13857 1956                                   l12899 76FC  
                                 l13971 2360                                   l13955 2310  
                                 l13859 1984                                   l12989 6328  
                                 l12997 63AE                                   l13973 2378  
                                 l13965 234E                                   l13983 23BC  
                                 l13879 19DE                                   l13993 2412  
                                 l13889 1A02                                   l13979 2396  
                       __end_of___aodiv 7C56                            _Volts_to_SOC AB5C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4E26                                   _ADCLK 003EFF  
                       __end_of___aomod 8350                                   _ADPCH 003EF1  
                       __end_of___fldiv 53A0                                   _ADREF 003EFD  
                       __end_of___awdiv 9920                         __end_of___flneg BD96  
                                 STR_10 FCAE                                   STR_11 FD8A  
                                 STR_12 FE76                                   STR_21 FF82  
                                 STR_13 FE8B                                   STR_14 FF33  
                                 STR_30 FDB6                                   STR_22 FD74  
                                 STR_15 FF1E                                   STR_23 FD5E  
                                 STR_31 FCC4                                   STR_40 FDE2  
                                 STR_24 FD48                                   STR_32 FCDA  
                                 STR_16 FC98                                   STR_41 FDE2  
                                 STR_25 FD32                                   STR_33 FCF0  
                                 STR_17 FBBF                           __CFG_WDTE$OFF 000000  
                                 STR_42 FDE2                                   STR_50 FEDF  
                                 STR_26 FD1C                                   STR_34 FC3C  
                                 STR_18 FBD9                                   STR_51 FF09  
                                 STR_19 FF93                                   STR_43 FF09  
                                 STR_27 FD06                                   STR_35 FC81  
                                 STR_60 FFBE                                   STR_44 FE22  
                                 STR_52 FE0D                                   STR_28 FDCC  
                                 STR_36 FBA2                         __end_of___awmod A15C  
                                 STR_61 FFBE                                   STR_53 FECA  
                                 STR_45 FEA0                                   STR_29 FDA0  
                                 STR_37 FC25                                   STR_54 FFFB  
                                 STR_62 FFA3                                   STR_46 FF48  
                                 STR_38 FC53                                   STR_63 FFA3  
                                 STR_47 FF48                                   STR_55 FFF8  
                                 STR_39 FC6A                                   STR_48 FF09  
                                 STR_64 FFA3                                   STR_80 FFDA  
                                 STR_56 FFB2                                   _ADRPT 003EEC  
                                 STR_81 FFE2                                   STR_57 FFC8  
                                 STR_49 FE37                                   STR_65 FC0D  
                                 STR_74 FBA1                                   STR_90 FFEF  
                                 STR_58 FF5C                                   STR_59 FF5C  
                                 STR_67 FF6F                                   STR_75 FB23  
                                 STR_84 FFE9                                   STR_76 FFD6  
                                 STR_93 FFEC                                   STR_77 FFDE  
                                 STR_86 FFE9                                   STR_95 FFEC  
                                 STR_88 FFEF                         __end_of___flmul 466A  
                                 STR_98 FFF2                         __end_of___flsub BEFA  
                       __end_of___fltol 950C                                   u10000 C7E2  
                                 u10006 C7E4                                   u12000 10B8  
                                 u11210 9EA8                                   u12020 116E  
                                 u12100 7600                                   u12030 1170  
                                 u12110 7646                                   u11400 58FE  
                                 u11320 A8F0                                   u12200 6B2C  
                                 u12201 6B2A                                   u12210 6B40  
                       __end_of___lodiv 939A                                   u11420 5910  
                                 u12140 7722                                   u12220 6B44  
                                 u12117 7638                                   u11190 9E2C  
                                 u11510 5C2C                                   u12310 62DE  
                                 u11270 719C                                   u11327 A8E2  
                                 u11440 5960                                   u12160 6868  
                                 u12320 62E0                                   u12240 6142  
                                 u13200 158C                                   u11450 5BB8  
                                 u11370 588C                                   _U1P1H 003DED  
                                 u11380 588E                                   u11700 0562  
                                 u11620 02A6                                   u12340 63AA  
                                 u12500 2724                                   u13140 8986  
                                 u13220 17E2                                   _U1P2H 003DEF  
                                 u11461 5BE8                                   u11470 5BFE  
                                 u11630 02A8                                   u11550 00DA  
                                 u12350 63CA                                   u12270 622A  
                                 u12510 274A                                   u13150 8988  
                                 u13230 190C                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u11471 5BFC  
                                 u12191 6B16                                   _T3CLK 003FA9  
                                 u11480 5C12                                   u12280 627E  
                                 u12440 25A0                                   u13240 190E  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12361 63FA                                   u12345 638C  
                                 u11490 5C16                                   u11730 05C6  
                                 u12370 6410                                   u12290 6280  
                                 u12610 2D16                                   u12450 25A2  
                                 _U1P3L 003DF0                                   u12371 640E  
                                 u11580 0194                                   u12380 6424  
                                 u12700 3246                                   u12620 2D18  
                                 u12460 25C8                                   u11670 050E  
                                 u11590 0196                                   u12390 6428  
                                 _U2P1L 003DD4                                   u11840 0A18  
                                 u12560 292A                                   u12720 B068  
                                 u12800 9C4A                                   u13360 22AE  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11770 0648                                   u12490 2722  
                                 u13370 22C6                                   _U2P3L 003DD8  
                                 u11940 0EE4                                   u12580 2A9E  
                                 u13380 22D8                                   u12830 9CB0  
                                 u13366 22B0                                   _T5CLK 003F9D  
                                 u12680 3096                                   u13376 22C8  
                       __end_of___lomod 9BA2                                   u12818 9C4C  
                                 u12770 9BE4                                   u13386 22DA  
                                 _T2HLT 003FAD                                   u12848 9CB2  
                                 _T5CON 003F9A                                   u12788 9BE6  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result C138                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR CAC0  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 773C  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 97D2  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero A9D2  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A74E  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C926  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf AD84                                   _flags 003E  
                  __size_of_check_range 0080                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay CA28                                   _fputc 9E08  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BF3E  
                                 _fputs B178                         __end_of_isdigit C3A4  
                       __end_of_ivln2_h FB1B                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand C214                                   _width 003A  
                                 _putch C8F0            __end_of_set_ac_charger_relay C9FE  
                       __end_of_islower C344                         __end_of_isspace BC1A  
              _INT1_SetInterruptHandler C5C2                         __end_of_set_dac AD84  
                       __end_of_isupper C374                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C54A  
           _UART1_SetRxInterruptHandler C522                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A48A                         __end_of_tolower B4C4  
                       __end_of_strncmp 8570                         __end_of_toupper B440  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C68C  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize BDDE  
                 __end_of_ringBufS_init C4AA                         __initialization A74E  
                     _UART2_rx_vect_isr C6B4                            __end_of_cp_h FB23  
                          __end_of_cp_l FB1F                            __end_of_atoi 7ECA  
                          __end_of_ctoa B3BC                            __end_of_main 2426  
                          __end_of_dtoa 5CDC                            __end_of_nanf BA5A  
                          __end_of_spin FB0F                            __end_of_stoa 773C  
                          __end_of_utoa 6B8E                            __end_of_xtoa 64E2  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C956                   __end_of_send_lcd_data C700  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B726  
              _TMR5_SetInterruptHandler C572                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr CA50                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize C458                         _PWM8_Initialize C96C  
                      _UART1_Initialize BD96                       _UART2_tx_vect_isr C68C  
                    _UART2_Transmit_ISR C42C                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B932                                  _ADLTHH 003EDF  
                                STR_100 FFF2                                  _ADLTHL 003EDE  
                                STR_103 FFF5                                  STR_105 FFF5  
                                STR_107 FFE6                                  STR_109 FFE6  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue BF3E  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A6FE                                  _RB6PPS 003A0E  
                                i1l1207 973A                    _start_switch_handler C81A  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize BE6E                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright CA0C  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u951_20 8DB4                                  u946_25 C9F8  
                                u946_26 C9FA                    __size_of_hid_display 021C  
                                u974_20 C178                                  u974_26 C17A  
                                u967_20 CA24                        __end_of___xxtofl 8BA2  
 __end_of_ADCC_DischargeSampleCapacitor CA86  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor CA7E                __end_of_send_lcd_cmd_dma C896  
                       _TMR3_WriteTimer C080                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C6DC              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize CA46                        _UART2_Initialize BA5A  
                                _WaitMs C1DE                         _conv_raw_result 53A0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 950C                                  ___fleq AA98  
                     _ADCC_ThresholdISR B7FC                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush B210                                  _efgtoa 0000  
                                _floorf 64E2                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6EBA  
                  __size_of_help_button 0038                                  clear_0 A7C0  
                                clear_1 A7D4                                  clear_2 A7E6  
                                clear_3 A7F2                                  clear_4 A7FE  
                                clear_5 A80A                                  clear_6 A816  
             __end_of_port_data_dma_ptr CA5A                                  _printf B996  
                    _eaDogM_WriteString B030                                  _strcpy A82E  
                             ?_ADCC_ISR 0021                                  _strlen B0D6  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B790                          _PMD_Initialize C998  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C6B4  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B996  
                          __mediumconst F936                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay BB6E                        __end_of_spinners A580  
                      __end_of_vfprintf AEDE                              _StartTimer C000  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize BE26                       _SYSTEM_Initialize BD04  
                            __accesstop 0060                 __end_of__initialization A828  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help CA9E                    __end_of_display_info CA96  
             __end_of_CLKREF_Initialize CA50                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C040  
                 _set_temp_display_help C9DE                        _clear_hid_pflags B866  
                 __end_of_TMR3_CallBack C76C               __end_of_ADCC_ThresholdISR B866  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B2A2  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C1A8  
                          __pidataBANK1 A902             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AE32                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 9F2C  
                         __end_of_fputs B210                    _get_ac_charger_relay CA1A  
                         __end_of_srand C248                   __end_of_TMR5_CallBack C748  
                         __end_of_putch C90A                    _set_ac_charger_relay C9EE  
               __end_of_PWM8_Initialize C982                 __end_of_TMR6_Initialize C482  
                     _adc_int_t_handler B544                  __end_of_PMD_Initialize C9AC  
                            __end_of_bp FB17                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C7B4             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR CA68                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan CAA6                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize BD4E                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer C0C0  
                            __pbssBANK0 0060                              __pbssBANK1 01D0  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 878C  
               __end_of_conv_raw_result 585C                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C4D2  
                      _DMA1_DMADCNT_ISR CA5C                         _convert_dac_raw 9F2C  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma C2E4                   __end_of_wait_lcd_done C7D6  
              __end_of_cal_current_zero AA98        __end_of_TMR3_SetInterruptHandler C5C2  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler C572  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize B7FA  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B5C2  
                            ??_TMR6_ISR 0026                       __end_of___asfladd B6B4  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler C63A   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler C612                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR C7F8                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan CAAC  
                               u1001_28 993E                                 u1003_20 9958  
                               u1003_21 9952                                 u1007_24 9A3E  
                               u1007_25 9A3A                                 u1043_48 C7A0  
                               u1035_48 C77C                                 u1300_28 C758  
                               u1037_28 C710                                 u1046_28 C734  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR CA38  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1077_44 B5A8                                 u1077_45 B5A2  
                               _U2ERRIR 003DE1                                 u1293_20 3A46  
                               u1295_20 3B10                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B5C2                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E40  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch C3D2  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C080  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C9DE              __end_of_set_load_relay_two C9CE  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 9094                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C926                                 __Lparam 0000  
              __end_of_UART1_Initialize BDDE                       __end_of_hid_input 9CDA  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 79D6  
                               ___fladd 466A                                 ___aomod 8110  
                               ___fldiv 4E26                                 ___awdiv 97D2  
                               ___flneg BD4E                                 ___awmod A044  
                               ___flmul 3E40                                 ___flsub BEB4  
                               ___fltol 939A                                 ___lodiv 921A  
                               ___lomod 9A62               __end_of_UART1_Receive_ISR C81A  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A66A                                 __pcinit A74E  
              __end_of_mode_lamp_bright CA1A                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C9FE  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 BABA                                 __ptext2 C81A  
                               __ptext3 C214                                 __ptext4 C248  
                               __ptext5 C27C                                 __ptext6 9F2C  
                               __ptext7 ACCE                                 __ptext8 B5C2  
                               __ptext9 C2E4                       __end_of_esr_check 747E  
                     _UART2_Receive_ISR C83A                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C982  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 8110                                 _isalpha BEFA  
                               us663999 7C40                                 _isdigit C374  
                               _ivln2_h FB17                                 us674999 833E  
                               us764999 9B92                               _T3CONbits 003FA6  
                               us759999 9384                                 _mode_sw 00A9  
                     __end_of_lp_filter 8D5E                                 _islower C314  
                               _isspace BBC8                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac ACCE  
              __end_of_UART2_Initialize BABA                                 _isupper C344  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A380  
                               _tolower B440                   __size_of_display_help 0008  
                               _utctime 01EE                 __end_of_convert_dac_raw A044  
                 __size_of_display_info 0008                                 _strncmp 8350  
                               _toupper B3BC                    end_of_initialization A828  
             __size_of_convert_adc_data 00B8                      _check_enter_button B6B4  
                     __end_of_set_dac_a C2B0                       __end_of_set_dac_b C27C  
                             i1u1316_20 9730     __end_of_UART2_SetRxInterruptHandler C522  
           _UART2_SetRxInterruptHandler C4FA                               i2u1080_48 C418  
                             i2u1082_48 B832                               i2u1082_49 B846  
                             i2u1084_48 C678                 check_day_time@day_delay 0041  
                             i2u1086_48 C6A0                               i2u1088_48 C6C8  
                     __end_of_set_vterm C8B4                       __end_of_vfpfcnvrt 33D2  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd CAB8  
             __end_of_UART2_Receive_ISR C85A                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B63C             __size_of_current_sensor_cal 029A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc CABE                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler C59A                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler C54A                            _display_help CA96  
                 _TMR5_InterruptHandler 007F                            _display_info CA8E  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B8CC  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler C662  
           _ADCC_SetADIInterruptHandler C63A                              _update_lcd A270  
                       _calc_model_data 5CDC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc BABA  
                       _DMA1_Initialize B726                     __end_of_check_range B544  
                            _start_bsoc C7D6                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C956                   __end_of_get_vterm_ptr C3D2  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs C214            __end_of_INTERRUPT_Initialize B932  
                            _vterm_dump 9CDA                          __end_of___flge 966E  
                        __end_of___fleq AB5C    __end_of_INT0_DefaultInterruptHandler CACC  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler CACA  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize BB6E  
                         __pidataBIGRAM 6B8E                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 684E             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 71A6  
                        __end_of_printf B9F8                __end_of_DMA1_DMADCNT_ISR CA66  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C790  
                        __end_of_strcpy A902                          __end_of_strlen B178  
                   start_initialization A74E    __end_of_TMR5_DefaultInterruptHandler C1A8  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler C170  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BEB4  
                 __end_of_INT1_CallBack C724               __size_of_set_display_info 001E  
                           __end_of_pad A270                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd C000                          _switch_handler 9920  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DC                   __end_of___fpclassifyf 9094  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR CA46  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR CA74  
                   __end_of_hid_display 878C              __end_of_send_port_data_dma BC6C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C4AA  
                         _ringBufS_init C482                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize C2E4  
               __end_of_calc_model_data 6128                           _send_lcd_data C6DC  
                   __end_of_help_button C170         __end_of_eaDogM_WriteStringAtPos B030  
                   __end_of_BVSOC_TABLE FA07                               ___asfladd B63C  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B790                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A                             _check_range B4C4  
      __end_of_INT0_SetInterruptHandler C612                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9A62                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize C96C                _UART1_RxInterruptHandler 008B  
              _UART2_TxInterruptHandler 008E                               __end_of_T FA97  
                      _convert_adc_data AC16                               _calc_bsoc 33D2  
             __size_of_ringBufS_put_dma 00AA                            _init_display A580  
                __end_of_DMA1_DMAOR_ISR CA7E                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0082                      calc_ror_data@bcror 0068  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize BBC8  
                    calc_ror_data@bvror 006C                  _PIN_MANAGER_Initialize B2A2  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set CAB2  
                         __pmediumconst F936                               __ptext100 CA96  
                             __ptext101 B6B4                               __ptext110 5CDC  
                             __ptext102 9094                               __ptext111 CAB8  
                             __ptext103 AD84                               __ptext120 C4FA  
                             __ptext112 C7D6                               __ptext104 53A0  
                             __ptext121 BD96                               __ptext113 8BA2  
                             __ptext105 B9F8                               __ptext130 C956  
                             __ptext122 C522                               __ptext114 BEB4  
                             __ptext106 C8D2                               __ptext131 C96C  
                             __ptext123 C458                               __ptext115 466A  
                             __ptext107 899E                               __ptext140 BB6E  
                             __ptext132 C998                               __ptext124 C54A  
                             __ptext116 3E40                               __ptext108 4E26  
                             __ptext141 B726                               __ptext133 B2A2  
                             __ptext125 BDDE                               __ptext117 BD04  
                             __ptext109 950C                               __ptext150 A66C  
                             __ptext142 CA46                               __ptext134 C982  
                             __ptext126 C572                               __ptext118 BA5A  
                             __ptext151 C040                               __ptext143 B790  
                             __ptext135 B8CC                               __ptext127 BE26  
                             __ptext119 C4D2                               __ptext160 CAC8  
                             __ptext152 C724                               __ptext144 C612  
                             __ptext136 CA9E                               __ptext128 C59A  
                             __ptext161 33D2                               __ptext153 C170  
                             __ptext145 C63A                               __ptext137 C2B0  
                             __ptext129 C93E                               __ptext170 B544  
                             __ptext162 BC1A                               __ptext154 8D5E  
                             __ptext146 C0C0                               __ptext138 C5C2  
                             __ptext171 CACC                               __ptext163 CA50  
                             __ptext155 C9EE                               __ptext147 C700  
                             __ptext139 C5EA                               __ptext180 C90C  
                             __ptext172 CACE                               __ptext164 B63C  
                             __ptext156 CA1A                               __ptext148 CAC6  
                             __ptext181 C790                               __ptext173 B7FC  
                             __ptext165 CA28                               __ptext157 9670  
                             __ptext149 9920                               __ptext182 BC6C  
                             __ptext174 C664                               __ptext166 C76C  
                             __ptext158 C080                               __ptext183 CA38  
                             __ptext175 C7F8                               __ptext167 CACA  
                             __ptext159 C748                               __ptext184 CA5C  
                             __ptext176 C68C                               __ptext168 CAC0  
                             __ptext185 CA68                               __ptext177 C42C  
                             __ptext169 C400                               __ptext186 CA74  
                             __ptext178 C6B4                               __ptext187 0000  
                             __ptext179 C83A                               _hid_input 9BA2  
                    __end_of_StartTimer C040                      _set_load_relay_one C9CE  
                    _set_load_relay_two C9BE                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR C400                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 71A6  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7ECA                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 8BA2  
                           _hid_display 8570                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B8CC  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR CA28  
                              _INT1_ISR C0C0                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a C27C                               _set_dac_b C248  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C748  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C896  
                   __size_of_update_lcd 0110                             _help_button C138  
                              _TMR3_ISR 9670                             _BVSOC_TABLE F937  
                              _TMR5_ISR A66C                                _TMR6_ISR C90C  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2426                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C724  
                            _ADCON0bits 003EF8                      __end_of_check_help 899E  
                             _start_lcd CAB2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C790  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc CAB8                        _set_display_info C8B4  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A762  
                             copy_data1 A788                               copy_data2 A7AA  
              _INT0_SetInterruptHandler C5EA                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C4FA             _UART2_SetTxInterruptHandler C4D2  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000              __end_of_current_sensor_cal 79D6  
              __size_of_conv_raw_result 04BC                           _wait_lcd_done C7B4  
                          _send_lcd_cmd BFC0                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC           __size_of_get_ac_charger_relay 000E  
                      __size_of___aomod 0240                         _adc_int_handler CACE  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140           __size_of_set_ac_charger_relay 0010  
                    __end_of_get_switch C3FE                 __size_of_check_day_time 01A0  
                 __end_of_DMA1_DMAA_ISR CA72                      ___fpclassifyf@F463 0064  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 899E                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand CA0C                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 A580                                __ptext11 C6DC  
                              __ptext20 71A6                                __ptext12 BF80  
                              __ptext21 C0FE                                __ptext13 BFC0  
                              __ptext30 773C                                __ptext22 B932  
                              __ptext14 C85A                                __ptext31 A48A  
                              __ptext23 C9AC                                __ptext15 C482  
                              __ptext40 C3A4                                __ptext32 C3D2  
                              __ptext24 CA7E                                __ptext16 7ECA  
                              __ptext41 C1DE                                __ptext33 A9D2  
                              __ptext25 CAA6                                __ptext17 AB5C  
                              __ptext50 CAB2                                __ptext42 A270  
                              __ptext34 B4C4                                __ptext26 CA86  
                              __ptext18 8570                                __ptext51 B210  
                              __ptext43 AF88                                __ptext35 AC16  
                              __ptext27 C9BE                                __ptext19 9BA2  
                              __ptext60 684E                                __ptext52 6EBA  
                              __ptext44 C878                                __ptext36 B866  
                              __ptext28 C9CE                                __ptext61 9A62  
                              __ptext53 B996                                __ptext45 C7B4  
                              __ptext37 878C                                __ptext29 C9FE  
                              __ptext70 8EFE                                __ptext62 921A  
                              __ptext54 AE32                                __ptext46 BB14  
                              __ptext38 9CDA                                __ptext71 939A  
                              __ptext63 8350                                __ptext55 2426  
                              __ptext47 BCBA                                __ptext39 A380  
                              __ptext80 B334                                __ptext72 BD4E  
                              __ptext64 747E                                __ptext56 6128  
                              __ptext48 B030                                __ptext81 A15C  
                              __ptext73 AA98                                __ptext65 0000  
                              __ptext57 B3BC                                __ptext49 CAAC  
                              __ptext90 C896                                __ptext82 B0D6  
                              __ptext74 A044                                __ptext66 B440  
                              __ptext58 C314                                __ptext91 C9DE  
                              __ptext83 B178                                __ptext75 97D2  
                              __ptext67 C344                                __ptext59 BEFA  
                              __ptext92 C8B4                                __ptext84 9E08  
                              __ptext76 585C                                __ptext68 A82E  
                              __ptext93 C926                                __ptext85 C8F0  
                              __ptext77 BE6E                                __ptext69 64E2  
                              __ptext94 CA0C                                __ptext86 AEDE  
                              __ptext78 8110                                __ptext95 BF3E  
                              __ptext87 7C56                                __ptext79 79D6  
                              __ptext96 C138                                __ptext88 BBC8  
                              __ptext97 C4AA                                __ptext89 C374  
                              __ptext98 C000                                __ptext99 CA8E  
                      __size_of_isupper 0030                                us1205999 7490  
                              us1136999 5876                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1217999 68B4  
                              us1226999 61A8                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma AEDE  
                  __end_of_Volts_to_SOC AC16                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 11E2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0021                   __end_of_init_port_dma C314  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0088                               stoa@F1166 0100  
                    ??_DMA1_DMASCNT_ISR 0027            __end_of_ADCC_StartConversion C9BE  
                              _spi_link 01D0                                _wdtdelay BB14  
            __end_of_UART2_Transmit_ISR C458                                _spinners A48A  
                              _vfprintf AE32                __end_of_convert_adc_data ACCE  
            __end_of_PWM8_LoadDutyValue BF80    __end_of_TMR3_DefaultInterruptHandler CACA  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler CAC8  
  __end_of_INT1_DefaultInterruptHandler CAC8   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler CAC6                      _send_port_data_dma BC1A  
                         ??_Default_ISR 0021                             _uart1RxHead 0047  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0044  
                           _uart1RxTail 00AE                          _get_raw_result C8D2  
                           _uart2TxHead 00AC                             _uart2RxTail 00AB  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 00C6                            _wait_lcd_set CAAC  
                    _EXT_INT_Initialize C2B0    __end_of_TMR6_DefaultInterruptHandler BCBA  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler BC6C  
                     _send_lcd_data_dma BCBA    __end_of_ADCC_DefaultInterruptHandler CACE  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler CACC  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long BF80          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C9EE                   __end_of_calc_ror_data 921A  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B0D6  
                 __end_of_mode_lamp_dim C93E                 __end_of_adc_int_handler CAD0  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A380  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc BB14  
                    __end_of_start_bsoc C7F8                          _FVR_Initialize CA9E  
                __end_of_get_raw_result C8F0                        _send_lcd_cmd_dma C878  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C5EA               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma BD04  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BFC0  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR CAC6  
        __end_of_PIN_MANAGER_Initialize B334               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9E08                 _eaDogM_WriteStringAtPos AF88  
                         _get_vterm_ptr C3A4                          _check_adc_scan CA86  
             __size_of_UART2_Initialize 0060  
