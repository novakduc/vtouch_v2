

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 12 05:01:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=4,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=4,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=4,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=4,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=4,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=4,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=4,class=CODE,delta=1
   117                           	psect	text98,global,reloc=4,class=CODE,delta=1
   118                           	psect	text99,global,reloc=4,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   125                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   128                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   129  0000                     
   130                           ; Version 2.05
   131                           ; Generated 20/12/2018 GMT
   132                           ; 
   133                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   134                           ; All rights reserved.
   135                           ; 
   136                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   137                           ; 
   138                           ; Redistribution and use in source and binary forms, with or without modification, are
   139                           ; permitted provided that the following conditions are met:
   140                           ; 
   141                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   142                           ;        conditions and the following disclaimer.
   143                           ; 
   144                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   145                           ;        of conditions and the following disclaimer in the documentation and/or other
   146                           ;        materials provided with the distribution.
   147                           ; 
   148                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   149                           ;        software without specific prior written permission.
   150                           ; 
   151                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   152                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   153                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   154                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   155                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   156                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   157                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   158                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   159                           ; 
   160                           ; 
   161                           ; Code-generator required, PIC18F57K42 Definitions
   162                           ; 
   163                           ; SFR Addresses
   164  0000                     
   165 ;;_mode	offset	0
   166 ;;_rxData	offset	0
   167 ;;_t_link	offset=-1 (param)
   168 ;;_stream	offset=-6 (param)
   169 ;;_function	offset=-7 (param)
   170 ;;_f	offset	0
   171 ;;_ap	offset	5
   172 ;;_s	offset=-2 (param)
   173 ;;_fmt	offset=-3 (param)
   174 ;;_rxData	offset	0
   175 ;;_r_link	offset=-1 (param)
   176 ;;_k	offset	0
   177 ;;_checksum	offset	2
   178 ;;_i	offset	4
   179 ;;_byte_block	offset=-2 (param)
   180 ;;_length	offset=-3 (param)
   181 ;;_fake	offset=-4 (param)
   182 ;;_i	offset	0
   183 ;;_sum	offset	2
   184 ;;_byte_block	offset=-2 (param)
   185 ;;_byte_count	offset=-4 (param)
   186 ;;_bufData	offset=-1 (param)
   187 ;;_txData	offset=-1 (param)
   188 ;;_byte_block	offset=-1 (param)
   189 ;;_clear	offset=-2 (param)
   190 ;;_numMilliseconds	offset=-2 (param)
   191 ;;_timer	offset=-1 (param)
   192 ;;_timer	offset=-1 (param)
   193 ;;_count	offset=-3 (param)
   194 ;;_readValue	offset	0
   195 ;;_cmd	offset=-1 (param)
   196 ;;_cmd	offset=-1 (param)
   197 ;;_data	offset=-1 (param)
   198 ;;__this	offset=-2 (param)
   199 ;;_r	offset=-1 (param)
   200 ;;_c	offset=-2 (param)
   201 ;;_strPtr	offset=-3 (param)
   202 ;;_strPtr	offset=-1 (param)
   203 ;;_cmd	offset=-1 (param)
   204 ;;_strPtr	offset=-1 (param)
   205 ;;_delay	offset=-4 (param)
   206 ;;__this	offset=-2 (param)
   207 ;;_clearBuffer	offset=-3 (param)
   208 ;;_s	offset	0
   209 ;;_k	offset	2
   210 ;;_dest	offset=-2 (param)
   211 ;;_c	offset=-4 (param)
   212 ;;_n	offset=-6 (param)
   213 ;;_ap	offset	0
   214 ;;_fmt	offset=-2 (param)
   215 ;;_cfmt	offset	0
   216 ;;_fp	offset=-2 (param)
   217 ;;_fmt	offset=-3 (param)
   218 ;;_ap	offset=-5 (param)
   219 ;;_ll	offset	0
   220 ;;_cp	offset	8
   221 ;;_c	offset	10
   222 ;;_fp	offset=-2 (param)
   223 ;;_fmt	offset=-4 (param)
   224 ;;_ap	offset=-6 (param)
   225 ;;_r	offset	0
   226 ;;_l	offset	1
   227 ;;__l	offset=-1 (param)
   228 ;;__r	offset=-2 (param)
   229 ;;_n	offset=-4 (param)
   230 ;;_nuls	offset	0
   231 ;;_l	offset	7
   232 ;;_p	offset	9
   233 ;;_cp	offset	11
   234 ;;_w	offset	13
   235 ;;_i	offset	15
   236 ;;_fp	offset=-2 (param)
   237 ;;_s	offset=-4 (param)
   238 ;;_dtoa$3797	offset	0
   239 ;;_n	offset	2
   240 ;;_i	offset	10
   241 ;;_s	offset	12
   242 ;;_w	offset	14
   243 ;;_p	offset	16
   244 ;;_fp	offset=-2 (param)
   245 ;;_d	offset=-10 (param)
   246 ;;_a	offset=-2 (param)
   247 ;;_sign	offset	0
   248 ;;_counter	offset	1
   249 ;;_dividend	offset=-8 (param)
   250 ;;_divisor	offset=-16 (param)
   251 ;;_quotient	offset	0
   252 ;;_sign	offset	8
   253 ;;_counter	offset	9
   254 ;;_dividend	offset=-8 (param)
   255 ;;_divisor	offset=-16 (param)
   256 ;;_w	offset	0
   257 ;;_fp	offset=-2 (param)
   258 ;;_c	offset=-3 (param)
   259 ;;_w	offset	0
   260 ;;_i	offset	2
   261 ;;_fp	offset=-2 (param)
   262 ;;_buf	offset=-4 (param)
   263 ;;_p	offset=-6 (param)
   264 ;;_a	offset	0
   265 ;;_s	offset=-2 (param)
   266 ;;_i	offset	0
   267 ;;_c	offset	2
   268 ;;_s	offset=-2 (param)
   269 ;;_fp	offset=-4 (param)
   270 ;;_c	offset=-2 (param)
   271 ;;_fp	offset=-4 (param)
   272 ;;_c	offset=-1 (param)
   273 ;;__this	offset=-2 (param)
   274 ;;_c	offset=-3 (param)
   275 ;;_InterruptHandler	offset=-3 (param)
   276 ;;_InterruptHandler	offset=-3 (param)
   277 ;;_InterruptHandler	offset=-3 (param)
   278 ;;_InterruptHandler	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_state	offset	0
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_i	offset	0
   287 ;;_timerVal	offset=-2 (param)
   288                           
   289                           	psect	idataCOMRAM
   290  0059BA                     __pidataCOMRAM:
   291                           	opt callstack 0
   292                           
   293                           ;initializer for r_protocol@retry
   294  0059BA  03                 	db	3
   295                           
   296                           	psect	idataBANK0
   297  005996                     __pidataBANK0:
   298                           	opt callstack 0
   299                           
   300                           ;initializer for stoa@F1144
   301  005996  28                 	db	40
   302  005997  6E                 	db	110
   303  005998  75                 	db	117
   304  005999  6C                 	db	108
   305  00599A  6C                 	db	108
   306  00599B  29                 	db	41
   307  00599C  00                 	db	0
   308                           
   309                           	psect	idataBANK1
   310  00464A                     __pidataBANK1:
   311                           	opt callstack 0
   312                           
   313                           ;initializer for _H10
   314  00464A  0000               	dw	0
   315  00464C  0001               	dw	1
   316  00464E  0000               	dw	0
   317  004650  01                 	db	1
   318  004651  80                 	db	128
   319  004652  01                 	db	1
   320  004653  81                 	db	129
   321  004654  00                 	db	0
   322  004655  00                 	db	0
   323  004656  0A                 	db	10
   324  004657  0000               	dw	0
   325  004659  00                 	db	0
   326  00465A  00                 	db	0
   327  00465B  00                 	db	0
   328  00465C  00                 	db	0
   329  00465D  00                 	db	0
   330  00465E  00                 	db	0
   331  00465F  00                 	db	0
   332  004660  00                 	db	0
   333  004661  00                 	db	0
   334  004662  00                 	db	0
   335  004663  0A                 	db	10
   336  004664  0000               	dw	0
   337  004666  0001               	dw	1
   338  004668  0000               	dw	0
   339  00466A  01                 	db	1
   340  00466B  80                 	db	128
   341  00466C  00                 	db	0
   342  00466D  01                 	db	1
   343  00466E  00                 	db	0
   344  00466F  00                 	db	0
   345  004670  0A                 	db	10
   346  004671  0000               	dw	0
   347  004673  0001               	dw	1
   348  004675  0000               	dw	0
   349  004677  01                 	db	1
   350  004678  80                 	db	128
   351  004679  01                 	db	1
   352  00467A  81                 	db	129
   353  00467B  00                 	db	0
   354  00467C  80                 	db	128
   355  00467D  0A                 	db	10
   356  00467E  0000               	dw	0
   357  004680  0001               	dw	1
   358  004682  0000               	dw	0
   359  004684  01                 	db	1
   360  004685  80                 	db	128
   361  004686  11                 	db	17
   362  004687  82                 	db	130
   363  004688  00                 	db	0
   364  004689  00                 	db	0
   365  00468A  0A                 	db	10
   366                           
   367                           ;initializer for _H27
   368  00468B  0000               	dw	0
   369  00468D  00                 	db	0
   370  00468E  00                 	db	0
   371  00468F  00                 	db	0
   372  004690  00                 	db	0
   373  004691  00                 	db	0
   374  004692  00                 	db	0
   375  004693  00                 	db	0
   376  004694  00                 	db	0
   377  004695  00                 	db	0
   378  004696  00                 	db	0
   379  004697  00                 	db	0
   380  004698  00                 	db	0
   381  004699  00                 	db	0
   382  00469A  00                 	db	0
   383  00469B  00                 	db	0
   384  00469C  00                 	db	0
   385  00469D  00                 	db	0
   386  00469E  0001               	dw	1
   387  0046A0  0000               	dw	0
   388  0046A2  01                 	db	1
   389  0046A3  80                 	db	128
   390  0046A4  0D                 	db	13
   391  0046A5  81                 	db	129
   392  0046A6  00                 	db	0
   393  0046A7  80                 	db	128
   394  0046A8  1B                 	db	27
   395                           
   396                           ;initializer for _H12
   397  0046A9  0000               	dw	0
   398  0046AB  00                 	db	0
   399  0046AC  01                 	db	1
   400  0046AD  0001               	dw	1
   401  0046AF  0000               	dw	0
   402  0046B1  01                 	db	1
   403  0046B2  80                 	db	128
   404  0046B3  02                 	db	2
   405  0046B4  01                 	db	1
   406  0046B5  00                 	db	0
   407  0046B6  00                 	db	0
   408  0046B7  0C                 	db	12
   409  0046B8  0000               	dw	0
   410  0046BA  00                 	db	0
   411  0046BB  01                 	db	1
   412  0046BC  0001               	dw	1
   413  0046BE  0000               	dw	0
   414  0046C0  01                 	db	1
   415  0046C1  80                 	db	128
   416  0046C2  0D                 	db	13
   417  0046C3  81                 	db	129
   418  0046C4  00                 	db	0
   419  0046C5  00                 	db	0
   420  0046C6  0C                 	db	12
   421                           
   422                           ;initializer for _H24
   423  0046C7  0000               	dw	0
   424  0046C9  30                 	db	48
   425  0046CA  31                 	db	49
   426  0046CB  30                 	db	48
   427  0046CC  39                 	db	57
   428  0046CD  31                 	db	49
   429  0046CE  31                 	db	49
   430  0046CF  30                 	db	48
   431  0046D0  38                 	db	56
   432  0046D1  34                 	db	52
   433  0046D2  36                 	db	54
   434  0046D3  30                 	db	48
   435  0046D4  30                 	db	48
   436  0046D5  00                 	db	0
   437  0046D6  00                 	db	0
   438  0046D7  0001               	dw	1
   439  0046D9  0000               	dw	0
   440  0046DB  01                 	db	1
   441  0046DC  80                 	db	128
   442  0046DD  12                 	db	18
   443  0046DE  02                 	db	2
   444  0046DF  00                 	db	0
   445  0046E0  00                 	db	0
   446  0046E1  18                 	db	24
   447                           
   448                           ;initializer for _H17
   449  0046E2  0000               	dw	0
   450  0046E4  00                 	db	0
   451  0046E5  01                 	db	1
   452  0046E6  00                 	db	0
   453  0046E7  01                 	db	1
   454  0046E8  21                 	db	33
   455  0046E9  02                 	db	2
   456  0046EA  01                 	db	1
   457  0046EB  0001               	dw	1
   458  0046ED  0000               	dw	0
   459  0046EF  01                 	db	1
   460  0046F0  80                 	db	128
   461  0046F1  0E                 	db	14
   462  0046F2  01                 	db	1
   463  0046F3  00                 	db	0
   464  0046F4  00                 	db	0
   465  0046F5  11                 	db	17
   466                           
   467                           ;initializer for _H14
   468  0046F6  0000               	dw	0
   469  0046F8  00                 	db	0
   470  0046F9  41                 	db	65
   471  0046FA  11                 	db	17
   472  0046FB  01                 	db	1
   473  0046FC  0001               	dw	1
   474  0046FE  0000               	dw	0
   475  004700  01                 	db	1
   476  004701  80                 	db	128
   477  004702  04                 	db	4
   478  004703  01                 	db	1
   479  004704  00                 	db	0
   480  004705  00                 	db	0
   481  004706  0E                 	db	14
   482                           
   483                           ;initializer for _H13
   484  004707  0000               	dw	0
   485  004709  00                 	db	0
   486  00470A  01                 	db	1
   487  00470B  21                 	db	33
   488  00470C  0001               	dw	1
   489  00470E  0000               	dw	0
   490  004710  01                 	db	1
   491  004711  80                 	db	128
   492  004712  0C                 	db	12
   493  004713  06                 	db	6
   494  004714  00                 	db	0
   495  004715  00                 	db	0
   496  004716  0D                 	db	13
   497  0000                     _IVTADL	set	14493
   498  0000                     _IVTADH	set	14494
   499  0000                     _IVTADU	set	14495
   500  0000                     _PIE8bits	set	14744
   501  0000                     _PIR8bits	set	14760
   502  0000                     _SCANPR	set	14839
   503  0000                     _DMA2PR	set	14836
   504  0000                     _DMA1PR	set	14835
   505  0000                     _MAINPR	set	14834
   506  0000                     _ISRPR	set	14833
   507  0000                     _PIE2bits	set	14738
   508  0000                     _PIR2bits	set	14754
   509  0000                     _PIE9bits	set	14745
   510  0000                     _PIR9bits	set	14761
   511  0000                     _PIE6bits	set	14742
   512  0000                     _PIE3bits	set	14739
   513  0000                     _PMD7	set	14791
   514  0000                     _PMD6	set	14790
   515  0000                     _PMD5	set	14789
   516  0000                     _PMD4	set	14788
   517  0000                     _PMD3	set	14787
   518  0000                     _PMD2	set	14786
   519  0000                     _PMD1	set	14785
   520  0000                     _PMD0	set	14784
   521  0000                     _OSCTUNE	set	14814
   522  0000                     _OSCFRQ	set	14815
   523  0000                     _OSCEN	set	14813
   524  0000                     _OSCCON3	set	14811
   525  0000                     _OSCCON1	set	14809
   526  0000                     _IPR8bits	set	14728
   527  0000                     _IPR9bits	set	14729
   528  0000                     _IPR7bits	set	14727
   529  0000                     _IPR5bits	set	14725
   530  0000                     _IPR1bits	set	14721
   531  0000                     _IPR3bits	set	14723
   532  0000                     _IPR6bits	set	14726
   533  0000                     _IPR2bits	set	14722
   534  0000                     _PIE7bits	set	14743
   535  0000                     _PIE5bits	set	14741
   536  0000                     _PIE1bits	set	14737
   537  0000                     _PIR7bits	set	14759
   538  0000                     _PIR5bits	set	14757
   539  0000                     _PIR1bits	set	14753
   540  0000                     _PLLR	set	118496
   541  0000                     _SPI1SDIPPS	set	15071
   542  0000                     _RC6PPS	set	14870
   543  0000                     _RC5PPS	set	14869
   544  0000                     _RA6PPS	set	14854
   545  0000                     _RA5PPS	set	14853
   546  0000                     _RA4PPS	set	14852
   547  0000                     _SPI1SCKPPS	set	15070
   548  0000                     _U1RXPPS	set	15077
   549  0000                     _INT1PPS	set	15041
   550  0000                     _INT2PPS	set	15042
   551  0000                     _INT0PPS	set	15040
   552  0000                     _RC3PPS	set	14867
   553  0000                     _RB6PPS	set	14862
   554  0000                     _U2RXPPS	set	15080
   555  0000                     _SLRCONF	set	14995
   556  0000                     _SLRCONE	set	14979
   557  0000                     _SLRCOND	set	14963
   558  0000                     _SLRCONC	set	14947
   559  0000                     _SLRCONB	set	14931
   560  0000                     _SLRCONA	set	14915
   561  0000                     _ODCOND	set	14962
   562  0000                     _ODCONC	set	14946
   563  0000                     _ODCONB	set	14930
   564  0000                     _ODCONA	set	14914
   565  0000                     _ODCONF	set	14994
   566  0000                     _ODCONE	set	14978
   567  0000                     _WPUC	set	14945
   568  0000                     _WPUA	set	14913
   569  0000                     _WPUB	set	14929
   570  0000                     _WPUE	set	14977
   571  0000                     _WPUF	set	14993
   572  0000                     _WPUD	set	14961
   573  0000                     _ANSELA	set	14912
   574  0000                     _ANSELF	set	14992
   575  0000                     _ANSELE	set	14976
   576  0000                     _ANSELB	set	14928
   577  0000                     _ANSELC	set	14944
   578  0000                     _ANSELD	set	14960
   579  0000                     _DMA1SSA	set	15353
   580  0000                     _DMA1DSZ	set	15342
   581  0000                     _DMA1SSZ	set	15351
   582  0000                     _DMA1DSA	set	15344
   583  0000                     _DMA1CON0bits	set	15356
   584  0000                     _DMA1CON1bits	set	15357
   585  0000                     _DMA1CON0	set	15356
   586  0000                     _DMA1AIRQ	set	15358
   587  0000                     _DMA1SIRQ	set	15359
   588  0000                     _DMA1CON1	set	15357
   589  0000                     _CLC1CON	set	15476
   590  0000                     _CLC1GLS3	set	15485
   591  0000                     _CLC1GLS2	set	15484
   592  0000                     _CLC1GLS1	set	15483
   593  0000                     _CLC1GLS0	set	15482
   594  0000                     _CLC1SEL3	set	15481
   595  0000                     _CLC1SEL2	set	15480
   596  0000                     _CLC1SEL1	set	15479
   597  0000                     _CLC1SEL0	set	15478
   598  0000                     _CLC1POL	set	15477
   599  0000                     _CLKRCON	set	15589
   600  0000                     _CLKRCLK	set	15590
   601  0000                     _MD1CARL	set	15613
   602  0000                     _MD1CARH	set	15614
   603  0000                     _MD1SRC	set	15612
   604  0000                     _MD1CON1bits	set	15611
   605  0000                     _MD1CON0bits	set	15610
   606  0000                     _SPI1INTFbits	set	15642
   607  0000                     _SPI1RXB	set	15632
   608  0000                     _SPI1TXB	set	15633
   609  0000                     _SPI1TCNTL	set	15634
   610  0000                     _SPI1CON0	set	15636
   611  0000                     _SPI1CLK	set	15644
   612  0000                     _SPI1BAUD	set	15641
   613  0000                     _SPI1CON2	set	15638
   614  0000                     _SPI1CON1	set	15637
   615  0000                     _U2RXB	set	15824
   616  0000                     _U2TXB	set	15826
   617  0000                     _U2ERRIE	set	15842
   618  0000                     _U2ERRIR	set	15841
   619  0000                     _U2UIR	set	15840
   620  0000                     _U2FIFO	set	15839
   621  0000                     _U2BRGH	set	15838
   622  0000                     _U2BRGL	set	15837
   623  0000                     _U2CON2	set	15836
   624  0000                     _U2CON1	set	15835
   625  0000                     _U2CON0	set	15834
   626  0000                     _U2P3L	set	15832
   627  0000                     _U2P2L	set	15830
   628  0000                     _U2P1L	set	15828
   629  0000                     _U1RXB	set	15848
   630  0000                     _U1TXB	set	15850
   631  0000                     _U1ERRIE	set	15866
   632  0000                     _U1ERRIR	set	15865
   633  0000                     _U1UIR	set	15864
   634  0000                     _U1FIFO	set	15863
   635  0000                     _U1BRGH	set	15862
   636  0000                     _U1BRGL	set	15861
   637  0000                     _U1CON2	set	15860
   638  0000                     _U1CON1	set	15859
   639  0000                     _U1CON0	set	15858
   640  0000                     _U1P3H	set	15857
   641  0000                     _U1P3L	set	15856
   642  0000                     _U1P2H	set	15855
   643  0000                     _U1P2L	set	15854
   644  0000                     _U1P1H	set	15853
   645  0000                     _U1P1L	set	15852
   646  0000                     _ADCON0	set	16120
   647  0000                     _ADCLK	set	16127
   648  0000                     _ADACT	set	16126
   649  0000                     _ADREF	set	16125
   650  0000                     _ADSTAT	set	16124
   651  0000                     _ADCON3	set	16123
   652  0000                     _ADCON2	set	16122
   653  0000                     _ADCON1	set	16121
   654  0000                     _ADPREH	set	16119
   655  0000                     _ADPREL	set	16118
   656  0000                     _ADCAP	set	16117
   657  0000                     _ADACQH	set	16116
   658  0000                     _ADACQL	set	16115
   659  0000                     _ADPCH	set	16113
   660  0000                     _ADRPT	set	16108
   661  0000                     _ADACCU	set	16106
   662  0000                     _ADSTPTH	set	16101
   663  0000                     _ADSTPTL	set	16100
   664  0000                     _ADUTHH	set	16097
   665  0000                     _ADUTHL	set	16096
   666  0000                     _ADLTHH	set	16095
   667  0000                     _ADLTHL	set	16094
   668  0000                     _NCO1CONbits	set	16190
   669  0000                     _NCO1INCL	set	16187
   670  0000                     _NCO1INCH	set	16188
   671  0000                     _NCO1INCU	set	16189
   672  0000                     _NCO1ACCL	set	16184
   673  0000                     _NCO1ACCH	set	16185
   674  0000                     _NCO1ACCU	set	16186
   675  0000                     _NCO1CLK	set	16191
   676  0000                     _NCO1CON	set	16190
   677  0000                     _LATCbits	set	16316
   678  0000                     _PORTDbits	set	16333
   679  0000                     _LATDbits	set	16317
   680  0000                     _LATEbits	set	16318
   681  0000                     _T5CONbits	set	16282
   682  0000                     _T5CON	set	16282
   683  0000                     _TMR5L	set	16280
   684  0000                     _TMR5H	set	16281
   685  0000                     _T5CLK	set	16285
   686  0000                     _T5GATE	set	16284
   687  0000                     _T5GCON	set	16283
   688  0000                     _T6CON	set	16276
   689  0000                     _T6TMR	set	16274
   690  0000                     _T6PR	set	16275
   691  0000                     _T6RST	set	16279
   692  0000                     _T6HLT	set	16277
   693  0000                     _T6CLKCON	set	16278
   694  0000                     _TRISD	set	16325
   695  0000                     _TRISC	set	16324
   696  0000                     _TRISB	set	16323
   697  0000                     _TRISA	set	16322
   698  0000                     _TRISF	set	16327
   699  0000                     _TRISE	set	16326
   700  0000                     _LATC	set	16316
   701  0000                     _LATB	set	16315
   702  0000                     _LATF	set	16319
   703  0000                     _LATA	set	16314
   704  0000                     _LATD	set	16317
   705  0000                     _LATE	set	16318
   706  0000                     _IVTLOCKbits	set	16340
   707  0000                     _IVTLOCK	set	16340
   708  0000                     _INTCON0bits	set	16338
   709  0000                     _GIE	set	130711
   710                           
   711                           	psect	smallconst
   712  002000                     __psmallconst:
   713                           	opt callstack 0
   714  002000  00                 	db	0
   715  002001                     STR_12:
   716  002001  20                 	db	32
   717  002002  52                 	db	82	;'R'
   718  002003  25                 	db	37
   719  002004  64                 	db	100	;'d'
   720  002005  20                 	db	32
   721  002006  54                 	db	84	;'T'
   722  002007  25                 	db	37
   723  002008  64                 	db	100	;'d'
   724  002009  20                 	db	32
   725  00200A  46                 	db	70	;'F'
   726  00200B  52                 	db	82	;'R'
   727  00200C  25                 	db	37
   728  00200D  64                 	db	100	;'d'
   729  00200E  20                 	db	32
   730  00200F  46                 	db	70	;'F'
   731  002010  53                 	db	83	;'S'
   732  002011  25                 	db	37
   733  002012  64                 	db	100	;'d'
   734  002013  20                 	db	32
   735  002014  23                 	db	35
   736  002015  00                 	db	0
   737  002016                     STR_8:
   738  002016  45                 	db	69	;'E'
   739  002017  20                 	db	32
   740  002018  52                 	db	82	;'R'
   741  002019  25                 	db	37
   742  00201A  64                 	db	100	;'d'
   743  00201B  20                 	db	32
   744  00201C  54                 	db	84	;'T'
   745  00201D  25                 	db	37
   746  00201E  64                 	db	100	;'d'
   747  00201F  20                 	db	32
   748  002020  45                 	db	69	;'E'
   749  002021  25                 	db	37
   750  002022  64                 	db	100	;'d'
   751  002023  20                 	db	32
   752  002024  41                 	db	65	;'A'
   753  002025  25                 	db	37
   754  002026  64                 	db	100	;'d'
   755  002027  20                 	db	32
   756  002028  23                 	db	35
   757  002029  00                 	db	0
   758  00202A                     STR_9:
   759  00202A  20                 	db	32
   760  00202B  48                 	db	72	;'H'
   761  00202C  4F                 	db	79	;'O'
   762  00202D  53                 	db	83	;'S'
   763  00202E  54                 	db	84	;'T'
   764  00202F  20                 	db	32
   765  002030  4D                 	db	77	;'M'
   766  002031  4F                 	db	79	;'O'
   767  002032  44                 	db	68	;'D'
   768  002033  45                 	db	69	;'E'
   769  002034  20                 	db	32
   770  002035  25                 	db	37
   771  002036  6C                 	db	108	;'l'
   772  002037  64                 	db	100	;'d'
   773  002038  20                 	db	32
   774  002039  20                 	db	32
   775  00203A  20                 	db	32
   776  00203B  23                 	db	35
   777  00203C  00                 	db	0
   778  00203D                     STR_11:
   779  00203D  20                 	db	32
   780  00203E  4C                 	db	76	;'L'
   781  00203F  4F                 	db	79	;'O'
   782  002040  47                 	db	71	;'G'
   783  002041  20                 	db	32
   784  002042  4D                 	db	77	;'M'
   785  002043  4F                 	db	79	;'O'
   786  002044  44                 	db	68	;'D'
   787  002045  45                 	db	69	;'E'
   788  002046  20                 	db	32
   789  002047  20                 	db	32
   790  002048  20                 	db	32
   791  002049  20                 	db	32
   792  00204A  20                 	db	32
   793  00204B  20                 	db	32
   794  00204C  23                 	db	35
   795  00204D  00                 	db	0
   796  00204E                     STR_10:
   797  00204E  20                 	db	32
   798  00204F  45                 	db	69	;'E'
   799  002050  51                 	db	81	;'Q'
   800  002051  55                 	db	85	;'U'
   801  002052  49                 	db	73	;'I'
   802  002053  50                 	db	80	;'P'
   803  002054  20                 	db	32
   804  002055  4D                 	db	77	;'M'
   805  002056  4F                 	db	79	;'O'
   806  002057  44                 	db	68	;'D'
   807  002058  45                 	db	69	;'E'
   808  002059  20                 	db	32
   809  00205A  20                 	db	32
   810  00205B  20                 	db	32
   811  00205C  20                 	db	32
   812  00205D  23                 	db	35
   813  00205E  00                 	db	0
   814  00205F                     STR_1:
   815  00205F  20                 	db	32
   816  002060  52                 	db	82	;'R'
   817  002061  56                 	db	86	;'V'
   818  002062  49                 	db	73	;'I'
   819  002063  20                 	db	32
   820  002064  48                 	db	72	;'H'
   821  002065  4F                 	db	79	;'O'
   822  002066  53                 	db	83	;'S'
   823  002067  54                 	db	84	;'T'
   824  002068  20                 	db	32
   825  002069  54                 	db	84	;'T'
   826  00206A  45                 	db	69	;'E'
   827  00206B  53                 	db	83	;'S'
   828  00206C  54                 	db	84	;'T'
   829  00206D  45                 	db	69	;'E'
   830  00206E  52                 	db	82	;'R'
   831  00206F  00                 	db	0
   832  002070                     STR_4:
   833  002070  20                 	db	32
   834  002071  46                 	db	70	;'F'
   835  002072  47                 	db	71	;'G'
   836  002073  42                 	db	66	;'B'
   837  002074  40                 	db	64	;'@'
   838  002075  4D                 	db	77	;'M'
   839  002076  43                 	db	67	;'C'
   840  002077  48                 	db	72	;'H'
   841  002078  50                 	db	80	;'P'
   842  002079  20                 	db	32
   843  00207A  46                 	db	70	;'F'
   844  00207B  41                 	db	65	;'A'
   845  00207C  42                 	db	66	;'B'
   846  00207D  34                 	db	52	;'4'
   847  00207E  00                 	db	0
   848  00207F                     STR_5:
   849  00207F  20                 	db	32
   850  002080  53                 	db	83	;'S'
   851  002081  25                 	db	37
   852  002082  64                 	db	100	;'d'
   853  002083  46                 	db	70	;'F'
   854  002084  25                 	db	37
   855  002085  64                 	db	100	;'d'
   856  002086  20                 	db	32
   857  002087  23                 	db	35
   858  002088  20                 	db	32
   859  002089  20                 	db	32
   860  00208A  20                 	db	32
   861  00208B  20                 	db	32
   862  00208C  00                 	db	0
   863  00208D                     STR_2:
   864  00208D  20                 	db	32
   865  00208E  56                 	db	86	;'V'
   866  00208F  65                 	db	101	;'e'
   867  002090  72                 	db	114	;'r'
   868  002091  73                 	db	115	;'s'
   869  002092  69                 	db	105	;'i'
   870  002093  6F                 	db	111	;'o'
   871  002094  6E                 	db	110	;'n'
   872  002095  20                 	db	32
   873  002096  25                 	db	37
   874  002097  73                 	db	115	;'s'
   875  002098  00                 	db	0
   876  002099                     STR_7:
   877  002099  20                 	db	32
   878  00209A  4F                 	db	79	;'O'
   879  00209B  4B                 	db	75	;'K'
   880  00209C  20                 	db	32
   881  00209D  23                 	db	35
   882  00209E  00                 	db	0
   883  00209F                     STR_6:
   884  00209F  20                 	db	32
   885  0020A0  4F                 	db	79	;'O'
   886  0020A1  4B                 	db	75	;'K'
   887  0020A2  51                 	db	81	;'Q'
   888  0020A3  23                 	db	35
   889  0020A4  00                 	db	0
   890  0020A5                     STR_3:
   891  0020A5  30                 	db	48	;'0'
   892  0020A6  2E                 	db	46
   893  0020A7  36                 	db	54	;'6'
   894  0020A8  33                 	db	51	;'3'
   895  0020A9  41                 	db	65	;'A'
   896  0020AA  00                 	db	0
   897  0020AB                     STR_16:
   898  0020AB  6C                 	db	108	;'l'
   899  0020AC  64                 	db	100	;'d'
   900  0020AD  00                 	db	0
   901  0020AE                     STR_20:
   902  0020AE  6C                 	db	108	;'l'
   903  0020AF  69                 	db	105	;'i'
   904  0020B0  00                 	db	0
   905  0020B1                     STR_14:
   906  0020B1  25                 	db	37
   907  0020B2  63                 	db	99	;'c'
   908  0020B3  00                 	db	0
   909  0000                     
   910                           ; #config settings
   911  0020B4  00                 	db	0	; dummy byte at the end
   912  0000                     
   913                           	psect	cinit
   914  0047E0                     __pcinit:
   915                           	opt callstack 0
   916  0047E0                     start_initialization:
   917                           	opt callstack 0
   918  0047E0                     __initialization:
   919                           	opt callstack 0
   920                           
   921                           ; Initialize objects allocated to BANK1 (205 bytes)
   922                           ; load TBLPTR registers with __pidataBANK1
   923  0047E0  0E4A               	movlw	low __pidataBANK1
   924  0047E2  6EF6               	movwf	tblptrl,c
   925  0047E4  0E46               	movlw	high __pidataBANK1
   926  0047E6  6EF7               	movwf	tblptrh,c
   927  0047E8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   928  0047EA  6EF8               	movwf	tblptru,c
   929  0047EC  EE00  F100         	lfsr	0,__pdataBANK1
   930  0047F0  EE20 F0CD          	lfsr	2,205
   931  0047F4                     copy_data0:
   932  0047F4  0009               	tblrd		*+
   933  0047F6  006F FFD7 FFEE     	movff	tablat,postinc0
   934  0047FC  50DD               	movf	postdec2,w,c
   935  0047FE  50D9               	movf	fsr2l,w,c
   936  004800  E1F9               	bnz	copy_data0
   937                           
   938                           ; Initialize objects allocated to BANK0 (7 bytes)
   939                           ; load TBLPTR registers with __pidataBANK0
   940  004802  0E96               	movlw	low __pidataBANK0
   941  004804  6EF6               	movwf	tblptrl,c
   942  004806  0E59               	movlw	high __pidataBANK0
   943  004808  6EF7               	movwf	tblptrh,c
   944  00480A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   945  00480C  6EF8               	movwf	tblptru,c
   946  00480E  EE00  F0F1         	lfsr	0,__pdataBANK0
   947  004812  EE20 F007          	lfsr	2,7
   948  004816                     copy_data1:
   949  004816  0009               	tblrd		*+
   950  004818  006F FFD7 FFEE     	movff	tablat,postinc0
   951  00481E  50DD               	movf	postdec2,w,c
   952  004820  50D9               	movf	fsr2l,w,c
   953  004822  E1F9               	bnz	copy_data1
   954                           
   955                           ; Initialize objects allocated to COMRAM (1 bytes)
   956                           ; load TBLPTR registers with __pidataCOMRAM
   957  004824  0EBA               	movlw	low __pidataCOMRAM
   958  004826  6EF6               	movwf	tblptrl,c
   959  004828  0E59               	movlw	high __pidataCOMRAM
   960  00482A  6EF7               	movwf	tblptrh,c
   961  00482C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   962  00482E  6EF8               	movwf	tblptru,c
   963  004830  0009               	tblrd		*+	;fetch initializer
   964  004832  006F FFD4  F05A    	movff	tablat,__pdataCOMRAM
   965                           
   966                           ; Clear objects allocated to BANK3 (134 bytes)
   967  004838  EE00  F300         	lfsr	0,__pbssBANK3
   968  00483C  0E86               	movlw	134
   969  00483E                     clear_0:
   970  00483E  6AEE               	clrf	postinc0,c
   971  004840  06E8               	decf	wreg,f,c
   972  004842  E1FD               	bnz	clear_0
   973                           
   974                           ; Clear objects allocated to BANK2 (256 bytes)
   975  004844  EE00  F200         	lfsr	0,__pbssBANK2
   976  004848  EE20 F100          	lfsr	2,256
   977  00484C                     clear_1:
   978  00484C  6AEE               	clrf	postinc0,c
   979  00484E  50DD               	movf	postdec2,w,c
   980  004850  50D9               	movf	fsr2l,w,c
   981  004852  E1FC               	bnz	clear_1
   982  004854  50DA               	movf	fsr2h,w,c
   983  004856  E1FA               	bnz	clear_1
   984                           
   985                           ; Clear objects allocated to BANK1 (32 bytes)
   986  004858  EE00  F1CD         	lfsr	0,__pbssBANK1
   987  00485C  0E20               	movlw	32
   988  00485E                     clear_2:
   989  00485E  6AEE               	clrf	postinc0,c
   990  004860  06E8               	decf	wreg,f,c
   991  004862  E1FD               	bnz	clear_2
   992                           
   993                           ; Clear objects allocated to BANK0 (145 bytes)
   994  004864  EE00  F060         	lfsr	0,__pbssBANK0
   995  004868  0E91               	movlw	145
   996  00486A                     clear_3:
   997  00486A  6AEE               	clrf	postinc0,c
   998  00486C  06E8               	decf	wreg,f,c
   999  00486E  E1FD               	bnz	clear_3
  1000                           
  1001                           ; Clear objects allocated to COMRAM (55 bytes)
  1002  004870  EE00  F001         	lfsr	0,__pbssCOMRAM
  1003  004874  0E37               	movlw	55
  1004  004876                     clear_4:
  1005  004876  6AEE               	clrf	postinc0,c
  1006  004878  06E8               	decf	wreg,f,c
  1007  00487A  E1FD               	bnz	clear_4
  1008                           
  1009                           ;
  1010                           ; Setup IVTBASE
  1011                           ;
  1012  00487C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1013  00487E  6ED5               	movwf	213,c
  1014  004880  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1015  004882  6ED6               	movwf	214,c
  1016  004884  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1017  004886  6ED7               	movwf	215,c
  1018  004888                     end_of_initialization:
  1019                           	opt callstack 0
  1020  004888                     __end_of__initialization:
  1021                           	opt callstack 0
  1022  004888  0100               	movlb	0
  1023  00488A  EFF2  F014         	goto	_main	;jump to C main() function
  1024                           
  1025                           	psect	bssCOMRAM
  1026  000001                     __pbssCOMRAM:
  1027                           	opt callstack 0
  1028  000001                     _TMR5_InterruptHandler:
  1029                           	opt callstack 0
  1030  000001                     	ds	3
  1031  000004                     _TMR6_InterruptHandler:
  1032                           	opt callstack 0
  1033  000004                     	ds	3
  1034  000007                     _ADCC_ADI_InterruptHandler:
  1035                           	opt callstack 0
  1036  000007                     	ds	3
  1037  00000A                     _UART1_TxInterruptHandler:
  1038                           	opt callstack 0
  1039  00000A                     	ds	3
  1040  00000D                     _UART1_RxInterruptHandler:
  1041                           	opt callstack 0
  1042  00000D                     	ds	3
  1043  000010                     _UART2_TxInterruptHandler:
  1044                           	opt callstack 0
  1045  000010                     	ds	3
  1046  000013                     _UART2_RxInterruptHandler:
  1047                           	opt callstack 0
  1048  000013                     	ds	3
  1049  000016                     _INT2_InterruptHandler:
  1050                           	opt callstack 0
  1051  000016                     	ds	3
  1052  000019                     _INT1_InterruptHandler:
  1053                           	opt callstack 0
  1054  000019                     	ds	3
  1055  00001C                     _INT0_InterruptHandler:
  1056                           	opt callstack 0
  1057  00001C                     	ds	3
  1058  00001F                     _width:
  1059                           	opt callstack 0
  1060  00001F                     	ds	2
  1061  000021                     _prec:
  1062                           	opt callstack 0
  1063  000021                     	ds	2
  1064  000023                     _flags:
  1065                           	opt callstack 0
  1066  000023                     	ds	2
  1067  000025                     TMR5_ISR@CountCallBack:
  1068                           	opt callstack 0
  1069  000025                     	ds	2
  1070  000027                     _timer5ReloadVal:
  1071                           	opt callstack 0
  1072  000027                     	ds	2
  1073  000029                     t_protocol@requeue:
  1074                           	opt callstack 0
  1075  000029                     	ds	1
  1076  00002A                     t_protocol@retry:
  1077                           	opt callstack 0
  1078  00002A                     	ds	1
  1079  00002B                     r_protocol@rxData_l:
  1080                           	opt callstack 0
  1081  00002B                     	ds	1
  1082  00002C                     _uart2RxCount:
  1083                           	opt callstack 0
  1084  00002C                     	ds	1
  1085  00002D                     _uart2RxTail:
  1086                           	opt callstack 0
  1087  00002D                     	ds	1
  1088  00002E                     _uart2RxHead:
  1089                           	opt callstack 0
  1090  00002E                     	ds	1
  1091  00002F                     _uart2TxBufferRemaining:
  1092                           	opt callstack 0
  1093  00002F                     	ds	1
  1094  000030                     _uart2TxTail:
  1095                           	opt callstack 0
  1096  000030                     	ds	1
  1097  000031                     _uart2TxHead:
  1098                           	opt callstack 0
  1099  000031                     	ds	1
  1100  000032                     _uart1RxCount:
  1101                           	opt callstack 0
  1102  000032                     	ds	1
  1103  000033                     _uart1RxTail:
  1104                           	opt callstack 0
  1105  000033                     	ds	1
  1106  000034                     _uart1RxHead:
  1107                           	opt callstack 0
  1108  000034                     	ds	1
  1109  000035                     _uart1TxBufferRemaining:
  1110                           	opt callstack 0
  1111  000035                     	ds	1
  1112  000036                     _uart1TxTail:
  1113                           	opt callstack 0
  1114  000036                     	ds	1
  1115  000037                     _uart1TxHead:
  1116                           	opt callstack 0
  1117  000037                     	ds	1
  1118                           
  1119                           	psect	dataCOMRAM
  1120  00005A                     __pdataCOMRAM:
  1121                           	opt callstack 0
  1122  00005A                     r_protocol@retry:
  1123                           	opt callstack 0
  1124  00005A                     	ds	1
  1125                           
  1126                           	psect	bssBANK0
  1127  000060                     __pbssBANK0:
  1128                           	opt callstack 0
  1129  000060                     _r_block:
  1130                           	opt callstack 0
  1131  000060                     	ds	13
  1132  00006D                     _spi_link:
  1133                           	opt callstack 0
  1134  00006D                     	ds	12
  1135  000079                     _tickCount:
  1136                           	opt callstack 0
  1137  000079                     	ds	12
  1138  000085                     secs_II_message@block:
  1139                           	opt callstack 0
  1140  000085                     	ds	7
  1141  00008C                     t_protocol@block:
  1142                           	opt callstack 0
  1143  00008C                     	ds	7
  1144  000093                     wdtdelay@dcount:
  1145                           	opt callstack 0
  1146  000093                     	ds	4
  1147  000097                     _nout:
  1148                           	opt callstack 0
  1149  000097                     	ds	2
  1150  000099                     run_checksum@sum:
  1151                           	opt callstack 0
  1152  000099                     	ds	2
  1153  00009B                     _V:
  1154                           	opt callstack 0
  1155  00009B                     	ds	86
  1156                           
  1157                           	psect	dataBANK0
  1158  0000F1                     __pdataBANK0:
  1159                           	opt callstack 0
  1160  0000F1                     stoa@F1144:
  1161                           	opt callstack 0
  1162  0000F1                     	ds	7
  1163                           
  1164                           	psect	bssBANK1
  1165  0001CD                     __pbssBANK1:
  1166                           	opt callstack 0
  1167  0001CD                     _dbuf:
  1168                           	opt callstack 0
  1169  0001CD                     	ds	32
  1170                           
  1171                           	psect	dataBANK1
  1172  000100                     __pdataBANK1:
  1173                           	opt callstack 0
  1174  000100                     _H10:
  1175                           	opt callstack 0
  1176  000100                     	ds	65
  1177  000141                     _H27:
  1178                           	opt callstack 0
  1179  000141                     	ds	30
  1180  00015F                     _H12:
  1181                           	opt callstack 0
  1182  00015F                     	ds	30
  1183  00017D                     _H24:
  1184                           	opt callstack 0
  1185  00017D                     	ds	27
  1186  000198                     _H17:
  1187                           	opt callstack 0
  1188  000198                     	ds	20
  1189  0001AC                     _H14:
  1190                           	opt callstack 0
  1191  0001AC                     	ds	17
  1192  0001BD                     _H13:
  1193                           	opt callstack 0
  1194  0001BD                     	ds	16
  1195                           
  1196                           	psect	bssBANK2
  1197  000200                     __pbssBANK2:
  1198                           	opt callstack 0
  1199  000200                     _uart2RxBuffer:
  1200                           	opt callstack 0
  1201  000200                     	ds	64
  1202  000240                     _uart2TxBuffer:
  1203                           	opt callstack 0
  1204  000240                     	ds	64
  1205  000280                     _uart1RxBuffer:
  1206                           	opt callstack 0
  1207  000280                     	ds	64
  1208  0002C0                     _uart1TxBuffer:
  1209                           	opt callstack 0
  1210  0002C0                     	ds	64
  1211                           
  1212                           	psect	bssBANK3
  1213  000300                     __pbssBANK3:
  1214                           	opt callstack 0
  1215  000300                     _ring_buf2:
  1216                           	opt callstack 0
  1217  000300                     	ds	67
  1218  000343                     _ring_buf1:
  1219                           	opt callstack 0
  1220  000343                     	ds	67
  1221                           
  1222                           	psect	cstackCOMRAM
  1223  000058                     __pcstackCOMRAM:
  1224                           	opt callstack 0
  1225  000058                     ??_TMR6_ISR:
  1226  000058                     
  1227                           ; 1 bytes @ 0x0
  1228  000058                     	ds	1
  1229  000059                     ??_TMR5_ISR:
  1230                           
  1231                           ; 1 bytes @ 0x1
  1232  000059                     	ds	1
  1233                           
  1234 ;;
  1235 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 304 in file "main.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  mode            1  [STACK] enum E16895
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1  [STACK] void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 3F/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels required when called:   14
  1259 ;; This function calls:
  1260 ;;		_SYSTEM_Initialize
  1261 ;;		_UART1_put_buffer
  1262 ;;		_WaitMs
  1263 ;;		_eaDogM_WriteCommand
  1264 ;;		_eaDogM_WriteStringAtPos
  1265 ;;		_init_display
  1266 ;;		_r_protocol
  1267 ;;		_sprintf
  1268 ;;		_t_protocol
  1269 ;;		_wait_lcd_done
  1270 ;; This function is called by:
  1271 ;;		Startup code after reset
  1272 ;; This function uses a reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text0
  1276  0029E4                     __ptext0:
  1277                           	opt callstack 0
  1278  0029E4                     _main:
  1279                           	opt callstack 0
  1280                           
  1281                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1282  0029E4  52E6               	movf	postinc1,f,c
  1283                           
  1284                           ;main.c: 306:  UI_STATES mode;;main.c: 309:  SYSTEM_Initialize();
  1285                           
  1286                           ;incstack = 0
  1287  0029E6  ECB3  F028         	call	_SYSTEM_Initialize	;wreg free
  1288                           
  1289                           ; BSR set to: 60
  1290                           ;main.c: 312:  (INTCON0bits.GIEH = 1);
  1291  0029EA  8ED2               	bsf	16338,7,c	;volatile
  1292                           
  1293                           ; BSR set to: 60
  1294                           ;main.c: 315:  (INTCON0bits.GIEL = 1);
  1295  0029EC  8CD2               	bsf	16338,6,c	;volatile
  1296                           
  1297                           ; BSR set to: 60
  1298                           ;main.c: 317:  V.ui_state = UI_STATE_INIT;
  1299  0029EE  0100               	movlb	0	; () banked
  1300  0029F0  6B9C               	clrf	(_V+1)& (0+255),b
  1301  0029F2  D180               	goto	l7414
  1302  0029F4                     l7280:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 322:    init_display();
  1306  0029F4  EC47  F022         	call	_init_display	;wreg free
  1307                           
  1308                           ; BSR set to: 61
  1309                           ;main.c: 323:    eaDogM_WriteCommand(0b00001100);
  1310  0029F8  0E0C               	movlw	12
  1311  0029FA  6EE6               	movwf	postinc1,c
  1312  0029FC  EC86  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1313                           
  1314                           ; BSR set to: 0
  1315  002A00  90BD               	bcf	16317,0,c	;volatile
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 325:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1319  002A02  A4CD               	btfss	16333,2,c	;volatile
  1320  002A04  D003               	goto	u4430
  1321  002A06  6A43               	clrf	btemp+11,c
  1322  002A08  2A43               	incf	btemp+11,f,c
  1323  002A0A  D001               	goto	u4438
  1324  002A0C                     u4430:
  1325  002A0C  6A43               	clrf	btemp+11,c
  1326  002A0E                     u4438:
  1327  002A0E  0E01               	movlw	1
  1328  002A10  2643               	addwf	btemp+11,f,c
  1329                           
  1330                           ;stkvar	_mode @ sp[(-1)+0]
  1331  002A12  0EFF               	movlw	-1
  1332  002A14  0060  F10F  FFE3   	movff	btemp+11,plusw1
  1333                           
  1334                           ;main.c: 326:    if (!PORTDbits.RD3) {
  1335  002A1A  B6CD               	btfsc	16333,3,c	;volatile
  1336  002A1C  D004               	goto	l7292
  1337                           
  1338                           ;main.c: 327:     do { LATDbits.LATD0 = 1; } while(0);
  1339  002A1E  80BD               	bsf	16317,0,c	;volatile
  1340                           
  1341                           ;main.c: 328:     mode = UI_STATE_LOG;
  1342                           ;stkvar	_mode @ sp[(-1)+0]
  1343  002A20  0EFF               	movlw	-1
  1344  002A22  6AE3               	clrf	plusw1,c
  1345  002A24  84E3               	bsf	plusw1,2,c
  1346  002A26                     l7292:
  1347                           
  1348                           ;main.c: 330:    V.ui_state = mode;
  1349                           ;stkvar	_mode @ sp[(-1)+0]
  1350  002A26  0EFF               	movlw	-1
  1351  002A28  006F FF8C  F09C    	movff	plusw1,_V+1
  1352                           
  1353                           ;main.c: 331:    V.s_state = SEQ_STATE_INIT;
  1354  002A2E  0100               	movlb	0	; () banked
  1355  002A30  6B9B               	clrf	_V& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;main.c: 361:    sprintf(V.buf, " RVI HOST TESTER");
  1359  002A32  0E5F               	movlw	STR_1& (0+255)
  1360  002A34  6EE6               	movwf	postinc1,c
  1361  002A36  0E9B               	movlw	_V& (0+255)
  1362  002A38  0F04               	addlw	4
  1363  002A3A  6EE6               	movwf	postinc1,c
  1364  002A3C  0E02               	movlw	2
  1365  002A3E  6EE6               	movwf	postinc1,c
  1366  002A40  EC8C  F023         	call	_sprintf	;wreg free
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;main.c: 362:    wait_lcd_done();
  1370  002A44  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;main.c: 363:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1374  002A48  0E9B               	movlw	_V& (0+255)
  1375  002A4A  0F04               	addlw	4
  1376  002A4C  6EE6               	movwf	postinc1,c
  1377  002A4E  0E00               	movlw	0
  1378  002A50  6EE6               	movwf	postinc1,c
  1379  002A52  0E00               	movlw	0
  1380  002A54  6EE6               	movwf	postinc1,c
  1381  002A56  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1382                           
  1383                           ; BSR set to: 59
  1384                           ;main.c: 364:    sprintf(V.buf, " Version %s", "0.63A");
  1385  002A5A  0EA5               	movlw	STR_3& (0+255)
  1386  002A5C  6E43               	movwf	btemp+11,c
  1387  002A5E  0060  F10F  FFE6   	movff	btemp+11,postinc1
  1388  002A64  0E20               	movlw	high __smallconst
  1389  002A66  6EE6               	movwf	postinc1,c
  1390  002A68  0E8D               	movlw	STR_2& (0+255)
  1391  002A6A  6EE6               	movwf	postinc1,c
  1392  002A6C  0E9B               	movlw	_V& (0+255)
  1393  002A6E  0F04               	addlw	4
  1394  002A70  6EE6               	movwf	postinc1,c
  1395  002A72  0E04               	movlw	4
  1396  002A74  6EE6               	movwf	postinc1,c
  1397  002A76  EC8C  F023         	call	_sprintf	;wreg free
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;main.c: 365:    wait_lcd_done();
  1401  002A7A  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;main.c: 366:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1405  002A7E  0E9B               	movlw	_V& (0+255)
  1406  002A80  0F04               	addlw	4
  1407  002A82  6EE6               	movwf	postinc1,c
  1408  002A84  0E00               	movlw	0
  1409  002A86  6EE6               	movwf	postinc1,c
  1410  002A88  0E01               	movlw	1
  1411  002A8A  6EE6               	movwf	postinc1,c
  1412  002A8C  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1413                           
  1414                           ; BSR set to: 59
  1415                           ;main.c: 367:    sprintf(V.buf, " FGB@MCHP FAB4");
  1416  002A90  0E70               	movlw	STR_4& (0+255)
  1417  002A92  6EE6               	movwf	postinc1,c
  1418  002A94  0E9B               	movlw	_V& (0+255)
  1419  002A96  0F04               	addlw	4
  1420  002A98  6EE6               	movwf	postinc1,c
  1421  002A9A  0E02               	movlw	2
  1422  002A9C  6EE6               	movwf	postinc1,c
  1423  002A9E  EC8C  F023         	call	_sprintf	;wreg free
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;main.c: 368:    wait_lcd_done();
  1427  002AA2  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;main.c: 369:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1431  002AA6  0E9B               	movlw	_V& (0+255)
  1432  002AA8  0F04               	addlw	4
  1433  002AAA  6EE6               	movwf	postinc1,c
  1434  002AAC  0E00               	movlw	0
  1435  002AAE  6EE6               	movwf	postinc1,c
  1436  002AB0  0E02               	movlw	2
  1437  002AB2  6EE6               	movwf	postinc1,c
  1438  002AB4  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1439                           
  1440                           ; BSR set to: 59
  1441                           ;main.c: 371:    WaitMs(3000);
  1442  002AB8  0EB8               	movlw	184
  1443  002ABA  6EE6               	movwf	postinc1,c
  1444  002ABC  0E0B               	movlw	11
  1445  002ABE  6EE6               	movwf	postinc1,c
  1446  002AC0  ECDC  F029         	call	_WaitMs	;wreg free
  1447                           
  1448                           ;main.c: 372:    break;
  1449  002AC4  D12D               	goto	l1242
  1450  002AC6                     l1219:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 376:     V.r_l_state = LINK_STATE_IDLE;
  1454  002AC6  6B9D               	clrf	(_V+2)& (0+255),b
  1455                           
  1456                           ;main.c: 377:     V.t_l_state = LINK_STATE_IDLE;
  1457  002AC8  6B9E               	clrf	(_V+3)& (0+255),b
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;main.c: 378:     V.s_state = SEQ_STATE_RX;
  1461  002ACA  0E01               	movlw	1
  1462  002ACC  6F9B               	movwf	_V& (0+255),b
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;main.c: 380:     WaitMs(50);
  1466  002ACE  0E32               	movlw	50
  1467  002AD0  6EE6               	movwf	postinc1,c
  1468  002AD2  0E00               	movlw	0
  1469  002AD4  6EE6               	movwf	postinc1,c
  1470  002AD6  ECDC  F029         	call	_WaitMs	;wreg free
  1471                           
  1472                           ;main.c: 381:     UART1_put_buffer(0x05);
  1473  002ADA  0E05               	movlw	5
  1474  002ADC  6EE6               	movwf	postinc1,c
  1475  002ADE  ECC7  F029         	call	_UART1_put_buffer	;wreg free
  1476                           
  1477                           ;main.c: 383:     break;
  1478  002AE2  D0C9               	goto	l7384
  1479  002AE4                     l7322:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;main.c: 388:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1483  002AE4  0E9B               	movlw	_V& (0+255)
  1484  002AE6  0F02               	addlw	2
  1485  002AE8  6EE6               	movwf	postinc1,c
  1486  002AEA  ECC4  F016         	call	_r_protocol	;wreg free
  1487  002AEE  0E04               	movlw	4
  1488  002AF0  1838               	xorwf	btemp,w,c
  1489  002AF2  A4D8               	btfss	status,2,c
  1490  002AF4  D02F               	goto	l7342
  1491                           
  1492                           ;main.c: 389:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1493  002AF6  0100               	movlb	0	; () banked
  1494  002AF8  51E8               	movf	(_V+77)& (0+255),w,b
  1495  002AFA  6EE6               	movwf	postinc1,c
  1496  002AFC  0E00               	movlw	0
  1497  002AFE  6EE6               	movwf	postinc1,c
  1498  002B00  51E7               	movf	(_V+76)& (0+255),w,b
  1499  002B02  6EE6               	movwf	postinc1,c
  1500  002B04  0E00               	movlw	0
  1501  002B06  6EE6               	movwf	postinc1,c
  1502  002B08  0E7F               	movlw	STR_5& (0+255)
  1503  002B0A  6EE6               	movwf	postinc1,c
  1504  002B0C  0E9B               	movlw	_V& (0+255)
  1505  002B0E  0F04               	addlw	4
  1506  002B10  6EE6               	movwf	postinc1,c
  1507  002B12  0E06               	movlw	6
  1508  002B14  6EE6               	movwf	postinc1,c
  1509  002B16  EC8C  F023         	call	_sprintf	;wreg free
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 390:      V.buf[11] = 0;
  1513  002B1A  6BAA               	clrf	(_V+15)& (0+255),b
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;main.c: 391:      wait_lcd_done();
  1517  002B1C  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;main.c: 392:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1521  002B20  0E9B               	movlw	_V& (0+255)
  1522  002B22  0F04               	addlw	4
  1523  002B24  6EE6               	movwf	postinc1,c
  1524  002B26  0E00               	movlw	0
  1525  002B28  6EE6               	movwf	postinc1,c
  1526  002B2A  0E00               	movlw	0
  1527  002B2C  6EE6               	movwf	postinc1,c
  1528  002B2E  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1529                           
  1530                           ; BSR set to: 59
  1531                           ;main.c: 394:      WaitMs(5);
  1532  002B32  0E05               	movlw	5
  1533  002B34  6EE6               	movwf	postinc1,c
  1534  002B36  0E00               	movlw	0
  1535  002B38  6EE6               	movwf	postinc1,c
  1536  002B3A  ECDC  F029         	call	_WaitMs	;wreg free
  1537                           
  1538                           ;main.c: 396:      if (V.wbit) {
  1539  002B3E  0100               	movlb	0	; () banked
  1540  002B40  A3EF               	btfss	(_V+84)& (0+255),1,b
  1541  002B42  D006               	goto	l7340
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 397:       V.s_state = SEQ_STATE_TX;
  1545  002B44  0E02               	movlw	2
  1546  002B46  6F9B               	movwf	_V& (0+255),b
  1547                           
  1548                           ;main.c: 398:       V.failed_send = 0;
  1549  002B48  0E87               	movlw	-121
  1550  002B4A  17EF               	andwf	(_V+84)& (0+255),f,b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 399:       V.t_l_state = LINK_STATE_IDLE;
  1554  002B4C  6B9E               	clrf	(_V+3)& (0+255),b
  1555                           
  1556                           ;main.c: 400:      } else {
  1557  002B4E  D002               	goto	l7342
  1558  002B50                     l7340:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 401:       V.s_state = SEQ_STATE_TRIGGER;
  1562  002B50  0E03               	movlw	3
  1563  002B52  6F9B               	movwf	_V& (0+255),b
  1564  002B54                     l7342:
  1565                           
  1566                           ;main.c: 404:     if (V.r_l_state == LINK_STATE_ERROR)
  1567  002B54  0E06               	movlw	6
  1568  002B56  0100               	movlb	0	; () banked
  1569  002B58  199D               	xorwf	(_V+2)& (0+255),w,b
  1570  002B5A  A4D8               	btfss	status,2,c
  1571  002B5C  D08C               	goto	l7384
  1572  002B5E                     u4470:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 405:      V.s_state = SEQ_STATE_ERROR;
  1576  002B5E  0E06               	movlw	6
  1577  002B60  6F9B               	movwf	_V& (0+255),b
  1578  002B62  D089               	goto	l7384
  1579  002B64                     l7346:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;main.c: 411:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1583  002B64  0E9B               	movlw	_V& (0+255)
  1584  002B66  0F03               	addlw	3
  1585  002B68  6EE6               	movwf	postinc1,c
  1586  002B6A  EC1A  F01B         	call	_t_protocol	;wreg free
  1587  002B6E  0E04               	movlw	4
  1588  002B70  1838               	xorwf	btemp,w,c
  1589  002B72  A4D8               	btfss	status,2,c
  1590  002B74  D003               	goto	l7350
  1591                           
  1592                           ;main.c: 412:      V.s_state = SEQ_STATE_TRIGGER;
  1593  002B76  0E03               	movlw	3
  1594  002B78  0100               	movlb	0	; () banked
  1595  002B7A  6F9B               	movwf	_V& (0+255),b
  1596  002B7C                     l7350:
  1597                           
  1598                           ;main.c: 414:     if (V.t_l_state == LINK_STATE_ERROR)
  1599  002B7C  0E06               	movlw	6
  1600  002B7E  0100               	movlb	0	; () banked
  1601  002B80  199E               	xorwf	(_V+3)& (0+255),w,b
  1602  002B82  B4D8               	btfsc	status,2,c
  1603  002B84  D7EC               	goto	u4470
  1604  002B86  D077               	goto	l7384
  1605  002B88                     l1229:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 418:     if (V.queue) {
  1609  002B88  A9F0               	btfss	(_V+85)& (0+255),4,b
  1610  002B8A  D01C               	goto	l7364
  1611                           
  1612                           ; BSR set to: 0
  1613  002B8C  A4BE               	btfss	16318,2,c	;volatile
  1614  002B8E  D002               	goto	u4510
  1615  002B90  0E01               	movlw	1
  1616  002B92  D001               	goto	u4516
  1617  002B94                     u4510:
  1618  002B94  0E00               	movlw	0
  1619  002B96                     u4516:
  1620  002B96  0AFF               	xorlw	255
  1621  002B98  6E43               	movwf	btemp+11,c
  1622  002B9A  4643               	rlncf	btemp+11,f,c
  1623  002B9C  4643               	rlncf	btemp+11,f,c
  1624  002B9E  50BE               	movf	16318,w,c	;volatile
  1625  002BA0  1843               	xorwf	btemp+11,w,c
  1626  002BA2  0BFB               	andlw	-5
  1627  002BA4  1843               	xorwf	btemp+11,w,c
  1628  002BA6  6EBE               	movwf	16318,c	;volatile
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 420:      V.r_l_state = LINK_STATE_IDLE;
  1632  002BA8  6B9D               	clrf	(_V+2)& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;main.c: 421:      V.t_l_state = LINK_STATE_IDLE;
  1636  002BAA  6B9E               	clrf	(_V+3)& (0+255),b
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 422:      V.s_state = SEQ_STATE_TX;
  1640  002BAC  0E02               	movlw	2
  1641  002BAE  6F9B               	movwf	_V& (0+255),b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 423:      sprintf(V.buf, " OKQ#");
  1645  002BB0  0E9F               	movlw	STR_6& (0+255)
  1646  002BB2  6EE6               	movwf	postinc1,c
  1647  002BB4  0E9B               	movlw	_V& (0+255)
  1648  002BB6  0F04               	addlw	4
  1649  002BB8  6EE6               	movwf	postinc1,c
  1650  002BBA  0E02               	movlw	2
  1651  002BBC  6EE6               	movwf	postinc1,c
  1652  002BBE  EC8C  F023         	call	_sprintf	;wreg free
  1653                           
  1654                           ;main.c: 424:     } else {
  1655  002BC2  D00B               	goto	l7368
  1656  002BC4                     l7364:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;main.c: 425:      V.s_state = SEQ_STATE_DONE;
  1660  002BC4  0E05               	movlw	5
  1661  002BC6  6F9B               	movwf	_V& (0+255),b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 426:      sprintf(V.buf, " OK #");
  1665  002BC8  0E99               	movlw	STR_7& (0+255)
  1666  002BCA  6EE6               	movwf	postinc1,c
  1667  002BCC  0E9B               	movlw	_V& (0+255)
  1668  002BCE  0F04               	addlw	4
  1669  002BD0  6EE6               	movwf	postinc1,c
  1670  002BD2  0E02               	movlw	2
  1671  002BD4  6EE6               	movwf	postinc1,c
  1672  002BD6  EC8C  F023         	call	_sprintf	;wreg free
  1673  002BDA                     l7368:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;main.c: 428:     wait_lcd_done();
  1677  002BDA  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 429:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1681  002BDE  0E9B               	movlw	_V& (0+255)
  1682  002BE0  0F04               	addlw	4
  1683  002BE2  6EE6               	movwf	postinc1,c
  1684  002BE4  0E0B               	movlw	11
  1685  002BE6  6EE6               	movwf	postinc1,c
  1686  002BE8  0E00               	movlw	0
  1687  002BEA  6EE6               	movwf	postinc1,c
  1688  002BEC  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1689                           
  1690                           ;main.c: 431:     break;
  1691  002BF0  D042               	goto	l7384
  1692  002BF2                     l1234:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;main.c: 433:     V.s_state = SEQ_STATE_INIT;
  1696  002BF2  6B9B               	clrf	_V& (0+255),b
  1697                           
  1698                           ;main.c: 434:     break;
  1699  002BF4  D040               	goto	l7384
  1700  002BF6                     l1236:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 437:     V.s_state = SEQ_STATE_INIT;
  1704  002BF6  6B9B               	clrf	_V& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 438:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1708  002BF8  51EA               	movf	(_V+79)& (0+255),w,b
  1709  002BFA  6EE6               	movwf	postinc1,c
  1710  002BFC  0E00               	movlw	0
  1711  002BFE  6EE6               	movwf	postinc1,c
  1712  002C00  51E9               	movf	(_V+78)& (0+255),w,b
  1713  002C02  6EE6               	movwf	postinc1,c
  1714  002C04  0E00               	movlw	0
  1715  002C06  6EE6               	movwf	postinc1,c
  1716  002C08  519E               	movf	(_V+3)& (0+255),w,b
  1717  002C0A  6EE6               	movwf	postinc1,c
  1718  002C0C  0E00               	movlw	0
  1719  002C0E  6EE6               	movwf	postinc1,c
  1720  002C10  519D               	movf	(_V+2)& (0+255),w,b
  1721  002C12  6EE6               	movwf	postinc1,c
  1722  002C14  0E00               	movlw	0
  1723  002C16  6EE6               	movwf	postinc1,c
  1724  002C18  0E16               	movlw	STR_8& (0+255)
  1725  002C1A  6EE6               	movwf	postinc1,c
  1726  002C1C  0E9B               	movlw	_V& (0+255)
  1727  002C1E  0F04               	addlw	4
  1728  002C20  6EE6               	movwf	postinc1,c
  1729  002C22  0E0A               	movlw	10
  1730  002C24  6EE6               	movwf	postinc1,c
  1731  002C26  EC8C  F023         	call	_sprintf	;wreg free
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;main.c: 439:     V.buf[16] = 0;
  1735  002C2A  6BAF               	clrf	(_V+20)& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 440:     wait_lcd_done();
  1739  002C2C  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 441:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1743  002C30  0E9B               	movlw	_V& (0+255)
  1744  002C32  0F04               	addlw	4
  1745  002C34  6EE6               	movwf	postinc1,c
  1746  002C36  0E00               	movlw	0
  1747  002C38  6EE6               	movwf	postinc1,c
  1748  002C3A  0E02               	movlw	2
  1749  002C3C  6EE6               	movwf	postinc1,c
  1750  002C3E  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1751                           
  1752                           ;main.c: 442:     break;
  1753  002C42  D019               	goto	l7384
  1754  002C44                     l7382:
  1755                           
  1756                           ; BSR set to: 0
  1757  002C44  519B               	movf	_V& (0+255),w,b
  1758  002C46  6E42               	movwf	btemp+10,c
  1759  002C48  6A43               	clrf	btemp+11,c
  1760                           
  1761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1762                           ; Switch size 1, requested type "simple"
  1763                           ; Number of cases is 1, Range of values is 0 to 0
  1764                           ; switch strategies available:
  1765                           ; Name         Instructions Cycles
  1766                           ; simple_byte            4     3 (average)
  1767                           ;	Chosen strategy is simple_byte
  1768  002C4A  5043               	movf	btemp+11,w,c
  1769  002C4C  0A00               	xorlw	0	; case 0
  1770  002C4E  A4D8               	btfss	status,2,c
  1771  002C50  D7D2               	goto	l1236
  1772                           
  1773                           ; BSR set to: 0
  1774                           ; Switch size 1, requested type "simple"
  1775                           ; Number of cases is 6, Range of values is 0 to 6
  1776                           ; switch strategies available:
  1777                           ; Name         Instructions Cycles
  1778                           ; simple_byte           19    10 (average)
  1779                           ;	Chosen strategy is simple_byte
  1780  002C52  5042               	movf	btemp+10,w,c
  1781  002C54  0A00               	xorlw	0	; case 0
  1782  002C56  B4D8               	btfsc	status,2,c
  1783  002C58  D736               	goto	l1219
  1784  002C5A  0A01               	xorlw	1	; case 1
  1785  002C5C  B4D8               	btfsc	status,2,c
  1786  002C5E  D742               	goto	l7322
  1787  002C60  0A03               	xorlw	3	; case 2
  1788  002C62  B4D8               	btfsc	status,2,c
  1789  002C64  D77F               	goto	l7346
  1790  002C66  0A01               	xorlw	1	; case 3
  1791  002C68  B4D8               	btfsc	status,2,c
  1792  002C6A  D78E               	goto	l1229
  1793  002C6C  0A06               	xorlw	6	; case 5
  1794  002C6E  B4D8               	btfsc	status,2,c
  1795  002C70  D7C0               	goto	l1234
  1796  002C72  0A03               	xorlw	3	; case 6
  1797  002C74  D7C0               	goto	l1236
  1798  002C76                     l7384:
  1799                           
  1800                           ;main.c: 444:    if (!V.error && !V.abort) {
  1801  002C76  0100               	movlb	0	; () banked
  1802  002C78  51E9               	movf	(_V+78)& (0+255),w,b
  1803  002C7A  A4D8               	btfss	status,2,c
  1804  002C7C  D051               	goto	l1242
  1805                           
  1806                           ; BSR set to: 0
  1807  002C7E  51EA               	movf	(_V+79)& (0+255),w,b
  1808  002C80  A4D8               	btfss	status,2,c
  1809  002C82  D04E               	goto	l1242
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main.c: 445:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1813  002C84  0060  F37F  FFE6   	movff	_V+68,postinc1
  1814  002C8A  0060  F383  FFE6   	movff	_V+69,postinc1
  1815  002C90  0060  F387  FFE6   	movff	_V+70,postinc1
  1816  002C96  0060  F38B  FFE6   	movff	_V+71,postinc1
  1817  002C9C  0E2A               	movlw	STR_9& (0+255)
  1818  002C9E  6EE6               	movwf	postinc1,c
  1819  002CA0  0E9B               	movlw	_V& (0+255)
  1820  002CA2  0F04               	addlw	4
  1821  002CA4  6EE6               	movwf	postinc1,c
  1822  002CA6  0E06               	movlw	6
  1823  002CA8  6EE6               	movwf	postinc1,c
  1824  002CAA  EC8C  F023         	call	_sprintf	;wreg free
  1825  002CAE                     l7390:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;main.c: 446:     V.buf[16] = 0;
  1829  002CAE  6BAF               	clrf	(_V+20)& (0+255),b
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 447:     wait_lcd_done();
  1833  002CB0  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;main.c: 448:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1837  002CB4  0E9B               	movlw	_V& (0+255)
  1838  002CB6  0F04               	addlw	4
  1839  002CB8  6EE6               	movwf	postinc1,c
  1840  002CBA  0E00               	movlw	0
  1841  002CBC  6EE6               	movwf	postinc1,c
  1842  002CBE  0E02               	movlw	2
  1843  002CC0  6EE6               	movwf	postinc1,c
  1844  002CC2  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1845  002CC6  D02C               	goto	l1242
  1846  002CC8                     l7396:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 452:    sprintf(V.buf, " EQUIP MODE    #");
  1850  002CC8  0E4E               	movlw	STR_10& (0+255)
  1851  002CCA  6EE6               	movwf	postinc1,c
  1852  002CCC  0E9B               	movlw	_V& (0+255)
  1853  002CCE  0F04               	addlw	4
  1854  002CD0  6EE6               	movwf	postinc1,c
  1855  002CD2  0E02               	movlw	2
  1856  002CD4  6EE6               	movwf	postinc1,c
  1857  002CD6  EC8C  F023         	call	_sprintf	;wreg free
  1858  002CDA  D7E9               	goto	l7390
  1859  002CDC                     l7404:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 458:    sprintf(V.buf, " LOG MODE      #");
  1863  002CDC  0E3D               	movlw	STR_11& (0+255)
  1864  002CDE  6EE6               	movwf	postinc1,c
  1865  002CE0  0E9B               	movlw	_V& (0+255)
  1866  002CE2  0F04               	addlw	4
  1867  002CE4  6EE6               	movwf	postinc1,c
  1868  002CE6  0E02               	movlw	2
  1869  002CE8  6EE6               	movwf	postinc1,c
  1870  002CEA  EC8C  F023         	call	_sprintf	;wreg free
  1871  002CEE  D7DF               	goto	l7390
  1872  002CF0                     l1241:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main.c: 465:    V.ui_state = UI_STATE_INIT;
  1876  002CF0  6B9C               	clrf	(_V+1)& (0+255),b
  1877                           
  1878                           ;main.c: 466:    break;
  1879  002CF2  D016               	goto	l1242
  1880  002CF4                     l7414:
  1881                           
  1882                           ; BSR set to: 0
  1883  002CF4  519C               	movf	(_V+1)& (0+255),w,b
  1884  002CF6  6E42               	movwf	btemp+10,c
  1885  002CF8  6A43               	clrf	btemp+11,c
  1886                           
  1887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 1, Range of values is 0 to 0
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            4     3 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894  002CFA  5043               	movf	btemp+11,w,c
  1895  002CFC  0A00               	xorlw	0	; case 0
  1896  002CFE  A4D8               	btfss	status,2,c
  1897  002D00  D7F7               	goto	l1241
  1898                           
  1899                           ; BSR set to: 0
  1900                           ; Switch size 1, requested type "simple"
  1901                           ; Number of cases is 5, Range of values is 0 to 5
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte           16     9 (average)
  1905                           ;	Chosen strategy is simple_byte
  1906  002D02  5042               	movf	btemp+10,w,c
  1907  002D04  0A00               	xorlw	0	; case 0
  1908  002D06  B4D8               	btfsc	status,2,c
  1909  002D08  D675               	goto	l7280
  1910  002D0A  0A01               	xorlw	1	; case 1
  1911  002D0C  B4D8               	btfsc	status,2,c
  1912  002D0E  D7DC               	goto	l7396
  1913  002D10  0A03               	xorlw	3	; case 2
  1914  002D12  B4D8               	btfsc	status,2,c
  1915  002D14  D797               	goto	l7382
  1916  002D16  0A06               	xorlw	6	; case 4
  1917  002D18  B4D8               	btfsc	status,2,c
  1918  002D1A  D7E0               	goto	l7404
  1919  002D1C  0A01               	xorlw	1	; case 5
  1920  002D1E  D7E8               	goto	l1241
  1921  002D20                     l1242:
  1922  002D20  82BE               	bsf	16318,1,c	;volatile
  1923                           
  1924                           ;main.c: 469:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  1925  002D22  0100               	movlb	0	; () banked
  1926  002D24  31EF               	rrcf	(_V+84)& (0+255),w,b
  1927  002D26  32E8               	rrcf	wreg,f,c
  1928  002D28  32E8               	rrcf	wreg,f,c
  1929  002D2A  0B0F               	andlw	15
  1930  002D2C  6EE6               	movwf	postinc1,c
  1931  002D2E  0E00               	movlw	0
  1932  002D30  6EE6               	movwf	postinc1,c
  1933  002D32  51F0               	movf	(_V+85)& (0+255),w,b
  1934  002D34  0B0F               	andlw	15
  1935  002D36  6EE6               	movwf	postinc1,c
  1936  002D38  0E00               	movlw	0
  1937  002D3A  6EE6               	movwf	postinc1,c
  1938  002D3C  519E               	movf	(_V+3)& (0+255),w,b
  1939  002D3E  6EE6               	movwf	postinc1,c
  1940  002D40  0E00               	movlw	0
  1941  002D42  6EE6               	movwf	postinc1,c
  1942  002D44  519D               	movf	(_V+2)& (0+255),w,b
  1943  002D46  6EE6               	movwf	postinc1,c
  1944  002D48  0E00               	movlw	0
  1945  002D4A  6EE6               	movwf	postinc1,c
  1946  002D4C  0E01               	movlw	STR_12& (0+255)
  1947  002D4E  6EE6               	movwf	postinc1,c
  1948  002D50  0E9B               	movlw	_V& (0+255)
  1949  002D52  0F04               	addlw	4
  1950  002D54  6EE6               	movwf	postinc1,c
  1951  002D56  0E0A               	movlw	10
  1952  002D58  6EE6               	movwf	postinc1,c
  1953  002D5A  EC8C  F023         	call	_sprintf	;wreg free
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;main.c: 470:   V.buf[16] = 0;
  1957  002D5E  6BAF               	clrf	(_V+20)& (0+255),b
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 471:   wait_lcd_done();
  1961  002D60  EC15  F02C         	call	_wait_lcd_done	;wreg free
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 472:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  1965  002D64  0E9B               	movlw	_V& (0+255)
  1966  002D66  0F04               	addlw	4
  1967  002D68  6EE6               	movwf	postinc1,c
  1968  002D6A  0E00               	movlw	0
  1969  002D6C  6EE6               	movwf	postinc1,c
  1970  002D6E  0E01               	movlw	1
  1971  002D70  6EE6               	movwf	postinc1,c
  1972  002D72  EC85  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1973                           
  1974                           ; BSR set to: 59
  1975  002D76  92BE               	bcf	16318,1,c	;volatile
  1976                           
  1977                           ; BSR set to: 59
  1978                           ;main.c: 474:   ++V.ticks;
  1979  002D78  0E01               	movlw	1
  1980  002D7A  0100               	movlb	0	; () banked
  1981  002D7C  27DF               	addwf	(_V+68)& (0+255),f,b
  1982  002D7E  0E00               	movlw	0
  1983  002D80  23E0               	addwfc	(_V+69)& (0+255),f,b
  1984  002D82  23E1               	addwfc	(_V+70)& (0+255),f,b
  1985  002D84  23E2               	addwfc	(_V+71)& (0+255),f,b
  1986  002D86  D7B6               	goto	l7414
  1987  002D88                     __end_of_main:
  1988                           	opt callstack 0
  1989                           
  1990 ;; *************** function _t_protocol *****************
  1991 ;; Defined at:
  1992 ;;		line 146 in file "gemsecs.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  t_link          1  [STACK] PTR enum E16165
  1995 ;;		 -> V(86), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  rxData          1  [STACK] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1  [STACK] enum E16903
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    5
  2014 ;; This function calls:
  2015 ;;		_StartTimer
  2016 ;;		_TimerDone
  2017 ;;		_UART1_Read
  2018 ;;		_UART1_Write
  2019 ;;		_UART1_is_rx_ready
  2020 ;;		_UART1_put_buffer
  2021 ;;		_WaitMs
  2022 ;;		_secs_II_message
  2023 ;;		_secs_send
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text1
  2030  003634                     __ptext1:
  2031                           	opt callstack 0
  2032  003634                     _t_protocol:
  2033                           	opt callstack 0
  2034                           
  2035                           ; BSR set to: 0
  2036                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2037  003634  52E6               	movf	postinc1,f,c
  2038                           
  2039                           ;gemsecs.c: 146: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 147: {;gemsecs.
      +                          c: 148:  uint8_t rxData;;gemsecs.c: 149:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          150:  static response_type block;;gemsecs.c: 152:  switch (*t_link) {
  2040                           
  2041                           ;incstack = 0
  2042  003636  D11E               	goto	l7250
  2043  003638                     l1547:
  2044                           
  2045                           ;gemsecs.c: 154:   V.error = LINK_ERROR_NONE;
  2046  003638  0100               	movlb	0	; () banked
  2047  00363A  6BE9               	clrf	(_V+78)& (0+255),b
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;gemsecs.c: 155:   retry = 3;
  2051  00363C  0E03               	movlw	3
  2052  00363E  6E2A               	movwf	t_protocol@retry,c
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;gemsecs.c: 156:   UART1_Write(0x05);
  2056  003640  0E05               	movlw	5
  2057  003642  6EE6               	movwf	postinc1,c
  2058  003644  ECF4  F028         	call	_UART1_Write	;wreg free
  2059                           
  2060                           ; BSR set to: 57
  2061                           ;gemsecs.c: 157:   StartTimer(TMR_T2, 2000);
  2062  003648  0ED0               	movlw	208
  2063  00364A  6EE6               	movwf	postinc1,c
  2064  00364C  0E07               	movlw	7
  2065  00364E  6EE6               	movwf	postinc1,c
  2066  003650  0E02               	movlw	2
  2067  003652  6EE6               	movwf	postinc1,c
  2068  003654  EC51  F029         	call	_StartTimer	;wreg free
  2069                           
  2070                           ;gemsecs.c: 158:   *t_link = LINK_STATE_ENQ;
  2071                           ;stkvar	_t_link @ sp[(-1)+-1]
  2072  003658  0EFE               	movlw	-2
  2073  00365A  50E3               	movf	plusw1,w,c
  2074  00365C  6ED9               	movwf	fsr2l,c
  2075  00365E  6ADA               	clrf	fsr2h,c
  2076  003660  0E01               	movlw	1
  2077  003662  6EDF               	movwf	indf2,c
  2078                           
  2079                           ;gemsecs.c: 160:   WaitMs(5);
  2080  003664  0E05               	movlw	5
  2081  003666  6EE6               	movwf	postinc1,c
  2082  003668  0E00               	movlw	0
  2083  00366A  6EE6               	movwf	postinc1,c
  2084  00366C  ECDC  F029         	call	_WaitMs	;wreg free
  2085                           
  2086                           ;gemsecs.c: 161:   UART1_put_buffer(0x04);
  2087  003670  0E04               	movlw	4
  2088  003672  6EE6               	movwf	postinc1,c
  2089  003674  ECC7  F029         	call	_UART1_put_buffer	;wreg free
  2090                           
  2091                           ;gemsecs.c: 163:   break;
  2092  003678  D11E               	goto	l7252
  2093  00367A                     l7162:
  2094                           
  2095                           ;gemsecs.c: 165:   if (TimerDone(TMR_T2)) {
  2096  00367A  0E02               	movlw	2
  2097  00367C  6EE6               	movwf	postinc1,c
  2098  00367E  EC6F  F02B         	call	_TimerDone	;wreg free
  2099  003682  5038               	movf	btemp,w,c
  2100  003684  B4D8               	btfsc	status,2,c
  2101  003686  D01A               	goto	l7172
  2102                           
  2103                           ;gemsecs.c: 166:    if (!retry--) {
  2104  003688  062A               	decf	t_protocol@retry,f,c
  2105  00368A  282A               	incf	t_protocol@retry,w,c
  2106  00368C  A4D8               	btfss	status,2,c
  2107  00368E  D00D               	goto	l7170
  2108                           
  2109                           ;gemsecs.c: 167:     V.error = LINK_ERROR_T2;
  2110  003690  0E02               	movlw	2
  2111  003692  0100               	movlb	0	; () banked
  2112  003694  6FE9               	movwf	(_V+78)& (0+255),b
  2113                           
  2114                           ;gemsecs.c: 168:     V.failed_send = 1;
  2115  003696  51EF               	movf	(_V+84)& (0+255),w,b
  2116  003698  0B87               	andlw	-121
  2117  00369A  0908               	iorlw	8
  2118  00369C  6FEF               	movwf	(_V+84)& (0+255),b
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;gemsecs.c: 169:     *t_link = LINK_STATE_NAK;
  2122                           ;stkvar	_t_link @ sp[(-1)+-1]
  2123  00369E  0EFE               	movlw	-2
  2124  0036A0  50E3               	movf	plusw1,w,c
  2125  0036A2  6ED9               	movwf	fsr2l,c
  2126  0036A4  6ADA               	clrf	fsr2h,c
  2127  0036A6  0E05               	movlw	5
  2128  0036A8  D0E3               	goto	L2
  2129  0036AA                     l7170:
  2130                           
  2131                           ;gemsecs.c: 171:     StartTimer(TMR_T2, 2000);
  2132  0036AA  0ED0               	movlw	208
  2133  0036AC  6EE6               	movwf	postinc1,c
  2134  0036AE  0E07               	movlw	7
  2135  0036B0  6EE6               	movwf	postinc1,c
  2136  0036B2  0E02               	movlw	2
  2137  0036B4  6EE6               	movwf	postinc1,c
  2138  0036B6  EC51  F029         	call	_StartTimer	;wreg free
  2139  0036BA  D0FD               	goto	l7252
  2140  0036BC                     l7172:
  2141                           
  2142                           ;gemsecs.c: 174:    if (UART1_is_rx_ready()) {
  2143  0036BC  ECC7  F02C         	call	_UART1_is_rx_ready	;wreg free
  2144  0036C0  5038               	movf	btemp,w,c
  2145  0036C2  B4D8               	btfsc	status,2,c
  2146  0036C4  D0F8               	goto	l7252
  2147                           
  2148                           ;gemsecs.c: 175:     rxData = UART1_Read();
  2149  0036C6  EC13  F029         	call	_UART1_Read	;wreg free
  2150                           
  2151                           ;stkvar	_rxData @ sp[(-1)+0]
  2152  0036CA  0EFF               	movlw	-1
  2153  0036CC  0060  F0E3  FFE3   	movff	btemp,plusw1
  2154                           
  2155                           ; BSR set to: 57
  2156                           ;gemsecs.c: 176:     if (rxData == 0x04) {
  2157                           ;stkvar	_rxData @ sp[(-1)+0]
  2158  0036D2  0EFF               	movlw	-1
  2159  0036D4  006F FF8C  F038    	movff	plusw1,btemp
  2160  0036DA  0E04               	movlw	4
  2161  0036DC  1838               	xorwf	btemp,w,c
  2162  0036DE  A4D8               	btfss	status,2,c
  2163  0036E0  D00E               	goto	l7182
  2164                           
  2165                           ; BSR set to: 57
  2166                           ;gemsecs.c: 177:      StartTimer(TMR_T3, 5000);
  2167  0036E2  0E88               	movlw	136
  2168  0036E4  6EE6               	movwf	postinc1,c
  2169  0036E6  0E13               	movlw	19
  2170  0036E8  6EE6               	movwf	postinc1,c
  2171  0036EA  0E03               	movlw	3
  2172  0036EC  6EE6               	movwf	postinc1,c
  2173  0036EE  EC51  F029         	call	_StartTimer	;wreg free
  2174                           
  2175                           ;gemsecs.c: 178:      *t_link = LINK_STATE_EOT;
  2176                           ;stkvar	_t_link @ sp[(-1)+-1]
  2177  0036F2  0EFE               	movlw	-2
  2178  0036F4  50E3               	movf	plusw1,w,c
  2179  0036F6  6ED9               	movwf	fsr2l,c
  2180  0036F8  6ADA               	clrf	fsr2h,c
  2181  0036FA  0E02               	movlw	2
  2182  0036FC  6EDF               	movwf	indf2,c
  2183  0036FE                     l7182:
  2184                           
  2185                           ;gemsecs.c: 180:     if (rxData == 0x05) {
  2186                           ;stkvar	_rxData @ sp[(-1)+0]
  2187  0036FE  0EFF               	movlw	-1
  2188  003700  006F FF8C  F038    	movff	plusw1,btemp
  2189  003706  0E05               	movlw	5
  2190  003708  1838               	xorwf	btemp,w,c
  2191  00370A  A4D8               	btfss	status,2,c
  2192  00370C  D0D4               	goto	l7252
  2193                           
  2194                           ;gemsecs.c: 181:      UART1_put_buffer(0x04);
  2195  00370E  0E04               	movlw	4
  2196  003710  6EE6               	movwf	postinc1,c
  2197  003712  ECC7  F029         	call	_UART1_put_buffer	;wreg free
  2198  003716                     l7186:
  2199                           
  2200                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2201                           ;stkvar	_t_link @ sp[(-1)+-1]
  2202  003716  0EFE               	movlw	-2
  2203  003718  50E3               	movf	plusw1,w,c
  2204  00371A  6ED9               	movwf	fsr2l,c
  2205  00371C  6ADA               	clrf	fsr2h,c
  2206  00371E  0E04               	movlw	4
  2207  003720  D0A7               	goto	L2
  2208  003722                     l7188:
  2209                           
  2210                           ;gemsecs.c: 188:   if (!requeue)
  2211  003722  5029               	movf	t_protocol@requeue,w,c
  2212  003724  A4D8               	btfss	status,2,c
  2213  003726  D010               	goto	l7192
  2214                           
  2215                           ;gemsecs.c: 189:    block = secs_II_message(V.stream, V.function);
  2216  003728  0100               	movlb	0	; () banked
  2217  00372A  51E8               	movf	(_V+77)& (0+255),w,b
  2218  00372C  6EE6               	movwf	postinc1,c
  2219  00372E  51E7               	movf	(_V+76)& (0+255),w,b
  2220  003730  6EE6               	movwf	postinc1,c
  2221  003732  ECA0  F01F         	call	_secs_II_message	;wreg free
  2222  003736  EE20  F08C         	lfsr	2,t_protocol@block
  2223  00373A  0E06               	movlw	6
  2224  00373C                     u4331:
  2225  00373C  52E5               	movf	postdec1,f,c
  2226  00373E  006F FF9F FFDB     	movff	indf1,plusw2
  2227  003744  06E8               	decf	wreg,f,c
  2228  003746  E2FA               	bc	u4331
  2229  003748                     l7192:
  2230                           
  2231                           ;gemsecs.c: 191:   if (V.abort == LINK_ERROR_ABORT) {
  2232  003748  0E07               	movlw	7
  2233  00374A  0100               	movlb	0	; () banked
  2234  00374C  19EA               	xorwf	(_V+79)& (0+255),w,b
  2235  00374E  A4D8               	btfss	status,2,c
  2236  003750  D017               	goto	l7200
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;gemsecs.c: 192:    secs_send((uint8_t*) block.header, block.length, 0);
  2240  003752  0E00               	movlw	0
  2241  003754  6EE6               	movwf	postinc1,c
  2242  003756  518E               	movf	(t_protocol@block+2)& (0+255),w,b
  2243  003758  6EE6               	movwf	postinc1,c
  2244  00375A  0060  F233  FFE6   	movff	t_protocol@block,postinc1
  2245  003760  0060  F237  FFE6   	movff	t_protocol@block+1,postinc1
  2246  003766  ECC4  F01E         	call	_secs_send	;wreg free
  2247                           
  2248                           ;gemsecs.c: 193:    V.failed_send = 2;
  2249  00376A  0100               	movlb	0	; () banked
  2250  00376C  51EF               	movf	(_V+84)& (0+255),w,b
  2251  00376E  0B87               	andlw	-121
  2252  003770  0910               	iorlw	16
  2253  003772  6FEF               	movwf	(_V+84)& (0+255),b
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;gemsecs.c: 194:    *t_link = LINK_STATE_ERROR;
  2257                           ;stkvar	_t_link @ sp[(-1)+-1]
  2258  003774  0EFE               	movlw	-2
  2259  003776  50E3               	movf	plusw1,w,c
  2260  003778  6ED9               	movwf	fsr2l,c
  2261  00377A  6ADA               	clrf	fsr2h,c
  2262  00377C  0E06               	movlw	6
  2263  00377E  D02C               	goto	L3
  2264  003780                     l7200:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;gemsecs.c: 196:    if (!requeue) {
  2268  003780  5029               	movf	t_protocol@requeue,w,c
  2269  003782  A4D8               	btfss	status,2,c
  2270  003784  D012               	goto	l1561
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;gemsecs.c: 197:     secs_send((uint8_t*) block.header, block.length, 0);
  2274  003786  0E00               	movlw	0
  2275  003788  6EE6               	movwf	postinc1,c
  2276  00378A  518E               	movf	(t_protocol@block+2)& (0+255),w,b
  2277  00378C  6EE6               	movwf	postinc1,c
  2278  00378E  0060  F233  FFE6   	movff	t_protocol@block,postinc1
  2279  003794  0060  F237  FFE6   	movff	t_protocol@block+1,postinc1
  2280  00379A  ECC4  F01E         	call	_secs_send	;wreg free
  2281                           
  2282                           ;gemsecs.c: 198:     if (V.queue)
  2283  00379E  0100               	movlb	0	; () banked
  2284  0037A0  A9F0               	btfss	(_V+85)& (0+255),4,b
  2285  0037A2  D011               	goto	l7210
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;gemsecs.c: 199:      requeue = 1;
  2289  0037A4  0E01               	movlw	1
  2290  0037A6  6E29               	movwf	t_protocol@requeue,c
  2291  0037A8  D00E               	goto	l7210
  2292  0037AA                     l1561:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;gemsecs.c: 201:     requeue = 0;
  2296  0037AA  6A29               	clrf	t_protocol@requeue,c
  2297                           
  2298                           ;gemsecs.c: 202:     V.queue = 0;
  2299  0037AC  99F0               	bcf	(_V+85)& (0+255),4,b
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;gemsecs.c: 203:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2303  0037AE  0E00               	movlw	0
  2304  0037B0  6EE6               	movwf	postinc1,c
  2305  0037B2  5191               	movf	(t_protocol@block+5)& (0+255),w,b
  2306  0037B4  6EE6               	movwf	postinc1,c
  2307  0037B6  0060  F23F  FFE6   	movff	t_protocol@block+3,postinc1
  2308  0037BC  0060  F243  FFE6   	movff	t_protocol@block+4,postinc1
  2309  0037C2  ECC4  F01E         	call	_secs_send	;wreg free
  2310  0037C6                     l7210:
  2311                           
  2312                           ;gemsecs.c: 205:    if (V.error == LINK_ERROR_NONE) {
  2313  0037C6  0100               	movlb	0	; () banked
  2314  0037C8  51E9               	movf	(_V+78)& (0+255),w,b
  2315  0037CA  A4D8               	btfss	status,2,c
  2316  0037CC  D007               	goto	l7214
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;gemsecs.c: 206:     *t_link = LINK_STATE_ACK;
  2320                           ;stkvar	_t_link @ sp[(-1)+-1]
  2321  0037CE  0EFE               	movlw	-2
  2322  0037D0  50E3               	movf	plusw1,w,c
  2323  0037D2  6ED9               	movwf	fsr2l,c
  2324  0037D4  6ADA               	clrf	fsr2h,c
  2325  0037D6  0E03               	movlw	3
  2326  0037D8                     L3:
  2327  0037D8  6EDF               	movwf	indf2,c
  2328                           
  2329                           ;gemsecs.c: 207:    } else {
  2330  0037DA  D004               	goto	l7218
  2331  0037DC                     l7214:
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;gemsecs.c: 208:     V.failed_send = 3;
  2335  0037DC  51EF               	movf	(_V+84)& (0+255),w,b
  2336  0037DE  0B87               	andlw	-121
  2337  0037E0  0918               	iorlw	24
  2338  0037E2  D7C7               	goto	L4
  2339  0037E4                     l7218:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;gemsecs.c: 213:   WaitMs(5);
  2343  0037E4  0E05               	movlw	5
  2344  0037E6  6EE6               	movwf	postinc1,c
  2345  0037E8  0E00               	movlw	0
  2346  0037EA  6EE6               	movwf	postinc1,c
  2347  0037EC  ECDC  F029         	call	_WaitMs	;wreg free
  2348                           
  2349                           ;gemsecs.c: 214:   UART1_put_buffer(0x06);
  2350  0037F0  0E06               	movlw	6
  2351  0037F2  6EE6               	movwf	postinc1,c
  2352  0037F4  ECC7  F029         	call	_UART1_put_buffer	;wreg free
  2353                           
  2354                           ;gemsecs.c: 216:   break;
  2355  0037F8  D05E               	goto	l7252
  2356  0037FA                     l7222:
  2357                           
  2358                           ;gemsecs.c: 218:   if (TimerDone(TMR_T3)) {
  2359  0037FA  0E03               	movlw	3
  2360  0037FC  6EE6               	movwf	postinc1,c
  2361  0037FE  EC6F  F02B         	call	_TimerDone	;wreg free
  2362  003802  5038               	movf	btemp,w,c
  2363  003804  B4D8               	btfsc	status,2,c
  2364  003806  D007               	goto	l7228
  2365                           
  2366                           ;gemsecs.c: 219:    V.error = LINK_ERROR_T3;
  2367  003808  0E03               	movlw	3
  2368  00380A  0100               	movlb	0	; () banked
  2369  00380C  6FE9               	movwf	(_V+78)& (0+255),b
  2370                           
  2371                           ;gemsecs.c: 220:    V.failed_send = 4;
  2372  00380E  51EF               	movf	(_V+84)& (0+255),w,b
  2373  003810  0B87               	andlw	-121
  2374  003812  0920               	iorlw	32
  2375  003814  D743               	goto	L5
  2376  003816                     l7228:
  2377                           
  2378                           ;gemsecs.c: 223:    if (UART1_is_rx_ready()) {
  2379  003816  ECC7  F02C         	call	_UART1_is_rx_ready	;wreg free
  2380  00381A  5038               	movf	btemp,w,c
  2381  00381C  B4D8               	btfsc	status,2,c
  2382  00381E  D04B               	goto	l7252
  2383                           
  2384                           ;gemsecs.c: 224:     rxData = UART1_Read();
  2385  003820  EC13  F029         	call	_UART1_Read	;wreg free
  2386                           
  2387                           ;stkvar	_rxData @ sp[(-1)+0]
  2388  003824  0EFF               	movlw	-1
  2389  003826  0060  F0E3  FFE3   	movff	btemp,plusw1
  2390                           
  2391                           ; BSR set to: 57
  2392                           ;gemsecs.c: 225:     if (rxData == 0x06) {
  2393                           ;stkvar	_rxData @ sp[(-1)+0]
  2394  00382C  0EFF               	movlw	-1
  2395  00382E  006F FF8C  F038    	movff	plusw1,btemp
  2396  003834  0E06               	movlw	6
  2397  003836  1838               	xorwf	btemp,w,c
  2398  003838  A4D8               	btfss	status,2,c
  2399  00383A  D03D               	goto	l7252
  2400                           
  2401                           ; BSR set to: 57
  2402                           ;gemsecs.c: 226:      V.failed_send = 0;
  2403  00383C  0E87               	movlw	-121
  2404  00383E  0100               	movlb	0	; () banked
  2405  003840  17EF               	andwf	(_V+84)& (0+255),f,b
  2406  003842  D769               	goto	l7186
  2407  003844                     l7238:
  2408                           
  2409                           ;gemsecs.c: 233:   *t_link = LINK_STATE_ERROR;
  2410                           ;stkvar	_t_link @ sp[(-1)+-1]
  2411  003844  0EFE               	movlw	-2
  2412  003846  50E3               	movf	plusw1,w,c
  2413  003848  6ED9               	movwf	fsr2l,c
  2414  00384A  6ADA               	clrf	fsr2h,c
  2415  00384C  0E06               	movlw	6
  2416  00384E  6EDF               	movwf	indf2,c
  2417                           
  2418                           ;gemsecs.c: 234:   while ((uart1RxCount)) {
  2419  003850  D002               	goto	l7242
  2420  003852                     l7240:
  2421                           
  2422                           ;gemsecs.c: 235:    UART1_Read();
  2423  003852  EC13  F029         	call	_UART1_Read	;wreg free
  2424  003856                     l7242:
  2425                           
  2426                           ;gemsecs.c: 234:   while ((uart1RxCount)) {
  2427  003856  5032               	movf	_uart1RxCount,w,c	;volatile
  2428  003858  B4D8               	btfsc	status,2,c
  2429  00385A  D02D               	goto	l7252
  2430  00385C  D7FA               	goto	l7240
  2431  00385E                     l7244:
  2432                           
  2433                           ;gemsecs.c: 241:   V.failed_send = 0;
  2434  00385E  0E87               	movlw	-121
  2435  003860  0100               	movlb	0	; () banked
  2436  003862  17EF               	andwf	(_V+84)& (0+255),f,b
  2437                           
  2438                           ;gemsecs.c: 242:   break;
  2439  003864  D028               	goto	l7252
  2440  003866                     l7246:
  2441                           
  2442                           ;gemsecs.c: 244:   *t_link = LINK_STATE_IDLE;
  2443                           ;stkvar	_t_link @ sp[(-1)+-1]
  2444  003866  0EFE               	movlw	-2
  2445  003868  50E3               	movf	plusw1,w,c
  2446  00386A  6ED9               	movwf	fsr2l,c
  2447  00386C  6ADA               	clrf	fsr2h,c
  2448  00386E  0E00               	movlw	0
  2449  003870                     L2:
  2450  003870  6EDF               	movwf	indf2,c
  2451                           
  2452                           ;gemsecs.c: 245:   break;
  2453  003872  D021               	goto	l7252
  2454  003874                     l7250:
  2455                           
  2456                           ;stkvar	_t_link @ sp[(-1)+-1]
  2457  003874  0EFE               	movlw	-2
  2458  003876  50E3               	movf	plusw1,w,c
  2459  003878  6ED9               	movwf	fsr2l,c
  2460  00387A  6ADA               	clrf	fsr2h,c
  2461  00387C  50DF               	movf	indf2,w,c
  2462  00387E  6E42               	movwf	btemp+10,c
  2463  003880  6A43               	clrf	btemp+11,c
  2464                           
  2465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2466                           ; Switch size 1, requested type "simple"
  2467                           ; Number of cases is 1, Range of values is 0 to 0
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte            4     3 (average)
  2471                           ;	Chosen strategy is simple_byte
  2472  003882  5043               	movf	btemp+11,w,c
  2473  003884  0A00               	xorlw	0	; case 0
  2474  003886  A4D8               	btfss	status,2,c
  2475  003888  D7EE               	goto	l7246
  2476                           
  2477                           ; Switch size 1, requested type "simple"
  2478                           ; Number of cases is 7, Range of values is 0 to 6
  2479                           ; switch strategies available:
  2480                           ; Name         Instructions Cycles
  2481                           ; simple_byte           22    12 (average)
  2482                           ;	Chosen strategy is simple_byte
  2483  00388A  5042               	movf	btemp+10,w,c
  2484  00388C  0A00               	xorlw	0	; case 0
  2485  00388E  B4D8               	btfsc	status,2,c
  2486  003890  D6D3               	goto	l1547
  2487  003892  0A01               	xorlw	1	; case 1
  2488  003894  B4D8               	btfsc	status,2,c
  2489  003896  D6F1               	goto	l7162
  2490  003898  0A03               	xorlw	3	; case 2
  2491  00389A  B4D8               	btfsc	status,2,c
  2492  00389C  D742               	goto	l7188
  2493  00389E  0A01               	xorlw	1	; case 3
  2494  0038A0  B4D8               	btfsc	status,2,c
  2495  0038A2  D7AB               	goto	l7222
  2496  0038A4  0A07               	xorlw	7	; case 4
  2497  0038A6  B4D8               	btfsc	status,2,c
  2498  0038A8  D7DA               	goto	l7244
  2499  0038AA  0A01               	xorlw	1	; case 5
  2500  0038AC  B4D8               	btfsc	status,2,c
  2501  0038AE  D7CA               	goto	l7238
  2502  0038B0  0A03               	xorlw	3	; case 6
  2503  0038B2  A4D8               	btfss	status,2,c
  2504  0038B4  D7D8               	goto	l7246
  2505  0038B6                     l7252:
  2506                           
  2507                           ;gemsecs.c: 248:  return *t_link;
  2508                           ;stkvar	_t_link @ sp[(-1)+-1]
  2509  0038B6  0EFE               	movlw	-2
  2510  0038B8  50E3               	movf	plusw1,w,c
  2511  0038BA  6ED9               	movwf	fsr2l,c
  2512  0038BC  6ADA               	clrf	fsr2h,c
  2513  0038BE  50DF               	movf	indf2,w,c
  2514  0038C0  6E38               	movwf	btemp,c
  2515                           
  2516                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2517  0038C2  52E5               	movf	postdec1,f,c
  2518  0038C4  52E5               	movf	postdec1,f,c
  2519  0038C6  0012               	return		;funcret
  2520  0038C8                     __end_of_t_protocol:
  2521                           	opt callstack 0
  2522                           
  2523 ;; *************** function _secs_II_message *****************
  2524 ;; Defined at:
  2525 ;;		line 290 in file "gemsecs.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  stream          1  [STACK] unsigned char 
  2528 ;;  function        1  [STACK] unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  7  [STACK] struct response_type
  2533 ;; Registers used:
  2534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  2535 ;; Tracked objects:
  2536 ;;		On entry : 3F/0
  2537 ;;		On exit  : 3F/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    3
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_t_protocol
  2551 ;; This function uses a reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text2
  2555  003F40                     __ptext2:
  2556                           	opt callstack 0
  2557  003F40                     _secs_II_message:
  2558                           	opt callstack 0
  2559                           
  2560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  2561  003F40  0E05               	movlw	5
  2562  003F42  26E1               	addwf	fsr1l,f,c
  2563  003F44  0E00               	movlw	0
  2564  003F46  22E2               	addwfc	fsr1h,f,c
  2565                           
  2566                           ;gemsecs.c: 290: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 291: {;gemsecs.c: 292:  static response_type block;;gemsecs.c: 294:  V.abort = LINK_
      +                          ERROR_NONE;
  2567                           
  2568                           ;incstack = 0
  2569  003F48  0100               	movlb	0	; () banked
  2570  003F4A  6BEA               	clrf	(_V+79)& (0+255),b
  2571                           
  2572                           ;gemsecs.c: 295:  V.queue = 0;
  2573  003F4C  99F0               	bcf	(_V+85)& (0+255),4,b
  2574                           
  2575                           ;gemsecs.c: 296:  block.respond = 0;
  2576  003F4E  918B               	bcf	(secs_II_message@block+6)& (0+255),0,b
  2577                           
  2578                           ;gemsecs.c: 298:  switch (stream) {
  2579  003F50  D0A7               	goto	l6912
  2580  003F52                     l6820:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;gemsecs.c: 302:    block.header = (uint8_t*) & H12[0];
  2584  003F52  0E5F               	movlw	low _H12
  2585  003F54  6F85               	movwf	secs_II_message@block& (0+255),b
  2586  003F56  0E01               	movlw	high _H12
  2587  003F58  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;gemsecs.c: 303:    block.length = sizeof(header12);
  2591  003F5A  0E0F               	movlw	15
  2592  003F5C  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;gemsecs.c: 304:    H12[0].block.block.systemb = V.systemb;
  2596  003F5E  C0E3  F163         	movff	_V+72,_H12+4
  2597  003F62  C0E4  F164         	movff	_V+73,_H12+5
  2598  003F66  C0E5  F165         	movff	_V+74,_H12+6
  2599  003F6A  C0E6  F166         	movff	_V+75,_H12+7
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;gemsecs.c: 305:    H10[0].block.block.systemb = V.systemb;
  2603  003F6E  C0E3  F102         	movff	_V+72,_H10+2
  2604  003F72  C0E4  F103         	movff	_V+73,_H10+3
  2605  003F76  C0E5  F104         	movff	_V+74,_H10+4
  2606  003F7A  C0E6  F105         	movff	_V+75,_H10+5
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;gemsecs.c: 306:    block.respond = 1;
  2610  003F7E  818B               	bsf	(secs_II_message@block+6)& (0+255),0,b
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;gemsecs.c: 307:    block.reply = (uint8_t*) & H10[0];
  2614  003F80  0E00               	movlw	low _H10
  2615  003F82  6F88               	movwf	(secs_II_message@block+3)& (0+255),b
  2616  003F84  0E01               	movlw	high _H10
  2617  003F86  6F89               	movwf	(secs_II_message@block+4)& (0+255),b
  2618                           
  2619                           ;gemsecs.c: 308:    block.reply_length = sizeof(header10);
  2620  003F88  0E0D               	movlw	13
  2621  003F8A  6F8A               	movwf	(secs_II_message@block+5)& (0+255),b
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;gemsecs.c: 309:    V.queue = 1;
  2625  003F8C  89F0               	bsf	(_V+85)& (0+255),4,b
  2626                           
  2627                           ;gemsecs.c: 310:    break;
  2628  003F8E  D09B               	goto	l6914
  2629  003F90                     l6834:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;gemsecs.c: 317:    block.header = (uint8_t*) & H14[0];
  2633  003F90  0EAC               	movlw	low _H14
  2634  003F92  6F85               	movwf	secs_II_message@block& (0+255),b
  2635  003F94  0E01               	movlw	high _H14
  2636  003F96  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;gemsecs.c: 318:    block.length = sizeof(header14);
  2640  003F98  0E11               	movlw	17
  2641  003F9A  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;gemsecs.c: 319:    H14[0].block.block.systemb = V.systemb;
  2645  003F9C  C0E3  F1B2         	movff	_V+72,_H14+6
  2646  003FA0  C0E4  F1B3         	movff	_V+73,_H14+7
  2647  003FA4  C0E5  F1B4         	movff	_V+74,_H14+8
  2648  003FA8  C0E6  F1B5         	movff	_V+75,_H14+9
  2649                           
  2650                           ;gemsecs.c: 320:    break;
  2651  003FAC  D08C               	goto	l6914
  2652  003FAE                     l6840:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;gemsecs.c: 327:    block.header = (uint8_t*) & H17[0];
  2656  003FAE  0E98               	movlw	low _H17
  2657  003FB0  6F85               	movwf	secs_II_message@block& (0+255),b
  2658  003FB2  0E01               	movlw	high _H17
  2659  003FB4  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;gemsecs.c: 328:    block.length = sizeof(header17);
  2663  003FB6  0E14               	movlw	20
  2664  003FB8  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;gemsecs.c: 329:    H17[0].block.block.systemb = V.systemb;
  2668  003FBA  C0E3  F1A1         	movff	_V+72,_H17+9
  2669  003FBE  C0E4  F1A2         	movff	_V+73,_H17+10
  2670  003FC2  C0E5  F1A3         	movff	_V+74,_H17+11
  2671  003FC6  C0E6  F1A4         	movff	_V+75,_H17+12
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;gemsecs.c: 330:    H12[1].block.block.systemb = V.systemb;
  2675  003FCA  C0E3  F172         	movff	_V+72,_H12+19
  2676  003FCE  C0E4  F173         	movff	_V+73,_H12+20
  2677  003FD2  C0E5  F174         	movff	_V+74,_H12+21
  2678  003FD6  C0E6  F175         	movff	_V+75,_H12+22
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;gemsecs.c: 331:    block.respond = 1;
  2682  003FDA  818B               	bsf	(secs_II_message@block+6)& (0+255),0,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;gemsecs.c: 332:    block.reply = (uint8_t*) & H12[1];
  2686  003FDC  0E6E               	movlw	low (_H12+15)
  2687  003FDE  6F88               	movwf	(secs_II_message@block+3)& (0+255),b
  2688  003FE0  0E01               	movlw	high (_H12+15)
  2689  003FE2  6F89               	movwf	(secs_II_message@block+4)& (0+255),b
  2690                           
  2691                           ;gemsecs.c: 333:    block.reply_length = sizeof(header12);
  2692  003FE4  0E0F               	movlw	15
  2693  003FE6  D7D1               	goto	L6
  2694  003FE8                     l6854:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;gemsecs.c: 342:    block.header = (uint8_t*) & H10[2];
  2698  003FE8  0E1A               	movlw	low (_H10+26)
  2699  003FEA  6F85               	movwf	secs_II_message@block& (0+255),b
  2700  003FEC  0E01               	movlw	high (_H10+26)
  2701  003FEE  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;gemsecs.c: 343:    block.length = sizeof(header10);
  2705  003FF0  0E0D               	movlw	13
  2706  003FF2  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;gemsecs.c: 344:    H10[2].block.block.systemb = V.systemb;
  2710  003FF4  C0E3  F11C         	movff	_V+72,_H10+28
  2711  003FF8  C0E4  F11D         	movff	_V+73,_H10+29
  2712  003FFC  C0E5  F11E         	movff	_V+74,_H10+30
  2713  004000  C0E6  F11F         	movff	_V+75,_H10+31
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;gemsecs.c: 345:    V.abort = LINK_ERROR_ABORT;
  2717  004004  0E07               	movlw	7
  2718  004006  6FEA               	movwf	(_V+79)& (0+255),b
  2719                           
  2720                           ;gemsecs.c: 346:    break;
  2721  004008  D05E               	goto	l6914
  2722  00400A                     l6864:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;stkvar	_function @ sp[(0)+-7]
  2726  00400A  0EF9               	movlw	-7
  2727  00400C  50E3               	movf	plusw1,w,c
  2728  00400E  6E42               	movwf	btemp+10,c
  2729  004010  6A43               	clrf	btemp+11,c
  2730                           
  2731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2732                           ; Switch size 1, requested type "simple"
  2733                           ; Number of cases is 1, Range of values is 0 to 0
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte            4     3 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738  004012  5043               	movf	btemp+11,w,c
  2739  004014  0A00               	xorlw	0	; case 0
  2740  004016  A4D8               	btfss	status,2,c
  2741  004018  D7E7               	goto	l6854
  2742                           
  2743                           ; BSR set to: 0
  2744                           ; Switch size 1, requested type "simple"
  2745                           ; Number of cases is 3, Range of values is 1 to 13
  2746                           ; switch strategies available:
  2747                           ; Name         Instructions Cycles
  2748                           ; simple_byte           10     6 (average)
  2749                           ;	Chosen strategy is simple_byte
  2750  00401A  5042               	movf	btemp+10,w,c
  2751  00401C  0A01               	xorlw	1	; case 1
  2752  00401E  B4D8               	btfsc	status,2,c
  2753  004020  D798               	goto	l6820
  2754  004022  0A02               	xorlw	2	; case 3
  2755  004024  B4D8               	btfsc	status,2,c
  2756  004026  D7B4               	goto	l6834
  2757  004028  0A0E               	xorlw	14	; case 13
  2758  00402A  B4D8               	btfsc	status,2,c
  2759  00402C  D7C0               	goto	l6840
  2760  00402E  D7DC               	goto	l6854
  2761  004030                     l6866:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;gemsecs.c: 352:    block.header = (uint8_t*) & H24[0];
  2765  004030  0E7D               	movlw	low _H24
  2766  004032  6F85               	movwf	secs_II_message@block& (0+255),b
  2767  004034  0E01               	movlw	high _H24
  2768  004036  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;gemsecs.c: 353:    block.length = sizeof(header24);
  2772  004038  0E1B               	movlw	27
  2773  00403A  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;gemsecs.c: 354:    H24[0].block.block.systemb = V.systemb;
  2777  00403C  C0E3  F18D         	movff	_V+72,_H24+16
  2778  004040  C0E4  F18E         	movff	_V+73,_H24+17
  2779  004044  C0E5  F18F         	movff	_V+74,_H24+18
  2780  004048  C0E6  F190         	movff	_V+75,_H24+19
  2781                           
  2782                           ;gemsecs.c: 355:    break;
  2783  00404C  D03C               	goto	l6914
  2784  00404E                     l6882:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;stkvar	_function @ sp[(0)+-7]
  2788  00404E  0EF9               	movlw	-7
  2789  004050  50E3               	movf	plusw1,w,c
  2790  004052  6E42               	movwf	btemp+10,c
  2791  004054  6A43               	clrf	btemp+11,c
  2792                           
  2793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2794                           ; Switch size 1, requested type "simple"
  2795                           ; Number of cases is 1, Range of values is 0 to 0
  2796                           ; switch strategies available:
  2797                           ; Name         Instructions Cycles
  2798                           ; simple_byte            4     3 (average)
  2799                           ;	Chosen strategy is simple_byte
  2800  004056  5043               	movf	btemp+11,w,c
  2801  004058  0A00               	xorlw	0	; case 0
  2802  00405A  A4D8               	btfss	status,2,c
  2803  00405C  D7C5               	goto	l6854
  2804                           
  2805                           ; BSR set to: 0
  2806                           ; Switch size 1, requested type "simple"
  2807                           ; Number of cases is 1, Range of values is 17 to 17
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            4     3 (average)
  2811                           ;	Chosen strategy is simple_byte
  2812  00405E  5042               	movf	btemp+10,w,c
  2813  004060  0A11               	xorlw	17	; case 17
  2814  004062  B4D8               	btfsc	status,2,c
  2815  004064  D7E5               	goto	l6866
  2816  004066  D7C0               	goto	l6854
  2817  004068                     l6884:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;gemsecs.c: 367:    block.header = (uint8_t*) & H13[0];
  2821  004068  0EBD               	movlw	low _H13
  2822  00406A  6F85               	movwf	secs_II_message@block& (0+255),b
  2823  00406C  0E01               	movlw	high _H13
  2824  00406E  6F86               	movwf	(secs_II_message@block+1)& (0+255),b
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;gemsecs.c: 368:    block.length = sizeof(header13);
  2828  004070  0E10               	movlw	16
  2829  004072  6F87               	movwf	(secs_II_message@block+2)& (0+255),b
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;gemsecs.c: 369:    H13[0].block.block.systemb = V.systemb;
  2833  004074  C0E3  F1C2         	movff	_V+72,_H13+5
  2834  004078  C0E4  F1C3         	movff	_V+73,_H13+6
  2835  00407C  C0E5  F1C4         	movff	_V+74,_H13+7
  2836  004080  C0E6  F1C5         	movff	_V+75,_H13+8
  2837                           
  2838                           ;gemsecs.c: 370:    break;
  2839  004084  D020               	goto	l6914
  2840  004086                     l6900:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;stkvar	_function @ sp[(0)+-7]
  2844  004086  0EF9               	movlw	-7
  2845  004088  50E3               	movf	plusw1,w,c
  2846  00408A  6E42               	movwf	btemp+10,c
  2847  00408C  6A43               	clrf	btemp+11,c
  2848                           
  2849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2850                           ; Switch size 1, requested type "simple"
  2851                           ; Number of cases is 1, Range of values is 0 to 0
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte            4     3 (average)
  2855                           ;	Chosen strategy is simple_byte
  2856  00408E  5043               	movf	btemp+11,w,c
  2857  004090  0A00               	xorlw	0	; case 0
  2858  004092  A4D8               	btfss	status,2,c
  2859  004094  D7A9               	goto	l6854
  2860                           
  2861                           ; BSR set to: 0
  2862                           ; Switch size 1, requested type "simple"
  2863                           ; Number of cases is 1, Range of values is 11 to 11
  2864                           ; switch strategies available:
  2865                           ; Name         Instructions Cycles
  2866                           ; simple_byte            4     3 (average)
  2867                           ;	Chosen strategy is simple_byte
  2868  004096  5042               	movf	btemp+10,w,c
  2869  004098  0A0B               	xorlw	11	; case 11
  2870  00409A  B4D8               	btfsc	status,2,c
  2871  00409C  D7E5               	goto	l6884
  2872  00409E  D7A4               	goto	l6854
  2873  0040A0                     l6912:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;stkvar	_stream @ sp[(0)+-6]
  2877  0040A0  0EFA               	movlw	-6
  2878  0040A2  50E3               	movf	plusw1,w,c
  2879  0040A4  6E42               	movwf	btemp+10,c
  2880  0040A6  6A43               	clrf	btemp+11,c
  2881                           
  2882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 1, Range of values is 0 to 0
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte            4     3 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889  0040A8  5043               	movf	btemp+11,w,c
  2890  0040AA  0A00               	xorlw	0	; case 0
  2891  0040AC  A4D8               	btfss	status,2,c
  2892  0040AE  D79C               	goto	l6854
  2893                           
  2894                           ; BSR set to: 0
  2895                           ; Switch size 1, requested type "simple"
  2896                           ; Number of cases is 3, Range of values is 1 to 6
  2897                           ; switch strategies available:
  2898                           ; Name         Instructions Cycles
  2899                           ; simple_byte           10     6 (average)
  2900                           ;	Chosen strategy is simple_byte
  2901  0040B0  5042               	movf	btemp+10,w,c
  2902  0040B2  0A01               	xorlw	1	; case 1
  2903  0040B4  B4D8               	btfsc	status,2,c
  2904  0040B6  D7A9               	goto	l6864
  2905  0040B8  0A03               	xorlw	3	; case 2
  2906  0040BA  B4D8               	btfsc	status,2,c
  2907  0040BC  D7C8               	goto	l6882
  2908  0040BE  0A04               	xorlw	4	; case 6
  2909  0040C0  B4D8               	btfsc	status,2,c
  2910  0040C2  D7E1               	goto	l6900
  2911  0040C4  D791               	goto	l6854
  2912  0040C6                     l6914:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;gemsecs.c: 392:  return(block);
  2916  0040C6  EE20  F085         	lfsr	2,secs_II_message@block
  2917                           
  2918                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  2919  0040CA  0E07               	movlw	7
  2920  0040CC  6E38               	movwf	btemp,c
  2921  0040CE  0EF9               	movlw	-7
  2922  0040D0                     us409999:
  2923  0040D0  006F FF7B FFE3     	movff	postinc2,plusw1
  2924  0040D6  28E8               	incf	wreg,w,c
  2925  0040D8  2E38               	decfsz	btemp,f,c
  2926  0040DA  D7FA               	bra	us409999
  2927                           
  2928                           ; BSR set to: 0
  2929                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  2930  0040DC  0012               	return		;funcret
  2931  0040DE                     __end_of_secs_II_message:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _sprintf *****************
  2935 ;; Defined at:
  2936 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  s               1  [STACK] PTR unsigned char 
  2939 ;;		 -> V(86), 
  2940 ;;  fmt             1  [STACK] PTR const unsigned char 
  2941 ;;		 -> STR_12(21), STR_11(17), STR_10(17), STR_9(19), 
  2942 ;;		 -> STR_8(20), STR_7(6), STR_6(6), STR_5(14), 
  2943 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  f               5  [STACK] struct _IO_FILE
  2946 ;;  ap              2  [STACK] PTR void [1]
  2947 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2948 ;;  ret             2    0        int 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2  [STACK] int 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 3F/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:   11
  2965 ;; This function calls:
  2966 ;;		_vfprintf
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text3
  2973  004718                     __ptext3:
  2974                           	opt callstack 0
  2975  004718                     _sprintf:
  2976                           	opt callstack 0
  2977                           
  2978                           ; BSR set to: 0
  2979                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2980  004718  0E07               	movlw	7
  2981  00471A  26E1               	addwf	fsr1l,f,c
  2982  00471C  0E00               	movlw	0
  2983  00471E  22E2               	addwfc	fsr1h,f,c
  2984                           
  2985                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2986                           
  2987                           ;incstack = 0
  2988  004720  0EF6               	movlw	246
  2989  004722  24E1               	addwf	fsr1l,w,c
  2990  004724  6E42               	movwf	btemp+10,c
  2991  004726  0EFF               	movlw	255
  2992  004728  20E2               	addwfc	fsr1h,w,c
  2993  00472A  6E43               	movwf	btemp+11,c
  2994                           
  2995                           ;stkvar	_ap @ sp[(-7)+5]
  2996  00472C  0EFF               	movlw	-1
  2997  00472E  0060  F10F  FFE3   	movff	btemp+11,plusw1
  2998  004734  0EFE               	movlw	-2
  2999  004736  0060  F10B  FFE3   	movff	btemp+10,plusw1
  3000                           
  3001                           ;stkvar	_s @ sp[(-7)+-2]
  3002  00473C  0EF7               	movlw	-9
  3003  00473E  006F FF8C  F043    	movff	plusw1,btemp+11
  3004                           
  3005                           ;stkvar	_f @ sp[(-7)+0]
  3006  004744  0EF9               	movlw	-7
  3007  004746  0060  F10F  FFE3   	movff	btemp+11,plusw1
  3008                           
  3009                           ;stkvar	_f @ sp[(-7)+0]
  3010  00474C  0EFA               	movlw	250
  3011  00474E  24E1               	addwf	fsr1l,w,c
  3012  004750  6ED9               	movwf	fsr2l,c
  3013  004752  0EFF               	movlw	255
  3014  004754  20E2               	addwfc	fsr1h,w,c
  3015  004756  6EDA               	movwf	fsr2h,c
  3016  004758  0E00               	movlw	0
  3017  00475A  6EDE               	movwf	postinc2,c
  3018  00475C  0E00               	movlw	0
  3019  00475E  6EDD               	movwf	postdec2,c
  3020                           
  3021                           ;stkvar	_f @ sp[(-7)+0]
  3022  004760  0EFC               	movlw	252
  3023  004762  24E1               	addwf	fsr1l,w,c
  3024  004764  6ED9               	movwf	fsr2l,c
  3025  004766  0EFF               	movlw	255
  3026  004768  20E2               	addwfc	fsr1h,w,c
  3027  00476A  6EDA               	movwf	fsr2h,c
  3028  00476C  0E00               	movlw	0
  3029  00476E  6EDE               	movwf	postinc2,c
  3030  004770  0E00               	movlw	0
  3031  004772  6EDD               	movwf	postdec2,c
  3032                           
  3033                           ;stkvar	_ap @ sp[(-7)+5]
  3034  004774  0EFE               	movlw	254
  3035  004776  24E1               	addwf	fsr1l,w,c
  3036  004778  6E38               	movwf	btemp,c
  3037  00477A  0EFF               	movlw	255
  3038  00477C  20E2               	addwfc	fsr1h,w,c
  3039  00477E  6E39               	movwf	btemp+1,c
  3040  004780  0060  F0E3  FFE6   	movff	btemp,postinc1
  3041  004786  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3042                           
  3043                           ;stkvar	_fmt @ sp[(-9)+-3]
  3044  00478C  0EF4               	movlw	-12
  3045  00478E  50E3               	movf	plusw1,w,c
  3046  004790  6EE6               	movwf	postinc1,c
  3047                           
  3048                           ;stkvar	_f @ sp[(-10)+0]
  3049  004792  0EF6               	movlw	246
  3050  004794  24E1               	addwf	fsr1l,w,c
  3051  004796  6E38               	movwf	btemp,c
  3052  004798  0EFF               	movlw	255
  3053  00479A  20E2               	addwfc	fsr1h,w,c
  3054  00479C  6E39               	movwf	btemp+1,c
  3055  00479E  0060  F0E3  FFE6   	movff	btemp,postinc1
  3056  0047A4  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  3057  0047AA  EC8B  F025         	call	_vfprintf	;wreg free
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;stkvar	_f @ sp[(-7)+0]
  3061  0047AE  0EFA               	movlw	250
  3062  0047B0  24E1               	addwf	fsr1l,w,c
  3063  0047B2  6ED9               	movwf	fsr2l,c
  3064  0047B4  0EFF               	movlw	255
  3065  0047B6  20E2               	addwfc	fsr1h,w,c
  3066  0047B8  6EDA               	movwf	fsr2h,c
  3067  0047BA  50DF               	movf	indf2,w,c
  3068  0047BC  6E43               	movwf	btemp+11,c
  3069                           
  3070                           ;stkvar	_s @ sp[(-7)+-2]
  3071  0047BE  0EF7               	movlw	-9
  3072  0047C0  50E3               	movf	plusw1,w,c
  3073  0047C2  2443               	addwf	btemp+11,w,c
  3074  0047C4  6ED9               	movwf	fsr2l,c
  3075  0047C6  6ADA               	clrf	fsr2h,c
  3076  0047C8  0E00               	movlw	0
  3077  0047CA  6EDF               	movwf	indf2,c
  3078                           
  3079                           ; BSR set to: 0
  3080                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3081  0047CC  0EF9               	movlw	249
  3082  0047CE  26E1               	addwf	fsr1l,f,c
  3083  0047D0  0EFF               	movlw	255
  3084  0047D2  22E2               	addwfc	fsr1h,f,c
  3085  0047D4  52E5               	movf	postdec1,f,c
  3086  0047D6  50E7               	movf	indf1,w,c
  3087  0047D8  5EE1               	subwf	fsr1l,f,c
  3088  0047DA  0E00               	movlw	0
  3089  0047DC  5AE2               	subwfb	fsr1h,f,c
  3090  0047DE  0012               	return		;funcret
  3091  0047E0                     __end_of_sprintf:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _r_protocol *****************
  3095 ;; Defined at:
  3096 ;;		line 42 in file "gemsecs.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  r_link          1  [STACK] PTR enum E16165
  3099 ;;		 -> V(86), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  rxData          1  [STACK] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1  [STACK] enum E16903
  3104 ;; Registers used:
  3105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    5
  3118 ;; This function calls:
  3119 ;;		_StartTimer
  3120 ;;		_TimerDone
  3121 ;;		_UART1_Read
  3122 ;;		_UART1_Write
  3123 ;;		_UART1_is_rx_ready
  3124 ;;		_WaitMs
  3125 ;;		_run_checksum
  3126 ;;		_secs_send
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text4
  3133  002D88                     __ptext4:
  3134                           	opt callstack 0
  3135  002D88                     _r_protocol:
  3136                           	opt callstack 0
  3137                           
  3138                           ; BSR set to: 0
  3139                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3140  002D88  52E6               	movf	postinc1,f,c
  3141                           
  3142                           ;gemsecs.c: 42: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          47:  switch (*r_link) {
  3143                           
  3144                           ;incstack = 0
  3145  002D8A  D155               	goto	l7136
  3146  002D8C                     l7024:
  3147                           
  3148                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  3149  002D8C  ECC7  F02C         	call	_UART1_is_rx_ready	;wreg free
  3150  002D90  5038               	movf	btemp,w,c
  3151  002D92  B4D8               	btfsc	status,2,c
  3152  002D94  D171               	goto	l7138
  3153                           
  3154                           ;gemsecs.c: 50:    rxData = UART1_Read();
  3155  002D96  EC13  F029         	call	_UART1_Read	;wreg free
  3156                           
  3157                           ;stkvar	_rxData @ sp[(-1)+0]
  3158  002D9A  0EFF               	movlw	-1
  3159  002D9C  0060  F0E3  FFE3   	movff	btemp,plusw1
  3160                           
  3161                           ; BSR set to: 57
  3162                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  3163                           ;stkvar	_rxData @ sp[(-1)+0]
  3164  002DA2  0EFF               	movlw	-1
  3165  002DA4  006F FF8C  F038    	movff	plusw1,btemp
  3166  002DAA  0E05               	movlw	5
  3167  002DAC  1838               	xorwf	btemp,w,c
  3168  002DAE  A4D8               	btfss	status,2,c
  3169  002DB0  D163               	goto	l7138
  3170                           
  3171                           ; BSR set to: 57
  3172                           ;gemsecs.c: 52:     V.error = LINK_ERROR_NONE;
  3173  002DB2  0100               	movlb	0	; () banked
  3174  002DB4  6BE9               	clrf	(_V+78)& (0+255),b
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;gemsecs.c: 53:     *r_link = LINK_STATE_ENQ;
  3178                           ;stkvar	_r_link @ sp[(-1)+-1]
  3179  002DB6  0EFE               	movlw	-2
  3180  002DB8  50E3               	movf	plusw1,w,c
  3181  002DBA  6ED9               	movwf	fsr2l,c
  3182  002DBC  6ADA               	clrf	fsr2h,c
  3183  002DBE  0E01               	movlw	1
  3184  002DC0  D121               	goto	L10
  3185  002DC2                     l1510:
  3186                           
  3187                           ;gemsecs.c: 58:   rxData_l = 0;
  3188  002DC2  6A2B               	clrf	r_protocol@rxData_l,c
  3189                           
  3190                           ;gemsecs.c: 59:   UART1_Write(0x04);
  3191  002DC4  0E04               	movlw	4
  3192  002DC6  6EE6               	movwf	postinc1,c
  3193  002DC8  ECF4  F028         	call	_UART1_Write	;wreg free
  3194                           
  3195                           ; BSR set to: 57
  3196                           ;gemsecs.c: 60:   StartTimer(TMR_T2, 2000);
  3197  002DCC  0ED0               	movlw	208
  3198  002DCE  6EE6               	movwf	postinc1,c
  3199  002DD0  0E07               	movlw	7
  3200  002DD2  6EE6               	movwf	postinc1,c
  3201  002DD4  0E02               	movlw	2
  3202  002DD6  6EE6               	movwf	postinc1,c
  3203  002DD8  EC51  F029         	call	_StartTimer	;wreg free
  3204                           
  3205                           ;gemsecs.c: 61:   *r_link = LINK_STATE_EOT;
  3206                           ;stkvar	_r_link @ sp[(-1)+-1]
  3207  002DDC  0EFE               	movlw	-2
  3208  002DDE  50E3               	movf	plusw1,w,c
  3209  002DE0  6ED9               	movwf	fsr2l,c
  3210  002DE2  6ADA               	clrf	fsr2h,c
  3211  002DE4  0E02               	movlw	2
  3212  002DE6  6EDF               	movwf	indf2,c
  3213                           
  3214                           ;gemsecs.c: 63:   WaitMs(5);
  3215  002DE8  0E05               	movlw	5
  3216  002DEA  6EE6               	movwf	postinc1,c
  3217  002DEC  0E00               	movlw	0
  3218  002DEE  6EE6               	movwf	postinc1,c
  3219  002DF0  ECDC  F029         	call	_WaitMs	;wreg free
  3220                           
  3221                           ;gemsecs.c: 64:   H27[0].block.block.systemb = V.ticks;
  3222  002DF4  C0DF  F154         	movff	_V+68,_H27+19
  3223  002DF8  C0E0  F155         	movff	_V+69,_H27+20
  3224  002DFC  C0E1  F156         	movff	_V+70,_H27+21
  3225  002E00  C0E2  F157         	movff	_V+71,_H27+22
  3226                           
  3227                           ;gemsecs.c: 65:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1);
  3228  002E04  0E01               	movlw	1
  3229  002E06  6EE6               	movwf	postinc1,c
  3230  002E08  0E1E               	movlw	30
  3231  002E0A  6EE6               	movwf	postinc1,c
  3232  002E0C  0E41               	movlw	low _H27
  3233  002E0E  6EE6               	movwf	postinc1,c
  3234  002E10  0E01               	movlw	high _H27
  3235  002E12  6EE6               	movwf	postinc1,c
  3236  002E14  ECC4  F01E         	call	_secs_send	;wreg free
  3237                           
  3238                           ;gemsecs.c: 67:   break;
  3239  002E18  D12F               	goto	l7138
  3240  002E1A                     l7046:
  3241                           
  3242                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  3243  002E1A  0E02               	movlw	2
  3244  002E1C  6EE6               	movwf	postinc1,c
  3245  002E1E  EC6F  F02B         	call	_TimerDone	;wreg free
  3246  002E22  5038               	movf	btemp,w,c
  3247  002E24  B4D8               	btfsc	status,2,c
  3248  002E26  D017               	goto	l7056
  3249                           
  3250                           ;gemsecs.c: 70:    if (!retry--) {
  3251  002E28  065A               	decf	r_protocol@retry,f,c
  3252  002E2A  285A               	incf	r_protocol@retry,w,c
  3253  002E2C  A4D8               	btfss	status,2,c
  3254  002E2E  D00D               	goto	l7054
  3255                           
  3256                           ;gemsecs.c: 71:     V.error = LINK_ERROR_T2;
  3257  002E30  0E02               	movlw	2
  3258  002E32  0100               	movlb	0	; () banked
  3259  002E34  6FE9               	movwf	(_V+78)& (0+255),b
  3260                           
  3261                           ;gemsecs.c: 72:     V.failed_receive = 1;
  3262  002E36  51F0               	movf	(_V+85)& (0+255),w,b
  3263  002E38  0BF0               	andlw	-16
  3264  002E3A  0901               	iorlw	1
  3265  002E3C  6FF0               	movwf	(_V+85)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;gemsecs.c: 73:     *r_link = LINK_STATE_NAK;
  3269                           ;stkvar	_r_link @ sp[(-1)+-1]
  3270  002E3E  0EFE               	movlw	-2
  3271  002E40  50E3               	movf	plusw1,w,c
  3272  002E42  6ED9               	movwf	fsr2l,c
  3273  002E44  6ADA               	clrf	fsr2h,c
  3274  002E46  0E05               	movlw	5
  3275  002E48  D0DD               	goto	L10
  3276  002E4A                     l7054:
  3277                           
  3278                           ;gemsecs.c: 75:     *r_link = LINK_STATE_IDLE;
  3279                           ;stkvar	_r_link @ sp[(-1)+-1]
  3280  002E4A  0EFE               	movlw	-2
  3281  002E4C  50E3               	movf	plusw1,w,c
  3282  002E4E  6ED9               	movwf	fsr2l,c
  3283  002E50  6ADA               	clrf	fsr2h,c
  3284  002E52  0E00               	movlw	0
  3285  002E54  D0D7               	goto	L10
  3286  002E56                     l7056:
  3287                           
  3288                           ;gemsecs.c: 78:    if (UART1_is_rx_ready()) {
  3289  002E56  ECC7  F02C         	call	_UART1_is_rx_ready	;wreg free
  3290  002E5A  5038               	movf	btemp,w,c
  3291  002E5C  B4D8               	btfsc	status,2,c
  3292  002E5E  D10C               	goto	l7138
  3293                           
  3294                           ;gemsecs.c: 79:     rxData = UART1_Read();
  3295  002E60  EC13  F029         	call	_UART1_Read	;wreg free
  3296                           
  3297                           ;stkvar	_rxData @ sp[(-1)+0]
  3298  002E64  0EFF               	movlw	-1
  3299  002E66  0060  F0E3  FFE3   	movff	btemp,plusw1
  3300                           
  3301                           ; BSR set to: 57
  3302                           ;gemsecs.c: 80:     if (rxData_l == 0) {
  3303  002E6C  502B               	movf	r_protocol@rxData_l,w,c
  3304  002E6E  A4D8               	btfss	status,2,c
  3305  002E70  D00C               	goto	l7068
  3306                           
  3307                           ; BSR set to: 57
  3308                           ;gemsecs.c: 81:      r_block.length = rxData;
  3309                           ;stkvar	_rxData @ sp[(-1)+0]
  3310  002E72  0EFF               	movlw	-1
  3311  002E74  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3312                           
  3313                           ; BSR set to: 57
  3314                           ;gemsecs.c: 82:      run_checksum(0, 1);
  3315  002E7A  0E01               	movlw	1
  3316  002E7C  6EE6               	movwf	postinc1,c
  3317  002E7E  0E00               	movlw	0
  3318  002E80  6EE6               	movwf	postinc1,c
  3319  002E82  EC6F  F029         	call	_run_checksum	;wreg free
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;gemsecs.c: 83:      rxData_l++;
  3323  002E86  2A2B               	incf	r_protocol@rxData_l,f,c
  3324                           
  3325                           ;gemsecs.c: 84:     } else {
  3326  002E88  D0F7               	goto	l7138
  3327  002E8A                     l7068:
  3328                           
  3329                           ; BSR set to: 57
  3330                           ;gemsecs.c: 88:      if (rxData_l <= sizeof(block10))
  3331  002E8A  0E0B               	movlw	11
  3332  002E8C  602B               	cpfslt	r_protocol@rxData_l,c
  3333  002E8E  D00C               	goto	l7072
  3334                           
  3335                           ; BSR set to: 57
  3336                           ;gemsecs.c: 89:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3337                           ;stkvar	_rxData @ sp[(-1)+0]
  3338  002E90  502B               	movf	r_protocol@rxData_l,w,c
  3339  002E92  0819               	sublw	low (_H10+25)
  3340  002E94  6ED9               	movwf	fsr2l,c
  3341  002E96  0E00               	movlw	0
  3342  002E98  A0D8               	btfss	status,0,c
  3343  002E9A  2AE8               	incf	wreg,f,c
  3344  002E9C  0801               	sublw	high (_H10+25)
  3345  002E9E  6EDA               	movwf	fsr2h,c
  3346  002EA0  0EFF               	movlw	-1
  3347  002EA2  006F FF8F FFDF     	movff	plusw1,indf2
  3348  002EA8                     l7072:
  3349                           
  3350                           ; BSR set to: 57
  3351                           ;gemsecs.c: 90:      if (rxData_l <= r_block.length)
  3352  002EA8  502B               	movf	r_protocol@rxData_l,w,c
  3353  002EAA  0100               	movlb	0	; () banked
  3354  002EAC  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3355  002EAE  A0D8               	btfss	status,0,c
  3356  002EB0  D00D               	goto	l7076
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;gemsecs.c: 91:       V.r_checksum = run_checksum(rxData, 0);
  3360  002EB2  0E00               	movlw	0
  3361  002EB4  6EE6               	movwf	postinc1,c
  3362                           
  3363                           ;stkvar	_rxData @ sp[(-2)+0]
  3364  002EB6  0EFE               	movlw	-2
  3365  002EB8  50E3               	movf	plusw1,w,c
  3366  002EBA  6EE6               	movwf	postinc1,c
  3367  002EBC  EC6F  F029         	call	_run_checksum	;wreg free
  3368  002EC0  0060  F0E0  F0EB   	movff	btemp,_V+80
  3369  002EC6  0060  F0E4  F0EC   	movff	btemp+1,_V+81
  3370  002ECC                     l7076:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;gemsecs.c: 93:      if (rxData_l == r_block.length + 1)
  3374  002ECC  502B               	movf	r_protocol@rxData_l,w,c
  3375  002ECE  6E42               	movwf	btemp+10,c
  3376  002ED0  6A43               	clrf	btemp+11,c
  3377  002ED2  516C               	movf	(_r_block+12)& (0+255),w,b
  3378  002ED4  6E40               	movwf	btemp+8,c
  3379  002ED6  6A41               	clrf	btemp+9,c
  3380  002ED8  0E01               	movlw	1
  3381  002EDA  2640               	addwf	btemp+8,f,c
  3382  002EDC  0E00               	movlw	0
  3383  002EDE  2241               	addwfc	btemp+9,f,c
  3384  002EE0  5042               	movf	btemp+10,w,c
  3385  002EE2  1840               	xorwf	btemp+8,w,c
  3386  002EE4  E109               	bnz	l7080
  3387  002EE6  5043               	movf	btemp+11,w,c
  3388  002EE8  1841               	xorwf	btemp+9,w,c
  3389  002EEA  A4D8               	btfss	status,2,c
  3390  002EEC  D005               	goto	l7080
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;gemsecs.c: 94:       H10[1].checksum = (uint16_t) rxData << 8;
  3394                           ;stkvar	_rxData @ sp[(-1)+0]
  3395  002EEE  0EFF               	movlw	-1
  3396  002EF0  50E3               	movf	plusw1,w,c
  3397  002EF2  0101               	movlb	1	; () banked
  3398  002EF4  6F0E               	movwf	(_H10+14)& (0+255),b
  3399  002EF6  6B0D               	clrf	(_H10+13)& (0+255),b
  3400  002EF8                     l7080:
  3401                           
  3402                           ;gemsecs.c: 95:      if (rxData_l == r_block.length + 2)
  3403  002EF8  502B               	movf	r_protocol@rxData_l,w,c
  3404  002EFA  6E42               	movwf	btemp+10,c
  3405  002EFC  6A43               	clrf	btemp+11,c
  3406  002EFE  0100               	movlb	0	; () banked
  3407  002F00  516C               	movf	(_r_block+12)& (0+255),w,b
  3408  002F02  6E40               	movwf	btemp+8,c
  3409  002F04  6A41               	clrf	btemp+9,c
  3410  002F06  0E02               	movlw	2
  3411  002F08  2640               	addwf	btemp+8,f,c
  3412  002F0A  0E00               	movlw	0
  3413  002F0C  2241               	addwfc	btemp+9,f,c
  3414  002F0E  5042               	movf	btemp+10,w,c
  3415  002F10  1840               	xorwf	btemp+8,w,c
  3416  002F12  E10A               	bnz	l7084
  3417  002F14  5043               	movf	btemp+11,w,c
  3418  002F16  1841               	xorwf	btemp+9,w,c
  3419  002F18  A4D8               	btfss	status,2,c
  3420  002F1A  D006               	goto	l7084
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;gemsecs.c: 96:       H10[1].checksum += rxData;
  3424                           ;stkvar	_rxData @ sp[(-1)+0]
  3425  002F1C  0EFF               	movlw	-1
  3426  002F1E  50E3               	movf	plusw1,w,c
  3427  002F20  0101               	movlb	1	; () banked
  3428  002F22  270D               	addwf	(_H10+13)& (0+255),f,b
  3429  002F24  0E00               	movlw	0
  3430  002F26  230E               	addwfc	(_H10+14)& (0+255),f,b
  3431  002F28                     l7084:
  3432                           
  3433                           ;gemsecs.c: 98:      rxData_l++;
  3434  002F28  2A2B               	incf	r_protocol@rxData_l,f,c
  3435                           
  3436                           ;gemsecs.c: 99:      if (rxData_l > (r_block.length + 2)) {
  3437  002F2A  502B               	movf	r_protocol@rxData_l,w,c
  3438  002F2C  6E42               	movwf	btemp+10,c
  3439  002F2E  6A43               	clrf	btemp+11,c
  3440  002F30  0100               	movlb	0	; () banked
  3441  002F32  516C               	movf	(_r_block+12)& (0+255),w,b
  3442  002F34  6E40               	movwf	btemp+8,c
  3443  002F36  6A41               	clrf	btemp+9,c
  3444  002F38  0E02               	movlw	2
  3445  002F3A  2640               	addwf	btemp+8,f,c
  3446  002F3C  0E00               	movlw	0
  3447  002F3E  2241               	addwfc	btemp+9,f,c
  3448  002F40  5042               	movf	btemp+10,w,c
  3449  002F42  5C40               	subwf	btemp+8,w,c
  3450  002F44  5041               	movf	btemp+9,w,c
  3451  002F46  0A80               	xorlw	128
  3452  002F48  6E38               	movwf	btemp,c
  3453  002F4A  5043               	movf	btemp+11,w,c
  3454  002F4C  0A80               	xorlw	128
  3455  002F4E  5838               	subwfb	btemp,w,c
  3456  002F50  B0D8               	btfsc	status,0,c
  3457  002F52  D092               	goto	l7138
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;gemsecs.c: 100:       if (V.r_checksum == H10[1].checksum) {
  3461  002F54  0101               	movlb	1	; () banked
  3462  002F56  510D               	movf	(_H10+13)& (0+255),w,b
  3463  002F58  0100               	movlb	0	; () banked
  3464  002F5A  19EB               	xorwf	(_V+80)& (0+255),w,b
  3465  002F5C  E10E               	bnz	l7094
  3466  002F5E  0101               	movlb	1	; () banked
  3467  002F60  510E               	movf	(_H10+14)& (0+255),w,b
  3468  002F62  0100               	movlb	0	; () banked
  3469  002F64  19EC               	xorwf	(_V+81)& (0+255),w,b
  3470  002F66  A4D8               	btfss	status,2,c
  3471  002F68  D008               	goto	l7094
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;gemsecs.c: 101:        *r_link = LINK_STATE_ACK;
  3475                           ;stkvar	_r_link @ sp[(-1)+-1]
  3476  002F6A  0EFE               	movlw	-2
  3477  002F6C  50E3               	movf	plusw1,w,c
  3478  002F6E  6ED9               	movwf	fsr2l,c
  3479  002F70  6ADA               	clrf	fsr2h,c
  3480  002F72  0E03               	movlw	3
  3481  002F74  D047               	goto	L10
  3482  002F76                     l7092:
  3483  002F76  EC13  F029         	call	_UART1_Read	;wreg free
  3484  002F7A                     l7094:
  3485                           
  3486                           ;gemsecs.c: 103:        while (UART1_is_rx_ready())
  3487  002F7A  ECC7  F02C         	call	_UART1_is_rx_ready	;wreg free
  3488  002F7E  5038               	movf	btemp,w,c
  3489  002F80  A4D8               	btfss	status,2,c
  3490  002F82  D7F9               	goto	l7092
  3491                           
  3492                           ;gemsecs.c: 105:        WaitMs(500);
  3493  002F84  0EF4               	movlw	244
  3494  002F86  6EE6               	movwf	postinc1,c
  3495  002F88  0E01               	movlw	1
  3496  002F8A  6EE6               	movwf	postinc1,c
  3497  002F8C  ECDC  F029         	call	_WaitMs	;wreg free
  3498                           
  3499                           ;gemsecs.c: 106:        V.error = LINK_ERROR_CHECKSUM;
  3500  002F90  0E05               	movlw	5
  3501  002F92  0100               	movlb	0	; () banked
  3502  002F94  6FE9               	movwf	(_V+78)& (0+255),b
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;gemsecs.c: 107:        V.failed_receive = 2;
  3506  002F96  51F0               	movf	(_V+85)& (0+255),w,b
  3507  002F98  0BF0               	andlw	-16
  3508  002F9A  0902               	iorlw	2
  3509  002F9C  D74F               	goto	L11
  3510  002F9E                     l7104:
  3511                           
  3512                           ;gemsecs.c: 116:   V.stream = H10[1].block.block.stream;
  3513  002F9E  0101               	movlb	1	; () banked
  3514  002FA0  5116               	movf	(_H10+22)& (0+255),w,b
  3515  002FA2  0B7F               	andlw	127
  3516  002FA4  0100               	movlb	0	; () banked
  3517  002FA6  6FE7               	movwf	(_V+76)& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;gemsecs.c: 117:   V.function = H10[1].block.block.function;
  3521  002FA8  C115  F0E8         	movff	_H10+21,_V+77
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;gemsecs.c: 118:   V.systemb = H10[1].block.block.systemb;
  3525  002FAC  C10F  F0E3         	movff	_H10+15,_V+72
  3526  002FB0  C110  F0E4         	movff	_H10+16,_V+73
  3527  002FB4  C111  F0E5         	movff	_H10+17,_V+74
  3528  002FB8  C112  F0E6         	movff	_H10+18,_V+75
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;gemsecs.c: 119:   V.rbit = H10[1].block.block.rbit;
  3532  002FBC  0101               	movlb	1	; () banked
  3533  002FBE  AF18               	btfss	(_H10+24)& (0+255),7,b
  3534  002FC0  D003               	bra	u4235
  3535  002FC2  0100               	movlb	0	; () banked
  3536  002FC4  81EF               	bsf	(_V+84)& (0+255),0,b
  3537  002FC6  D002               	bra	u4237
  3538  002FC8                     u4235:
  3539  002FC8  0100               	movlb	0	; () banked
  3540  002FCA  91EF               	bcf	(_V+84)& (0+255),0,b
  3541  002FCC                     u4237:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;gemsecs.c: 120:   V.wbit = H10[1].block.block.wbit;
  3545  002FCC  0101               	movlb	1	; () banked
  3546  002FCE  AF16               	btfss	(_H10+22)& (0+255),7,b
  3547  002FD0  D003               	bra	u4245
  3548  002FD2  0100               	movlb	0	; () banked
  3549  002FD4  83EF               	bsf	(_V+84)& (0+255),1,b
  3550  002FD6  D002               	bra	u4247
  3551  002FD8                     u4245:
  3552  002FD8  0100               	movlb	0	; () banked
  3553  002FDA  93EF               	bcf	(_V+84)& (0+255),1,b
  3554  002FDC                     u4247:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;gemsecs.c: 121:   V.ebit = H10[1].block.block.ebit;
  3558  002FDC  0101               	movlb	1	; () banked
  3559  002FDE  AF14               	btfss	(_H10+20)& (0+255),7,b
  3560  002FE0  D003               	bra	u4255
  3561  002FE2  0100               	movlb	0	; () banked
  3562  002FE4  85EF               	bsf	(_V+84)& (0+255),2,b
  3563  002FE6  D002               	bra	u4257
  3564  002FE8                     u4255:
  3565  002FE8  0100               	movlb	0	; () banked
  3566  002FEA  95EF               	bcf	(_V+84)& (0+255),2,b
  3567  002FEC                     u4257:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;gemsecs.c: 122:   UART1_Write(0x06);
  3571  002FEC  0E06               	movlw	6
  3572  002FEE  6EE6               	movwf	postinc1,c
  3573  002FF0  ECF4  F028         	call	_UART1_Write	;wreg free
  3574                           
  3575                           ; BSR set to: 57
  3576                           ;gemsecs.c: 123:   V.failed_receive = 0;
  3577  002FF4  0EF0               	movlw	-16
  3578  002FF6  0100               	movlb	0	; () banked
  3579  002FF8  17F0               	andwf	(_V+85)& (0+255),f,b
  3580                           
  3581                           ;gemsecs.c: 124:   *r_link = LINK_STATE_DONE;
  3582                           ;stkvar	_r_link @ sp[(-1)+-1]
  3583  002FFA  0EFE               	movlw	-2
  3584  002FFC  50E3               	movf	plusw1,w,c
  3585  002FFE  6ED9               	movwf	fsr2l,c
  3586  003000  6ADA               	clrf	fsr2h,c
  3587  003002  0E04               	movlw	4
  3588  003004                     L10:
  3589  003004  6EDF               	movwf	indf2,c
  3590                           
  3591                           ;gemsecs.c: 125:   break;
  3592  003006  D038               	goto	l7138
  3593  003008                     l7120:
  3594                           
  3595                           ;gemsecs.c: 127:   UART1_Write(0x15);
  3596  003008  0E15               	movlw	21
  3597  00300A  6EE6               	movwf	postinc1,c
  3598  00300C  ECF4  F028         	call	_UART1_Write	;wreg free
  3599                           
  3600                           ; BSR set to: 57
  3601                           ;gemsecs.c: 128:   *r_link = LINK_STATE_ERROR;
  3602                           ;stkvar	_r_link @ sp[(-1)+-1]
  3603  003010  0EFE               	movlw	-2
  3604  003012  50E3               	movf	plusw1,w,c
  3605  003014  6ED9               	movwf	fsr2l,c
  3606  003016  6ADA               	clrf	fsr2h,c
  3607  003018  0E06               	movlw	6
  3608  00301A  6EDF               	movwf	indf2,c
  3609                           
  3610                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  3611  00301C  D002               	goto	l7126
  3612  00301E                     l7124:
  3613                           
  3614                           ; BSR set to: 57
  3615                           ;gemsecs.c: 130:    UART1_Read();
  3616  00301E  EC13  F029         	call	_UART1_Read	;wreg free
  3617  003022                     l7126:
  3618                           
  3619                           ; BSR set to: 57
  3620                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  3621  003022  5032               	movf	_uart1RxCount,w,c	;volatile
  3622  003024  A4D8               	btfss	status,2,c
  3623  003026  D7FB               	goto	l7124
  3624                           
  3625                           ; BSR set to: 57
  3626                           ;gemsecs.c: 132:   retry = 3;
  3627  003028  0E03               	movlw	3
  3628  00302A  6E5A               	movwf	r_protocol@retry,c
  3629                           
  3630                           ;gemsecs.c: 133:   break;
  3631  00302C  D025               	goto	l7138
  3632  00302E                     l7130:
  3633                           
  3634                           ;gemsecs.c: 137:   V.failed_receive = 0;
  3635  00302E  0EF0               	movlw	-16
  3636  003030  0100               	movlb	0	; () banked
  3637  003032  17F0               	andwf	(_V+85)& (0+255),f,b
  3638  003034  D70A               	goto	l7054
  3639  003036                     l7136:
  3640                           
  3641                           ;stkvar	_r_link @ sp[(-1)+-1]
  3642  003036  0EFE               	movlw	-2
  3643  003038  50E3               	movf	plusw1,w,c
  3644  00303A  6ED9               	movwf	fsr2l,c
  3645  00303C  6ADA               	clrf	fsr2h,c
  3646  00303E  50DF               	movf	indf2,w,c
  3647  003040  6E42               	movwf	btemp+10,c
  3648  003042  6A43               	clrf	btemp+11,c
  3649                           
  3650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3651                           ; Switch size 1, requested type "simple"
  3652                           ; Number of cases is 1, Range of values is 0 to 0
  3653                           ; switch strategies available:
  3654                           ; Name         Instructions Cycles
  3655                           ; simple_byte            4     3 (average)
  3656                           ;	Chosen strategy is simple_byte
  3657  003044  5043               	movf	btemp+11,w,c
  3658  003046  0A00               	xorlw	0	; case 0
  3659  003048  A4D8               	btfss	status,2,c
  3660  00304A  D6FF               	goto	l7054
  3661                           
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 7, Range of values is 0 to 6
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte           22    12 (average)
  3667                           ;	Chosen strategy is simple_byte
  3668  00304C  5042               	movf	btemp+10,w,c
  3669  00304E  0A00               	xorlw	0	; case 0
  3670  003050  B4D8               	btfsc	status,2,c
  3671  003052  D69C               	goto	l7024
  3672  003054  0A01               	xorlw	1	; case 1
  3673  003056  B4D8               	btfsc	status,2,c
  3674  003058  D6B4               	goto	l1510
  3675  00305A  0A03               	xorlw	3	; case 2
  3676  00305C  B4D8               	btfsc	status,2,c
  3677  00305E  D6DD               	goto	l7046
  3678  003060  0A01               	xorlw	1	; case 3
  3679  003062  B4D8               	btfsc	status,2,c
  3680  003064  D79C               	goto	l7104
  3681  003066  0A07               	xorlw	7	; case 4
  3682  003068  B4D8               	btfsc	status,2,c
  3683  00306A  D7E1               	goto	l7130
  3684  00306C  0A01               	xorlw	1	; case 5
  3685  00306E  B4D8               	btfsc	status,2,c
  3686  003070  D7CB               	goto	l7120
  3687  003072  0A03               	xorlw	3	; case 6
  3688  003074  A4D8               	btfss	status,2,c
  3689  003076  D6E9               	goto	l7054
  3690  003078                     l7138:
  3691                           
  3692                           ;gemsecs.c: 143:  return *r_link;
  3693                           ;stkvar	_r_link @ sp[(-1)+-1]
  3694  003078  0EFE               	movlw	-2
  3695  00307A  50E3               	movf	plusw1,w,c
  3696  00307C  6ED9               	movwf	fsr2l,c
  3697  00307E  6ADA               	clrf	fsr2h,c
  3698  003080  50DF               	movf	indf2,w,c
  3699  003082  6E38               	movwf	btemp,c
  3700                           
  3701                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3702  003084  52E5               	movf	postdec1,f,c
  3703  003086  52E5               	movf	postdec1,f,c
  3704  003088  0012               	return		;funcret
  3705  00308A                     __end_of_r_protocol:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _secs_send *****************
  3709 ;; Defined at:
  3710 ;;		line 252 in file "gemsecs.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  byte_block      2  [STACK] PTR unsigned char 
  3713 ;;		 -> H27(30), H24(27), H17(20), H14(17), 
  3714 ;;		 -> H13(16), H12(30), H10(65), 
  3715 ;;  length          1  [STACK] unsigned char 
  3716 ;;  fake            1  [STACK] _Bool 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  k               2  [STACK] PTR unsigned char 
  3719 ;;		 -> H27(30), H24(27), H17(20), H14(17), 
  3720 ;;		 -> H13(16), H12(30), H10(65), 
  3721 ;;  checksum        2  [STACK] unsigned short 
  3722 ;;  i               1  [STACK] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1  [STACK] _Bool 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    4
  3739 ;; This function calls:
  3740 ;;		_UART1_Write
  3741 ;;		_UART1_is_tx_ready
  3742 ;;		_UART1_put_buffer
  3743 ;;		_block_checksum
  3744 ;; This function is called by:
  3745 ;;		_r_protocol
  3746 ;;		_t_protocol
  3747 ;; This function uses a reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text5
  3751  003D88                     __ptext5:
  3752                           	opt callstack 0
  3753  003D88                     _secs_send:
  3754                           	opt callstack 0
  3755                           
  3756                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3757  003D88  0E05               	movlw	5
  3758  003D8A  26E1               	addwf	fsr1l,f,c
  3759  003D8C  0E00               	movlw	0
  3760  003D8E  22E2               	addwfc	fsr1h,f,c
  3761                           
  3762                           ;gemsecs.c: 252: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 253: {;gemsecs.c: 254:  uint8_t i, *k;;gemsecs.c: 255:  uint16_t checksum;;gemsecs.
      +                          c: 257:  k = (uint8_t *) byte_block;
  3763                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3764                           
  3765                           ;incstack = 0
  3766  003D90  0EF9               	movlw	-7
  3767  003D92  006F FF8C  F042    	movff	plusw1,btemp+10
  3768  003D98  0EFA               	movlw	-6
  3769  003D9A  006F FF8C  F043    	movff	plusw1,btemp+11
  3770                           
  3771                           ;stkvar	_k @ sp[(-5)+0]
  3772  003DA0  0EFC               	movlw	-4
  3773  003DA2  0060  F10F  FFE3   	movff	btemp+11,plusw1
  3774  003DA8  0EFB               	movlw	-5
  3775  003DAA  0060  F10B  FFE3   	movff	btemp+10,plusw1
  3776                           
  3777                           ;gemsecs.c: 259:  V.error = LINK_ERROR_NONE;
  3778  003DB0  0100               	movlb	0	; () banked
  3779  003DB2  6BE9               	clrf	(_V+78)& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;gemsecs.c: 260:  if ((length - 3) != k[length - 1]) {
  3783                           ;stkvar	_length @ sp[(-5)+-3]
  3784  003DB4  0EF8               	movlw	-8
  3785  003DB6  50E3               	movf	plusw1,w,c
  3786  003DB8  6E42               	movwf	btemp+10,c
  3787  003DBA  6A43               	clrf	btemp+11,c
  3788                           
  3789                           ;stkvar	_k @ sp[(-5)+0]
  3790  003DBC  0EFB               	movlw	-5
  3791  003DBE  50E3               	movf	plusw1,w,c
  3792  003DC0  2642               	addwf	btemp+10,f,c
  3793  003DC2  0EFC               	movlw	-4
  3794  003DC4  50E3               	movf	plusw1,w,c
  3795  003DC6  2243               	addwfc	btemp+11,f,c
  3796  003DC8  0EFF               	movlw	255
  3797  003DCA  2442               	addwf	btemp+10,w,c
  3798  003DCC  6ED9               	movwf	fsr2l,c
  3799  003DCE  0EFF               	movlw	255
  3800  003DD0  2043               	addwfc	btemp+11,w,c
  3801  003DD2  6EDA               	movwf	fsr2h,c
  3802  003DD4  50DF               	movf	indf2,w,c
  3803  003DD6  6E42               	movwf	btemp+10,c
  3804  003DD8  6A43               	clrf	btemp+11,c
  3805  003DDA  0EFD               	movlw	253
  3806  003DDC  6E40               	movwf	btemp+8,c
  3807  003DDE  0EFF               	movlw	255
  3808  003DE0  6E41               	movwf	btemp+9,c
  3809                           
  3810                           ;stkvar	_length @ sp[(-5)+-3]
  3811  003DE2  0EF8               	movlw	-8
  3812  003DE4  50E3               	movf	plusw1,w,c
  3813  003DE6  6E3E               	movwf	btemp+6,c
  3814  003DE8  6A3F               	clrf	btemp+7,c
  3815  003DEA  5040               	movf	btemp+8,w,c
  3816  003DEC  263E               	addwf	btemp+6,f,c
  3817  003DEE  5041               	movf	btemp+9,w,c
  3818  003DF0  223F               	addwfc	btemp+7,f,c
  3819  003DF2  5042               	movf	btemp+10,w,c
  3820  003DF4  183E               	xorwf	btemp+6,w,c
  3821  003DF6  E104               	bnz	u4050
  3822  003DF8  5043               	movf	btemp+11,w,c
  3823  003DFA  183F               	xorwf	btemp+7,w,c
  3824  003DFC  B4D8               	btfsc	status,2,c
  3825  003DFE  D003               	goto	l6792
  3826  003E00                     u4050:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;gemsecs.c: 261:   V.error = LINK_ERROR_SEND;
  3830  003E00  0E08               	movlw	8
  3831  003E02  6FE9               	movwf	(_V+78)& (0+255),b
  3832  003E04  D098               	goto	l1582
  3833  003E06                     l6792:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;gemsecs.c: 270:  checksum = block_checksum(&k[2], length - 3);
  3837  003E06  0EFD               	movlw	253
  3838  003E08  6E42               	movwf	btemp+10,c
  3839  003E0A  0EFF               	movlw	255
  3840  003E0C  6E43               	movwf	btemp+11,c
  3841                           
  3842                           ;stkvar	_length @ sp[(-5)+-3]
  3843  003E0E  0EF8               	movlw	-8
  3844  003E10  50E3               	movf	plusw1,w,c
  3845  003E12  6E40               	movwf	btemp+8,c
  3846  003E14  6A41               	clrf	btemp+9,c
  3847  003E16  5042               	movf	btemp+10,w,c
  3848  003E18  2640               	addwf	btemp+8,f,c
  3849  003E1A  5043               	movf	btemp+11,w,c
  3850  003E1C  2241               	addwfc	btemp+9,f,c
  3851  003E1E  0060  F103  FFE6   	movff	btemp+8,postinc1
  3852  003E24  0060  F107  FFE6   	movff	btemp+9,postinc1
  3853                           
  3854                           ;stkvar	_k @ sp[(-7)+0]
  3855  003E2A  0EF9               	movlw	-7
  3856  003E2C  50E3               	movf	plusw1,w,c
  3857  003E2E  0F02               	addlw	2
  3858  003E30  6E42               	movwf	btemp+10,c
  3859  003E32  0EFA               	movlw	-6
  3860  003E34  006F FF8C  F043    	movff	plusw1,btemp+11
  3861  003E3A  0E00               	movlw	0
  3862  003E3C  2243               	addwfc	btemp+11,f,c
  3863  003E3E  0060  F10B  FFE6   	movff	btemp+10,postinc1
  3864  003E44  0060  F10F  FFE6   	movff	btemp+11,postinc1
  3865  003E4A  ECBC  F022         	call	_block_checksum	;wreg free
  3866                           
  3867                           ;stkvar	_checksum @ sp[(-5)+2]
  3868  003E4E  0EFD               	movlw	-3
  3869  003E50  0060  F0E3  FFE3   	movff	btemp,plusw1
  3870  003E56  0EFE               	movlw	-2
  3871  003E58  0060  F0E7  FFE3   	movff	btemp+1,plusw1
  3872                           
  3873                           ;gemsecs.c: 271:  k[0] = checksum & 0xff;
  3874                           ;stkvar	_checksum @ sp[(-5)+2]
  3875                           ;stkvar	_k @ sp[(-5)+0]
  3876  003E5E  0EFB               	movlw	-5
  3877  003E60  006F FF8F FFD9     	movff	plusw1,fsr2l
  3878  003E66  0EFC               	movlw	-4
  3879  003E68  006F FF8F FFDA     	movff	plusw1,fsr2h
  3880  003E6E  0EFD               	movlw	-3
  3881  003E70  006F FF8F FFDF     	movff	plusw1,indf2
  3882                           
  3883                           ;gemsecs.c: 272:  k[1] = (checksum >> 8)&0xff;
  3884                           ;stkvar	_checksum @ sp[(-5)+2]
  3885  003E76  0EFE               	movlw	254
  3886  003E78  24E1               	addwf	fsr1l,w,c
  3887  003E7A  6ED9               	movwf	fsr2l,c
  3888  003E7C  0EFF               	movlw	255
  3889  003E7E  20E2               	addwfc	fsr1h,w,c
  3890  003E80  6EDA               	movwf	fsr2h,c
  3891                           
  3892                           ;stkvar	_k @ sp[(-5)+0]
  3893  003E82  0EFB               	movlw	-5
  3894  003E84  006F FF8C  F042    	movff	plusw1,btemp+10
  3895  003E8A  0EFC               	movlw	-4
  3896  003E8C  006F FF8C  F043    	movff	plusw1,btemp+11
  3897  003E92  0E01               	movlw	1
  3898  003E94  2442               	addwf	btemp+10,w,c
  3899  003E96  6EE9               	movwf	fsr0l,c
  3900  003E98  0E00               	movlw	0
  3901  003E9A  2043               	addwfc	btemp+11,w,c
  3902  003E9C  6EEA               	movwf	fsr0h,c
  3903  003E9E  006F FF7F FFEF     	movff	indf2,indf0
  3904                           
  3905                           ;gemsecs.c: 273:  V.t_checksum = checksum;
  3906                           ;stkvar	_checksum @ sp[(-5)+2]
  3907  003EA4  0EFD               	movlw	-3
  3908  003EA6  006F FF8C  F0ED    	movff	plusw1,_V+82
  3909  003EAC  0EFE               	movlw	-2
  3910  003EAE  006F FF8C  F0EE    	movff	plusw1,_V+83
  3911  003EB4                     l6800:
  3912  003EB4  ECC3  F02C         	call	_UART1_is_tx_ready	;wreg free
  3913  003EB8  0E3F               	movlw	63
  3914  003EBA  6438               	cpfsgt	btemp,c
  3915  003EBC  D7FB               	goto	l6800
  3916                           
  3917                           ;gemsecs.c: 276:  for (i = length; i > 0; i--) {
  3918                           ;stkvar	_length @ sp[(-5)+-3]
  3919                           ;stkvar	_i @ sp[(-5)+4]
  3920  003EBE  0EF8               	movlw	-8
  3921  003EC0  006F FF8C  F038    	movff	plusw1,btemp
  3922  003EC6  0EFF               	movlw	-1
  3923  003EC8  0060  F0E3  FFE3   	movff	btemp,plusw1
  3924  003ECE                     l6804:
  3925                           
  3926                           ;stkvar	_i @ sp[(-5)+4]
  3927  003ECE  0EFF               	movlw	-1
  3928  003ED0  50E3               	movf	plusw1,w,c
  3929  003ED2  B4D8               	btfsc	status,2,c
  3930  003ED4  D030               	goto	l1582
  3931                           
  3932                           ;gemsecs.c: 277:   if (fake) {
  3933                           ;stkvar	_fake @ sp[(-5)+-4]
  3934  003ED6  0EF7               	movlw	-9
  3935  003ED8  50E3               	movf	plusw1,w,c
  3936  003EDA  B4D8               	btfsc	status,2,c
  3937  003EDC  D015               	goto	l6812
  3938                           
  3939                           ;gemsecs.c: 278:    UART1_put_buffer(k[i - 1]);
  3940                           ;stkvar	_i @ sp[(-5)+4]
  3941  003EDE  0EFF               	movlw	-1
  3942  003EE0  50E3               	movf	plusw1,w,c
  3943  003EE2  6E42               	movwf	btemp+10,c
  3944  003EE4  6A43               	clrf	btemp+11,c
  3945                           
  3946                           ;stkvar	_k @ sp[(-5)+0]
  3947  003EE6  0EFB               	movlw	-5
  3948  003EE8  50E3               	movf	plusw1,w,c
  3949  003EEA  2642               	addwf	btemp+10,f,c
  3950  003EEC  0EFC               	movlw	-4
  3951  003EEE  50E3               	movf	plusw1,w,c
  3952  003EF0  2243               	addwfc	btemp+11,f,c
  3953  003EF2  0EFF               	movlw	255
  3954  003EF4  2442               	addwf	btemp+10,w,c
  3955  003EF6  6ED9               	movwf	fsr2l,c
  3956  003EF8  0EFF               	movlw	255
  3957  003EFA  2043               	addwfc	btemp+11,w,c
  3958  003EFC  6EDA               	movwf	fsr2h,c
  3959  003EFE  50DF               	movf	indf2,w,c
  3960  003F00  6EE6               	movwf	postinc1,c
  3961  003F02  ECC7  F029         	call	_UART1_put_buffer	;wreg free
  3962                           
  3963                           ;gemsecs.c: 279:   } else {
  3964  003F06  D014               	goto	l6814
  3965  003F08                     l6812:
  3966                           
  3967                           ;gemsecs.c: 280:    UART1_Write(k[i - 1]);
  3968                           ;stkvar	_i @ sp[(-5)+4]
  3969  003F08  0EFF               	movlw	-1
  3970  003F0A  50E3               	movf	plusw1,w,c
  3971  003F0C  6E42               	movwf	btemp+10,c
  3972  003F0E  6A43               	clrf	btemp+11,c
  3973                           
  3974                           ;stkvar	_k @ sp[(-5)+0]
  3975  003F10  0EFB               	movlw	-5
  3976  003F12  50E3               	movf	plusw1,w,c
  3977  003F14  2642               	addwf	btemp+10,f,c
  3978  003F16  0EFC               	movlw	-4
  3979  003F18  50E3               	movf	plusw1,w,c
  3980  003F1A  2243               	addwfc	btemp+11,f,c
  3981  003F1C  0EFF               	movlw	255
  3982  003F1E  2442               	addwf	btemp+10,w,c
  3983  003F20  6ED9               	movwf	fsr2l,c
  3984  003F22  0EFF               	movlw	255
  3985  003F24  2043               	addwfc	btemp+11,w,c
  3986  003F26  6EDA               	movwf	fsr2h,c
  3987  003F28  50DF               	movf	indf2,w,c
  3988  003F2A  6EE6               	movwf	postinc1,c
  3989  003F2C  ECF4  F028         	call	_UART1_Write	;wreg free
  3990  003F30                     l6814:
  3991                           
  3992                           ; BSR set to: 57
  3993                           ;gemsecs.c: 282:  }
  3994                           ;stkvar	_i @ sp[(-5)+4]
  3995  003F30  0EFF               	movlw	-1
  3996  003F32  06E3               	decf	plusw1,f,c
  3997  003F34  D7CC               	goto	l6804
  3998  003F36                     l1582:
  3999                           
  4000                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  4001  003F36  0EF7               	movlw	247
  4002  003F38  26E1               	addwf	fsr1l,f,c
  4003  003F3A  0EFF               	movlw	255
  4004  003F3C  22E2               	addwfc	fsr1h,f,c
  4005  003F3E  0012               	return		;funcret
  4006  003F40                     __end_of_secs_send:
  4007                           	opt callstack 0
  4008                           
  4009 ;; *************** function _block_checksum *****************
  4010 ;; Defined at:
  4011 ;;		line 18 in file "gemsecs.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  byte_block      2  [STACK] PTR unsigned char 
  4014 ;;		 -> H27(30), H24(27), H17(20), H14(17), 
  4015 ;;		 -> H13(16), H12(30), H10(65), 
  4016 ;;  byte_count      2  [STACK] unsigned short 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  i               2  [STACK] unsigned short 
  4019 ;;  sum             2  [STACK] unsigned short 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  2  [STACK] unsigned short 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  4024 ;; Tracked objects:
  4025 ;;		On entry : 3F/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    3
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_secs_send
  4040 ;; This function uses a reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text6
  4044  004578                     __ptext6:
  4045                           	opt callstack 0
  4046  004578                     _block_checksum:
  4047                           	opt callstack 0
  4048                           
  4049                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4050  004578  52E6               	movf	postinc1,f,c
  4051  00457A  52E6               	movf	postinc1,f,c
  4052  00457C  52E6               	movf	postinc1,f,c
  4053  00457E  52E6               	movf	postinc1,f,c
  4054                           
  4055                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  4056                           ;stkvar	_sum @ sp[(-4)+2]
  4057                           
  4058                           ;incstack = 0
  4059  004580  0EFE               	movlw	-2
  4060  004582  6AE3               	clrf	plusw1,c
  4061  004584  0EFF               	movlw	-1
  4062  004586  6AE3               	clrf	plusw1,c
  4063                           
  4064                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  4065                           ;stkvar	_i @ sp[(-4)+0]
  4066  004588  0EFC               	movlw	-4
  4067  00458A  6AE3               	clrf	plusw1,c
  4068  00458C  0EFD               	movlw	-3
  4069  00458E  6AE3               	clrf	plusw1,c
  4070  004590  D039               	goto	l6732
  4071  004592                     l6728:
  4072                           
  4073                           ;gemsecs.c: 23:   sum += byte_block[i];
  4074                           ;stkvar	_i @ sp[(-4)+0]
  4075  004592  0EFC               	movlw	-4
  4076  004594  006F FF8C  F042    	movff	plusw1,btemp+10
  4077  00459A  0EFD               	movlw	-3
  4078  00459C  006F FF8C  F043    	movff	plusw1,btemp+11
  4079                           
  4080                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4081  0045A2  0EFA               	movlw	-6
  4082  0045A4  006F FF8C  F040    	movff	plusw1,btemp+8
  4083  0045AA  0EFB               	movlw	-5
  4084  0045AC  006F FF8C  F041    	movff	plusw1,btemp+9
  4085  0045B2  5042               	movf	btemp+10,w,c
  4086  0045B4  2440               	addwf	btemp+8,w,c
  4087  0045B6  6ED9               	movwf	fsr2l,c
  4088  0045B8  5043               	movf	btemp+11,w,c
  4089  0045BA  2041               	addwfc	btemp+9,w,c
  4090  0045BC  6EDA               	movwf	fsr2h,c
  4091  0045BE  50DF               	movf	indf2,w,c
  4092  0045C0  6E43               	movwf	btemp+11,c
  4093                           
  4094                           ;stkvar	_sum @ sp[(-4)+2]
  4095  0045C2  0EFE               	movlw	-2
  4096  0045C4  50E3               	movf	plusw1,w,c
  4097  0045C6  2443               	addwf	btemp+11,w,c
  4098  0045C8  6E38               	movwf	btemp,c
  4099  0045CA  0EFE               	movlw	-2
  4100  0045CC  0060  F0E3  FFE3   	movff	btemp,plusw1
  4101  0045D2  6A38               	clrf	btemp,c
  4102  0045D4  0EFF               	movlw	-1
  4103  0045D6  50E3               	movf	plusw1,w,c
  4104  0045D8  2238               	addwfc	btemp,f,c
  4105  0045DA  0EFF               	movlw	-1
  4106  0045DC  0060  F0E3  FFE3   	movff	btemp,plusw1
  4107                           
  4108                           ;gemsecs.c: 24:  }
  4109                           ;stkvar	_i @ sp[(-4)+0]
  4110  0045E2  0EFC               	movlw	-4
  4111  0045E4  50E3               	movf	plusw1,w,c
  4112  0045E6  0F01               	addlw	1
  4113  0045E8  6E38               	movwf	btemp,c
  4114  0045EA  0EFC               	movlw	-4
  4115  0045EC  0060  F0E3  FFE3   	movff	btemp,plusw1
  4116  0045F2  6A38               	clrf	btemp,c
  4117  0045F4  0EFD               	movlw	-3
  4118  0045F6  50E3               	movf	plusw1,w,c
  4119  0045F8  2038               	addwfc	btemp,w,c
  4120  0045FA  6E38               	movwf	btemp,c
  4121  0045FC  0EFD               	movlw	-3
  4122  0045FE  0060  F0E3  FFE3   	movff	btemp,plusw1
  4123  004604                     l6732:
  4124                           
  4125                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4126  004604  0EF8               	movlw	-8
  4127  004606  006F FF8C  F042    	movff	plusw1,btemp+10
  4128  00460C  0EF9               	movlw	-7
  4129  00460E  006F FF8C  F043    	movff	plusw1,btemp+11
  4130                           
  4131                           ;stkvar	_i @ sp[(-4)+0]
  4132  004614  0EFC               	movlw	-4
  4133  004616  006F FF8C  F040    	movff	plusw1,btemp+8
  4134  00461C  0EFD               	movlw	-3
  4135  00461E  006F FF8C  F041    	movff	plusw1,btemp+9
  4136  004624  5042               	movf	btemp+10,w,c
  4137  004626  5C40               	subwf	btemp+8,w,c
  4138  004628  5043               	movf	btemp+11,w,c
  4139  00462A  5841               	subwfb	btemp+9,w,c
  4140  00462C  A0D8               	btfss	status,0,c
  4141  00462E  D7B1               	goto	l6728
  4142                           
  4143                           ;gemsecs.c: 25:  return sum;
  4144                           ;stkvar	_sum @ sp[(-4)+2]
  4145  004630  0EFE               	movlw	-2
  4146  004632  006F FF8C  F038    	movff	plusw1,btemp
  4147  004638  0EFF               	movlw	-1
  4148  00463A  006F FF8C  F039    	movff	plusw1,btemp+1
  4149                           
  4150                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4151  004640  0EF8               	movlw	248
  4152  004642  26E1               	addwf	fsr1l,f,c
  4153  004644  0EFF               	movlw	255
  4154  004646  22E2               	addwfc	fsr1h,f,c
  4155  004648  0012               	return		;funcret
  4156  00464A                     __end_of_block_checksum:
  4157                           	opt callstack 0
  4158                           
  4159 ;; *************** function _UART1_put_buffer *****************
  4160 ;; Defined at:
  4161 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  bufData         1  [STACK] unsigned char 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1  [STACK] void 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 3F/39
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    3
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;;		_t_protocol
  4187 ;;		_secs_send
  4188 ;; This function uses a reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text7
  4192  00538E                     __ptext7:
  4193                           	opt callstack 0
  4194  00538E                     _UART1_put_buffer:
  4195                           	opt callstack 25
  4196                           
  4197                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4198                           
  4199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4200                           ;incstack = 0
  4201  00538E  0139               	movlb	57	; () banked
  4202  005390  9793               	bcf	147,3,b	;volatile
  4203                           
  4204                           ; BSR set to: 57
  4205                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4206                           ;stkvar	_bufData @ sp[(0)+-1]
  4207  005392  0E80               	movlw	low _uart1RxBuffer
  4208  005394  2434               	addwf	_uart1RxHead,w,c	;volatile
  4209  005396  6ED9               	movwf	fsr2l,c
  4210  005398  6ADA               	clrf	fsr2h,c
  4211  00539A  0E02               	movlw	high _uart1RxBuffer
  4212  00539C  22DA               	addwfc	fsr2h,f,c
  4213  00539E  0EFF               	movlw	-1
  4214  0053A0  006F FF8F FFDF     	movff	plusw1,indf2
  4215                           
  4216                           ; BSR set to: 57
  4217  0053A6  2A34               	incf	_uart1RxHead,f,c	;volatile
  4218                           
  4219                           ; BSR set to: 57
  4220                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4221  0053A8  0E3F               	movlw	63
  4222  0053AA  6434               	cpfsgt	_uart1RxHead,c
  4223  0053AC  D001               	goto	l6710
  4224                           
  4225                           ; BSR set to: 57
  4226                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4227  0053AE  6A34               	clrf	_uart1RxHead,c	;volatile
  4228  0053B0                     l6710:
  4229                           
  4230                           ; BSR set to: 57
  4231                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4232  0053B0  2A32               	incf	_uart1RxCount,f,c	;volatile
  4233                           
  4234                           ; BSR set to: 57
  4235                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4236  0053B2  8793               	bsf	147,3,b	;volatile
  4237                           
  4238                           ; BSR set to: 57
  4239                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4240  0053B4  52E5               	movf	postdec1,f,c
  4241  0053B6  0012               	return		;funcret
  4242  0053B8                     __end_of_UART1_put_buffer:
  4243                           	opt callstack 0
  4244                           
  4245 ;; *************** function _UART1_is_tx_ready *****************
  4246 ;; Defined at:
  4247 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1  [STACK] unsigned char 
  4254 ;; Registers used:
  4255 ;;		btemp
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    3
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_secs_send
  4272 ;; This function uses a reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text8
  4276  005986                     __ptext8:
  4277                           	opt callstack 0
  4278  005986                     _UART1_is_tx_ready:
  4279                           	opt callstack 25
  4280                           
  4281                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4282                           
  4283                           ; BSR set to: 57
  4284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4285                           ;incstack = 0
  4286  005986  0060  F0D4  F038   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4287                           
  4288                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4289  00598C  0012               	return		;funcret
  4290  00598E                     __end_of_UART1_is_tx_ready:
  4291                           	opt callstack 0
  4292                           
  4293 ;; *************** function _UART1_Write *****************
  4294 ;; Defined at:
  4295 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  txData          1  [STACK] unsigned char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1  [STACK] void 
  4302 ;; Registers used:
  4303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 3F/39
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    3
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_r_protocol
  4320 ;;		_t_protocol
  4321 ;;		_secs_send
  4322 ;; This function uses a reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text9
  4326  0051E8                     __ptext9:
  4327                           	opt callstack 0
  4328  0051E8                     _UART1_Write:
  4329                           	opt callstack 25
  4330                           
  4331                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4332                           
  4333                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4334                           
  4335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4336                           ;incstack = 0
  4337  0051E8  5035               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4338  0051EA  B4D8               	btfsc	status,2,c
  4339  0051EC  D7FD               	goto	_UART1_Write
  4340                           
  4341                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4342  0051EE  0139               	movlb	57	; () banked
  4343  0051F0  B993               	btfsc	147,4,b	;volatile
  4344  0051F2  D005               	goto	l579
  4345                           
  4346                           ; BSR set to: 57
  4347                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4348                           ;stkvar	_txData @ sp[(0)+-1]
  4349  0051F4  0EFF               	movlw	-1
  4350  0051F6  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4351                           
  4352                           ;mcc_generated_files/uart1.c: 186:  } else {
  4353  0051FC  D011               	goto	l6698
  4354  0051FE                     l579:
  4355                           
  4356                           ; BSR set to: 57
  4357                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4358  0051FE  9993               	bcf	147,4,b	;volatile
  4359                           
  4360                           ; BSR set to: 57
  4361                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4362                           ;stkvar	_txData @ sp[(0)+-1]
  4363  005200  0EC0               	movlw	low _uart1TxBuffer
  4364  005202  2437               	addwf	_uart1TxHead,w,c	;volatile
  4365  005204  6ED9               	movwf	fsr2l,c
  4366  005206  6ADA               	clrf	fsr2h,c
  4367  005208  0E02               	movlw	high _uart1TxBuffer
  4368  00520A  22DA               	addwfc	fsr2h,f,c
  4369  00520C  0EFF               	movlw	-1
  4370  00520E  006F FF8F FFDF     	movff	plusw1,indf2
  4371                           
  4372                           ; BSR set to: 57
  4373  005214  2A37               	incf	_uart1TxHead,f,c	;volatile
  4374                           
  4375                           ; BSR set to: 57
  4376                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4377  005216  0E3F               	movlw	63
  4378  005218  6437               	cpfsgt	_uart1TxHead,c
  4379  00521A  D001               	goto	l6696
  4380                           
  4381                           ; BSR set to: 57
  4382                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4383  00521C  6A37               	clrf	_uart1TxHead,c	;volatile
  4384  00521E                     l6696:
  4385                           
  4386                           ; BSR set to: 57
  4387                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4388  00521E  0635               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4389  005220                     l6698:
  4390                           
  4391                           ; BSR set to: 57
  4392                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4393  005220  8993               	bsf	147,4,b	;volatile
  4394                           
  4395                           ; BSR set to: 57
  4396                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4397  005222  52E5               	movf	postdec1,f,c
  4398  005224  0012               	return		;funcret
  4399  005226                     __end_of_UART1_Write:
  4400                           	opt callstack 0
  4401                           
  4402 ;; *************** function _run_checksum *****************
  4403 ;; Defined at:
  4404 ;;		line 31 in file "gemsecs.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  byte_block      1  [STACK] unsigned char 
  4407 ;;  clear           1  [STACK] _Bool 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2  [STACK] unsigned short 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4414 ;; Tracked objects:
  4415 ;;		On entry : 6/39
  4416 ;;		On exit  : 3F/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    3
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_r_protocol
  4430 ;; This function uses a reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text10
  4434  0052DE                     __ptext10:
  4435                           	opt callstack 0
  4436  0052DE                     _run_checksum:
  4437                           	opt callstack 26
  4438                           
  4439                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  4440                           ;stkvar	_clear @ sp[(0)+-2]
  4441                           
  4442                           ; BSR set to: 57
  4443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4444                           ;incstack = 0
  4445  0052DE  0EFE               	movlw	-2
  4446  0052E0  50E3               	movf	plusw1,w,c
  4447  0052E2  B4D8               	btfsc	status,2,c
  4448  0052E4  D003               	goto	l5342
  4449                           
  4450                           ;gemsecs.c: 36:   sum = 0;
  4451  0052E6  0100               	movlb	0	; () banked
  4452  0052E8  6B99               	clrf	run_checksum@sum& (0+255),b
  4453  0052EA  6B9A               	clrf	(run_checksum@sum+1)& (0+255),b
  4454  0052EC                     l5342:
  4455                           
  4456                           ;gemsecs.c: 38:  sum += byte_block;
  4457                           ;stkvar	_byte_block @ sp[(0)+-1]
  4458  0052EC  0EFF               	movlw	-1
  4459  0052EE  50E3               	movf	plusw1,w,c
  4460  0052F0  0100               	movlb	0	; () banked
  4461  0052F2  2799               	addwf	run_checksum@sum& (0+255),f,b
  4462  0052F4  0E00               	movlw	0
  4463  0052F6  239A               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;gemsecs.c: 39:  return sum;
  4467  0052F8  0060  F264  F038   	movff	run_checksum@sum,btemp
  4468  0052FE  0060  F268  F039   	movff	run_checksum@sum+1,btemp+1
  4469                           
  4470                           ; BSR set to: 0
  4471                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4472  005304  52E5               	movf	postdec1,f,c
  4473  005306  52E5               	movf	postdec1,f,c
  4474  005308  0012               	return		;funcret
  4475  00530A                     __end_of_run_checksum:
  4476                           	opt callstack 0
  4477                           
  4478 ;; *************** function _WaitMs *****************
  4479 ;; Defined at:
  4480 ;;		line 31 in file "timers.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  numMilliseco    2  [STACK] unsigned short 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1  [STACK] void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/3B
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    4
  4501 ;; This function calls:
  4502 ;;		_StartTimer
  4503 ;;		_TimerDone
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;;		_r_protocol
  4507 ;;		_t_protocol
  4508 ;; This function uses a reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text11
  4512  0053B8                     __ptext11:
  4513                           	opt callstack 0
  4514  0053B8                     _WaitMs:
  4515                           	opt callstack 25
  4516                           
  4517                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4518                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4519                           
  4520                           ; BSR set to: 0
  4521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4522                           ;incstack = 0
  4523  0053B8  0EFE               	movlw	-2
  4524  0053BA  006F FF8F FFE6     	movff	plusw1,postinc1
  4525  0053C0  006F FF8F FFE6     	movff	plusw1,postinc1
  4526  0053C6  0E00               	movlw	0
  4527  0053C8  6EE6               	movwf	postinc1,c
  4528  0053CA  EC51  F029         	call	_StartTimer	;wreg free
  4529  0053CE                     l5280:
  4530                           
  4531                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4532  0053CE  0E00               	movlw	0
  4533  0053D0  6EE6               	movwf	postinc1,c
  4534  0053D2  EC6F  F02B         	call	_TimerDone	;wreg free
  4535  0053D6  5038               	movf	btemp,w,c
  4536  0053D8  B4D8               	btfsc	status,2,c
  4537  0053DA  D7F9               	goto	l5280
  4538                           
  4539                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4540  0053DC  52E5               	movf	postdec1,f,c
  4541  0053DE  52E5               	movf	postdec1,f,c
  4542  0053E0  0012               	return		;funcret
  4543  0053E2                     __end_of_WaitMs:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _TimerDone *****************
  4547 ;; Defined at:
  4548 ;;		line 20 in file "timers.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  timer           1  [STACK] unsigned char 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1  [STACK] _Bool 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    3
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_r_protocol
  4573 ;;		_t_protocol
  4574 ;;		_WaitMs
  4575 ;; This function uses a reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text12
  4579  0056DE                     __ptext12:
  4580                           	opt callstack 0
  4581  0056DE                     _TimerDone:
  4582                           	opt callstack 25
  4583                           
  4584                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4585                           ;stkvar	_timer @ sp[(0)+-1]
  4586                           
  4587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4588                           ;incstack = 0
  4589  0056DE  0EFF               	movlw	-1
  4590  0056E0  50E3               	movf	plusw1,w,c
  4591  0056E2  0D02               	mullw	2
  4592  0056E4  50F3               	movf	prodl,w,c
  4593  0056E6  0F79               	addlw	low _tickCount
  4594  0056E8  6ED9               	movwf	fsr2l,c
  4595  0056EA  6ADA               	clrf	fsr2h,c
  4596  0056EC  50DE               	movf	postinc2,w,c
  4597  0056EE  10DE               	iorwf	postinc2,w,c
  4598  0056F0  A4D8               	btfss	status,2,c
  4599  0056F2  D002               	goto	l5126
  4600                           
  4601                           ;timers.c: 23:   return 1;
  4602  0056F4  0E01               	movlw	1
  4603  0056F6  D001               	goto	L12
  4604  0056F8                     l5126:
  4605                           
  4606                           ;timers.c: 25:  return 0;
  4607  0056F8  0E00               	movlw	0
  4608  0056FA                     L12:
  4609  0056FA  6E38               	movwf	btemp,c
  4610                           
  4611                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4612  0056FC  52E5               	movf	postdec1,f,c
  4613  0056FE  0012               	return		;funcret
  4614  005700                     __end_of_TimerDone:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function _StartTimer *****************
  4618 ;; Defined at:
  4619 ;;		line 12 in file "timers.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  timer           1  [STACK] unsigned char 
  4622 ;;  count           2  [STACK] unsigned short 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1  [STACK] void 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/39
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;Total ram usage:        0 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    3
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_r_protocol
  4645 ;;		_t_protocol
  4646 ;;		_WaitMs
  4647 ;; This function uses a reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text13
  4651  0052A2                     __ptext13:
  4652                           	opt callstack 0
  4653  0052A2                     _StartTimer:
  4654                           	opt callstack 25
  4655                           
  4656                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4657                           ;stkvar	_count @ sp[(0)+-3]
  4658                           
  4659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4660                           ;incstack = 0
  4661  0052A2  0EFD               	movlw	-3
  4662  0052A4  006F FF8C  F042    	movff	plusw1,btemp+10
  4663  0052AA  0EFE               	movlw	-2
  4664  0052AC  006F FF8C  F043    	movff	plusw1,btemp+11
  4665  0052B2  90D8               	bcf	status,0,c
  4666  0052B4  3442               	rlcf	btemp+10,w,c
  4667  0052B6  6E40               	movwf	btemp+8,c
  4668  0052B8  3443               	rlcf	btemp+11,w,c
  4669  0052BA  6E41               	movwf	btemp+9,c
  4670                           
  4671                           ;stkvar	_timer @ sp[(0)+-1]
  4672  0052BC  0EFF               	movlw	-1
  4673  0052BE  50E3               	movf	plusw1,w,c
  4674  0052C0  0D02               	mullw	2
  4675  0052C2  50F3               	movf	prodl,w,c
  4676  0052C4  0F79               	addlw	low _tickCount
  4677  0052C6  6ED9               	movwf	fsr2l,c
  4678  0052C8  6ADA               	clrf	fsr2h,c
  4679  0052CA  0060  F103  FFDE   	movff	btemp+8,postinc2
  4680  0052D0  0060  F107  FFDD   	movff	btemp+9,postdec2
  4681                           
  4682                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4683  0052D6  52E5               	movf	postdec1,f,c
  4684  0052D8  52E5               	movf	postdec1,f,c
  4685  0052DA  52E5               	movf	postdec1,f,c
  4686  0052DC  0012               	return		;funcret
  4687  0052DE                     __end_of_StartTimer:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _UART1_is_rx_ready *****************
  4691 ;; Defined at:
  4692 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1  [STACK] unsigned char 
  4699 ;; Registers used:
  4700 ;;		btemp
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    3
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_r_protocol
  4717 ;;		_t_protocol
  4718 ;; This function uses a reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text14
  4722  00598E                     __ptext14:
  4723                           	opt callstack 0
  4724  00598E                     _UART1_is_rx_ready:
  4725                           	opt callstack 26
  4726                           
  4727                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4728                           
  4729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4730                           ;incstack = 0
  4731  00598E  0060  F0C8  F038   	movff	_uart1RxCount,btemp	;volatile
  4732                           
  4733                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4734  005994  0012               	return		;funcret
  4735  005996                     __end_of_UART1_is_rx_ready:
  4736                           	opt callstack 0
  4737                           
  4738 ;; *************** function _UART1_Read *****************
  4739 ;; Defined at:
  4740 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  readValue       1  [STACK] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1  [STACK] unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 3F/39
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    3
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_r_protocol
  4765 ;;		_t_protocol
  4766 ;; This function uses a reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text15
  4770  005226                     __ptext15:
  4771                           	opt callstack 0
  4772  005226                     _UART1_Read:
  4773                           	opt callstack 0
  4774                           
  4775                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4776  005226  52E6               	movf	postinc1,f,c
  4777  005228                     
  4778                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4779                           
  4780                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4781  005228  5032               	movf	_uart1RxCount,w,c	;volatile
  4782  00522A  B4D8               	btfsc	status,2,c
  4783  00522C  D7FD               	goto	l5244
  4784                           
  4785                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4786  00522E  0E80               	movlw	low _uart1RxBuffer
  4787  005230  2433               	addwf	_uart1RxTail,w,c	;volatile
  4788  005232  6ED9               	movwf	fsr2l,c
  4789  005234  6ADA               	clrf	fsr2h,c
  4790  005236  0E02               	movlw	high _uart1RxBuffer
  4791  005238  22DA               	addwfc	fsr2h,f,c
  4792  00523A  50DF               	movf	indf2,w,c
  4793  00523C  6E43               	movwf	btemp+11,c
  4794                           
  4795                           ;stkvar	_readValue @ sp[(-1)+0]
  4796  00523E  0EFF               	movlw	-1
  4797  005240  0060  F10F  FFE3   	movff	btemp+11,plusw1
  4798  005246  2A33               	incf	_uart1RxTail,f,c	;volatile
  4799                           
  4800                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4801  005248  0E3F               	movlw	63
  4802  00524A  6433               	cpfsgt	_uart1RxTail,c
  4803  00524C  D001               	goto	l572
  4804                           
  4805                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4806  00524E  6A33               	clrf	_uart1RxTail,c	;volatile
  4807  005250                     l572:
  4808                           
  4809                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4810  005250  0139               	movlb	57	; () banked
  4811  005252  9793               	bcf	147,3,b	;volatile
  4812                           
  4813                           ; BSR set to: 57
  4814                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4815  005254  0632               	decf	_uart1RxCount,f,c	;volatile
  4816                           
  4817                           ; BSR set to: 57
  4818                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4819  005256  8793               	bsf	147,3,b	;volatile
  4820                           
  4821                           ; BSR set to: 57
  4822                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4823                           ;stkvar	_readValue @ sp[(-1)+0]
  4824  005258  0EFF               	movlw	-1
  4825  00525A  006F FF8C  F038    	movff	plusw1,btemp
  4826                           
  4827                           ; BSR set to: 57
  4828                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4829  005260  52E5               	movf	postdec1,f,c
  4830  005262  0012               	return		;funcret
  4831  005264                     __end_of_UART1_Read:
  4832                           	opt callstack 0
  4833                           
  4834 ;; *************** function _init_display *****************
  4835 ;; Defined at:
  4836 ;;		line 35 in file "eadog.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1  [STACK] void 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 3F/3D
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4854 ;;Total ram usage:        0 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    5
  4857 ;; This function calls:
  4858 ;;		_ringBufS_init
  4859 ;;		_send_lcd_cmd
  4860 ;;		_send_lcd_cmd_long
  4861 ;;		_wdtdelay
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text16
  4868  00448E                     __ptext16:
  4869                           	opt callstack 0
  4870  00448E                     _init_display:
  4871                           	opt callstack 25
  4872                           
  4873                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4874                           
  4875                           ; BSR set to: 57
  4876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4877                           ;incstack = 0
  4878  00448E  0E43               	movlw	low _ring_buf1
  4879  004490  0100               	movlb	0	; () banked
  4880  004492  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4881  004494  0E03               	movlw	high _ring_buf1
  4882  004496  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4883                           
  4884                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4885  004498  0E00               	movlw	low _ring_buf2
  4886  00449A  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4887  00449C  0E03               	movlw	high _ring_buf2
  4888  00449E  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4892  0044A0  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4893  0044A6  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4894  0044AC  EC2F  F02A         	call	_ringBufS_init	;wreg free
  4895                           
  4896                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4897  0044B0  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4898  0044B6  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4899  0044BC  EC2F  F02A         	call	_ringBufS_init	;wreg free
  4900                           
  4901                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4902  0044C0  80BE               	bsf	16318,0,c	;volatile
  4903  0044C2  84BC               	bsf	16316,2,c	;volatile
  4904                           
  4905                           ;eadog.c: 44:  wdtdelay(350000);
  4906  0044C4  0E30               	movlw	48
  4907  0044C6  6EE6               	movwf	postinc1,c
  4908  0044C8  0E57               	movlw	87
  4909  0044CA  6EE6               	movwf	postinc1,c
  4910  0044CC  0E05               	movlw	5
  4911  0044CE  6EE6               	movwf	postinc1,c
  4912  0044D0  0E00               	movlw	0
  4913  0044D2  6EE6               	movwf	postinc1,c
  4914  0044D4  ECAA  F027         	call	_wdtdelay	;wreg free
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4918  0044D8  0E39               	movlw	57
  4919  0044DA  6EE6               	movwf	postinc1,c
  4920  0044DC  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4924  0044E0  0E1D               	movlw	29
  4925  0044E2  6EE6               	movwf	postinc1,c
  4926  0044E4  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4930  0044E8  0E50               	movlw	80
  4931  0044EA  6EE6               	movwf	postinc1,c
  4932  0044EC  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4936  0044F0  0E6C               	movlw	108
  4937  0044F2  6EE6               	movwf	postinc1,c
  4938  0044F4  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4942  0044F8  0E76               	movlw	118
  4943  0044FA  6EE6               	movwf	postinc1,c
  4944  0044FC  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4948  004500  0E38               	movlw	56
  4949  004502  6EE6               	movwf	postinc1,c
  4950  004504  EC07  F02A         	call	_send_lcd_cmd_long	;wreg free
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4954  004508  0E0F               	movlw	15
  4955  00450A  6EE6               	movwf	postinc1,c
  4956  00450C  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4960  004510  0E01               	movlw	1
  4961  004512  6EE6               	movwf	postinc1,c
  4962  004514  EC07  F02A         	call	_send_lcd_cmd_long	;wreg free
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4966  004518  0E02               	movlw	2
  4967  00451A  6EE6               	movwf	postinc1,c
  4968  00451C  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4972  004520  0E06               	movlw	6
  4973  004522  6EE6               	movwf	postinc1,c
  4974  004524  EC1B  F02A         	call	_send_lcd_cmd	;wreg free
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;eadog.c: 55:  wdtdelay(30);
  4978  004528  0E1E               	movlw	30
  4979  00452A  6EE6               	movwf	postinc1,c
  4980  00452C  0E00               	movlw	0
  4981  00452E  6EE6               	movwf	postinc1,c
  4982  004530  0E00               	movlw	0
  4983  004532  6EE6               	movwf	postinc1,c
  4984  004534  0E00               	movlw	0
  4985  004536  6EE6               	movwf	postinc1,c
  4986  004538  ECAA  F027         	call	_wdtdelay	;wreg free
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4990  00453C  0E02               	movlw	2
  4991  00453E  013D               	movlb	61	; () banked
  4992  004540  6F16               	movwf	22,b	;volatile
  4993                           
  4994                           ; BSR set to: 61
  4995                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4996  004542  0E40               	movlw	64
  4997  004544  6F15               	movwf	21,b	;volatile
  4998                           
  4999                           ; BSR set to: 61
  5000                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  5001  004546  0E83               	movlw	131
  5002  004548  6F14               	movwf	20,b	;volatile
  5003                           
  5004                           ; BSR set to: 61
  5005                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  5006  00454A  931A               	bcf	26,1,b	;volatile
  5007                           
  5008                           ; BSR set to: 61
  5009                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  5010  00454C  0E3F               	movlw	-193
  5011  00454E  013B               	movlb	59	; () banked
  5012  004550  17FD               	andwf	253,f,b	;volatile
  5013                           
  5014                           ; BSR set to: 59
  5015                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  5016  004552  9BFD               	bcf	253,5,b	;volatile
  5017                           
  5018                           ; BSR set to: 59
  5019                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  5020  004554  51FD               	movf	253,w,b	;volatile
  5021  004556  0BF9               	andlw	-7
  5022  004558  0902               	iorlw	2
  5023  00455A  6FFD               	movwf	253,b	;volatile
  5024                           
  5025                           ; BSR set to: 59
  5026                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  5027  00455C  0EE7               	movlw	-25
  5028  00455E  17FD               	andwf	253,f,b	;volatile
  5029                           
  5030                           ; BSR set to: 59
  5031                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  5032  004560  81FD               	bsf	253,0,b	;volatile
  5033                           
  5034                           ; BSR set to: 59
  5035                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  5036  004562  0E43               	movlw	low _ring_buf1
  5037  004564  6FF9               	movwf	249,b	;volatile
  5038  004566  0E03               	movlw	high _ring_buf1
  5039  004568  6FFA               	movwf	250,b	;volatile
  5040  00456A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5041  00456C  6FFB               	movwf	251,b	;volatile
  5042                           
  5043                           ; BSR set to: 59
  5044                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  5045  00456E  9BFC               	bcf	252,5,b	;volatile
  5046                           
  5047                           ; BSR set to: 59
  5048                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  5049  004570  013D               	movlb	61	; () banked
  5050  004572  831A               	bsf	26,1,b	;volatile
  5051                           
  5052                           ; BSR set to: 61
  5053                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  5054  004574  90BE               	bcf	16318,0,c	;volatile
  5055                           
  5056                           ; BSR set to: 61
  5057                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5058  004576  0012               	return		;funcret
  5059  004578                     __end_of_init_display:
  5060                           	opt callstack 0
  5061                           
  5062 ;; *************** function _send_lcd_cmd_long *****************
  5063 ;; Defined at:
  5064 ;;		line 97 in file "eadog.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  cmd             1  [STACK] unsigned char 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1  [STACK] void 
  5071 ;; Registers used:
  5072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5073 ;; Tracked objects:
  5074 ;;		On entry : 3F/0
  5075 ;;		On exit  : 3F/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    4
  5085 ;; This function calls:
  5086 ;;		_SPI1_Exchange8bit
  5087 ;;		_wdtdelay
  5088 ;; This function is called by:
  5089 ;;		_init_display
  5090 ;; This function uses a reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text17
  5094  00540E                     __ptext17:
  5095                           	opt callstack 0
  5096  00540E                     _send_lcd_cmd_long:
  5097                           	opt callstack 25
  5098                           
  5099                           ; BSR set to: 61
  5100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5101                           ;incstack = 0
  5102                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5103  00540E  92BC               	bcf	16316,1,c	;volatile
  5104                           
  5105                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5106  005410  94BC               	bcf	16316,2,c	;volatile
  5107                           
  5108                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5109                           ;stkvar	_cmd @ sp[(0)+-1]
  5110  005412  0EFF               	movlw	-1
  5111  005414  50E3               	movf	plusw1,w,c
  5112  005416  6EE6               	movwf	postinc1,c
  5113  005418  EC06  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5114                           
  5115                           ; BSR set to: 57
  5116                           ;eadog.c: 102:  wdtdelay(800);
  5117  00541C  0E20               	movlw	32
  5118  00541E  6EE6               	movwf	postinc1,c
  5119  005420  0E03               	movlw	3
  5120  005422  6EE6               	movwf	postinc1,c
  5121  005424  0E00               	movlw	0
  5122  005426  6EE6               	movwf	postinc1,c
  5123  005428  0E00               	movlw	0
  5124  00542A  6EE6               	movwf	postinc1,c
  5125  00542C  ECAA  F027         	call	_wdtdelay	;wreg free
  5126                           
  5127                           ; BSR set to: 0
  5128  005430  82BC               	bsf	16316,1,c	;volatile
  5129                           
  5130                           ; BSR set to: 0
  5131                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5132  005432  52E5               	movf	postdec1,f,c
  5133  005434  0012               	return		;funcret
  5134  005436                     __end_of_send_lcd_cmd_long:
  5135                           	opt callstack 0
  5136                           
  5137 ;; *************** function _send_lcd_cmd *****************
  5138 ;; Defined at:
  5139 ;;		line 85 in file "eadog.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  cmd             1  [STACK] unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1  [STACK] void 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5148 ;; Tracked objects:
  5149 ;;		On entry : 3F/0
  5150 ;;		On exit  : 3F/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    4
  5160 ;; This function calls:
  5161 ;;		_SPI1_Exchange8bit
  5162 ;;		_wdtdelay
  5163 ;; This function is called by:
  5164 ;;		_init_display
  5165 ;; This function uses a reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text18
  5169  005436                     __ptext18:
  5170                           	opt callstack 0
  5171  005436                     _send_lcd_cmd:
  5172                           	opt callstack 25
  5173                           
  5174                           ; BSR set to: 0
  5175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5176                           ;incstack = 0
  5177                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5178  005436  92BC               	bcf	16316,1,c	;volatile
  5179                           
  5180                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5181  005438  94BC               	bcf	16316,2,c	;volatile
  5182                           
  5183                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5184                           ;stkvar	_cmd @ sp[(0)+-1]
  5185  00543A  0EFF               	movlw	-1
  5186  00543C  50E3               	movf	plusw1,w,c
  5187  00543E  6EE6               	movwf	postinc1,c
  5188  005440  EC06  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5189                           
  5190                           ; BSR set to: 57
  5191                           ;eadog.c: 90:  wdtdelay(30);
  5192  005444  0E1E               	movlw	30
  5193  005446  6EE6               	movwf	postinc1,c
  5194  005448  0E00               	movlw	0
  5195  00544A  6EE6               	movwf	postinc1,c
  5196  00544C  0E00               	movlw	0
  5197  00544E  6EE6               	movwf	postinc1,c
  5198  005450  0E00               	movlw	0
  5199  005452  6EE6               	movwf	postinc1,c
  5200  005454  ECAA  F027         	call	_wdtdelay	;wreg free
  5201                           
  5202                           ; BSR set to: 0
  5203  005458  82BC               	bsf	16316,1,c	;volatile
  5204                           
  5205                           ; BSR set to: 0
  5206                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5207  00545A  52E5               	movf	postdec1,f,c
  5208  00545C  0012               	return		;funcret
  5209  00545E                     __end_of_send_lcd_cmd:
  5210                           	opt callstack 0
  5211                           
  5212 ;; *************** function _SPI1_Exchange8bit *****************
  5213 ;; Defined at:
  5214 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  data            1  [STACK] unsigned char 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1  [STACK] unsigned char 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 3F/39
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    3
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_send_lcd_cmd
  5239 ;;		_send_lcd_cmd_long
  5240 ;; This function uses a reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text19
  5244  00580C                     __ptext19:
  5245                           	opt callstack 0
  5246  00580C                     _SPI1_Exchange8bit:
  5247                           	opt callstack 25
  5248                           
  5249                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5250                           
  5251                           ; BSR set to: 0
  5252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5253                           ;incstack = 0
  5254  00580C  0E01               	movlw	1
  5255  00580E  013D               	movlb	61	; () banked
  5256  005810  6F12               	movwf	18,b	;volatile
  5257                           
  5258                           ; BSR set to: 61
  5259                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5260                           ;stkvar	_data @ sp[(0)+-1]
  5261  005812  0EFF               	movlw	-1
  5262  005814  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5263  00581A                     l847:
  5264                           
  5265                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5266  00581A  0139               	movlb	57	; () banked
  5267  00581C  A9A2               	btfss	162,4,b	;volatile
  5268  00581E  D7FD               	goto	l847
  5269                           
  5270                           ; BSR set to: 57
  5271                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5272  005820  006F F440  F038    	movff	15632,btemp	;volatile
  5273                           
  5274                           ; BSR set to: 57
  5275                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5276  005826  52E5               	movf	postdec1,f,c
  5277  005828  0012               	return		;funcret
  5278  00582A                     __end_of_SPI1_Exchange8bit:
  5279                           	opt callstack 0
  5280                           
  5281 ;; *************** function _ringBufS_init *****************
  5282 ;; Defined at:
  5283 ;;		line 22 in file "ringbufs.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  _this           2  [STACK] PTR volatile struct ring
  5286 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1  [STACK] void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    4
  5305 ;; This function calls:
  5306 ;;		_memset
  5307 ;; This function is called by:
  5308 ;;		_init_display
  5309 ;; This function uses a reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text20
  5313  00545E                     __ptext20:
  5314                           	opt callstack 0
  5315  00545E                     _ringBufS_init:
  5316                           	opt callstack 25
  5317                           
  5318                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5319                           
  5320                           ; BSR set to: 57
  5321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5322                           ;incstack = 0
  5323  00545E  0E43               	movlw	67
  5324  005460  6EE6               	movwf	postinc1,c
  5325  005462  0E00               	movlw	0
  5326  005464  6EE6               	movwf	postinc1,c
  5327  005466  0E00               	movlw	0
  5328  005468  6EE6               	movwf	postinc1,c
  5329  00546A  0E00               	movlw	0
  5330  00546C  6EE6               	movwf	postinc1,c
  5331                           
  5332                           ;stkvar	__this @ sp[(-4)+-2]
  5333  00546E  0EFA               	movlw	-6
  5334  005470  006F FF8F FFE6     	movff	plusw1,postinc1
  5335  005476  006F FF8F FFE6     	movff	plusw1,postinc1
  5336  00547C  EC45  F018         	call	_memset	;wreg free
  5337                           
  5338                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5339  005480  52E5               	movf	postdec1,f,c
  5340  005482  52E5               	movf	postdec1,f,c
  5341  005484  0012               	return		;funcret
  5342  005486                     __end_of_ringBufS_init:
  5343                           	opt callstack 0
  5344                           
  5345 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5346 ;; Defined at:
  5347 ;;		line 218 in file "eadog.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  r               1  [STACK] unsigned char 
  5350 ;;  c               1  [STACK] unsigned char 
  5351 ;;  strPtr          1  [STACK] PTR unsigned char 
  5352 ;;		 -> V(86), 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1  [STACK] void 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5359 ;; Tracked objects:
  5360 ;;		On entry : 3F/0
  5361 ;;		On exit  : 3F/3B
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:   13
  5371 ;; This function calls:
  5372 ;;		_eaDogM_WriteString
  5373 ;;		_send_lcd_cmd_dma
  5374 ;; This function is called by:
  5375 ;;		_main
  5376 ;; This function uses a reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text21
  5380  00530A                     __ptext21:
  5381                           	opt callstack 0
  5382  00530A                     _eaDogM_WriteStringAtPos:
  5383                           	opt callstack 17
  5384                           
  5385                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5386                           ;stkvar	_c @ sp[(0)+-2]
  5387                           
  5388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5389                           ;incstack = 0
  5390  00530A  0EFE               	movlw	-2
  5391  00530C  006F FF8C  F043    	movff	plusw1,btemp+11
  5392                           
  5393                           ;stkvar	_r @ sp[(0)+-1]
  5394  005312  0EFF               	movlw	-1
  5395  005314  50E3               	movf	plusw1,w,c
  5396  005316  0D10               	mullw	16
  5397  005318  50F3               	movf	prodl,w,c
  5398  00531A  2443               	addwf	btemp+11,w,c
  5399  00531C  0F80               	addlw	128
  5400  00531E  6EE6               	movwf	postinc1,c
  5401  005320  ECD8  F027         	call	_send_lcd_cmd_dma	;wreg free
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5405                           ;stkvar	_strPtr @ sp[(0)+-3]
  5406  005324  0EFD               	movlw	-3
  5407  005326  50E3               	movf	plusw1,w,c
  5408  005328  6EE6               	movwf	postinc1,c
  5409  00532A  EC3D  F025         	call	_eaDogM_WriteString	;wreg free
  5410                           
  5411                           ; BSR set to: 59
  5412                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5413  00532E  52E5               	movf	postdec1,f,c
  5414  005330  52E5               	movf	postdec1,f,c
  5415  005332  52E5               	movf	postdec1,f,c
  5416  005334  0012               	return		;funcret
  5417  005336                     __end_of_eaDogM_WriteStringAtPos:
  5418                           	opt callstack 0
  5419                           
  5420 ;; *************** function _eaDogM_WriteString *****************
  5421 ;; Defined at:
  5422 ;;		line 167 in file "eadog.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  strPtr          1  [STACK] PTR unsigned char 
  5425 ;;		 -> V(86), 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1  [STACK] void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5432 ;; Tracked objects:
  5433 ;;		On entry : 3F/0
  5434 ;;		On exit  : 3F/3B
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:   12
  5444 ;; This function calls:
  5445 ;;		_printf
  5446 ;;		_ringBufS_flush
  5447 ;;		_start_lcd
  5448 ;;		_strlen
  5449 ;;		_wait_lcd_set
  5450 ;; This function is called by:
  5451 ;;		_eaDogM_WriteStringAtPos
  5452 ;; This function uses a reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text22
  5456  004A7A                     __ptext22:
  5457                           	opt callstack 0
  5458  004A7A                     _eaDogM_WriteString:
  5459                           	opt callstack 17
  5460                           
  5461                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5462                           
  5463                           ; BSR set to: 59
  5464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5465                           ;incstack = 0
  5466  004A7A  ECCF  F02C         	call	_wait_lcd_set	;wreg free
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5470  004A7E  0E00               	movlw	0
  5471  004A80  6EE6               	movwf	postinc1,c
  5472  004A82  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5473  004A88  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5474  004A8E  EC23  F026         	call	_ringBufS_flush	;wreg free
  5475  004A92  94BC               	bcf	16316,2,c	;volatile
  5476                           
  5477                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5478                           ;stkvar	_strPtr @ sp[(0)+-1]
  5479  004A94  0EFF               	movlw	-1
  5480  004A96  006F FF8C  F043    	movff	plusw1,btemp+11
  5481  004A9C  0060  F10F  FFE6   	movff	btemp+11,postinc1
  5482  004AA2  0E00               	movlw	0
  5483  004AA4  6EE6               	movwf	postinc1,c
  5484  004AA6  EC9C  F024         	call	_strlen	;wreg free
  5485  004AAA  5039               	movf	btemp+1,w,c
  5486  004AAC  E104               	bnz	u4040
  5487  004AAE  0E41               	movlw	65
  5488  004AB0  5C38               	subwf	btemp,w,c
  5489  004AB2  A0D8               	btfss	status,0,c
  5490  004AB4  D008               	goto	l6772
  5491  004AB6                     u4040:
  5492                           
  5493                           ;stkvar	_strPtr @ sp[(0)+-1]
  5494  004AB6  0EFF               	movlw	-1
  5495  004AB8  50E3               	movf	plusw1,w,c
  5496  004ABA  6ED9               	movwf	fsr2l,c
  5497  004ABC  6ADA               	clrf	fsr2h,c
  5498  004ABE  0E40               	movlw	64
  5499  004AC0  26D9               	addwf	fsr2l,f,c
  5500  004AC2  0E00               	movlw	0
  5501  004AC4  6EDF               	movwf	indf2,c
  5502  004AC6                     l6772:
  5503                           
  5504                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5505  004AC6  013B               	movlb	59	; () banked
  5506  004AC8  9FFC               	bcf	252,7,b	;volatile
  5507                           
  5508                           ; BSR set to: 59
  5509                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5510                           ;stkvar	_strPtr @ sp[(0)+-1]
  5511  004ACA  0EFF               	movlw	-1
  5512  004ACC  006F FF8C  F043    	movff	plusw1,btemp+11
  5513  004AD2  0060  F10F  FFE6   	movff	btemp+11,postinc1
  5514  004AD8  0E00               	movlw	0
  5515  004ADA  6EE6               	movwf	postinc1,c
  5516  004ADC  EC9C  F024         	call	_strlen	;wreg free
  5517  004AE0  0060  F0E3  FBF7   	movff	btemp,15351	;volatile
  5518  004AE6  0060  F0E7  FBF8   	movff	btemp+1,15352	;volatile
  5519                           
  5520                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5521  004AEC  013B               	movlb	59	; () banked
  5522  004AEE  8FFC               	bsf	252,7,b	;volatile
  5523                           
  5524                           ; BSR set to: 59
  5525                           ;eadog.c: 177:  printf("%s", strPtr);
  5526                           ;stkvar	_strPtr @ sp[(0)+-1]
  5527  004AF0  0EFF               	movlw	-1
  5528  004AF2  006F FF8C  F043    	movff	plusw1,btemp+11
  5529  004AF8  0060  F10F  FFE6   	movff	btemp+11,postinc1
  5530  004AFE  0E00               	movlw	0
  5531  004B00  6EE6               	movwf	postinc1,c
  5532  004B02  0E96               	movlw	(STR_2+9)& (0+255)
  5533  004B04  6EE6               	movwf	postinc1,c
  5534  004B06  0E03               	movlw	3
  5535  004B08  6EE6               	movwf	postinc1,c
  5536  004B0A  EC4A  F027         	call	_printf	;wreg free
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;eadog.c: 178:  start_lcd();
  5540  004B0E  ECD2  F02C         	call	_start_lcd	;wreg free
  5541                           
  5542                           ; BSR set to: 59
  5543                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5544  004B12  52E5               	movf	postdec1,f,c
  5545  004B14  0012               	return		;funcret
  5546  004B16                     __end_of_eaDogM_WriteString:
  5547                           	opt callstack 0
  5548                           
  5549 ;; *************** function _eaDogM_WriteCommand *****************
  5550 ;; Defined at:
  5551 ;;		line 143 in file "eadog.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  cmd             1  [STACK] unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1  [STACK] void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5560 ;; Tracked objects:
  5561 ;;		On entry : 3F/3D
  5562 ;;		On exit  : 3F/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:   13
  5572 ;; This function calls:
  5573 ;;		_send_lcd_cmd_dma
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text23
  5580  00590C                     __ptext23:
  5581                           	opt callstack 0
  5582  00590C                     _eaDogM_WriteCommand:
  5583                           	opt callstack 17
  5584                           
  5585                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5586                           ;stkvar	_cmd @ sp[(0)+-1]
  5587                           
  5588                           ; BSR set to: 59
  5589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5590                           ;incstack = 0
  5591  00590C  0EFF               	movlw	-1
  5592  00590E  50E3               	movf	plusw1,w,c
  5593  005910  6EE6               	movwf	postinc1,c
  5594  005912  ECD8  F027         	call	_send_lcd_cmd_dma	;wreg free
  5595                           
  5596                           ; BSR set to: 0
  5597                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5598  005916  52E5               	movf	postdec1,f,c
  5599  005918  0012               	return		;funcret
  5600  00591A                     __end_of_eaDogM_WriteCommand:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _send_lcd_cmd_dma *****************
  5604 ;; Defined at:
  5605 ;;		line 184 in file "eadog.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  strPtr          1  [STACK] unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1  [STACK] void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 3F/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;Total ram usage:        0 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   12
  5626 ;; This function calls:
  5627 ;;		_printf
  5628 ;;		_ringBufS_flush
  5629 ;;		_start_lcd
  5630 ;;		_wait_lcd_done
  5631 ;;		_wait_lcd_set
  5632 ;; This function is called by:
  5633 ;;		_eaDogM_WriteCommand
  5634 ;;		_eaDogM_WriteStringAtPos
  5635 ;; This function uses a reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text24
  5639  004FB0                     __ptext24:
  5640                           	opt callstack 0
  5641  004FB0                     _send_lcd_cmd_dma:
  5642                           	opt callstack 17
  5643                           
  5644                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5645                           
  5646                           ; BSR set to: 0
  5647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5648                           ;incstack = 0
  5649  004FB0  ECCF  F02C         	call	_wait_lcd_set	;wreg free
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5653  004FB4  0E00               	movlw	0
  5654  004FB6  6EE6               	movwf	postinc1,c
  5655  004FB8  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5656  004FBE  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5657  004FC4  EC23  F026         	call	_ringBufS_flush	;wreg free
  5658  004FC8  92BC               	bcf	16316,1,c	;volatile
  5659  004FCA  94BC               	bcf	16316,2,c	;volatile
  5660                           
  5661                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5662  004FCC  013B               	movlb	59	; () banked
  5663  004FCE  9FFC               	bcf	252,7,b	;volatile
  5664                           
  5665                           ; BSR set to: 59
  5666                           ;eadog.c: 192:  DMA1SSZ = 1;
  5667  004FD0  0E00               	movlw	0
  5668  004FD2  6FF8               	movwf	248,b	;volatile
  5669  004FD4  0E01               	movlw	1
  5670  004FD6  6FF7               	movwf	247,b	;volatile
  5671                           
  5672                           ; BSR set to: 59
  5673                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5674  004FD8  8FFC               	bsf	252,7,b	;volatile
  5675                           
  5676                           ; BSR set to: 59
  5677                           ;eadog.c: 194:  printf("%c", strPtr);
  5678                           ;stkvar	_strPtr @ sp[(0)+-1]
  5679  004FDA  0EFF               	movlw	-1
  5680  004FDC  50E3               	movf	plusw1,w,c
  5681  004FDE  6EE6               	movwf	postinc1,c
  5682  004FE0  0E00               	movlw	0
  5683  004FE2  6EE6               	movwf	postinc1,c
  5684  004FE4  0EB1               	movlw	STR_14& (0+255)
  5685  004FE6  6EE6               	movwf	postinc1,c
  5686  004FE8  0E03               	movlw	3
  5687  004FEA  6EE6               	movwf	postinc1,c
  5688  004FEC  EC4A  F027         	call	_printf	;wreg free
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;eadog.c: 195:  start_lcd();
  5692  004FF0  ECD2  F02C         	call	_start_lcd	;wreg free
  5693                           
  5694                           ; BSR set to: 59
  5695                           ;eadog.c: 196:  wait_lcd_done();
  5696  004FF4  EC15  F02C         	call	_wait_lcd_done	;wreg free
  5697                           
  5698                           ; BSR set to: 0
  5699  004FF8  82BC               	bsf	16316,1,c	;volatile
  5700                           
  5701                           ; BSR set to: 0
  5702                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5703  004FFA  52E5               	movf	postdec1,f,c
  5704  004FFC  0012               	return		;funcret
  5705  004FFE                     __end_of_send_lcd_cmd_dma:
  5706                           	opt callstack 0
  5707                           
  5708 ;; *************** function _wait_lcd_set *****************
  5709 ;; Defined at:
  5710 ;;		line 114 in file "eadog.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1  [STACK] void 
  5717 ;; Registers used:
  5718 ;;		None
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 3F/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    3
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_eaDogM_WriteString
  5735 ;;		_send_lcd_cmd_dma
  5736 ;; This function uses a reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text25
  5740  00599E                     __ptext25:
  5741                           	opt callstack 0
  5742  00599E                     _wait_lcd_set:
  5743                           	opt callstack 25
  5744                           
  5745                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5746                           
  5747                           ; BSR set to: 0
  5748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5749                           ;incstack = 0
  5750  00599E  0100               	movlb	0	; () banked
  5751  0059A0  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5752                           
  5753                           ; BSR set to: 0
  5754                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5755  0059A2  0012               	return		;funcret
  5756  0059A4                     __end_of_wait_lcd_set:
  5757                           	opt callstack 0
  5758                           
  5759 ;; *************** function _wait_lcd_done *****************
  5760 ;; Defined at:
  5761 ;;		line 124 in file "eadog.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1  [STACK] void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5770 ;; Tracked objects:
  5771 ;;		On entry : 4/0
  5772 ;;		On exit  : 3F/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		_wdtdelay
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;;		_send_lcd_cmd_dma
  5787 ;; This function uses a reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text26
  5791  00582A                     __ptext26:
  5792                           	opt callstack 0
  5793  00582A                     _wait_lcd_done:
  5794                           	opt callstack 26
  5795                           
  5796                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5797                           
  5798                           ; BSR set to: 0
  5799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5800                           ;incstack = 0
  5801  00582A  0100               	movlb	0	; () banked
  5802  00582C  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5803  00582E  D7FD               	goto	_wait_lcd_done
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;eadog.c: 127:  wdtdelay(50);
  5807  005830  0E32               	movlw	50
  5808  005832  6EE6               	movwf	postinc1,c
  5809  005834  0E00               	movlw	0
  5810  005836  6EE6               	movwf	postinc1,c
  5811  005838  0E00               	movlw	0
  5812  00583A  6EE6               	movwf	postinc1,c
  5813  00583C  0E00               	movlw	0
  5814  00583E  6EE6               	movwf	postinc1,c
  5815  005840  ECAA  F027         	call	_wdtdelay	;wreg free
  5816                           
  5817                           ; BSR set to: 0
  5818                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5819  005844  0012               	return		;funcret
  5820  005846                     __end_of_wait_lcd_done:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function _wdtdelay *****************
  5824 ;; Defined at:
  5825 ;;		line 21 in file "eadog.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  delay           4  [STACK] unsigned long 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1  [STACK] void 
  5832 ;; Registers used:
  5833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 3F/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    3
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_init_display
  5850 ;;		_send_lcd_cmd
  5851 ;;		_send_lcd_cmd_long
  5852 ;;		_wait_lcd_done
  5853 ;; This function uses a reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text27
  5857  004F54                     __ptext27:
  5858                           	opt callstack 0
  5859  004F54                     _wdtdelay:
  5860                           	opt callstack 26
  5861                           
  5862                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5863                           
  5864                           ; BSR set to: 0
  5865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5866                           ;incstack = 0
  5867  004F54  0100               	movlb	0	; () banked
  5868  004F56  6B93               	clrf	wdtdelay@dcount& (0+255),b
  5869  004F58  6B94               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5870  004F5A  6B95               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5871  004F5C  6B96               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5872  004F5E  D009               	goto	l4986
  5873  004F60                     l1302:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;eadog.c: 26:   __nop();
  5877  004F60  F000               	nop	
  5878  004F62  0004               	clrwdt		;# 
  5879                           
  5880                           ;eadog.c: 28:  };
  5881  004F64  0E01               	movlw	1
  5882  004F66  0100               	movlb	0	; () banked
  5883  004F68  2793               	addwf	wdtdelay@dcount& (0+255),f,b
  5884  004F6A  0E00               	movlw	0
  5885  004F6C  2394               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5886  004F6E  2395               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5887  004F70  2396               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5888  004F72                     l4986:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;stkvar	_delay @ sp[(0)+-4]
  5892  004F72  0EFC               	movlw	-4
  5893  004F74  006F FF8C  F038    	movff	plusw1,btemp
  5894  004F7A  5193               	movf	wdtdelay@dcount& (0+255),w,b
  5895  004F7C  5C38               	subwf	btemp,w,c
  5896  004F7E  0EFD               	movlw	-3
  5897  004F80  006F FF8C  F038    	movff	plusw1,btemp
  5898  004F86  5194               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5899  004F88  5838               	subwfb	btemp,w,c
  5900  004F8A  0EFE               	movlw	-2
  5901  004F8C  006F FF8C  F038    	movff	plusw1,btemp
  5902  004F92  5195               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5903  004F94  5838               	subwfb	btemp,w,c
  5904  004F96  0EFF               	movlw	-1
  5905  004F98  006F FF8C  F038    	movff	plusw1,btemp
  5906  004F9E  5196               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5907  004FA0  5838               	subwfb	btemp,w,c
  5908  004FA2  B0D8               	btfsc	status,0,c
  5909  004FA4  D7DD               	goto	l1302
  5910                           
  5911                           ; BSR set to: 0
  5912                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5913  004FA6  52E5               	movf	postdec1,f,c
  5914  004FA8  52E5               	movf	postdec1,f,c
  5915  004FAA  52E5               	movf	postdec1,f,c
  5916  004FAC  52E5               	movf	postdec1,f,c
  5917  004FAE  0012               	return		;funcret
  5918  004FB0                     __end_of_wdtdelay:
  5919                           	opt callstack 0
  5920                           
  5921 ;; *************** function _start_lcd *****************
  5922 ;; Defined at:
  5923 ;;		line 109 in file "eadog.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1  [STACK] void 
  5930 ;; Registers used:
  5931 ;;		None
  5932 ;; Tracked objects:
  5933 ;;		On entry : 3F/0
  5934 ;;		On exit  : 3F/3B
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    3
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_eaDogM_WriteString
  5948 ;;		_send_lcd_cmd_dma
  5949 ;; This function uses a reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text28
  5953  0059A4                     __ptext28:
  5954                           	opt callstack 0
  5955  0059A4                     _start_lcd:
  5956                           	opt callstack 25
  5957                           
  5958                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5959                           
  5960                           ; BSR set to: 0
  5961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5962                           ;incstack = 0
  5963  0059A4  013B               	movlb	59	; () banked
  5964  0059A6  8DFC               	bsf	252,6,b	;volatile
  5965                           
  5966                           ; BSR set to: 59
  5967                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5968  0059A8  0012               	return		;funcret
  5969  0059AA                     __end_of_start_lcd:
  5970                           	opt callstack 0
  5971                           
  5972 ;; *************** function _ringBufS_flush *****************
  5973 ;; Defined at:
  5974 ;;		line 76 in file "ringbufs.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5977 ;;		 -> ring_buf1(67), 
  5978 ;;  clearBuffer     1  [STACK] const char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1  [STACK] void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5985 ;; Tracked objects:
  5986 ;;		On entry : 3F/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5994 ;;Total ram usage:        0 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		_memset
  5999 ;; This function is called by:
  6000 ;;		_eaDogM_WriteString
  6001 ;;		_send_lcd_cmd_dma
  6002 ;; This function uses a reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text29
  6006  004C46                     __ptext29:
  6007                           	opt callstack 0
  6008  004C46                     _ringBufS_flush:
  6009                           	opt callstack 24
  6010                           
  6011                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6012                           ;stkvar	__this @ sp[(0)+-2]
  6013                           
  6014                           ; BSR set to: 59
  6015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6016                           ;incstack = 0
  6017  004C46  0EFE               	movlw	-2
  6018  004C48  006F FF8C  F042    	movff	plusw1,btemp+10
  6019  004C4E  0EFF               	movlw	-1
  6020  004C50  006F FF8C  F043    	movff	plusw1,btemp+11
  6021  004C56  0E42               	movlw	66
  6022  004C58  2442               	addwf	btemp+10,w,c
  6023  004C5A  6ED9               	movwf	fsr2l,c
  6024  004C5C  0E00               	movlw	0
  6025  004C5E  2043               	addwfc	btemp+11,w,c
  6026  004C60  6EDA               	movwf	fsr2h,c
  6027  004C62  0E00               	movlw	0
  6028  004C64  6EDF               	movwf	indf2,c
  6029                           
  6030                           ;ringbufs.c: 79:  _this->head = 0;
  6031                           ;stkvar	__this @ sp[(0)+-2]
  6032  004C66  0EFE               	movlw	-2
  6033  004C68  006F FF8C  F042    	movff	plusw1,btemp+10
  6034  004C6E  0EFF               	movlw	-1
  6035  004C70  006F FF8C  F043    	movff	plusw1,btemp+11
  6036  004C76  0E40               	movlw	64
  6037  004C78  2442               	addwf	btemp+10,w,c
  6038  004C7A  6ED9               	movwf	fsr2l,c
  6039  004C7C  0E00               	movlw	0
  6040  004C7E  2043               	addwfc	btemp+11,w,c
  6041  004C80  6EDA               	movwf	fsr2h,c
  6042  004C82  0E00               	movlw	0
  6043  004C84  6EDF               	movwf	indf2,c
  6044                           
  6045                           ;ringbufs.c: 80:  _this->tail = 0;
  6046                           ;stkvar	__this @ sp[(0)+-2]
  6047  004C86  0EFE               	movlw	-2
  6048  004C88  006F FF8C  F042    	movff	plusw1,btemp+10
  6049  004C8E  0EFF               	movlw	-1
  6050  004C90  006F FF8C  F043    	movff	plusw1,btemp+11
  6051  004C96  0E41               	movlw	65
  6052  004C98  2442               	addwf	btemp+10,w,c
  6053  004C9A  6ED9               	movwf	fsr2l,c
  6054  004C9C  0E00               	movlw	0
  6055  004C9E  2043               	addwfc	btemp+11,w,c
  6056  004CA0  6EDA               	movwf	fsr2h,c
  6057  004CA2  0E00               	movlw	0
  6058  004CA4  6EDF               	movwf	indf2,c
  6059                           
  6060                           ;ringbufs.c: 81:  if (clearBuffer) {
  6061                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6062  004CA6  0EFD               	movlw	-3
  6063  004CA8  50E3               	movf	plusw1,w,c
  6064  004CAA  B4D8               	btfsc	status,2,c
  6065  004CAC  D011               	goto	l1438
  6066                           
  6067                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6068  004CAE  0E40               	movlw	64
  6069  004CB0  6EE6               	movwf	postinc1,c
  6070  004CB2  0E00               	movlw	0
  6071  004CB4  6EE6               	movwf	postinc1,c
  6072  004CB6  0E00               	movlw	0
  6073  004CB8  6EE6               	movwf	postinc1,c
  6074  004CBA  0E00               	movlw	0
  6075  004CBC  6EE6               	movwf	postinc1,c
  6076                           
  6077                           ;stkvar	__this @ sp[(-4)+-2]
  6078  004CBE  0EFA               	movlw	-6
  6079  004CC0  006F FF8F FFE6     	movff	plusw1,postinc1
  6080  004CC6  006F FF8F FFE6     	movff	plusw1,postinc1
  6081  004CCC  EC45  F018         	call	_memset	;wreg free
  6082  004CD0                     l1438:
  6083                           
  6084                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6085  004CD0  52E5               	movf	postdec1,f,c
  6086  004CD2  52E5               	movf	postdec1,f,c
  6087  004CD4  52E5               	movf	postdec1,f,c
  6088  004CD6  0012               	return		;funcret
  6089  004CD8                     __end_of_ringBufS_flush:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _memset *****************
  6093 ;; Defined at:
  6094 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  dest            2  [STACK] PTR void 
  6097 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6098 ;;  c               2  [STACK] int 
  6099 ;;  n               2  [STACK] unsigned int 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  s               2  [STACK] PTR unsigned char 
  6102 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6103 ;;  k               2  [STACK] unsigned int 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2  [STACK] PTR void 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6117 ;;Total ram usage:        0 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    3
  6120 ;; This function calls:
  6121 ;;		Nothing
  6122 ;; This function is called by:
  6123 ;;		_ringBufS_init
  6124 ;;		_ringBufS_flush
  6125 ;; This function uses a reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text30
  6129  00308A                     __ptext30:
  6130                           	opt callstack 0
  6131  00308A                     _memset:
  6132                           	opt callstack 0
  6133                           
  6134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6135  00308A  52E6               	movf	postinc1,f,c
  6136  00308C  52E6               	movf	postinc1,f,c
  6137  00308E  52E6               	movf	postinc1,f,c
  6138  003090  52E6               	movf	postinc1,f,c
  6139                           
  6140                           ;stkvar	_dest @ sp[(-4)+-2]
  6141                           
  6142                           ;incstack = 0
  6143  003092  0EFA               	movlw	-6
  6144  003094  006F FF8C  F042    	movff	plusw1,btemp+10
  6145  00309A  0EFB               	movlw	-5
  6146  00309C  006F FF8C  F043    	movff	plusw1,btemp+11
  6147                           
  6148                           ;stkvar	_s @ sp[(-4)+0]
  6149  0030A2  0EFD               	movlw	-3
  6150  0030A4  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6151  0030AA  0EFC               	movlw	-4
  6152  0030AC  0060  F10B  FFE3   	movff	btemp+10,plusw1
  6153                           
  6154                           ;stkvar	_n @ sp[(-4)+-6]
  6155  0030B2  0EF6               	movlw	-10
  6156  0030B4  006F FF8C  F038    	movff	plusw1,btemp
  6157  0030BA  0EF7               	movlw	-9
  6158  0030BC  50E3               	movf	plusw1,w,c
  6159  0030BE  1038               	iorwf	btemp,w,c
  6160  0030C0  B4D8               	btfsc	status,2,c
  6161  0030C2  D154               	goto	u3960
  6162                           
  6163                           ;stkvar	_c @ sp[(-4)+-4]
  6164                           ;stkvar	_s @ sp[(-4)+0]
  6165  0030C4  0EFC               	movlw	-4
  6166  0030C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6167  0030CC  0EFD               	movlw	-3
  6168  0030CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6169  0030D4  0EF8               	movlw	-8
  6170  0030D6  006F FF8F FFDF     	movff	plusw1,indf2
  6171                           
  6172                           ;stkvar	_c @ sp[(-4)+-4]
  6173                           ;stkvar	_n @ sp[(-4)+-6]
  6174                           ;stkvar	_s @ sp[(-4)+0]
  6175  0030DC  0EFC               	movlw	-4
  6176  0030DE  006F FF8C  F042    	movff	plusw1,btemp+10
  6177  0030E4  0EFD               	movlw	-3
  6178  0030E6  006F FF8C  F043    	movff	plusw1,btemp+11
  6179  0030EC  0EF6               	movlw	-10
  6180  0030EE  50E3               	movf	plusw1,w,c
  6181  0030F0  2642               	addwf	btemp+10,f,c
  6182  0030F2  0EF7               	movlw	-9
  6183  0030F4  50E3               	movf	plusw1,w,c
  6184  0030F6  2243               	addwfc	btemp+11,f,c
  6185  0030F8  0EFF               	movlw	255
  6186  0030FA  2442               	addwf	btemp+10,w,c
  6187  0030FC  6ED9               	movwf	fsr2l,c
  6188  0030FE  0EFF               	movlw	255
  6189  003100  2043               	addwfc	btemp+11,w,c
  6190  003102  6EDA               	movwf	fsr2h,c
  6191  003104  0EF8               	movlw	-8
  6192  003106  006F FF8F FFDF     	movff	plusw1,indf2
  6193                           
  6194                           ;stkvar	_n @ sp[(-4)+-6]
  6195  00310C  0EF7               	movlw	-9
  6196  00310E  50E3               	movf	plusw1,w,c
  6197  003110  E108               	bnz	l6638
  6198  003112  0EF6               	movlw	-10
  6199  003114  006F FF8C  F038    	movff	plusw1,btemp
  6200  00311A  0E03               	movlw	3
  6201  00311C  5E38               	subwf	btemp,f,c
  6202  00311E  A0D8               	btfss	status,0,c
  6203  003120  D125               	goto	u3960
  6204  003122                     l6638:
  6205                           
  6206                           ;stkvar	_c @ sp[(-4)+-4]
  6207                           ;stkvar	_s @ sp[(-4)+0]
  6208  003122  0EFC               	movlw	-4
  6209  003124  006F FF8C  F042    	movff	plusw1,btemp+10
  6210  00312A  0EFD               	movlw	-3
  6211  00312C  006F FF8C  F043    	movff	plusw1,btemp+11
  6212  003132  0E01               	movlw	1
  6213  003134  2442               	addwf	btemp+10,w,c
  6214  003136  6ED9               	movwf	fsr2l,c
  6215  003138  0E00               	movlw	0
  6216  00313A  2043               	addwfc	btemp+11,w,c
  6217  00313C  6EDA               	movwf	fsr2h,c
  6218  00313E  0EF8               	movlw	-8
  6219  003140  006F FF8F FFDF     	movff	plusw1,indf2
  6220                           
  6221                           ;stkvar	_c @ sp[(-4)+-4]
  6222                           ;stkvar	_s @ sp[(-4)+0]
  6223  003146  0EFC               	movlw	-4
  6224  003148  006F FF8C  F042    	movff	plusw1,btemp+10
  6225  00314E  0EFD               	movlw	-3
  6226  003150  006F FF8C  F043    	movff	plusw1,btemp+11
  6227  003156  0E02               	movlw	2
  6228  003158  2442               	addwf	btemp+10,w,c
  6229  00315A  6ED9               	movwf	fsr2l,c
  6230  00315C  0E00               	movlw	0
  6231  00315E  2043               	addwfc	btemp+11,w,c
  6232  003160  6EDA               	movwf	fsr2h,c
  6233  003162  0EF8               	movlw	-8
  6234  003164  006F FF8F FFDF     	movff	plusw1,indf2
  6235                           
  6236                           ;stkvar	_c @ sp[(-4)+-4]
  6237                           ;stkvar	_n @ sp[(-4)+-6]
  6238                           ;stkvar	_s @ sp[(-4)+0]
  6239  00316A  0EFC               	movlw	-4
  6240  00316C  006F FF8C  F042    	movff	plusw1,btemp+10
  6241  003172  0EFD               	movlw	-3
  6242  003174  006F FF8C  F043    	movff	plusw1,btemp+11
  6243  00317A  0EF6               	movlw	-10
  6244  00317C  50E3               	movf	plusw1,w,c
  6245  00317E  2642               	addwf	btemp+10,f,c
  6246  003180  0EF7               	movlw	-9
  6247  003182  50E3               	movf	plusw1,w,c
  6248  003184  2243               	addwfc	btemp+11,f,c
  6249  003186  0EFE               	movlw	254
  6250  003188  2442               	addwf	btemp+10,w,c
  6251  00318A  6ED9               	movwf	fsr2l,c
  6252  00318C  0EFF               	movlw	255
  6253  00318E  2043               	addwfc	btemp+11,w,c
  6254  003190  6EDA               	movwf	fsr2h,c
  6255  003192  0EF8               	movlw	-8
  6256  003194  006F FF8F FFDF     	movff	plusw1,indf2
  6257                           
  6258                           ;stkvar	_c @ sp[(-4)+-4]
  6259                           ;stkvar	_n @ sp[(-4)+-6]
  6260                           ;stkvar	_s @ sp[(-4)+0]
  6261  00319A  0EFC               	movlw	-4
  6262  00319C  006F FF8C  F042    	movff	plusw1,btemp+10
  6263  0031A2  0EFD               	movlw	-3
  6264  0031A4  006F FF8C  F043    	movff	plusw1,btemp+11
  6265  0031AA  0EF6               	movlw	-10
  6266  0031AC  50E3               	movf	plusw1,w,c
  6267  0031AE  2642               	addwf	btemp+10,f,c
  6268  0031B0  0EF7               	movlw	-9
  6269  0031B2  50E3               	movf	plusw1,w,c
  6270  0031B4  2243               	addwfc	btemp+11,f,c
  6271  0031B6  0EFD               	movlw	253
  6272  0031B8  2442               	addwf	btemp+10,w,c
  6273  0031BA  6ED9               	movwf	fsr2l,c
  6274  0031BC  0EFF               	movlw	255
  6275  0031BE  2043               	addwfc	btemp+11,w,c
  6276  0031C0  6EDA               	movwf	fsr2h,c
  6277  0031C2  0EF8               	movlw	-8
  6278  0031C4  006F FF8F FFDF     	movff	plusw1,indf2
  6279                           
  6280                           ;stkvar	_n @ sp[(-4)+-6]
  6281  0031CA  0EF7               	movlw	-9
  6282  0031CC  50E3               	movf	plusw1,w,c
  6283  0031CE  E108               	bnz	l6644
  6284  0031D0  0EF6               	movlw	-10
  6285  0031D2  006F FF8C  F038    	movff	plusw1,btemp
  6286  0031D8  0E07               	movlw	7
  6287  0031DA  5E38               	subwf	btemp,f,c
  6288  0031DC  A0D8               	btfss	status,0,c
  6289  0031DE  D0C6               	goto	u3960
  6290  0031E0                     l6644:
  6291                           
  6292                           ;stkvar	_c @ sp[(-4)+-4]
  6293                           ;stkvar	_s @ sp[(-4)+0]
  6294  0031E0  0EFC               	movlw	-4
  6295  0031E2  006F FF8C  F042    	movff	plusw1,btemp+10
  6296  0031E8  0EFD               	movlw	-3
  6297  0031EA  006F FF8C  F043    	movff	plusw1,btemp+11
  6298  0031F0  0E03               	movlw	3
  6299  0031F2  2442               	addwf	btemp+10,w,c
  6300  0031F4  6ED9               	movwf	fsr2l,c
  6301  0031F6  0E00               	movlw	0
  6302  0031F8  2043               	addwfc	btemp+11,w,c
  6303  0031FA  6EDA               	movwf	fsr2h,c
  6304  0031FC  0EF8               	movlw	-8
  6305  0031FE  006F FF8F FFDF     	movff	plusw1,indf2
  6306                           
  6307                           ;stkvar	_c @ sp[(-4)+-4]
  6308                           ;stkvar	_n @ sp[(-4)+-6]
  6309                           ;stkvar	_s @ sp[(-4)+0]
  6310  003204  0EFC               	movlw	-4
  6311  003206  006F FF8C  F042    	movff	plusw1,btemp+10
  6312  00320C  0EFD               	movlw	-3
  6313  00320E  006F FF8C  F043    	movff	plusw1,btemp+11
  6314  003214  0EF6               	movlw	-10
  6315  003216  50E3               	movf	plusw1,w,c
  6316  003218  2642               	addwf	btemp+10,f,c
  6317  00321A  0EF7               	movlw	-9
  6318  00321C  50E3               	movf	plusw1,w,c
  6319  00321E  2243               	addwfc	btemp+11,f,c
  6320  003220  0EFC               	movlw	252
  6321  003222  2442               	addwf	btemp+10,w,c
  6322  003224  6ED9               	movwf	fsr2l,c
  6323  003226  0EFF               	movlw	255
  6324  003228  2043               	addwfc	btemp+11,w,c
  6325  00322A  6EDA               	movwf	fsr2h,c
  6326  00322C  0EF8               	movlw	-8
  6327  00322E  006F FF8F FFDF     	movff	plusw1,indf2
  6328                           
  6329                           ;stkvar	_n @ sp[(-4)+-6]
  6330  003234  0EF7               	movlw	-9
  6331  003236  50E3               	movf	plusw1,w,c
  6332  003238  E108               	bnz	l6650
  6333  00323A  0EF6               	movlw	-10
  6334  00323C  006F FF8C  F038    	movff	plusw1,btemp
  6335  003242  0E09               	movlw	9
  6336  003244  5E38               	subwf	btemp,f,c
  6337  003246  A0D8               	btfss	status,0,c
  6338  003248  D091               	goto	u3960
  6339  00324A                     l6650:
  6340                           
  6341                           ;stkvar	_s @ sp[(-4)+0]
  6342  00324A  0EFC               	movlw	-4
  6343  00324C  006F FF8C  F042    	movff	plusw1,btemp+10
  6344  003252  1E42               	comf	btemp+10,f,c
  6345  003254  0EFD               	movlw	-3
  6346  003256  006F FF8C  F043    	movff	plusw1,btemp+11
  6347  00325C  1E43               	comf	btemp+11,f,c
  6348  00325E  2A42               	incf	btemp+10,f,c
  6349  003260  B4D8               	btfsc	status,2,c
  6350  003262  2A43               	incf	btemp+11,f,c
  6351  003264  0E03               	movlw	3
  6352  003266  1642               	andwf	btemp+10,f,c
  6353  003268  0E00               	movlw	0
  6354  00326A  1643               	andwf	btemp+11,f,c
  6355                           
  6356                           ;stkvar	_k @ sp[(-4)+2]
  6357  00326C  0EFE               	movlw	-2
  6358  00326E  0060  F10B  FFE3   	movff	btemp+10,plusw1
  6359  003274  0EFF               	movlw	-1
  6360  003276  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6361                           
  6362                           ;stkvar	_k @ sp[(-4)+2]
  6363                           ;stkvar	_s @ sp[(-4)+0]
  6364  00327C  0EFC               	movlw	-4
  6365  00327E  50E3               	movf	plusw1,w,c
  6366  003280  6E38               	movwf	btemp,c
  6367  003282  0EFE               	movlw	-2
  6368  003284  50E3               	movf	plusw1,w,c
  6369  003286  2638               	addwf	btemp,f,c
  6370  003288  0EFC               	movlw	-4
  6371  00328A  0060  F0E3  FFE3   	movff	btemp,plusw1
  6372  003290  0EFD               	movlw	-3
  6373  003292  50E3               	movf	plusw1,w,c
  6374  003294  6E38               	movwf	btemp,c
  6375  003296  0EFF               	movlw	-1
  6376  003298  50E3               	movf	plusw1,w,c
  6377  00329A  2238               	addwfc	btemp,f,c
  6378  00329C  0EFD               	movlw	-3
  6379  00329E  0060  F0E3  FFE3   	movff	btemp,plusw1
  6380                           
  6381                           ;stkvar	_k @ sp[(-4)+2]
  6382                           ;stkvar	_n @ sp[(-4)+-6]
  6383  0032A4  0EF6               	movlw	-10
  6384  0032A6  50E3               	movf	plusw1,w,c
  6385  0032A8  6E38               	movwf	btemp,c
  6386  0032AA  0EFE               	movlw	-2
  6387  0032AC  50E3               	movf	plusw1,w,c
  6388  0032AE  5E38               	subwf	btemp,f,c
  6389  0032B0  0EF6               	movlw	-10
  6390  0032B2  0060  F0E3  FFE3   	movff	btemp,plusw1
  6391  0032B8  0EF7               	movlw	-9
  6392  0032BA  50E3               	movf	plusw1,w,c
  6393  0032BC  6E38               	movwf	btemp,c
  6394  0032BE  0EFF               	movlw	-1
  6395  0032C0  50E3               	movf	plusw1,w,c
  6396  0032C2  5A38               	subwfb	btemp,f,c
  6397  0032C4  0EF7               	movlw	-9
  6398  0032C6  0060  F0E3  FFE3   	movff	btemp,plusw1
  6399  0032CC  0EFC               	movlw	252
  6400  0032CE  6E42               	movwf	btemp+10,c
  6401  0032D0  0EFF               	movlw	255
  6402  0032D2  6E43               	movwf	btemp+11,c
  6403                           
  6404                           ;stkvar	_n @ sp[(-4)+-6]
  6405  0032D4  0EF6               	movlw	-10
  6406  0032D6  006F FF8C  F038    	movff	plusw1,btemp
  6407  0032DC  5042               	movf	btemp+10,w,c
  6408  0032DE  1638               	andwf	btemp,f,c
  6409  0032E0  0EF6               	movlw	-10
  6410  0032E2  0060  F0E3  FFE3   	movff	btemp,plusw1
  6411  0032E8  0EF7               	movlw	-9
  6412  0032EA  006F FF8C  F038    	movff	plusw1,btemp
  6413  0032F0  5043               	movf	btemp+11,w,c
  6414  0032F2  1638               	andwf	btemp,f,c
  6415  0032F4  0EF7               	movlw	-9
  6416  0032F6  D02E               	goto	L13
  6417  0032F8                     l6658:
  6418                           
  6419                           ;stkvar	_c @ sp[(-4)+-4]
  6420                           ;stkvar	_s @ sp[(-4)+0]
  6421  0032F8  0EFC               	movlw	-4
  6422  0032FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6423  003300  0EFD               	movlw	-3
  6424  003302  006F FF8F FFDA     	movff	plusw1,fsr2h
  6425  003308  0EF8               	movlw	-8
  6426  00330A  006F FF8F FFDF     	movff	plusw1,indf2
  6427                           
  6428                           ;stkvar	_n @ sp[(-4)+-6]
  6429  003310  0EF6               	movlw	-10
  6430  003312  006F FF8C  F038    	movff	plusw1,btemp
  6431  003318  0E01               	movlw	1
  6432  00331A  5E38               	subwf	btemp,f,c
  6433  00331C  0EF6               	movlw	-10
  6434  00331E  0060  F0E3  FFE3   	movff	btemp,plusw1
  6435  003324  0EF7               	movlw	-9
  6436  003326  006F FF8C  F038    	movff	plusw1,btemp
  6437  00332C  0E00               	movlw	0
  6438  00332E  5A38               	subwfb	btemp,f,c
  6439  003330  0EF7               	movlw	-9
  6440  003332  0060  F0E3  FFE3   	movff	btemp,plusw1
  6441                           
  6442                           ;stkvar	_s @ sp[(-4)+0]
  6443  003338  0EFC               	movlw	-4
  6444  00333A  50E3               	movf	plusw1,w,c
  6445  00333C  0F01               	addlw	1
  6446  00333E  6E38               	movwf	btemp,c
  6447  003340  0EFC               	movlw	-4
  6448  003342  0060  F0E3  FFE3   	movff	btemp,plusw1
  6449  003348  6A38               	clrf	btemp,c
  6450  00334A  0EFD               	movlw	-3
  6451  00334C  50E3               	movf	plusw1,w,c
  6452  00334E  2038               	addwfc	btemp,w,c
  6453  003350  6E38               	movwf	btemp,c
  6454  003352  0EFD               	movlw	-3
  6455  003354                     L13:
  6456  003354  0060  F0E3  FFE3   	movff	btemp,plusw1
  6457                           
  6458                           ;stkvar	_n @ sp[(-4)+-6]
  6459  00335A  0EF6               	movlw	-10
  6460  00335C  006F FF8C  F038    	movff	plusw1,btemp
  6461  003362  0EF7               	movlw	-9
  6462  003364  50E3               	movf	plusw1,w,c
  6463  003366  1038               	iorwf	btemp,w,c
  6464  003368  A4D8               	btfss	status,2,c
  6465  00336A  D7C6               	goto	l6658
  6466  00336C                     u3960:
  6467                           
  6468                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6469  00336C  0EF6               	movlw	246
  6470  00336E  26E1               	addwf	fsr1l,f,c
  6471  003370  0EFF               	movlw	255
  6472  003372  22E2               	addwfc	fsr1h,f,c
  6473  003374  0012               	return		;funcret
  6474  003376                     __end_of_memset:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _printf *****************
  6478 ;; Defined at:
  6479 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  fmt             1  [STACK] PTR const unsigned char 
  6482 ;;		 -> STR_15(3), STR_14(3), STR_13(3), 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  ap              2  [STACK] PTR void [1]
  6485 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6486 ;;  ret             2    0        int 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  2  [STACK] int 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6491 ;; Tracked objects:
  6492 ;;		On entry : 3F/3B
  6493 ;;		On exit  : 3F/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   11
  6503 ;; This function calls:
  6504 ;;		_vfprintf
  6505 ;; This function is called by:
  6506 ;;		_eaDogM_WriteString
  6507 ;;		_send_lcd_cmd_dma
  6508 ;; This function uses a reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text31
  6512  004E94                     __ptext31:
  6513                           	opt callstack 0
  6514  004E94                     _printf:
  6515                           	opt callstack 0
  6516                           
  6517                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6518  004E94  52E6               	movf	postinc1,f,c
  6519  004E96  52E6               	movf	postinc1,f,c
  6520                           
  6521                           ;stkvar	?_printf @ sp[(-2)+-3]
  6522                           
  6523                           ;incstack = 0
  6524  004E98  0EFB               	movlw	251
  6525  004E9A  24E1               	addwf	fsr1l,w,c
  6526  004E9C  6E42               	movwf	btemp+10,c
  6527  004E9E  0EFF               	movlw	255
  6528  004EA0  20E2               	addwfc	fsr1h,w,c
  6529  004EA2  6E43               	movwf	btemp+11,c
  6530  004EA4  0E01               	movlw	1
  6531  004EA6  2642               	addwf	btemp+10,f,c
  6532  004EA8  0E00               	movlw	0
  6533  004EAA  2243               	addwfc	btemp+11,f,c
  6534                           
  6535                           ;stkvar	_ap @ sp[(-2)+0]
  6536  004EAC  0EFF               	movlw	-1
  6537  004EAE  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6538  004EB4  0EFE               	movlw	-2
  6539  004EB6  0060  F10B  FFE3   	movff	btemp+10,plusw1
  6540                           
  6541                           ;stkvar	_ap @ sp[(-2)+0]
  6542  004EBC  0EFE               	movlw	254
  6543  004EBE  24E1               	addwf	fsr1l,w,c
  6544  004EC0  6E38               	movwf	btemp,c
  6545  004EC2  0EFF               	movlw	255
  6546  004EC4  20E2               	addwfc	fsr1h,w,c
  6547  004EC6  6E39               	movwf	btemp+1,c
  6548  004EC8  0060  F0E3  FFE6   	movff	btemp,postinc1
  6549  004ECE  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  6550                           
  6551                           ;stkvar	_fmt @ sp[(-4)+-2]
  6552  004ED4  0EFA               	movlw	-6
  6553  004ED6  50E3               	movf	plusw1,w,c
  6554  004ED8  6EE6               	movwf	postinc1,c
  6555  004EDA  0E00               	movlw	0
  6556  004EDC  6EE6               	movwf	postinc1,c
  6557  004EDE  0E00               	movlw	0
  6558  004EE0  6EE6               	movwf	postinc1,c
  6559  004EE2  EC8B  F025         	call	_vfprintf	;wreg free
  6560                           
  6561                           ; BSR set to: 0
  6562                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6563  004EE6  52E5               	movf	postdec1,f,c
  6564  004EE8  52E5               	movf	postdec1,f,c
  6565  004EEA  52E5               	movf	postdec1,f,c
  6566  004EEC  50E7               	movf	indf1,w,c
  6567  004EEE  5EE1               	subwf	fsr1l,f,c
  6568  004EF0  0E00               	movlw	0
  6569  004EF2  5AE2               	subwfb	fsr1h,f,c
  6570  004EF4  0012               	return		;funcret
  6571  004EF6                     __end_of_printf:
  6572                           	opt callstack 0
  6573                           
  6574 ;; *************** function _vfprintf *****************
  6575 ;; Defined at:
  6576 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6579 ;;		 -> f(5), NULL(0), 
  6580 ;;  fmt             1  [STACK] PTR const unsigned char 
  6581 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(21), 
  6582 ;;		 -> STR_11(17), STR_10(17), STR_9(19), STR_8(20), 
  6583 ;;		 -> STR_7(6), STR_6(6), STR_5(14), STR_4(15), 
  6584 ;;		 -> STR_2(12), STR_1(17), 
  6585 ;;  ap              2  [STACK] PTR PTR void 
  6586 ;;		 -> ap(2), ap(2), 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  cfmt            1  [STACK] PTR unsigned char 
  6589 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(21), 
  6590 ;;		 -> STR_11(17), STR_10(17), STR_9(19), STR_8(20), 
  6591 ;;		 -> STR_7(6), STR_6(6), STR_5(14), STR_4(15), 
  6592 ;;		 -> STR_2(12), STR_1(17), 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  2  [STACK] int 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 3F/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:   10
  6609 ;; This function calls:
  6610 ;;		_vfpfcnvrt
  6611 ;; This function is called by:
  6612 ;;		_sprintf
  6613 ;;		_printf
  6614 ;; This function uses a reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text32
  6618  004B16                     __ptext32:
  6619                           	opt callstack 0
  6620  004B16                     _vfprintf:
  6621                           	opt callstack 0
  6622                           
  6623                           ; BSR set to: 0
  6624                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6625  004B16  52E6               	movf	postinc1,f,c
  6626                           
  6627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6628                           ;stkvar	_fmt @ sp[(-1)+-3]
  6629                           
  6630                           ;incstack = 0
  6631  004B18  0EFC               	movlw	-4
  6632  004B1A  006F FF8C  F043    	movff	plusw1,btemp+11
  6633                           
  6634                           ;stkvar	_cfmt @ sp[(-1)+0]
  6635  004B20  0EFF               	movlw	-1
  6636  004B22  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6637                           
  6638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6639  004B28  0100               	movlb	0	; () banked
  6640  004B2A  6B97               	clrf	_nout& (0+255),b
  6641  004B2C  6B98               	clrf	(_nout+1)& (0+255),b
  6642                           
  6643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6644  004B2E  D021               	goto	l6672
  6645  004B30                     l6670:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6649                           ;stkvar	_ap @ sp[(-1)+-5]
  6650  004B30  0EFA               	movlw	-6
  6651  004B32  006F FF8F FFE6     	movff	plusw1,postinc1
  6652  004B38  006F FF8F FFE6     	movff	plusw1,postinc1
  6653                           
  6654                           ;stkvar	_cfmt @ sp[(-3)+0]
  6655  004B3E  0EFD               	movlw	253
  6656  004B40  24E1               	addwf	fsr1l,w,c
  6657  004B42  6E38               	movwf	btemp,c
  6658  004B44  0EFF               	movlw	255
  6659  004B46  20E2               	addwfc	fsr1h,w,c
  6660  004B48  6E39               	movwf	btemp+1,c
  6661  004B4A  0060  F0E3  FFE6   	movff	btemp,postinc1
  6662  004B50  0060  F0E7  FFE6   	movff	btemp+1,postinc1
  6663                           
  6664                           ;stkvar	_fp @ sp[(-5)+-2]
  6665  004B56  0EF9               	movlw	-7
  6666  004B58  006F FF8F FFE6     	movff	plusw1,postinc1
  6667  004B5E  006F FF8F FFE6     	movff	plusw1,postinc1
  6668  004B64  EC5B  F010         	call	_vfpfcnvrt	;wreg free
  6669  004B68  5038               	movf	btemp,w,c
  6670  004B6A  0100               	movlb	0	; () banked
  6671  004B6C  2797               	addwf	_nout& (0+255),f,b
  6672  004B6E  5039               	movf	btemp+1,w,c
  6673  004B70  2398               	addwfc	(_nout+1)& (0+255),f,b
  6674  004B72                     l6672:
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6678                           ;stkvar	_cfmt @ sp[(-1)+0]
  6679  004B72  50E1               	movf	fsr1l,w,c
  6680  004B74  0FFF               	addlw	-1
  6681  004B76  6ED9               	movwf	fsr2l,c
  6682  004B78  50E2               	movf	fsr1h,w,c
  6683  004B7A  6EDA               	movwf	fsr2h,c
  6684  004B7C  0EFF               	movlw	255
  6685  004B7E  22DA               	addwfc	fsr2h,f,c
  6686  004B80  006F FF7F FFF6     	movff	indf2,tblptrl
  6687  004B86                     	if	1	;There is more than 1 active tblptr byte
  6688  004B86  0E20               	movlw	high __smallconst
  6689  004B88  6EF7               	movwf	tblptrh,c
  6690  004B8A                     	endif
  6691  004B8A                     	if	0	;tblptru may be non-zero
  6692  004B8A                     	endif
  6693  004B8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6694  004B8A  0E00               	movlw	low (__smallconst shr (0+16))
  6695  004B8C  6EF8               	movwf	tblptru,c
  6696  004B8E                     	endif
  6697  004B8E  0008               	tblrd		*
  6698  004B90  50F5               	movf	tablat,w,c
  6699  004B92  0900               	iorlw	0
  6700  004B94  A4D8               	btfss	status,2,c
  6701  004B96  D7CC               	goto	l6670
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6705  004B98  0060  F25C  F038   	movff	_nout,btemp
  6706  004B9E  0060  F260  F039   	movff	_nout+1,btemp+1
  6707                           
  6708                           ; BSR set to: 0
  6709                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6710  004BA4  0EFA               	movlw	250
  6711  004BA6  26E1               	addwf	fsr1l,f,c
  6712  004BA8  0EFF               	movlw	255
  6713  004BAA  22E2               	addwfc	fsr1h,f,c
  6714  004BAC  0012               	return		;funcret
  6715  004BAE                     __end_of_vfprintf:
  6716                           	opt callstack 0
  6717                           
  6718 ;; *************** function _vfpfcnvrt *****************
  6719 ;; Defined at:
  6720 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6723 ;;		 -> f(5), NULL(0), 
  6724 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6725 ;;		 -> cfmt(1), 
  6726 ;;  ap              2  [STACK] PTR PTR void 
  6727 ;;		 -> ap(2), ap(2), 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  ll              8  [STACK] long long 
  6730 ;;  llu             8    0        unsigned long long 
  6731 ;;  f               4    0        unsigned long long 
  6732 ;;  vp              3    0        PTR void 
  6733 ;;  ct              3    0        unsigned char [3]
  6734 ;;  cp              2  [STACK] PTR unsigned char 
  6735 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  6736 ;;  i               2    0        int 
  6737 ;;  done            2    0        int 
  6738 ;;  c               1  [STACK] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  2  [STACK] int 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6752 ;;Total ram usage:        0 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    9
  6755 ;; This function calls:
  6756 ;;		_ctoa
  6757 ;;		_dtoa
  6758 ;;		_fputc
  6759 ;;		_stoa
  6760 ;;		_strncmp
  6761 ;; This function is called by:
  6762 ;;		_vfprintf
  6763 ;; This function uses a reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text33
  6767  0020B6                     __ptext33:
  6768                           	opt callstack 0
  6769  0020B6                     _vfpfcnvrt:
  6770                           	opt callstack 0
  6771                           
  6772                           ; BSR set to: 0
  6773                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6774  0020B6  0E0B               	movlw	11
  6775  0020B8  26E1               	addwf	fsr1l,f,c
  6776  0020BA  0E00               	movlw	0
  6777  0020BC  22E2               	addwfc	fsr1h,f,c
  6778                           
  6779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6780                           ;stkvar	_fmt @ sp[(-11)+-4]
  6781                           
  6782                           ;incstack = 0
  6783  0020BE  0EF1               	movlw	-15
  6784  0020C0  006F FF8F FFD9     	movff	plusw1,fsr2l
  6785  0020C6  0EF2               	movlw	-14
  6786  0020C8  006F FF8F FFDA     	movff	plusw1,fsr2h
  6787  0020CE  006F FF7F FFF6     	movff	indf2,tblptrl
  6788  0020D4                     	if	1	;There is more than 1 active tblptr byte
  6789  0020D4  0E20               	movlw	high __smallconst
  6790  0020D6  6EF7               	movwf	tblptrh,c
  6791  0020D8                     	endif
  6792  0020D8                     	if	0	;tblptru may be non-zero
  6793  0020D8                     	endif
  6794  0020D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6795  0020D8  0E00               	movlw	low (__smallconst shr (0+16))
  6796  0020DA  6EF8               	movwf	tblptru,c
  6797  0020DC                     	endif
  6798  0020DC  0008               	tblrd		*
  6799  0020DE  50F5               	movf	tablat,w,c
  6800  0020E0  0A25               	xorlw	37
  6801  0020E2  A4D8               	btfss	status,2,c
  6802  0020E4  D213               	goto	l6616
  6803                           
  6804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6805                           ;stkvar	_fmt @ sp[(-11)+-4]
  6806  0020E6  0EF1               	movlw	-15
  6807  0020E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6808  0020EE  0EF2               	movlw	-14
  6809  0020F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6810  0020F6  2ADF               	incf	indf2,f,c
  6811                           
  6812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6813  0020F8  6A1F               	clrf	_width,c
  6814  0020FA  6A20               	clrf	_width+1,c
  6815  0020FC  6A23               	clrf	_flags,c
  6816  0020FE  6A24               	clrf	_flags+1,c
  6817                           
  6818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6819  002100  6821               	setf	_prec,c
  6820  002102  6822               	setf	_prec+1,c
  6821                           
  6822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6823                           ;stkvar	_fmt @ sp[(-11)+-4]
  6824  002104  0EF1               	movlw	-15
  6825  002106  006F FF8F FFD9     	movff	plusw1,fsr2l
  6826  00210C  0EF2               	movlw	-14
  6827  00210E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6828  002114  006F FF7F FFF6     	movff	indf2,tblptrl
  6829  00211A                     	if	1	;There is more than 1 active tblptr byte
  6830  00211A  0E20               	movlw	high __smallconst
  6831  00211C  6EF7               	movwf	tblptrh,c
  6832  00211E                     	endif
  6833  00211E                     	if	0	;tblptru may be non-zero
  6834  00211E                     	endif
  6835  00211E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6836  00211E  0E00               	movlw	low (__smallconst shr (0+16))
  6837  002120  6EF8               	movwf	tblptru,c
  6838  002122                     	endif
  6839  002122  0008               	tblrd		*
  6840  002124  50F5               	movf	tablat,w,c
  6841  002126  0A63               	xorlw	99
  6842  002128  A4D8               	btfss	status,2,c
  6843  00212A  D034               	goto	l6566
  6844                           
  6845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6846                           ;stkvar	_fmt @ sp[(-11)+-4]
  6847  00212C  0EF1               	movlw	-15
  6848  00212E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6849  002134  0EF2               	movlw	-14
  6850  002136  006F FF8F FFDA     	movff	plusw1,fsr2h
  6851  00213C  2ADF               	incf	indf2,f,c
  6852                           
  6853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6854                           ;stkvar	_ap @ sp[(-11)+-6]
  6855  00213E  0EEF               	movlw	-17
  6856  002140  006F FF8F FFD9     	movff	plusw1,fsr2l
  6857  002146  0EF0               	movlw	-16
  6858  002148  006F FF8F FFDA     	movff	plusw1,fsr2h
  6859  00214E  0E02               	movlw	2
  6860  002150  5EDE               	subwf	postinc2,f,c
  6861  002152  0E00               	movlw	0
  6862  002154  5ADD               	subwfb	postdec2,f,c
  6863  002156  006F FF78  F042    	movff	postinc2,btemp+10
  6864  00215C  006F FF74  F043    	movff	postdec2,btemp+11
  6865  002162  0060  F10B  FFD9   	movff	btemp+10,fsr2l
  6866  002168  0060  F10F  FFDA   	movff	btemp+11,fsr2h
  6867  00216E  50DF               	movf	indf2,w,c
  6868  002170  6E43               	movwf	btemp+11,c
  6869                           
  6870                           ;stkvar	_c @ sp[(-11)+10]
  6871  002172  0EFF               	movlw	-1
  6872  002174  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6873                           
  6874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6875                           ;stkvar	_c @ sp[(-11)+10]
  6876  00217A  0EFF               	movlw	-1
  6877  00217C  50E3               	movf	plusw1,w,c
  6878  00217E  6EE6               	movwf	postinc1,c
  6879                           
  6880                           ;stkvar	_fp @ sp[(-12)+-2]
  6881  002180  0EF2               	movlw	-14
  6882  002182  006F FF8F FFE6     	movff	plusw1,postinc1
  6883  002188  006F FF8F FFE6     	movff	plusw1,postinc1
  6884  00218E  EC6C  F026         	call	_ctoa	;wreg free
  6885  002192  D1E3               	goto	l1724
  6886  002194                     l6566:
  6887                           
  6888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6889                           ;stkvar	_fmt @ sp[(-11)+-4]
  6890  002194  0EF1               	movlw	-15
  6891  002196  006F FF8F FFD9     	movff	plusw1,fsr2l
  6892  00219C  0EF2               	movlw	-14
  6893  00219E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6894  0021A4  006F FF7F FFF6     	movff	indf2,tblptrl
  6895  0021AA                     	if	1	;There is more than 1 active tblptr byte
  6896  0021AA  0E20               	movlw	high __smallconst
  6897  0021AC  6EF7               	movwf	tblptrh,c
  6898  0021AE                     	endif
  6899  0021AE                     	if	0	;tblptru may be non-zero
  6900  0021AE                     	endif
  6901  0021AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6902  0021AE  0E00               	movlw	low (__smallconst shr (0+16))
  6903  0021B0  6EF8               	movwf	tblptru,c
  6904  0021B2                     	endif
  6905  0021B2  0008               	tblrd		*
  6906  0021B4  50F5               	movf	tablat,w,c
  6907  0021B6  0A64               	xorlw	100
  6908  0021B8  B4D8               	btfsc	status,2,c
  6909  0021BA  D014               	goto	u3870
  6910                           
  6911                           ;stkvar	_fmt @ sp[(-11)+-4]
  6912  0021BC  0EF1               	movlw	-15
  6913  0021BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6914  0021C4  0EF2               	movlw	-14
  6915  0021C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6916  0021CC  006F FF7F FFF6     	movff	indf2,tblptrl
  6917  0021D2                     	if	1	;There is more than 1 active tblptr byte
  6918  0021D2  0E20               	movlw	high __smallconst
  6919  0021D4  6EF7               	movwf	tblptrh,c
  6920  0021D6                     	endif
  6921  0021D6                     	if	0	;tblptru may be non-zero
  6922  0021D6                     	endif
  6923  0021D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6924  0021D6  0E00               	movlw	low (__smallconst shr (0+16))
  6925  0021D8  6EF8               	movwf	tblptru,c
  6926  0021DA                     	endif
  6927  0021DA  0008               	tblrd		*
  6928  0021DC  50F5               	movf	tablat,w,c
  6929  0021DE  0A69               	xorlw	105
  6930  0021E0  A4D8               	btfss	status,2,c
  6931  0021E2  D073               	goto	l6578
  6932  0021E4                     u3870:
  6933                           
  6934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6935                           ;stkvar	_fmt @ sp[(-11)+-4]
  6936  0021E4  0EF1               	movlw	-15
  6937  0021E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6938  0021EC  0EF2               	movlw	-14
  6939  0021EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6940  0021F4  2ADF               	incf	indf2,f,c
  6941                           
  6942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6943                           ;stkvar	_ap @ sp[(-11)+-6]
  6944  0021F6  0EEF               	movlw	-17
  6945  0021F8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6946  0021FE  0EF0               	movlw	-16
  6947  002200  006F FF8F FFDA     	movff	plusw1,fsr2h
  6948  002206  0E02               	movlw	2
  6949  002208  5EDE               	subwf	postinc2,f,c
  6950  00220A  0E00               	movlw	0
  6951  00220C  5ADD               	subwfb	postdec2,f,c
  6952  00220E  006F FF78  F042    	movff	postinc2,btemp+10
  6953  002214  006F FF74  F043    	movff	postdec2,btemp+11
  6954  00221A  0060  F10B  FFD9   	movff	btemp+10,fsr2l
  6955  002220  0060  F10F  FFDA   	movff	btemp+11,fsr2h
  6956  002226  006F FF78  F042    	movff	postinc2,btemp+10
  6957  00222C  006F FF74  F043    	movff	postdec2,btemp+11
  6958                           
  6959                           ;stkvar	_ll @ sp[(-11)+0]
  6960  002232  0EF5               	movlw	-11
  6961  002234  0060  F10B  FFE3   	movff	btemp+10,plusw1
  6962  00223A  0EF6               	movlw	-10
  6963  00223C  0060  F10F  FFE3   	movff	btemp+11,plusw1
  6964  002242  6A38               	clrf	btemp,c
  6965  002244  BEE3               	btfsc	plusw1,7,c
  6966  002246  6838               	setf	btemp,c
  6967  002248  0EF7               	movlw	-9
  6968  00224A  0060  F0E3  FFE3   	movff	btemp,plusw1
  6969  002250  0EF8               	movlw	-8
  6970  002252  0060  F0E3  FFE3   	movff	btemp,plusw1
  6971  002258  0EF9               	movlw	-7
  6972  00225A  0060  F0E3  FFE3   	movff	btemp,plusw1
  6973  002260  0EFA               	movlw	-6
  6974  002262  0060  F0E3  FFE3   	movff	btemp,plusw1
  6975  002268  0EFB               	movlw	-5
  6976  00226A  0060  F0E3  FFE3   	movff	btemp,plusw1
  6977  002270  0EFC               	movlw	-4
  6978  002272  0060  F0E3  FFE3   	movff	btemp,plusw1
  6979  002278                     l6574:
  6980                           
  6981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6982                           ;stkvar	_ll @ sp[(-11)+0]
  6983  002278  50E1               	movf	fsr1l,w,c
  6984  00227A  0FF5               	addlw	-11
  6985  00227C  6ED9               	movwf	fsr2l,c
  6986  00227E  50E2               	movf	fsr1h,w,c
  6987  002280  6EDA               	movwf	fsr2h,c
  6988  002282  0EFF               	movlw	255
  6989  002284  22DA               	addwfc	fsr2h,f,c
  6990  002286  006F FF7B FFE6     	movff	postinc2,postinc1
  6991  00228C  006F FF7B FFE6     	movff	postinc2,postinc1
  6992  002292  006F FF7B FFE6     	movff	postinc2,postinc1
  6993  002298  006F FF7B FFE6     	movff	postinc2,postinc1
  6994  00229E  006F FF7B FFE6     	movff	postinc2,postinc1
  6995  0022A4  006F FF7B FFE6     	movff	postinc2,postinc1
  6996  0022AA  006F FF7B FFE6     	movff	postinc2,postinc1
  6997  0022B0  006F FF7B FFE6     	movff	postinc2,postinc1
  6998                           
  6999                           ;stkvar	_fp @ sp[(-19)+-2]
  7000  0022B6  0EEB               	movlw	-21
  7001  0022B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7002  0022BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7003  0022C4  ECB2  F012         	call	_dtoa	;wreg free
  7004  0022C8  D148               	goto	l1724
  7005  0022CA                     l6578:
  7006                           
  7007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7008  0022CA  0E02               	movlw	2
  7009  0022CC  6EE6               	movwf	postinc1,c
  7010  0022CE  0E00               	movlw	0
  7011  0022D0  6EE6               	movwf	postinc1,c
  7012  0022D2  0EAB               	movlw	STR_16& (0+255)
  7013  0022D4  6EE6               	movwf	postinc1,c
  7014                           
  7015                           ;stkvar	_fmt @ sp[(-14)+-4]
  7016  0022D6  0EEE               	movlw	-18
  7017  0022D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7018  0022DE  0EEF               	movlw	-17
  7019  0022E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7020  0022E6  50DF               	movf	indf2,w,c
  7021  0022E8  6EE6               	movwf	postinc1,c
  7022  0022EA  EC6F  F020         	call	_strncmp	;wreg free
  7023  0022EE  5038               	movf	btemp,w,c
  7024  0022F0  1039               	iorwf	btemp+1,w,c
  7025  0022F2  B4D8               	btfsc	status,2,c
  7026  0022F4  D016               	goto	u3890
  7027  0022F6  0E02               	movlw	2
  7028  0022F8  6EE6               	movwf	postinc1,c
  7029  0022FA  0E00               	movlw	0
  7030  0022FC  6EE6               	movwf	postinc1,c
  7031  0022FE  0EAE               	movlw	STR_20& (0+255)
  7032  002300  6EE6               	movwf	postinc1,c
  7033                           
  7034                           ;stkvar	_fmt @ sp[(-14)+-4]
  7035  002302  0EEE               	movlw	-18
  7036  002304  006F FF8F FFD9     	movff	plusw1,fsr2l
  7037  00230A  0EEF               	movlw	-17
  7038  00230C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7039  002312  50DF               	movf	indf2,w,c
  7040  002314  6EE6               	movwf	postinc1,c
  7041  002316  EC6F  F020         	call	_strncmp	;wreg free
  7042  00231A  5038               	movf	btemp,w,c
  7043  00231C  1039               	iorwf	btemp+1,w,c
  7044  00231E  A4D8               	btfss	status,2,c
  7045  002320  D067               	goto	l6590
  7046  002322                     u3890:
  7047                           
  7048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7049                           ;stkvar	_fmt @ sp[(-11)+-4]
  7050  002322  0EF1               	movlw	-15
  7051  002324  006F FF8F FFD9     	movff	plusw1,fsr2l
  7052  00232A  0EF2               	movlw	-14
  7053  00232C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7054  002332  0E02               	movlw	2
  7055  002334  26DF               	addwf	indf2,f,c
  7056                           
  7057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7058                           ;stkvar	_ap @ sp[(-11)+-6]
  7059  002336  0EEF               	movlw	-17
  7060  002338  006F FF8F FFD9     	movff	plusw1,fsr2l
  7061  00233E  0EF0               	movlw	-16
  7062  002340  006F FF8F FFDA     	movff	plusw1,fsr2h
  7063  002346  0E04               	movlw	4
  7064  002348  5EDE               	subwf	postinc2,f,c
  7065  00234A  0E00               	movlw	0
  7066  00234C  5ADD               	subwfb	postdec2,f,c
  7067  00234E  006F FF78  F042    	movff	postinc2,btemp+10
  7068  002354  006F FF74  F043    	movff	postdec2,btemp+11
  7069  00235A  0060  F10B  FFD9   	movff	btemp+10,fsr2l
  7070  002360  0060  F10F  FFDA   	movff	btemp+11,fsr2h
  7071  002366  006F FF78  F040    	movff	postinc2,btemp+8
  7072  00236C  006F FF78  F041    	movff	postinc2,btemp+9
  7073  002372  006F FF78  F042    	movff	postinc2,btemp+10
  7074  002378  006F FF78  F043    	movff	postinc2,btemp+11
  7075  00237E  0060  F100  F048   	movff	btemp+8,btemp+16
  7076  002384  0060  F104  F049   	movff	btemp+9,btemp+17
  7077  00238A  0060  F108  F04A   	movff	btemp+10,btemp+18
  7078  002390  0060  F10C  F04B   	movff	btemp+11,btemp+19
  7079  002396  6A4C               	clrf	btemp+20,c
  7080  002398  BE4B               	btfsc	btemp+19,7,c
  7081  00239A  684C               	setf	btemp+20,c
  7082  00239C  0060  F130  F04D   	movff	btemp+20,btemp+21
  7083  0023A2  0060  F130  F04E   	movff	btemp+20,btemp+22
  7084  0023A8  0060  F130  F04F   	movff	btemp+20,btemp+23
  7085                           
  7086                           ;stkvar	_ll @ sp[(-11)+0]
  7087  0023AE  0EF5               	movlw	-11
  7088  0023B0  0060  F123  FFE3   	movff	btemp+16,plusw1
  7089  0023B6  0EF6               	movlw	-10
  7090  0023B8  0060  F127  FFE3   	movff	btemp+17,plusw1
  7091  0023BE  0EF7               	movlw	-9
  7092  0023C0  0060  F12B  FFE3   	movff	btemp+18,plusw1
  7093  0023C6  0EF8               	movlw	-8
  7094  0023C8  0060  F12F  FFE3   	movff	btemp+19,plusw1
  7095  0023CE  0EF9               	movlw	-7
  7096  0023D0  0060  F133  FFE3   	movff	btemp+20,plusw1
  7097  0023D6  0EFA               	movlw	-6
  7098  0023D8  0060  F137  FFE3   	movff	btemp+21,plusw1
  7099  0023DE  0EFB               	movlw	-5
  7100  0023E0  0060  F13B  FFE3   	movff	btemp+22,plusw1
  7101  0023E6  0EFC               	movlw	-4
  7102  0023E8  0060  F13F  FFE3   	movff	btemp+23,plusw1
  7103  0023EE  D744               	goto	l6574
  7104  0023F0                     l6590:
  7105                           
  7106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7107                           ;stkvar	_fmt @ sp[(-11)+-4]
  7108  0023F0  0EF1               	movlw	-15
  7109  0023F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7110  0023F8  0EF2               	movlw	-14
  7111  0023FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7112  002400  006F FF7F FFF6     	movff	indf2,tblptrl
  7113  002406                     	if	1	;There is more than 1 active tblptr byte
  7114  002406  0E20               	movlw	high __smallconst
  7115  002408  6EF7               	movwf	tblptrh,c
  7116  00240A                     	endif
  7117  00240A                     	if	0	;tblptru may be non-zero
  7118  00240A                     	endif
  7119  00240A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7120  00240A  0E00               	movlw	low (__smallconst shr (0+16))
  7121  00240C  6EF8               	movwf	tblptru,c
  7122  00240E                     	endif
  7123  00240E  0008               	tblrd		*
  7124  002410  50F5               	movf	tablat,w,c
  7125  002412  0A73               	xorlw	115
  7126  002414  A4D8               	btfss	status,2,c
  7127  002416  D040               	goto	l6600
  7128                           
  7129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7130                           ;stkvar	_fmt @ sp[(-11)+-4]
  7131  002418  0EF1               	movlw	-15
  7132  00241A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7133  002420  0EF2               	movlw	-14
  7134  002422  006F FF8F FFDA     	movff	plusw1,fsr2h
  7135  002428  2ADF               	incf	indf2,f,c
  7136                           
  7137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7138                           ;stkvar	_ap @ sp[(-11)+-6]
  7139  00242A  0EEF               	movlw	-17
  7140  00242C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7141  002432  0EF0               	movlw	-16
  7142  002434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7143  00243A  0E02               	movlw	2
  7144  00243C  5EDE               	subwf	postinc2,f,c
  7145  00243E  0E00               	movlw	0
  7146  002440  5ADD               	subwfb	postdec2,f,c
  7147  002442  006F FF78  F042    	movff	postinc2,btemp+10
  7148  002448  006F FF74  F043    	movff	postdec2,btemp+11
  7149  00244E  0060  F10B  FFD9   	movff	btemp+10,fsr2l
  7150  002454  0060  F10F  FFDA   	movff	btemp+11,fsr2h
  7151  00245A  006F FF78  F042    	movff	postinc2,btemp+10
  7152  002460  006F FF74  F043    	movff	postdec2,btemp+11
  7153                           
  7154                           ;stkvar	_cp @ sp[(-11)+8]
  7155  002466  0EFE               	movlw	-2
  7156  002468  0060  F10F  FFE3   	movff	btemp+11,plusw1
  7157  00246E  0EFD               	movlw	-3
  7158  002470  0060  F10B  FFE3   	movff	btemp+10,plusw1
  7159                           
  7160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7161                           ;stkvar	_cp @ sp[(-11)+8]
  7162  002476  0EFD               	movlw	-3
  7163  002478  006F FF8F FFE6     	movff	plusw1,postinc1
  7164  00247E  006F FF8F FFE6     	movff	plusw1,postinc1
  7165                           
  7166                           ;stkvar	_fp @ sp[(-13)+-2]
  7167  002484  0EF1               	movlw	-15
  7168  002486  006F FF8F FFE6     	movff	plusw1,postinc1
  7169  00248C  006F FF8F FFE6     	movff	plusw1,postinc1
  7170  002492  ECBB  F019         	call	_stoa	;wreg free
  7171  002496  D061               	goto	l1724
  7172  002498                     l6600:
  7173                           
  7174                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7175                           ;stkvar	_fmt @ sp[(-11)+-4]
  7176  002498  0EF1               	movlw	-15
  7177  00249A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7178  0024A0  0EF2               	movlw	-14
  7179  0024A2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7180  0024A8  006F FF7F FFF6     	movff	indf2,tblptrl
  7181  0024AE                     	if	1	;There is more than 1 active tblptr byte
  7182  0024AE  0E20               	movlw	high __smallconst
  7183  0024B0  6EF7               	movwf	tblptrh,c
  7184  0024B2                     	endif
  7185  0024B2                     	if	0	;tblptru may be non-zero
  7186  0024B2                     	endif
  7187  0024B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7188  0024B2  0E00               	movlw	low (__smallconst shr (0+16))
  7189  0024B4  6EF8               	movwf	tblptru,c
  7190  0024B6                     	endif
  7191  0024B6  0008               	tblrd		*
  7192  0024B8  50F5               	movf	tablat,w,c
  7193  0024BA  0A25               	xorlw	37
  7194  0024BC  A4D8               	btfss	status,2,c
  7195  0024BE  D018               	goto	l6610
  7196                           
  7197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7198                           ;stkvar	_fmt @ sp[(-11)+-4]
  7199  0024C0  0EF1               	movlw	-15
  7200  0024C2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7201  0024C8  0EF2               	movlw	-14
  7202  0024CA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7203  0024D0  2ADF               	incf	indf2,f,c
  7204                           
  7205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7206                           ;stkvar	_fp @ sp[(-11)+-2]
  7207  0024D2  0EF3               	movlw	-13
  7208  0024D4  006F FF8F FFE6     	movff	plusw1,postinc1
  7209  0024DA  006F FF8F FFE6     	movff	plusw1,postinc1
  7210  0024E0  0E25               	movlw	37
  7211  0024E2  6EE6               	movwf	postinc1,c
  7212  0024E4  0E00               	movlw	0
  7213  0024E6  6EE6               	movwf	postinc1,c
  7214  0024E8  ECC1  F021         	call	_fputc	;wreg free
  7215  0024EC                     l6606:
  7216                           
  7217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7218  0024EC  0E01               	movlw	1
  7219  0024EE  D00A               	goto	L14
  7220  0024F0                     l6610:
  7221                           
  7222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7223                           ;stkvar	_fmt @ sp[(-11)+-4]
  7224  0024F0  0EF1               	movlw	-15
  7225  0024F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7226  0024F8  0EF2               	movlw	-14
  7227  0024FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7228  002500  2ADF               	incf	indf2,f,c
  7229                           
  7230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7231  002502  0E00               	movlw	0
  7232  002504                     L14:
  7233  002504  6E38               	movwf	btemp,c
  7234  002506  0E00               	movlw	0
  7235  002508  6E39               	movwf	btemp+1,c
  7236  00250A  D027               	goto	l1724
  7237  00250C                     l6616:
  7238                           
  7239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7240                           ;stkvar	_fp @ sp[(-11)+-2]
  7241  00250C  0EF3               	movlw	-13
  7242  00250E  006F FF8F FFE6     	movff	plusw1,postinc1
  7243  002514  006F FF8F FFE6     	movff	plusw1,postinc1
  7244                           
  7245                           ;stkvar	_fmt @ sp[(-13)+-4]
  7246  00251A  0EEF               	movlw	-17
  7247  00251C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7248  002522  0EF0               	movlw	-16
  7249  002524  006F FF8F FFDA     	movff	plusw1,fsr2h
  7250  00252A  006F FF7F FFF6     	movff	indf2,tblptrl
  7251  002530                     	if	1	;There is more than 1 active tblptr byte
  7252  002530  0E20               	movlw	high __smallconst
  7253  002532  6EF7               	movwf	tblptrh,c
  7254  002534                     	endif
  7255  002534                     	if	0	;tblptru may be non-zero
  7256  002534                     	endif
  7257  002534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7258  002534  0E00               	movlw	low (__smallconst shr (0+16))
  7259  002536  6EF8               	movwf	tblptru,c
  7260  002538                     	endif
  7261  002538  0008               	tblrd		*
  7262  00253A  50F5               	movf	tablat,w,c
  7263  00253C  6EE6               	movwf	postinc1,c
  7264  00253E  0E00               	movlw	0
  7265  002540  6EE6               	movwf	postinc1,c
  7266  002542  ECC1  F021         	call	_fputc	;wreg free
  7267                           
  7268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7269                           ;stkvar	_fmt @ sp[(-11)+-4]
  7270  002546  0EF1               	movlw	-15
  7271  002548  006F FF8F FFD9     	movff	plusw1,fsr2l
  7272  00254E  0EF2               	movlw	-14
  7273  002550  006F FF8F FFDA     	movff	plusw1,fsr2h
  7274  002556  2ADF               	incf	indf2,f,c
  7275  002558  D7C9               	goto	l6606
  7276  00255A                     l1724:
  7277                           
  7278                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7279  00255A  0EEF               	movlw	239
  7280  00255C  26E1               	addwf	fsr1l,f,c
  7281  00255E  0EFF               	movlw	255
  7282  002560  22E2               	addwfc	fsr1h,f,c
  7283  002562  0012               	return		;funcret
  7284  002564                     __end_of_vfpfcnvrt:
  7285                           	opt callstack 0
  7286                           
  7287 ;; *************** function _strncmp *****************
  7288 ;; Defined at:
  7289 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  _l              1  [STACK] PTR const unsigned char 
  7292 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(21), 
  7293 ;;		 -> STR_11(17), STR_10(17), STR_9(19), STR_8(20), 
  7294 ;;		 -> STR_7(6), STR_6(6), STR_5(14), STR_4(15), 
  7295 ;;		 -> STR_2(12), STR_1(17), 
  7296 ;;  _r              1  [STACK] PTR const unsigned char 
  7297 ;;		 -> STR_22(3), STR_18(3), 
  7298 ;;  n               2  [STACK] unsigned int 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  r               1  [STACK] PTR const unsigned char 
  7301 ;;		 -> STR_22(3), STR_18(3), 
  7302 ;;  l               1  [STACK] PTR const unsigned char 
  7303 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(21), 
  7304 ;;		 -> STR_11(17), STR_10(17), STR_9(19), STR_8(20), 
  7305 ;;		 -> STR_7(6), STR_6(6), STR_5(14), STR_4(15), 
  7306 ;;		 -> STR_2(12), STR_1(17), 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  2  [STACK] int 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7320 ;;Total ram usage:        0 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    3
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_vfpfcnvrt
  7327 ;; This function uses a reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text34
  7331  0040DE                     __ptext34:
  7332                           	opt callstack 0
  7333  0040DE                     _strncmp:
  7334                           	opt callstack 0
  7335                           
  7336                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7337  0040DE  52E6               	movf	postinc1,f,c
  7338  0040E0  52E6               	movf	postinc1,f,c
  7339                           
  7340                           ;stkvar	__l @ sp[(-2)+-1]
  7341                           
  7342                           ;incstack = 0
  7343  0040E2  0EFD               	movlw	-3
  7344  0040E4  006F FF8C  F043    	movff	plusw1,btemp+11
  7345                           
  7346                           ;stkvar	_l @ sp[(-2)+1]
  7347  0040EA  0EFF               	movlw	-1
  7348  0040EC  0060  F10F  FFE3   	movff	btemp+11,plusw1
  7349                           
  7350                           ;stkvar	__r @ sp[(-2)+-2]
  7351  0040F2  0EFC               	movlw	-4
  7352  0040F4  006F FF8C  F043    	movff	plusw1,btemp+11
  7353                           
  7354                           ;stkvar	_r @ sp[(-2)+0]
  7355  0040FA  0EFE               	movlw	-2
  7356  0040FC  0060  F10F  FFE3   	movff	btemp+11,plusw1
  7357                           
  7358                           ;stkvar	_n @ sp[(-2)+-4]
  7359  004102  0EFA               	movlw	-6
  7360  004104  006F FF8C  F038    	movff	plusw1,btemp
  7361  00410A  0E01               	movlw	1
  7362  00410C  5E38               	subwf	btemp,f,c
  7363  00410E  0EFA               	movlw	-6
  7364  004110  0060  F0E3  FFE3   	movff	btemp,plusw1
  7365  004116  0EFB               	movlw	-5
  7366  004118  006F FF8C  F038    	movff	plusw1,btemp
  7367  00411E  0E00               	movlw	0
  7368  004120  5A38               	subwfb	btemp,f,c
  7369  004122  0EFB               	movlw	-5
  7370  004124  0060  F0E3  FFE3   	movff	btemp,plusw1
  7371  00412A  0EFA               	movlw	-6
  7372  00412C  28E3               	incf	plusw1,w,c
  7373  00412E  E121               	bnz	l4894
  7374  004130  0EFB               	movlw	-5
  7375  004132  28E3               	incf	plusw1,w,c
  7376  004134  A4D8               	btfss	status,2,c
  7377  004136  D01D               	goto	l4894
  7378  004138  0E00               	movlw	0
  7379  00413A  6E38               	movwf	btemp,c
  7380  00413C  0E00               	movlw	0
  7381  00413E  6E39               	movwf	btemp+1,c
  7382  004140  D091               	goto	l2473
  7383  004142                     l4890:
  7384                           
  7385                           ;stkvar	_l @ sp[(-2)+1]
  7386  004142  0EFF               	movlw	-1
  7387  004144  2AE3               	incf	plusw1,f,c
  7388                           
  7389                           ;stkvar	_r @ sp[(-2)+0]
  7390  004146  0EFE               	movlw	-2
  7391  004148  2AE3               	incf	plusw1,f,c
  7392                           
  7393                           ;stkvar	_n @ sp[(-2)+-4]
  7394  00414A  0EFA               	movlw	-6
  7395  00414C  006F FF8C  F038    	movff	plusw1,btemp
  7396  004152  0E01               	movlw	1
  7397  004154  5E38               	subwf	btemp,f,c
  7398  004156  0EFA               	movlw	-6
  7399  004158  0060  F0E3  FFE3   	movff	btemp,plusw1
  7400  00415E  0EFB               	movlw	-5
  7401  004160  006F FF8C  F038    	movff	plusw1,btemp
  7402  004166  0E00               	movlw	0
  7403  004168  5A38               	subwfb	btemp,f,c
  7404  00416A  0EFB               	movlw	-5
  7405  00416C  0060  F0E3  FFE3   	movff	btemp,plusw1
  7406  004172                     l4894:
  7407                           
  7408                           ;stkvar	_l @ sp[(-2)+1]
  7409  004172  50E1               	movf	fsr1l,w,c
  7410  004174  0FFF               	addlw	-1
  7411  004176  6ED9               	movwf	fsr2l,c
  7412  004178  50E2               	movf	fsr1h,w,c
  7413  00417A  6EDA               	movwf	fsr2h,c
  7414  00417C  0EFF               	movlw	255
  7415  00417E  22DA               	addwfc	fsr2h,f,c
  7416  004180  006F FF7F FFF6     	movff	indf2,tblptrl
  7417  004186                     	if	1	;There is more than 1 active tblptr byte
  7418  004186  0E20               	movlw	high __smallconst
  7419  004188  6EF7               	movwf	tblptrh,c
  7420  00418A                     	endif
  7421  00418A                     	if	0	;tblptru may be non-zero
  7422  00418A                     	endif
  7423  00418A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7424  00418A  0E00               	movlw	low (__smallconst shr (0+16))
  7425  00418C  6EF8               	movwf	tblptru,c
  7426  00418E                     	endif
  7427  00418E  0008               	tblrd		*
  7428  004190  50F5               	movf	tablat,w,c
  7429  004192  0900               	iorlw	0
  7430  004194  B4D8               	btfsc	status,2,c
  7431  004196  D041               	goto	u2500
  7432                           
  7433                           ;stkvar	_r @ sp[(-2)+0]
  7434  004198  50E1               	movf	fsr1l,w,c
  7435  00419A  0FFE               	addlw	-2
  7436  00419C  6ED9               	movwf	fsr2l,c
  7437  00419E  50E2               	movf	fsr1h,w,c
  7438  0041A0  6EDA               	movwf	fsr2h,c
  7439  0041A2  0EFF               	movlw	255
  7440  0041A4  22DA               	addwfc	fsr2h,f,c
  7441  0041A6  006F FF7F FFF6     	movff	indf2,tblptrl
  7442  0041AC                     	if	1	;There is more than 1 active tblptr byte
  7443  0041AC  0E20               	movlw	high __smallconst
  7444  0041AE  6EF7               	movwf	tblptrh,c
  7445  0041B0                     	endif
  7446  0041B0                     	if	0	;tblptru may be non-zero
  7447  0041B0                     	endif
  7448  0041B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7449  0041B0  0E00               	movlw	low (__smallconst shr (0+16))
  7450  0041B2  6EF8               	movwf	tblptru,c
  7451  0041B4                     	endif
  7452  0041B4  0008               	tblrd		*
  7453  0041B6  50F5               	movf	tablat,w,c
  7454  0041B8  0900               	iorlw	0
  7455  0041BA  B4D8               	btfsc	status,2,c
  7456  0041BC  D02E               	goto	u2500
  7457                           
  7458                           ;stkvar	_n @ sp[(-2)+-4]
  7459  0041BE  0EFA               	movlw	-6
  7460  0041C0  006F FF8C  F038    	movff	plusw1,btemp
  7461  0041C6  0EFB               	movlw	-5
  7462  0041C8  50E3               	movf	plusw1,w,c
  7463  0041CA  1038               	iorwf	btemp,w,c
  7464  0041CC  B4D8               	btfsc	status,2,c
  7465  0041CE  D025               	goto	u2500
  7466                           
  7467                           ;stkvar	_l @ sp[(-2)+1]
  7468  0041D0  50E1               	movf	fsr1l,w,c
  7469  0041D2  0FFF               	addlw	-1
  7470  0041D4  6ED9               	movwf	fsr2l,c
  7471  0041D6  50E2               	movf	fsr1h,w,c
  7472  0041D8  6EDA               	movwf	fsr2h,c
  7473  0041DA  0EFF               	movlw	255
  7474  0041DC  22DA               	addwfc	fsr2h,f,c
  7475  0041DE  006F FF7F FFF6     	movff	indf2,tblptrl
  7476  0041E4                     	if	1	;There is more than 1 active tblptr byte
  7477  0041E4  0E20               	movlw	high __smallconst
  7478  0041E6  6EF7               	movwf	tblptrh,c
  7479  0041E8                     	endif
  7480  0041E8                     	if	0	;tblptru may be non-zero
  7481  0041E8                     	endif
  7482  0041E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7483  0041E8  0E00               	movlw	low (__smallconst shr (0+16))
  7484  0041EA  6EF8               	movwf	tblptru,c
  7485  0041EC                     	endif
  7486  0041EC  0008               	tblrd		*
  7487  0041EE  006F FFD4  F043    	movff	tablat,btemp+11
  7488                           
  7489                           ;stkvar	_r @ sp[(-2)+0]
  7490  0041F4  50E1               	movf	fsr1l,w,c
  7491  0041F6  0FFE               	addlw	-2
  7492  0041F8  6ED9               	movwf	fsr2l,c
  7493  0041FA  50E2               	movf	fsr1h,w,c
  7494  0041FC  6EDA               	movwf	fsr2h,c
  7495  0041FE  0EFF               	movlw	255
  7496  004200  22DA               	addwfc	fsr2h,f,c
  7497  004202  006F FF7F FFF6     	movff	indf2,tblptrl
  7498  004208                     	if	1	;There is more than 1 active tblptr byte
  7499  004208  0E20               	movlw	high __smallconst
  7500  00420A  6EF7               	movwf	tblptrh,c
  7501  00420C                     	endif
  7502  00420C                     	if	0	;tblptru may be non-zero
  7503  00420C                     	endif
  7504  00420C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7505  00420C  0E00               	movlw	low (__smallconst shr (0+16))
  7506  00420E  6EF8               	movwf	tblptru,c
  7507  004210                     	endif
  7508  004210  0008               	tblrd		*
  7509  004212  50F5               	movf	tablat,w,c
  7510  004214  1843               	xorwf	btemp+11,w,c
  7511  004216  B4D8               	btfsc	status,2,c
  7512  004218  D794               	goto	l4890
  7513  00421A                     u2500:
  7514                           
  7515                           ;stkvar	_l @ sp[(-2)+1]
  7516  00421A  50E1               	movf	fsr1l,w,c
  7517  00421C  0FFF               	addlw	-1
  7518  00421E  6ED9               	movwf	fsr2l,c
  7519  004220  50E2               	movf	fsr1h,w,c
  7520  004222  6EDA               	movwf	fsr2h,c
  7521  004224  0EFF               	movlw	255
  7522  004226  22DA               	addwfc	fsr2h,f,c
  7523  004228  006F FF7F FFF6     	movff	indf2,tblptrl
  7524  00422E                     	if	1	;There is more than 1 active tblptr byte
  7525  00422E  0E20               	movlw	high __smallconst
  7526  004230  6EF7               	movwf	tblptrh,c
  7527  004232                     	endif
  7528  004232                     	if	0	;tblptru may be non-zero
  7529  004232                     	endif
  7530  004232                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7531  004232  0E00               	movlw	low (__smallconst shr (0+16))
  7532  004234  6EF8               	movwf	tblptru,c
  7533  004236                     	endif
  7534  004236  0008               	tblrd		*
  7535  004238  50F5               	movf	tablat,w,c
  7536  00423A  6E38               	movwf	btemp,c
  7537  00423C  6A39               	clrf	btemp+1,c
  7538                           
  7539                           ;stkvar	_r @ sp[(-2)+0]
  7540  00423E  50E1               	movf	fsr1l,w,c
  7541  004240  0FFE               	addlw	-2
  7542  004242  6ED9               	movwf	fsr2l,c
  7543  004244  50E2               	movf	fsr1h,w,c
  7544  004246  6EDA               	movwf	fsr2h,c
  7545  004248  0EFF               	movlw	255
  7546  00424A  22DA               	addwfc	fsr2h,f,c
  7547  00424C  006F FF7F FFF6     	movff	indf2,tblptrl
  7548  004252                     	if	1	;There is more than 1 active tblptr byte
  7549  004252  0E20               	movlw	high __smallconst
  7550  004254  6EF7               	movwf	tblptrh,c
  7551  004256                     	endif
  7552  004256                     	if	0	;tblptru may be non-zero
  7553  004256                     	endif
  7554  004256                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7555  004256  0E00               	movlw	low (__smallconst shr (0+16))
  7556  004258  6EF8               	movwf	tblptru,c
  7557  00425A                     	endif
  7558  00425A  0008               	tblrd		*
  7559  00425C  50F5               	movf	tablat,w,c
  7560  00425E  5E38               	subwf	btemp,f,c
  7561  004260  0E00               	movlw	0
  7562  004262  5A39               	subwfb	btemp+1,f,c
  7563  004264                     l2473:
  7564                           
  7565                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7566  004264  0EFA               	movlw	250
  7567  004266  26E1               	addwf	fsr1l,f,c
  7568  004268  0EFF               	movlw	255
  7569  00426A  22E2               	addwfc	fsr1h,f,c
  7570  00426C  0012               	return		;funcret
  7571  00426E                     __end_of_strncmp:
  7572                           	opt callstack 0
  7573                           
  7574 ;; *************** function _stoa *****************
  7575 ;; Defined at:
  7576 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7579 ;;		 -> f(5), NULL(0), 
  7580 ;;  s               2  [STACK] PTR unsigned char 
  7581 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  nuls            7  [STACK] unsigned char [7]
  7584 ;;  l               2  [STACK] int 
  7585 ;;  p               2  [STACK] int 
  7586 ;;  cp              2  [STACK] PTR unsigned char 
  7587 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  7588 ;;		 -> V(86), 
  7589 ;;  w               2  [STACK] int 
  7590 ;;  i               2  [STACK] int 
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  2  [STACK] int 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7604 ;;Total ram usage:        0 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    6
  7607 ;; This function calls:
  7608 ;;		_fputc
  7609 ;;		_strlen
  7610 ;; This function is called by:
  7611 ;;		_vfpfcnvrt
  7612 ;; This function uses a reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text35
  7616  003376                     __ptext35:
  7617                           	opt callstack 0
  7618  003376                     _stoa:
  7619                           	opt callstack 0
  7620                           
  7621                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7622  003376  0E11               	movlw	17
  7623  003378  26E1               	addwf	fsr1l,f,c
  7624  00337A  0E00               	movlw	0
  7625  00337C  22E2               	addwfc	fsr1h,f,c
  7626                           
  7627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7628                           
  7629                           ;incstack = 0
  7630  00337E  EE20  F0F1         	lfsr	2,stoa@F1144
  7631                           
  7632                           ;stkvar	_nuls @ sp[(-17)+0]
  7633  003382  0E07               	movlw	7
  7634  003384  6E38               	movwf	btemp,c
  7635  003386  0EEF               	movlw	-17
  7636  003388                     us374999:
  7637  003388  006F FF7B FFE3     	movff	postinc2,plusw1
  7638  00338E  28E8               	incf	wreg,w,c
  7639  003390  2E38               	decfsz	btemp,f,c
  7640  003392  D7FA               	bra	us374999
  7641                           
  7642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7643                           ;stkvar	_s @ sp[(-17)+-4]
  7644  003394  0EEB               	movlw	-21
  7645  003396  006F FF8C  F042    	movff	plusw1,btemp+10
  7646  00339C  0EEC               	movlw	-20
  7647  00339E  006F FF8C  F043    	movff	plusw1,btemp+11
  7648                           
  7649                           ;stkvar	_cp @ sp[(-17)+11]
  7650  0033A4  0EFB               	movlw	-5
  7651  0033A6  0060  F10F  FFE3   	movff	btemp+11,plusw1
  7652  0033AC  0EFA               	movlw	-6
  7653  0033AE  0060  F10B  FFE3   	movff	btemp+10,plusw1
  7654                           
  7655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7656                           ;stkvar	_cp @ sp[(-17)+11]
  7657  0033B4  0EFA               	movlw	-6
  7658  0033B6  006F FF8C  F038    	movff	plusw1,btemp
  7659  0033BC  0EFB               	movlw	-5
  7660  0033BE  50E3               	movf	plusw1,w,c
  7661  0033C0  1038               	iorwf	btemp,w,c
  7662  0033C2  A4D8               	btfss	status,2,c
  7663  0033C4  D00E               	goto	l6504
  7664                           
  7665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7666                           ;stkvar	_nuls @ sp[(-17)+0]
  7667  0033C6  0EEF               	movlw	239
  7668  0033C8  24E1               	addwf	fsr1l,w,c
  7669  0033CA  6E42               	movwf	btemp+10,c
  7670  0033CC  0EFF               	movlw	255
  7671  0033CE  20E2               	addwfc	fsr1h,w,c
  7672  0033D0  6E43               	movwf	btemp+11,c
  7673                           
  7674                           ;stkvar	_cp @ sp[(-17)+11]
  7675  0033D2  0EFB               	movlw	-5
  7676  0033D4  0060  F10F  FFE3   	movff	btemp+11,plusw1
  7677  0033DA  0EFA               	movlw	-6
  7678  0033DC  0060  F10B  FFE3   	movff	btemp+10,plusw1
  7679  0033E2                     l6504:
  7680                           
  7681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7682                           ;stkvar	_cp @ sp[(-17)+11]
  7683  0033E2  0EFA               	movlw	-6
  7684  0033E4  006F FF8F FFE6     	movff	plusw1,postinc1
  7685  0033EA  006F FF8F FFE6     	movff	plusw1,postinc1
  7686  0033F0  EC9C  F024         	call	_strlen	;wreg free
  7687                           
  7688                           ;stkvar	_l @ sp[(-17)+7]
  7689  0033F4  0EF6               	movlw	-10
  7690  0033F6  0060  F0E3  FFE3   	movff	btemp,plusw1
  7691  0033FC  0EF7               	movlw	-9
  7692  0033FE  0060  F0E7  FFE3   	movff	btemp+1,plusw1
  7693                           
  7694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7695                           ;stkvar	_p @ sp[(-17)+9]
  7696  003404  0EF8               	movlw	-8
  7697  003406  0060  F087  FFE3   	movff	_prec,plusw1
  7698  00340C  0EF9               	movlw	-7
  7699  00340E  0060  F08B  FFE3   	movff	_prec+1,plusw1
  7700                           
  7701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7702                           ;stkvar	_p @ sp[(-17)+9]
  7703  003414  0EF9               	movlw	-7
  7704  003416  BEE3               	btfsc	plusw1,7,c
  7705  003418  D023               	goto	l1705
  7706                           
  7707                           ;stkvar	_l @ sp[(-17)+7]
  7708                           ;stkvar	_p @ sp[(-17)+9]
  7709  00341A  50E1               	movf	fsr1l,w,c
  7710  00341C  0FF8               	addlw	-8
  7711  00341E  6ED9               	movwf	fsr2l,c
  7712  003420  50E2               	movf	fsr1h,w,c
  7713  003422  6EDA               	movwf	fsr2h,c
  7714  003424  0EFF               	movlw	255
  7715  003426  22DA               	addwfc	fsr2h,f,c
  7716  003428  0EF6               	movlw	-10
  7717  00342A  50E3               	movf	plusw1,w,c
  7718  00342C  5CDE               	subwf	postinc2,w,c
  7719  00342E  50DE               	movf	postinc2,w,c
  7720  003430  0A80               	xorlw	128
  7721  003432  6E38               	movwf	btemp,c
  7722  003434  0EF7               	movlw	-9
  7723  003436  50E3               	movf	plusw1,w,c
  7724  003438  0A80               	xorlw	128
  7725  00343A  5838               	subwfb	btemp,w,c
  7726  00343C  B0D8               	btfsc	status,0,c
  7727  00343E  D010               	goto	l1705
  7728                           
  7729                           ;stkvar	_p @ sp[(-17)+9]
  7730                           ;stkvar	_l @ sp[(-17)+7]
  7731  003440  0EF8               	movlw	-8
  7732  003442  006F FF8C  F038    	movff	plusw1,btemp
  7733  003448  0EF6               	movlw	-10
  7734  00344A  0060  F0E3  FFE3   	movff	btemp,plusw1
  7735  003450  0EF9               	movlw	-7
  7736  003452  006F FF8C  F038    	movff	plusw1,btemp
  7737  003458  0EF7               	movlw	-9
  7738  00345A  0060  F0E3  FFE3   	movff	btemp,plusw1
  7739  003460                     l1705:
  7740                           
  7741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7742                           ;stkvar	_l @ sp[(-17)+7]
  7743                           ;stkvar	_p @ sp[(-17)+9]
  7744  003460  0EF6               	movlw	-10
  7745  003462  006F FF8C  F038    	movff	plusw1,btemp
  7746  003468  0EF8               	movlw	-8
  7747  00346A  0060  F0E3  FFE3   	movff	btemp,plusw1
  7748  003470  0EF7               	movlw	-9
  7749  003472  006F FF8C  F038    	movff	plusw1,btemp
  7750  003478  0EF9               	movlw	-7
  7751  00347A  0060  F0E3  FFE3   	movff	btemp,plusw1
  7752                           
  7753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7754                           ;stkvar	_w @ sp[(-17)+13]
  7755  003480  0EFC               	movlw	-4
  7756  003482  0060  F07F  FFE3   	movff	_width,plusw1
  7757  003488  0EFD               	movlw	-3
  7758  00348A  0060  F083  FFE3   	movff	_width+1,plusw1
  7759                           
  7760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7761  003490  A023               	btfss	_flags,0,c
  7762  003492  D01F               	goto	l6524
  7763  003494  D031               	goto	u3790
  7764  003496                     l6520:
  7765                           
  7766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7767                           ;stkvar	_fp @ sp[(-17)+-2]
  7768  003496  0EED               	movlw	-19
  7769  003498  006F FF8F FFE6     	movff	plusw1,postinc1
  7770  00349E  006F FF8F FFE6     	movff	plusw1,postinc1
  7771  0034A4  0E20               	movlw	32
  7772  0034A6  6EE6               	movwf	postinc1,c
  7773  0034A8  0E00               	movlw	0
  7774  0034AA  6EE6               	movwf	postinc1,c
  7775  0034AC  ECC1  F021         	call	_fputc	;wreg free
  7776                           
  7777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7778                           ;stkvar	_l @ sp[(-17)+7]
  7779  0034B0  0EF6               	movlw	-10
  7780  0034B2  50E3               	movf	plusw1,w,c
  7781  0034B4  0F01               	addlw	1
  7782  0034B6  6E38               	movwf	btemp,c
  7783  0034B8  0EF6               	movlw	-10
  7784  0034BA  0060  F0E3  FFE3   	movff	btemp,plusw1
  7785  0034C0  6A38               	clrf	btemp,c
  7786  0034C2  0EF7               	movlw	-9
  7787  0034C4  50E3               	movf	plusw1,w,c
  7788  0034C6  2038               	addwfc	btemp,w,c
  7789  0034C8  6E38               	movwf	btemp,c
  7790  0034CA  0EF7               	movlw	-9
  7791  0034CC  0060  F0E3  FFE3   	movff	btemp,plusw1
  7792  0034D2                     l6524:
  7793                           
  7794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7795                           ;stkvar	_w @ sp[(-17)+13]
  7796                           ;stkvar	_l @ sp[(-17)+7]
  7797  0034D2  50E1               	movf	fsr1l,w,c
  7798  0034D4  0FF6               	addlw	-10
  7799  0034D6  6ED9               	movwf	fsr2l,c
  7800  0034D8  50E2               	movf	fsr1h,w,c
  7801  0034DA  6EDA               	movwf	fsr2h,c
  7802  0034DC  0EFF               	movlw	255
  7803  0034DE  22DA               	addwfc	fsr2h,f,c
  7804  0034E0  0EFC               	movlw	-4
  7805  0034E2  50E3               	movf	plusw1,w,c
  7806  0034E4  5CDE               	subwf	postinc2,w,c
  7807  0034E6  50DE               	movf	postinc2,w,c
  7808  0034E8  0A80               	xorlw	128
  7809  0034EA  6E38               	movwf	btemp,c
  7810  0034EC  0EFD               	movlw	-3
  7811  0034EE  50E3               	movf	plusw1,w,c
  7812  0034F0  0A80               	xorlw	128
  7813  0034F2  5838               	subwfb	btemp,w,c
  7814  0034F4  A0D8               	btfss	status,0,c
  7815  0034F6  D7CF               	goto	l6520
  7816  0034F8                     u3790:
  7817                           
  7818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7819                           ;stkvar	_i @ sp[(-17)+15]
  7820  0034F8  0EFE               	movlw	-2
  7821  0034FA  6AE3               	clrf	plusw1,c
  7822  0034FC  0EFF               	movlw	-1
  7823  0034FE  6AE3               	clrf	plusw1,c
  7824                           
  7825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7826  003500  D045               	goto	l6534
  7827  003502                     l6528:
  7828                           
  7829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7830                           ;stkvar	_fp @ sp[(-17)+-2]
  7831  003502  0EED               	movlw	-19
  7832  003504  006F FF8F FFE6     	movff	plusw1,postinc1
  7833  00350A  006F FF8F FFE6     	movff	plusw1,postinc1
  7834                           
  7835                           ;stkvar	_cp @ sp[(-19)+11]
  7836  003510  0EF8               	movlw	-8
  7837  003512  006F FF8F FFF6     	movff	plusw1,tblptrl
  7838  003518  0EF9               	movlw	-7
  7839  00351A  006F FF8F FFF7     	movff	plusw1,tblptrh
  7840  003520  0E00               	movlw	low (__smallconst shr (0+16))
  7841  003522  6EF8               	movwf	tblptru,c
  7842  003524  0E1F               	movlw	(high __ramtop+-1)
  7843  003526  64F7               	cpfsgt	tblptrh,c
  7844  003528  D003               	bra	u3807
  7845  00352A  0008               	tblrd		*
  7846  00352C  50F5               	movf	tablat,w,c
  7847  00352E  D007               	bra	u3800
  7848  003530                     u3807:
  7849  003530  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7850  003536  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7851  00353C  50EF               	movf	indf0,w,c
  7852  00353E                     u3800:
  7853  00353E  6EE6               	movwf	postinc1,c
  7854  003540  0E00               	movlw	0
  7855  003542  6EE6               	movwf	postinc1,c
  7856  003544  ECC1  F021         	call	_fputc	;wreg free
  7857                           
  7858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7859                           ;stkvar	_cp @ sp[(-17)+11]
  7860  003548  0EFA               	movlw	-6
  7861  00354A  50E3               	movf	plusw1,w,c
  7862  00354C  0F01               	addlw	1
  7863  00354E  6E38               	movwf	btemp,c
  7864  003550  0EFA               	movlw	-6
  7865  003552  0060  F0E3  FFE3   	movff	btemp,plusw1
  7866  003558  6A38               	clrf	btemp,c
  7867  00355A  0EFB               	movlw	-5
  7868  00355C  50E3               	movf	plusw1,w,c
  7869  00355E  2038               	addwfc	btemp,w,c
  7870  003560  6E38               	movwf	btemp,c
  7871  003562  0EFB               	movlw	-5
  7872  003564  0060  F0E3  FFE3   	movff	btemp,plusw1
  7873                           
  7874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7875                           ;stkvar	_i @ sp[(-17)+15]
  7876  00356A  0EFE               	movlw	-2
  7877  00356C  50E3               	movf	plusw1,w,c
  7878  00356E  0F01               	addlw	1
  7879  003570  6E38               	movwf	btemp,c
  7880  003572  0EFE               	movlw	-2
  7881  003574  0060  F0E3  FFE3   	movff	btemp,plusw1
  7882  00357A  6A38               	clrf	btemp,c
  7883  00357C  0EFF               	movlw	-1
  7884  00357E  50E3               	movf	plusw1,w,c
  7885  003580  2038               	addwfc	btemp,w,c
  7886  003582  6E38               	movwf	btemp,c
  7887  003584  0EFF               	movlw	-1
  7888  003586  0060  F0E3  FFE3   	movff	btemp,plusw1
  7889  00358C                     l6534:
  7890                           
  7891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7892                           ;stkvar	_p @ sp[(-17)+9]
  7893                           ;stkvar	_i @ sp[(-17)+15]
  7894  00358C  50E1               	movf	fsr1l,w,c
  7895  00358E  0FFE               	addlw	-2
  7896  003590  6ED9               	movwf	fsr2l,c
  7897  003592  50E2               	movf	fsr1h,w,c
  7898  003594  6EDA               	movwf	fsr2h,c
  7899  003596  0EFF               	movlw	255
  7900  003598  22DA               	addwfc	fsr2h,f,c
  7901  00359A  0EF8               	movlw	-8
  7902  00359C  50E3               	movf	plusw1,w,c
  7903  00359E  5CDE               	subwf	postinc2,w,c
  7904  0035A0  50DE               	movf	postinc2,w,c
  7905  0035A2  0A80               	xorlw	128
  7906  0035A4  6E38               	movwf	btemp,c
  7907  0035A6  0EF9               	movlw	-7
  7908  0035A8  50E3               	movf	plusw1,w,c
  7909  0035AA  0A80               	xorlw	128
  7910  0035AC  5838               	subwfb	btemp,w,c
  7911  0035AE  A0D8               	btfss	status,0,c
  7912  0035B0  D7A8               	goto	l6528
  7913                           
  7914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7915  0035B2  B023               	btfsc	_flags,0,c
  7916  0035B4  D01F               	goto	l6542
  7917  0035B6  D031               	goto	u3830
  7918  0035B8                     l6538:
  7919                           
  7920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7921                           ;stkvar	_fp @ sp[(-17)+-2]
  7922  0035B8  0EED               	movlw	-19
  7923  0035BA  006F FF8F FFE6     	movff	plusw1,postinc1
  7924  0035C0  006F FF8F FFE6     	movff	plusw1,postinc1
  7925  0035C6  0E20               	movlw	32
  7926  0035C8  6EE6               	movwf	postinc1,c
  7927  0035CA  0E00               	movlw	0
  7928  0035CC  6EE6               	movwf	postinc1,c
  7929  0035CE  ECC1  F021         	call	_fputc	;wreg free
  7930                           
  7931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7932                           ;stkvar	_l @ sp[(-17)+7]
  7933  0035D2  0EF6               	movlw	-10
  7934  0035D4  50E3               	movf	plusw1,w,c
  7935  0035D6  0F01               	addlw	1
  7936  0035D8  6E38               	movwf	btemp,c
  7937  0035DA  0EF6               	movlw	-10
  7938  0035DC  0060  F0E3  FFE3   	movff	btemp,plusw1
  7939  0035E2  6A38               	clrf	btemp,c
  7940  0035E4  0EF7               	movlw	-9
  7941  0035E6  50E3               	movf	plusw1,w,c
  7942  0035E8  2038               	addwfc	btemp,w,c
  7943  0035EA  6E38               	movwf	btemp,c
  7944  0035EC  0EF7               	movlw	-9
  7945  0035EE  0060  F0E3  FFE3   	movff	btemp,plusw1
  7946  0035F4                     l6542:
  7947                           
  7948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7949                           ;stkvar	_w @ sp[(-17)+13]
  7950                           ;stkvar	_l @ sp[(-17)+7]
  7951  0035F4  50E1               	movf	fsr1l,w,c
  7952  0035F6  0FF6               	addlw	-10
  7953  0035F8  6ED9               	movwf	fsr2l,c
  7954  0035FA  50E2               	movf	fsr1h,w,c
  7955  0035FC  6EDA               	movwf	fsr2h,c
  7956  0035FE  0EFF               	movlw	255
  7957  003600  22DA               	addwfc	fsr2h,f,c
  7958  003602  0EFC               	movlw	-4
  7959  003604  50E3               	movf	plusw1,w,c
  7960  003606  5CDE               	subwf	postinc2,w,c
  7961  003608  50DE               	movf	postinc2,w,c
  7962  00360A  0A80               	xorlw	128
  7963  00360C  6E38               	movwf	btemp,c
  7964  00360E  0EFD               	movlw	-3
  7965  003610  50E3               	movf	plusw1,w,c
  7966  003612  0A80               	xorlw	128
  7967  003614  5838               	subwfb	btemp,w,c
  7968  003616  A0D8               	btfss	status,0,c
  7969  003618  D7CF               	goto	l6538
  7970  00361A                     u3830:
  7971                           
  7972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7973                           ;stkvar	_l @ sp[(-17)+7]
  7974  00361A  0EF6               	movlw	-10
  7975  00361C  006F FF8C  F038    	movff	plusw1,btemp
  7976  003622  0EF7               	movlw	-9
  7977  003624  006F FF8C  F039    	movff	plusw1,btemp+1
  7978                           
  7979                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7980  00362A  0EEB               	movlw	235
  7981  00362C  26E1               	addwf	fsr1l,f,c
  7982  00362E  0EFF               	movlw	255
  7983  003630  22E2               	addwfc	fsr1h,f,c
  7984  003632  0012               	return		;funcret
  7985  003634                     __end_of_stoa:
  7986                           	opt callstack 0
  7987                           
  7988 ;; *************** function _dtoa *****************
  7989 ;; Defined at:
  7990 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7993 ;;		 -> f(5), NULL(0), 
  7994 ;;  d               8  [STACK] long long 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  n               8  [STACK] long long 
  7997 ;;  i               2  [STACK] int 
  7998 ;;  s               2  [STACK] int 
  7999 ;;  w               2  [STACK] int 
  8000 ;;  p               2  [STACK] int 
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  2  [STACK] int 
  8003 ;; Registers used:
  8004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8014 ;;Total ram usage:        0 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:    8
  8017 ;; This function calls:
  8018 ;;		___aodiv
  8019 ;;		___aomod
  8020 ;;		_abs
  8021 ;;		_pad
  8022 ;; This function is called by:
  8023 ;;		_vfpfcnvrt
  8024 ;; This function uses a reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text36
  8028  002564                     __ptext36:
  8029                           	opt callstack 0
  8030  002564                     _dtoa:
  8031                           	opt callstack 0
  8032                           
  8033                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8034  002564  0E12               	movlw	18
  8035  002566  26E1               	addwf	fsr1l,f,c
  8036  002568  0E00               	movlw	0
  8037  00256A  22E2               	addwfc	fsr1h,f,c
  8038                           
  8039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8040                           ;stkvar	_d @ sp[(-18)+-10]
  8041                           
  8042                           ;incstack = 0
  8043  00256C  0EE4               	movlw	228
  8044  00256E  24E1               	addwf	fsr1l,w,c
  8045  002570  6ED9               	movwf	fsr2l,c
  8046  002572  0EFF               	movlw	255
  8047  002574  20E2               	addwfc	fsr1h,w,c
  8048  002576  6EDA               	movwf	fsr2h,c
  8049                           
  8050                           ;stkvar	_n @ sp[(-18)+2]
  8051  002578  0E08               	movlw	8
  8052  00257A  6E38               	movwf	btemp,c
  8053  00257C  0EF0               	movlw	-16
  8054  00257E                     us357999:
  8055  00257E  006F FF7B FFE3     	movff	postinc2,plusw1
  8056  002584  28E8               	incf	wreg,w,c
  8057  002586  2E38               	decfsz	btemp,f,c
  8058  002588  D7FA               	bra	us357999
  8059                           
  8060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8061                           ;stkvar	_n @ sp[(-18)+2]
  8062  00258A  0EF7               	movlw	-9
  8063  00258C  AEE3               	btfss	plusw1,7,c
  8064  00258E  D002               	goto	u3580
  8065  002590  0E01               	movlw	1
  8066  002592  D001               	goto	u3590
  8067  002594                     u3580:
  8068  002594  0E00               	movlw	0
  8069  002596                     u3590:
  8070  002596  6E42               	movwf	btemp+10,c
  8071  002598  6A43               	clrf	btemp+11,c
  8072                           
  8073                           ;stkvar	_s @ sp[(-18)+12]
  8074  00259A  0EFA               	movlw	-6
  8075  00259C  0060  F10B  FFE3   	movff	btemp+10,plusw1
  8076  0025A2  0EFB               	movlw	-5
  8077  0025A4  0060  F10F  FFE3   	movff	btemp+11,plusw1
  8078                           
  8079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8080                           ;stkvar	_s @ sp[(-18)+12]
  8081  0025AA  0EFA               	movlw	-6
  8082  0025AC  006F FF8C  F038    	movff	plusw1,btemp
  8083  0025B2  0EFB               	movlw	-5
  8084  0025B4  50E3               	movf	plusw1,w,c
  8085  0025B6  1038               	iorwf	btemp,w,c
  8086  0025B8  B4D8               	btfsc	status,2,c
  8087  0025BA  D025               	goto	u3610
  8088                           
  8089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8090                           ;stkvar	_n @ sp[(-18)+2]
  8091                           ;stkvar	_n @ sp[(-18)+2]
  8092  0025BC  0EF0               	movlw	-16
  8093  0025BE  6CE3               	negf	plusw1,c
  8094  0025C0  0EF1               	movlw	-15
  8095  0025C2  1EE3               	comf	plusw1,f,c
  8096  0025C4  0EF2               	movlw	-14
  8097  0025C6  1EE3               	comf	plusw1,f,c
  8098  0025C8  0EF3               	movlw	-13
  8099  0025CA  1EE3               	comf	plusw1,f,c
  8100  0025CC  0EF4               	movlw	-12
  8101  0025CE  1EE3               	comf	plusw1,f,c
  8102  0025D0  0EF5               	movlw	-11
  8103  0025D2  1EE3               	comf	plusw1,f,c
  8104  0025D4  0EF6               	movlw	-10
  8105  0025D6  1EE3               	comf	plusw1,f,c
  8106  0025D8  0EF7               	movlw	-9
  8107  0025DA  1EE3               	comf	plusw1,f,c
  8108  0025DC  E314               	bnc	u3610
  8109  0025DE  0EF1               	movlw	-15
  8110  0025E0  2AE3               	incf	plusw1,f,c
  8111  0025E2  E311               	bnc	u3610
  8112  0025E4  0EF2               	movlw	-14
  8113  0025E6  2AE3               	incf	plusw1,f,c
  8114  0025E8  E30E               	bnc	u3610
  8115  0025EA  0EF3               	movlw	-13
  8116  0025EC  2AE3               	incf	plusw1,f,c
  8117  0025EE  E30B               	bnc	u3610
  8118  0025F0  0EF4               	movlw	-12
  8119  0025F2  2AE3               	incf	plusw1,f,c
  8120  0025F4  E308               	bnc	u3610
  8121  0025F6  0EF5               	movlw	-11
  8122  0025F8  2AE3               	incf	plusw1,f,c
  8123  0025FA  E305               	bnc	u3610
  8124  0025FC  0EF6               	movlw	-10
  8125  0025FE  2AE3               	incf	plusw1,f,c
  8126  002600  E302               	bnc	u3610
  8127  002602  0EF7               	movlw	-9
  8128  002604  2AE3               	incf	plusw1,f,c
  8129  002606                     u3610:
  8130                           
  8131                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8132  002606  AE22               	btfss	_prec+1,7,c
  8133                           
  8134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8135  002608  9223               	bcf	_flags,1,c
  8136                           
  8137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8138  00260A  BE22               	btfsc	_prec+1,7,c
  8139  00260C  D005               	goto	u3630
  8140  00260E  5022               	movf	_prec+1,w,c
  8141  002610  E110               	bnz	l6446
  8142  002612  0421               	decf	_prec,w,c
  8143  002614  B0D8               	btfsc	status,0,c
  8144  002616  D00D               	goto	l6446
  8145  002618                     u3630:
  8146  002618  0E01               	movlw	1
  8147  00261A  6E42               	movwf	btemp+10,c
  8148  00261C  0E00               	movlw	0
  8149  00261E  6E43               	movwf	btemp+11,c
  8150                           
  8151                           ;stkvar	_p @ sp[(-18)+16]
  8152  002620  0EFE               	movlw	-2
  8153  002622  0060  F10B  FFE3   	movff	btemp+10,plusw1
  8154  002628  0EFF               	movlw	-1
  8155  00262A  0060  F10F  FFE3   	movff	btemp+11,plusw1
  8156  002630  D008               	goto	l1678
  8157  002632                     l6446:
  8158                           
  8159                           ;stkvar	_p @ sp[(-18)+16]
  8160  002632  0EFE               	movlw	-2
  8161  002634  0060  F087  FFE3   	movff	_prec,plusw1
  8162  00263A  0EFF               	movlw	-1
  8163  00263C  0060  F08B  FFE3   	movff	_prec+1,plusw1
  8164  002642                     l1678:
  8165                           
  8166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8167                           ;stkvar	_w @ sp[(-18)+14]
  8168  002642  0EFC               	movlw	-4
  8169  002644  0060  F07F  FFE3   	movff	_width,plusw1
  8170  00264A  0EFD               	movlw	-3
  8171  00264C  0060  F083  FFE3   	movff	_width+1,plusw1
  8172                           
  8173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8174                           ;stkvar	_s @ sp[(-18)+12]
  8175  002652  0EFA               	movlw	-6
  8176  002654  006F FF8C  F038    	movff	plusw1,btemp
  8177  00265A  0EFB               	movlw	-5
  8178  00265C  50E3               	movf	plusw1,w,c
  8179  00265E  1038               	iorwf	btemp,w,c
  8180  002660  A4D8               	btfss	status,2,c
  8181  002662  D002               	goto	u3650
  8182  002664  A423               	btfss	_flags,2,c
  8183  002666  D00A               	goto	l6454
  8184  002668                     u3650:
  8185                           
  8186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8187                           ;stkvar	_w @ sp[(-18)+14]
  8188  002668  50E1               	movf	fsr1l,w,c
  8189  00266A  0FFC               	addlw	-4
  8190  00266C  6ED9               	movwf	fsr2l,c
  8191  00266E  50E2               	movf	fsr1h,w,c
  8192  002670  6EDA               	movwf	fsr2h,c
  8193  002672  0EFF               	movlw	255
  8194  002674  22DA               	addwfc	fsr2h,f,c
  8195  002676  06DE               	decf	postinc2,f,c
  8196  002678  0E00               	movlw	0
  8197  00267A  5ADD               	subwfb	postdec2,f,c
  8198  00267C                     l6454:
  8199                           
  8200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8201  00267C  0E1F               	movlw	31
  8202  00267E  6E42               	movwf	btemp+10,c
  8203  002680  0E00               	movlw	0
  8204  002682  6E43               	movwf	btemp+11,c
  8205                           
  8206                           ;stkvar	_i @ sp[(-18)+10]
  8207  002684  0EF8               	movlw	-8
  8208  002686  0060  F10B  FFE3   	movff	btemp+10,plusw1
  8209  00268C  0EF9               	movlw	-7
  8210  00268E  0060  F10F  FFE3   	movff	btemp+11,plusw1
  8211                           
  8212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8213  002694  0101               	movlb	1	; () banked
  8214  002696  6BEC               	clrf	(_dbuf+31)& (0+255),b
  8215                           
  8216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8217  002698  D109               	goto	l6468
  8218  00269A                     l6458:
  8219                           
  8220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8221                           ;stkvar	_i @ sp[(-18)+10]
  8222  00269A  50E1               	movf	fsr1l,w,c
  8223  00269C  0FF8               	addlw	-8
  8224  00269E  6ED9               	movwf	fsr2l,c
  8225  0026A0  50E2               	movf	fsr1h,w,c
  8226  0026A2  6EDA               	movwf	fsr2h,c
  8227  0026A4  0EFF               	movlw	255
  8228  0026A6  22DA               	addwfc	fsr2h,f,c
  8229  0026A8  06DE               	decf	postinc2,f,c
  8230  0026AA  0E00               	movlw	0
  8231  0026AC  5ADD               	subwfb	postdec2,f,c
  8232                           
  8233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8234  0026AE  0E0A               	movlw	10
  8235  0026B0  6EE6               	movwf	postinc1,c
  8236  0026B2  0E00               	movlw	0
  8237  0026B4  6EE6               	movwf	postinc1,c
  8238  0026B6  0E00               	movlw	0
  8239  0026B8  6EE6               	movwf	postinc1,c
  8240  0026BA  0E00               	movlw	0
  8241  0026BC  6EE6               	movwf	postinc1,c
  8242  0026BE  0E00               	movlw	0
  8243  0026C0  6EE6               	movwf	postinc1,c
  8244  0026C2  0E00               	movlw	0
  8245  0026C4  6EE6               	movwf	postinc1,c
  8246  0026C6  0E00               	movlw	0
  8247  0026C8  6EE6               	movwf	postinc1,c
  8248  0026CA  0E00               	movlw	0
  8249  0026CC  6EE6               	movwf	postinc1,c
  8250                           
  8251                           ;stkvar	_n @ sp[(-26)+2]
  8252  0026CE  50E1               	movf	fsr1l,w,c
  8253  0026D0  0FE8               	addlw	-24
  8254  0026D2  6ED9               	movwf	fsr2l,c
  8255  0026D4  50E2               	movf	fsr1h,w,c
  8256  0026D6  6EDA               	movwf	fsr2h,c
  8257  0026D8  0EFF               	movlw	255
  8258  0026DA  22DA               	addwfc	fsr2h,f,c
  8259  0026DC  006F FF7B FFE6     	movff	postinc2,postinc1
  8260  0026E2  006F FF7B FFE6     	movff	postinc2,postinc1
  8261  0026E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8262  0026EE  006F FF7B FFE6     	movff	postinc2,postinc1
  8263  0026F4  006F FF7B FFE6     	movff	postinc2,postinc1
  8264  0026FA  006F FF7B FFE6     	movff	postinc2,postinc1
  8265  002700  006F FF7B FFE6     	movff	postinc2,postinc1
  8266  002706  006F FF7B FFE6     	movff	postinc2,postinc1
  8267  00270C  ECA4  F01D         	call	___aomod	;wreg free
  8268  002710  52E5               	movf	postdec1,f,c
  8269  002712  006F FF9C  F04F    	movff	indf1,btemp+23
  8270  002718  52E5               	movf	postdec1,f,c
  8271  00271A  006F FF9C  F04E    	movff	indf1,btemp+22
  8272  002720  52E5               	movf	postdec1,f,c
  8273  002722  006F FF9C  F04D    	movff	indf1,btemp+21
  8274  002728  52E5               	movf	postdec1,f,c
  8275  00272A  006F FF9C  F04C    	movff	indf1,btemp+20
  8276  002730  52E5               	movf	postdec1,f,c
  8277  002732  006F FF9C  F04B    	movff	indf1,btemp+19
  8278  002738  52E5               	movf	postdec1,f,c
  8279  00273A  006F FF9C  F04A    	movff	indf1,btemp+18
  8280  002740  52E5               	movf	postdec1,f,c
  8281  002742  006F FF9C  F049    	movff	indf1,btemp+17
  8282  002748  52E5               	movf	postdec1,f,c
  8283  00274A  006F FF9C  F048    	movff	indf1,btemp+16
  8284  002750  0EF8               	movlw	248
  8285  002752  26E1               	addwf	fsr1l,f,c
  8286  002754  0EFF               	movlw	255
  8287  002756  22E2               	addwfc	fsr1h,f,c
  8288  002758  0060  F120  F042   	movff	btemp+16,btemp+10
  8289  00275E  0060  F124  F043   	movff	btemp+17,btemp+11
  8290  002764  0060  F10B  FFE6   	movff	btemp+10,postinc1
  8291  00276A  0060  F10F  FFE6   	movff	btemp+11,postinc1
  8292  002770  EC4A  F028         	call	_abs	;wreg free
  8293  002774  0E30               	movlw	48
  8294  002776  2638               	addwf	btemp,f,c
  8295                           
  8296                           ;stkvar	_i @ sp[(-18)+10]
  8297  002778  0EF8               	movlw	-8
  8298  00277A  006F FF8C  F042    	movff	plusw1,btemp+10
  8299  002780  0EF9               	movlw	-7
  8300  002782  006F FF8C  F043    	movff	plusw1,btemp+11
  8301  002788  0ECD               	movlw	low _dbuf
  8302  00278A  2442               	addwf	btemp+10,w,c
  8303  00278C  6ED9               	movwf	fsr2l,c
  8304  00278E  0E01               	movlw	high _dbuf
  8305  002790  2043               	addwfc	btemp+11,w,c
  8306  002792  6EDA               	movwf	fsr2h,c
  8307  002794  0060  F0E3  FFDF   	movff	btemp,indf2
  8308                           
  8309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8310                           ;stkvar	_p @ sp[(-18)+16]
  8311  00279A  50E1               	movf	fsr1l,w,c
  8312  00279C  0FFE               	addlw	-2
  8313  00279E  6ED9               	movwf	fsr2l,c
  8314  0027A0  50E2               	movf	fsr1h,w,c
  8315  0027A2  6EDA               	movwf	fsr2h,c
  8316  0027A4  0EFF               	movlw	255
  8317  0027A6  22DA               	addwfc	fsr2h,f,c
  8318  0027A8  06DE               	decf	postinc2,f,c
  8319  0027AA  0E00               	movlw	0
  8320  0027AC  5ADD               	subwfb	postdec2,f,c
  8321                           
  8322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8323                           ;stkvar	_w @ sp[(-18)+14]
  8324  0027AE  50E1               	movf	fsr1l,w,c
  8325  0027B0  0FFC               	addlw	-4
  8326  0027B2  6ED9               	movwf	fsr2l,c
  8327  0027B4  50E2               	movf	fsr1h,w,c
  8328  0027B6  6EDA               	movwf	fsr2h,c
  8329  0027B8  0EFF               	movlw	255
  8330  0027BA  22DA               	addwfc	fsr2h,f,c
  8331  0027BC  06DE               	decf	postinc2,f,c
  8332  0027BE  0E00               	movlw	0
  8333  0027C0  5ADD               	subwfb	postdec2,f,c
  8334                           
  8335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8336  0027C2  0E0A               	movlw	10
  8337  0027C4  6EE6               	movwf	postinc1,c
  8338  0027C6  0E00               	movlw	0
  8339  0027C8  6EE6               	movwf	postinc1,c
  8340  0027CA  0E00               	movlw	0
  8341  0027CC  6EE6               	movwf	postinc1,c
  8342  0027CE  0E00               	movlw	0
  8343  0027D0  6EE6               	movwf	postinc1,c
  8344  0027D2  0E00               	movlw	0
  8345  0027D4  6EE6               	movwf	postinc1,c
  8346  0027D6  0E00               	movlw	0
  8347  0027D8  6EE6               	movwf	postinc1,c
  8348  0027DA  0E00               	movlw	0
  8349  0027DC  6EE6               	movwf	postinc1,c
  8350  0027DE  0E00               	movlw	0
  8351  0027E0  6EE6               	movwf	postinc1,c
  8352                           
  8353                           ;stkvar	_n @ sp[(-26)+2]
  8354  0027E2  50E1               	movf	fsr1l,w,c
  8355  0027E4  0FE8               	addlw	-24
  8356  0027E6  6ED9               	movwf	fsr2l,c
  8357  0027E8  50E2               	movf	fsr1h,w,c
  8358  0027EA  6EDA               	movwf	fsr2h,c
  8359  0027EC  0EFF               	movlw	255
  8360  0027EE  22DA               	addwfc	fsr2h,f,c
  8361  0027F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8362  0027F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8363  0027FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8364  002802  006F FF7B FFE6     	movff	postinc2,postinc1
  8365  002808  006F FF7B FFE6     	movff	postinc2,postinc1
  8366  00280E  006F FF7B FFE6     	movff	postinc2,postinc1
  8367  002814  006F FF7B FFE6     	movff	postinc2,postinc1
  8368  00281A  006F FF7B FFE6     	movff	postinc2,postinc1
  8369  002820  EC64  F01C         	call	___aodiv	;wreg free
  8370  002824  52E5               	movf	postdec1,f,c
  8371  002826  006F FF9C  F04F    	movff	indf1,btemp+23
  8372  00282C  52E5               	movf	postdec1,f,c
  8373  00282E  006F FF9C  F04E    	movff	indf1,btemp+22
  8374  002834  52E5               	movf	postdec1,f,c
  8375  002836  006F FF9C  F04D    	movff	indf1,btemp+21
  8376  00283C  52E5               	movf	postdec1,f,c
  8377  00283E  006F FF9C  F04C    	movff	indf1,btemp+20
  8378  002844  52E5               	movf	postdec1,f,c
  8379  002846  006F FF9C  F04B    	movff	indf1,btemp+19
  8380  00284C  52E5               	movf	postdec1,f,c
  8381  00284E  006F FF9C  F04A    	movff	indf1,btemp+18
  8382  002854  52E5               	movf	postdec1,f,c
  8383  002856  006F FF9C  F049    	movff	indf1,btemp+17
  8384  00285C  52E5               	movf	postdec1,f,c
  8385  00285E  006F FF9C  F048    	movff	indf1,btemp+16
  8386  002864  0EF8               	movlw	248
  8387  002866  26E1               	addwf	fsr1l,f,c
  8388  002868  0EFF               	movlw	255
  8389  00286A  22E2               	addwfc	fsr1h,f,c
  8390                           
  8391                           ;stkvar	_n @ sp[(-18)+2]
  8392  00286C  0EF0               	movlw	-16
  8393  00286E  0060  F123  FFE3   	movff	btemp+16,plusw1
  8394  002874  0EF1               	movlw	-15
  8395  002876  0060  F127  FFE3   	movff	btemp+17,plusw1
  8396  00287C  0EF2               	movlw	-14
  8397  00287E  0060  F12B  FFE3   	movff	btemp+18,plusw1
  8398  002884  0EF3               	movlw	-13
  8399  002886  0060  F12F  FFE3   	movff	btemp+19,plusw1
  8400  00288C  0EF4               	movlw	-12
  8401  00288E  0060  F133  FFE3   	movff	btemp+20,plusw1
  8402  002894  0EF5               	movlw	-11
  8403  002896  0060  F137  FFE3   	movff	btemp+21,plusw1
  8404  00289C  0EF6               	movlw	-10
  8405  00289E  0060  F13B  FFE3   	movff	btemp+22,plusw1
  8406  0028A4  0EF7               	movlw	-9
  8407  0028A6  0060  F13F  FFE3   	movff	btemp+23,plusw1
  8408  0028AC                     l6468:
  8409                           
  8410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8411                           ;stkvar	_i @ sp[(-18)+10]
  8412  0028AC  0EF9               	movlw	-7
  8413  0028AE  BEE3               	btfsc	plusw1,7,c
  8414  0028B0  D036               	goto	u3700
  8415  0028B2  0EF9               	movlw	-7
  8416  0028B4  50E3               	movf	plusw1,w,c
  8417  0028B6  E104               	bnz	u3660
  8418  0028B8  0EF8               	movlw	-8
  8419  0028BA  04E3               	decf	plusw1,w,c
  8420  0028BC  A0D8               	btfss	status,0,c
  8421  0028BE  D02F               	goto	u3700
  8422  0028C0                     u3660:
  8423                           
  8424                           ;stkvar	_n @ sp[(-18)+2]
  8425  0028C0  0EF0               	movlw	-16
  8426  0028C2  50E3               	movf	plusw1,w,c
  8427  0028C4  E115               	bnz	u3671
  8428  0028C6  0EF1               	movlw	-15
  8429  0028C8  50E3               	movf	plusw1,w,c
  8430  0028CA  E112               	bnz	u3671
  8431  0028CC  0EF2               	movlw	-14
  8432  0028CE  50E3               	movf	plusw1,w,c
  8433  0028D0  E10F               	bnz	u3671
  8434  0028D2  0EF3               	movlw	-13
  8435  0028D4  50E3               	movf	plusw1,w,c
  8436  0028D6  E10C               	bnz	u3671
  8437  0028D8  0EF4               	movlw	-12
  8438  0028DA  50E3               	movf	plusw1,w,c
  8439  0028DC  E109               	bnz	u3671
  8440  0028DE  0EF5               	movlw	-11
  8441  0028E0  50E3               	movf	plusw1,w,c
  8442  0028E2  E106               	bnz	u3671
  8443  0028E4  0EF6               	movlw	-10
  8444  0028E6  50E3               	movf	plusw1,w,c
  8445  0028E8  E103               	bnz	u3671
  8446  0028EA  0EF7               	movlw	-9
  8447  0028EC  50E3               	movf	plusw1,w,c
  8448  0028EE  A4D8               	btfss	status,2,c
  8449  0028F0                     u3671:
  8450  0028F0  D6D4               	goto	l6458
  8451                           
  8452                           ;stkvar	_p @ sp[(-18)+16]
  8453  0028F2  0EFF               	movlw	-1
  8454  0028F4  BEE3               	btfsc	plusw1,7,c
  8455  0028F6  D007               	goto	u3680
  8456  0028F8  0EFF               	movlw	-1
  8457  0028FA  50E3               	movf	plusw1,w,c
  8458  0028FC  E103               	bnz	u3681
  8459  0028FE  0EFE               	movlw	-2
  8460  002900  04E3               	decf	plusw1,w,c
  8461  002902  B0D8               	btfsc	status,0,c
  8462  002904                     u3681:
  8463  002904  D6CA               	goto	l6458
  8464  002906                     u3680:
  8465                           
  8466                           ;stkvar	_w @ sp[(-18)+14]
  8467  002906  0EFD               	movlw	-3
  8468  002908  BEE3               	btfsc	plusw1,7,c
  8469  00290A  D009               	goto	u3700
  8470  00290C  0EFD               	movlw	-3
  8471  00290E  50E3               	movf	plusw1,w,c
  8472  002910  E104               	bnz	u3690
  8473  002912  0EFC               	movlw	-4
  8474  002914  04E3               	decf	plusw1,w,c
  8475  002916  A0D8               	btfss	status,0,c
  8476  002918  D002               	goto	u3700
  8477  00291A                     u3690:
  8478  00291A  B223               	btfsc	_flags,1,c
  8479  00291C  D6BE               	goto	l6458
  8480  00291E                     u3700:
  8481                           
  8482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8483                           ;stkvar	_s @ sp[(-18)+12]
  8484  00291E  0EFA               	movlw	-6
  8485  002920  006F FF8C  F038    	movff	plusw1,btemp
  8486  002926  0EFB               	movlw	-5
  8487  002928  50E3               	movf	plusw1,w,c
  8488  00292A  1038               	iorwf	btemp,w,c
  8489  00292C  A4D8               	btfss	status,2,c
  8490  00292E  D002               	goto	u3720
  8491  002930  A423               	btfss	_flags,2,c
  8492  002932  D033               	goto	l6492
  8493  002934                     u3720:
  8494                           
  8495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8496                           ;stkvar	_i @ sp[(-18)+10]
  8497  002934  50E1               	movf	fsr1l,w,c
  8498  002936  0FF8               	addlw	-8
  8499  002938  6ED9               	movwf	fsr2l,c
  8500  00293A  50E2               	movf	fsr1h,w,c
  8501  00293C  6EDA               	movwf	fsr2h,c
  8502  00293E  0EFF               	movlw	255
  8503  002940  22DA               	addwfc	fsr2h,f,c
  8504  002942  06DE               	decf	postinc2,f,c
  8505  002944  0E00               	movlw	0
  8506  002946  5ADD               	subwfb	postdec2,f,c
  8507                           
  8508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8509                           ;stkvar	_s @ sp[(-18)+12]
  8510  002948  0EFA               	movlw	-6
  8511  00294A  006F FF8C  F038    	movff	plusw1,btemp
  8512  002950  0EFB               	movlw	-5
  8513  002952  50E3               	movf	plusw1,w,c
  8514  002954  1038               	iorwf	btemp,w,c
  8515  002956  A4D8               	btfss	status,2,c
  8516  002958  D002               	goto	l6488
  8517  00295A  0E2B               	movlw	43
  8518  00295C  D001               	goto	L15
  8519  00295E                     l6488:
  8520  00295E  0E2D               	movlw	45
  8521  002960                     L15:
  8522  002960  6E42               	movwf	btemp+10,c
  8523  002962  0E00               	movlw	0
  8524  002964  6E43               	movwf	btemp+11,c
  8525                           
  8526                           ;stkvar	_dtoa$3797 @ sp[(-18)+0]
  8527  002966  0EEE               	movlw	-18
  8528  002968  0060  F10B  FFE3   	movff	btemp+10,plusw1
  8529  00296E  0EEF               	movlw	-17
  8530  002970  0060  F10F  FFE3   	movff	btemp+11,plusw1
  8531                           
  8532                           ;stkvar	_dtoa$3797 @ sp[(-18)+0]
  8533                           ;stkvar	_i @ sp[(-18)+10]
  8534  002976  0EF8               	movlw	-8
  8535  002978  006F FF8C  F042    	movff	plusw1,btemp+10
  8536  00297E  0EF9               	movlw	-7
  8537  002980  006F FF8C  F043    	movff	plusw1,btemp+11
  8538  002986  0ECD               	movlw	low _dbuf
  8539  002988  2442               	addwf	btemp+10,w,c
  8540  00298A  6ED9               	movwf	fsr2l,c
  8541  00298C  0E01               	movlw	high _dbuf
  8542  00298E  2043               	addwfc	btemp+11,w,c
  8543  002990  6EDA               	movwf	fsr2h,c
  8544  002992  0EEE               	movlw	-18
  8545  002994  006F FF8F FFDF     	movff	plusw1,indf2
  8546  00299A                     l6492:
  8547                           
  8548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8549                           ;stkvar	_w @ sp[(-18)+14]
  8550  00299A  0EFC               	movlw	-4
  8551  00299C  006F FF8F FFE6     	movff	plusw1,postinc1
  8552  0029A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8553                           
  8554                           ;stkvar	_i @ sp[(-20)+10]
  8555  0029A8  0ECD               	movlw	low _dbuf
  8556  0029AA  6E42               	movwf	btemp+10,c
  8557  0029AC  0E01               	movlw	high _dbuf
  8558  0029AE  6E43               	movwf	btemp+11,c
  8559  0029B0  0EF6               	movlw	-10
  8560  0029B2  50E3               	movf	plusw1,w,c
  8561  0029B4  2642               	addwf	btemp+10,f,c
  8562  0029B6  0EF7               	movlw	-9
  8563  0029B8  50E3               	movf	plusw1,w,c
  8564  0029BA  2243               	addwfc	btemp+11,f,c
  8565  0029BC  0060  F10B  FFE6   	movff	btemp+10,postinc1
  8566  0029C2  0060  F10F  FFE6   	movff	btemp+11,postinc1
  8567                           
  8568                           ;stkvar	_fp @ sp[(-22)+-2]
  8569  0029C8  0EE8               	movlw	-24
  8570  0029CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8571  0029D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8572  0029D6  EC37  F021         	call	_pad	;wreg free
  8573                           
  8574                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8575  0029DA  0EE4               	movlw	228
  8576  0029DC  26E1               	addwf	fsr1l,f,c
  8577  0029DE  0EFF               	movlw	255
  8578  0029E0  22E2               	addwfc	fsr1h,f,c
  8579  0029E2  0012               	return		;funcret
  8580  0029E4                     __end_of_dtoa:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function _abs *****************
  8584 ;; Defined at:
  8585 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  a               2  [STACK] int 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  2  [STACK] int 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/1
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    3
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_dtoa
  8610 ;; This function uses a reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text37
  8614  005094                     __ptext37:
  8615                           	opt callstack 0
  8616  005094                     _abs:
  8617                           	opt callstack 23
  8618                           
  8619                           ;stkvar	_a @ sp[(0)+-2]
  8620                           
  8621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8622                           ;incstack = 0
  8623  005094  0EFF               	movlw	-1
  8624  005096  BEE3               	btfsc	plusw1,7,c
  8625  005098  D007               	goto	u1940
  8626  00509A  0EFF               	movlw	-1
  8627  00509C  50E3               	movf	plusw1,w,c
  8628  00509E  E112               	bnz	l4666
  8629  0050A0  0EFE               	movlw	-2
  8630  0050A2  04E3               	decf	plusw1,w,c
  8631  0050A4  B0D8               	btfsc	status,0,c
  8632  0050A6  D00E               	goto	l4666
  8633  0050A8                     u1940:
  8634                           
  8635                           ;stkvar	_a @ sp[(0)+-2]
  8636  0050A8  0EFE               	movlw	-2
  8637  0050AA  006F FF8C  F038    	movff	plusw1,btemp
  8638  0050B0  1E38               	comf	btemp,f,c
  8639  0050B2  0EFF               	movlw	-1
  8640  0050B4  006F FF8C  F039    	movff	plusw1,btemp+1
  8641  0050BA  1E39               	comf	btemp+1,f,c
  8642  0050BC  2A38               	incf	btemp,f,c
  8643  0050BE  B4D8               	btfsc	status,2,c
  8644  0050C0  2A39               	incf	btemp+1,f,c
  8645  0050C2  D008               	goto	l2419
  8646  0050C4                     l4666:
  8647                           
  8648                           ;stkvar	_a @ sp[(0)+-2]
  8649  0050C4  0EFE               	movlw	-2
  8650  0050C6  006F FF8C  F038    	movff	plusw1,btemp
  8651  0050CC  0EFF               	movlw	-1
  8652  0050CE  006F FF8C  F039    	movff	plusw1,btemp+1
  8653  0050D4                     l2419:
  8654                           
  8655                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8656  0050D4  52E5               	movf	postdec1,f,c
  8657  0050D6  52E5               	movf	postdec1,f,c
  8658  0050D8  0012               	return		;funcret
  8659  0050DA                     __end_of_abs:
  8660                           	opt callstack 0
  8661                           
  8662 ;; *************** function ___aomod *****************
  8663 ;; Defined at:
  8664 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  dividend        8  [STACK] long long 
  8667 ;;  divisor         8  [STACK] long long 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  sign            1  [STACK] unsigned char 
  8670 ;;  counter         1  [STACK] unsigned char 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  8  [STACK] long long 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/1
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;Total ram usage:        0 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    3
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_dtoa
  8691 ;; This function uses a reentrant model
  8692 ;;
  8693                           
  8694                           	psect	text38
  8695  003B48                     __ptext38:
  8696                           	opt callstack 0
  8697  003B48                     ___aomod:
  8698                           	opt callstack 0
  8699                           
  8700                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8701  003B48  52E6               	movf	postinc1,f,c
  8702  003B4A  52E6               	movf	postinc1,f,c
  8703                           
  8704                           ;stkvar	_sign @ sp[(-2)+0]
  8705                           
  8706                           ;incstack = 0
  8707  003B4C  0EFE               	movlw	-2
  8708  003B4E  6AE3               	clrf	plusw1,c
  8709                           
  8710                           ;stkvar	_dividend @ sp[(-2)+-8]
  8711  003B50  0EFD               	movlw	-3
  8712  003B52  AEE3               	btfss	plusw1,7,c
  8713  003B54  D028               	goto	l4722
  8714                           
  8715                           ;stkvar	_dividend @ sp[(-2)+-8]
  8716                           ;stkvar	_dividend @ sp[(-2)+-8]
  8717  003B56  0EF6               	movlw	-10
  8718  003B58  6CE3               	negf	plusw1,c
  8719  003B5A  0EF7               	movlw	-9
  8720  003B5C  1EE3               	comf	plusw1,f,c
  8721  003B5E  0EF8               	movlw	-8
  8722  003B60  1EE3               	comf	plusw1,f,c
  8723  003B62  0EF9               	movlw	-7
  8724  003B64  1EE3               	comf	plusw1,f,c
  8725  003B66  0EFA               	movlw	-6
  8726  003B68  1EE3               	comf	plusw1,f,c
  8727  003B6A  0EFB               	movlw	-5
  8728  003B6C  1EE3               	comf	plusw1,f,c
  8729  003B6E  0EFC               	movlw	-4
  8730  003B70  1EE3               	comf	plusw1,f,c
  8731  003B72  0EFD               	movlw	-3
  8732  003B74  1EE3               	comf	plusw1,f,c
  8733  003B76  E314               	bnc	u2080
  8734  003B78  0EF7               	movlw	-9
  8735  003B7A  2AE3               	incf	plusw1,f,c
  8736  003B7C  E311               	bnc	u2080
  8737  003B7E  0EF8               	movlw	-8
  8738  003B80  2AE3               	incf	plusw1,f,c
  8739  003B82  E30E               	bnc	u2080
  8740  003B84  0EF9               	movlw	-7
  8741  003B86  2AE3               	incf	plusw1,f,c
  8742  003B88  E30B               	bnc	u2080
  8743  003B8A  0EFA               	movlw	-6
  8744  003B8C  2AE3               	incf	plusw1,f,c
  8745  003B8E  E308               	bnc	u2080
  8746  003B90  0EFB               	movlw	-5
  8747  003B92  2AE3               	incf	plusw1,f,c
  8748  003B94  E305               	bnc	u2080
  8749  003B96  0EFC               	movlw	-4
  8750  003B98  2AE3               	incf	plusw1,f,c
  8751  003B9A  E302               	bnc	u2080
  8752  003B9C  0EFD               	movlw	-3
  8753  003B9E  2AE3               	incf	plusw1,f,c
  8754  003BA0                     u2080:
  8755                           
  8756                           ;stkvar	_sign @ sp[(-2)+0]
  8757  003BA0  0EFE               	movlw	-2
  8758  003BA2  6AE3               	clrf	plusw1,c
  8759  003BA4  2AE3               	incf	plusw1,f,c
  8760  003BA6                     l4722:
  8761                           
  8762                           ;stkvar	_divisor @ sp[(-2)+-16]
  8763  003BA6  0EF5               	movlw	-11
  8764  003BA8  AEE3               	btfss	plusw1,7,c
  8765  003BAA  D025               	goto	u2100
  8766                           
  8767                           ;stkvar	_divisor @ sp[(-2)+-16]
  8768                           ;stkvar	_divisor @ sp[(-2)+-16]
  8769  003BAC  0EEE               	movlw	-18
  8770  003BAE  6CE3               	negf	plusw1,c
  8771  003BB0  0EEF               	movlw	-17
  8772  003BB2  1EE3               	comf	plusw1,f,c
  8773  003BB4  0EF0               	movlw	-16
  8774  003BB6  1EE3               	comf	plusw1,f,c
  8775  003BB8  0EF1               	movlw	-15
  8776  003BBA  1EE3               	comf	plusw1,f,c
  8777  003BBC  0EF2               	movlw	-14
  8778  003BBE  1EE3               	comf	plusw1,f,c
  8779  003BC0  0EF3               	movlw	-13
  8780  003BC2  1EE3               	comf	plusw1,f,c
  8781  003BC4  0EF4               	movlw	-12
  8782  003BC6  1EE3               	comf	plusw1,f,c
  8783  003BC8  0EF5               	movlw	-11
  8784  003BCA  1EE3               	comf	plusw1,f,c
  8785  003BCC  E314               	bnc	u2100
  8786  003BCE  0EEF               	movlw	-17
  8787  003BD0  2AE3               	incf	plusw1,f,c
  8788  003BD2  E311               	bnc	u2100
  8789  003BD4  0EF0               	movlw	-16
  8790  003BD6  2AE3               	incf	plusw1,f,c
  8791  003BD8  E30E               	bnc	u2100
  8792  003BDA  0EF1               	movlw	-15
  8793  003BDC  2AE3               	incf	plusw1,f,c
  8794  003BDE  E30B               	bnc	u2100
  8795  003BE0  0EF2               	movlw	-14
  8796  003BE2  2AE3               	incf	plusw1,f,c
  8797  003BE4  E308               	bnc	u2100
  8798  003BE6  0EF3               	movlw	-13
  8799  003BE8  2AE3               	incf	plusw1,f,c
  8800  003BEA  E305               	bnc	u2100
  8801  003BEC  0EF4               	movlw	-12
  8802  003BEE  2AE3               	incf	plusw1,f,c
  8803  003BF0  E302               	bnc	u2100
  8804  003BF2  0EF5               	movlw	-11
  8805  003BF4  2AE3               	incf	plusw1,f,c
  8806  003BF6                     u2100:
  8807                           
  8808                           ;stkvar	_divisor @ sp[(-2)+-16]
  8809  003BF6  0EEE               	movlw	-18
  8810  003BF8  50E3               	movf	plusw1,w,c
  8811  003BFA  E116               	bnz	u2110
  8812  003BFC  0EEF               	movlw	-17
  8813  003BFE  50E3               	movf	plusw1,w,c
  8814  003C00  E113               	bnz	u2110
  8815  003C02  0EF0               	movlw	-16
  8816  003C04  50E3               	movf	plusw1,w,c
  8817  003C06  E110               	bnz	u2110
  8818  003C08  0EF1               	movlw	-15
  8819  003C0A  50E3               	movf	plusw1,w,c
  8820  003C0C  E10D               	bnz	u2110
  8821  003C0E  0EF2               	movlw	-14
  8822  003C10  50E3               	movf	plusw1,w,c
  8823  003C12  E10A               	bnz	u2110
  8824  003C14  0EF3               	movlw	-13
  8825  003C16  50E3               	movf	plusw1,w,c
  8826  003C18  E107               	bnz	u2110
  8827  003C1A  0EF4               	movlw	-12
  8828  003C1C  50E3               	movf	plusw1,w,c
  8829  003C1E  E104               	bnz	u2110
  8830  003C20  0EF5               	movlw	-11
  8831  003C22  50E3               	movf	plusw1,w,c
  8832  003C24  B4D8               	btfsc	status,2,c
  8833  003C26  D075               	goto	u2140
  8834  003C28                     u2110:
  8835                           
  8836                           ;stkvar	_counter @ sp[(-2)+1]
  8837  003C28  0EFF               	movlw	-1
  8838  003C2A  6AE3               	clrf	plusw1,c
  8839  003C2C  D012               	goto	L16
  8840  003C2E                     l4730:
  8841                           
  8842                           ;stkvar	_divisor @ sp[(-2)+-16]
  8843  003C2E  90D8               	bcf	status,0,c
  8844  003C30  0EEE               	movlw	-18
  8845  003C32  36E3               	rlcf	plusw1,f,c
  8846  003C34  0EEF               	movlw	-17
  8847  003C36  36E3               	rlcf	plusw1,f,c
  8848  003C38  0EF0               	movlw	-16
  8849  003C3A  36E3               	rlcf	plusw1,f,c
  8850  003C3C  0EF1               	movlw	-15
  8851  003C3E  36E3               	rlcf	plusw1,f,c
  8852  003C40  0EF2               	movlw	-14
  8853  003C42  36E3               	rlcf	plusw1,f,c
  8854  003C44  0EF3               	movlw	-13
  8855  003C46  36E3               	rlcf	plusw1,f,c
  8856  003C48  0EF4               	movlw	-12
  8857  003C4A  36E3               	rlcf	plusw1,f,c
  8858  003C4C  0EF5               	movlw	-11
  8859  003C4E  36E3               	rlcf	plusw1,f,c
  8860                           
  8861                           ;stkvar	_counter @ sp[(-2)+1]
  8862  003C50  0EFF               	movlw	-1
  8863  003C52                     L16:
  8864  003C52  2AE3               	incf	plusw1,f,c
  8865                           
  8866                           ;stkvar	_divisor @ sp[(-2)+-16]
  8867  003C54  0EF5               	movlw	-11
  8868  003C56  AEE3               	btfss	plusw1,7,c
  8869  003C58  D7EA               	goto	l4730
  8870  003C5A                     u2120:
  8871                           
  8872                           ;stkvar	_divisor @ sp[(-2)+-16]
  8873                           ;stkvar	_dividend @ sp[(-2)+-8]
  8874  003C5A  50E1               	movf	fsr1l,w,c
  8875  003C5C  0FF6               	addlw	-10
  8876  003C5E  6ED9               	movwf	fsr2l,c
  8877  003C60  50E2               	movf	fsr1h,w,c
  8878  003C62  6EDA               	movwf	fsr2h,c
  8879  003C64  0EFF               	movlw	255
  8880  003C66  22DA               	addwfc	fsr2h,f,c
  8881  003C68  0EEE               	movlw	-18
  8882  003C6A  50E3               	movf	plusw1,w,c
  8883  003C6C  5CDE               	subwf	postinc2,w,c
  8884  003C6E  0EEF               	movlw	-17
  8885  003C70  50E3               	movf	plusw1,w,c
  8886  003C72  58DE               	subwfb	postinc2,w,c
  8887  003C74  0EF0               	movlw	-16
  8888  003C76  50E3               	movf	plusw1,w,c
  8889  003C78  58DE               	subwfb	postinc2,w,c
  8890  003C7A  0EF1               	movlw	-15
  8891  003C7C  50E3               	movf	plusw1,w,c
  8892  003C7E  58DE               	subwfb	postinc2,w,c
  8893  003C80  0EF2               	movlw	-14
  8894  003C82  50E3               	movf	plusw1,w,c
  8895  003C84  58DE               	subwfb	postinc2,w,c
  8896  003C86  0EF3               	movlw	-13
  8897  003C88  50E3               	movf	plusw1,w,c
  8898  003C8A  58DE               	subwfb	postinc2,w,c
  8899  003C8C  0EF4               	movlw	-12
  8900  003C8E  50E3               	movf	plusw1,w,c
  8901  003C90  58DE               	subwfb	postinc2,w,c
  8902  003C92  0EF5               	movlw	-11
  8903  003C94  50E3               	movf	plusw1,w,c
  8904  003C96  58DE               	subwfb	postinc2,w,c
  8905  003C98  A0D8               	btfss	status,0,c
  8906  003C9A  D01F               	goto	l4738
  8907                           
  8908                           ;stkvar	_divisor @ sp[(-2)+-16]
  8909                           ;stkvar	_dividend @ sp[(-2)+-8]
  8910  003C9C  50E1               	movf	fsr1l,w,c
  8911  003C9E  0FF6               	addlw	-10
  8912  003CA0  6ED9               	movwf	fsr2l,c
  8913  003CA2  50E2               	movf	fsr1h,w,c
  8914  003CA4  6EDA               	movwf	fsr2h,c
  8915  003CA6  0EFF               	movlw	255
  8916  003CA8  22DA               	addwfc	fsr2h,f,c
  8917  003CAA  0EEE               	movlw	-18
  8918  003CAC  50E3               	movf	plusw1,w,c
  8919  003CAE  5EDE               	subwf	postinc2,f,c
  8920  003CB0  0EEF               	movlw	-17
  8921  003CB2  50E3               	movf	plusw1,w,c
  8922  003CB4  5ADE               	subwfb	postinc2,f,c
  8923  003CB6  0EF0               	movlw	-16
  8924  003CB8  50E3               	movf	plusw1,w,c
  8925  003CBA  5ADE               	subwfb	postinc2,f,c
  8926  003CBC  0EF1               	movlw	-15
  8927  003CBE  50E3               	movf	plusw1,w,c
  8928  003CC0  5ADE               	subwfb	postinc2,f,c
  8929  003CC2  0EF2               	movlw	-14
  8930  003CC4  50E3               	movf	plusw1,w,c
  8931  003CC6  5ADE               	subwfb	postinc2,f,c
  8932  003CC8  0EF3               	movlw	-13
  8933  003CCA  50E3               	movf	plusw1,w,c
  8934  003CCC  5ADE               	subwfb	postinc2,f,c
  8935  003CCE  0EF4               	movlw	-12
  8936  003CD0  50E3               	movf	plusw1,w,c
  8937  003CD2  5ADE               	subwfb	postinc2,f,c
  8938  003CD4  0EF5               	movlw	-11
  8939  003CD6  50E3               	movf	plusw1,w,c
  8940  003CD8  5ADE               	subwfb	postinc2,f,c
  8941  003CDA                     l4738:
  8942                           
  8943                           ;stkvar	_divisor @ sp[(-2)+-16]
  8944  003CDA  90D8               	bcf	status,0,c
  8945  003CDC  0EF5               	movlw	-11
  8946  003CDE  32E3               	rrcf	plusw1,f,c
  8947  003CE0  0EF4               	movlw	-12
  8948  003CE2  32E3               	rrcf	plusw1,f,c
  8949  003CE4  0EF3               	movlw	-13
  8950  003CE6  32E3               	rrcf	plusw1,f,c
  8951  003CE8  0EF2               	movlw	-14
  8952  003CEA  32E3               	rrcf	plusw1,f,c
  8953  003CEC  0EF1               	movlw	-15
  8954  003CEE  32E3               	rrcf	plusw1,f,c
  8955  003CF0  0EF0               	movlw	-16
  8956  003CF2  32E3               	rrcf	plusw1,f,c
  8957  003CF4  0EEF               	movlw	-17
  8958  003CF6  32E3               	rrcf	plusw1,f,c
  8959  003CF8  0EEE               	movlw	-18
  8960  003CFA  32E3               	rrcf	plusw1,f,c
  8961                           
  8962                           ;stkvar	_counter @ sp[(-2)+1]
  8963  003CFC  0EFF               	movlw	-1
  8964  003CFE  50E3               	movf	plusw1,w,c
  8965  003D00  6E38               	movwf	btemp,c
  8966  003D02  0E01               	movlw	1
  8967  003D04  5E38               	subwf	btemp,f,c
  8968  003D06  0EFF               	movlw	-1
  8969  003D08  0060  F0E3  FFE3   	movff	btemp,plusw1
  8970  003D0E  A4D8               	btfss	status,2,c
  8971  003D10  D7A4               	goto	u2120
  8972  003D12                     u2140:
  8973                           
  8974                           ;stkvar	_sign @ sp[(-2)+0]
  8975  003D12  0EFE               	movlw	-2
  8976  003D14  50E3               	movf	plusw1,w,c
  8977  003D16  B4D8               	btfsc	status,2,c
  8978  003D18  D025               	goto	u2160
  8979                           
  8980                           ;stkvar	_dividend @ sp[(-2)+-8]
  8981                           ;stkvar	_dividend @ sp[(-2)+-8]
  8982  003D1A  0EF6               	movlw	-10
  8983  003D1C  6CE3               	negf	plusw1,c
  8984  003D1E  0EF7               	movlw	-9
  8985  003D20  1EE3               	comf	plusw1,f,c
  8986  003D22  0EF8               	movlw	-8
  8987  003D24  1EE3               	comf	plusw1,f,c
  8988  003D26  0EF9               	movlw	-7
  8989  003D28  1EE3               	comf	plusw1,f,c
  8990  003D2A  0EFA               	movlw	-6
  8991  003D2C  1EE3               	comf	plusw1,f,c
  8992  003D2E  0EFB               	movlw	-5
  8993  003D30  1EE3               	comf	plusw1,f,c
  8994  003D32  0EFC               	movlw	-4
  8995  003D34  1EE3               	comf	plusw1,f,c
  8996  003D36  0EFD               	movlw	-3
  8997  003D38  1EE3               	comf	plusw1,f,c
  8998  003D3A  E314               	bnc	u2160
  8999  003D3C  0EF7               	movlw	-9
  9000  003D3E  2AE3               	incf	plusw1,f,c
  9001  003D40  E311               	bnc	u2160
  9002  003D42  0EF8               	movlw	-8
  9003  003D44  2AE3               	incf	plusw1,f,c
  9004  003D46  E30E               	bnc	u2160
  9005  003D48  0EF9               	movlw	-7
  9006  003D4A  2AE3               	incf	plusw1,f,c
  9007  003D4C  E30B               	bnc	u2160
  9008  003D4E  0EFA               	movlw	-6
  9009  003D50  2AE3               	incf	plusw1,f,c
  9010  003D52  E308               	bnc	u2160
  9011  003D54  0EFB               	movlw	-5
  9012  003D56  2AE3               	incf	plusw1,f,c
  9013  003D58  E305               	bnc	u2160
  9014  003D5A  0EFC               	movlw	-4
  9015  003D5C  2AE3               	incf	plusw1,f,c
  9016  003D5E  E302               	bnc	u2160
  9017  003D60  0EFD               	movlw	-3
  9018  003D62  2AE3               	incf	plusw1,f,c
  9019  003D64                     u2160:
  9020                           
  9021                           ;stkvar	_dividend @ sp[(-2)+-8]
  9022  003D64  0EF6               	movlw	246
  9023  003D66  24E1               	addwf	fsr1l,w,c
  9024  003D68  6ED9               	movwf	fsr2l,c
  9025  003D6A  0EFF               	movlw	255
  9026  003D6C  20E2               	addwfc	fsr1h,w,c
  9027  003D6E  6EDA               	movwf	fsr2h,c
  9028                           
  9029                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9030  003D70  0E08               	movlw	8
  9031  003D72  6E38               	movwf	btemp,c
  9032  003D74  0EF6               	movlw	-10
  9033  003D76                     us217999:
  9034  003D76  006F FF7B FFE3     	movff	postinc2,plusw1
  9035  003D7C  28E8               	incf	wreg,w,c
  9036  003D7E  2E38               	decfsz	btemp,f,c
  9037  003D80  D7FA               	bra	us217999
  9038                           
  9039                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9040  003D82  52E5               	movf	postdec1,f,c
  9041  003D84  52E5               	movf	postdec1,f,c
  9042  003D86  0012               	return		;funcret
  9043  003D88                     __end_of___aomod:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function ___aodiv *****************
  9047 ;; Defined at:
  9048 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  dividend        8  [STACK] long long 
  9051 ;;  divisor         8  [STACK] long long 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;  quotient        8  [STACK] long long 
  9054 ;;  sign            1  [STACK] unsigned char 
  9055 ;;  counter         1  [STACK] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  8  [STACK] long long 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/1
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    3
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_dtoa
  9076 ;; This function uses a reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text39
  9080  0038C8                     __ptext39:
  9081                           	opt callstack 0
  9082  0038C8                     ___aodiv:
  9083                           	opt callstack 0
  9084                           
  9085                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9086  0038C8  0E0A               	movlw	10
  9087  0038CA  26E1               	addwf	fsr1l,f,c
  9088  0038CC  0E00               	movlw	0
  9089  0038CE  22E2               	addwfc	fsr1h,f,c
  9090                           
  9091                           ;stkvar	_sign @ sp[(-10)+8]
  9092                           
  9093                           ;incstack = 0
  9094  0038D0  0EFE               	movlw	-2
  9095  0038D2  6AE3               	clrf	plusw1,c
  9096                           
  9097                           ;stkvar	_divisor @ sp[(-10)+-16]
  9098  0038D4  0EED               	movlw	-19
  9099  0038D6  AEE3               	btfss	plusw1,7,c
  9100  0038D8  D028               	goto	l4678
  9101                           
  9102                           ;stkvar	_divisor @ sp[(-10)+-16]
  9103                           ;stkvar	_divisor @ sp[(-10)+-16]
  9104  0038DA  0EE6               	movlw	-26
  9105  0038DC  6CE3               	negf	plusw1,c
  9106  0038DE  0EE7               	movlw	-25
  9107  0038E0  1EE3               	comf	plusw1,f,c
  9108  0038E2  0EE8               	movlw	-24
  9109  0038E4  1EE3               	comf	plusw1,f,c
  9110  0038E6  0EE9               	movlw	-23
  9111  0038E8  1EE3               	comf	plusw1,f,c
  9112  0038EA  0EEA               	movlw	-22
  9113  0038EC  1EE3               	comf	plusw1,f,c
  9114  0038EE  0EEB               	movlw	-21
  9115  0038F0  1EE3               	comf	plusw1,f,c
  9116  0038F2  0EEC               	movlw	-20
  9117  0038F4  1EE3               	comf	plusw1,f,c
  9118  0038F6  0EED               	movlw	-19
  9119  0038F8  1EE3               	comf	plusw1,f,c
  9120  0038FA  E314               	bnc	u1960
  9121  0038FC  0EE7               	movlw	-25
  9122  0038FE  2AE3               	incf	plusw1,f,c
  9123  003900  E311               	bnc	u1960
  9124  003902  0EE8               	movlw	-24
  9125  003904  2AE3               	incf	plusw1,f,c
  9126  003906  E30E               	bnc	u1960
  9127  003908  0EE9               	movlw	-23
  9128  00390A  2AE3               	incf	plusw1,f,c
  9129  00390C  E30B               	bnc	u1960
  9130  00390E  0EEA               	movlw	-22
  9131  003910  2AE3               	incf	plusw1,f,c
  9132  003912  E308               	bnc	u1960
  9133  003914  0EEB               	movlw	-21
  9134  003916  2AE3               	incf	plusw1,f,c
  9135  003918  E305               	bnc	u1960
  9136  00391A  0EEC               	movlw	-20
  9137  00391C  2AE3               	incf	plusw1,f,c
  9138  00391E  E302               	bnc	u1960
  9139  003920  0EED               	movlw	-19
  9140  003922  2AE3               	incf	plusw1,f,c
  9141  003924                     u1960:
  9142                           
  9143                           ;stkvar	_sign @ sp[(-10)+8]
  9144  003924  0EFE               	movlw	-2
  9145  003926  6AE3               	clrf	plusw1,c
  9146  003928  2AE3               	incf	plusw1,f,c
  9147  00392A                     l4678:
  9148                           
  9149                           ;stkvar	_dividend @ sp[(-10)+-8]
  9150  00392A  0EF5               	movlw	-11
  9151  00392C  AEE3               	btfss	plusw1,7,c
  9152  00392E  D027               	goto	l4684
  9153                           
  9154                           ;stkvar	_dividend @ sp[(-10)+-8]
  9155                           ;stkvar	_dividend @ sp[(-10)+-8]
  9156  003930  0EEE               	movlw	-18
  9157  003932  6CE3               	negf	plusw1,c
  9158  003934  0EEF               	movlw	-17
  9159  003936  1EE3               	comf	plusw1,f,c
  9160  003938  0EF0               	movlw	-16
  9161  00393A  1EE3               	comf	plusw1,f,c
  9162  00393C  0EF1               	movlw	-15
  9163  00393E  1EE3               	comf	plusw1,f,c
  9164  003940  0EF2               	movlw	-14
  9165  003942  1EE3               	comf	plusw1,f,c
  9166  003944  0EF3               	movlw	-13
  9167  003946  1EE3               	comf	plusw1,f,c
  9168  003948  0EF4               	movlw	-12
  9169  00394A  1EE3               	comf	plusw1,f,c
  9170  00394C  0EF5               	movlw	-11
  9171  00394E  1EE3               	comf	plusw1,f,c
  9172  003950  E314               	bnc	u1980
  9173  003952  0EEF               	movlw	-17
  9174  003954  2AE3               	incf	plusw1,f,c
  9175  003956  E311               	bnc	u1980
  9176  003958  0EF0               	movlw	-16
  9177  00395A  2AE3               	incf	plusw1,f,c
  9178  00395C  E30E               	bnc	u1980
  9179  00395E  0EF1               	movlw	-15
  9180  003960  2AE3               	incf	plusw1,f,c
  9181  003962  E30B               	bnc	u1980
  9182  003964  0EF2               	movlw	-14
  9183  003966  2AE3               	incf	plusw1,f,c
  9184  003968  E308               	bnc	u1980
  9185  00396A  0EF3               	movlw	-13
  9186  00396C  2AE3               	incf	plusw1,f,c
  9187  00396E  E305               	bnc	u1980
  9188  003970  0EF4               	movlw	-12
  9189  003972  2AE3               	incf	plusw1,f,c
  9190  003974  E302               	bnc	u1980
  9191  003976  0EF5               	movlw	-11
  9192  003978  2AE3               	incf	plusw1,f,c
  9193  00397A                     u1980:
  9194                           
  9195                           ;stkvar	_sign @ sp[(-10)+8]
  9196  00397A  0EFE               	movlw	-2
  9197  00397C  70E3               	btg	plusw1,0,c
  9198  00397E                     l4684:
  9199                           
  9200                           ;stkvar	_quotient @ sp[(-10)+0]
  9201  00397E  0E07               	movlw	7
  9202  003980  6E38               	movwf	btemp,c
  9203  003982  0EF6               	movlw	-10
  9204  003984                     u1991:
  9205  003984  6AE3               	clrf	plusw1,c
  9206  003986  2AE8               	incf	wreg,f,c
  9207  003988  0638               	decf	btemp,f,c
  9208  00398A  E2FC               	bc	u1991
  9209                           
  9210                           ;stkvar	_divisor @ sp[(-10)+-16]
  9211  00398C  0EE6               	movlw	-26
  9212  00398E  50E3               	movf	plusw1,w,c
  9213  003990  E116               	bnz	u2000
  9214  003992  0EE7               	movlw	-25
  9215  003994  50E3               	movf	plusw1,w,c
  9216  003996  E113               	bnz	u2000
  9217  003998  0EE8               	movlw	-24
  9218  00399A  50E3               	movf	plusw1,w,c
  9219  00399C  E110               	bnz	u2000
  9220  00399E  0EE9               	movlw	-23
  9221  0039A0  50E3               	movf	plusw1,w,c
  9222  0039A2  E10D               	bnz	u2000
  9223  0039A4  0EEA               	movlw	-22
  9224  0039A6  50E3               	movf	plusw1,w,c
  9225  0039A8  E10A               	bnz	u2000
  9226  0039AA  0EEB               	movlw	-21
  9227  0039AC  50E3               	movf	plusw1,w,c
  9228  0039AE  E107               	bnz	u2000
  9229  0039B0  0EEC               	movlw	-20
  9230  0039B2  50E3               	movf	plusw1,w,c
  9231  0039B4  E104               	bnz	u2000
  9232  0039B6  0EED               	movlw	-19
  9233  0039B8  50E3               	movf	plusw1,w,c
  9234  0039BA  B4D8               	btfsc	status,2,c
  9235  0039BC  D088               	goto	u2030
  9236  0039BE                     u2000:
  9237                           
  9238                           ;stkvar	_counter @ sp[(-10)+9]
  9239  0039BE  0EFF               	movlw	-1
  9240  0039C0  6AE3               	clrf	plusw1,c
  9241  0039C2  D012               	goto	L17
  9242  0039C4                     l4690:
  9243                           
  9244                           ;stkvar	_divisor @ sp[(-10)+-16]
  9245  0039C4  90D8               	bcf	status,0,c
  9246  0039C6  0EE6               	movlw	-26
  9247  0039C8  36E3               	rlcf	plusw1,f,c
  9248  0039CA  0EE7               	movlw	-25
  9249  0039CC  36E3               	rlcf	plusw1,f,c
  9250  0039CE  0EE8               	movlw	-24
  9251  0039D0  36E3               	rlcf	plusw1,f,c
  9252  0039D2  0EE9               	movlw	-23
  9253  0039D4  36E3               	rlcf	plusw1,f,c
  9254  0039D6  0EEA               	movlw	-22
  9255  0039D8  36E3               	rlcf	plusw1,f,c
  9256  0039DA  0EEB               	movlw	-21
  9257  0039DC  36E3               	rlcf	plusw1,f,c
  9258  0039DE  0EEC               	movlw	-20
  9259  0039E0  36E3               	rlcf	plusw1,f,c
  9260  0039E2  0EED               	movlw	-19
  9261  0039E4  36E3               	rlcf	plusw1,f,c
  9262                           
  9263                           ;stkvar	_counter @ sp[(-10)+9]
  9264  0039E6  0EFF               	movlw	-1
  9265  0039E8                     L17:
  9266  0039E8  2AE3               	incf	plusw1,f,c
  9267                           
  9268                           ;stkvar	_divisor @ sp[(-10)+-16]
  9269  0039EA  0EED               	movlw	-19
  9270  0039EC  AEE3               	btfss	plusw1,7,c
  9271  0039EE  D7EA               	goto	l4690
  9272  0039F0                     u2010:
  9273                           
  9274                           ;stkvar	_quotient @ sp[(-10)+0]
  9275  0039F0  90D8               	bcf	status,0,c
  9276  0039F2  0EF6               	movlw	-10
  9277  0039F4  36E3               	rlcf	plusw1,f,c
  9278  0039F6  0EF7               	movlw	-9
  9279  0039F8  36E3               	rlcf	plusw1,f,c
  9280  0039FA  0EF8               	movlw	-8
  9281  0039FC  36E3               	rlcf	plusw1,f,c
  9282  0039FE  0EF9               	movlw	-7
  9283  003A00  36E3               	rlcf	plusw1,f,c
  9284  003A02  0EFA               	movlw	-6
  9285  003A04  36E3               	rlcf	plusw1,f,c
  9286  003A06  0EFB               	movlw	-5
  9287  003A08  36E3               	rlcf	plusw1,f,c
  9288  003A0A  0EFC               	movlw	-4
  9289  003A0C  36E3               	rlcf	plusw1,f,c
  9290  003A0E  0EFD               	movlw	-3
  9291  003A10  36E3               	rlcf	plusw1,f,c
  9292                           
  9293                           ;stkvar	_divisor @ sp[(-10)+-16]
  9294                           ;stkvar	_dividend @ sp[(-10)+-8]
  9295  003A12  50E1               	movf	fsr1l,w,c
  9296  003A14  0FEE               	addlw	-18
  9297  003A16  6ED9               	movwf	fsr2l,c
  9298  003A18  50E2               	movf	fsr1h,w,c
  9299  003A1A  6EDA               	movwf	fsr2h,c
  9300  003A1C  0EFF               	movlw	255
  9301  003A1E  22DA               	addwfc	fsr2h,f,c
  9302  003A20  0EE6               	movlw	-26
  9303  003A22  50E3               	movf	plusw1,w,c
  9304  003A24  5CDE               	subwf	postinc2,w,c
  9305  003A26  0EE7               	movlw	-25
  9306  003A28  50E3               	movf	plusw1,w,c
  9307  003A2A  58DE               	subwfb	postinc2,w,c
  9308  003A2C  0EE8               	movlw	-24
  9309  003A2E  50E3               	movf	plusw1,w,c
  9310  003A30  58DE               	subwfb	postinc2,w,c
  9311  003A32  0EE9               	movlw	-23
  9312  003A34  50E3               	movf	plusw1,w,c
  9313  003A36  58DE               	subwfb	postinc2,w,c
  9314  003A38  0EEA               	movlw	-22
  9315  003A3A  50E3               	movf	plusw1,w,c
  9316  003A3C  58DE               	subwfb	postinc2,w,c
  9317  003A3E  0EEB               	movlw	-21
  9318  003A40  50E3               	movf	plusw1,w,c
  9319  003A42  58DE               	subwfb	postinc2,w,c
  9320  003A44  0EEC               	movlw	-20
  9321  003A46  50E3               	movf	plusw1,w,c
  9322  003A48  58DE               	subwfb	postinc2,w,c
  9323  003A4A  0EED               	movlw	-19
  9324  003A4C  50E3               	movf	plusw1,w,c
  9325  003A4E  58DE               	subwfb	postinc2,w,c
  9326  003A50  A0D8               	btfss	status,0,c
  9327  003A52  D021               	goto	l4702
  9328                           
  9329                           ;stkvar	_divisor @ sp[(-10)+-16]
  9330                           ;stkvar	_dividend @ sp[(-10)+-8]
  9331  003A54  50E1               	movf	fsr1l,w,c
  9332  003A56  0FEE               	addlw	-18
  9333  003A58  6ED9               	movwf	fsr2l,c
  9334  003A5A  50E2               	movf	fsr1h,w,c
  9335  003A5C  6EDA               	movwf	fsr2h,c
  9336  003A5E  0EFF               	movlw	255
  9337  003A60  22DA               	addwfc	fsr2h,f,c
  9338  003A62  0EE6               	movlw	-26
  9339  003A64  50E3               	movf	plusw1,w,c
  9340  003A66  5EDE               	subwf	postinc2,f,c
  9341  003A68  0EE7               	movlw	-25
  9342  003A6A  50E3               	movf	plusw1,w,c
  9343  003A6C  5ADE               	subwfb	postinc2,f,c
  9344  003A6E  0EE8               	movlw	-24
  9345  003A70  50E3               	movf	plusw1,w,c
  9346  003A72  5ADE               	subwfb	postinc2,f,c
  9347  003A74  0EE9               	movlw	-23
  9348  003A76  50E3               	movf	plusw1,w,c
  9349  003A78  5ADE               	subwfb	postinc2,f,c
  9350  003A7A  0EEA               	movlw	-22
  9351  003A7C  50E3               	movf	plusw1,w,c
  9352  003A7E  5ADE               	subwfb	postinc2,f,c
  9353  003A80  0EEB               	movlw	-21
  9354  003A82  50E3               	movf	plusw1,w,c
  9355  003A84  5ADE               	subwfb	postinc2,f,c
  9356  003A86  0EEC               	movlw	-20
  9357  003A88  50E3               	movf	plusw1,w,c
  9358  003A8A  5ADE               	subwfb	postinc2,f,c
  9359  003A8C  0EED               	movlw	-19
  9360  003A8E  50E3               	movf	plusw1,w,c
  9361  003A90  5ADE               	subwfb	postinc2,f,c
  9362                           
  9363                           ;stkvar	_quotient @ sp[(-10)+0]
  9364  003A92  0EF6               	movlw	-10
  9365  003A94  80E3               	bsf	plusw1,0,c
  9366  003A96                     l4702:
  9367                           
  9368                           ;stkvar	_divisor @ sp[(-10)+-16]
  9369  003A96  90D8               	bcf	status,0,c
  9370  003A98  0EED               	movlw	-19
  9371  003A9A  32E3               	rrcf	plusw1,f,c
  9372  003A9C  0EEC               	movlw	-20
  9373  003A9E  32E3               	rrcf	plusw1,f,c
  9374  003AA0  0EEB               	movlw	-21
  9375  003AA2  32E3               	rrcf	plusw1,f,c
  9376  003AA4  0EEA               	movlw	-22
  9377  003AA6  32E3               	rrcf	plusw1,f,c
  9378  003AA8  0EE9               	movlw	-23
  9379  003AAA  32E3               	rrcf	plusw1,f,c
  9380  003AAC  0EE8               	movlw	-24
  9381  003AAE  32E3               	rrcf	plusw1,f,c
  9382  003AB0  0EE7               	movlw	-25
  9383  003AB2  32E3               	rrcf	plusw1,f,c
  9384  003AB4  0EE6               	movlw	-26
  9385  003AB6  32E3               	rrcf	plusw1,f,c
  9386                           
  9387                           ;stkvar	_counter @ sp[(-10)+9]
  9388  003AB8  0EFF               	movlw	-1
  9389  003ABA  50E3               	movf	plusw1,w,c
  9390  003ABC  6E38               	movwf	btemp,c
  9391  003ABE  0E01               	movlw	1
  9392  003AC0  5E38               	subwf	btemp,f,c
  9393  003AC2  0EFF               	movlw	-1
  9394  003AC4  0060  F0E3  FFE3   	movff	btemp,plusw1
  9395  003ACA  A4D8               	btfss	status,2,c
  9396  003ACC  D791               	goto	u2010
  9397  003ACE                     u2030:
  9398                           
  9399                           ;stkvar	_sign @ sp[(-10)+8]
  9400  003ACE  0EFE               	movlw	-2
  9401  003AD0  50E3               	movf	plusw1,w,c
  9402  003AD2  B4D8               	btfsc	status,2,c
  9403  003AD4  D025               	goto	u2050
  9404                           
  9405                           ;stkvar	_quotient @ sp[(-10)+0]
  9406                           ;stkvar	_quotient @ sp[(-10)+0]
  9407  003AD6  0EF6               	movlw	-10
  9408  003AD8  6CE3               	negf	plusw1,c
  9409  003ADA  0EF7               	movlw	-9
  9410  003ADC  1EE3               	comf	plusw1,f,c
  9411  003ADE  0EF8               	movlw	-8
  9412  003AE0  1EE3               	comf	plusw1,f,c
  9413  003AE2  0EF9               	movlw	-7
  9414  003AE4  1EE3               	comf	plusw1,f,c
  9415  003AE6  0EFA               	movlw	-6
  9416  003AE8  1EE3               	comf	plusw1,f,c
  9417  003AEA  0EFB               	movlw	-5
  9418  003AEC  1EE3               	comf	plusw1,f,c
  9419  003AEE  0EFC               	movlw	-4
  9420  003AF0  1EE3               	comf	plusw1,f,c
  9421  003AF2  0EFD               	movlw	-3
  9422  003AF4  1EE3               	comf	plusw1,f,c
  9423  003AF6  E314               	bnc	u2050
  9424  003AF8  0EF7               	movlw	-9
  9425  003AFA  2AE3               	incf	plusw1,f,c
  9426  003AFC  E311               	bnc	u2050
  9427  003AFE  0EF8               	movlw	-8
  9428  003B00  2AE3               	incf	plusw1,f,c
  9429  003B02  E30E               	bnc	u2050
  9430  003B04  0EF9               	movlw	-7
  9431  003B06  2AE3               	incf	plusw1,f,c
  9432  003B08  E30B               	bnc	u2050
  9433  003B0A  0EFA               	movlw	-6
  9434  003B0C  2AE3               	incf	plusw1,f,c
  9435  003B0E  E308               	bnc	u2050
  9436  003B10  0EFB               	movlw	-5
  9437  003B12  2AE3               	incf	plusw1,f,c
  9438  003B14  E305               	bnc	u2050
  9439  003B16  0EFC               	movlw	-4
  9440  003B18  2AE3               	incf	plusw1,f,c
  9441  003B1A  E302               	bnc	u2050
  9442  003B1C  0EFD               	movlw	-3
  9443  003B1E  2AE3               	incf	plusw1,f,c
  9444  003B20                     u2050:
  9445                           
  9446                           ;stkvar	_quotient @ sp[(-10)+0]
  9447  003B20  0EF6               	movlw	246
  9448  003B22  24E1               	addwf	fsr1l,w,c
  9449  003B24  6ED9               	movwf	fsr2l,c
  9450  003B26  0EFF               	movlw	255
  9451  003B28  20E2               	addwfc	fsr1h,w,c
  9452  003B2A  6EDA               	movwf	fsr2h,c
  9453                           
  9454                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9455  003B2C  0E08               	movlw	8
  9456  003B2E  6E38               	movwf	btemp,c
  9457  003B30  0EEE               	movlw	-18
  9458  003B32                     us206999:
  9459  003B32  006F FF7B FFE3     	movff	postinc2,plusw1
  9460  003B38  28E8               	incf	wreg,w,c
  9461  003B3A  2E38               	decfsz	btemp,f,c
  9462  003B3C  D7FA               	bra	us206999
  9463                           
  9464                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9465  003B3E  0EF6               	movlw	246
  9466  003B40  26E1               	addwf	fsr1l,f,c
  9467  003B42  0EFF               	movlw	255
  9468  003B44  22E2               	addwfc	fsr1h,f,c
  9469  003B46  0012               	return		;funcret
  9470  003B48                     __end_of___aodiv:
  9471                           	opt callstack 0
  9472                           
  9473 ;; *************** function _ctoa *****************
  9474 ;; Defined at:
  9475 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9478 ;;		 -> f(5), NULL(0), 
  9479 ;;  c               1  [STACK] unsigned char 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  w               2  [STACK] int 
  9482 ;;  l               2    0        int 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  2  [STACK] int 
  9485 ;; Registers used:
  9486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;Total ram usage:        0 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    8
  9499 ;; This function calls:
  9500 ;;		_pad
  9501 ;; This function is called by:
  9502 ;;		_vfpfcnvrt
  9503 ;; This function uses a reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text40
  9507  004CD8                     __ptext40:
  9508                           	opt callstack 0
  9509  004CD8                     _ctoa:
  9510                           	opt callstack 0
  9511                           
  9512                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9513  004CD8  52E6               	movf	postinc1,f,c
  9514  004CDA  52E6               	movf	postinc1,f,c
  9515                           
  9516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9517                           
  9518                           ;incstack = 0
  9519  004CDC  501F               	movf	_width,w,c
  9520  004CDE  1020               	iorwf	_width+1,w,c
  9521  004CE0  A4D8               	btfss	status,2,c
  9522  004CE2  D009               	goto	l6420
  9523                           
  9524                           ;stkvar	_w @ sp[(-2)+0]
  9525  004CE4  0EFE               	movlw	-2
  9526  004CE6  0060  F07F  FFE3   	movff	_width,plusw1
  9527  004CEC  0EFF               	movlw	-1
  9528  004CEE  0060  F083  FFE3   	movff	_width+1,plusw1
  9529  004CF4  D016               	goto	l6422
  9530  004CF6                     l6420:
  9531  004CF6  0EFF               	movlw	255
  9532  004CF8  6E42               	movwf	btemp+10,c
  9533  004CFA  0EFF               	movlw	255
  9534  004CFC  6E43               	movwf	btemp+11,c
  9535  004CFE  0060  F07C  F040   	movff	_width,btemp+8
  9536  004D04  0060  F080  F041   	movff	_width+1,btemp+9
  9537  004D0A  5042               	movf	btemp+10,w,c
  9538  004D0C  2640               	addwf	btemp+8,f,c
  9539  004D0E  5043               	movf	btemp+11,w,c
  9540  004D10  2241               	addwfc	btemp+9,f,c
  9541                           
  9542                           ;stkvar	_w @ sp[(-2)+0]
  9543  004D12  0EFE               	movlw	-2
  9544  004D14  0060  F103  FFE3   	movff	btemp+8,plusw1
  9545  004D1A  0EFF               	movlw	-1
  9546  004D1C  0060  F107  FFE3   	movff	btemp+9,plusw1
  9547  004D22                     l6422:
  9548                           
  9549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9550                           ;stkvar	_c @ sp[(-2)+-3]
  9551  004D22  0EFB               	movlw	-5
  9552  004D24  006F FF8C  F1CD    	movff	plusw1,_dbuf
  9553                           
  9554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9555  004D2A  0101               	movlb	1	; () banked
  9556  004D2C  6BCE               	clrf	(_dbuf+1)& (0+255),b
  9557                           
  9558                           ; BSR set to: 1
  9559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9560                           ;stkvar	_w @ sp[(-2)+0]
  9561  004D2E  0EFE               	movlw	-2
  9562  004D30  006F FF8F FFE6     	movff	plusw1,postinc1
  9563  004D36  006F FF8F FFE6     	movff	plusw1,postinc1
  9564  004D3C  0ECD               	movlw	low _dbuf
  9565  004D3E  6EE6               	movwf	postinc1,c
  9566  004D40  0E01               	movlw	high _dbuf
  9567  004D42  6EE6               	movwf	postinc1,c
  9568                           
  9569                           ;stkvar	_fp @ sp[(-6)+-2]
  9570  004D44  0EF8               	movlw	-8
  9571  004D46  006F FF8F FFE6     	movff	plusw1,postinc1
  9572  004D4C  006F FF8F FFE6     	movff	plusw1,postinc1
  9573  004D52  EC37  F021         	call	_pad	;wreg free
  9574                           
  9575                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9576  004D56  0EFB               	movlw	251
  9577  004D58  26E1               	addwf	fsr1l,f,c
  9578  004D5A  0EFF               	movlw	255
  9579  004D5C  22E2               	addwfc	fsr1h,f,c
  9580  004D5E  0012               	return		;funcret
  9581  004D60                     __end_of_ctoa:
  9582                           	opt callstack 0
  9583                           
  9584 ;; *************** function _pad *****************
  9585 ;; Defined at:
  9586 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9589 ;;		 -> f(5), NULL(0), 
  9590 ;;  buf             2  [STACK] PTR unsigned char 
  9591 ;;		 -> dbuf(32), 
  9592 ;;  p               2  [STACK] int 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  w               2  [STACK] int 
  9595 ;;  i               2  [STACK] int 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  2  [STACK] int 
  9598 ;; Registers used:
  9599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/1
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9609 ;;Total ram usage:        0 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:    7
  9612 ;; This function calls:
  9613 ;;		_fputc
  9614 ;;		_fputs
  9615 ;;		_strlen
  9616 ;; This function is called by:
  9617 ;;		_ctoa
  9618 ;;		_dtoa
  9619 ;; This function uses a reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text41
  9623  00426E                     __ptext41:
  9624                           	opt callstack 0
  9625  00426E                     _pad:
  9626                           	opt callstack 0
  9627                           
  9628                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9629  00426E  52E6               	movf	postinc1,f,c
  9630  004270  52E6               	movf	postinc1,f,c
  9631  004272  52E6               	movf	postinc1,f,c
  9632  004274  52E6               	movf	postinc1,f,c
  9633                           
  9634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9635                           
  9636                           ;incstack = 0
  9637  004276  A023               	btfss	_flags,0,c
  9638  004278  D010               	goto	l6398
  9639                           
  9640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9641                           ;stkvar	_fp @ sp[(-4)+-2]
  9642  00427A  0EFA               	movlw	-6
  9643  00427C  006F FF8F FFE6     	movff	plusw1,postinc1
  9644  004282  006F FF8F FFE6     	movff	plusw1,postinc1
  9645                           
  9646                           ;stkvar	_buf @ sp[(-6)+-4]
  9647  004288  0EF6               	movlw	-10
  9648  00428A  006F FF8F FFE6     	movff	plusw1,postinc1
  9649  004290  006F FF8F FFE6     	movff	plusw1,postinc1
  9650  004296  ECD7  F025         	call	_fputs	;wreg free
  9651  00429A                     l6398:
  9652                           
  9653                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9654                           ;stkvar	_p @ sp[(-4)+-6]
  9655  00429A  0EF7               	movlw	-9
  9656  00429C  BEE3               	btfsc	plusw1,7,c
  9657  00429E  D011               	goto	l6402
  9658                           
  9659                           ;stkvar	_p @ sp[(-4)+-6]
  9660                           ;stkvar	_w @ sp[(-4)+0]
  9661  0042A0  0EF6               	movlw	-10
  9662  0042A2  006F FF8C  F038    	movff	plusw1,btemp
  9663  0042A8  0EFC               	movlw	-4
  9664  0042AA  0060  F0E3  FFE3   	movff	btemp,plusw1
  9665  0042B0  0EF7               	movlw	-9
  9666  0042B2  006F FF8C  F038    	movff	plusw1,btemp
  9667  0042B8  0EFD               	movlw	-3
  9668  0042BA  0060  F0E3  FFE3   	movff	btemp,plusw1
  9669  0042C0  D004               	goto	l1658
  9670  0042C2                     l6402:
  9671                           
  9672                           ;stkvar	_w @ sp[(-4)+0]
  9673  0042C2  0EFC               	movlw	-4
  9674  0042C4  6AE3               	clrf	plusw1,c
  9675  0042C6  0EFD               	movlw	-3
  9676  0042C8  6AE3               	clrf	plusw1,c
  9677  0042CA                     l1658:
  9678                           
  9679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9680                           ;stkvar	_i @ sp[(-4)+2]
  9681  0042CA  0EFE               	movlw	-2
  9682  0042CC  6AE3               	clrf	plusw1,c
  9683  0042CE  0EFF               	movlw	-1
  9684  0042D0  6AE3               	clrf	plusw1,c
  9685                           
  9686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9687  0042D2  D01E               	goto	l6408
  9688  0042D4                     l6404:
  9689                           
  9690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9691                           ;stkvar	_fp @ sp[(-4)+-2]
  9692  0042D4  0EFA               	movlw	-6
  9693  0042D6  006F FF8F FFE6     	movff	plusw1,postinc1
  9694  0042DC  006F FF8F FFE6     	movff	plusw1,postinc1
  9695  0042E2  0E20               	movlw	32
  9696  0042E4  6EE6               	movwf	postinc1,c
  9697  0042E6  0E00               	movlw	0
  9698  0042E8  6EE6               	movwf	postinc1,c
  9699  0042EA  ECC1  F021         	call	_fputc	;wreg free
  9700                           
  9701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9702                           ;stkvar	_i @ sp[(-4)+2]
  9703  0042EE  0EFE               	movlw	-2
  9704  0042F0  50E3               	movf	plusw1,w,c
  9705  0042F2  0F01               	addlw	1
  9706  0042F4  6E38               	movwf	btemp,c
  9707  0042F6  0EFE               	movlw	-2
  9708  0042F8  0060  F0E3  FFE3   	movff	btemp,plusw1
  9709  0042FE  6A38               	clrf	btemp,c
  9710  004300  0EFF               	movlw	-1
  9711  004302  50E3               	movf	plusw1,w,c
  9712  004304  2038               	addwfc	btemp,w,c
  9713  004306  6E38               	movwf	btemp,c
  9714  004308  0EFF               	movlw	-1
  9715  00430A  0060  F0E3  FFE3   	movff	btemp,plusw1
  9716  004310                     l6408:
  9717                           
  9718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9719                           ;stkvar	_w @ sp[(-4)+0]
  9720                           ;stkvar	_i @ sp[(-4)+2]
  9721  004310  50E1               	movf	fsr1l,w,c
  9722  004312  0FFE               	addlw	-2
  9723  004314  6ED9               	movwf	fsr2l,c
  9724  004316  50E2               	movf	fsr1h,w,c
  9725  004318  6EDA               	movwf	fsr2h,c
  9726  00431A  0EFF               	movlw	255
  9727  00431C  22DA               	addwfc	fsr2h,f,c
  9728  00431E  0EFC               	movlw	-4
  9729  004320  50E3               	movf	plusw1,w,c
  9730  004322  5CDE               	subwf	postinc2,w,c
  9731  004324  50DE               	movf	postinc2,w,c
  9732  004326  0A80               	xorlw	128
  9733  004328  6E38               	movwf	btemp,c
  9734  00432A  0EFD               	movlw	-3
  9735  00432C  50E3               	movf	plusw1,w,c
  9736  00432E  0A80               	xorlw	128
  9737  004330  5838               	subwfb	btemp,w,c
  9738  004332  A0D8               	btfss	status,0,c
  9739  004334  D7CF               	goto	l6404
  9740                           
  9741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9742  004336  B023               	btfsc	_flags,0,c
  9743  004338  D010               	goto	l6412
  9744                           
  9745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9746                           ;stkvar	_fp @ sp[(-4)+-2]
  9747  00433A  0EFA               	movlw	-6
  9748  00433C  006F FF8F FFE6     	movff	plusw1,postinc1
  9749  004342  006F FF8F FFE6     	movff	plusw1,postinc1
  9750                           
  9751                           ;stkvar	_buf @ sp[(-6)+-4]
  9752  004348  0EF6               	movlw	-10
  9753  00434A  006F FF8F FFE6     	movff	plusw1,postinc1
  9754  004350  006F FF8F FFE6     	movff	plusw1,postinc1
  9755  004356  ECD7  F025         	call	_fputs	;wreg free
  9756  00435A                     l6412:
  9757                           
  9758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9759                           ;stkvar	_w @ sp[(-4)+0]
  9760                           ;stkvar	_buf @ sp[(-4)+-4]
  9761  00435A  0EF8               	movlw	-8
  9762  00435C  006F FF8F FFE6     	movff	plusw1,postinc1
  9763  004362  006F FF8F FFE6     	movff	plusw1,postinc1
  9764  004368  EC9C  F024         	call	_strlen	;wreg free
  9765  00436C  0EFC               	movlw	-4
  9766  00436E  50E3               	movf	plusw1,w,c
  9767  004370  2638               	addwf	btemp,f,c
  9768  004372  0EFD               	movlw	-3
  9769  004374  50E3               	movf	plusw1,w,c
  9770  004376  2239               	addwfc	btemp+1,f,c
  9771                           
  9772                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9773  004378  0EF6               	movlw	246
  9774  00437A  26E1               	addwf	fsr1l,f,c
  9775  00437C  0EFF               	movlw	255
  9776  00437E  22E2               	addwfc	fsr1h,f,c
  9777  004380  0012               	return		;funcret
  9778  004382                     __end_of_pad:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function _strlen *****************
  9782 ;; Defined at:
  9783 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  s               2  [STACK] PTR const unsigned char 
  9786 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9787 ;;		 -> STR_3(6), V(86), 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;  a               2  [STACK] PTR const unsigned char 
  9790 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9791 ;;		 -> STR_3(6), V(86), 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2  [STACK] unsigned int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;Total ram usage:        0 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    3
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_eaDogM_WriteString
  9812 ;;		_pad
  9813 ;;		_stoa
  9814 ;; This function uses a reentrant model
  9815 ;;
  9816                           
  9817                           	psect	text42
  9818  004938                     __ptext42:
  9819                           	opt callstack 0
  9820  004938                     _strlen:
  9821                           	opt callstack 0
  9822                           
  9823                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9824  004938  52E6               	movf	postinc1,f,c
  9825  00493A  52E6               	movf	postinc1,f,c
  9826                           
  9827                           ;stkvar	_s @ sp[(-2)+-2]
  9828                           
  9829                           ;incstack = 0
  9830  00493C  0EFC               	movlw	-4
  9831  00493E  006F FF8C  F042    	movff	plusw1,btemp+10
  9832  004944  0EFD               	movlw	-3
  9833  004946  006F FF8C  F043    	movff	plusw1,btemp+11
  9834                           
  9835                           ;stkvar	_a @ sp[(-2)+0]
  9836  00494C  0EFF               	movlw	-1
  9837  00494E  0060  F10F  FFE3   	movff	btemp+11,plusw1
  9838  004954  0EFE               	movlw	-2
  9839  004956  0060  F10B  FFE3   	movff	btemp+10,plusw1
  9840  00495C  D011               	goto	l4626
  9841  00495E                     l4624:
  9842                           
  9843                           ;stkvar	_s @ sp[(-2)+-2]
  9844  00495E  0EFC               	movlw	-4
  9845  004960  50E3               	movf	plusw1,w,c
  9846  004962  0F01               	addlw	1
  9847  004964  6E38               	movwf	btemp,c
  9848  004966  0EFC               	movlw	-4
  9849  004968  0060  F0E3  FFE3   	movff	btemp,plusw1
  9850  00496E  6A38               	clrf	btemp,c
  9851  004970  0EFD               	movlw	-3
  9852  004972  50E3               	movf	plusw1,w,c
  9853  004974  2038               	addwfc	btemp,w,c
  9854  004976  6E38               	movwf	btemp,c
  9855  004978  0EFD               	movlw	-3
  9856  00497A  0060  F0E3  FFE3   	movff	btemp,plusw1
  9857  004980                     l4626:
  9858                           
  9859                           ;stkvar	_s @ sp[(-2)+-2]
  9860  004980  0EFC               	movlw	-4
  9861  004982  006F FF8F FFF6     	movff	plusw1,tblptrl
  9862  004988  0EFD               	movlw	-3
  9863  00498A  006F FF8F FFF7     	movff	plusw1,tblptrh
  9864  004990  0E00               	movlw	low (__smallconst shr (0+16))
  9865  004992  6EF8               	movwf	tblptru,c
  9866  004994  0E1F               	movlw	(high __ramtop+-1)
  9867  004996  64F7               	cpfsgt	tblptrh,c
  9868  004998  D003               	bra	u1877
  9869  00499A  0008               	tblrd		*
  9870  00499C  50F5               	movf	tablat,w,c
  9871  00499E  D007               	bra	u1870
  9872  0049A0                     u1877:
  9873  0049A0  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9874  0049A6  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9875  0049AC  50EF               	movf	indf0,w,c
  9876  0049AE                     u1870:
  9877  0049AE  0900               	iorlw	0
  9878  0049B0  A4D8               	btfss	status,2,c
  9879  0049B2  D7D5               	goto	l4624
  9880                           
  9881                           ;stkvar	_a @ sp[(-2)+0]
  9882                           ;stkvar	_s @ sp[(-2)+-2]
  9883  0049B4  0EFC               	movlw	-4
  9884  0049B6  006F FF8C  F038    	movff	plusw1,btemp
  9885  0049BC  0EFD               	movlw	-3
  9886  0049BE  006F FF8C  F039    	movff	plusw1,btemp+1
  9887  0049C4  0EFE               	movlw	-2
  9888  0049C6  50E3               	movf	plusw1,w,c
  9889  0049C8  5E38               	subwf	btemp,f,c
  9890  0049CA  0EFF               	movlw	-1
  9891  0049CC  50E3               	movf	plusw1,w,c
  9892  0049CE  5A39               	subwfb	btemp+1,f,c
  9893                           
  9894                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9895  0049D0  52E5               	movf	postdec1,f,c
  9896  0049D2  52E5               	movf	postdec1,f,c
  9897  0049D4  52E5               	movf	postdec1,f,c
  9898  0049D6  52E5               	movf	postdec1,f,c
  9899  0049D8  0012               	return		;funcret
  9900  0049DA                     __end_of_strlen:
  9901                           	opt callstack 0
  9902                           
  9903 ;; *************** function _fputs *****************
  9904 ;; Defined at:
  9905 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  s               2  [STACK] PTR const unsigned char 
  9908 ;;		 -> dbuf(32), 
  9909 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9910 ;;		 -> f(5), NULL(0), 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  i               2  [STACK] int 
  9913 ;;  c               1  [STACK] unsigned char 
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  2  [STACK] int 
  9916 ;; Registers used:
  9917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9918 ;; Tracked objects:
  9919 ;;		On entry : 0/1
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9927 ;;Total ram usage:        0 bytes
  9928 ;; Hardware stack levels used:    1
  9929 ;; Hardware stack levels required when called:    6
  9930 ;; This function calls:
  9931 ;;		_fputc
  9932 ;; This function is called by:
  9933 ;;		_pad
  9934 ;; This function uses a reentrant model
  9935 ;;
  9936                           
  9937                           	psect	text43
  9938  004BAE                     __ptext43:
  9939                           	opt callstack 0
  9940  004BAE                     _fputs:
  9941                           	opt callstack 0
  9942                           
  9943                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9944  004BAE  52E6               	movf	postinc1,f,c
  9945  004BB0  52E6               	movf	postinc1,f,c
  9946  004BB2  52E6               	movf	postinc1,f,c
  9947                           
  9948                           ;stkvar	_i @ sp[(-3)+0]
  9949                           
  9950                           ;incstack = 0
  9951  004BB4  0EFD               	movlw	-3
  9952  004BB6  6AE3               	clrf	plusw1,c
  9953  004BB8  0EFE               	movlw	-2
  9954  004BBA  6AE3               	clrf	plusw1,c
  9955  004BBC  D01F               	goto	l6392
  9956  004BBE                     l6388:
  9957                           
  9958                           ;stkvar	_fp @ sp[(-3)+-4]
  9959  004BBE  0EF9               	movlw	-7
  9960  004BC0  006F FF8F FFE6     	movff	plusw1,postinc1
  9961  004BC6  006F FF8F FFE6     	movff	plusw1,postinc1
  9962                           
  9963                           ;stkvar	_c @ sp[(-5)+2]
  9964  004BCC  0EFD               	movlw	-3
  9965  004BCE  50E3               	movf	plusw1,w,c
  9966  004BD0  6EE6               	movwf	postinc1,c
  9967  004BD2  0E00               	movlw	0
  9968  004BD4  6EE6               	movwf	postinc1,c
  9969  004BD6  ECC1  F021         	call	_fputc	;wreg free
  9970                           
  9971                           ;stkvar	_i @ sp[(-3)+0]
  9972  004BDA  0EFD               	movlw	-3
  9973  004BDC  50E3               	movf	plusw1,w,c
  9974  004BDE  0F01               	addlw	1
  9975  004BE0  6E38               	movwf	btemp,c
  9976  004BE2  0EFD               	movlw	-3
  9977  004BE4  0060  F0E3  FFE3   	movff	btemp,plusw1
  9978  004BEA  6A38               	clrf	btemp,c
  9979  004BEC  0EFE               	movlw	-2
  9980  004BEE  50E3               	movf	plusw1,w,c
  9981  004BF0  2038               	addwfc	btemp,w,c
  9982  004BF2  6E38               	movwf	btemp,c
  9983  004BF4  0EFE               	movlw	-2
  9984  004BF6  0060  F0E3  FFE3   	movff	btemp,plusw1
  9985  004BFC                     l6392:
  9986                           
  9987                           ;stkvar	_i @ sp[(-3)+0]
  9988  004BFC  0EFD               	movlw	-3
  9989  004BFE  006F FF8C  F042    	movff	plusw1,btemp+10
  9990  004C04  0EFE               	movlw	-2
  9991  004C06  006F FF8C  F043    	movff	plusw1,btemp+11
  9992                           
  9993                           ;stkvar	_s @ sp[(-3)+-2]
  9994  004C0C  0EFB               	movlw	-5
  9995  004C0E  006F FF8C  F040    	movff	plusw1,btemp+8
  9996  004C14  0EFC               	movlw	-4
  9997  004C16  006F FF8C  F041    	movff	plusw1,btemp+9
  9998  004C1C  5042               	movf	btemp+10,w,c
  9999  004C1E  2440               	addwf	btemp+8,w,c
 10000  004C20  6ED9               	movwf	fsr2l,c
 10001  004C22  5043               	movf	btemp+11,w,c
 10002  004C24  2041               	addwfc	btemp+9,w,c
 10003  004C26  6EDA               	movwf	fsr2h,c
 10004  004C28  50DF               	movf	indf2,w,c
 10005  004C2A  6E43               	movwf	btemp+11,c
 10006                           
 10007                           ;stkvar	_c @ sp[(-3)+2]
 10008  004C2C  0EFF               	movlw	-1
 10009  004C2E  0060  F10F  FFE3   	movff	btemp+11,plusw1
 10010  004C34  0EFF               	movlw	-1
 10011  004C36  50E3               	movf	plusw1,w,c
 10012  004C38  A4D8               	btfss	status,2,c
 10013  004C3A  D7C1               	goto	l6388
 10014                           
 10015                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10016  004C3C  0EF9               	movlw	249
 10017  004C3E  26E1               	addwf	fsr1l,f,c
 10018  004C40  0EFF               	movlw	255
 10019  004C42  22E2               	addwfc	fsr1h,f,c
 10020  004C44  0012               	return		;funcret
 10021  004C46                     __end_of_fputs:
 10022                           	opt callstack 0
 10023                           
 10024 ;; *************** function _fputc *****************
 10025 ;; Defined at:
 10026 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  c               2  [STACK] int 
 10029 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10030 ;;		 -> f(5), NULL(0), 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  2  [STACK] int 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;Total ram usage:        0 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    5
 10049 ;; This function calls:
 10050 ;;		_putch
 10051 ;; This function is called by:
 10052 ;;		_pad
 10053 ;;		_stoa
 10054 ;;		_vfpfcnvrt
 10055 ;;		_fputs
 10056 ;; This function uses a reentrant model
 10057 ;;
 10058                           
 10059                           	psect	text44
 10060  004382                     __ptext44:
 10061                           	opt callstack 0
 10062  004382                     _fputc:
 10063                           	opt callstack 21
 10064                           
 10065                           ;stkvar	_fp @ sp[(0)+-4]
 10066                           
 10067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10068                           ;incstack = 0
 10069  004382  0EFC               	movlw	-4
 10070  004384  006F FF8C  F038    	movff	plusw1,btemp
 10071  00438A  0EFD               	movlw	-3
 10072  00438C  50E3               	movf	plusw1,w,c
 10073  00438E  1038               	iorwf	btemp,w,c
 10074  004390  B4D8               	btfsc	status,2,c
 10075  004392  D009               	goto	u3480
 10076                           
 10077                           ;stkvar	_fp @ sp[(0)+-4]
 10078  004394  0EFC               	movlw	-4
 10079  004396  006F FF8C  F038    	movff	plusw1,btemp
 10080  00439C  0EFD               	movlw	-3
 10081  00439E  50E3               	movf	plusw1,w,c
 10082  0043A0  1038               	iorwf	btemp,w,c
 10083  0043A2  A4D8               	btfss	status,2,c
 10084  0043A4  D006               	goto	l6378
 10085  0043A6                     u3480:
 10086                           
 10087                           ;stkvar	_c @ sp[(0)+-2]
 10088  0043A6  0EFE               	movlw	-2
 10089  0043A8  50E3               	movf	plusw1,w,c
 10090  0043AA  6EE6               	movwf	postinc1,c
 10091  0043AC  EC3F  F02C         	call	_putch	;wreg free
 10092  0043B0  D069               	goto	l2441
 10093  0043B2                     l6378:
 10094                           
 10095                           ;stkvar	_fp @ sp[(0)+-4]
 10096  0043B2  0EFC               	movlw	-4
 10097  0043B4  006F FF8C  F042    	movff	plusw1,btemp+10
 10098  0043BA  0EFD               	movlw	-3
 10099  0043BC  006F FF8C  F043    	movff	plusw1,btemp+11
 10100  0043C2  0E03               	movlw	3
 10101  0043C4  2442               	addwf	btemp+10,w,c
 10102  0043C6  6ED9               	movwf	fsr2l,c
 10103  0043C8  0E00               	movlw	0
 10104  0043CA  2043               	addwfc	btemp+11,w,c
 10105  0043CC  6EDA               	movwf	fsr2h,c
 10106  0043CE  50DE               	movf	postinc2,w,c
 10107  0043D0  10DE               	iorwf	postinc2,w,c
 10108  0043D2  B4D8               	btfsc	status,2,c
 10109  0043D4  D026               	goto	u3500
 10110                           
 10111                           ;stkvar	_fp @ sp[(0)+-4]
 10112  0043D6  0EFC               	movlw	-4
 10113  0043D8  006F FF8C  F042    	movff	plusw1,btemp+10
 10114  0043DE  0EFD               	movlw	-3
 10115  0043E0  006F FF8C  F043    	movff	plusw1,btemp+11
 10116  0043E6  0E03               	movlw	3
 10117  0043E8  2442               	addwf	btemp+10,w,c
 10118  0043EA  6ED9               	movwf	fsr2l,c
 10119  0043EC  0E00               	movlw	0
 10120  0043EE  2043               	addwfc	btemp+11,w,c
 10121  0043F0  6EDA               	movwf	fsr2h,c
 10122                           
 10123                           ;stkvar	_fp @ sp[(0)+-4]
 10124  0043F2  0EFC               	movlw	-4
 10125  0043F4  006F FF8C  F042    	movff	plusw1,btemp+10
 10126  0043FA  0EFD               	movlw	-3
 10127  0043FC  006F FF8C  F043    	movff	plusw1,btemp+11
 10128  004402  0E01               	movlw	1
 10129  004404  2442               	addwf	btemp+10,w,c
 10130  004406  6EE9               	movwf	fsr0l,c
 10131  004408  0E00               	movlw	0
 10132  00440A  2043               	addwfc	btemp+11,w,c
 10133  00440C  6EEA               	movwf	fsr0h,c
 10134  00440E  50DE               	movf	postinc2,w,c
 10135  004410  5CEE               	subwf	postinc0,w,c
 10136  004412  50EE               	movf	postinc0,w,c
 10137  004414  0A80               	xorlw	128
 10138  004416  6E38               	movwf	btemp,c
 10139  004418  50DE               	movf	postinc2,w,c
 10140  00441A  0A80               	xorlw	128
 10141  00441C  5838               	subwfb	btemp,w,c
 10142  00441E  B0D8               	btfsc	status,0,c
 10143  004420  D031               	goto	l2441
 10144  004422                     u3500:
 10145                           
 10146                           ;stkvar	_c @ sp[(0)+-2]
 10147                           ;stkvar	_fp @ sp[(0)+-4]
 10148  004422  0EFC               	movlw	-4
 10149  004424  006F FF8C  F042    	movff	plusw1,btemp+10
 10150  00442A  0EFD               	movlw	-3
 10151  00442C  006F FF8C  F043    	movff	plusw1,btemp+11
 10152  004432  0E01               	movlw	1
 10153  004434  2442               	addwf	btemp+10,w,c
 10154  004436  6ED9               	movwf	fsr2l,c
 10155  004438  0E00               	movlw	0
 10156  00443A  2043               	addwfc	btemp+11,w,c
 10157  00443C  6EDA               	movwf	fsr2h,c
 10158  00443E  50DF               	movf	indf2,w,c
 10159  004440  6E43               	movwf	btemp+11,c
 10160                           
 10161                           ;stkvar	_fp @ sp[(0)+-4]
 10162  004442  0EFC               	movlw	-4
 10163  004444  006F FF8F FFD9     	movff	plusw1,fsr2l
 10164  00444A  0EFD               	movlw	-3
 10165  00444C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10166  004452  50DF               	movf	indf2,w,c
 10167  004454  2443               	addwf	btemp+11,w,c
 10168  004456  6ED9               	movwf	fsr2l,c
 10169  004458  6ADA               	clrf	fsr2h,c
 10170  00445A  0EFE               	movlw	-2
 10171  00445C  006F FF8F FFDF     	movff	plusw1,indf2
 10172                           
 10173                           ;stkvar	_fp @ sp[(0)+-4]
 10174  004462  0EFC               	movlw	-4
 10175  004464  006F FF8C  F042    	movff	plusw1,btemp+10
 10176  00446A  0EFD               	movlw	-3
 10177  00446C  006F FF8C  F043    	movff	plusw1,btemp+11
 10178  004472  0E01               	movlw	1
 10179  004474  2442               	addwf	btemp+10,w,c
 10180  004476  6ED9               	movwf	fsr2l,c
 10181  004478  0E00               	movlw	0
 10182  00447A  2043               	addwfc	btemp+11,w,c
 10183  00447C  6EDA               	movwf	fsr2h,c
 10184  00447E  2ADE               	incf	postinc2,f,c
 10185  004480  0E00               	movlw	0
 10186  004482  22DD               	addwfc	postdec2,f,c
 10187  004484                     l2441:
 10188                           
 10189                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10190  004484  52E5               	movf	postdec1,f,c
 10191  004486  52E5               	movf	postdec1,f,c
 10192  004488  52E5               	movf	postdec1,f,c
 10193  00448A  52E5               	movf	postdec1,f,c
 10194  00448C  0012               	return		;funcret
 10195  00448E                     __end_of_fputc:
 10196                           	opt callstack 0
 10197                           
 10198 ;; *************** function _putch *****************
 10199 ;; Defined at:
 10200 ;;		line 138 in file "eadog.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  c               1  [STACK] unsigned char 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1  [STACK] void 
 10207 ;; Registers used:
 10208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    4
 10221 ;; This function calls:
 10222 ;;		_ringBufS_put_dma
 10223 ;; This function is called by:
 10224 ;;		_fputc
 10225 ;; This function uses a reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text45
 10229  00587E                     __ptext45:
 10230                           	opt callstack 0
 10231  00587E                     _putch:
 10232                           	opt callstack 21
 10233                           
 10234                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10235                           ;stkvar	_c @ sp[(0)+-1]
 10236                           
 10237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10238                           ;incstack = 0
 10239  00587E  0EFF               	movlw	-1
 10240  005880  50E3               	movf	plusw1,w,c
 10241  005882  6EE6               	movwf	postinc1,c
 10242  005884  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10243  00588A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10244  005890  EC47  F024         	call	_ringBufS_put_dma	;wreg free
 10245                           
 10246                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10247  005894  52E5               	movf	postdec1,f,c
 10248  005896  0012               	return		;funcret
 10249  005898                     __end_of_putch:
 10250                           	opt callstack 0
 10251                           
 10252 ;; *************** function _ringBufS_put_dma *****************
 10253 ;; Defined at:
 10254 ;;		line 67 in file "ringbufs.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10257 ;;		 -> ring_buf1(67), 
 10258 ;;  c               1  [STACK] const unsigned char 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1  [STACK] void 
 10263 ;; Registers used:
 10264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10274 ;;Total ram usage:        0 bytes
 10275 ;; Hardware stack levels used:    1
 10276 ;; Hardware stack levels required when called:    3
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_putch
 10281 ;; This function uses a reentrant model
 10282 ;;
 10283                           
 10284                           	psect	text46
 10285  00488E                     __ptext46:
 10286                           	opt callstack 0
 10287  00488E                     _ringBufS_put_dma:
 10288                           	opt callstack 21
 10289                           
 10290                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10291                           ;stkvar	__this @ sp[(0)+-2]
 10292                           
 10293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10294                           ;incstack = 0
 10295  00488E  0EFE               	movlw	-2
 10296  004890  006F FF8C  F042    	movff	plusw1,btemp+10
 10297  004896  0EFF               	movlw	-1
 10298  004898  006F FF8C  F043    	movff	plusw1,btemp+11
 10299  00489E  0E42               	movlw	66
 10300  0048A0  2442               	addwf	btemp+10,w,c
 10301  0048A2  6ED9               	movwf	fsr2l,c
 10302  0048A4  0E00               	movlw	0
 10303  0048A6  2043               	addwfc	btemp+11,w,c
 10304  0048A8  6EDA               	movwf	fsr2h,c
 10305  0048AA  0E40               	movlw	64
 10306  0048AC  60DF               	cpfslt	indf2,c
 10307  0048AE  D040               	goto	l1434
 10308                           
 10309                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10310                           ;stkvar	_c @ sp[(0)+-3]
 10311                           ;stkvar	__this @ sp[(0)+-2]
 10312  0048B0  0EFE               	movlw	-2
 10313  0048B2  006F FF8C  F042    	movff	plusw1,btemp+10
 10314  0048B8  0EFF               	movlw	-1
 10315  0048BA  006F FF8C  F043    	movff	plusw1,btemp+11
 10316  0048C0  0E40               	movlw	64
 10317  0048C2  2442               	addwf	btemp+10,w,c
 10318  0048C4  6ED9               	movwf	fsr2l,c
 10319  0048C6  0E00               	movlw	0
 10320  0048C8  2043               	addwfc	btemp+11,w,c
 10321  0048CA  6EDA               	movwf	fsr2h,c
 10322  0048CC  50DF               	movf	indf2,w,c
 10323  0048CE  6E43               	movwf	btemp+11,c
 10324                           
 10325                           ;stkvar	__this @ sp[(0)+-2]
 10326  0048D0  0EFE               	movlw	-2
 10327  0048D2  006F FF8C  F040    	movff	plusw1,btemp+8
 10328  0048D8  0EFF               	movlw	-1
 10329  0048DA  006F FF8C  F041    	movff	plusw1,btemp+9
 10330  0048E0  5043               	movf	btemp+11,w,c
 10331  0048E2  2440               	addwf	btemp+8,w,c
 10332  0048E4  6ED9               	movwf	fsr2l,c
 10333  0048E6  0E00               	movlw	0
 10334  0048E8  2041               	addwfc	btemp+9,w,c
 10335  0048EA  6EDA               	movwf	fsr2h,c
 10336  0048EC  0EFD               	movlw	-3
 10337  0048EE  006F FF8F FFDF     	movff	plusw1,indf2
 10338                           
 10339                           ;ringbufs.c: 71:   ++_this->head;
 10340                           ;stkvar	__this @ sp[(0)+-2]
 10341  0048F4  0EFE               	movlw	-2
 10342  0048F6  006F FF8C  F042    	movff	plusw1,btemp+10
 10343  0048FC  0EFF               	movlw	-1
 10344  0048FE  006F FF8C  F043    	movff	plusw1,btemp+11
 10345  004904  0E40               	movlw	64
 10346  004906  2442               	addwf	btemp+10,w,c
 10347  004908  6ED9               	movwf	fsr2l,c
 10348  00490A  0E00               	movlw	0
 10349  00490C  2043               	addwfc	btemp+11,w,c
 10350  00490E  6EDA               	movwf	fsr2h,c
 10351  004910  2ADF               	incf	indf2,f,c
 10352                           
 10353                           ;ringbufs.c: 72:   ++_this->count;
 10354                           ;stkvar	__this @ sp[(0)+-2]
 10355  004912  0EFE               	movlw	-2
 10356  004914  006F FF8C  F042    	movff	plusw1,btemp+10
 10357  00491A  0EFF               	movlw	-1
 10358  00491C  006F FF8C  F043    	movff	plusw1,btemp+11
 10359  004922  0E42               	movlw	66
 10360  004924  2442               	addwf	btemp+10,w,c
 10361  004926  6ED9               	movwf	fsr2l,c
 10362  004928  0E00               	movlw	0
 10363  00492A  2043               	addwfc	btemp+11,w,c
 10364  00492C  6EDA               	movwf	fsr2h,c
 10365  00492E  2ADF               	incf	indf2,f,c
 10366  004930                     l1434:
 10367                           
 10368                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10369  004930  52E5               	movf	postdec1,f,c
 10370  004932  52E5               	movf	postdec1,f,c
 10371  004934  52E5               	movf	postdec1,f,c
 10372  004936  0012               	return		;funcret
 10373  004938                     __end_of_ringBufS_put_dma:
 10374                           	opt callstack 0
 10375                           
 10376 ;; *************** function _SYSTEM_Initialize *****************
 10377 ;; Defined at:
 10378 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1  [STACK] void 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 3F/3C
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    5
 10399 ;; This function calls:
 10400 ;;		_ADCC_Initialize
 10401 ;;		_CLC1_Initialize
 10402 ;;		_CLKREF_Initialize
 10403 ;;		_DMA1_Initialize
 10404 ;;		_DSM_Initialize
 10405 ;;		_EXT_INT_Initialize
 10406 ;;		_INTERRUPT_Initialize
 10407 ;;		_NCO1_Initialize
 10408 ;;		_OSCILLATOR_Initialize
 10409 ;;		_PIN_MANAGER_Initialize
 10410 ;;		_PMD_Initialize
 10411 ;;		_SPI1_Initialize
 10412 ;;		_TMR5_Initialize
 10413 ;;		_TMR6_Initialize
 10414 ;;		_UART1_Initialize
 10415 ;;		_UART2_Initialize
 10416 ;; This function is called by:
 10417 ;;		_main
 10418 ;; This function uses a reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text47
 10422  005166                     __ptext47:
 10423                           	opt callstack 0
 10424  005166                     _SYSTEM_Initialize:
 10425                           	opt callstack 25
 10426                           
 10427                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10428                           
 10429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10430                           ;incstack = 0
 10431  005166  ECE5  F026         	call	_INTERRUPT_Initialize	;wreg free
 10432                           
 10433                           ; BSR set to: 57
 10434                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10435  00516A  EC7C  F02C         	call	_PMD_Initialize	;wreg free
 10436                           
 10437                           ; BSR set to: 57
 10438                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10439  00516E  ECED  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10440                           
 10441                           ; BSR set to: 58
 10442                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10443  005172  EC71  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10444                           
 10445                           ; BSR set to: 57
 10446                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10447  005176  EC25  F028         	call	_ADCC_Initialize	;wreg free
 10448                           
 10449                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10450  00517A  EC23  F02C         	call	_NCO1_Initialize	;wreg free
 10451                           
 10452                           ; BSR set to: 63
 10453                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10454  00517E  ECFF  F027         	call	_EXT_INT_Initialize	;wreg free
 10455                           
 10456                           ; BSR set to: 57
 10457                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10458  005182  EC93  F02A         	call	_TMR6_Initialize	;wreg free
 10459                           
 10460                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10461  005186  EC80  F02B         	call	_CLC1_Initialize	;wreg free
 10462                           
 10463                           ; BSR set to: 60
 10464                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10465  00518A  EC6D  F028         	call	_TMR5_Initialize	;wreg free
 10466                           
 10467                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10468  00518E  EC31  F02C         	call	_DSM_Initialize	;wreg free
 10469                           
 10470                           ; BSR set to: 60
 10471                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10472  005192  EC18  F027         	call	_UART1_Initialize	;wreg free
 10473                           
 10474                           ; BSR set to: 57
 10475                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10476  005196  EC7B  F027         	call	_UART2_Initialize	;wreg free
 10477                           
 10478                           ; BSR set to: 57
 10479                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10480  00519A  EC66  F02C         	call	_SPI1_Initialize	;wreg free
 10481                           
 10482                           ; BSR set to: 61
 10483                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10484  00519E  ECB0  F026         	call	_DMA1_Initialize	;wreg free
 10485                           
 10486                           ; BSR set to: 59
 10487                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10488  0051A2  ECAD  F02C         	call	_CLKREF_Initialize	;wreg free
 10489                           
 10490                           ; BSR set to: 60
 10491                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10492  0051A6  0012               	return		;funcret
 10493  0051A8                     __end_of_SYSTEM_Initialize:
 10494                           	opt callstack 0
 10495                           
 10496 ;; *************** function _UART2_Initialize *****************
 10497 ;; Defined at:
 10498 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;		None
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;		None
 10503 ;; Return value:  Size  Location     Type
 10504 ;;                  1  [STACK] void 
 10505 ;; Registers used:
 10506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10507 ;; Tracked objects:
 10508 ;;		On entry : 3F/39
 10509 ;;		On exit  : 3F/39
 10510 ;;		Unchanged: 0/0
 10511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;Total ram usage:        0 bytes
 10517 ;; Hardware stack levels used:    1
 10518 ;; Hardware stack levels required when called:    4
 10519 ;; This function calls:
 10520 ;;		_UART2_SetRxInterruptHandler
 10521 ;;		_UART2_SetTxInterruptHandler
 10522 ;; This function is called by:
 10523 ;;		_SYSTEM_Initialize
 10524 ;; This function uses a reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text48
 10528  004EF6                     __ptext48:
 10529                           	opt callstack 0
 10530  004EF6                     _UART2_Initialize:
 10531                           	opt callstack 25
 10532                           
 10533                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10534                           
 10535                           ; BSR set to: 60
 10536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10537                           ;incstack = 0
 10538  004EF6  0139               	movlb	57	; () banked
 10539  004EF8  9596               	bcf	150,2,b	;volatile
 10540                           
 10541                           ; BSR set to: 57
 10542                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10543  004EFA  0EEC               	movlw	low _UART2_Receive_ISR
 10544  004EFC  6EE6               	movwf	postinc1,c
 10545  004EFE  0E57               	movlw	high _UART2_Receive_ISR
 10546  004F00  6EE6               	movwf	postinc1,c
 10547  004F02  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10548  004F04  6EE6               	movwf	postinc1,c
 10549  004F06  EC57  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10550                           
 10551                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10552  004F0A  0139               	movlb	57	; () banked
 10553  004F0C  9796               	bcf	150,3,b	;volatile
 10554                           
 10555                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10556  004F0E  0E62               	movlw	low _UART2_Transmit_ISR
 10557  004F10  6EE6               	movwf	postinc1,c
 10558  004F12  0E53               	movlw	high _UART2_Transmit_ISR
 10559  004F14  6EE6               	movwf	postinc1,c
 10560  004F16  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10561  004F18  6EE6               	movwf	postinc1,c
 10562  004F1A  EC43  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10563                           
 10564                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10565  004F1E  013D               	movlb	61	; () banked
 10566  004F20  6BD4               	clrf	212,b	;volatile
 10567                           
 10568                           ; BSR set to: 61
 10569                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10570  004F22  6BD6               	clrf	214,b	;volatile
 10571                           
 10572                           ; BSR set to: 61
 10573                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10574  004F24  6BD8               	clrf	216,b	;volatile
 10575                           
 10576                           ; BSR set to: 61
 10577                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10578  004F26  0EB0               	movlw	176
 10579  004F28  6FDA               	movwf	218,b	;volatile
 10580                           
 10581                           ; BSR set to: 61
 10582                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10583  004F2A  0E80               	movlw	128
 10584  004F2C  6FDB               	movwf	219,b	;volatile
 10585                           
 10586                           ; BSR set to: 61
 10587                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10588  004F2E  6BDC               	clrf	220,b	;volatile
 10589                           
 10590                           ; BSR set to: 61
 10591                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10592  004F30  0E82               	movlw	130
 10593  004F32  6FDD               	movwf	221,b	;volatile
 10594                           
 10595                           ; BSR set to: 61
 10596                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10597  004F34  0E06               	movlw	6
 10598  004F36  6FDE               	movwf	222,b	;volatile
 10599                           
 10600                           ; BSR set to: 61
 10601                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10602  004F38  6BDF               	clrf	223,b	;volatile
 10603                           
 10604                           ; BSR set to: 61
 10605                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10606  004F3A  6BE0               	clrf	224,b	;volatile
 10607                           
 10608                           ; BSR set to: 61
 10609                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10610  004F3C  6BE1               	clrf	225,b	;volatile
 10611                           
 10612                           ; BSR set to: 61
 10613                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10614  004F3E  6BE2               	clrf	226,b	;volatile
 10615                           
 10616                           ; BSR set to: 61
 10617                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10618  004F40  6A31               	clrf	_uart2TxHead,c	;volatile
 10619                           
 10620                           ; BSR set to: 61
 10621                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10622  004F42  6A30               	clrf	_uart2TxTail,c	;volatile
 10623                           
 10624                           ; BSR set to: 61
 10625                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10626  004F44  0E40               	movlw	64
 10627  004F46  6E2F               	movwf	_uart2TxBufferRemaining,c	;volatile
 10628                           
 10629                           ; BSR set to: 61
 10630                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10631  004F48  6A2E               	clrf	_uart2RxHead,c	;volatile
 10632                           
 10633                           ; BSR set to: 61
 10634                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10635  004F4A  6A2D               	clrf	_uart2RxTail,c	;volatile
 10636                           
 10637                           ; BSR set to: 61
 10638                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10639  004F4C  6A2C               	clrf	_uart2RxCount,c	;volatile
 10640                           
 10641                           ; BSR set to: 61
 10642                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10643  004F4E  0139               	movlb	57	; () banked
 10644  004F50  8596               	bsf	150,2,b	;volatile
 10645                           
 10646                           ; BSR set to: 57
 10647                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10648  004F52  0012               	return		;funcret
 10649  004F54                     __end_of_UART2_Initialize:
 10650                           	opt callstack 0
 10651                           
 10652 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10653 ;; Defined at:
 10654 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10657 ;;		 -> UART2_Transmit_ISR(1), 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1  [STACK] void 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10664 ;; Tracked objects:
 10665 ;;		On entry : 3F/39
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10673 ;;Total ram usage:        0 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    3
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_UART2_Initialize
 10680 ;; This function uses a reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text49
 10684  005486                     __ptext49:
 10685                           	opt callstack 0
 10686  005486                     _UART2_SetTxInterruptHandler:
 10687                           	opt callstack 25
 10688                           
 10689                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10690                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10691                           
 10692                           ; BSR set to: 57
 10693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10694                           ;incstack = 0
 10695  005486  50E1               	movf	fsr1l,w,c
 10696  005488  0FFD               	addlw	-3
 10697  00548A  6ED9               	movwf	fsr2l,c
 10698  00548C  50E2               	movf	fsr1h,w,c
 10699  00548E  6EDA               	movwf	fsr2h,c
 10700  005490  0EFF               	movlw	255
 10701  005492  22DA               	addwfc	fsr2h,f,c
 10702  005494  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 10703  00549A  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 10704  0054A0  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 10705                           
 10706                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10707  0054A6  52E5               	movf	postdec1,f,c
 10708  0054A8  52E5               	movf	postdec1,f,c
 10709  0054AA  52E5               	movf	postdec1,f,c
 10710  0054AC  0012               	return		;funcret
 10711  0054AE                     __end_of_UART2_SetTxInterruptHandler:
 10712                           	opt callstack 0
 10713                           
 10714 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10715 ;; Defined at:
 10716 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10719 ;;		 -> UART2_Receive_ISR(1), 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1  [STACK] void 
 10724 ;; Registers used:
 10725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10726 ;; Tracked objects:
 10727 ;;		On entry : 3F/39
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    3
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_UART2_Initialize
 10742 ;; This function uses a reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text50
 10746  0054AE                     __ptext50:
 10747                           	opt callstack 0
 10748  0054AE                     _UART2_SetRxInterruptHandler:
 10749                           	opt callstack 25
 10750                           
 10751                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10752                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10753                           
 10754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10755                           ;incstack = 0
 10756  0054AE  50E1               	movf	fsr1l,w,c
 10757  0054B0  0FFD               	addlw	-3
 10758  0054B2  6ED9               	movwf	fsr2l,c
 10759  0054B4  50E2               	movf	fsr1h,w,c
 10760  0054B6  6EDA               	movwf	fsr2h,c
 10761  0054B8  0EFF               	movlw	255
 10762  0054BA  22DA               	addwfc	fsr2h,f,c
 10763  0054BC  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 10764  0054C2  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 10765  0054C8  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 10766                           
 10767                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10768  0054CE  52E5               	movf	postdec1,f,c
 10769  0054D0  52E5               	movf	postdec1,f,c
 10770  0054D2  52E5               	movf	postdec1,f,c
 10771  0054D4  0012               	return		;funcret
 10772  0054D6                     __end_of_UART2_SetRxInterruptHandler:
 10773                           	opt callstack 0
 10774                           
 10775 ;; *************** function _UART1_Initialize *****************
 10776 ;; Defined at:
 10777 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1  [STACK] void 
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10786 ;; Tracked objects:
 10787 ;;		On entry : 3F/3C
 10788 ;;		On exit  : 3F/39
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    4
 10798 ;; This function calls:
 10799 ;;		_UART1_SetRxInterruptHandler
 10800 ;;		_UART1_SetTxInterruptHandler
 10801 ;; This function is called by:
 10802 ;;		_SYSTEM_Initialize
 10803 ;; This function uses a reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text51
 10807  004E30                     __ptext51:
 10808                           	opt callstack 0
 10809  004E30                     _UART1_Initialize:
 10810                           	opt callstack 25
 10811                           
 10812                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10813                           
 10814                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10815                           ;incstack = 0
 10816  004E30  0139               	movlb	57	; () banked
 10817  004E32  9793               	bcf	147,3,b	;volatile
 10818                           
 10819                           ; BSR set to: 57
 10820                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10821  004E34  0ECC               	movlw	low _UART1_Receive_ISR
 10822  004E36  6EE6               	movwf	postinc1,c
 10823  004E38  0E57               	movlw	high _UART1_Receive_ISR
 10824  004E3A  6EE6               	movwf	postinc1,c
 10825  004E3C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10826  004E3E  6EE6               	movwf	postinc1,c
 10827  004E40  EC7F  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10828                           
 10829                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10830  004E44  0139               	movlb	57	; () banked
 10831  004E46  9993               	bcf	147,4,b	;volatile
 10832                           
 10833                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10834  004E48  0E36               	movlw	low _UART1_Transmit_ISR
 10835  004E4A  6EE6               	movwf	postinc1,c
 10836  004E4C  0E53               	movlw	high _UART1_Transmit_ISR
 10837  004E4E  6EE6               	movwf	postinc1,c
 10838  004E50  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10839  004E52  6EE6               	movwf	postinc1,c
 10840  004E54  EC6B  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10841                           
 10842                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10843  004E58  013D               	movlb	61	; () banked
 10844  004E5A  6BEC               	clrf	236,b	;volatile
 10845                           
 10846                           ; BSR set to: 61
 10847                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10848  004E5C  6BED               	clrf	237,b	;volatile
 10849                           
 10850                           ; BSR set to: 61
 10851                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10852  004E5E  6BEE               	clrf	238,b	;volatile
 10853                           
 10854                           ; BSR set to: 61
 10855                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10856  004E60  6BEF               	clrf	239,b	;volatile
 10857                           
 10858                           ; BSR set to: 61
 10859                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10860  004E62  6BF0               	clrf	240,b	;volatile
 10861                           
 10862                           ; BSR set to: 61
 10863                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10864  004E64  6BF1               	clrf	241,b	;volatile
 10865                           
 10866                           ; BSR set to: 61
 10867                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10868  004E66  0EB0               	movlw	176
 10869  004E68  6FF2               	movwf	242,b	;volatile
 10870                           
 10871                           ; BSR set to: 61
 10872                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10873  004E6A  0E80               	movlw	128
 10874  004E6C  6FF3               	movwf	243,b	;volatile
 10875                           
 10876                           ; BSR set to: 61
 10877                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10878  004E6E  6BF4               	clrf	244,b	;volatile
 10879                           
 10880                           ; BSR set to: 61
 10881                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10882  004E70  0E82               	movlw	130
 10883  004E72  6FF5               	movwf	245,b	;volatile
 10884                           
 10885                           ; BSR set to: 61
 10886                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10887  004E74  0E06               	movlw	6
 10888  004E76  6FF6               	movwf	246,b	;volatile
 10889                           
 10890                           ; BSR set to: 61
 10891                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10892  004E78  6BF7               	clrf	247,b	;volatile
 10893                           
 10894                           ; BSR set to: 61
 10895                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10896  004E7A  6BF8               	clrf	248,b	;volatile
 10897                           
 10898                           ; BSR set to: 61
 10899                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10900  004E7C  6BF9               	clrf	249,b	;volatile
 10901                           
 10902                           ; BSR set to: 61
 10903                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10904  004E7E  6BFA               	clrf	250,b	;volatile
 10905                           
 10906                           ; BSR set to: 61
 10907                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10908  004E80  6A37               	clrf	_uart1TxHead,c	;volatile
 10909                           
 10910                           ; BSR set to: 61
 10911                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10912  004E82  6A36               	clrf	_uart1TxTail,c	;volatile
 10913                           
 10914                           ; BSR set to: 61
 10915                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10916  004E84  0E40               	movlw	64
 10917  004E86  6E35               	movwf	_uart1TxBufferRemaining,c	;volatile
 10918                           
 10919                           ; BSR set to: 61
 10920                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10921  004E88  6A34               	clrf	_uart1RxHead,c	;volatile
 10922                           
 10923                           ; BSR set to: 61
 10924                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10925  004E8A  6A33               	clrf	_uart1RxTail,c	;volatile
 10926                           
 10927                           ; BSR set to: 61
 10928                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10929  004E8C  6A32               	clrf	_uart1RxCount,c	;volatile
 10930                           
 10931                           ; BSR set to: 61
 10932                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10933  004E8E  0139               	movlb	57	; () banked
 10934  004E90  8793               	bsf	147,3,b	;volatile
 10935                           
 10936                           ; BSR set to: 57
 10937                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10938  004E92  0012               	return		;funcret
 10939  004E94                     __end_of_UART1_Initialize:
 10940                           	opt callstack 0
 10941                           
 10942 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10943 ;; Defined at:
 10944 ;;		line 244 in file "mcc_generated_files/uart1.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10947 ;;		 -> UART1_Transmit_ISR(1), 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1  [STACK] void 
 10952 ;; Registers used:
 10953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10954 ;; Tracked objects:
 10955 ;;		On entry : 3F/39
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    3
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_UART1_Initialize
 10970 ;; This function uses a reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text52
 10974  0054D6                     __ptext52:
 10975                           	opt callstack 0
 10976  0054D6                     _UART1_SetTxInterruptHandler:
 10977                           	opt callstack 25
 10978                           
 10979                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10981                           
 10982                           ; BSR set to: 57
 10983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10984                           ;incstack = 0
 10985  0054D6  50E1               	movf	fsr1l,w,c
 10986  0054D8  0FFD               	addlw	-3
 10987  0054DA  6ED9               	movwf	fsr2l,c
 10988  0054DC  50E2               	movf	fsr1h,w,c
 10989  0054DE  6EDA               	movwf	fsr2h,c
 10990  0054E0  0EFF               	movlw	255
 10991  0054E2  22DA               	addwfc	fsr2h,f,c
 10992  0054E4  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 10993  0054EA  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 10994  0054F0  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 10995                           
 10996                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10997  0054F6  52E5               	movf	postdec1,f,c
 10998  0054F8  52E5               	movf	postdec1,f,c
 10999  0054FA  52E5               	movf	postdec1,f,c
 11000  0054FC  0012               	return		;funcret
 11001  0054FE                     __end_of_UART1_SetTxInterruptHandler:
 11002                           	opt callstack 0
 11003                           
 11004 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11005 ;; Defined at:
 11006 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11009 ;;		 -> UART1_Receive_ISR(1), 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;		None
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  1  [STACK] void 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11016 ;; Tracked objects:
 11017 ;;		On entry : 3F/39
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11025 ;;Total ram usage:        0 bytes
 11026 ;; Hardware stack levels used:    1
 11027 ;; Hardware stack levels required when called:    3
 11028 ;; This function calls:
 11029 ;;		Nothing
 11030 ;; This function is called by:
 11031 ;;		_UART1_Initialize
 11032 ;; This function uses a reentrant model
 11033 ;;
 11034                           
 11035                           	psect	text53
 11036  0054FE                     __ptext53:
 11037                           	opt callstack 0
 11038  0054FE                     _UART1_SetRxInterruptHandler:
 11039                           	opt callstack 25
 11040                           
 11041                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11042                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11043                           
 11044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11045                           ;incstack = 0
 11046  0054FE  50E1               	movf	fsr1l,w,c
 11047  005500  0FFD               	addlw	-3
 11048  005502  6ED9               	movwf	fsr2l,c
 11049  005504  50E2               	movf	fsr1h,w,c
 11050  005506  6EDA               	movwf	fsr2h,c
 11051  005508  0EFF               	movlw	255
 11052  00550A  22DA               	addwfc	fsr2h,f,c
 11053  00550C  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 11054  005512  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 11055  005518  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 11056                           
 11057                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11058  00551E  52E5               	movf	postdec1,f,c
 11059  005520  52E5               	movf	postdec1,f,c
 11060  005522  52E5               	movf	postdec1,f,c
 11061  005524  0012               	return		;funcret
 11062  005526                     __end_of_UART1_SetRxInterruptHandler:
 11063                           	opt callstack 0
 11064                           
 11065 ;; *************** function _TMR6_Initialize *****************
 11066 ;; Defined at:
 11067 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;		None
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1  [STACK] void 
 11074 ;; Registers used:
 11075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11076 ;; Tracked objects:
 11077 ;;		On entry : 3F/39
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11085 ;;Total ram usage:        0 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; Hardware stack levels required when called:    4
 11088 ;; This function calls:
 11089 ;;		_TMR6_SetInterruptHandler
 11090 ;; This function is called by:
 11091 ;;		_SYSTEM_Initialize
 11092 ;; This function uses a reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text54
 11096  005526                     __ptext54:
 11097                           	opt callstack 0
 11098  005526                     _TMR6_Initialize:
 11099                           	opt callstack 25
 11100                           
 11101                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11102                           
 11103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11104                           ;incstack = 0
 11105  005526  0E01               	movlw	1
 11106  005528  6E96               	movwf	16278,c	;volatile
 11107                           
 11108                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11109  00552A  6A95               	clrf	16277,c	;volatile
 11110                           
 11111                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11112  00552C  6A97               	clrf	16279,c	;volatile
 11113                           
 11114                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11115  00552E  0E03               	movlw	3
 11116  005530  6E93               	movwf	16275,c	;volatile
 11117                           
 11118                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11119  005532  6A92               	clrf	16274,c	;volatile
 11120                           
 11121                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11122  005534  0139               	movlb	57	; () banked
 11123  005536  91A9               	bcf	169,0,b	;volatile
 11124                           
 11125                           ; BSR set to: 57
 11126                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11127  005538  8199               	bsf	153,0,b	;volatile
 11128                           
 11129                           ; BSR set to: 57
 11130                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11131  00553A  0E20               	movlw	low _TMR6_DefaultInterruptHandler
 11132  00553C  6EE6               	movwf	postinc1,c
 11133  00553E  0E51               	movlw	high _TMR6_DefaultInterruptHandler
 11134  005540  6EE6               	movwf	postinc1,c
 11135  005542  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11136  005544  6EE6               	movwf	postinc1,c
 11137  005546  ECA7  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11138                           
 11139                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11140  00554A  6894               	setf	16276,c	;volatile
 11141                           
 11142                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11143  00554C  0012               	return		;funcret
 11144  00554E                     __end_of_TMR6_Initialize:
 11145                           	opt callstack 0
 11146                           
 11147 ;; *************** function _TMR6_SetInterruptHandler *****************
 11148 ;; Defined at:
 11149 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11152 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1  [STACK] void 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11159 ;; Tracked objects:
 11160 ;;		On entry : 3F/39
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11168 ;;Total ram usage:        0 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:    3
 11171 ;; This function calls:
 11172 ;;		Nothing
 11173 ;; This function is called by:
 11174 ;;		_TMR6_Initialize
 11175 ;; This function uses a reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text55
 11179  00554E                     __ptext55:
 11180                           	opt callstack 0
 11181  00554E                     _TMR6_SetInterruptHandler:
 11182                           	opt callstack 25
 11183                           
 11184                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11185                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11186                           
 11187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11188                           ;incstack = 0
 11189  00554E  50E1               	movf	fsr1l,w,c
 11190  005550  0FFD               	addlw	-3
 11191  005552  6ED9               	movwf	fsr2l,c
 11192  005554  50E2               	movf	fsr1h,w,c
 11193  005556  6EDA               	movwf	fsr2h,c
 11194  005558  0EFF               	movlw	255
 11195  00555A  22DA               	addwfc	fsr2h,f,c
 11196  00555C  006F FF78  F004    	movff	postinc2,_TMR6_InterruptHandler
 11197  005562  006F FF78  F005    	movff	postinc2,_TMR6_InterruptHandler+1
 11198  005568  006F FF74  F006    	movff	postdec2,_TMR6_InterruptHandler+2
 11199                           
 11200                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11201  00556E  52E5               	movf	postdec1,f,c
 11202  005570  52E5               	movf	postdec1,f,c
 11203  005572  52E5               	movf	postdec1,f,c
 11204  005574  0012               	return		;funcret
 11205  005576                     __end_of_TMR6_SetInterruptHandler:
 11206                           	opt callstack 0
 11207                           
 11208 ;; *************** function _TMR5_Initialize *****************
 11209 ;; Defined at:
 11210 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;		None
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;		None
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1  [STACK] void 
 11217 ;; Registers used:
 11218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11219 ;; Tracked objects:
 11220 ;;		On entry : 3F/3C
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11228 ;;Total ram usage:        0 bytes
 11229 ;; Hardware stack levels used:    1
 11230 ;; Hardware stack levels required when called:    4
 11231 ;; This function calls:
 11232 ;;		_TMR5_SetInterruptHandler
 11233 ;; This function is called by:
 11234 ;;		_SYSTEM_Initialize
 11235 ;; This function uses a reentrant model
 11236 ;;
 11237                           
 11238                           	psect	text56
 11239  0050DA                     __ptext56:
 11240                           	opt callstack 0
 11241  0050DA                     _TMR5_Initialize:
 11242                           	opt callstack 25
 11243                           
 11244                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11245                           
 11246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11247                           ;incstack = 0
 11248  0050DA  6A9B               	clrf	16283,c	;volatile
 11249                           
 11250                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11251  0050DC  6A9C               	clrf	16284,c	;volatile
 11252                           
 11253                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11254  0050DE  0E01               	movlw	1
 11255  0050E0  6E9D               	movwf	16285,c	;volatile
 11256                           
 11257                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11258  0050E2  0E63               	movlw	99
 11259  0050E4  6E99               	movwf	16281,c	;volatile
 11260                           
 11261                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11262  0050E6  0EC0               	movlw	192
 11263  0050E8  6E98               	movwf	16280,c	;volatile
 11264                           
 11265                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11266  0050EA  5098               	movf	16280,w,c	;volatile
 11267  0050EC  006F FE64  F038    	movff	16281,btemp	;volatile
 11268  0050F2  6A39               	clrf	btemp+1,c
 11269  0050F4  0060  F0E0  F039   	movff	btemp,btemp+1
 11270  0050FA  6A38               	clrf	btemp,c
 11271  0050FC  1038               	iorwf	btemp,w,c
 11272  0050FE  6E27               	movwf	_timer5ReloadVal,c	;volatile
 11273  005100  5039               	movf	btemp+1,w,c
 11274  005102  6E28               	movwf	_timer5ReloadVal+1,c	;volatile
 11275                           
 11276                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11277  005104  0139               	movlb	57	; () banked
 11278  005106  9DA8               	bcf	168,6,b	;volatile
 11279                           
 11280                           ; BSR set to: 57
 11281                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11282  005108  8D98               	bsf	152,6,b	;volatile
 11283                           
 11284                           ; BSR set to: 57
 11285                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11286  00510A  0EB2               	movlw	low _TMR5_DefaultInterruptHandler
 11287  00510C  6EE6               	movwf	postinc1,c
 11288  00510E  0E58               	movlw	high _TMR5_DefaultInterruptHandler
 11289  005110  6EE6               	movwf	postinc1,c
 11290  005112  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11291  005114  6EE6               	movwf	postinc1,c
 11292  005116  ECBB  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
 11293                           
 11294                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11295  00511A  0E31               	movlw	49
 11296  00511C  6E9A               	movwf	16282,c	;volatile
 11297                           
 11298                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11299  00511E  0012               	return		;funcret
 11300  005120                     __end_of_TMR5_Initialize:
 11301                           	opt callstack 0
 11302                           
 11303 ;; *************** function _TMR5_SetInterruptHandler *****************
 11304 ;; Defined at:
 11305 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11308 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;		None
 11311 ;; Return value:  Size  Location     Type
 11312 ;;                  1  [STACK] void 
 11313 ;; Registers used:
 11314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11315 ;; Tracked objects:
 11316 ;;		On entry : 3F/39
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11324 ;;Total ram usage:        0 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    3
 11327 ;; This function calls:
 11328 ;;		Nothing
 11329 ;; This function is called by:
 11330 ;;		_TMR5_Initialize
 11331 ;; This function uses a reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text57
 11335  005576                     __ptext57:
 11336                           	opt callstack 0
 11337  005576                     _TMR5_SetInterruptHandler:
 11338                           	opt callstack 25
 11339                           
 11340                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11341                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11342                           
 11343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11344                           ;incstack = 0
 11345  005576  50E1               	movf	fsr1l,w,c
 11346  005578  0FFD               	addlw	-3
 11347  00557A  6ED9               	movwf	fsr2l,c
 11348  00557C  50E2               	movf	fsr1h,w,c
 11349  00557E  6EDA               	movwf	fsr2h,c
 11350  005580  0EFF               	movlw	255
 11351  005582  22DA               	addwfc	fsr2h,f,c
 11352  005584  006F FF78  F001    	movff	postinc2,_TMR5_InterruptHandler
 11353  00558A  006F FF78  F002    	movff	postinc2,_TMR5_InterruptHandler+1
 11354  005590  006F FF74  F003    	movff	postdec2,_TMR5_InterruptHandler+2
 11355                           
 11356                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11357  005596  52E5               	movf	postdec1,f,c
 11358  005598  52E5               	movf	postdec1,f,c
 11359  00559A  52E5               	movf	postdec1,f,c
 11360  00559C  0012               	return		;funcret
 11361  00559E                     __end_of_TMR5_SetInterruptHandler:
 11362                           	opt callstack 0
 11363                           
 11364 ;; *************** function _SPI1_Initialize *****************
 11365 ;; Defined at:
 11366 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;		None
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1  [STACK] void 
 11373 ;; Registers used:
 11374 ;;		wreg, status,2
 11375 ;; Tracked objects:
 11376 ;;		On entry : 3F/39
 11377 ;;		On exit  : 3F/3D
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;Total ram usage:        0 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:    3
 11387 ;; This function calls:
 11388 ;;		Nothing
 11389 ;; This function is called by:
 11390 ;;		_SYSTEM_Initialize
 11391 ;; This function uses a reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text58
 11395  0058CC                     __ptext58:
 11396                           	opt callstack 0
 11397  0058CC                     _SPI1_Initialize:
 11398                           	opt callstack 26
 11399                           
 11400                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11401                           
 11402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11403                           ;incstack = 0
 11404  0058CC  0E40               	movlw	64
 11405  0058CE  013D               	movlb	61	; () banked
 11406  0058D0  6F15               	movwf	21,b	;volatile
 11407                           
 11408                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11409  0058D2  0E03               	movlw	3
 11410  0058D4  6F16               	movwf	22,b	;volatile
 11411                           
 11412                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11413  0058D6  0E4F               	movlw	79
 11414  0058D8  6F19               	movwf	25,b	;volatile
 11415                           
 11416                           ; BSR set to: 61
 11417                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11418  0058DA  6B1C               	clrf	28,b	;volatile
 11419                           
 11420                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11421  0058DC  0E83               	movlw	131
 11422  0058DE  6F14               	movwf	20,b	;volatile
 11423                           
 11424                           ; BSR set to: 61
 11425                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11426  0058E0  0012               	return		;funcret
 11427  0058E2                     __end_of_SPI1_Initialize:
 11428                           	opt callstack 0
 11429                           
 11430 ;; *************** function _PMD_Initialize *****************
 11431 ;; Defined at:
 11432 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;		None
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1  [STACK] void 
 11439 ;; Registers used:
 11440 ;;		None
 11441 ;; Tracked objects:
 11442 ;;		On entry : 3F/39
 11443 ;;		On exit  : 3F/39
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; Hardware stack levels required when called:    3
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		_SYSTEM_Initialize
 11457 ;; This function uses a reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text59
 11461  0058F8                     __ptext59:
 11462                           	opt callstack 0
 11463  0058F8                     _PMD_Initialize:
 11464                           	opt callstack 26
 11465                           
 11466                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11467                           
 11468                           ; BSR set to: 61
 11469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11470                           ;incstack = 0
 11471  0058F8  0139               	movlb	57	; () banked
 11472  0058FA  6BC0               	clrf	192,b	;volatile
 11473                           
 11474                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11475  0058FC  6BC1               	clrf	193,b	;volatile
 11476                           
 11477                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11478  0058FE  6BC2               	clrf	194,b	;volatile
 11479                           
 11480                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11481  005900  6BC3               	clrf	195,b	;volatile
 11482                           
 11483                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11484  005902  6BC4               	clrf	196,b	;volatile
 11485                           
 11486                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11487  005904  6BC5               	clrf	197,b	;volatile
 11488                           
 11489                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11490  005906  6BC6               	clrf	198,b	;volatile
 11491                           
 11492                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11493  005908  6BC7               	clrf	199,b	;volatile
 11494                           
 11495                           ; BSR set to: 57
 11496                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11497  00590A  0012               	return		;funcret
 11498  00590C                     __end_of_PMD_Initialize:
 11499                           	opt callstack 0
 11500                           
 11501 ;; *************** function _PIN_MANAGER_Initialize *****************
 11502 ;; Defined at:
 11503 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  1  [STACK] void 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2
 11512 ;; Tracked objects:
 11513 ;;		On entry : 3F/39
 11514 ;;		On exit  : 3F/3A
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11521 ;;Total ram usage:        0 bytes
 11522 ;; Hardware stack levels used:    1
 11523 ;; Hardware stack levels required when called:    3
 11524 ;; This function calls:
 11525 ;;		Nothing
 11526 ;; This function is called by:
 11527 ;;		_SYSTEM_Initialize
 11528 ;; This function uses a reentrant model
 11529 ;;
 11530                           
 11531                           	psect	text60
 11532  0049DA                     __ptext60:
 11533                           	opt callstack 0
 11534  0049DA                     _PIN_MANAGER_Initialize:
 11535                           	opt callstack 26
 11536                           
 11537                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11538                           
 11539                           ; BSR set to: 57
 11540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11541                           ;incstack = 0
 11542  0049DA  0E07               	movlw	7
 11543  0049DC  6EBE               	movwf	16318,c	;volatile
 11544                           
 11545                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11546  0049DE  6ABD               	clrf	16317,c	;volatile
 11547                           
 11548                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11549  0049E0  6ABA               	clrf	16314,c	;volatile
 11550                           
 11551                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11552  0049E2  6ABF               	clrf	16319,c	;volatile
 11553                           
 11554                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11555  0049E4  6ABB               	clrf	16315,c	;volatile
 11556                           
 11557                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11558  0049E6  0E06               	movlw	6
 11559  0049E8  6EBC               	movwf	16316,c	;volatile
 11560                           
 11561                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11562  0049EA  6AC6               	clrf	16326,c	;volatile
 11563                           
 11564                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11565  0049EC  68C7               	setf	16327,c	;volatile
 11566                           
 11567                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11568  0049EE  0E8F               	movlw	143
 11569  0049F0  6EC2               	movwf	16322,c	;volatile
 11570                           
 11571                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11572  0049F2  0EBF               	movlw	191
 11573  0049F4  6EC3               	movwf	16323,c	;volatile
 11574                           
 11575                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11576  0049F6  0E91               	movlw	145
 11577  0049F8  6EC4               	movwf	16324,c	;volatile
 11578                           
 11579                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11580  0049FA  0EFC               	movlw	252
 11581  0049FC  6EC5               	movwf	16325,c	;volatile
 11582                           
 11583                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11584  0049FE  0EF0               	movlw	240
 11585  004A00  013A               	movlb	58	; () banked
 11586  004A02  6F70               	movwf	112,b	;volatile
 11587                           
 11588                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11589  004A04  0E01               	movlw	1
 11590  004A06  6F60               	movwf	96,b	;volatile
 11591                           
 11592                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11593  004A08  0E38               	movlw	56
 11594  004A0A  6F50               	movwf	80,b	;volatile
 11595                           
 11596                           ; BSR set to: 58
 11597                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11598  004A0C  6B80               	clrf	128,b	;volatile
 11599                           
 11600                           ; BSR set to: 58
 11601                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11602  004A0E  6990               	setf	144,b	;volatile
 11603                           
 11604                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11605  004A10  0E8F               	movlw	143
 11606  004A12  6F40               	movwf	64,b	;volatile
 11607                           
 11608                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11609  004A14  0E0C               	movlw	12
 11610  004A16  6F71               	movwf	113,b	;volatile
 11611                           
 11612                           ; BSR set to: 58
 11613                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11614  004A18  6B91               	clrf	145,b	;volatile
 11615                           
 11616                           ; BSR set to: 58
 11617                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11618  004A1A  6B81               	clrf	129,b	;volatile
 11619                           
 11620                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11621  004A1C  0E87               	movlw	135
 11622  004A1E  6F51               	movwf	81,b	;volatile
 11623                           
 11624                           ; BSR set to: 58
 11625                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11626  004A20  6B41               	clrf	65,b	;volatile
 11627                           
 11628                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11629  004A22  0E90               	movlw	144
 11630  004A24  6F61               	movwf	97,b	;volatile
 11631                           
 11632                           ; BSR set to: 58
 11633                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11634  004A26  6B82               	clrf	130,b	;volatile
 11635                           
 11636                           ; BSR set to: 58
 11637                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11638  004A28  6B92               	clrf	146,b	;volatile
 11639                           
 11640                           ; BSR set to: 58
 11641                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11642  004A2A  6B42               	clrf	66,b	;volatile
 11643                           
 11644                           ; BSR set to: 58
 11645                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11646  004A2C  6B52               	clrf	82,b	;volatile
 11647                           
 11648                           ; BSR set to: 58
 11649                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11650  004A2E  6B62               	clrf	98,b	;volatile
 11651                           
 11652                           ; BSR set to: 58
 11653                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11654  004A30  6B72               	clrf	114,b	;volatile
 11655                           
 11656                           ; BSR set to: 58
 11657                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11658  004A32  6943               	setf	67,b	;volatile
 11659                           
 11660                           ; BSR set to: 58
 11661                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11662  004A34  6953               	setf	83,b	;volatile
 11663                           
 11664                           ; BSR set to: 58
 11665                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11666  004A36  6963               	setf	99,b	;volatile
 11667                           
 11668                           ; BSR set to: 58
 11669                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11670  004A38  6973               	setf	115,b	;volatile
 11671                           
 11672                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11673  004A3A  0E07               	movlw	7
 11674  004A3C  6F83               	movwf	131,b	;volatile
 11675                           
 11676                           ; BSR set to: 58
 11677                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11678  004A3E  6993               	setf	147,b	;volatile
 11679                           
 11680                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11681  004A40  0E0F               	movlw	15
 11682  004A42  6FE8               	movwf	232,b	;volatile
 11683                           
 11684                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11685  004A44  0E16               	movlw	22
 11686  004A46  6F0E               	movwf	14,b	;volatile
 11687                           
 11688                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11689  004A48  0E1E               	movlw	30
 11690  004A4A  6F13               	movwf	19,b	;volatile
 11691                           
 11692                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11693  004A4C  0E08               	movlw	8
 11694  004A4E  6FC0               	movwf	192,b	;volatile
 11695                           
 11696                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11697  004A50  0E0A               	movlw	10
 11698  004A52  6FC2               	movwf	194,b	;volatile
 11699                           
 11700                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11701  004A54  0E09               	movlw	9
 11702  004A56  6FC1               	movwf	193,b	;volatile
 11703                           
 11704                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11705  004A58  0E17               	movlw	23
 11706  004A5A  6FE5               	movwf	229,b	;volatile
 11707                           
 11708                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11709  004A5C  0E13               	movlw	19
 11710  004A5E  6FDE               	movwf	222,b	;volatile
 11711                           
 11712                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11713  004A60  0E01               	movlw	1
 11714  004A62  6F04               	movwf	4,b	;volatile
 11715                           
 11716                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11717  004A64  0E26               	movlw	38
 11718  004A66  6F05               	movwf	5,b	;volatile
 11719                           
 11720                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11721  004A68  0E28               	movlw	40
 11722  004A6A  6F06               	movwf	6,b	;volatile
 11723                           
 11724                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11725  004A6C  0E1F               	movlw	31
 11726  004A6E  6F15               	movwf	21,b	;volatile
 11727                           
 11728                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11729  004A70  0E13               	movlw	19
 11730  004A72  6F16               	movwf	22,b	;volatile
 11731                           
 11732                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11733  004A74  0E14               	movlw	20
 11734  004A76  6FDF               	movwf	223,b	;volatile
 11735                           
 11736                           ; BSR set to: 58
 11737                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11738  004A78  0012               	return		;funcret
 11739  004A7A                     __end_of_PIN_MANAGER_Initialize:
 11740                           	opt callstack 0
 11741                           
 11742 ;; *************** function _OSCILLATOR_Initialize *****************
 11743 ;; Defined at:
 11744 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1  [STACK] void 
 11751 ;; Registers used:
 11752 ;;		wreg, status,2
 11753 ;; Tracked objects:
 11754 ;;		On entry : 3F/3A
 11755 ;;		On exit  : 3F/39
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    3
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_SYSTEM_Initialize
 11769 ;; This function uses a reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text61
 11773  0058E2                     __ptext61:
 11774                           	opt callstack 0
 11775  0058E2                     _OSCILLATOR_Initialize:
 11776                           	opt callstack 26
 11777                           
 11778                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11779                           
 11780                           ; BSR set to: 58
 11781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11782                           ;incstack = 0
 11783  0058E2  0E20               	movlw	32
 11784  0058E4  0139               	movlb	57	; () banked
 11785  0058E6  6FD9               	movwf	217,b	;volatile
 11786                           
 11787                           ; BSR set to: 57
 11788                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11789  0058E8  6BDB               	clrf	219,b	;volatile
 11790                           
 11791                           ; BSR set to: 57
 11792                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11793  0058EA  6BDD               	clrf	221,b	;volatile
 11794                           
 11795                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11796  0058EC  0E02               	movlw	2
 11797  0058EE  6FDF               	movwf	223,b	;volatile
 11798                           
 11799                           ; BSR set to: 57
 11800                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11801  0058F0  6BDE               	clrf	222,b	;volatile
 11802  0058F2                     l194:
 11803                           
 11804                           ; BSR set to: 57
 11805                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11806  0058F2  B1DC               	btfsc	220,0,b	;volatile
 11807  0058F4  0012               	return	
 11808  0058F6  D7FD               	goto	l194
 11809  0058F8                     __end_of_OSCILLATOR_Initialize:
 11810                           	opt callstack 0
 11811                           
 11812 ;; *************** function _NCO1_Initialize *****************
 11813 ;; Defined at:
 11814 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1  [STACK] void 
 11821 ;; Registers used:
 11822 ;;		wreg, status,2
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/39
 11825 ;;		On exit  : 3F/3F
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    3
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_SYSTEM_Initialize
 11839 ;; This function uses a reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text62
 11843  005846                     __ptext62:
 11844                           	opt callstack 0
 11845  005846                     _NCO1_Initialize:
 11846                           	opt callstack 26
 11847                           
 11848                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11849                           
 11850                           ; BSR set to: 57
 11851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11852                           ;incstack = 0
 11853  005846  013F               	movlb	63	; () banked
 11854  005848  6B3E               	clrf	62,b	;volatile
 11855                           
 11856                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11857  00584A  6B3F               	clrf	63,b	;volatile
 11858                           
 11859                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11860  00584C  6B3A               	clrf	58,b	;volatile
 11861                           
 11862                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11863  00584E  6B39               	clrf	57,b	;volatile
 11864                           
 11865                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11866  005850  6B38               	clrf	56,b	;volatile
 11867                           
 11868                           ; BSR set to: 63
 11869                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11870  005852  0E06               	movlw	6
 11871  005854  6F3D               	movwf	61,b	;volatile
 11872                           
 11873                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11874  005856  0EC7               	movlw	199
 11875  005858  6F3C               	movwf	60,b	;volatile
 11876                           
 11877                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11878  00585A  0EAE               	movlw	174
 11879  00585C  6F3B               	movwf	59,b	;volatile
 11880                           
 11881                           ; BSR set to: 63
 11882                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11883  00585E  8F3E               	bsf	62,7,b	;volatile
 11884                           
 11885                           ; BSR set to: 63
 11886                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11887  005860  0012               	return		;funcret
 11888  005862                     __end_of_NCO1_Initialize:
 11889                           	opt callstack 0
 11890                           
 11891 ;; *************** function _INTERRUPT_Initialize *****************
 11892 ;; Defined at:
 11893 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;		None
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;  state           1  [STACK] _Bool 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1  [STACK] void 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 3F/39
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11911 ;;Total ram usage:        0 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:    3
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_SYSTEM_Initialize
 11918 ;; This function uses a reentrant model
 11919 ;;
 11920                           
 11921                           	psect	text63
 11922  004DCA                     __ptext63:
 11923                           	opt callstack 0
 11924  004DCA                     _INTERRUPT_Initialize:
 11925                           	opt callstack 0
 11926                           
 11927                           ; BSR set to: 63
 11928                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11929  004DCA  52E6               	movf	postinc1,f,c
 11930                           
 11931                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11932                           
 11933                           ;incstack = 0
 11934  004DCC  8AD2               	bsf	16338,5,c	;volatile
 11935                           
 11936                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11937  004DCE  AED2               	btfss	16338,7,c	;volatile
 11938  004DD0  D003               	goto	u940
 11939  004DD2  6A43               	clrf	btemp+11,c
 11940  004DD4  2A43               	incf	btemp+11,f,c
 11941  004DD6  D001               	goto	u958
 11942  004DD8                     u940:
 11943  004DD8  6A43               	clrf	btemp+11,c
 11944  004DDA                     u958:
 11945                           
 11946                           ;stkvar	_state @ sp[(-1)+0]
 11947  004DDA  0EFF               	movlw	-1
 11948  004DDC  0060  F10F  FFE3   	movff	btemp+11,plusw1
 11949                           
 11950                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11951  004DE2  9ED2               	bcf	16338,7,c	;volatile
 11952                           
 11953                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11954  004DE4  0E55               	movlw	85
 11955  004DE6  6ED4               	movwf	16340,c	;volatile
 11956                           
 11957                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11958  004DE8  0EAA               	movlw	170
 11959  004DEA  6ED4               	movwf	16340,c	;volatile
 11960                           
 11961                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11962  004DEC  90D4               	bcf	16340,0,c	;volatile
 11963                           
 11964                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11965  004DEE  0138               	movlb	56	; () banked
 11966  004DF0  6B9F               	clrf	159,b	;volatile
 11967                           
 11968                           ; BSR set to: 56
 11969                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11970  004DF2  6B9E               	clrf	158,b	;volatile
 11971                           
 11972                           ; BSR set to: 56
 11973                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11974  004DF4  0E08               	movlw	8
 11975  004DF6  6F9D               	movwf	157,b	;volatile
 11976                           
 11977                           ; BSR set to: 56
 11978                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11979  004DF8  0E55               	movlw	85
 11980  004DFA  6ED4               	movwf	16340,c	;volatile
 11981                           
 11982                           ; BSR set to: 56
 11983                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11984  004DFC  0EAA               	movlw	170
 11985  004DFE  6ED4               	movwf	16340,c	;volatile
 11986                           
 11987                           ; BSR set to: 56
 11988                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11989  004E00  80D4               	bsf	16340,0,c	;volatile
 11990                           
 11991                           ; BSR set to: 56
 11992                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11993                           ;stkvar	_state @ sp[(-1)+0]
 11994  004E02  0EFF               	movlw	-1
 11995  004E04  B0E3               	btfsc	plusw1,0,c
 11996  004E06  D002               	bra	u965
 11997  004E08  9ED2               	bcf	16338,7,c	;volatile
 11998  004E0A  D001               	bra	u966
 11999  004E0C                     u965:
 12000  004E0C  8ED2               	bsf	16338,7,c	;volatile
 12001  004E0E                     u966:
 12002                           
 12003                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12004  004E0E  0139               	movlb	57	; () banked
 12005  004E10  8782               	bsf	130,3,b	;volatile
 12006                           
 12007                           ; BSR set to: 57
 12008                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12009  004E12  8382               	bsf	130,1,b	;volatile
 12010                           
 12011                           ; BSR set to: 57
 12012                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12013  004E14  8182               	bsf	130,0,b	;volatile
 12014                           
 12015                           ; BSR set to: 57
 12016                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12017  004E16  8582               	bsf	130,2,b	;volatile
 12018                           
 12019                           ; BSR set to: 57
 12020                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12021  004E18  8786               	bsf	134,3,b	;volatile
 12022                           
 12023                           ; BSR set to: 57
 12024                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12025  004E1A  8586               	bsf	134,2,b	;volatile
 12026                           
 12027                           ; BSR set to: 57
 12028                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12029  004E1C  8983               	bsf	131,4,b	;volatile
 12030                           
 12031                           ; BSR set to: 57
 12032                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12033  004E1E  8783               	bsf	131,3,b	;volatile
 12034                           
 12035                           ; BSR set to: 57
 12036                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12037  004E20  8181               	bsf	129,0,b	;volatile
 12038                           
 12039                           ; BSR set to: 57
 12040                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12041  004E22  8185               	bsf	133,0,b	;volatile
 12042                           
 12043                           ; BSR set to: 57
 12044                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12045  004E24  8B87               	bsf	135,5,b	;volatile
 12046                           
 12047                           ; BSR set to: 57
 12048                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12049  004E26  8189               	bsf	137,0,b	;volatile
 12050                           
 12051                           ; BSR set to: 57
 12052                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12053  004E28  8D88               	bsf	136,6,b	;volatile
 12054                           
 12055                           ; BSR set to: 57
 12056                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12057  004E2A  8581               	bsf	129,2,b	;volatile
 12058                           
 12059                           ; BSR set to: 57
 12060                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12061  004E2C  52E5               	movf	postdec1,f,c
 12062  004E2E  0012               	return		;funcret
 12063  004E30                     __end_of_INTERRUPT_Initialize:
 12064                           	opt callstack 0
 12065                           
 12066 ;; *************** function _EXT_INT_Initialize *****************
 12067 ;; Defined at:
 12068 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;		None
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;		None
 12073 ;; Return value:  Size  Location     Type
 12074 ;;                  1  [STACK] void 
 12075 ;; Registers used:
 12076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12077 ;; Tracked objects:
 12078 ;;		On entry : 3F/3F
 12079 ;;		On exit  : 3F/39
 12080 ;;		Unchanged: 0/0
 12081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12086 ;;Total ram usage:        0 bytes
 12087 ;; Hardware stack levels used:    1
 12088 ;; Hardware stack levels required when called:    4
 12089 ;; This function calls:
 12090 ;;		_INT0_SetInterruptHandler
 12091 ;;		_INT1_SetInterruptHandler
 12092 ;;		_INT2_SetInterruptHandler
 12093 ;; This function is called by:
 12094 ;;		_SYSTEM_Initialize
 12095 ;; This function uses a reentrant model
 12096 ;;
 12097                           
 12098                           	psect	text64
 12099  004FFE                     __ptext64:
 12100                           	opt callstack 0
 12101  004FFE                     _EXT_INT_Initialize:
 12102                           	opt callstack 25
 12103                           
 12104                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12105                           
 12106                           ; BSR set to: 57
 12107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12108                           ;incstack = 0
 12109  004FFE  0139               	movlb	57	; () banked
 12110  005000  91A1               	bcf	161,0,b	;volatile
 12111                           
 12112                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12113  005002  90D2               	bcf	16338,0,c	;volatile
 12114                           
 12115                           ; BSR set to: 57
 12116                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12117  005004  0EB2               	movlw	low _INT0_DefaultInterruptHandler
 12118  005006  6EE6               	movwf	postinc1,c
 12119  005008  0E59               	movlw	high _INT0_DefaultInterruptHandler
 12120  00500A  6EE6               	movwf	postinc1,c
 12121  00500C  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12122  00500E  6EE6               	movwf	postinc1,c
 12123  005010  ECF7  F02A         	call	_INT0_SetInterruptHandler	;wreg free
 12124                           
 12125                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12126  005014  0139               	movlb	57	; () banked
 12127  005016  8191               	bsf	145,0,b	;volatile
 12128                           
 12129                           ; BSR set to: 57
 12130                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12131  005018  91A5               	bcf	165,0,b	;volatile
 12132                           
 12133                           ; BSR set to: 57
 12134                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12135  00501A  92D2               	bcf	16338,1,c	;volatile
 12136                           
 12137                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12138  00501C  0EB4               	movlw	low _INT1_DefaultInterruptHandler
 12139  00501E  6EE6               	movwf	postinc1,c
 12140  005020  0E59               	movlw	high _INT1_DefaultInterruptHandler
 12141  005022  6EE6               	movwf	postinc1,c
 12142  005024  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12143  005026  6EE6               	movwf	postinc1,c
 12144  005028  ECE3  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 12145                           
 12146                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12147  00502C  0139               	movlb	57	; () banked
 12148  00502E  8195               	bsf	149,0,b	;volatile
 12149                           
 12150                           ; BSR set to: 57
 12151                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12152  005030  9BA7               	bcf	167,5,b	;volatile
 12153                           
 12154                           ; BSR set to: 57
 12155                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12156  005032  94D2               	bcf	16338,2,c	;volatile
 12157                           
 12158                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12159  005034  0EB6               	movlw	low _INT2_DefaultInterruptHandler
 12160  005036  6EE6               	movwf	postinc1,c
 12161  005038  0E59               	movlw	high _INT2_DefaultInterruptHandler
 12162  00503A  6EE6               	movwf	postinc1,c
 12163  00503C  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12164  00503E  6EE6               	movwf	postinc1,c
 12165  005040  ECCF  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 12166                           
 12167                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12168  005044  0139               	movlb	57	; () banked
 12169  005046  8B97               	bsf	151,5,b	;volatile
 12170                           
 12171                           ; BSR set to: 57
 12172                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12173  005048  0012               	return		;funcret
 12174  00504A                     __end_of_EXT_INT_Initialize:
 12175                           	opt callstack 0
 12176                           
 12177 ;; *************** function _INT2_SetInterruptHandler *****************
 12178 ;; Defined at:
 12179 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12182 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;		None
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  1  [STACK] void 
 12187 ;; Registers used:
 12188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12189 ;; Tracked objects:
 12190 ;;		On entry : 3F/39
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12198 ;;Total ram usage:        0 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    3
 12201 ;; This function calls:
 12202 ;;		Nothing
 12203 ;; This function is called by:
 12204 ;;		_EXT_INT_Initialize
 12205 ;; This function uses a reentrant model
 12206 ;;
 12207                           
 12208                           	psect	text65
 12209  00559E                     __ptext65:
 12210                           	opt callstack 0
 12211  00559E                     _INT2_SetInterruptHandler:
 12212                           	opt callstack 25
 12213                           
 12214                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12215                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12216                           
 12217                           ; BSR set to: 57
 12218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12219                           ;incstack = 0
 12220  00559E  50E1               	movf	fsr1l,w,c
 12221  0055A0  0FFD               	addlw	-3
 12222  0055A2  6ED9               	movwf	fsr2l,c
 12223  0055A4  50E2               	movf	fsr1h,w,c
 12224  0055A6  6EDA               	movwf	fsr2h,c
 12225  0055A8  0EFF               	movlw	255
 12226  0055AA  22DA               	addwfc	fsr2h,f,c
 12227  0055AC  006F FF78  F016    	movff	postinc2,_INT2_InterruptHandler
 12228  0055B2  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler+1
 12229  0055B8  006F FF74  F018    	movff	postdec2,_INT2_InterruptHandler+2
 12230                           
 12231                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12232  0055BE  52E5               	movf	postdec1,f,c
 12233  0055C0  52E5               	movf	postdec1,f,c
 12234  0055C2  52E5               	movf	postdec1,f,c
 12235  0055C4  0012               	return		;funcret
 12236  0055C6                     __end_of_INT2_SetInterruptHandler:
 12237                           	opt callstack 0
 12238                           
 12239 ;; *************** function _INT1_SetInterruptHandler *****************
 12240 ;; Defined at:
 12241 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12244 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;		None
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  1  [STACK] void 
 12249 ;; Registers used:
 12250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12251 ;; Tracked objects:
 12252 ;;		On entry : 3F/39
 12253 ;;		On exit  : 0/0
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12260 ;;Total ram usage:        0 bytes
 12261 ;; Hardware stack levels used:    1
 12262 ;; Hardware stack levels required when called:    3
 12263 ;; This function calls:
 12264 ;;		Nothing
 12265 ;; This function is called by:
 12266 ;;		_EXT_INT_Initialize
 12267 ;; This function uses a reentrant model
 12268 ;;
 12269                           
 12270                           	psect	text66
 12271  0055C6                     __ptext66:
 12272                           	opt callstack 0
 12273  0055C6                     _INT1_SetInterruptHandler:
 12274                           	opt callstack 25
 12275                           
 12276                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12277                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12278                           
 12279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12280                           ;incstack = 0
 12281  0055C6  50E1               	movf	fsr1l,w,c
 12282  0055C8  0FFD               	addlw	-3
 12283  0055CA  6ED9               	movwf	fsr2l,c
 12284  0055CC  50E2               	movf	fsr1h,w,c
 12285  0055CE  6EDA               	movwf	fsr2h,c
 12286  0055D0  0EFF               	movlw	255
 12287  0055D2  22DA               	addwfc	fsr2h,f,c
 12288  0055D4  006F FF78  F019    	movff	postinc2,_INT1_InterruptHandler
 12289  0055DA  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler+1
 12290  0055E0  006F FF74  F01B    	movff	postdec2,_INT1_InterruptHandler+2
 12291                           
 12292                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12293  0055E6  52E5               	movf	postdec1,f,c
 12294  0055E8  52E5               	movf	postdec1,f,c
 12295  0055EA  52E5               	movf	postdec1,f,c
 12296  0055EC  0012               	return		;funcret
 12297  0055EE                     __end_of_INT1_SetInterruptHandler:
 12298                           	opt callstack 0
 12299                           
 12300 ;; *************** function _INT0_SetInterruptHandler *****************
 12301 ;; Defined at:
 12302 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12305 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1  [STACK] void 
 12310 ;; Registers used:
 12311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12312 ;; Tracked objects:
 12313 ;;		On entry : 3F/39
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    3
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_EXT_INT_Initialize
 12328 ;; This function uses a reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text67
 12332  0055EE                     __ptext67:
 12333                           	opt callstack 0
 12334  0055EE                     _INT0_SetInterruptHandler:
 12335                           	opt callstack 25
 12336                           
 12337                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12338                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12339                           
 12340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12341                           ;incstack = 0
 12342  0055EE  50E1               	movf	fsr1l,w,c
 12343  0055F0  0FFD               	addlw	-3
 12344  0055F2  6ED9               	movwf	fsr2l,c
 12345  0055F4  50E2               	movf	fsr1h,w,c
 12346  0055F6  6EDA               	movwf	fsr2h,c
 12347  0055F8  0EFF               	movlw	255
 12348  0055FA  22DA               	addwfc	fsr2h,f,c
 12349  0055FC  006F FF78  F01C    	movff	postinc2,_INT0_InterruptHandler
 12350  005602  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler+1
 12351  005608  006F FF74  F01E    	movff	postdec2,_INT0_InterruptHandler+2
 12352                           
 12353                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12354  00560E  52E5               	movf	postdec1,f,c
 12355  005610  52E5               	movf	postdec1,f,c
 12356  005612  52E5               	movf	postdec1,f,c
 12357  005614  0012               	return		;funcret
 12358  005616                     __end_of_INT0_SetInterruptHandler:
 12359                           	opt callstack 0
 12360                           
 12361 ;; *************** function _DSM_Initialize *****************
 12362 ;; Defined at:
 12363 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;		None
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;		None
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1  [STACK] void 
 12370 ;; Registers used:
 12371 ;;		wreg, status,2
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/3C
 12374 ;;		On exit  : 3F/3C
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12381 ;;Total ram usage:        0 bytes
 12382 ;; Hardware stack levels used:    1
 12383 ;; Hardware stack levels required when called:    3
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_SYSTEM_Initialize
 12388 ;; This function uses a reentrant model
 12389 ;;
 12390                           
 12391                           	psect	text68
 12392  005862                     __ptext68:
 12393                           	opt callstack 0
 12394  005862                     _DSM_Initialize:
 12395                           	opt callstack 26
 12396                           
 12397                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12398                           
 12399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12400                           ;incstack = 0
 12401  005862  013C               	movlb	60	; () banked
 12402  005864  99FA               	bcf	250,4,b	;volatile
 12403                           
 12404                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12405  005866  81FB               	bsf	251,0,b	;volatile
 12406                           
 12407                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12408  005868  93FB               	bcf	251,1,b	;volatile
 12409                           
 12410                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12411  00586A  89FB               	bsf	251,4,b	;volatile
 12412                           
 12413                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12414  00586C  9BFB               	bcf	251,5,b	;volatile
 12415                           
 12416                           ; BSR set to: 60
 12417                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12418  00586E  0E13               	movlw	19
 12419  005870  6FFC               	movwf	252,b	;volatile
 12420                           
 12421                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12422  005872  0E0E               	movlw	14
 12423  005874  6FFE               	movwf	254,b	;volatile
 12424                           
 12425                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12426  005876  0E04               	movlw	4
 12427  005878  6FFD               	movwf	253,b	;volatile
 12428                           
 12429                           ; BSR set to: 60
 12430                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12431  00587A  8FFA               	bsf	250,7,b	;volatile
 12432                           
 12433                           ; BSR set to: 60
 12434                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12435  00587C  0012               	return		;funcret
 12436  00587E                     __end_of_DSM_Initialize:
 12437                           	opt callstack 0
 12438                           
 12439 ;; *************** function _DMA1_Initialize *****************
 12440 ;; Defined at:
 12441 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1  [STACK] void 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2
 12450 ;; Tracked objects:
 12451 ;;		On entry : 3F/3D
 12452 ;;		On exit  : 3F/3B
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12459 ;;Total ram usage:        0 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:    3
 12462 ;; This function calls:
 12463 ;;		Nothing
 12464 ;; This function is called by:
 12465 ;;		_SYSTEM_Initialize
 12466 ;; This function uses a reentrant model
 12467 ;;
 12468                           
 12469                           	psect	text69
 12470  004D60                     __ptext69:
 12471                           	opt callstack 0
 12472  004D60                     _DMA1_Initialize:
 12473                           	opt callstack 26
 12474                           
 12475                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12476                           
 12477                           ; BSR set to: 60
 12478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12479                           ;incstack = 0
 12480  004D60  0E00               	movlw	0
 12481  004D62  013B               	movlb	59	; () banked
 12482  004D64  6FF9               	movwf	249,b	;volatile
 12483  004D66  0E10               	movlw	16
 12484  004D68  6FFA               	movwf	250,b	;volatile
 12485  004D6A  0E00               	movlw	0
 12486  004D6C  6FFB               	movwf	251,b	;volatile
 12487                           
 12488                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12489  004D6E  0E3D               	movlw	61
 12490  004D70  6FF1               	movwf	241,b	;volatile
 12491  004D72  0E11               	movlw	17
 12492  004D74  6FF0               	movwf	240,b	;volatile
 12493                           
 12494                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12495  004D76  0E03               	movlw	3
 12496  004D78  6FFD               	movwf	253,b	;volatile
 12497                           
 12498                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12499  004D7A  0E00               	movlw	0
 12500  004D7C  6FF8               	movwf	248,b	;volatile
 12501  004D7E  0E01               	movlw	1
 12502  004D80  6FF7               	movwf	247,b	;volatile
 12503                           
 12504                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12505  004D82  0E00               	movlw	0
 12506  004D84  6FEF               	movwf	239,b	;volatile
 12507  004D86  0E01               	movlw	1
 12508  004D88  6FEE               	movwf	238,b	;volatile
 12509                           
 12510                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12511  004D8A  0E15               	movlw	21
 12512  004D8C  6FFF               	movwf	255,b	;volatile
 12513                           
 12514                           ; BSR set to: 59
 12515                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12516  004D8E  6BFE               	clrf	254,b	;volatile
 12517                           
 12518                           ; BSR set to: 59
 12519                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12520  004D90  0139               	movlb	57	; () banked
 12521  004D92  93A2               	bcf	162,1,b	;volatile
 12522                           
 12523                           ; BSR set to: 57
 12524                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12525  004D94  91A2               	bcf	162,0,b	;volatile
 12526                           
 12527                           ; BSR set to: 57
 12528                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12529  004D96  97A2               	bcf	162,3,b	;volatile
 12530                           
 12531                           ; BSR set to: 57
 12532                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12533  004D98  95A2               	bcf	162,2,b	;volatile
 12534                           
 12535                           ; BSR set to: 57
 12536                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12537  004D9A  8392               	bsf	146,1,b	;volatile
 12538                           
 12539                           ; BSR set to: 57
 12540                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12541  004D9C  8192               	bsf	146,0,b	;volatile
 12542                           
 12543                           ; BSR set to: 57
 12544                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12545  004D9E  8792               	bsf	146,3,b	;volatile
 12546                           
 12547                           ; BSR set to: 57
 12548                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12549  004DA0  8592               	bsf	146,2,b	;volatile
 12550                           
 12551                           ; BSR set to: 57
 12552                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12553  004DA2  6BF1               	clrf	241,b	;volatile
 12554                           
 12555                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12556  004DA4  0E01               	movlw	1
 12557  004DA6  6FF2               	movwf	242,b	;volatile
 12558                           
 12559                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12560  004DA8  0E04               	movlw	4
 12561  004DAA  6FF3               	movwf	243,b	;volatile
 12562                           
 12563                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12564  004DAC  0E02               	movlw	2
 12565  004DAE  6FF4               	movwf	244,b	;volatile
 12566                           
 12567                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12568  004DB0  0E03               	movlw	3
 12569  004DB2  6FF7               	movwf	247,b	;volatile
 12570  004DB4  9ED2               	bcf	16338,7,c	;# 
 12571  004DB6  0139               	banksel	14831	;# 
 12572  004DB8  0E55               	movlw	85	;# 
 12573  004DBA  6FEF               	movwf	14831,b	;# 
 12574  004DBC  0EAA               	movlw	170	;# 
 12575  004DBE  6FEF               	movwf	14831,b	;# 
 12576  004DC0  81EF               	bsf	14831,0,b	;# 
 12577  004DC2  8ED2               	bsf	16338,7,c	;# 
 12578                           
 12579                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12580  004DC4  013B               	movlb	59	; () banked
 12581  004DC6  6BFC               	clrf	252,b	;volatile
 12582                           
 12583                           ; BSR set to: 59
 12584                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12585  004DC8  0012               	return		;funcret
 12586  004DCA                     __end_of_DMA1_Initialize:
 12587                           	opt callstack 0
 12588                           
 12589 ;; *************** function _CLKREF_Initialize *****************
 12590 ;; Defined at:
 12591 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;		None
 12594 ;; Auto vars:     Size  Location     Type
 12595 ;;		None
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  1  [STACK] void 
 12598 ;; Registers used:
 12599 ;;		wreg, status,2
 12600 ;; Tracked objects:
 12601 ;;		On entry : 3F/3B
 12602 ;;		On exit  : 3F/3C
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12609 ;;Total ram usage:        0 bytes
 12610 ;; Hardware stack levels used:    1
 12611 ;; Hardware stack levels required when called:    3
 12612 ;; This function calls:
 12613 ;;		Nothing
 12614 ;; This function is called by:
 12615 ;;		_SYSTEM_Initialize
 12616 ;; This function uses a reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text70
 12620  00595A                     __ptext70:
 12621                           	opt callstack 0
 12622  00595A                     _CLKREF_Initialize:
 12623                           	opt callstack 26
 12624                           
 12625                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12626                           
 12627                           ; BSR set to: 59
 12628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12629                           ;incstack = 0
 12630  00595A  013C               	movlb	60	; () banked
 12631  00595C  6BE6               	clrf	230,b	;volatile
 12632                           
 12633                           ; BSR set to: 60
 12634                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12635  00595E  0E94               	movlw	148
 12636  005960  6FE5               	movwf	229,b	;volatile
 12637                           
 12638                           ; BSR set to: 60
 12639                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12640  005962  0012               	return		;funcret
 12641  005964                     __end_of_CLKREF_Initialize:
 12642                           	opt callstack 0
 12643                           
 12644 ;; *************** function _CLC1_Initialize *****************
 12645 ;; Defined at:
 12646 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;		None
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1  [STACK] void 
 12653 ;; Registers used:
 12654 ;;		wreg, status,2
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/39
 12657 ;;		On exit  : 3F/3C
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;Total ram usage:        0 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    3
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_SYSTEM_Initialize
 12671 ;; This function uses a reentrant model
 12672 ;;
 12673                           
 12674                           	psect	text71
 12675  005700                     __ptext71:
 12676                           	opt callstack 0
 12677  005700                     _CLC1_Initialize:
 12678                           	opt callstack 26
 12679                           
 12680                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12681                           
 12682                           ; BSR set to: 60
 12683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12684                           ;incstack = 0
 12685  005700  013C               	movlb	60	; () banked
 12686  005702  6B75               	clrf	117,b	;volatile
 12687                           
 12688                           ; BSR set to: 60
 12689                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12690  005704  0E04               	movlw	4
 12691  005706  6F76               	movwf	118,b	;volatile
 12692                           
 12693                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12694  005708  0E04               	movlw	4
 12695  00570A  6F77               	movwf	119,b	;volatile
 12696                           
 12697                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12698  00570C  0E04               	movlw	4
 12699  00570E  6F78               	movwf	120,b	;volatile
 12700                           
 12701                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12702  005710  0E04               	movlw	4
 12703  005712  6F79               	movwf	121,b	;volatile
 12704                           
 12705                           ; BSR set to: 60
 12706                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12707  005714  6B7A               	clrf	122,b	;volatile
 12708                           
 12709                           ; BSR set to: 60
 12710                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12711  005716  6B7B               	clrf	123,b	;volatile
 12712                           
 12713                           ; BSR set to: 60
 12714                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12715  005718  6B7C               	clrf	124,b	;volatile
 12716                           
 12717                           ; BSR set to: 60
 12718                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12719  00571A  6B7D               	clrf	125,b	;volatile
 12720                           
 12721                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12722  00571C  0E81               	movlw	129
 12723  00571E  6F74               	movwf	116,b	;volatile
 12724                           
 12725                           ; BSR set to: 60
 12726                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12727  005720  0012               	return		;funcret
 12728  005722                     __end_of_CLC1_Initialize:
 12729                           	opt callstack 0
 12730                           
 12731 ;; *************** function _ADCC_Initialize *****************
 12732 ;; Defined at:
 12733 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;		None
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  1  [STACK] void 
 12740 ;; Registers used:
 12741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12742 ;; Tracked objects:
 12743 ;;		On entry : 3F/39
 12744 ;;		On exit  : 0/0
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12751 ;;Total ram usage:        0 bytes
 12752 ;; Hardware stack levels used:    1
 12753 ;; Hardware stack levels required when called:    4
 12754 ;; This function calls:
 12755 ;;		_ADCC_SetADIInterruptHandler
 12756 ;; This function is called by:
 12757 ;;		_SYSTEM_Initialize
 12758 ;; This function uses a reentrant model
 12759 ;;
 12760                           
 12761                           	psect	text72
 12762  00504A                     __ptext72:
 12763                           	opt callstack 0
 12764  00504A                     _ADCC_Initialize:
 12765                           	opt callstack 25
 12766                           
 12767                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12768                           
 12769                           ; BSR set to: 60
 12770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12771                           ;incstack = 0
 12772  00504A  013E               	movlb	62	; () banked
 12773  00504C  6BDE               	clrf	222,b	;volatile
 12774                           
 12775                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12776  00504E  6BDF               	clrf	223,b	;volatile
 12777                           
 12778                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12779  005050  6BE0               	clrf	224,b	;volatile
 12780                           
 12781                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12782  005052  6BE1               	clrf	225,b	;volatile
 12783                           
 12784                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12785  005054  6BE4               	clrf	228,b	;volatile
 12786                           
 12787                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12788  005056  6BE5               	clrf	229,b	;volatile
 12789                           
 12790                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12791  005058  6BEA               	clrf	234,b	;volatile
 12792                           
 12793                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12794  00505A  6BEC               	clrf	236,b	;volatile
 12795                           
 12796                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12797  00505C  6BF1               	clrf	241,b	;volatile
 12798                           
 12799                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12800  00505E  6BF3               	clrf	243,b	;volatile
 12801                           
 12802                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12803  005060  6BF4               	clrf	244,b	;volatile
 12804                           
 12805                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12806  005062  6BF5               	clrf	245,b	;volatile
 12807                           
 12808                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12809  005064  6BF6               	clrf	246,b	;volatile
 12810                           
 12811                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12812  005066  6BF7               	clrf	247,b	;volatile
 12813                           
 12814                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12815  005068  6BF9               	clrf	249,b	;volatile
 12816                           
 12817                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12818  00506A  6BFA               	clrf	250,b	;volatile
 12819                           
 12820                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12821  00506C  6BFB               	clrf	251,b	;volatile
 12822                           
 12823                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12824  00506E  6BFC               	clrf	252,b	;volatile
 12825                           
 12826                           ; BSR set to: 62
 12827                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12828  005070  0E02               	movlw	2
 12829  005072  6FFD               	movwf	253,b	;volatile
 12830                           
 12831                           ; BSR set to: 62
 12832                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12833  005074  6BFE               	clrf	254,b	;volatile
 12834                           
 12835                           ; BSR set to: 62
 12836                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12837  005076  6BFF               	clrf	255,b	;volatile
 12838                           
 12839                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12840  005078  0E94               	movlw	148
 12841  00507A  6FF8               	movwf	248,b	;volatile
 12842                           
 12843                           ; BSR set to: 62
 12844                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12845  00507C  0139               	movlb	57	; () banked
 12846  00507E  95A1               	bcf	161,2,b	;volatile
 12847                           
 12848                           ; BSR set to: 57
 12849                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12850  005080  8591               	bsf	145,2,b	;volatile
 12851                           
 12852                           ; BSR set to: 57
 12853                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12854  005082  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 12855  005084  6EE6               	movwf	postinc1,c
 12856  005086  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12857  005088  6EE6               	movwf	postinc1,c
 12858  00508A  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12859  00508C  6EE6               	movwf	postinc1,c
 12860  00508E  EC0B  F02B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12861                           
 12862                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12863  005092  0012               	return		;funcret
 12864  005094                     __end_of_ADCC_Initialize:
 12865                           	opt callstack 0
 12866                           
 12867 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12868 ;; Defined at:
 12869 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12872 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;		None
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  1  [STACK] void 
 12877 ;; Registers used:
 12878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12879 ;; Tracked objects:
 12880 ;;		On entry : 3F/39
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12888 ;;Total ram usage:        0 bytes
 12889 ;; Hardware stack levels used:    1
 12890 ;; Hardware stack levels required when called:    3
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_ADCC_Initialize
 12895 ;; This function uses a reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text73
 12899  005616                     __ptext73:
 12900                           	opt callstack 0
 12901  005616                     _ADCC_SetADIInterruptHandler:
 12902                           	opt callstack 25
 12903                           
 12904                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12905                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12906                           
 12907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12908                           ;incstack = 0
 12909  005616  50E1               	movf	fsr1l,w,c
 12910  005618  0FFD               	addlw	-3
 12911  00561A  6ED9               	movwf	fsr2l,c
 12912  00561C  50E2               	movf	fsr1h,w,c
 12913  00561E  6EDA               	movwf	fsr2h,c
 12914  005620  0EFF               	movlw	255
 12915  005622  22DA               	addwfc	fsr2h,f,c
 12916  005624  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12917  00562A  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12918  005630  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12919                           
 12920                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12921  005636  52E5               	movf	postdec1,f,c
 12922  005638  52E5               	movf	postdec1,f,c
 12923  00563A  52E5               	movf	postdec1,f,c
 12924  00563C  0012               	return		;funcret
 12925  00563E                     __end_of_ADCC_SetADIInterruptHandler:
 12926                           	opt callstack 0
 12927                           
 12928 ;; *************** function _INT0_ISR *****************
 12929 ;; Defined at:
 12930 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		wreg, status,2, status,0, pclath, tosl
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12948 ;;Total ram usage:        0 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    2
 12951 ;; This function calls:
 12952 ;;		_INT0_CallBack
 12953 ;; This function is called by:
 12954 ;;		Interrupt level 2
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           	psect	text74
 12959  00591C                     __ptext74:
 12960                           	opt callstack 0
 12961  00591C                     _INT0_ISR:
 12962                           	opt callstack 17
 12963                           
 12964                           ;incstack = 0
 12965  00591C  EE13  F104         	lfsr	1,___inthi_sp
 12966                           
 12967                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12968  005920  0139               	movlb	57	; () banked
 12969  005922  91A1               	bcf	161,0,b	;volatile
 12970                           
 12971                           ; BSR set to: 57
 12972                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12973  005924  EC91  F02B         	call	_INT0_CallBack	;wreg free
 12974  005928  0011               	retfie		f
 12975  00592A                     __end_of_INT0_ISR:
 12976                           	opt callstack 0
 12977                           
 12978 ;; *************** function _INT0_CallBack *****************
 12979 ;; Defined at:
 12980 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12981 ;; Parameters:    Size  Location     Type
 12982 ;;		None
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;		None
 12985 ;; Return value:  Size  Location     Type
 12986 ;;                  1  [STACK] void 
 12987 ;; Registers used:
 12988 ;;		wreg, status,2, status,0, pclath, tosl
 12989 ;; Tracked objects:
 12990 ;;		On entry : 3F/39
 12991 ;;		On exit  : 0/0
 12992 ;;		Unchanged: 0/0
 12993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12998 ;;Total ram usage:        0 bytes
 12999 ;; Hardware stack levels used:    1
 13000 ;; Hardware stack levels required when called:    1
 13001 ;; This function calls:
 13002 ;;		Absolute function
 13003 ;;		_INT0_DefaultInterruptHandler
 13004 ;; This function is called by:
 13005 ;;		_INT0_ISR
 13006 ;; This function uses a reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text75
 13010  005722                     __ptext75:
 13011                           	opt callstack 0
 13012  005722                     _INT0_CallBack:
 13013                           	opt callstack 17
 13014                           
 13015                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13016                           
 13017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13018                           ;incstack = 0
 13019  005722  501C               	movf	_INT0_InterruptHandler,w,c
 13020  005724  101D               	iorwf	_INT0_InterruptHandler+1,w,c
 13021  005726  101E               	iorwf	_INT0_InterruptHandler+2,w,c
 13022  005728  B4D8               	btfsc	status,2,c
 13023  00572A  0012               	return	
 13024                           
 13025                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13026  00572C  D801               	call	u112_48
 13027  00572E  0012               	return	
 13028  005730                     u112_48:
 13029  005730  0005               	push	
 13030  005732  6EFA               	movwf	pclath,c
 13031  005734  501C               	movf	_INT0_InterruptHandler,w,c
 13032  005736  6EFD               	movwf	tosl,c
 13033  005738  501D               	movf	_INT0_InterruptHandler+1,w,c
 13034  00573A  6EFE               	movwf	tosh,c
 13035  00573C  501E               	movf	_INT0_InterruptHandler+2,w,c
 13036  00573E  6EFF               	movwf	tosu,c
 13037  005740  50FA               	movf	pclath,w,c
 13038  005742  0012               	return		;indir
 13039  005744                     __end_of_INT0_CallBack:
 13040                           	opt callstack 0
 13041                           
 13042 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13043 ;; Defined at:
 13044 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1  [STACK] void 
 13051 ;; Registers used:
 13052 ;;		None
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/39
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; This function calls:
 13065 ;;		Nothing
 13066 ;; This function is called by:
 13067 ;;		_EXT_INT_Initialize
 13068 ;;		_INT0_CallBack
 13069 ;; This function uses a reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text76
 13073  0059B2                     __ptext76:
 13074                           	opt callstack 0
 13075  0059B2                     _INT0_DefaultInterruptHandler:
 13076                           	opt callstack 17
 13077                           
 13078                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13079                           
 13080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13081                           ;incstack = 0
 13082  0059B2  0012               	return		;funcret
 13083  0059B4                     __end_of_INT0_DefaultInterruptHandler:
 13084                           	opt callstack 0
 13085                           
 13086 ;; *************** function _INT1_ISR *****************
 13087 ;; Defined at:
 13088 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      void 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2, status,0, pclath, tosl
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13106 ;;Total ram usage:        0 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    2
 13109 ;; This function calls:
 13110 ;;		_INT1_CallBack
 13111 ;; This function is called by:
 13112 ;;		Interrupt level 2
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           	psect	text77
 13117  00592C                     __ptext77:
 13118                           	opt callstack 0
 13119  00592C                     _INT1_ISR:
 13120                           	opt callstack 17
 13121                           
 13122                           ;incstack = 0
 13123  00592C  EE13  F104         	lfsr	1,___inthi_sp
 13124                           
 13125                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13126  005930  0139               	movlb	57	; () banked
 13127  005932  91A5               	bcf	165,0,b	;volatile
 13128                           
 13129                           ; BSR set to: 57
 13130                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13131  005934  ECA2  F02B         	call	_INT1_CallBack	;wreg free
 13132  005938  0011               	retfie		f
 13133  00593A                     __end_of_INT1_ISR:
 13134                           	opt callstack 0
 13135                           
 13136 ;; *************** function _INT1_CallBack *****************
 13137 ;; Defined at:
 13138 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13139 ;; Parameters:    Size  Location     Type
 13140 ;;		None
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;		None
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1  [STACK] void 
 13145 ;; Registers used:
 13146 ;;		wreg, status,2, status,0, pclath, tosl
 13147 ;; Tracked objects:
 13148 ;;		On entry : 3F/39
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13156 ;;Total ram usage:        0 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:    1
 13159 ;; This function calls:
 13160 ;;		Absolute function
 13161 ;;		_INT1_DefaultInterruptHandler
 13162 ;; This function is called by:
 13163 ;;		_INT1_ISR
 13164 ;; This function uses a reentrant model
 13165 ;;
 13166                           
 13167                           	psect	text78
 13168  005744                     __ptext78:
 13169                           	opt callstack 0
 13170  005744                     _INT1_CallBack:
 13171                           	opt callstack 17
 13172                           
 13173                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13174                           
 13175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13176                           ;incstack = 0
 13177  005744  5019               	movf	_INT1_InterruptHandler,w,c
 13178  005746  101A               	iorwf	_INT1_InterruptHandler+1,w,c
 13179  005748  101B               	iorwf	_INT1_InterruptHandler+2,w,c
 13180  00574A  B4D8               	btfsc	status,2,c
 13181  00574C  0012               	return	
 13182                           
 13183                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13184  00574E  D801               	call	u114_48
 13185  005750  0012               	return	
 13186  005752                     u114_48:
 13187  005752  0005               	push	
 13188  005754  6EFA               	movwf	pclath,c
 13189  005756  5019               	movf	_INT1_InterruptHandler,w,c
 13190  005758  6EFD               	movwf	tosl,c
 13191  00575A  501A               	movf	_INT1_InterruptHandler+1,w,c
 13192  00575C  6EFE               	movwf	tosh,c
 13193  00575E  501B               	movf	_INT1_InterruptHandler+2,w,c
 13194  005760  6EFF               	movwf	tosu,c
 13195  005762  50FA               	movf	pclath,w,c
 13196  005764  0012               	return		;indir
 13197  005766                     __end_of_INT1_CallBack:
 13198                           	opt callstack 0
 13199                           
 13200 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13201 ;; Defined at:
 13202 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;		None
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;		None
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  1  [STACK] void 
 13209 ;; Registers used:
 13210 ;;		None
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/39
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13220 ;;Total ram usage:        0 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; This function calls:
 13223 ;;		Nothing
 13224 ;; This function is called by:
 13225 ;;		_EXT_INT_Initialize
 13226 ;;		_INT1_CallBack
 13227 ;; This function uses a reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text79
 13231  0059B4                     __ptext79:
 13232                           	opt callstack 0
 13233  0059B4                     _INT1_DefaultInterruptHandler:
 13234                           	opt callstack 17
 13235                           
 13236                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13237                           
 13238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13239                           ;incstack = 0
 13240  0059B4  0012               	return		;funcret
 13241  0059B6                     __end_of_INT1_DefaultInterruptHandler:
 13242                           	opt callstack 0
 13243                           
 13244 ;; *************** function _INT2_ISR *****************
 13245 ;; Defined at:
 13246 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;		None
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      void 
 13253 ;; Registers used:
 13254 ;;		wreg, status,2, status,0, pclath, tosl
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;Total ram usage:        0 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; Hardware stack levels required when called:    2
 13267 ;; This function calls:
 13268 ;;		_INT2_CallBack
 13269 ;; This function is called by:
 13270 ;;		Interrupt level 2
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           	psect	text80
 13275  00593C                     __ptext80:
 13276                           	opt callstack 0
 13277  00593C                     _INT2_ISR:
 13278                           	opt callstack 17
 13279                           
 13280                           ;incstack = 0
 13281  00593C  EE13  F104         	lfsr	1,___inthi_sp
 13282                           
 13283                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13284  005940  0139               	movlb	57	; () banked
 13285  005942  9BA7               	bcf	167,5,b	;volatile
 13286                           
 13287                           ; BSR set to: 57
 13288                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13289  005944  ECB3  F02B         	call	_INT2_CallBack	;wreg free
 13290  005948  0011               	retfie		f
 13291  00594A                     __end_of_INT2_ISR:
 13292                           	opt callstack 0
 13293                           
 13294 ;; *************** function _INT2_CallBack *****************
 13295 ;; Defined at:
 13296 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;		None
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;		None
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1  [STACK] void 
 13303 ;; Registers used:
 13304 ;;		wreg, status,2, status,0, pclath, tosl
 13305 ;; Tracked objects:
 13306 ;;		On entry : 3F/39
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13314 ;;Total ram usage:        0 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; Hardware stack levels required when called:    1
 13317 ;; This function calls:
 13318 ;;		Absolute function
 13319 ;;		_INT2_DefaultInterruptHandler
 13320 ;; This function is called by:
 13321 ;;		_INT2_ISR
 13322 ;; This function uses a reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text81
 13326  005766                     __ptext81:
 13327                           	opt callstack 0
 13328  005766                     _INT2_CallBack:
 13329                           	opt callstack 17
 13330                           
 13331                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13332                           
 13333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13334                           ;incstack = 0
 13335  005766  5016               	movf	_INT2_InterruptHandler,w,c
 13336  005768  1017               	iorwf	_INT2_InterruptHandler+1,w,c
 13337  00576A  1018               	iorwf	_INT2_InterruptHandler+2,w,c
 13338  00576C  B4D8               	btfsc	status,2,c
 13339  00576E  0012               	return	
 13340                           
 13341                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13342  005770  D801               	call	u116_48
 13343  005772  0012               	return	
 13344  005774                     u116_48:
 13345  005774  0005               	push	
 13346  005776  6EFA               	movwf	pclath,c
 13347  005778  5016               	movf	_INT2_InterruptHandler,w,c
 13348  00577A  6EFD               	movwf	tosl,c
 13349  00577C  5017               	movf	_INT2_InterruptHandler+1,w,c
 13350  00577E  6EFE               	movwf	tosh,c
 13351  005780  5018               	movf	_INT2_InterruptHandler+2,w,c
 13352  005782  6EFF               	movwf	tosu,c
 13353  005784  50FA               	movf	pclath,w,c
 13354  005786  0012               	return		;indir
 13355  005788                     __end_of_INT2_CallBack:
 13356                           	opt callstack 0
 13357                           
 13358 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13359 ;; Defined at:
 13360 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  1  [STACK] void 
 13367 ;; Registers used:
 13368 ;;		None
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/39
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13378 ;;Total ram usage:        0 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; This function calls:
 13381 ;;		Nothing
 13382 ;; This function is called by:
 13383 ;;		_EXT_INT_Initialize
 13384 ;;		_INT2_CallBack
 13385 ;; This function uses a reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text82
 13389  0059B6                     __ptext82:
 13390                           	opt callstack 0
 13391  0059B6                     _INT2_DefaultInterruptHandler:
 13392                           	opt callstack 17
 13393                           
 13394                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13395                           
 13396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13397                           ;incstack = 0
 13398  0059B6  0012               	return		;funcret
 13399  0059B8                     __end_of_INT2_DefaultInterruptHandler:
 13400                           	opt callstack 0
 13401                           
 13402 ;; *************** function _Default_ISR *****************
 13403 ;; Defined at:
 13404 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;		None
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		None
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;Total ram usage:        0 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		Interrupt level 2
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text83
 13432  0059AC                     __ptext83:
 13433                           	opt callstack 0
 13434  0059AC                     _Default_ISR:
 13435                           	opt callstack 19
 13436                           
 13437                           ;incstack = 0
 13438  0059AC  EE13  F104         	lfsr	1,___inthi_sp
 13439  0059B0  0011               	retfie		f
 13440  0059B2                     __end_of_Default_ISR:
 13441                           	opt callstack 0
 13442                           
 13443 ;; *************** function _ADCC_ISR *****************
 13444 ;; Defined at:
 13445 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;		None
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;		None
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  1    wreg      void 
 13452 ;; Registers used:
 13453 ;;		wreg, status,2, status,0, pclath, tosl
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13463 ;;Total ram usage:        0 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:    1
 13466 ;; This function calls:
 13467 ;;		Absolute function
 13468 ;;		_ADCC_DefaultInterruptHandler
 13469 ;; This function is called by:
 13470 ;;		Interrupt level 2
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text84
 13475  0053E4                     __ptext84:
 13476                           	opt callstack 0
 13477  0053E4                     _ADCC_ISR:
 13478                           	opt callstack 18
 13479                           
 13480                           ;incstack = 0
 13481  0053E4  EE13  F104         	lfsr	1,___inthi_sp
 13482                           
 13483                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13484  0053E8  0139               	movlb	57	; () banked
 13485  0053EA  95A1               	bcf	161,2,b	;volatile
 13486                           
 13487                           ; BSR set to: 57
 13488                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13489  0053EC  5007               	movf	_ADCC_ADI_InterruptHandler,w,c
 13490  0053EE  1008               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13491  0053F0  1009               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13492  0053F2  B4D8               	btfsc	status,2,c
 13493  0053F4  0011               	retfie		f
 13494                           
 13495                           ; BSR set to: 57
 13496                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13497  0053F6  D801               	call	i2u161_48
 13498  0053F8  0011               	retfie		f
 13499  0053FA                     i2u161_48:
 13500  0053FA  0005               	push	
 13501  0053FC  6EFA               	movwf	pclath,c
 13502  0053FE  5007               	movf	_ADCC_ADI_InterruptHandler,w,c
 13503  005400  6EFD               	movwf	tosl,c
 13504  005402  5008               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13505  005404  6EFE               	movwf	tosh,c
 13506  005406  5009               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13507  005408  6EFF               	movwf	tosu,c
 13508  00540A  50FA               	movf	pclath,w,c
 13509  00540C  0012               	return		;indir
 13510  00540E                     __end_of_ADCC_ISR:
 13511                           	opt callstack 0
 13512                           
 13513 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13514 ;; Defined at:
 13515 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;		None
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;		None
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  1  [STACK] void 
 13522 ;; Registers used:
 13523 ;;		None
 13524 ;; Tracked objects:
 13525 ;;		On entry : 3F/39
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13533 ;;Total ram usage:        0 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; This function calls:
 13536 ;;		Nothing
 13537 ;; This function is called by:
 13538 ;;		_ADCC_Initialize
 13539 ;;		_ADCC_ISR
 13540 ;; This function uses a reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text85
 13544  0059B8                     __ptext85:
 13545                           	opt callstack 0
 13546  0059B8                     _ADCC_DefaultInterruptHandler:
 13547                           	opt callstack 18
 13548                           
 13549                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13550                           
 13551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13552                           ;incstack = 0
 13553  0059B8  0012               	return		;funcret
 13554  0059BA                     __end_of_ADCC_DefaultInterruptHandler:
 13555                           	opt callstack 0
 13556                           
 13557 ;; *************** function _UART1_tx_vect_isr *****************
 13558 ;; Defined at:
 13559 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;		None
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;		None
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  1    wreg      void 
 13566 ;; Registers used:
 13567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13577 ;;Total ram usage:        0 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:    1
 13580 ;; This function calls:
 13581 ;;		Absolute function
 13582 ;;		_UART1_Transmit_ISR
 13583 ;; This function is called by:
 13584 ;;		Interrupt level 2
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text86
 13589  005640                     __ptext86:
 13590                           	opt callstack 0
 13591  005640                     _UART1_tx_vect_isr:
 13592                           	opt callstack 18
 13593                           
 13594                           ;incstack = 0
 13595  005640  EE13  F104         	lfsr	1,___inthi_sp
 13596                           
 13597                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13598  005644  500A               	movf	_UART1_TxInterruptHandler,w,c
 13599  005646  100B               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13600  005648  100C               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13601  00564A  B4D8               	btfsc	status,2,c
 13602  00564C  0011               	retfie		f
 13603                           
 13604                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13605  00564E  D801               	call	i2u328_48
 13606  005650  0011               	retfie		f
 13607  005652                     i2u328_48:
 13608  005652  0005               	push	
 13609  005654  6EFA               	movwf	pclath,c
 13610  005656  500A               	movf	_UART1_TxInterruptHandler,w,c
 13611  005658  6EFD               	movwf	tosl,c
 13612  00565A  500B               	movf	_UART1_TxInterruptHandler+1,w,c
 13613  00565C  6EFE               	movwf	tosh,c
 13614  00565E  500C               	movf	_UART1_TxInterruptHandler+2,w,c
 13615  005660  6EFF               	movwf	tosu,c
 13616  005662  50FA               	movf	pclath,w,c
 13617  005664  0012               	return		;indir
 13618  005666                     __end_of_UART1_tx_vect_isr:
 13619                           	opt callstack 0
 13620                           
 13621 ;; *************** function _UART1_Transmit_ISR *****************
 13622 ;; Defined at:
 13623 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;		None
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;		None
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1  [STACK] void 
 13630 ;; Registers used:
 13631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 3B/39
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13641 ;;Total ram usage:        0 bytes
 13642 ;; Hardware stack levels used:    1
 13643 ;; This function calls:
 13644 ;;		Nothing
 13645 ;; This function is called by:
 13646 ;;		_UART1_Initialize
 13647 ;;		_UART1_tx_vect_isr
 13648 ;; This function uses a reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text87
 13652  005336                     __ptext87:
 13653                           	opt callstack 0
 13654  005336                     _UART1_Transmit_ISR:
 13655                           	opt callstack 18
 13656                           
 13657                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13658                           
 13659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13660                           ;incstack = 0
 13661  005336  0E40               	movlw	64
 13662  005338  6035               	cpfslt	_uart1TxBufferRemaining,c
 13663  00533A  D010               	goto	l597
 13664                           
 13665                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13666  00533C  0EC0               	movlw	low _uart1TxBuffer
 13667  00533E  2436               	addwf	_uart1TxTail,w,c	;volatile
 13668  005340  6ED9               	movwf	fsr2l,c
 13669  005342  6ADA               	clrf	fsr2h,c
 13670  005344  0E02               	movlw	high _uart1TxBuffer
 13671  005346  22DA               	addwfc	fsr2h,f,c
 13672  005348  50DF               	movf	indf2,w,c
 13673  00534A  013D               	movlb	61	; () banked
 13674  00534C  6FEA               	movwf	234,b	;volatile
 13675                           
 13676                           ; BSR set to: 61
 13677  00534E  2A36               	incf	_uart1TxTail,f,c	;volatile
 13678                           
 13679                           ; BSR set to: 61
 13680                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13681  005350  0E3F               	movlw	63
 13682  005352  6436               	cpfsgt	_uart1TxTail,c
 13683  005354  D001               	goto	l5558
 13684                           
 13685                           ; BSR set to: 61
 13686                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13687  005356  6A36               	clrf	_uart1TxTail,c	;volatile
 13688  005358                     l5558:
 13689                           
 13690                           ; BSR set to: 61
 13691                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13692  005358  2A35               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13693                           
 13694                           ;mcc_generated_files/uart1.c: 220:  } else {
 13695  00535A  0012               	return	
 13696  00535C                     l597:
 13697                           
 13698                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13699  00535C  0139               	movlb	57	; () banked
 13700  00535E  9993               	bcf	147,4,b	;volatile
 13701                           
 13702                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13703  005360  0012               	return		;funcret
 13704  005362                     __end_of_UART1_Transmit_ISR:
 13705                           	opt callstack 0
 13706                           
 13707 ;; *************** function _UART1_rx_vect_isr *****************
 13708 ;; Defined at:
 13709 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13710 ;; Parameters:    Size  Location     Type
 13711 ;;		None
 13712 ;; Auto vars:     Size  Location     Type
 13713 ;;		None
 13714 ;; Return value:  Size  Location     Type
 13715 ;;                  1    wreg      void 
 13716 ;; Registers used:
 13717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13718 ;; Tracked objects:
 13719 ;;		On entry : 0/0
 13720 ;;		On exit  : 0/0
 13721 ;;		Unchanged: 0/0
 13722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13727 ;;Total ram usage:        0 bytes
 13728 ;; Hardware stack levels used:    1
 13729 ;; Hardware stack levels required when called:    1
 13730 ;; This function calls:
 13731 ;;		Absolute function
 13732 ;;		_UART1_Receive_ISR
 13733 ;; This function is called by:
 13734 ;;		Interrupt level 2
 13735 ;; This function uses a non-reentrant model
 13736 ;;
 13737                           
 13738                           	psect	text88
 13739  005668                     __ptext88:
 13740                           	opt callstack 0
 13741  005668                     _UART1_rx_vect_isr:
 13742                           	opt callstack 18
 13743                           
 13744                           ;incstack = 0
 13745  005668  EE13  F104         	lfsr	1,___inthi_sp
 13746                           
 13747                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13748  00566C  500D               	movf	_UART1_RxInterruptHandler,w,c
 13749  00566E  100E               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13750  005670  100F               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13751  005672  B4D8               	btfsc	status,2,c
 13752  005674  0011               	retfie		f
 13753                           
 13754                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13755  005676  D801               	call	i2u330_48
 13756  005678  0011               	retfie		f
 13757  00567A                     i2u330_48:
 13758  00567A  0005               	push	
 13759  00567C  6EFA               	movwf	pclath,c
 13760  00567E  500D               	movf	_UART1_RxInterruptHandler,w,c
 13761  005680  6EFD               	movwf	tosl,c
 13762  005682  500E               	movf	_UART1_RxInterruptHandler+1,w,c
 13763  005684  6EFE               	movwf	tosh,c
 13764  005686  500F               	movf	_UART1_RxInterruptHandler+2,w,c
 13765  005688  6EFF               	movwf	tosu,c
 13766  00568A  50FA               	movf	pclath,w,c
 13767  00568C  0012               	return		;indir
 13768  00568E                     __end_of_UART1_rx_vect_isr:
 13769                           	opt callstack 0
 13770                           
 13771 ;; *************** function _UART1_Receive_ISR *****************
 13772 ;; Defined at:
 13773 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1  [STACK] void 
 13780 ;; Registers used:
 13781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_UART1_Initialize
 13797 ;;		_UART1_rx_vect_isr
 13798 ;; This function uses a reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text89
 13802  0057CC                     __ptext89:
 13803                           	opt callstack 0
 13804  0057CC                     _UART1_Receive_ISR:
 13805                           	opt callstack 18
 13806                           
 13807                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13808                           
 13809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13810                           ;incstack = 0
 13811  0057CC  0E80               	movlw	low _uart1RxBuffer
 13812  0057CE  2434               	addwf	_uart1RxHead,w,c	;volatile
 13813  0057D0  6ED9               	movwf	fsr2l,c
 13814  0057D2  6ADA               	clrf	fsr2h,c
 13815  0057D4  0E02               	movlw	high _uart1RxBuffer
 13816  0057D6  22DA               	addwfc	fsr2h,f,c
 13817  0057D8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13818  0057DE  2A34               	incf	_uart1RxHead,f,c	;volatile
 13819                           
 13820                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13821  0057E0  0E3F               	movlw	63
 13822  0057E2  6434               	cpfsgt	_uart1RxHead,c
 13823  0057E4  D001               	goto	l5568
 13824                           
 13825                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13826  0057E6  6A34               	clrf	_uart1RxHead,c	;volatile
 13827  0057E8                     l5568:
 13828                           
 13829                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13830  0057E8  2A32               	incf	_uart1RxCount,f,c	;volatile
 13831                           
 13832                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13833  0057EA  0012               	return		;funcret
 13834  0057EC                     __end_of_UART1_Receive_ISR:
 13835                           	opt callstack 0
 13836                           
 13837 ;; *************** function _UART2_tx_vect_isr *****************
 13838 ;; Defined at:
 13839 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;Total ram usage:        0 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    1
 13860 ;; This function calls:
 13861 ;;		Absolute function
 13862 ;;		_UART2_Transmit_ISR
 13863 ;; This function is called by:
 13864 ;;		Interrupt level 2
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text90
 13869  005690                     __ptext90:
 13870                           	opt callstack 0
 13871  005690                     _UART2_tx_vect_isr:
 13872                           	opt callstack 18
 13873                           
 13874                           ;incstack = 0
 13875  005690  EE13  F104         	lfsr	1,___inthi_sp
 13876                           
 13877                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13878  005694  5010               	movf	_UART2_TxInterruptHandler,w,c
 13879  005696  1011               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13880  005698  1012               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13881  00569A  B4D8               	btfsc	status,2,c
 13882  00569C  0011               	retfie		f
 13883                           
 13884                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13885  00569E  D801               	call	i2u332_48
 13886  0056A0  0011               	retfie		f
 13887  0056A2                     i2u332_48:
 13888  0056A2  0005               	push	
 13889  0056A4  6EFA               	movwf	pclath,c
 13890  0056A6  5010               	movf	_UART2_TxInterruptHandler,w,c
 13891  0056A8  6EFD               	movwf	tosl,c
 13892  0056AA  5011               	movf	_UART2_TxInterruptHandler+1,w,c
 13893  0056AC  6EFE               	movwf	tosh,c
 13894  0056AE  5012               	movf	_UART2_TxInterruptHandler+2,w,c
 13895  0056B0  6EFF               	movwf	tosu,c
 13896  0056B2  50FA               	movf	pclath,w,c
 13897  0056B4  0012               	return		;indir
 13898  0056B6                     __end_of_UART2_tx_vect_isr:
 13899                           	opt callstack 0
 13900                           
 13901 ;; *************** function _UART2_Transmit_ISR *****************
 13902 ;; Defined at:
 13903 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;		None
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;		None
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  1  [STACK] void 
 13910 ;; Registers used:
 13911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 3B/39
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13921 ;;Total ram usage:        0 bytes
 13922 ;; Hardware stack levels used:    1
 13923 ;; This function calls:
 13924 ;;		Nothing
 13925 ;; This function is called by:
 13926 ;;		_UART2_Initialize
 13927 ;;		_UART2_tx_vect_isr
 13928 ;; This function uses a reentrant model
 13929 ;;
 13930                           
 13931                           	psect	text91
 13932  005362                     __ptext91:
 13933                           	opt callstack 0
 13934  005362                     _UART2_Transmit_ISR:
 13935                           	opt callstack 18
 13936                           
 13937                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13938                           
 13939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13940                           ;incstack = 0
 13941  005362  0E40               	movlw	64
 13942  005364  602F               	cpfslt	_uart2TxBufferRemaining,c
 13943  005366  D010               	goto	l717
 13944                           
 13945                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13946  005368  0E40               	movlw	low _uart2TxBuffer
 13947  00536A  2430               	addwf	_uart2TxTail,w,c	;volatile
 13948  00536C  6ED9               	movwf	fsr2l,c
 13949  00536E  6ADA               	clrf	fsr2h,c
 13950  005370  0E02               	movlw	high _uart2TxBuffer
 13951  005372  22DA               	addwfc	fsr2h,f,c
 13952  005374  50DF               	movf	indf2,w,c
 13953  005376  013D               	movlb	61	; () banked
 13954  005378  6FD2               	movwf	210,b	;volatile
 13955                           
 13956                           ; BSR set to: 61
 13957  00537A  2A30               	incf	_uart2TxTail,f,c	;volatile
 13958                           
 13959                           ; BSR set to: 61
 13960                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13961  00537C  0E3F               	movlw	63
 13962  00537E  6430               	cpfsgt	_uart2TxTail,c
 13963  005380  D001               	goto	l5580
 13964                           
 13965                           ; BSR set to: 61
 13966                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13967  005382  6A30               	clrf	_uart2TxTail,c	;volatile
 13968  005384                     l5580:
 13969                           
 13970                           ; BSR set to: 61
 13971                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13972  005384  2A2F               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13973                           
 13974                           ;mcc_generated_files/uart2.c: 224:     }
 13975  005386  0012               	return	
 13976  005388                     l717:
 13977                           
 13978                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13979  005388  0139               	movlb	57	; () banked
 13980  00538A  9796               	bcf	150,3,b	;volatile
 13981                           
 13982                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13983  00538C  0012               	return		;funcret
 13984  00538E                     __end_of_UART2_Transmit_ISR:
 13985                           	opt callstack 0
 13986                           
 13987 ;; *************** function _UART2_rx_vect_isr *****************
 13988 ;; Defined at:
 13989 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14007 ;;Total ram usage:        0 bytes
 14008 ;; Hardware stack levels used:    1
 14009 ;; Hardware stack levels required when called:    1
 14010 ;; This function calls:
 14011 ;;		Absolute function
 14012 ;;		_UART2_Receive_ISR
 14013 ;; This function is called by:
 14014 ;;		Interrupt level 2
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text92
 14019  0056B8                     __ptext92:
 14020                           	opt callstack 0
 14021  0056B8                     _UART2_rx_vect_isr:
 14022                           	opt callstack 18
 14023                           
 14024                           ;incstack = 0
 14025  0056B8  EE13  F104         	lfsr	1,___inthi_sp
 14026                           
 14027                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14028  0056BC  5013               	movf	_UART2_RxInterruptHandler,w,c
 14029  0056BE  1014               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14030  0056C0  1015               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14031  0056C2  B4D8               	btfsc	status,2,c
 14032  0056C4  0011               	retfie		f
 14033                           
 14034                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14035  0056C6  D801               	call	i2u334_48
 14036  0056C8  0011               	retfie		f
 14037  0056CA                     i2u334_48:
 14038  0056CA  0005               	push	
 14039  0056CC  6EFA               	movwf	pclath,c
 14040  0056CE  5013               	movf	_UART2_RxInterruptHandler,w,c
 14041  0056D0  6EFD               	movwf	tosl,c
 14042  0056D2  5014               	movf	_UART2_RxInterruptHandler+1,w,c
 14043  0056D4  6EFE               	movwf	tosh,c
 14044  0056D6  5015               	movf	_UART2_RxInterruptHandler+2,w,c
 14045  0056D8  6EFF               	movwf	tosu,c
 14046  0056DA  50FA               	movf	pclath,w,c
 14047  0056DC  0012               	return		;indir
 14048  0056DE                     __end_of_UART2_rx_vect_isr:
 14049                           	opt callstack 0
 14050                           
 14051 ;; *************** function _UART2_Receive_ISR *****************
 14052 ;; Defined at:
 14053 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;		None
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;		None
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1  [STACK] void 
 14060 ;; Registers used:
 14061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14071 ;;Total ram usage:        0 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; This function calls:
 14074 ;;		Nothing
 14075 ;; This function is called by:
 14076 ;;		_UART2_Initialize
 14077 ;;		_UART2_rx_vect_isr
 14078 ;; This function uses a reentrant model
 14079 ;;
 14080                           
 14081                           	psect	text93
 14082  0057EC                     __ptext93:
 14083                           	opt callstack 0
 14084  0057EC                     _UART2_Receive_ISR:
 14085                           	opt callstack 18
 14086                           
 14087                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14088                           
 14089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14090                           ;incstack = 0
 14091  0057EC  0E00               	movlw	low _uart2RxBuffer
 14092  0057EE  242E               	addwf	_uart2RxHead,w,c	;volatile
 14093  0057F0  6ED9               	movwf	fsr2l,c
 14094  0057F2  6ADA               	clrf	fsr2h,c
 14095  0057F4  0E02               	movlw	high _uart2RxBuffer
 14096  0057F6  22DA               	addwfc	fsr2h,f,c
 14097  0057F8  006F F743 FFDF     	movff	15824,indf2	;volatile
 14098  0057FE  2A2E               	incf	_uart2RxHead,f,c	;volatile
 14099                           
 14100                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14101  005800  0E3F               	movlw	63
 14102  005802  642E               	cpfsgt	_uart2RxHead,c
 14103  005804  D001               	goto	l5590
 14104                           
 14105                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14106  005806  6A2E               	clrf	_uart2RxHead,c	;volatile
 14107  005808                     l5590:
 14108                           
 14109                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14110  005808  2A2C               	incf	_uart2RxCount,f,c	;volatile
 14111                           
 14112                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14113  00580A  0012               	return		;funcret
 14114  00580C                     __end_of_UART2_Receive_ISR:
 14115                           	opt callstack 0
 14116                           
 14117 ;; *************** function _TMR6_ISR *****************
 14118 ;; Defined at:
 14119 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;		None
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14137 ;;Total ram usage:        1 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    2
 14140 ;; This function calls:
 14141 ;;		_TMR6_CallBack
 14142 ;; This function is called by:
 14143 ;;		Interrupt level 2
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text94
 14148  005898                     __ptext94:
 14149                           	opt callstack 0
 14150  005898                     _TMR6_ISR:
 14151                           	opt callstack 17
 14152                           
 14153                           ;incstack = 0
 14154  005898  0060  F0E0  F058   	movff	btemp,??_TMR6_ISR
 14155  00589E  EE13  F104         	lfsr	1,___inthi_sp
 14156                           
 14157                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14158  0058A2  0139               	movlb	57	; () banked
 14159  0058A4  91A9               	bcf	169,0,b	;volatile
 14160                           
 14161                           ; BSR set to: 57
 14162                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14163  0058A6  ECC4  F02B         	call	_TMR6_CallBack	;wreg free
 14164  0058AA  0060  F160  F038   	movff	??_TMR6_ISR,btemp
 14165  0058B0  0011               	retfie		f
 14166  0058B2                     __end_of_TMR6_ISR:
 14167                           	opt callstack 0
 14168                           
 14169 ;; *************** function _TMR6_CallBack *****************
 14170 ;; Defined at:
 14171 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;		None
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;		None
 14176 ;; Return value:  Size  Location     Type
 14177 ;;                  1  [STACK] void 
 14178 ;; Registers used:
 14179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14180 ;; Tracked objects:
 14181 ;;		On entry : 3F/39
 14182 ;;		On exit  : 0/0
 14183 ;;		Unchanged: 0/0
 14184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;Total ram usage:        0 bytes
 14190 ;; Hardware stack levels used:    1
 14191 ;; Hardware stack levels required when called:    1
 14192 ;; This function calls:
 14193 ;;		Absolute function
 14194 ;;		_TMR6_DefaultInterruptHandler
 14195 ;; This function is called by:
 14196 ;;		_TMR6_ISR
 14197 ;; This function uses a reentrant model
 14198 ;;
 14199                           
 14200                           	psect	text95
 14201  005788                     __ptext95:
 14202                           	opt callstack 0
 14203  005788                     _TMR6_CallBack:
 14204                           	opt callstack 17
 14205                           
 14206                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14207                           
 14208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14209                           ;incstack = 0
 14210  005788  5004               	movf	_TMR6_InterruptHandler,w,c
 14211  00578A  1005               	iorwf	_TMR6_InterruptHandler+1,w,c
 14212  00578C  1006               	iorwf	_TMR6_InterruptHandler+2,w,c
 14213  00578E  B4D8               	btfsc	status,2,c
 14214  005790  0012               	return	
 14215                           
 14216                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14217  005792  D801               	call	u294_48
 14218  005794  0012               	return	
 14219  005796                     u294_48:
 14220  005796  0005               	push	
 14221  005798  6EFA               	movwf	pclath,c
 14222  00579A  5004               	movf	_TMR6_InterruptHandler,w,c
 14223  00579C  6EFD               	movwf	tosl,c
 14224  00579E  5005               	movf	_TMR6_InterruptHandler+1,w,c
 14225  0057A0  6EFE               	movwf	tosh,c
 14226  0057A2  5006               	movf	_TMR6_InterruptHandler+2,w,c
 14227  0057A4  6EFF               	movwf	tosu,c
 14228  0057A6  50FA               	movf	pclath,w,c
 14229  0057A8  0012               	return		;indir
 14230  0057AA                     __end_of_TMR6_CallBack:
 14231                           	opt callstack 0
 14232                           
 14233 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14234 ;; Defined at:
 14235 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;		None
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  i               1  [STACK] unsigned char 
 14240 ;; Return value:  Size  Location     Type
 14241 ;;                  1  [STACK] void 
 14242 ;; Registers used:
 14243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14244 ;; Tracked objects:
 14245 ;;		On entry : 0/39
 14246 ;;		On exit  : 0/0
 14247 ;;		Unchanged: 0/0
 14248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14253 ;;Total ram usage:        0 bytes
 14254 ;; Hardware stack levels used:    1
 14255 ;; This function calls:
 14256 ;;		Nothing
 14257 ;; This function is called by:
 14258 ;;		_TMR6_Initialize
 14259 ;;		_TMR6_CallBack
 14260 ;; This function uses a reentrant model
 14261 ;;
 14262                           
 14263                           	psect	text96
 14264  005120                     __ptext96:
 14265                           	opt callstack 0
 14266  005120                     _TMR6_DefaultInterruptHandler:
 14267                           	opt callstack 0
 14268                           
 14269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14270  005120  52E6               	movf	postinc1,f,c
 14271                           
 14272                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14273                           ;stkvar	_i @ sp[(-1)+0]
 14274                           
 14275                           ;incstack = 0
 14276  005122  0EFF               	movlw	-1
 14277  005124  6AE3               	clrf	plusw1,c
 14278  005126                     l5270:
 14279                           
 14280                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14281                           ;stkvar	_i @ sp[(-1)+0]
 14282  005126  0EFF               	movlw	-1
 14283  005128  50E3               	movf	plusw1,w,c
 14284  00512A  0D02               	mullw	2
 14285  00512C  50F3               	movf	prodl,w,c
 14286  00512E  0F79               	addlw	low _tickCount
 14287  005130  6ED9               	movwf	fsr2l,c
 14288  005132  6ADA               	clrf	fsr2h,c
 14289  005134  50DE               	movf	postinc2,w,c
 14290  005136  10DE               	iorwf	postinc2,w,c
 14291  005138  B4D8               	btfsc	status,2,c
 14292  00513A  D00A               	goto	l5274
 14293                           
 14294                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14295                           ;stkvar	_i @ sp[(-1)+0]
 14296  00513C  0EFF               	movlw	-1
 14297  00513E  50E3               	movf	plusw1,w,c
 14298  005140  0D02               	mullw	2
 14299  005142  50F3               	movf	prodl,w,c
 14300  005144  0F79               	addlw	low _tickCount
 14301  005146  6ED9               	movwf	fsr2l,c
 14302  005148  6ADA               	clrf	fsr2h,c
 14303  00514A  06DE               	decf	postinc2,f,c
 14304  00514C  0E00               	movlw	0
 14305  00514E  5ADD               	subwfb	postdec2,f,c
 14306  005150                     l5274:
 14307                           
 14308                           ;mcc_generated_files/tmr6.c: 207:  }
 14309                           ;stkvar	_i @ sp[(-1)+0]
 14310  005150  0EFF               	movlw	-1
 14311  005152  2AE3               	incf	plusw1,f,c
 14312                           
 14313                           ;stkvar	_i @ sp[(-1)+0]
 14314  005154  0EFF               	movlw	-1
 14315  005156  006F FF8C  F038    	movff	plusw1,btemp
 14316  00515C  0E05               	movlw	5
 14317  00515E  6438               	cpfsgt	btemp,c
 14318  005160  D7E2               	goto	l5270
 14319                           
 14320                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14321  005162  52E5               	movf	postdec1,f,c
 14322  005164  0012               	return		;funcret
 14323  005166                     __end_of_TMR6_DefaultInterruptHandler:
 14324                           	opt callstack 0
 14325                           
 14326 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14327 ;; Defined at:
 14328 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14329 ;; Parameters:    Size  Location     Type
 14330 ;;		None
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;		None
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      void 
 14335 ;; Registers used:
 14336 ;;		None
 14337 ;; Tracked objects:
 14338 ;;		On entry : 0/0
 14339 ;;		On exit  : 3F/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14346 ;;Total ram usage:        0 bytes
 14347 ;; Hardware stack levels used:    1
 14348 ;; This function calls:
 14349 ;;		Nothing
 14350 ;; This function is called by:
 14351 ;;		Interrupt level 2
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           	psect	text97
 14356  00594C                     __ptext97:
 14357                           	opt callstack 0
 14358  00594C                     _DMA1_DMASCNT_ISR:
 14359                           	opt callstack 19
 14360                           
 14361                           ;incstack = 0
 14362  00594C  EE13  F104         	lfsr	1,___inthi_sp
 14363                           
 14364                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14365  005950  0139               	movlb	57	; () banked
 14366  005952  91A2               	bcf	162,0,b	;volatile
 14367                           
 14368                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14369  005954  0100               	movlb	0	; () banked
 14370  005956  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14371                           
 14372                           ; BSR set to: 0
 14373  005958  0011               	retfie		f
 14374  00595A                     __end_of_DMA1_DMASCNT_ISR:
 14375                           	opt callstack 0
 14376                           
 14377 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14378 ;; Defined at:
 14379 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      void 
 14386 ;; Registers used:
 14387 ;;		None
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 3F/39
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14397 ;;Total ram usage:        0 bytes
 14398 ;; Hardware stack levels used:    1
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		Interrupt level 2
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text98
 14407  005964                     __ptext98:
 14408                           	opt callstack 0
 14409  005964                     _DMA1_DMADCNT_ISR:
 14410                           	opt callstack 19
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;incstack = 0
 14414  005964  EE13  F104         	lfsr	1,___inthi_sp
 14415                           
 14416                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14417  005968  0139               	movlb	57	; () banked
 14418  00596A  93A2               	bcf	162,1,b	;volatile
 14419                           
 14420                           ; BSR set to: 57
 14421  00596C  0011               	retfie		f
 14422  00596E                     __end_of_DMA1_DMADCNT_ISR:
 14423                           	opt callstack 0
 14424                           
 14425 ;; *************** function _DMA1_DMAA_ISR *****************
 14426 ;; Defined at:
 14427 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;		None
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;		None
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  1    wreg      void 
 14434 ;; Registers used:
 14435 ;;		None
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 3F/39
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;Total ram usage:        0 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; This function calls:
 14448 ;;		Nothing
 14449 ;; This function is called by:
 14450 ;;		Interrupt level 2
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text99
 14455  005970                     __ptext99:
 14456                           	opt callstack 0
 14457  005970                     _DMA1_DMAA_ISR:
 14458                           	opt callstack 19
 14459                           
 14460                           ; BSR set to: 57
 14461                           ;incstack = 0
 14462  005970  EE13  F104         	lfsr	1,___inthi_sp
 14463                           
 14464                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14465  005974  0139               	movlb	57	; () banked
 14466  005976  97A2               	bcf	162,3,b	;volatile
 14467                           
 14468                           ; BSR set to: 57
 14469  005978  0011               	retfie		f
 14470  00597A                     __end_of_DMA1_DMAA_ISR:
 14471                           	opt callstack 0
 14472                           
 14473 ;; *************** function _DMA1_DMAOR_ISR *****************
 14474 ;; Defined at:
 14475 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14476 ;; Parameters:    Size  Location     Type
 14477 ;;		None
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;		None
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  1    wreg      void 
 14482 ;; Registers used:
 14483 ;;		None
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 3F/39
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14493 ;;Total ram usage:        0 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; This function calls:
 14496 ;;		Nothing
 14497 ;; This function is called by:
 14498 ;;		Interrupt level 2
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text100
 14503  00597C                     __ptext100:
 14504                           	opt callstack 0
 14505  00597C                     _DMA1_DMAOR_ISR:
 14506                           	opt callstack 19
 14507                           
 14508                           ; BSR set to: 57
 14509                           ;incstack = 0
 14510  00597C  EE13  F104         	lfsr	1,___inthi_sp
 14511                           
 14512                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14513  005980  0139               	movlb	57	; () banked
 14514  005982  95A2               	bcf	162,2,b	;volatile
 14515                           
 14516                           ; BSR set to: 57
 14517  005984  0011               	retfie		f
 14518  005986                     __end_of_DMA1_DMAOR_ISR:
 14519                           	opt callstack 0
 14520                           
 14521 ;; *************** function _TMR5_ISR *****************
 14522 ;; Defined at:
 14523 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;		None
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;Total ram usage:        1 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    2
 14544 ;; This function calls:
 14545 ;;		_TMR5_CallBack
 14546 ;;		_TMR5_WriteTimer
 14547 ;; This function is called by:
 14548 ;;		Interrupt level 2
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           	psect	text101
 14553  005264                     __ptext101:
 14554                           	opt callstack 0
 14555  005264                     _TMR5_ISR:
 14556                           	opt callstack 17
 14557                           
 14558                           ; BSR set to: 57
 14559                           ;incstack = 0
 14560  005264  0060  F10C  F059   	movff	btemp+11,??_TMR5_ISR
 14561  00526A  EE13  F104         	lfsr	1,___inthi_sp
 14562                           
 14563                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14564  00526E  0139               	movlb	57	; () banked
 14565  005270  9DA8               	bcf	168,6,b	;volatile
 14566                           
 14567                           ; BSR set to: 57
 14568                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14569  005272  0060  F09F  FFE6   	movff	_timer5ReloadVal,postinc1
 14570  005278  0060  F0A3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14571  00527E  ECD4  F028         	call	_TMR5_WriteTimer	;wreg free
 14572                           
 14573                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14574  005282  4A25               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14575  005284  2A26               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14576  005286  5026               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14577  005288  E104               	bnz	i2u454_40
 14578  00528A  0E32               	movlw	50
 14579  00528C  5C25               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14580  00528E  A0D8               	btfss	status,0,c
 14581  005290  D004               	goto	i2l1135
 14582  005292                     i2u454_40:
 14583                           
 14584                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14585  005292  ECD5  F02B         	call	_TMR5_CallBack	;wreg free
 14586                           
 14587                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14588  005296  6A25               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14589  005298  6A26               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14590  00529A                     i2l1135:
 14591  00529A  0060  F164  F043   	movff	??_TMR5_ISR,btemp+11
 14592  0052A0  0011               	retfie		f
 14593  0052A2                     __end_of_TMR5_ISR:
 14594                           	opt callstack 0
 14595                           
 14596 ;; *************** function _TMR5_WriteTimer *****************
 14597 ;; Defined at:
 14598 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;  timerVal        2  [STACK] unsigned short 
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;		None
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  1  [STACK] void 
 14605 ;; Registers used:
 14606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14607 ;; Tracked objects:
 14608 ;;		On entry : 3F/39
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;Total ram usage:        0 bytes
 14617 ;; Hardware stack levels used:    1
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_TMR5_ISR
 14622 ;; This function uses a reentrant model
 14623 ;;
 14624                           
 14625                           	psect	text102
 14626  0051A8                     __ptext102:
 14627                           	opt callstack 0
 14628  0051A8                     _TMR5_WriteTimer:
 14629                           	opt callstack 18
 14630                           
 14631                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14632                           
 14633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14634                           ;incstack = 0
 14635  0051A8  A49A               	btfss	16282,2,c	;volatile
 14636  0051AA  D00F               	goto	l3750
 14637                           
 14638                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14639  0051AC  909A               	bcf	16282,0,c	;volatile
 14640                           
 14641                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14642                           ;stkvar	_timerVal @ sp[(0)+-2]
 14643  0051AE  0EFF               	movlw	255
 14644  0051B0  24E1               	addwf	fsr1l,w,c
 14645  0051B2  6ED9               	movwf	fsr2l,c
 14646  0051B4  0EFF               	movlw	255
 14647  0051B6  20E2               	addwfc	fsr1h,w,c
 14648  0051B8  6EDA               	movwf	fsr2h,c
 14649  0051BA  50DF               	movf	indf2,w,c
 14650  0051BC  6E99               	movwf	16281,c	;volatile
 14651                           
 14652                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14653                           ;stkvar	_timerVal @ sp[(0)+-2]
 14654  0051BE  0EFE               	movlw	-2
 14655  0051C0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14656                           
 14657                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14658  0051C6  809A               	bsf	16282,0,c	;volatile
 14659                           
 14660                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14661  0051C8  D00C               	goto	l1118
 14662  0051CA                     l3750:
 14663                           
 14664                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14665                           ;stkvar	_timerVal @ sp[(0)+-2]
 14666  0051CA  0EFF               	movlw	255
 14667  0051CC  24E1               	addwf	fsr1l,w,c
 14668  0051CE  6ED9               	movwf	fsr2l,c
 14669  0051D0  0EFF               	movlw	255
 14670  0051D2  20E2               	addwfc	fsr1h,w,c
 14671  0051D4  6EDA               	movwf	fsr2h,c
 14672  0051D6  50DF               	movf	indf2,w,c
 14673  0051D8  6E99               	movwf	16281,c	;volatile
 14674                           
 14675                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14676                           ;stkvar	_timerVal @ sp[(0)+-2]
 14677  0051DA  0EFE               	movlw	-2
 14678  0051DC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14679  0051E2                     l1118:
 14680                           
 14681                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14682  0051E2  52E5               	movf	postdec1,f,c
 14683  0051E4  52E5               	movf	postdec1,f,c
 14684  0051E6  0012               	return		;funcret
 14685  0051E8                     __end_of_TMR5_WriteTimer:
 14686                           	opt callstack 0
 14687                           
 14688 ;; *************** function _TMR5_CallBack *****************
 14689 ;; Defined at:
 14690 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;		None
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;		None
 14695 ;; Return value:  Size  Location     Type
 14696 ;;                  1  [STACK] void 
 14697 ;; Registers used:
 14698 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14699 ;; Tracked objects:
 14700 ;;		On entry : 0/39
 14701 ;;		On exit  : 0/0
 14702 ;;		Unchanged: 0/0
 14703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14708 ;;Total ram usage:        0 bytes
 14709 ;; Hardware stack levels used:    1
 14710 ;; Hardware stack levels required when called:    1
 14711 ;; This function calls:
 14712 ;;		Absolute function
 14713 ;;		_TMR5_DefaultInterruptHandler
 14714 ;; This function is called by:
 14715 ;;		_TMR5_ISR
 14716 ;; This function uses a reentrant model
 14717 ;;
 14718                           
 14719                           	psect	text103
 14720  0057AA                     __ptext103:
 14721                           	opt callstack 0
 14722  0057AA                     _TMR5_CallBack:
 14723                           	opt callstack 17
 14724                           
 14725                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14726                           
 14727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14728                           ;incstack = 0
 14729  0057AA  5001               	movf	_TMR5_InterruptHandler,w,c
 14730  0057AC  1002               	iorwf	_TMR5_InterruptHandler+1,w,c
 14731  0057AE  1003               	iorwf	_TMR5_InterruptHandler+2,w,c
 14732  0057B0  B4D8               	btfsc	status,2,c
 14733  0057B2  0012               	return	
 14734                           
 14735                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14736  0057B4  D801               	call	u127_48
 14737  0057B6  0012               	return	
 14738  0057B8                     u127_48:
 14739  0057B8  0005               	push	
 14740  0057BA  6EFA               	movwf	pclath,c
 14741  0057BC  5001               	movf	_TMR5_InterruptHandler,w,c
 14742  0057BE  6EFD               	movwf	tosl,c
 14743  0057C0  5002               	movf	_TMR5_InterruptHandler+1,w,c
 14744  0057C2  6EFE               	movwf	tosh,c
 14745  0057C4  5003               	movf	_TMR5_InterruptHandler+2,w,c
 14746  0057C6  6EFF               	movwf	tosu,c
 14747  0057C8  50FA               	movf	pclath,w,c
 14748  0057CA  0012               	return		;indir
 14749  0057CC                     __end_of_TMR5_CallBack:
 14750                           	opt callstack 0
 14751                           
 14752 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14753 ;; Defined at:
 14754 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;		None
 14757 ;; Auto vars:     Size  Location     Type
 14758 ;;		None
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1  [STACK] void 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0, btemp+11
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/39
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;Total ram usage:        0 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		_TMR5_Initialize
 14778 ;;		_TMR5_CallBack
 14779 ;; This function uses a reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text104
 14783  0058B2                     __ptext104:
 14784                           	opt callstack 0
 14785  0058B2                     _TMR5_DefaultInterruptHandler:
 14786                           	opt callstack 17
 14787                           
 14788                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14789                           
 14790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14791                           ;incstack = 0
 14792  0058B2  A0BE               	btfss	16318,0,c	;volatile
 14793  0058B4  D002               	goto	u102_40
 14794  0058B6  0E01               	movlw	1
 14795  0058B8  D001               	goto	u102_46
 14796  0058BA                     u102_40:
 14797  0058BA  0E00               	movlw	0
 14798  0058BC                     u102_46:
 14799  0058BC  0AFF               	xorlw	255
 14800  0058BE  6E43               	movwf	btemp+11,c
 14801  0058C0  50BE               	movf	16318,w,c	;volatile
 14802  0058C2  1843               	xorwf	btemp+11,w,c
 14803  0058C4  0BFE               	andlw	-2
 14804  0058C6  1843               	xorwf	btemp+11,w,c
 14805  0058C8  6EBE               	movwf	16318,c	;volatile
 14806                           
 14807                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14808  0058CA  0012               	return		;funcret
 14809  0058CC                     __end_of_TMR5_DefaultInterruptHandler:
 14810                           	opt callstack 0
 14811                           
 14812                           ;
 14813                           ; Interrupt Vector Table @ 0x8
 14814                           ;
 14815                           
 14816                           	psect	ivt0x8
 14817  000008                     __pivt0x8:
 14818                           	opt callstack 0
 14819  000008                     ivt0x8_base:
 14820                           	opt callstack 0
 14821                           
 14822                           ; Vector 0 : SWINT
 14823  000008  166B               	dw	_Default_ISR shr (0+2)
 14824                           
 14825                           ; Vector 1 : HLVD
 14826  00000A  166B               	dw	_Default_ISR shr (0+2)
 14827                           
 14828                           ; Vector 2 : OSF
 14829  00000C  166B               	dw	_Default_ISR shr (0+2)
 14830                           
 14831                           ; Vector 3 : CSW
 14832  00000E  166B               	dw	_Default_ISR shr (0+2)
 14833                           
 14834                           ; Vector 4 : NVM
 14835  000010  166B               	dw	_Default_ISR shr (0+2)
 14836                           
 14837                           ; Vector 5 : SCAN
 14838  000012  166B               	dw	_Default_ISR shr (0+2)
 14839                           
 14840                           ; Vector 6 : CRC
 14841  000014  166B               	dw	_Default_ISR shr (0+2)
 14842                           
 14843                           ; Vector 7 : IOC
 14844  000016  166B               	dw	_Default_ISR shr (0+2)
 14845                           
 14846                           ; Vector 8 : INT0
 14847  000018  1647               	dw	_INT0_ISR shr (0+2)
 14848                           
 14849                           ; Vector 9 : ZCD
 14850  00001A  166B               	dw	_Default_ISR shr (0+2)
 14851                           
 14852                           ; Vector 10 : AD
 14853  00001C  14F9               	dw	_ADCC_ISR shr (0+2)
 14854                           
 14855                           ; Vector 11 : ADT
 14856  00001E  166B               	dw	_Default_ISR shr (0+2)
 14857                           
 14858                           ; Vector 12 : CMP1
 14859  000020  166B               	dw	_Default_ISR shr (0+2)
 14860                           
 14861                           ; Vector 13 : SMT1
 14862  000022  166B               	dw	_Default_ISR shr (0+2)
 14863                           
 14864                           ; Vector 14 : SMT1PRA
 14865  000024  166B               	dw	_Default_ISR shr (0+2)
 14866                           
 14867                           ; Vector 15 : SMT1PRW
 14868  000026  166B               	dw	_Default_ISR shr (0+2)
 14869                           
 14870                           ; Vector 16 : DMA1SCNT
 14871  000028  1653               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14872                           
 14873                           ; Vector 17 : DMA1DCNT
 14874  00002A  1659               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14875                           
 14876                           ; Vector 18 : DMA1OR
 14877  00002C  165F               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14878                           
 14879                           ; Vector 19 : DMA1A
 14880  00002E  165C               	dw	_DMA1_DMAA_ISR shr (0+2)
 14881                           
 14882                           ; Vector 20 : SPI1RX
 14883  000030  166B               	dw	_Default_ISR shr (0+2)
 14884                           
 14885                           ; Vector 21 : SPI1TX
 14886  000032  166B               	dw	_Default_ISR shr (0+2)
 14887                           
 14888                           ; Vector 22 : SPI1
 14889  000034  166B               	dw	_Default_ISR shr (0+2)
 14890                           
 14891                           ; Vector 23 : I2C1RX
 14892  000036  166B               	dw	_Default_ISR shr (0+2)
 14893                           
 14894                           ; Vector 24 : I2C1TX
 14895  000038  166B               	dw	_Default_ISR shr (0+2)
 14896                           
 14897                           ; Vector 25 : I2C1
 14898  00003A  166B               	dw	_Default_ISR shr (0+2)
 14899                           
 14900                           ; Vector 26 : I2C1E
 14901  00003C  166B               	dw	_Default_ISR shr (0+2)
 14902                           
 14903                           ; Vector 27 : U1RX
 14904  00003E  159A               	dw	_UART1_rx_vect_isr shr (0+2)
 14905                           
 14906                           ; Vector 28 : U1TX
 14907  000040  1590               	dw	_UART1_tx_vect_isr shr (0+2)
 14908                           
 14909                           ; Vector 29 : U1E
 14910  000042  166B               	dw	_Default_ISR shr (0+2)
 14911                           
 14912                           ; Vector 30 : U1
 14913  000044  166B               	dw	_Default_ISR shr (0+2)
 14914                           
 14915                           ; Vector 31 : TMR0
 14916  000046  166B               	dw	_Default_ISR shr (0+2)
 14917                           
 14918                           ; Vector 32 : TMR1
 14919  000048  166B               	dw	_Default_ISR shr (0+2)
 14920                           
 14921                           ; Vector 33 : TMR1G
 14922  00004A  166B               	dw	_Default_ISR shr (0+2)
 14923                           
 14924                           ; Vector 34 : TMR2
 14925  00004C  166B               	dw	_Default_ISR shr (0+2)
 14926                           
 14927                           ; Vector 35 : CCP1
 14928  00004E  166B               	dw	_Default_ISR shr (0+2)
 14929                           
 14930                           ; Vector 36 : Undefined
 14931  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14932                           
 14933                           ; Vector 37 : NCO1
 14934  000052  166B               	dw	_Default_ISR shr (0+2)
 14935                           
 14936                           ; Vector 38 : CWG1
 14937  000054  166B               	dw	_Default_ISR shr (0+2)
 14938                           
 14939                           ; Vector 39 : CLC1
 14940  000056  166B               	dw	_Default_ISR shr (0+2)
 14941                           
 14942                           ; Vector 40 : INT1
 14943  000058  164B               	dw	_INT1_ISR shr (0+2)
 14944                           
 14945                           ; Vector 41 : CMP2
 14946  00005A  166B               	dw	_Default_ISR shr (0+2)
 14947                           
 14948                           ; Vector 42 : DMA2SCNT
 14949  00005C  166B               	dw	_Default_ISR shr (0+2)
 14950                           
 14951                           ; Vector 43 : DMA2DCNT
 14952  00005E  166B               	dw	_Default_ISR shr (0+2)
 14953                           
 14954                           ; Vector 44 : DMA2OR
 14955  000060  166B               	dw	_Default_ISR shr (0+2)
 14956                           
 14957                           ; Vector 45 : DMA2A
 14958  000062  166B               	dw	_Default_ISR shr (0+2)
 14959                           
 14960                           ; Vector 46 : I2C2RX
 14961  000064  166B               	dw	_Default_ISR shr (0+2)
 14962                           
 14963                           ; Vector 47 : I2C2TX
 14964  000066  166B               	dw	_Default_ISR shr (0+2)
 14965                           
 14966                           ; Vector 48 : I2C2
 14967  000068  166B               	dw	_Default_ISR shr (0+2)
 14968                           
 14969                           ; Vector 49 : I2C2E
 14970  00006A  166B               	dw	_Default_ISR shr (0+2)
 14971                           
 14972                           ; Vector 50 : U2RX
 14973  00006C  15AE               	dw	_UART2_rx_vect_isr shr (0+2)
 14974                           
 14975                           ; Vector 51 : U2TX
 14976  00006E  15A4               	dw	_UART2_tx_vect_isr shr (0+2)
 14977                           
 14978                           ; Vector 52 : U2E
 14979  000070  166B               	dw	_Default_ISR shr (0+2)
 14980                           
 14981                           ; Vector 53 : U2
 14982  000072  166B               	dw	_Default_ISR shr (0+2)
 14983                           
 14984                           ; Vector 54 : TMR3
 14985  000074  166B               	dw	_Default_ISR shr (0+2)
 14986                           
 14987                           ; Vector 55 : TMR3G
 14988  000076  166B               	dw	_Default_ISR shr (0+2)
 14989                           
 14990                           ; Vector 56 : TMR4
 14991  000078  166B               	dw	_Default_ISR shr (0+2)
 14992                           
 14993                           ; Vector 57 : CCP2
 14994  00007A  166B               	dw	_Default_ISR shr (0+2)
 14995                           
 14996                           ; Vector 58 : Undefined
 14997  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14998                           
 14999                           ; Vector 59 : CWG2
 15000  00007E  166B               	dw	_Default_ISR shr (0+2)
 15001                           
 15002                           ; Vector 60 : CLC2
 15003  000080  166B               	dw	_Default_ISR shr (0+2)
 15004                           
 15005                           ; Vector 61 : INT2
 15006  000082  164F               	dw	_INT2_ISR shr (0+2)
 15007                           
 15008                           ; Vector 62 : Undefined
 15009  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15010                           
 15011                           ; Vector 63 : Undefined
 15012  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15013                           
 15014                           ; Vector 64 : Undefined
 15015  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15016                           
 15017                           ; Vector 65 : Undefined
 15018  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15019                           
 15020                           ; Vector 66 : Undefined
 15021  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15022                           
 15023                           ; Vector 67 : Undefined
 15024  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15025                           
 15026                           ; Vector 68 : Undefined
 15027  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15028                           
 15029                           ; Vector 69 : Undefined
 15030  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15031                           
 15032                           ; Vector 70 : TMR5
 15033  000094  1499               	dw	_TMR5_ISR shr (0+2)
 15034                           
 15035                           ; Vector 71 : TMR5G
 15036  000096  166B               	dw	_Default_ISR shr (0+2)
 15037                           
 15038                           ; Vector 72 : TMR6
 15039  000098  1626               	dw	_TMR6_ISR shr (0+2)
 15040                           
 15041                           ; Vector 73 : CCP3
 15042  00009A  166B               	dw	_Default_ISR shr (0+2)
 15043                           
 15044                           ; Vector 74 : CWG3
 15045  00009C  166B               	dw	_Default_ISR shr (0+2)
 15046                           
 15047                           ; Vector 75 : CLC3
 15048  00009E  166B               	dw	_Default_ISR shr (0+2)
 15049                           
 15050                           ; Vector 76 : Undefined
 15051  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15052                           
 15053                           ; Vector 77 : Undefined
 15054  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15055                           
 15056                           ; Vector 78 : Undefined
 15057  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15058                           
 15059                           ; Vector 79 : Undefined
 15060  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15061                           
 15062                           ; Vector 80 : CCP4
 15063  0000A8  166B               	dw	_Default_ISR shr (0+2)
 15064                           
 15065                           ; Vector 81 : CLC4
 15066  0000AA  166B               	dw	_Default_ISR shr (0+2)
 15067  0000AC                     ivt0x8_undefint:
 15068                           	opt callstack 0
 15069  0000AC  00FF               	reset	
 15070                           
 15071                           	psect	text105
 15072  000000                     __ptext105:
 15073                           	opt callstack 0
 15074                           
 15075                           	psect	rparam
 15076  0000                     
 15077                           	psect	temp
 15078  000038                     btemp:
 15079                           	opt callstack 0
 15080  000038                     	ds	32
 15081  0000                     wtemp0	set	btemp
 15082  0000                     wtemp1	set	btemp+2
 15083  0000                     wtemp2	set	btemp+4
 15084  0000                     wtemp3	set	btemp+6
 15085  0000                     wtemp4	set	btemp+8
 15086  0000                     wtemp5	set	btemp+10
 15087  0000                     wtemp8	set	btemp+1
 15088  0000                     ttemp0	set	btemp
 15089  0000                     ttemp1	set	btemp+3
 15090  0000                     ttemp2	set	btemp+6
 15091  0000                     ttemp3	set	btemp+9
 15092  0000                     ttemp5	set	btemp+1
 15093  0000                     ttemp6	set	btemp+4
 15094  0000                     ttemp7	set	btemp+8
 15095  0000                     ltemp0	set	btemp
 15096  0000                     ltemp1	set	btemp+4
 15097  0000                     ltemp2	set	btemp+8
 15098  0000                     lltemp0	set	btemp
 15099  0000                     lltemp1	set	btemp+8
 15100  0000                     lltemp2	set	btemp+16
 15101  0000                     lltemp3	set	btemp+24
 15102                           tosu	equ	0x3FFF
 15103                           tosh	equ	0x3FFE
 15104                           tosl	equ	0x3FFD
 15105                           stkptr	equ	0x3FFC
 15106                           pclatu	equ	0x3FFB
 15107                           pclath	equ	0x3FFA
 15108                           pcl	equ	0x3FF9
 15109                           tblptru	equ	0x3FF8
 15110                           tblptrh	equ	0x3FF7
 15111                           tblptrl	equ	0x3FF6
 15112                           tablat	equ	0x3FF5
 15113                           prodh	equ	0x3FF4
 15114                           prodl	equ	0x3FF3
 15115                           indf0	equ	0x3FEF
 15116                           postinc0	equ	0x3FEE
 15117                           postdec0	equ	0x3FED
 15118                           preinc0	equ	0x3FEC
 15119                           plusw0	equ	0x3FEB
 15120                           fsr0h	equ	0x3FEA
 15121                           fsr0l	equ	0x3FE9
 15122                           wreg	equ	0x3FE8
 15123                           indf1	equ	0x3FE7
 15124                           postinc1	equ	0x3FE6
 15125                           postdec1	equ	0x3FE5
 15126                           preinc1	equ	0x3FE4
 15127                           plusw1	equ	0x3FE3
 15128                           fsr1h	equ	0x3FE2
 15129                           fsr1l	equ	0x3FE1
 15130                           bsr	equ	0x3FE0
 15131                           indf2	equ	0x3FDF
 15132                           postinc2	equ	0x3FDE
 15133                           postdec2	equ	0x3FDD
 15134                           preinc2	equ	0x3FDC
 15135                           plusw2	equ	0x3FDB
 15136                           fsr2h	equ	0x3FDA
 15137                           fsr2l	equ	0x3FD9
 15138                           status	equ	0x3FD8


Data Sizes:
    Strings     179
    Constant    0
    Data        213
    BSS         622
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      58
    BANK0           160      0     152
    BANK1           256      0     237
    BANK2           256      0     256
    BANK3           256      0     134
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), STR_18(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), STR_18(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[21]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[21]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    a	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_12(CODE[21]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[19]), 
		 -> STR_8(CODE[20]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4285_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[21]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[21]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16611.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16611.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16165 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    S3628response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16600.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    S3628response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16600.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16165 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H27(BANK1[30]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41523
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1761
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     124
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1684
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     864
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     165
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      15
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      86      11       52.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      98       5       95.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     345      58        0.0%
DATA                 0      0     345       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 12 05:01:48 2019

                    _SPI1_Exchange8bit 580C                                      _V 009B  
     __end_of_TMR5_SetInterruptHandler 559E                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 015F  
                                  _H13 01BD                                    _H14 01AC  
                                  _H24 017D                                    _H17 0198  
                                  _H27 0141                                    l194 58F2  
                                  l572 5250                                    l717 5388  
                                  l579 51FE                                    l597 535C  
                                  l847 581A                                    _GIE 01FE97  
                                  u940 4DD8                                    u965 4E0C  
                                  u966 4E0E                                    u958 4DDA  
                                  _abs 5094                                    _pad 426E  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5722  
                         _run_checksum 52DE                     _UART1_Transmit_ISR 5336  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5744  
                         __CFG_ZCD$OFF 000000                                   l1118 51E2  
                                 l1302 4F60                                   l1241 2CF0  
                                 l1234 2BF2                                   l1242 2D20  
                                 l1219 2AC6                                   l1236 2BF6  
                                 l1229 2B88                                   l1510 2DC2  
                                 l1434 4930                                   l1438 4CD0  
                                 l2441 4484                                   l1705 3460  
                                 l1561 37AA                                   l2419 50D4  
                                 l1547 3638                                   l1724 255A  
                                 l1582 3F36                                   l2473 4264  
                                 l1658 42CA                                   l1678 2642  
                                 l5126 56F8                                   l5244 5228  
                                 l3750 51CA                                   l5270 5126  
                                 l4702 3A96                                   l5342 52EC  
                                 l4624 495E                                   l5280 53CE  
                                 l7120 3008                                   l7104 2F9E  
                                 l7024 2D8C                                   l7200 3780  
                                 l5274 5150                                   l4626 4980  
                                 l6402 42C2                                   l4730 3C2E  
                                 l4722 3BA6                                   l7130 302E  
                                 l7210 37C6                                   l6412 435A  
                                 l6404 42D4                                   l6420 4CF6  
                                 l7124 301E                                   l6422 4D22  
                                 l7126 3022                                   l7054 2E4A  
                                 l7046 2E1A                                   l7222 37FA  
                                 l7214 37DC                                   l6408 4310  
                                 l6520 3496                                   l6504 33E2  
                                 l6600 2498                                   l7080 2EF8  
                                 l7072 2EA8                                   l7056 2E56  
                                 l7136 3036                                   l7240 3852  
                                 l4690 39C4                                   l4738 3CDA  
                                 l4666 50C4                                   l6610 24F0  
                                 l7138 3078                                   l7242 3856  
                                 l7218 37E4                                   l7170 36AA  
                                 l7162 367A                                   l7250 3874  
                                 l7322 2AE4                                   l5580 5384  
                                 l4684 397E                                   l6524 34D2  
                                 l7092 2F76                                   l7084 2F28  
                                 l7076 2ECC                                   l7068 2E8A  
                                 l7244 385E                                   l7228 3816  
                                 l7172 36BC                                   l7252 38B6  
                                 l7404 2CDC                                   l7340 2B50  
                                 l5590 5808                                   l5558 5358  
                                 l4678 392A                                   l6454 267C  
                                 l6446 2632                                   l6542 35F4  
                                 l6534 358C                                   l6606 24EC  
                                 l6710 53B0                                   l7094 2F7A  
                                 l7246 3866                                   l7238 3844  
                                 l7182 36FE                                   l7350 2B7C  
                                 l7342 2B54                                   l7414 2CF4  
                                 l5568 57E8                                   l6392 4BFC  
                                 l6528 3502                                   l6616 250C  
                                 l6800 3EB4                                   l7192 3748  
                                 l7280 29F4                                   l6378 43B2  
                                 l6458 269A                                   l6538 35B8  
                                 l4890 4142                                   l6650 324A  
                                 l7186 3716                                   l7346 2B64  
                                 l6388 4BBE                                   l6492 299A  
                                 l6468 28AC                                   l6644 31E0  
                                 l6732 4604                                   l6812 3F08  
                                 l6804 3ECE                                   l6900 4086  
                                 l6820 3F52                                   l7188 3722  
                                 l7364 2BC4                                   l7292 2A26  
                                 l6398 429A                                   l4894 4172  
                                 l6590 23F0                                   l6574 2278  
                                 l6566 2194                                   l6670 4B30  
                                 l6638 3122                                   l6814 3F30  
                                 l7390 2CAE                                   l7382 2C44  
                                 l6488 295E                                   l6672 4B72  
                                 l6728 4592                                   l6840 3FAE  
                                 l6912 40A0                                   l7368 2BDA  
                                 l7384 2C76                                   l6578 22CA  
                                 l6658 32F8                                   l4986 4F72  
                                 l6834 3F90                                   l6914 40C6  
                                 l6772 4AC6                                   l7396 2CC8  
                                 l6854 3FE8                                   l6696 521E  
                                 l6792 3E06                                   l6864 400A  
                                 l6698 5220                                   l6882 404E  
                                 l6866 4030                                   l6884 4068  
                                 STR_1 205F                                   STR_2 208D  
                                 STR_3 20A5                                   STR_4 2070  
                                 STR_5 207F                                   STR_6 209F  
                                 STR_7 2099                                   STR_8 2016  
                                 STR_9 202A                                   u2000 39BE  
                                 u2010 39F0                                   u2100 3BF6  
                                 u2030 3ACE                                   u2110 3C28  
                                 u2120 3C5A                                   u2050 3B20  
                                 u2140 3D12                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2160 3D64                                   u2080 3BA0  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u2500 421A  
                                 u4040 4AB6                                   u4050 3E00  
                                 u3500 4422                                   u3610 2606  
                                 u4235 2FC8                                   u4331 373C  
                                 u1940 50A8                                   u3700 291E  
                                 u4245 2FD8                                   u4237 2FCC  
                                 u1870 49AE                                   u3630 2618  
                                 u4510 2B94                                   u4430 2A0C  
                                 u4255 2FE8                                   u4247 2FDC  
                                 u3480 43A6                                   u1960 3924  
                                 u3720 2934                                   u3800 353E  
                                 u4257 2FEC                                   u3650 2668  
                                 _T6PR 003F93                                   u1980 397A  
                                 u3660 28C0                                   u3580 2594  
                                 u4516 2B96                                   _PMD0 0039C0  
                                 u1877 49A0                                   _PMD1 0039C1  
                                 u3590 2596                                   u3830 361A  
                                 u4470 2B5E                                   u4438 2A0E  
                                 _PMD2 0039C2                                   u1991 3984  
                                 u3671 28F0                                   u3807 3530  
                                 _PMD3 0039C3                                   u3680 2906  
                                 _PMD4 0039C4                                   u3681 2904  
                                 _PMD5 0039C5                                   u3690 291A  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u3790 34F8                                   u3870 21E4  
                                 u3960 336C                                   u3890 2322  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5766  
                     __end_of_ADCC_ISR 540E                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01CD                                   _ctoa 4CD8  
                                 _main 29E4                                   _dtoa 2564  
                                 _prec 0021                                   _nout 0097  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3376  
                                 btemp 0038      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0027              __end_of_SPI1_Exchange8bit 582A  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5668  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 0058             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 592A                       __end_of_INT1_ISR 593A  
                     __end_of_INT2_ISR 594A         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4938          __end_of_OSCILLATOR_Initialize 58F8  
                                PRLOCK 0039EF                        __end_of___aodiv 3B48  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 3D88  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 204E                                  STR_11 203D  
                                STR_20 20AE                                  STR_12 2001  
                                STR_13 2096                                  STR_22 20AE  
                                STR_14 20B1                                  STR_16 20AB  
                        __CFG_WDTE$OFF 000000                                  STR_18 20AB  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 0058  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 59AC      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5640                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 52A2                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 58B2                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002B                                  _flags 0023  
                                _fputc 4382             __size_of_send_lcd_cmd_long 0028  
                                _fputs 4BAE                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0058                                  _width 001F  
                                _putch 587E               _INT1_SetInterruptHandler 55C6  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 0038  
                                ltemp1 003C                                  ltemp2 0040  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0038  
                                ttemp1 003B                                  ttemp2 003E  
                                ttemp3 0041                                  ttemp5 0039  
                                ttemp6 003C                                  ttemp7 0040  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5526  
          _UART1_SetRxInterruptHandler 54FE                                  wtemp0 0038  
                                wtemp1 003A                                  wtemp2 003C  
                                wtemp3 003E                                  wtemp4 0040  
                                wtemp5 0042                                  wtemp8 0039  
                      __end_of_sprintf 47E0                        __end_of_strncmp 426E  
                  ??_UART1_tx_vect_isr 0058              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 568E               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 50DA                  __end_of_ringBufS_init 5486  
                      __initialization 47E0                      _UART2_rx_vect_isr 56B8  
                         __end_of_ctoa 4D60                           __end_of_main 2D88  
                         __end_of_dtoa 29E4                           __end_of_stoa 3634  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0058  
             _TMR5_SetInterruptHandler 5576                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 0058              __end_of_UART1_tx_vect_isr 5666  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5526  
                     _UART1_Initialize 4E30                      _UART2_tx_vect_isr 5690  
                   _UART2_Transmit_ISR 5362                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0058  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               u102_40 58BA                                 u102_46 58BC  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u112_48 5730                                 i2l1135 529A  
                               u114_48 5752                         __CFG_WDTCCS$SC 000000  
                               u116_48 5774                                 u127_48 57B8  
                               _SCANPR 0039F7                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u294_48 5796           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 4FFE  
                  ??_UART2_tx_vect_isr 0058              __end_of_UART2_rx_vect_isr 56DE  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 595A  
                     _UART2_Initialize 4EF6                                 _WaitMs 53B8  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4C46                                 _memset 308A  
                               clear_0 483E                                 clear_1 484C  
                               clear_2 485E                                 clear_3 486A  
                               clear_4 4876                                 _printf 4E94  
                   _eaDogM_WriteString 4A7A                              ?_ADCC_ISR 0058  
                               _strlen 4938                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 504A                         _PMD_Initialize 58F8  
 __end_of_INT2_DefaultInterruptHandler 59B8  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 59B6                           __pdataCOMRAM 005A  
            __end_of_UART2_tx_vect_isr 56B6                                 lltemp0 0038  
                               lltemp1 0040                                 lltemp2 0048  
                               lltemp3 0050                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 4FB0  
                     __end_of_vfprintf 4BAE                             _StartTimer 52A2  
                      _CLC1_Initialize 5700          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5120                      _SYSTEM_Initialize 5166  
                           __accesstop 0060                __end_of__initialization 4888  
                            ?_INT0_ISR 0058                              ?_INT1_ISR 0058  
                            ?_INT2_ISR 0058              __end_of_CLKREF_Initialize 5964  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 51A8                 __end_of_ringBufS_flush 4CD8  
                       __pcstackCOMRAM 0058                             ___inthi_sp 0D04  
                         __pidataBANK0 5996                           __pidataBANK1 464A  
                            ?_TMR5_ISR 0058                              ?_TMR6_ISR 0058  
                       ivt0x8_undefint 00AC                          __end_of_fputc 448E  
                        __end_of_fputs 4C46                  __end_of_TMR5_CallBack 57CC  
                        __end_of_putch 5898                __end_of_TMR6_Initialize 554E  
               __end_of_PMD_Initialize 590C                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 0058                  __end_of_TMR6_CallBack 57AA  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 5970       __end_of_INT2_SetInterruptHandler 55C6  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 51A8  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5862                             __pbssBANK0 0060  
                           __pbssBANK1 01CD                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001C  
                           ??_INT0_ISR 0058                             ??_INT1_ISR 0058  
                           ??_INT2_ISR 0058                      __end_of_TimerDone 5700  
                     _DMA1_DMADCNT_ISR 5964              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5846                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5576                __end_of_ADCC_Initialize 5094  
                           ??_TMR5_ISR 0059                             ??_TMR6_ISR 0058  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 57CC  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 0058  
                     _DMA1_DMASCNT_ISR 594C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5722                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 0058  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 587E                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 51E8                     __end_of_UART1_Read 5264  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 4E94  
                      __size_of_WaitMs 002A                                ___aodiv 38C8  
                              ___aomod 3B48              __end_of_UART1_Receive_ISR 57EC  
                         __psmallconst 2000                   __end_of_init_display 4578  
                              __pcinit 47E0                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 590C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 29E4                                __ptext1 3634  
                              __ptext2 3F40                                __ptext3 4718  
                              __ptext4 2D88                                __ptext5 3D88  
                              __ptext6 4578                                __ptext7 538E  
                              __ptext8 5986                                __ptext9 51E8  
                    _UART2_Receive_ISR 57EC                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us206999 3B32                                us217999 3D76  
                              us409999 40D0                  _OSCILLATOR_Initialize 58E2  
                              us357999 257E                                us374999 3388  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0114                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 4F54  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4718  
                              _strncmp 40DE                   end_of_initialization 4888  
                    __end_of_secs_send 3F40               _INT2_SetInterruptHandler 559E  
             __size_of_secs_II_message 019E                             _r_protocol 2D88  
  __end_of_UART1_SetTxInterruptHandler 54FE            _UART1_SetTxInterruptHandler 54D6  
  __end_of_UART2_SetRxInterruptHandler 54D6            _UART2_SetRxInterruptHandler 54AE  
                           _t_protocol 3634                      __end_of_vfpfcnvrt 2564  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 59AA  
            __end_of_UART2_Receive_ISR 580C                         wdtdelay@dcount 0093  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 0059  
                       _block_checksum 4578                  _INT1_InterruptHandler 0019  
                            _PORTDbits 003FCD               _TMR6_SetInterruptHandler 554E  
                _TMR5_InterruptHandler 0001   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 563E  
          _ADCC_SetADIInterruptHandler 5616                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4D60  
                      _SPI1_Initialize 58CC                       _UART1_put_buffer 538E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 53E2  
         __end_of_INTERRUPT_Initialize 4E30                 __end_of_block_checksum 464A  
 __end_of_INT0_DefaultInterruptHandler 59B4  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 59B2             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 59BA                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3376                         __end_of_printf 4EF6  
             __end_of_DMA1_DMADCNT_ISR 596E                  __end_of_INT0_CallBack 5744  
                       __end_of_strlen 49DA                    start_initialization 47E0  
 __end_of_TMR5_DefaultInterruptHandler 58CC  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 58B2        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 50DA                  __end_of_INT1_CallBack 5766  
                          __end_of_pad 4382                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 545E                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5788                   secs_II_message@block 0085  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 595A  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 597C  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 56DE  
                        _ringBufS_init 545E                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F1  
                          __pdataBANK1 0100             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 504A                        run_checksum@sum 0099  
      __end_of_eaDogM_WriteStringAtPos 5336                __end_of_DMA1_Initialize 4DCA  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 5616  
              __end_of_SPI1_Initialize 58E2               _UART1_RxInterruptHandler 000D  
             _UART2_TxInterruptHandler 0010              __size_of_ringBufS_put_dma 00AA  
                         _init_display 448E                 __end_of_DMA1_DMAOR_ISR 5986  
               __size_of_TMR5_CallBack 0022                  _INT2_InterruptHandler 0016  
                _TMR6_InterruptHandler 0004                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 49DA                   __end_of_wait_lcd_set 59A4  
                            __ptext100 597C                              __ptext101 5264  
                            __ptext102 51A8                              __ptext103 57AA  
                            __ptext104 58B2                              __ptext105 0000  
                   __end_of_StartTimer 52DE                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 53E4  
                  __size_of_r_protocol 0302                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0294                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4DCA                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 0058  
                             _INT0_ISR 591C                               _INT1_ISR 592C  
                             _INT2_ISR 593C                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 3D88  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                             i2u161_48 53FA                              _ring_buf1 0343  
                            _ring_buf2 0300                               i2u330_48 567A  
                             i2u332_48 56A2                               i2u334_48 56CA  
                             i2u328_48 5652                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u454_40 5292                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5362  
                             _TMR5_ISR 5264                               _TMR6_ISR 5898  
                            _vfpfcnvrt 20B6                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 57AA                              _start_lcd 59A4  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 5788  
             __end_of_UART1_put_buffer 53B8                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5226  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 47F4                              copy_data1 4816  
             _INT0_SetInterruptHandler 55EE                 _uart1TxBufferRemaining 0035  
  __end_of_UART2_SetTxInterruptHandler 54AE            _UART2_SetTxInterruptHandler 5486  
                         _uart1RxCount 0032                           _uart2RxCount 002C  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 530A  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 582A                           _send_lcd_cmd 5436  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 5846                  __end_of_DMA1_DMAA_ISR 597A  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 0058  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 591A  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 0059  
                             __ptext10 52DE                               __ptext11 53B8  
                             __ptext20 545E                               __ptext12 56DE  
                             __ptext21 530A                               __ptext13 52A2  
                             __ptext30 308A                               __ptext22 4A7A  
                             __ptext14 598E                               __ptext31 4E94  
                             __ptext23 590C                               __ptext15 5226  
                             __ptext40 4CD8                               __ptext32 4B16  
                             __ptext24 4FB0                               __ptext16 448E  
                             __ptext41 426E                               __ptext33 20B6  
                             __ptext25 599E                               __ptext17 540E  
                             __ptext50 54AE                               __ptext42 4938  
                             __ptext34 40DE                               __ptext26 582A  
                             __ptext18 5436                               __ptext51 4E30  
                             __ptext43 4BAE                               __ptext35 3376  
                             __ptext27 4F54                               __ptext19 580C  
                             __ptext60 49DA                               __ptext52 54D6  
                             __ptext44 4382                               __ptext36 2564  
                             __ptext28 59A4                               __ptext61 58E2  
                             __ptext53 54FE                               __ptext45 587E  
                             __ptext37 5094                               __ptext29 4C46  
                             __ptext70 595A                               __ptext62 5846  
                             __ptext54 5526                               __ptext46 488E  
                             __ptext38 3B48                               __ptext71 5700  
                             __ptext63 4DCA                               __ptext55 554E  
                             __ptext47 5166                               __ptext39 38C8  
                             __ptext80 593C                               __ptext72 504A  
                             __ptext64 4FFE                               __ptext56 50DA  
                             __ptext48 4EF6                               __ptext81 5766  
                             __ptext73 5616                               __ptext65 559E  
                             __ptext57 5576                               __ptext49 5486  
                             __ptext90 5690                               __ptext82 59B6  
                             __ptext74 591C                               __ptext66 55C6  
                             __ptext58 58CC                               __ptext91 5362  
                             __ptext83 59AC                               __ptext75 5722  
                             __ptext67 55EE                               __ptext59 58F8  
                             __ptext92 56B8                               __ptext84 53E4  
                             __ptext76 59B2                               __ptext68 5862  
                             __ptext93 57EC                               __ptext85 59B8  
                             __ptext77 592C                               __ptext69 4D60  
                             __ptext94 5898                               __ptext86 5640  
                             __ptext78 5744                               __ptext95 5788  
                             __ptext87 5336                               __ptext79 59B4  
                             __ptext96 5120                               __ptext88 5668  
                             __ptext97 594C                               __ptext89 57CC  
                             __ptext98 5964                               __ptext99 5970  
                      _secs_II_message 3F40               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 488E                          __size_of_ctoa 0088  
                        __size_of_main 03A4                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0058  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1144 00F1  
                   ??_DMA1_DMASCNT_ISR 0059                               _spi_link 006D  
                             _wdtdelay 4F54             __end_of_UART2_Transmit_ISR 538E  
                             _vfprintf 4B16                      _UART1_is_rx_ready 598E  
                          _UART1_Write 51E8   __end_of_INT1_DefaultInterruptHandler 59B6  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 59B4  
                    _UART1_is_tx_ready 5986                        r_protocol@retry 005A  
                    t_protocol@requeue 0029                          ??_Default_ISR 0058  
                   __end_of_r_protocol 308A                            _uart1RxHead 0034  
                          _uart1TxHead 0037                            _uart2RxHead 002E  
                          _uart1RxTail 0033                            _uart2TxHead 0031  
                          _uart1TxTail 0036                            _uart2RxTail 002D  
                          _uart2TxTail 0030                           _wait_lcd_set 599E  
                   _EXT_INT_Initialize 4FFE   __end_of_TMR6_DefaultInterruptHandler 5166  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5120  
                   __end_of_t_protocol 38C8   __end_of_ADCC_DefaultInterruptHandler 59BA  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 59B8  
                             intlevel2 0000                      _send_lcd_cmd_long 540E  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 4B16  
              __end_of_NCO1_Initialize 5862                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 5996                             _UART1_Read 5226  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 598E  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 002F  
                     _send_lcd_cmd_dma 4FB0                  TMR5_ISR@CountCallBack 0025  
              __end_of_secs_II_message 40DE       __end_of_INT1_SetInterruptHandler 55EE  
            __size_of_UART1_Initialize 0064                        t_protocol@block 008C  
                     ??_DMA1_DMAOR_ISR 0059               _UART1_TxInterruptHandler 000A  
                      t_protocol@retry 002A              __end_of_send_lcd_cmd_long 5436  
                  __end_of_Default_ISR 59B2         __end_of_PIN_MANAGER_Initialize 4A7A  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 530A  
            __size_of_UART2_Initialize 005E  
