

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 20 01:47:07 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=4,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=4,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=4,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=4,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	text146,global,reloc=4,class=CODE,delta=1
   168                           	psect	text147,global,reloc=4,class=CODE,delta=1
   169                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   170                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   171                           	psect	text148,global,reloc=4,class=CODE,delta=1
   172                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   173                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   174  0000                     
   175                           ; Version 2.10
   176                           ; Generated 31/07/2019 GMT
   177                           ; 
   178                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC18F57K42 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     
   210 ;;_mode	offset	0
   211 ;;_channel	offset=-1 (param)
   212 ;;_s	offset=-2 (param)
   213 ;;_cmd	offset=-1 (param)
   214 ;;_cmd	offset=-1 (param)
   215 ;;_data	offset=-1 (param)
   216 ;;__this	offset=-2 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_i	offset	0
   219 ;;_lp_speed	offset	0
   220 ;;_new	offset=-4 (param)
   221 ;;_bn	offset=-5 (param)
   222 ;;_slow	offset=-6 (param)
   223 ;;_chan	offset=-1 (param)
   224 ;;_to_what	offset=-2 (param)
   225 ;;_u	offset	0
   226 ;;_s	offset=-2 (param)
   227 ;;_index	offset=-1 (param)
   228 ;;_arg	offset	0
   229 ;;_exp	offset	4
   230 ;;_sign	offset=-1 (param)
   231 ;;_val	offset=-5 (param)
   232 ;;_flipper	offset=-1 (param)
   233 ;;_f	offset	0
   234 ;;_ap	offset	6
   235 ;;_s	offset=-3 (param)
   236 ;;_fmt	offset=-5 (param)
   237 ;;_line	offset=-1 (param)
   238 ;;_vterm	offset=-2 (param)
   239 ;;_numMilliseconds	offset=-2 (param)
   240 ;;_vterm	offset=-1 (param)
   241 ;;_r	offset=-1 (param)
   242 ;;_c	offset=-2 (param)
   243 ;;_strPtr	offset=-4 (param)
   244 ;;_strPtr	offset=-1 (param)
   245 ;;_delay	offset=-4 (param)
   246 ;;_strPtr	offset=-2 (param)
   247 ;;__this	offset=-2 (param)
   248 ;;_clearBuffer	offset=-3 (param)
   249 ;;_s	offset	0
   250 ;;_k	offset	2
   251 ;;_dest	offset=-2 (param)
   252 ;;_c	offset=-4 (param)
   253 ;;_n	offset=-6 (param)
   254 ;;_ap	offset	0
   255 ;;_fmt	offset=-3 (param)
   256 ;;_cfmt	offset	0
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_vfpfcnvrt$4258	offset	0
   261 ;;_vfpfcnvrt$4269	offset	2
   262 ;;_vfpfcnvrt$4257	offset	4
   263 ;;_llu	offset	6
   264 ;;_ll	offset	14
   265 ;;_f	offset	22
   266 ;;_ct	offset	26
   267 ;;_cp	offset	29
   268 ;;_c	offset	31
   269 ;;_fp	offset=-2 (param)
   270 ;;_fmt	offset=-4 (param)
   271 ;;_ap	offset=-6 (param)
   272 ;;_xtoa$4243	offset	0
   273 ;;_xtoa$4242	offset	2
   274 ;;_n	offset	4
   275 ;;_c	offset	12
   276 ;;_i	offset	14
   277 ;;_w	offset	16
   278 ;;_p	offset	18
   279 ;;_fp	offset=-2 (param)
   280 ;;_d	offset=-10 (param)
   281 ;;_x	offset=-11 (param)
   282 ;;_toupper$4927	offset	0
   283 ;;_c	offset=-2 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_n	offset	0
   287 ;;_i	offset	8
   288 ;;_w	offset	10
   289 ;;_p	offset	12
   290 ;;_fp	offset=-2 (param)
   291 ;;_d	offset=-10 (param)
   292 ;;_counter	offset	0
   293 ;;_dividend	offset=-8 (param)
   294 ;;_divisor	offset=-16 (param)
   295 ;;_quotient	offset	0
   296 ;;_counter	offset	8
   297 ;;_dividend	offset=-8 (param)
   298 ;;_divisor	offset=-16 (param)
   299 ;;_r	offset	0
   300 ;;_l	offset	2
   301 ;;__l	offset=-2 (param)
   302 ;;__r	offset=-4 (param)
   303 ;;_n	offset=-6 (param)
   304 ;;_nuls	offset	0
   305 ;;_l	offset	7
   306 ;;_p	offset	9
   307 ;;_cp	offset	11
   308 ;;_w	offset	13
   309 ;;_i	offset	15
   310 ;;_fp	offset=-2 (param)
   311 ;;_s	offset=-4 (param)
   312 ;;_efgtoa$4215	offset	0
   313 ;;_efgtoa$4214	offset	2
   314 ;;_efgtoa$4213	offset	4
   315 ;;_efgtoa$4209	offset	6
   316 ;;_efgtoa$4205	offset	8
   317 ;;_efgtoa$4204	offset	10
   318 ;;_u	offset	12
   319 ;;_g	offset	16
   320 ;;_l	offset	20
   321 ;;_h	offset	24
   322 ;;_ou	offset	28
   323 ;;_n	offset	32
   324 ;;_e	offset	34
   325 ;;_i	offset	36
   326 ;;_w	offset	38
   327 ;;_p	offset	40
   328 ;;_sign	offset	42
   329 ;;_d	offset	44
   330 ;;_ne	offset	46
   331 ;;_m	offset	48
   332 ;;_pp	offset	50
   333 ;;_t	offset	52
   334 ;;_mode	offset	54
   335 ;;_nmode	offset	55
   336 ;;_fp	offset=-2 (param)
   337 ;;_f	offset=-6 (param)
   338 ;;_c	offset=-7 (param)
   339 ;;_tolower$4912	offset	0
   340 ;;_c	offset=-2 (param)
   341 ;;_c	offset=-2 (param)
   342 ;;_d	offset	0
   343 ;;_s	offset	2
   344 ;;_dest	offset=-2 (param)
   345 ;;_src	offset=-4 (param)
   346 ;;_u	offset	0
   347 ;;_m	offset	4
   348 ;;_e	offset	8
   349 ;;_x	offset=-4 (param)
   350 ;;_u	offset	0
   351 ;;_e	offset	4
   352 ;;_x	offset=-4 (param)
   353 ;;_exp1	offset	0
   354 ;;_sign1	offset	1
   355 ;;_f1	offset=-4 (param)
   356 ;;_b	offset=-4 (param)
   357 ;;_a	offset=-8 (param)
   358 ;;_grs	offset	0
   359 ;;_bexp	offset	1
   360 ;;_aexp	offset	2
   361 ;;_signs	offset	3
   362 ;;_b	offset=-4 (param)
   363 ;;_a	offset=-8 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_prod	offset	0
   366 ;;_grs	offset	4
   367 ;;_temp	offset	8
   368 ;;_bexp	offset	10
   369 ;;_aexp	offset	11
   370 ;;_sign	offset	12
   371 ;;_b	offset=-4 (param)
   372 ;;_a	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_ff1	offset=-4 (param)
   376 ;;_ff2	offset=-8 (param)
   377 ;;_grs	offset	0
   378 ;;_rem	offset	4
   379 ;;_new_exp	offset	8
   380 ;;_aexp	offset	10
   381 ;;_bexp	offset	11
   382 ;;_sign	offset	12
   383 ;;_b	offset=-4 (param)
   384 ;;_a	offset=-8 (param)
   385 ;;_sign	offset	0
   386 ;;_counter	offset	1
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_quotient	offset	0
   390 ;;_sign	offset	2
   391 ;;_counter	offset	3
   392 ;;_dividend	offset=-2 (param)
   393 ;;_divisor	offset=-4 (param)
   394 ;;_dtoa$4181	offset	0
   395 ;;_n	offset	2
   396 ;;_i	offset	10
   397 ;;_s	offset	12
   398 ;;_w	offset	14
   399 ;;_p	offset	16
   400 ;;_fp	offset=-2 (param)
   401 ;;_d	offset=-10 (param)
   402 ;;_a	offset=-2 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	8
   409 ;;_counter	offset	9
   410 ;;_dividend	offset=-8 (param)
   411 ;;_divisor	offset=-16 (param)
   412 ;;_w	offset	0
   413 ;;_fp	offset=-2 (param)
   414 ;;_c	offset=-3 (param)
   415 ;;_w	offset	0
   416 ;;_i	offset	2
   417 ;;_fp	offset=-2 (param)
   418 ;;_buf	offset=-4 (param)
   419 ;;_p	offset=-6 (param)
   420 ;;_a	offset	0
   421 ;;_s	offset=-2 (param)
   422 ;;_i	offset	0
   423 ;;_c	offset	2
   424 ;;_s	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-2 (param)
   427 ;;_fp	offset=-4 (param)
   428 ;;_c	offset=-1 (param)
   429 ;;__this	offset=-2 (param)
   430 ;;_c	offset=-3 (param)
   431 ;;_atoi$4765	offset	0
   432 ;;_atoi$4763	offset	2
   433 ;;_atoi$4764	offset	4
   434 ;;_n	offset	5
   435 ;;_neg	offset	7
   436 ;;_s	offset=-2 (param)
   437 ;;_isspace$4803	offset	0
   438 ;;_c	offset=-2 (param)
   439 ;;_c	offset=-2 (param)
   440 ;;_vterm	offset=-1 (param)
   441 ;;_new_response_info	offset=-1 (param)
   442 ;;_new_response_info	offset=-1 (param)
   443 ;;_level	offset=-2 (param)
   444 ;;_dutyValue	offset=-2 (param)
   445 ;;_timer	offset=-1 (param)
   446 ;;_timer	offset=-1 (param)
   447 ;;_count	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_state	offset	0
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_InterruptHandler	offset=-3 (param)
   458 ;;_InterruptHandler	offset=-3 (param)
   459 ;;_timerVal	offset=-2 (param)
   460 ;;_channel	offset=-1 (param)
   461 ;;_i	offset	0
   462                           
   463                           	psect	idataBANK0
   464  018624                     __pidataBANK0:
   465                           	opt callstack 0
   466                           
   467                           ;initializer for _R
   468  018624  0000               	dw	0
   469  018626  0000               	dw	0
   470  018628  0000               	dw	0
   471  01862A  0000               	dw	0
   472  01862C  0000               	dw	0
   473  01862E  0000               	dw	0
   474  018630  0000               	dw	0
   475  018632  0000               	dw	0
   476  018634  0000               	dw	0
   477  018636  0000               	dw	0
   478  018638  0000               	dw	0
   479  01863A  0000               	dw	0
   480  01863C  0000               	dw	0
   481  01863E  0000               	dw	0
   482  018640  0000               	dw	0
   483  018642  0000               	dw	0
   484  018644  0F5B               	dw	3931
   485  018646  0F88               	dw	3976
   486  018648  00                 	db	0
   487  018649  0000               	dw	0
   488  01864B  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  01864C  28                 	db	40
   492  01864D  6E                 	db	110
   493  01864E  75                 	db	117
   494  01864F  6C                 	db	108
   495  018650  6C                 	db	108
   496  018651  29                 	db	41
   497  018652  00                 	db	0
   498                           
   499                           ;initializer for _port_data
   500  018653  FF                 	db	255
   501  018654  00                 	db	0
   502  018655  FF                 	db	255
   503  018656  00                 	db	0
   504  018657  FF                 	db	255
   505  018658  00                 	db	0
   506  018659  FF                 	db	255
   507  01865A  00                 	db	0
   508  01865B  FF                 	db	255
   509  01865C  00                 	db	0
   510  01865D  FF                 	db	255
   511  01865E  00                 	db	0
   512  01865F  FF                 	db	255
   513  018660  00                 	db	0
   514  018661  FF                 	db	255
   515  018662  00                 	db	0
   516                           
   517                           	psect	idataBANK1
   518  0176DC                     __pidataBANK1:
   519                           	opt callstack 0
   520                           
   521                           ;initializer for _V
   522  0176DC  00                 	db	0
   523  0176DD  00                 	db	0
   524  0176DE  00                 	db	0
   525  0176DF  00                 	db	0
   526  0176E0  00                 	db	0
   527  0176E1  00                 	db	0
   528  0176E2  00                 	db	0
   529  0176E3  00                 	db	0
   530  0176E4  00                 	db	0
   531  0176E5  00                 	db	0
   532  0176E6  00                 	db	0
   533  0176E7  00                 	db	0
   534  0176E8  00                 	db	0
   535  0176E9  00                 	db	0
   536  0176EA  00                 	db	0
   537  0176EB  00                 	db	0
   538  0176EC  00                 	db	0
   539  0176ED  00                 	db	0
   540  0176EE  00                 	db	0
   541  0176EF  00                 	db	0
   542  0176F0  00                 	db	0
   543  0176F1  00                 	db	0
   544  0176F2  00                 	db	0
   545  0176F3  00                 	db	0
   546  0176F4  00                 	db	0
   547  0176F5  00                 	db	0
   548  0176F6  00                 	db	0
   549  0176F7  00                 	db	0
   550  0176F8  00                 	db	0
   551  0176F9  00                 	db	0
   552  0176FA  00                 	db	0
   553  0176FB  00                 	db	0
   554  0176FC  00                 	db	0
   555  0176FD  00                 	db	0
   556  0176FE  00                 	db	0
   557  0176FF  00                 	db	0
   558  017700  00                 	db	0
   559  017701  00                 	db	0
   560  017702  00                 	db	0
   561  017703  00                 	db	0
   562  017704  00                 	db	0
   563  017705  00                 	db	0
   564  017706  00                 	db	0
   565  017707  00                 	db	0
   566  017708  00                 	db	0
   567  017709  00                 	db	0
   568  01770A  00                 	db	0
   569  01770B  00                 	db	0
   570  01770C  00                 	db	0
   571  01770D  00                 	db	0
   572  01770E  00                 	db	0
   573  01770F  00                 	db	0
   574  017710  00                 	db	0
   575  017711  00                 	db	0
   576  017712  00                 	db	0
   577  017713  00                 	db	0
   578  017714  00                 	db	0
   579  017715  00                 	db	0
   580  017716  00                 	db	0
   581  017717  00                 	db	0
   582  017718  00                 	db	0
   583  017719  00                 	db	0
   584  01771A  00                 	db	0
   585  01771B  00                 	db	0
   586  01771C  00                 	db	0
   587  01771D  00                 	db	0
   588  01771E  00                 	db	0
   589  01771F  00                 	db	0
   590  017720  00                 	db	0
   591  017721  00                 	db	0
   592  017722  00                 	db	0
   593  017723  00                 	db	0
   594  017724  00                 	db	0
   595  017725  00                 	db	0
   596  017726  00                 	db	0
   597  017727  00                 	db	0
   598  017728  00                 	db	0
   599  017729  00                 	db	0
   600  01772A  00                 	db	0
   601  01772B  00                 	db	0
   602  01772C  00                 	db	0
   603  01772D  00                 	db	0
   604  01772E  00                 	db	0
   605  01772F  00                 	db	0
   606  017730  00                 	db	0
   607  017731  00                 	db	0
   608  017732  00                 	db	0
   609  017733  00                 	db	0
   610  017734  00                 	db	0
   611  017735  00                 	db	0
   612  017736  00                 	db	0
   613  017737  00                 	db	0
   614  017738  00                 	db	0
   615  017739  00                 	db	0
   616  01773A  00                 	db	0
   617  01773B  00                 	db	0
   618  01773C  00                 	db	0
   619  01773D  00                 	db	0
   620  01773E  00                 	db	0
   621  01773F  00                 	db	0
   622  017740  00                 	db	0
   623  017741  00                 	db	0
   624  017742  00                 	db	0
   625  017743  00                 	db	0
   626  017744  00                 	db	0
   627  017745  00                 	db	0
   628  017746  00                 	db	0
   629  017747  00                 	db	0
   630  017748  00                 	db	0
   631  017749  00                 	db	0
   632  01774A  00                 	db	0
   633  01774B  00                 	db	0
   634  01774C  00                 	db	0
   635  01774D  00                 	db	0
   636  01774E  00                 	db	0
   637  01774F  00                 	db	0
   638  017750  00                 	db	0
   639  017751  00                 	db	0
   640  017752  00                 	db	0
   641  017753  00                 	db	0
   642  017754  00                 	db	0
   643  017755  00                 	db	0
   644  017756  00                 	db	0
   645  017757  00                 	db	0
   646  017758  00                 	db	0
   647  017759  00                 	db	0
   648  01775A  00                 	db	0
   649  01775B  00                 	db	0
   650  01775C  00                 	db	0
   651  01775D  0000               	dw	0
   652  01775F  0000               	dw	0
   653  017761  0000               	dw	0
   654  017763  0000               	dw	0
   655  017765  00                 	db	0
   656  017766  00                 	db	0
   657  017767  00                 	db	0
   658  017768  00                 	db	0
   659  017769  00                 	db	0
   660  01776A  00                 	db	0
   661  01776B  0000               	dw	0
   662  01776D  0000               	dw	0
   663  01776F  0000               	dw	0
   664  017771  0000               	dw	0
   665  017773  0000               	dw	0
   666  017775  0000               	dw	0
   667  017777  00                 	db	0
   668  017778  00                 	db	0
   669  017779  00                 	db	0
   670  01777A  00                 	db	0
   671  01777B  00                 	db	0
   672  01777C  00                 	db	0
   673  01777D  00                 	db	0
   674  01777E  00                 	db	0
   675  01777F  00                 	db	0
   676  017780  00                 	db	0
   677  017781  0000               	dw	0
   678  017783  0000               	dw	0
   679  017785  2D                 	db	45
   680  017786  00                 	db	0
   681  017787  0000               	dw	0
   682  017789  0000               	dw	0
   683  01778B  0000               	dw	0
   684  01778D  0000               	dw	0
   685  01778F  0000               	dw	0
   686  017791  0000               	dw	0
   687  017793  0000               	dw	0
   688  017795  0000               	dw	0
   689                           
   690                           	psect	mediumconst
   691  00FE50                     __pmediumconst:
   692                           	opt callstack 0
   693  00FE50  00                 	db	0
   694  00FE51                     _T:
   695                           	opt callstack 0
   696  00FE51  63                 	db	99
   697  00FE52  6F                 	db	111
   698  00FE53  6D                 	db	109
   699  00FE54  6D                 	db	109
   700  00FE55  61                 	db	97
   701  00FE56  6E                 	db	110
   702  00FE57  64                 	db	100
   703  00FE58  73                 	db	115
   704  00FE59  20                 	db	32
   705  00FE5A  31                 	db	49
   706  00FE5B  00                 	db	0
   707  00FE5C  00                 	db	0
   708  00FE5D  00                 	db	0
   709  00FE5E  00                 	db	0
   710  00FE5F  00                 	db	0
   711  00FE60  00                 	db	0
   712  00FE61  00                 	db	0
   713  00FE62  00                 	db	0
   714  00FE63  64                 	db	100
   715  00FE64  69                 	db	105
   716  00FE65  73                 	db	115
   717  00FE66  70                 	db	112
   718  00FE67  6C                 	db	108
   719  00FE68  61                 	db	97
   720  00FE69  79                 	db	121
   721  00FE6A  73                 	db	115
   722  00FE6B  20                 	db	32
   723  00FE6C  31                 	db	49
   724  00FE6D  00                 	db	0
   725  00FE6E  00                 	db	0
   726  00FE6F  00                 	db	0
   727  00FE70  00                 	db	0
   728  00FE71  00                 	db	0
   729  00FE72  00                 	db	0
   730  00FE73  00                 	db	0
   731  00FE74  00                 	db	0
   732  00FE75  63                 	db	99
   733  00FE76  6F                 	db	111
   734  00FE77  6D                 	db	109
   735  00FE78  6D                 	db	109
   736  00FE79  61                 	db	97
   737  00FE7A  6E                 	db	110
   738  00FE7B  64                 	db	100
   739  00FE7C  73                 	db	115
   740  00FE7D  20                 	db	32
   741  00FE7E  32                 	db	50
   742  00FE7F  00                 	db	0
   743  00FE80  00                 	db	0
   744  00FE81  00                 	db	0
   745  00FE82  00                 	db	0
   746  00FE83  00                 	db	0
   747  00FE84  00                 	db	0
   748  00FE85  00                 	db	0
   749  00FE86  00                 	db	0
   750  00FE87  64                 	db	100
   751  00FE88  69                 	db	105
   752  00FE89  73                 	db	115
   753  00FE8A  70                 	db	112
   754  00FE8B  6C                 	db	108
   755  00FE8C  61                 	db	97
   756  00FE8D  79                 	db	121
   757  00FE8E  73                 	db	115
   758  00FE8F  20                 	db	32
   759  00FE90  32                 	db	50
   760  00FE91  00                 	db	0
   761  00FE92  00                 	db	0
   762  00FE93  00                 	db	0
   763  00FE94  00                 	db	0
   764  00FE95  00                 	db	0
   765  00FE96  00                 	db	0
   766  00FE97  00                 	db	0
   767  00FE98  00                 	db	0
   768  00FE99  63                 	db	99
   769  00FE9A  6F                 	db	111
   770  00FE9B  6D                 	db	109
   771  00FE9C  6D                 	db	109
   772  00FE9D  61                 	db	97
   773  00FE9E  6E                 	db	110
   774  00FE9F  64                 	db	100
   775  00FEA0  73                 	db	115
   776  00FEA1  20                 	db	32
   777  00FEA2  33                 	db	51
   778  00FEA3  00                 	db	0
   779  00FEA4  00                 	db	0
   780  00FEA5  00                 	db	0
   781  00FEA6  00                 	db	0
   782  00FEA7  00                 	db	0
   783  00FEA8  00                 	db	0
   784  00FEA9  00                 	db	0
   785  00FEAA  00                 	db	0
   786  00FEAB  64                 	db	100
   787  00FEAC  69                 	db	105
   788  00FEAD  73                 	db	115
   789  00FEAE  70                 	db	112
   790  00FEAF  6C                 	db	108
   791  00FEB0  61                 	db	97
   792  00FEB1  79                 	db	121
   793  00FEB2  73                 	db	115
   794  00FEB3  20                 	db	32
   795  00FEB4  33                 	db	51
   796  00FEB5  00                 	db	0
   797  00FEB6  00                 	db	0
   798  00FEB7  00                 	db	0
   799  00FEB8  00                 	db	0
   800  00FEB9  00                 	db	0
   801  00FEBA  00                 	db	0
   802  00FEBB  00                 	db	0
   803  00FEBC  00                 	db	0
   804  00FEBD  63                 	db	99
   805  00FEBE  6F                 	db	111
   806  00FEBF  6D                 	db	109
   807  00FEC0  6D                 	db	109
   808  00FEC1  61                 	db	97
   809  00FEC2  6E                 	db	110
   810  00FEC3  64                 	db	100
   811  00FEC4  73                 	db	115
   812  00FEC5  20                 	db	32
   813  00FEC6  34                 	db	52
   814  00FEC7  00                 	db	0
   815  00FEC8  00                 	db	0
   816  00FEC9  00                 	db	0
   817  00FECA  00                 	db	0
   818  00FECB  00                 	db	0
   819  00FECC  00                 	db	0
   820  00FECD  00                 	db	0
   821  00FECE  00                 	db	0
   822  00FECF  64                 	db	100
   823  00FED0  69                 	db	105
   824  00FED1  73                 	db	115
   825  00FED2  70                 	db	112
   826  00FED3  6C                 	db	108
   827  00FED4  61                 	db	97
   828  00FED5  79                 	db	121
   829  00FED6  73                 	db	115
   830  00FED7  20                 	db	32
   831  00FED8  34                 	db	52
   832  00FED9  00                 	db	0
   833  00FEDA  00                 	db	0
   834  00FEDB  00                 	db	0
   835  00FEDC  00                 	db	0
   836  00FEDD  00                 	db	0
   837  00FEDE  00                 	db	0
   838  00FEDF  00                 	db	0
   839  00FEE0  00                 	db	0
   840  00FEE1                     __end_of_T:
   841                           	opt callstack 0
   842  0000                     _IVTADL	set	14493
   843  0000                     _IVTADH	set	14494
   844  0000                     _IVTADU	set	14495
   845  0000                     _PIR4bits	set	14756
   846  0000                     _PIE8bits	set	14744
   847  0000                     _PIR8bits	set	14760
   848  0000                     _SCANPR	set	14839
   849  0000                     _DMA2PR	set	14836
   850  0000                     _DMA1PR	set	14835
   851  0000                     _MAINPR	set	14834
   852  0000                     _ISRPR	set	14833
   853  0000                     _PIE2bits	set	14738
   854  0000                     _PIR2bits	set	14754
   855  0000                     _PIE9bits	set	14745
   856  0000                     _PIR9bits	set	14761
   857  0000                     _PIE6bits	set	14742
   858  0000                     _PIE3bits	set	14739
   859  0000                     _PMD7	set	14791
   860  0000                     _PMD6	set	14790
   861  0000                     _PMD5	set	14789
   862  0000                     _PMD4	set	14788
   863  0000                     _PMD3	set	14787
   864  0000                     _PMD2	set	14786
   865  0000                     _PMD1	set	14785
   866  0000                     _PMD0	set	14784
   867  0000                     _OSCTUNE	set	14814
   868  0000                     _OSCFRQ	set	14815
   869  0000                     _OSCEN	set	14813
   870  0000                     _OSCCON3	set	14811
   871  0000                     _OSCCON1	set	14809
   872  0000                     _IPR8bits	set	14728
   873  0000                     _IPR9bits	set	14729
   874  0000                     _IPR5bits	set	14725
   875  0000                     _IPR1bits	set	14721
   876  0000                     _IPR3bits	set	14723
   877  0000                     _IPR6bits	set	14726
   878  0000                     _IPR2bits	set	14722
   879  0000                     _PIE5bits	set	14741
   880  0000                     _PIE1bits	set	14737
   881  0000                     _PIR5bits	set	14757
   882  0000                     _PIR1bits	set	14753
   883  0000                     _PLLR	set	118496
   884  0000                     _SPI1SDIPPS	set	15071
   885  0000                     _U1RXPPS	set	15077
   886  0000                     _RC6PPS	set	14870
   887  0000                     _RC5PPS	set	14869
   888  0000                     _INT1PPS	set	15041
   889  0000                     _RD1PPS	set	14873
   890  0000                     _INT0PPS	set	15040
   891  0000                     _RC3PPS	set	14867
   892  0000                     _RB6PPS	set	14862
   893  0000                     _SPI1SCKPPS	set	15070
   894  0000                     _U2RXPPS	set	15080
   895  0000                     _SLRCONF	set	14995
   896  0000                     _SLRCONE	set	14979
   897  0000                     _SLRCOND	set	14963
   898  0000                     _SLRCONC	set	14947
   899  0000                     _SLRCONB	set	14931
   900  0000                     _SLRCONA	set	14915
   901  0000                     _ODCOND	set	14962
   902  0000                     _ODCONC	set	14946
   903  0000                     _ODCONB	set	14930
   904  0000                     _ODCONA	set	14914
   905  0000                     _ODCONF	set	14994
   906  0000                     _ODCONE	set	14978
   907  0000                     _WPUC	set	14945
   908  0000                     _WPUA	set	14913
   909  0000                     _WPUB	set	14929
   910  0000                     _WPUE	set	14977
   911  0000                     _WPUF	set	14993
   912  0000                     _WPUD	set	14961
   913  0000                     _ANSELA	set	14912
   914  0000                     _ANSELF	set	14992
   915  0000                     _ANSELE	set	14976
   916  0000                     _ANSELB	set	14928
   917  0000                     _ANSELC	set	14944
   918  0000                     _ANSELD	set	14960
   919  0000                     _DMA2SSA	set	15321
   920  0000                     _DMA1SSA	set	15353
   921  0000                     _DMA2DSZ	set	15310
   922  0000                     _DMA2SSZ	set	15319
   923  0000                     _DMA2DSA	set	15312
   924  0000                     _DMA1DSZ	set	15342
   925  0000                     _DMA1SSZ	set	15351
   926  0000                     _DMA1DSA	set	15344
   927  0000                     _DMA1CON0bits	set	15356
   928  0000                     _DMA1CON1bits	set	15357
   929  0000                     _DMA2CON0	set	15324
   930  0000                     _DMA2AIRQ	set	15326
   931  0000                     _DMA2SIRQ	set	15327
   932  0000                     _DMA2CON1	set	15325
   933  0000                     _DMA1CON0	set	15356
   934  0000                     _DMA1AIRQ	set	15358
   935  0000                     _DMA1SIRQ	set	15359
   936  0000                     _DMA1CON1	set	15357
   937  0000                     _CLKRCON	set	15589
   938  0000                     _CLKRCLK	set	15590
   939  0000                     _SPI1INTFbits	set	15642
   940  0000                     _SPI1RXB	set	15632
   941  0000                     _SPI1TXB	set	15633
   942  0000                     _SPI1TCNTL	set	15634
   943  0000                     _SPI1CON0	set	15636
   944  0000                     _SPI1CLK	set	15644
   945  0000                     _SPI1BAUD	set	15641
   946  0000                     _SPI1CON2	set	15638
   947  0000                     _SPI1CON1	set	15637
   948  0000                     _U2RXB	set	15824
   949  0000                     _U2TXB	set	15826
   950  0000                     _U2ERRIE	set	15842
   951  0000                     _U2ERRIR	set	15841
   952  0000                     _U2UIR	set	15840
   953  0000                     _U2FIFO	set	15839
   954  0000                     _U2BRGH	set	15838
   955  0000                     _U2BRGL	set	15837
   956  0000                     _U2CON2	set	15836
   957  0000                     _U2CON1	set	15835
   958  0000                     _U2CON0	set	15834
   959  0000                     _U2P3L	set	15832
   960  0000                     _U2P2L	set	15830
   961  0000                     _U2P1L	set	15828
   962  0000                     _U1RXB	set	15848
   963  0000                     _U1TXB	set	15850
   964  0000                     _U1ERRIE	set	15866
   965  0000                     _U1ERRIR	set	15865
   966  0000                     _U1UIR	set	15864
   967  0000                     _U1FIFO	set	15863
   968  0000                     _U1BRGH	set	15862
   969  0000                     _U1BRGL	set	15861
   970  0000                     _U1CON2	set	15860
   971  0000                     _U1CON1	set	15859
   972  0000                     _U1CON0	set	15858
   973  0000                     _U1P3H	set	15857
   974  0000                     _U1P3L	set	15856
   975  0000                     _U1P2H	set	15855
   976  0000                     _U1P2L	set	15854
   977  0000                     _U1P1H	set	15853
   978  0000                     _U1P1L	set	15852
   979  0000                     _FVRCON	set	16065
   980  0000                     _ADFLTRL	set	16102
   981  0000                     _ADFLTRH	set	16103
   982  0000                     _ADCON0bits	set	16120
   983  0000                     _ADCON0	set	16120
   984  0000                     _ADCLK	set	16127
   985  0000                     _ADACT	set	16126
   986  0000                     _ADREF	set	16125
   987  0000                     _ADSTAT	set	16124
   988  0000                     _ADCON3	set	16123
   989  0000                     _ADCON2	set	16122
   990  0000                     _ADCON1	set	16121
   991  0000                     _ADPREH	set	16119
   992  0000                     _ADPREL	set	16118
   993  0000                     _ADCAP	set	16117
   994  0000                     _ADACQH	set	16116
   995  0000                     _ADACQL	set	16115
   996  0000                     _ADPCH	set	16113
   997  0000                     _ADRPT	set	16108
   998  0000                     _ADACCU	set	16106
   999  0000                     _ADSTPTH	set	16101
  1000  0000                     _ADSTPTL	set	16100
  1001  0000                     _ADUTHH	set	16097
  1002  0000                     _ADUTHL	set	16096
  1003  0000                     _ADLTHH	set	16095
  1004  0000                     _ADLTHL	set	16094
  1005  0000                     _CCPTMRS1bits	set	16223
  1006  0000                     _LATCbits	set	16316
  1007  0000                     _LATDbits	set	16317
  1008  0000                     _PORTBbits	set	16331
  1009  0000                     _T2CON	set	16300
  1010  0000                     _T2TMR	set	16298
  1011  0000                     _T2PR	set	16299
  1012  0000                     _T2RST	set	16303
  1013  0000                     _T2HLT	set	16301
  1014  0000                     _T2CLKCON	set	16302
  1015  0000                     _PWM8DCL	set	16224
  1016  0000                     _PWM8DCH	set	16225
  1017  0000                     _PWM8CON	set	16226
  1018  0000                     _LATEbits	set	16318
  1019  0000                     _T5CONbits	set	16282
  1020  0000                     _T5CON	set	16282
  1021  0000                     _TMR5L	set	16280
  1022  0000                     _TMR5H	set	16281
  1023  0000                     _T5CLK	set	16285
  1024  0000                     _T5GATE	set	16284
  1025  0000                     _T5GCON	set	16283
  1026  0000                     _T6CON	set	16276
  1027  0000                     _T6TMR	set	16274
  1028  0000                     _T6PR	set	16275
  1029  0000                     _T6RST	set	16279
  1030  0000                     _T6HLT	set	16277
  1031  0000                     _T6CLKCON	set	16278
  1032  0000                     _TRISD	set	16325
  1033  0000                     _TRISC	set	16324
  1034  0000                     _TRISB	set	16323
  1035  0000                     _TRISA	set	16322
  1036  0000                     _TRISF	set	16327
  1037  0000                     _TRISE	set	16326
  1038  0000                     _LATC	set	16316
  1039  0000                     _LATB	set	16315
  1040  0000                     _LATF	set	16319
  1041  0000                     _LATA	set	16314
  1042  0000                     _LATD	set	16317
  1043  0000                     _LATE	set	16318
  1044  0000                     _IVTLOCKbits	set	16340
  1045  0000                     _IVTLOCK	set	16340
  1046  0000                     _INTCON0bits	set	16338
  1047  0000                     _GIE	set	130711
  1048  00FEE1                     
  1049                           ; BSR set to: 57
  1050  00FEE1  20                 	db	32
  1051  00FEE2  4D                 	db	77	;'M'
  1052  00FEE3  65                 	db	101	;'e'
  1053  00FEE4  73                 	db	115	;'s'
  1054  00FEE5  67                 	db	103	;'g'
  1055  00FEE6  20                 	db	32
  1056  00FEE7  25                 	db	37
  1057  00FEE8  64                 	db	100	;'d'
  1058  00FEE9  20                 	db	32
  1059  00FEEA  53                 	db	83	;'S'
  1060  00FEEB  74                 	db	116	;'t'
  1061  00FEEC  61                 	db	97	;'a'
  1062  00FEED  63                 	db	99	;'c'
  1063  00FEEE  6B                 	db	107	;'k'
  1064  00FEEF  20                 	db	32
  1065  00FEF0  25                 	db	37
  1066  00FEF1  64                 	db	100	;'d'
  1067  00FEF2  20                 	db	32
  1068  00FEF3  20                 	db	32
  1069  00FEF4  20                 	db	32
  1070  00FEF5  20                 	db	32
  1071  00FEF6  20                 	db	32
  1072  00FEF7  20                 	db	32
  1073  00FEF8  00                 	db	0
  1074  00FEF9                     STR_27:
  1075                           
  1076                           ; BSR set to: 57
  1077  00FEF9  20                 	db	32
  1078  00FEFA  20                 	db	32
  1079  00FEFB  20                 	db	32
  1080  00FEFC  20                 	db	32
  1081  00FEFD  20                 	db	32
  1082  00FEFE  20                 	db	32
  1083  00FEFF  20                 	db	32
  1084  00FF00  20                 	db	32
  1085  00FF01  20                 	db	32
  1086  00FF02  20                 	db	32
  1087  00FF03  20                 	db	32
  1088  00FF04  20                 	db	32
  1089  00FF05  20                 	db	32
  1090  00FF06  20                 	db	32
  1091  00FF07  20                 	db	32
  1092  00FF08  20                 	db	32
  1093  00FF09  20                 	db	32
  1094  00FF0A  20                 	db	32
  1095  00FF0B  00                 	db	0
  1096  00FF0C                     STR_17:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF0C  48                 	db	72	;'H'
  1100  00FF0D  45                 	db	69	;'E'
  1101  00FF0E  4C                 	db	76	;'L'
  1102  00FF0F  50                 	db	80	;'P'
  1103  00FF10  20                 	db	32
  1104  00FF11  25                 	db	37
  1105  00FF12  73                 	db	115	;'s'
  1106  00FF13  20                 	db	32
  1107  00FF14  20                 	db	32
  1108  00FF15  20                 	db	32
  1109  00FF16  20                 	db	32
  1110  00FF17  20                 	db	32
  1111  00FF18  20                 	db	32
  1112  00FF19  20                 	db	32
  1113  00FF1A  20                 	db	32
  1114  00FF1B  20                 	db	32
  1115  00FF1C  20                 	db	32
  1116  00FF1D  20                 	db	32
  1117  00FF1E  00                 	db	0
  1118  00FF1F                     
  1119                           ; BSR set to: 57
  1120  00FF1F  44                 	db	68	;'D'
  1121  00FF20  49                 	db	73	;'I'
  1122  00FF21  53                 	db	83	;'S'
  1123  00FF22  50                 	db	80	;'P'
  1124  00FF23  4C                 	db	76	;'L'
  1125  00FF24  41                 	db	65	;'A'
  1126  00FF25  59                 	db	89	;'Y'
  1127  00FF26  20                 	db	32
  1128  00FF27  25                 	db	37
  1129  00FF28  73                 	db	115	;'s'
  1130  00FF29  20                 	db	32
  1131  00FF2A  20                 	db	32
  1132  00FF2B  20                 	db	32
  1133  00FF2C  20                 	db	32
  1134  00FF2D  20                 	db	32
  1135  00FF2E  20                 	db	32
  1136  00FF2F  20                 	db	32
  1137  00FF30  20                 	db	32
  1138  00FF31  00                 	db	0
  1139  00FF32                     STR_11:
  1140                           
  1141                           ; BSR set to: 57
  1142  00FF32  25                 	db	37
  1143  00FF33  64                 	db	100	;'d'
  1144  00FF34  20                 	db	32
  1145  00FF35  25                 	db	37
  1146  00FF36  32                 	db	50	;'2'
  1147  00FF37  2E                 	db	46
  1148  00FF38  34                 	db	52	;'4'
  1149  00FF39  66                 	db	102	;'f'
  1150  00FF3A  2C                 	db	44
  1151  00FF3B  20                 	db	32
  1152  00FF3C  25                 	db	37
  1153  00FF3D  6C                 	db	108	;'l'
  1154  00FF3E  75                 	db	117	;'u'
  1155  00FF3F  20                 	db	32
  1156  00FF40  20                 	db	32
  1157  00FF41  20                 	db	32
  1158  00FF42  23                 	db	35
  1159  00FF43  00                 	db	0
  1160  00FF44                     STR_8:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF44  20                 	db	32
  1164  00FF45  56                 	db	86	;'V'
  1165  00FF46  54                 	db	84	;'T'
  1166  00FF47  45                 	db	69	;'E'
  1167  00FF48  52                 	db	82	;'R'
  1168  00FF49  4D                 	db	77	;'M'
  1169  00FF4A  20                 	db	32
  1170  00FF4B  23                 	db	35
  1171  00FF4C  32                 	db	50	;'2'
  1172  00FF4D  20                 	db	32
  1173  00FF4E  20                 	db	32
  1174  00FF4F  20                 	db	32
  1175  00FF50  20                 	db	32
  1176  00FF51  20                 	db	32
  1177  00FF52  20                 	db	32
  1178  00FF53  20                 	db	32
  1179  00FF54  00                 	db	0
  1180  00FF55                     STR_4:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FF55  20                 	db	32
  1184  00FF56  4E                 	db	78	;'N'
  1185  00FF57  53                 	db	83	;'S'
  1186  00FF58  41                 	db	65	;'A'
  1187  00FF59  53                 	db	83	;'S'
  1188  00FF5A  50                 	db	80	;'P'
  1189  00FF5B  4F                 	db	79	;'O'
  1190  00FF5C  4F                 	db	79	;'O'
  1191  00FF5D  4B                 	db	75	;'K'
  1192  00FF5E  20                 	db	32
  1193  00FF5F  20                 	db	32
  1194  00FF60  20                 	db	32
  1195  00FF61  20                 	db	32
  1196  00FF62  20                 	db	32
  1197  00FF63  20                 	db	32
  1198  00FF64  20                 	db	32
  1199  00FF65  00                 	db	0
  1200  00FF66                     STR_1:
  1201                           
  1202                           ; BSR set to: 57
  1203  00FF66  20                 	db	32
  1204  00FF67  4D                 	db	77	;'M'
  1205  00FF68  42                 	db	66	;'B'
  1206  00FF69  4D                 	db	77	;'M'
  1207  00FF6A  43                 	db	67	;'C'
  1208  00FF6B  20                 	db	32
  1209  00FF6C  53                 	db	83	;'S'
  1210  00FF6D  4F                 	db	79	;'O'
  1211  00FF6E  4C                 	db	76	;'L'
  1212  00FF6F  41                 	db	65	;'A'
  1213  00FF70  52                 	db	82	;'R'
  1214  00FF71  4D                 	db	77	;'M'
  1215  00FF72  4F                 	db	79	;'O'
  1216  00FF73  4E                 	db	78	;'N'
  1217  00FF74  20                 	db	32
  1218  00FF75  20                 	db	32
  1219  00FF76  00                 	db	0
  1220  00FF77                     STR_5:
  1221                           
  1222                           ; BSR set to: 57
  1223  00FF77  20                 	db	32
  1224  00FF78  53                 	db	83	;'S'
  1225  00FF79  45                 	db	69	;'E'
  1226  00FF7A  51                 	db	81	;'Q'
  1227  00FF7B  55                 	db	85	;'U'
  1228  00FF7C  45                 	db	69	;'E'
  1229  00FF7D  4E                 	db	78	;'N'
  1230  00FF7E  43                 	db	67	;'C'
  1231  00FF7F  45                 	db	69	;'E'
  1232  00FF80  20                 	db	32
  1233  00FF81  54                 	db	84	;'T'
  1234  00FF82  45                 	db	69	;'E'
  1235  00FF83  53                 	db	83	;'S'
  1236  00FF84  54                 	db	84	;'T'
  1237  00FF85  20                 	db	32
  1238  00FF86  20                 	db	32
  1239  00FF87  00                 	db	0
  1240  00FF88                     STR_21:
  1241                           
  1242                           ; BSR set to: 57
  1243  00FF88  76                 	db	118	;'v'
  1244  00FF89  74                 	db	116	;'t'
  1245  00FF8A  65                 	db	101	;'e'
  1246  00FF8B  72                 	db	114	;'r'
  1247  00FF8C  6D                 	db	109	;'m'
  1248  00FF8D  20                 	db	32
  1249  00FF8E  25                 	db	37
  1250  00FF8F  78                 	db	120	;'x'
  1251  00FF90  3A                 	db	58	;':'
  1252  00FF91  25                 	db	37
  1253  00FF92  78                 	db	120	;'x'
  1254  00FF93  20                 	db	32
  1255  00FF94  20                 	db	32
  1256  00FF95  20                 	db	32
  1257  00FF96  00                 	db	0
  1258  00FF97                     STR_2:
  1259                           
  1260                           ; BSR set to: 57
  1261  00FF97  20                 	db	32
  1262  00FF98  56                 	db	86	;'V'
  1263  00FF99  65                 	db	101	;'e'
  1264  00FF9A  72                 	db	114	;'r'
  1265  00FF9B  73                 	db	115	;'s'
  1266  00FF9C  69                 	db	105	;'i'
  1267  00FF9D  6F                 	db	111	;'o'
  1268  00FF9E  6E                 	db	110	;'n'
  1269  00FF9F  20                 	db	32
  1270  00FFA0  25                 	db	37
  1271  00FFA1  73                 	db	115	;'s'
  1272  00FFA2  20                 	db	32
  1273  00FFA3  20                 	db	32
  1274  00FFA4  20                 	db	32
  1275  00FFA5  00                 	db	0
  1276  00FFA6                     STR_9:
  1277                           
  1278                           ; BSR set to: 57
  1279  00FFA6  25                 	db	37
  1280  00FFA7  64                 	db	100	;'d'
  1281  00FFA8  20                 	db	32
  1282  00FFA9  25                 	db	37
  1283  00FFAA  32                 	db	50	;'2'
  1284  00FFAB  2E                 	db	46
  1285  00FFAC  34                 	db	52	;'4'
  1286  00FFAD  66                 	db	102	;'f'
  1287  00FFAE  20                 	db	32
  1288  00FFAF  20                 	db	32
  1289  00FFB0  20                 	db	32
  1290  00FFB1  23                 	db	35
  1291  00FFB2  00                 	db	0
  1292  00FFB3                     STR_15:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFB3  4E                 	db	78	;'N'
  1296  00FFB4  6F                 	db	111	;'o'
  1297  00FFB5  76                 	db	118	;'v'
  1298  00FFB6  20                 	db	32
  1299  00FFB7  31                 	db	49	;'1'
  1300  00FFB8  39                 	db	57	;'9'
  1301  00FFB9  20                 	db	32
  1302  00FFBA  32                 	db	50	;'2'
  1303  00FFBB  30                 	db	48	;'0'
  1304  00FFBC  31                 	db	49	;'1'
  1305  00FFBD  39                 	db	57	;'9'
  1306  00FFBE  00                 	db	0
  1307  00FFBF                     STR_19:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFBF  25                 	db	37
  1311  00FFC0  73                 	db	115	;'s'
  1312  00FFC1  20                 	db	32
  1313  00FFC2  20                 	db	32
  1314  00FFC3  20                 	db	32
  1315  00FFC4  20                 	db	32
  1316  00FFC5  20                 	db	32
  1317  00FFC6  20                 	db	32
  1318  00FFC7  20                 	db	32
  1319  00FFC8  00                 	db	0
  1320  00FFC9                     STR_16:
  1321                           
  1322                           ; BSR set to: 57
  1323  00FFC9  31                 	db	49	;'1'
  1324  00FFCA  37                 	db	55	;'7'
  1325  00FFCB  3A                 	db	58	;':'
  1326  00FFCC  34                 	db	52	;'4'
  1327  00FFCD  37                 	db	55	;'7'
  1328  00FFCE  3A                 	db	58	;':'
  1329  00FFCF  30                 	db	48	;'0'
  1330  00FFD0  33                 	db	51	;'3'
  1331  00FFD1  00                 	db	0
  1332  00FFD2                     STR_3:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FFD2  30                 	db	48	;'0'
  1336  00FFD3  2E                 	db	46
  1337  00FFD4  39                 	db	57	;'9'
  1338  00FFD5  33                 	db	51	;'3'
  1339  00FFD6  00                 	db	0
  1340  00FFD7                     STR_34:
  1341                           
  1342                           ; BSR set to: 57
  1343  00FFD7  49                 	db	73	;'I'
  1344  00FFD8  4E                 	db	78	;'N'
  1345  00FFD9  46                 	db	70	;'F'
  1346  00FFDA  00                 	db	0
  1347  00FFDB                     STR_38:
  1348                           
  1349                           ; BSR set to: 57
  1350  00FFDB  4E                 	db	78	;'N'
  1351  00FFDC  41                 	db	65	;'A'
  1352  00FFDD  4E                 	db	78	;'N'
  1353  00FFDE  00                 	db	0
  1354  00FFDF                     STR_35:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FFDF  69                 	db	105	;'i'
  1358  00FFE0  6E                 	db	110	;'n'
  1359  00FFE1  66                 	db	102	;'f'
  1360  00FFE2  00                 	db	0
  1361  00FFE3                     STR_39:
  1362                           
  1363                           ; BSR set to: 57
  1364  00FFE3  6E                 	db	110	;'n'
  1365  00FFE4  61                 	db	97	;'a'
  1366  00FFE5  6E                 	db	110	;'n'
  1367  00FFE6  00                 	db	0
  1368  00FFE7                     STR_65:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFE7  6C                 	db	108	;'l'
  1372  00FFE8  58                 	db	88	;'X'
  1373  00FFE9  00                 	db	0
  1374  00FFEA                     STR_42:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FFEA  6C                 	db	108	;'l'
  1378  00FFEB  64                 	db	100	;'d'
  1379  00FFEC  00                 	db	0
  1380  00FFED                     STR_51:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FFED  6C                 	db	108	;'l'
  1384  00FFEE  66                 	db	102	;'f'
  1385  00FFEF  00                 	db	0
  1386  00FFF0                     STR_46:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFF0  6C                 	db	108	;'l'
  1390  00FFF1  69                 	db	105	;'i'
  1391  00FFF2  00                 	db	0
  1392  00FFF3                     STR_56:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FFF3  6C                 	db	108	;'l'
  1396  00FFF4  75                 	db	117	;'u'
  1397  00FFF5  00                 	db	0
  1398  00FFF6                     STR_61:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFF6  6C                 	db	108	;'l'
  1402  00FFF7  78                 	db	120	;'x'
  1403  00FFF8  00                 	db	0
  1404  00FFF9                     STR_13:
  1405                           
  1406                           ; BSR set to: 57
  1407  00FFF9  25                 	db	37
  1408  00FFFA  63                 	db	99	;'c'
  1409  00FFFB  00                 	db	0
  1410  00FFFC                     STR_12:
  1411                           
  1412                           ; BSR set to: 57
  1413  00FFFC  25                 	db	37
  1414  00FFFD  73                 	db	115	;'s'
  1415  00FFFE  00                 	db	0
  1416  0000                     
  1417                           ; #config settings
  1418  00FFFF  00                 	db	0	; dummy byte at the end
  1419  0000                     
  1420                           	psect	cinit
  1421  017552                     __pcinit:
  1422                           	opt callstack 0
  1423  017552                     start_initialization:
  1424                           	opt callstack 0
  1425  017552                     __initialization:
  1426                           	opt callstack 0
  1427                           
  1428                           ; Initialize objects allocated to BANK1 (187 bytes)
  1429                           ; load TBLPTR registers with __pidataBANK1
  1430  017552  0EDC               	movlw	low __pidataBANK1
  1431  017554  6EF6               	movwf	tblptrl,c
  1432  017556  0E76               	movlw	high __pidataBANK1
  1433  017558  6EF7               	movwf	tblptrh,c
  1434  01755A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1435  01755C  6EF8               	movwf	tblptru,c
  1436  01755E  EE00  F100         	lfsr	0,__pdataBANK1
  1437  017562  EE20 F0BB          	lfsr	2,187
  1438  017566                     copy_data0:
  1439  017566  0009               	tblrd		*+
  1440  017568  006F FFD7 FFEE     	movff	tablat,postinc0
  1441  01756E  50DD               	movf	postdec2,w,c
  1442  017570  50D9               	movf	fsr2l,w,c
  1443  017572  E1F9               	bnz	copy_data0
  1444                           
  1445                           ; Initialize objects allocated to BANK0 (63 bytes)
  1446                           ; load TBLPTR registers with __pidataBANK0
  1447  017574  0E24               	movlw	low __pidataBANK0
  1448  017576  6EF6               	movwf	tblptrl,c
  1449  017578  0E86               	movlw	high __pidataBANK0
  1450  01757A  6EF7               	movwf	tblptrh,c
  1451  01757C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1452  01757E  6EF8               	movwf	tblptru,c
  1453  017580  EE00  F0A2         	lfsr	0,__pdataBANK0
  1454  017584  EE20 F03F          	lfsr	2,63
  1455  017588                     copy_data1:
  1456  017588  0009               	tblrd		*+
  1457  01758A  006F FFD7 FFEE     	movff	tablat,postinc0
  1458  017590  50DD               	movf	postdec2,w,c
  1459  017592  50D9               	movf	fsr2l,w,c
  1460  017594  E1F9               	bnz	copy_data1
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  017596  EE01  F200         	lfsr	0,__pbssBANK6
  1464  01759A  EE20 F0FF          	lfsr	2,255
  1465  01759E                     clear_0:
  1466  01759E  6AEE               	clrf	postinc0,c
  1467  0175A0  50DD               	movf	postdec2,w,c
  1468  0175A2  50D9               	movf	fsr2l,w,c
  1469  0175A4  E1FC               	bnz	clear_0
  1470  0175A6  50DA               	movf	fsr2h,w,c
  1471  0175A8  E1FA               	bnz	clear_0
  1472                           
  1473                           ; Clear objects allocated to BANK5 (255 bytes)
  1474  0175AA  EE01  F100         	lfsr	0,__pbssBANK5
  1475  0175AE  EE20 F0FF          	lfsr	2,255
  1476  0175B2                     clear_1:
  1477  0175B2  6AEE               	clrf	postinc0,c
  1478  0175B4  50DD               	movf	postdec2,w,c
  1479  0175B6  50D9               	movf	fsr2l,w,c
  1480  0175B8  E1FC               	bnz	clear_1
  1481  0175BA  50DA               	movf	fsr2h,w,c
  1482  0175BC  E1FA               	bnz	clear_1
  1483                           
  1484                           ; Clear objects allocated to BANK4 (218 bytes)
  1485  0175BE  EE01  F000         	lfsr	0,__pbssBANK4
  1486  0175C2  0EDA               	movlw	218
  1487  0175C4                     clear_2:
  1488  0175C4  6AEE               	clrf	postinc0,c
  1489  0175C6  06E8               	decf	wreg,f,c
  1490  0175C8  E1FD               	bnz	clear_2
  1491                           
  1492                           ; Clear objects allocated to BANK3 (198 bytes)
  1493  0175CA  EE00  F300         	lfsr	0,__pbssBANK3
  1494  0175CE  0EC6               	movlw	198
  1495  0175D0                     clear_3:
  1496  0175D0  6AEE               	clrf	postinc0,c
  1497  0175D2  06E8               	decf	wreg,f,c
  1498  0175D4  E1FD               	bnz	clear_3
  1499                           
  1500                           ; Clear objects allocated to BANK2 (252 bytes)
  1501  0175D6  EE00  F200         	lfsr	0,__pbssBANK2
  1502  0175DA  0EFC               	movlw	252
  1503  0175DC                     clear_4:
  1504  0175DC  6AEE               	clrf	postinc0,c
  1505  0175DE  06E8               	decf	wreg,f,c
  1506  0175E0  E1FD               	bnz	clear_4
  1507                           
  1508                           ; Clear objects allocated to BANK1 (64 bytes)
  1509  0175E2  EE00  F1BB         	lfsr	0,__pbssBANK1
  1510  0175E6  0E40               	movlw	64
  1511  0175E8                     clear_5:
  1512  0175E8  6AEE               	clrf	postinc0,c
  1513  0175EA  06E8               	decf	wreg,f,c
  1514  0175EC  E1FD               	bnz	clear_5
  1515                           
  1516                           ; Clear objects allocated to BANK0 (66 bytes)
  1517  0175EE  EE00  F060         	lfsr	0,__pbssBANK0
  1518  0175F2  0E42               	movlw	66
  1519  0175F4                     clear_6:
  1520  0175F4  6AEE               	clrf	postinc0,c
  1521  0175F6  06E8               	decf	wreg,f,c
  1522  0175F8  E1FD               	bnz	clear_6
  1523                           
  1524                           ; Clear objects allocated to COMRAM (53 bytes)
  1525  0175FA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1526  0175FE  0E35               	movlw	53
  1527  017600                     clear_7:
  1528  017600  6AEE               	clrf	postinc0,c
  1529  017602  06E8               	decf	wreg,f,c
  1530  017604  E1FD               	bnz	clear_7
  1531                           
  1532                           ;
  1533                           ; Setup IVTBASE
  1534                           ;
  1535  017606  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1536  017608  6ED5               	movwf	213,c
  1537  01760A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1538  01760C  6ED6               	movwf	214,c
  1539  01760E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1540  017610  6ED7               	movwf	215,c
  1541  017612                     end_of_initialization:
  1542                           	opt callstack 0
  1543  017612                     __end_of__initialization:
  1544                           	opt callstack 0
  1545  017612  0100               	movlb	0
  1546  017614  EFAB  F0A0         	goto	_main	;jump to C main() function
  1547                           
  1548                           	psect	bssCOMRAM
  1549  000001                     __pbssCOMRAM:
  1550                           	opt callstack 0
  1551  000001                     _TMR5_InterruptHandler:
  1552                           	opt callstack 0
  1553  000001                     	ds	3
  1554  000004                     _TMR6_InterruptHandler:
  1555                           	opt callstack 0
  1556  000004                     	ds	3
  1557  000007                     _ADCC_ADTI_InterruptHandler:
  1558                           	opt callstack 0
  1559  000007                     	ds	3
  1560  00000A                     _ADCC_ADI_InterruptHandler:
  1561                           	opt callstack 0
  1562  00000A                     	ds	3
  1563  00000D                     _UART1_TxInterruptHandler:
  1564                           	opt callstack 0
  1565  00000D                     	ds	3
  1566  000010                     _UART1_RxInterruptHandler:
  1567                           	opt callstack 0
  1568  000010                     	ds	3
  1569  000013                     _UART2_TxInterruptHandler:
  1570                           	opt callstack 0
  1571  000013                     	ds	3
  1572  000016                     _UART2_RxInterruptHandler:
  1573                           	opt callstack 0
  1574  000016                     	ds	3
  1575  000019                     _INT1_InterruptHandler:
  1576                           	opt callstack 0
  1577  000019                     	ds	3
  1578  00001C                     _INT0_InterruptHandler:
  1579                           	opt callstack 0
  1580  00001C                     	ds	3
  1581  00001F                     _width:
  1582                           	opt callstack 0
  1583  00001F                     	ds	2
  1584  000021                     _prec:
  1585                           	opt callstack 0
  1586  000021                     	ds	2
  1587  000023                     _flags:
  1588                           	opt callstack 0
  1589  000023                     	ds	2
  1590  000025                     TMR5_ISR@CountCallBack:
  1591                           	opt callstack 0
  1592  000025                     	ds	2
  1593  000027                     _timer5ReloadVal:
  1594                           	opt callstack 0
  1595  000027                     	ds	2
  1596  000029                     _mode_sw:
  1597                           	opt callstack 0
  1598  000029                     	ds	1
  1599  00002A                     _uart2RxCount:
  1600                           	opt callstack 0
  1601  00002A                     	ds	1
  1602  00002B                     _uart2RxTail:
  1603                           	opt callstack 0
  1604  00002B                     	ds	1
  1605  00002C                     _uart2RxHead:
  1606                           	opt callstack 0
  1607  00002C                     	ds	1
  1608  00002D                     _uart2TxBufferRemaining:
  1609                           	opt callstack 0
  1610  00002D                     	ds	1
  1611  00002E                     _uart2TxTail:
  1612                           	opt callstack 0
  1613  00002E                     	ds	1
  1614  00002F                     _uart2TxHead:
  1615                           	opt callstack 0
  1616  00002F                     	ds	1
  1617  000030                     _uart1RxCount:
  1618                           	opt callstack 0
  1619  000030                     	ds	1
  1620  000031                     _uart1RxTail:
  1621                           	opt callstack 0
  1622  000031                     	ds	1
  1623  000032                     _uart1RxHead:
  1624                           	opt callstack 0
  1625  000032                     	ds	1
  1626  000033                     _uart1TxBufferRemaining:
  1627                           	opt callstack 0
  1628  000033                     	ds	1
  1629  000034                     _uart1TxTail:
  1630                           	opt callstack 0
  1631  000034                     	ds	1
  1632  000035                     _uart1TxHead:
  1633                           	opt callstack 0
  1634  000035                     	ds	1
  1635                           
  1636                           	psect	bssBANK0
  1637  000060                     __pbssBANK0:
  1638                           	opt callstack 0
  1639  000060                     _tickCount:
  1640                           	opt callstack 0
  1641  000060                     	ds	24
  1642  000078                     _spi_link:
  1643                           	opt callstack 0
  1644  000078                     	ds	12
  1645  000084                     floorf@F524:
  1646                           	opt callstack 0
  1647  000084                     	ds	4
  1648  000088                     ___fpclassifyf@F463:
  1649                           	opt callstack 0
  1650  000088                     	ds	4
  1651  00008C                     _utctime:
  1652                           	opt callstack 0
  1653  00008C                     	ds	4
  1654  000090                     wdtdelay@dcount:
  1655                           	opt callstack 0
  1656  000090                     	ds	4
  1657  000094                     _P:
  1658                           	opt callstack 0
  1659  000094                     	ds	4
  1660  000098                     _nout:
  1661                           	opt callstack 0
  1662  000098                     	ds	2
  1663  00009A                     _seed:
  1664                           	opt callstack 0
  1665  00009A                     	ds	8
  1666                           
  1667                           	psect	dataBANK0
  1668  0000A2                     __pdataBANK0:
  1669                           	opt callstack 0
  1670  0000A2                     _R:
  1671                           	opt callstack 0
  1672  0000A2                     	ds	40
  1673  0000CA                     stoa@F1166:
  1674                           	opt callstack 0
  1675  0000CA                     	ds	7
  1676  0000D1                     _port_data:
  1677                           	opt callstack 0
  1678  0000D1                     	ds	16
  1679                           
  1680                           	psect	bssBANK1
  1681  0001BB                     __pbssBANK1:
  1682                           	opt callstack 0
  1683  0001BB                     lp_filter@smooth:
  1684                           	opt callstack 0
  1685  0001BB                     	ds	64
  1686                           
  1687                           	psect	dataBANK1
  1688  000100                     __pdataBANK1:
  1689                           	opt callstack 0
  1690  000100                     _V:
  1691                           	opt callstack 0
  1692  000100                     	ds	187
  1693                           
  1694                           	psect	bssBANK2
  1695  000200                     __pbssBANK2:
  1696                           	opt callstack 0
  1697  000200                     _C:
  1698                           	opt callstack 0
  1699  000200                     	ds	108
  1700  00026C                     _uart1TxBuffer:
  1701                           	opt callstack 0
  1702  00026C                     	ds	64
  1703  0002AC                     _dbuf:
  1704                           	opt callstack 0
  1705  0002AC                     	ds	80
  1706                           
  1707                           	psect	bssBANK3
  1708  000300                     __pbssBANK3:
  1709                           	opt callstack 0
  1710  000300                     _uart2TxBuffer:
  1711                           	opt callstack 0
  1712  000300                     	ds	64
  1713  000340                     _ring_buf2:
  1714                           	opt callstack 0
  1715  000340                     	ds	67
  1716  000383                     _ring_buf1:
  1717                           	opt callstack 0
  1718  000383                     	ds	67
  1719                           
  1720                           	psect	bssBANK4
  1721  000400                     __pbssBANK4:
  1722                           	opt callstack 0
  1723  000400                     _D:
  1724                           	opt callstack 0
  1725  000400                     	ds	218
  1726                           
  1727                           	psect	bssBANK5
  1728  000500                     __pbssBANK5:
  1729                           	opt callstack 0
  1730  000500                     _uart1RxBuffer:
  1731                           	opt callstack 0
  1732  000500                     	ds	255
  1733                           
  1734                           	psect	bssBANK6
  1735  000600                     __pbssBANK6:
  1736                           	opt callstack 0
  1737  000600                     _uart2RxBuffer:
  1738                           	opt callstack 0
  1739  000600                     	ds	255
  1740                           
  1741                           	psect	cstackBANK0
  1742  0000E1                     __pcstackBANK0:
  1743                           	opt callstack 0
  1744  0000E1                     ??_TMR6_ISR:
  1745                           
  1746                           ; 1 bytes @ 0x0
  1747  0000E1                     	ds	1
  1748  0000E2                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x1
  1751  0000E2                     	ds	4
  1752                           
  1753                           	psect	cstackCOMRAM
  1754  000056                     __pcstackCOMRAM:
  1755                           	opt callstack 0
  1756  000056                     ??_ADCC_ThresholdISR:
  1757  000056                     
  1758                           ; 1 bytes @ 0x0
  1759  000056                     	ds	5
  1760  00005B                     
  1761                           ; 1 bytes @ 0x5
  1762 ;;
  1763 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1764 ;;
  1765 ;; *************** function _main *****************
  1766 ;; Defined at:
  1767 ;;		line 147 in file "main.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  mode            1  [STACK] enum E17005
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1  [STACK] void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels required when called:   19
  1787 ;; This function calls:
  1788 ;;		_SYSTEM_Initialize
  1789 ;;		_StartTimer
  1790 ;;		_TimerDone
  1791 ;;		_WaitMs
  1792 ;;		_check_adc_scan
  1793 ;;		_check_help
  1794 ;;		_clear_adc_scan
  1795 ;;		_convert_adc_data
  1796 ;;		_eaDogM_WriteCommand
  1797 ;;		_get_raw_result
  1798 ;;		_get_vterm_ptr
  1799 ;;		_init_display
  1800 ;;		_mode_lamp_dim
  1801 ;;		_set_display_info
  1802 ;;		_set_vterm
  1803 ;;		_sprintf
  1804 ;;		_srand
  1805 ;;		_start_adc_scan
  1806 ;;		_start_switch_handler
  1807 ;;		_update_lcd
  1808 ;; This function is called by:
  1809 ;;		Startup code after reset
  1810 ;; This function uses a reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text0
  1814  014156                     __ptext0:
  1815                           	opt callstack 0
  1816  014156                     _main:
  1817                           	opt callstack 0
  1818                           
  1819                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1820  014156  52E6               	movf	postinc1,f,c
  1821                           
  1822                           ;main.c: 149:  UI_STATES mode;;main.c: 152:  SYSTEM_Initialize();
  1823                           
  1824                           ;incstack = 0
  1825  014158  EC46  F0C2         	call	_SYSTEM_Initialize	;wreg free
  1826                           
  1827                           ; BSR set to: 60
  1828                           ;main.c: 155:  (INTCON0bits.GIEH = 1);
  1829  01415C  8ED2               	bsf	210,7,c	;volatile
  1830                           
  1831                           ; BSR set to: 60
  1832                           ;main.c: 158:  (INTCON0bits.GIEL = 1);
  1833  01415E  8CD2               	bsf	210,6,c	;volatile
  1834                           
  1835                           ; BSR set to: 60
  1836                           ;main.c: 160:  V.ui_state = UI_STATE_INIT;
  1837  014160  0101               	movlb	1	; () banked
  1838  014162  6B00               	clrf	_V& (0+255),b	;volatile
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 165:  WaitMs(300);
  1842  014164  0E2C               	movlw	44
  1843  014166  6EE6               	movwf	postinc1,c
  1844  014168  0E01               	movlw	1
  1845  01416A  6EE6               	movwf	postinc1,c
  1846  01416C  EC6C  F0C3         	call	_WaitMs	;wreg free
  1847                           
  1848                           ;main.c: 166:  if (PORTBbits.RB0) {
  1849  014170  A0CB               	btfss	203,0,c	;volatile
  1850  014172  D004               	goto	l10354
  1851                           
  1852                           ;main.c: 167:   mode = UI_STATE_HOST;
  1853                           ;stkvar	_mode @ sp[(-1)+0]
  1854  014174  0EFF               	movlw	-1
  1855  014176  6AE3               	clrf	plusw1,c
  1856  014178  2AE3               	incf	plusw1,f,c
  1857                           
  1858                           ;main.c: 168:  } else {
  1859  01417A  D004               	goto	l10356
  1860  01417C                     l10354:
  1861                           
  1862                           ;main.c: 169:   mode = UI_STATE_LOG;
  1863                           ;stkvar	_mode @ sp[(-1)+0]
  1864  01417C  0EFF               	movlw	-1
  1865  01417E  6AE3               	clrf	plusw1,c
  1866  014180  80E3               	bsf	plusw1,0,c
  1867  014182  82E3               	bsf	plusw1,1,c	;indir
  1868  014184                     l10356:
  1869                           
  1870                           ;main.c: 172:  if (mode == UI_STATE_HOST) {
  1871                           ;stkvar	_mode @ sp[(-1)+0]
  1872  014184  0EFF               	movlw	-1
  1873  014186  04E3               	decf	plusw1,w,c
  1874  014188  A4D8               	btfss	status,2,c
  1875  01418A  D007               	goto	l1244
  1876                           
  1877                           ;main.c: 173:   do { LATDbits.LATD0 = 1; } while(0);
  1878  01418C  80BD               	bsf	189,0,c	;volatile
  1879                           
  1880                           ;main.c: 174:   V.mode_pwm = 70;
  1881  01418E  0E00               	movlw	0
  1882  014190  0101               	movlb	1	; () banked
  1883  014192  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1884  014194  0E46               	movlw	70
  1885  014196  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1886                           
  1887                           ;main.c: 175:  } else {
  1888  014198  D004               	goto	l10360
  1889  01419A                     l1244:
  1890  01419A  90BD               	bcf	189,0,c	;volatile
  1891                           
  1892                           ;main.c: 177:   V.mode_pwm = 0;
  1893  01419C  0101               	movlb	1	; () banked
  1894  01419E  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1895  0141A0  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1896  0141A2                     l10360:
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;main.c: 179:  mode_lamp_dim(V.mode_pwm);
  1900  0141A2  0060  F657  FFE6   	movff	_V+149,postinc1
  1901  0141A8  0060  F65B  FFE6   	movff	_V+150,postinc1
  1902  0141AE  ECCB  F0C6         	call	_mode_lamp_dim	;wreg free
  1903  0141B2  D0D0               	goto	l10404
  1904  0141B4                     l10362:
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;main.c: 190:    init_display();
  1908  0141B4  ECCA  F0B9         	call	_init_display	;wreg free
  1909                           
  1910                           ; BSR set to: 61
  1911                           ;main.c: 191:    eaDogM_WriteCommand(0b00001100);
  1912  0141B8  0E0C               	movlw	12
  1913  0141BA  6EE6               	movwf	postinc1,c
  1914  0141BC  EC28  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 193:    V.ui_state = mode;
  1918                           ;stkvar	_mode @ sp[(-1)+0]
  1919  0141C0  0EFF               	movlw	-1
  1920  0141C2  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 194:    srand(1957);
  1924  0141C8  0EA5               	movlw	165
  1925  0141CA  6EE6               	movwf	postinc1,c
  1926  0141CC  0E07               	movlw	7
  1927  0141CE  6EE6               	movwf	postinc1,c
  1928  0141D0  ECA2  F0C3         	call	_srand	;wreg free
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 195:    set_vterm(0);
  1932  0141D4  0E00               	movlw	0
  1933  0141D6  6EE6               	movwf	postinc1,c
  1934  0141D8  ECA2  F0C6         	call	_set_vterm	;wreg free
  1935                           
  1936                           ; BSR set to: 4
  1937                           ;main.c: 196:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1938  0141DC  0E66               	movlw	low STR_1
  1939  0141DE  6EE6               	movwf	postinc1,c
  1940  0141E0  0EFF               	movlw	high STR_1
  1941  0141E2  6EE6               	movwf	postinc1,c
  1942  0141E4  0E00               	movlw	0
  1943  0141E6  6EE6               	movwf	postinc1,c
  1944  0141E8  0E00               	movlw	0
  1945  0141EA  6EE6               	movwf	postinc1,c
  1946  0141EC  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  1947  0141F0  0060  F0DB  FFE6   	movff	btemp,postinc1
  1948  0141F6  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1949  0141FC  0E04               	movlw	4
  1950  0141FE  6EE6               	movwf	postinc1,c
  1951  014200  EC45  F0B9         	call	_sprintf	;wreg free
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;main.c: 197:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.93");
  1955  014204  0ED2               	movlw	low STR_3
  1956  014206  6EE6               	movwf	postinc1,c
  1957  014208  0EFF               	movlw	high STR_3
  1958  01420A  6EE6               	movwf	postinc1,c
  1959  01420C  0E97               	movlw	low STR_2
  1960  01420E  6EE6               	movwf	postinc1,c
  1961  014210  0EFF               	movlw	high STR_2
  1962  014212  6EE6               	movwf	postinc1,c
  1963  014214  0E00               	movlw	0
  1964  014216  6EE6               	movwf	postinc1,c
  1965  014218  0E01               	movlw	1
  1966  01421A  6EE6               	movwf	postinc1,c
  1967  01421C  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  1968  014220  0060  F0DB  FFE6   	movff	btemp,postinc1
  1969  014226  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1970  01422C  0E06               	movlw	6
  1971  01422E  6EE6               	movwf	postinc1,c
  1972  014230  EC45  F0B9         	call	_sprintf	;wreg free
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 198:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1976  014234  0E55               	movlw	low STR_4
  1977  014236  6EE6               	movwf	postinc1,c
  1978  014238  0EFF               	movlw	high STR_4
  1979  01423A  6EE6               	movwf	postinc1,c
  1980  01423C  0E00               	movlw	0
  1981  01423E  6EE6               	movwf	postinc1,c
  1982  014240  0E02               	movlw	2
  1983  014242  6EE6               	movwf	postinc1,c
  1984  014244  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  1985  014248  0060  F0DB  FFE6   	movff	btemp,postinc1
  1986  01424E  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1987  014254  0E04               	movlw	4
  1988  014256  6EE6               	movwf	postinc1,c
  1989  014258  EC45  F0B9         	call	_sprintf	;wreg free
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 199:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1993  01425C  0E77               	movlw	low STR_5
  1994  01425E  6EE6               	movwf	postinc1,c
  1995  014260  0EFF               	movlw	high STR_5
  1996  014262  6EE6               	movwf	postinc1,c
  1997  014264  0E02               	movlw	2
  1998  014266  6EE6               	movwf	postinc1,c
  1999  014268  0E00               	movlw	0
  2000  01426A  6EE6               	movwf	postinc1,c
  2001  01426C  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2002  014270  0060  F0DB  FFE6   	movff	btemp,postinc1
  2003  014276  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2004  01427C  0E04               	movlw	4
  2005  01427E  6EE6               	movwf	postinc1,c
  2006  014280  EC45  F0B9         	call	_sprintf	;wreg free
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;main.c: 200:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.93");
  2010  014284  0ED2               	movlw	low STR_3
  2011  014286  6EE6               	movwf	postinc1,c
  2012  014288  0EFF               	movlw	high STR_3
  2013  01428A  6EE6               	movwf	postinc1,c
  2014  01428C  0E97               	movlw	low STR_2
  2015  01428E  6EE6               	movwf	postinc1,c
  2016  014290  0EFF               	movlw	high STR_2
  2017  014292  6EE6               	movwf	postinc1,c
  2018  014294  0E02               	movlw	2
  2019  014296  6EE6               	movwf	postinc1,c
  2020  014298  0E01               	movlw	1
  2021  01429A  6EE6               	movwf	postinc1,c
  2022  01429C  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2023  0142A0  0060  F0DB  FFE6   	movff	btemp,postinc1
  2024  0142A6  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2025  0142AC  0E06               	movlw	6
  2026  0142AE  6EE6               	movwf	postinc1,c
  2027  0142B0  EC45  F0B9         	call	_sprintf	;wreg free
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;main.c: 201:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2031  0142B4  0E44               	movlw	low STR_8
  2032  0142B6  6EE6               	movwf	postinc1,c
  2033  0142B8  0EFF               	movlw	high STR_8
  2034  0142BA  6EE6               	movwf	postinc1,c
  2035  0142BC  0E02               	movlw	2
  2036  0142BE  6EE6               	movwf	postinc1,c
  2037  0142C0  0E02               	movlw	2
  2038  0142C2  6EE6               	movwf	postinc1,c
  2039  0142C4  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2040  0142C8  0060  F0DB  FFE6   	movff	btemp,postinc1
  2041  0142CE  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2042  0142D4  0E04               	movlw	4
  2043  0142D6  6EE6               	movwf	postinc1,c
  2044  0142D8  EC45  F0B9         	call	_sprintf	;wreg free
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 202:    update_lcd(0);
  2048  0142DC  0E00               	movlw	0
  2049  0142DE  6EE6               	movwf	postinc1,c
  2050  0142E0  ECBE  F0B8         	call	_update_lcd	;wreg free
  2051                           
  2052                           ;main.c: 203:    WaitMs(3000);
  2053  0142E4  0EB8               	movlw	184
  2054  0142E6  6EE6               	movwf	postinc1,c
  2055  0142E8  0E0B               	movlw	11
  2056  0142EA  6EE6               	movwf	postinc1,c
  2057  0142EC  EC6C  F0C3         	call	_WaitMs	;wreg free
  2058                           
  2059                           ;main.c: 204:    StartTimer(TMR_DISPLAY, 250);
  2060  0142F0  0EFA               	movlw	250
  2061  0142F2  6EE6               	movwf	postinc1,c
  2062  0142F4  0E00               	movlw	0
  2063  0142F6  6EE6               	movwf	postinc1,c
  2064  0142F8  0E0A               	movlw	10
  2065  0142FA  6EE6               	movwf	postinc1,c
  2066  0142FC  EC32  F0C3         	call	_StartTimer	;wreg free
  2067                           
  2068                           ;main.c: 205:    StartTimer(TMR_ADC, 500);
  2069  014300  0EF4               	movlw	244
  2070  014302  6EE6               	movwf	postinc1,c
  2071  014304  0E01               	movlw	1
  2072  014306  6EE6               	movwf	postinc1,c
  2073  014308  0E01               	movlw	1
  2074  01430A  6EE6               	movwf	postinc1,c
  2075  01430C  EC32  F0C3         	call	_StartTimer	;wreg free
  2076                           
  2077                           ;main.c: 206:    StartTimer(TMR_INFO, 3000);
  2078  014310  0EB8               	movlw	184
  2079  014312  6EE6               	movwf	postinc1,c
  2080  014314  0E0B               	movlw	11
  2081  014316  6EE6               	movwf	postinc1,c
  2082  014318  0E07               	movlw	7
  2083  01431A  6EE6               	movwf	postinc1,c
  2084  01431C  EC32  F0C3         	call	_StartTimer	;wreg free
  2085                           
  2086                           ;main.c: 207:    StartTimer(TMR_FLIPPER, 1500);
  2087  014320  0EDC               	movlw	220
  2088  014322  6EE6               	movwf	postinc1,c
  2089  014324  0E05               	movlw	5
  2090  014326  6EE6               	movwf	postinc1,c
  2091  014328  0E0B               	movlw	11
  2092  01432A  6EE6               	movwf	postinc1,c
  2093  01432C  EC32  F0C3         	call	_StartTimer	;wreg free
  2094                           
  2095                           ;main.c: 208:    StartTimer(TMR_HELPDIS, 3000);
  2096  014330  0EB8               	movlw	184
  2097  014332  6EE6               	movwf	postinc1,c
  2098  014334  0E0B               	movlw	11
  2099  014336  6EE6               	movwf	postinc1,c
  2100  014338  0E09               	movlw	9
  2101  01433A  6EE6               	movwf	postinc1,c
  2102  01433C  EC32  F0C3         	call	_StartTimer	;wreg free
  2103                           
  2104                           ;main.c: 210:    start_adc_scan();
  2105  014340  EC0D  F0C0         	call	_start_adc_scan	;wreg free
  2106                           
  2107                           ;main.c: 211:    start_switch_handler();
  2108  014344  EC0E  F0C7         	call	_start_switch_handler	;wreg free
  2109                           
  2110                           ;main.c: 213:    break;
  2111  014348  D01C               	goto	l10406
  2112  01434A                     l1252:
  2113                           
  2114                           ; BSR set to: 1
  2115                           ;main.c: 219:    P.SYSTEM_STABLE = 1;
  2116  01434A  0100               	movlb	0	; () banked
  2117  01434C  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2118                           
  2119                           ;main.c: 220:    break;
  2120  01434E  D019               	goto	l10406
  2121  014350                     l1254:
  2122                           
  2123                           ; BSR set to: 1
  2124                           ;main.c: 223:    V.ui_state = UI_STATE_INIT;
  2125  014350  6B00               	clrf	_V& (0+255),b	;volatile
  2126                           
  2127                           ;main.c: 224:    break;
  2128  014352  D017               	goto	l10406
  2129  014354                     l10404:
  2130  014354  0101               	movlb	1	; () banked
  2131  014356  5100               	movf	_V& (0+255),w,b	;volatile
  2132  014358  6E40               	movwf	(btemp+10)^0,c
  2133  01435A  6A41               	clrf	(btemp+11)^0,c
  2134                           
  2135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 1, Range of values is 0 to 0
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            4     3 (average)
  2141                           ;	Chosen strategy is simple_byte
  2142  01435C  5041               	movf	(btemp+11)^0,w,c
  2143  01435E  0A00               	xorlw	0	; case 0
  2144  014360  A4D8               	btfss	status,2,c
  2145  014362  D7F6               	goto	l1254
  2146                           
  2147                           ; BSR set to: 1
  2148                           ; Switch size 1, requested type "simple"
  2149                           ; Number of cases is 5, Range of values is 0 to 5
  2150                           ; switch strategies available:
  2151                           ; Name         Instructions Cycles
  2152                           ; simple_byte           16     9 (average)
  2153                           ;	Chosen strategy is simple_byte
  2154  014364  5040               	movf	(btemp+10)^0,w,c
  2155  014366  0A00               	xorlw	0	; case 0
  2156  014368  B4D8               	btfsc	status,2,c
  2157  01436A  D724               	goto	l10362
  2158  01436C  0A01               	xorlw	1	; case 1
  2159  01436E  B4D8               	btfsc	status,2,c
  2160  014370  D008               	goto	l10406
  2161  014372  0A02               	xorlw	2	; case 3
  2162  014374  B4D8               	btfsc	status,2,c
  2163  014376  D005               	goto	l10406
  2164  014378  0A07               	xorlw	7	; case 4
  2165  01437A  B4D8               	btfsc	status,2,c
  2166  01437C  D7E6               	goto	l1252
  2167  01437E  0A01               	xorlw	1	; case 5
  2168  014380  D7E7               	goto	l1254
  2169  014382                     l10406:
  2170                           
  2171                           ;main.c: 227:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2172  014382  0E01               	movlw	1
  2173  014384  6EE6               	movwf	postinc1,c
  2174  014386  ECF3  F0C5         	call	_TimerDone	;wreg free
  2175  01438A  5036               	movf	btemp^0,w,c
  2176  01438C  B4D8               	btfsc	status,2,c
  2177  01438E  D013               	goto	l10418
  2178  014390  EC6F  F0C7         	call	_check_adc_scan	;wreg free
  2179  014394  5036               	movf	btemp^0,w,c
  2180  014396  B4D8               	btfsc	status,2,c
  2181  014398  D00E               	goto	l10418
  2182                           
  2183                           ;main.c: 231:    convert_adc_data();
  2184  01439A  ECFF  F0BE         	call	_convert_adc_data	;wreg free
  2185                           
  2186                           ;main.c: 235:    clear_adc_scan();
  2187  01439E  EC77  F0C7         	call	_clear_adc_scan	;wreg free
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 236:    start_adc_scan();
  2191  0143A2  EC0D  F0C0         	call	_start_adc_scan	;wreg free
  2192                           
  2193                           ;main.c: 237:    StartTimer(TMR_ADC, 500);
  2194  0143A6  0EF4               	movlw	244
  2195  0143A8  6EE6               	movwf	postinc1,c
  2196  0143AA  0E01               	movlw	1
  2197  0143AC  6EE6               	movwf	postinc1,c
  2198  0143AE  0E01               	movlw	1
  2199  0143B0  6EE6               	movwf	postinc1,c
  2200  0143B2  EC32  F0C3         	call	_StartTimer	;wreg free
  2201  0143B6                     l10418:
  2202                           
  2203                           ;main.c: 244:   if (TimerDone(TMR_DISPLAY)) {
  2204                           
  2205                           ;main.c: 240:   if (V.ticks) {
  2206  0143B6  0E0A               	movlw	10
  2207  0143B8  6EE6               	movwf	postinc1,c
  2208  0143BA  ECF3  F0C5         	call	_TimerDone	;wreg free
  2209  0143BE  5036               	movf	btemp^0,w,c
  2210  0143C0  B4D8               	btfsc	status,2,c
  2211  0143C2  D0A1               	goto	l10436
  2212                           
  2213                           ;main.c: 245:    if (TimerDone(TMR_HELPDIS)) {
  2214  0143C4  0E09               	movlw	9
  2215  0143C6  6EE6               	movwf	postinc1,c
  2216  0143C8  ECF3  F0C5         	call	_TimerDone	;wreg free
  2217  0143CC  5036               	movf	btemp^0,w,c
  2218  0143CE  B4D8               	btfsc	status,2,c
  2219  0143D0  D004               	goto	l10426
  2220                           
  2221                           ;main.c: 246:     set_display_info(DIS_STR);
  2222  0143D2  0E00               	movlw	0
  2223  0143D4  6EE6               	movwf	postinc1,c
  2224  0143D6  EC67  F0C6         	call	_set_display_info	;wreg free
  2225  0143DA                     l10426:
  2226                           
  2227                           ;main.c: 248:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2228  0143DA  0060  F803  FFE6   	movff	_C,postinc1
  2229  0143E0  0060  F807  FFE6   	movff	_C+1,postinc1
  2230  0143E6  0060  F80B  FFE6   	movff	_C+2,postinc1
  2231  0143EC  0060  F80F  FFE6   	movff	_C+3,postinc1
  2232  0143F2  0E00               	movlw	0
  2233  0143F4  6EE6               	movwf	postinc1,c
  2234  0143F6  EC58  F0C6         	call	_get_raw_result	;wreg free
  2235  0143FA  0060  F0DB  FFE6   	movff	btemp,postinc1
  2236  014400  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2237  014406  0EA6               	movlw	low STR_9
  2238  014408  6EE6               	movwf	postinc1,c
  2239  01440A  0EFF               	movlw	high STR_9
  2240  01440C  6EE6               	movwf	postinc1,c
  2241  01440E  0E00               	movlw	0
  2242  014410  6EE6               	movwf	postinc1,c
  2243  014412  0E00               	movlw	0
  2244  014414  6EE6               	movwf	postinc1,c
  2245  014416  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2246  01441A  0060  F0DB  FFE6   	movff	btemp,postinc1
  2247  014420  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2248  014426  0E0A               	movlw	10
  2249  014428  6EE6               	movwf	postinc1,c
  2250  01442A  EC45  F0B9         	call	_sprintf	;wreg free
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 249:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2254  01442E  0060  F813  FFE6   	movff	_C+4,postinc1
  2255  014434  0060  F817  FFE6   	movff	_C+5,postinc1
  2256  01443A  0060  F81B  FFE6   	movff	_C+6,postinc1
  2257  014440  0060  F81F  FFE6   	movff	_C+7,postinc1
  2258  014446  0E01               	movlw	1
  2259  014448  6EE6               	movwf	postinc1,c
  2260  01444A  EC58  F0C6         	call	_get_raw_result	;wreg free
  2261  01444E  0060  F0DB  FFE6   	movff	btemp,postinc1
  2262  014454  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2263  01445A  0EA6               	movlw	low STR_9
  2264  01445C  6EE6               	movwf	postinc1,c
  2265  01445E  0EFF               	movlw	high STR_9
  2266  014460  6EE6               	movwf	postinc1,c
  2267  014462  0E00               	movlw	0
  2268  014464  6EE6               	movwf	postinc1,c
  2269  014466  0E01               	movlw	1
  2270  014468  6EE6               	movwf	postinc1,c
  2271  01446A  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2272  01446E  0060  F0DB  FFE6   	movff	btemp,postinc1
  2273  014474  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2274  01447A  0E0A               	movlw	10
  2275  01447C  6EE6               	movwf	postinc1,c
  2276  01447E  EC45  F0B9         	call	_sprintf	;wreg free
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 250:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2280  014482  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2281  014488  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2282  01448E  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2283  014494  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2284  01449A  0060  F823  FFE6   	movff	_C+8,postinc1
  2285  0144A0  0060  F827  FFE6   	movff	_C+9,postinc1
  2286  0144A6  0060  F82B  FFE6   	movff	_C+10,postinc1
  2287  0144AC  0060  F82F  FFE6   	movff	_C+11,postinc1
  2288  0144B2  0E02               	movlw	2
  2289  0144B4  6EE6               	movwf	postinc1,c
  2290  0144B6  EC58  F0C6         	call	_get_raw_result	;wreg free
  2291  0144BA  0060  F0DB  FFE6   	movff	btemp,postinc1
  2292  0144C0  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2293  0144C6  0E32               	movlw	low STR_11
  2294  0144C8  6EE6               	movwf	postinc1,c
  2295  0144CA  0EFF               	movlw	high STR_11
  2296  0144CC  6EE6               	movwf	postinc1,c
  2297  0144CE  0E00               	movlw	0
  2298  0144D0  6EE6               	movwf	postinc1,c
  2299  0144D2  0E02               	movlw	2
  2300  0144D4  6EE6               	movwf	postinc1,c
  2301  0144D6  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  2302  0144DA  0060  F0DB  FFE6   	movff	btemp,postinc1
  2303  0144E0  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  2304  0144E6  0E0E               	movlw	14
  2305  0144E8  6EE6               	movwf	postinc1,c
  2306  0144EA  EC45  F0B9         	call	_sprintf	;wreg free
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 251:    StartTimer(TMR_DISPLAY, 250);
  2310  0144EE  0EFA               	movlw	250
  2311  0144F0  6EE6               	movwf	postinc1,c
  2312  0144F2  0E00               	movlw	0
  2313  0144F4  6EE6               	movwf	postinc1,c
  2314  0144F6  0E0A               	movlw	10
  2315  0144F8  6EE6               	movwf	postinc1,c
  2316  0144FA  EC32  F0C3         	call	_StartTimer	;wreg free
  2317                           
  2318                           ;main.c: 252:    update_lcd(0);
  2319  0144FE  0E00               	movlw	0
  2320  014500  6EE6               	movwf	postinc1,c
  2321  014502  ECBE  F0B8         	call	_update_lcd	;wreg free
  2322  014506                     l10436:
  2323                           
  2324                           ;main.c: 258:   check_help(V.flipper);
  2325  014506  0101               	movlb	1	; () banked
  2326  014508  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2327  01450A  6EE6               	movwf	postinc1,c
  2328  01450C  EC58  F0AF         	call	_check_help	;wreg free
  2329                           
  2330                           ;main.c: 263:   if (V.set_sequ) {
  2331  014510  0101               	movlb	1	; () banked
  2332  014512  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2333  014514  D71F               	goto	l10404
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;main.c: 264:    if (TimerDone(TMR_INFO)) {
  2337  014516  0E07               	movlw	7
  2338  014518  6EE6               	movwf	postinc1,c
  2339  01451A  ECF3  F0C5         	call	_TimerDone	;wreg free
  2340  01451E  5036               	movf	btemp^0,w,c
  2341  014520  B4D8               	btfsc	status,2,c
  2342  014522  D00B               	goto	l10448
  2343                           
  2344                           ;main.c: 265:     V.set_sequ = 0;
  2345  014524  0101               	movlb	1	; () banked
  2346  014526  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 266:     set_vterm(0);
  2350  014528  0E00               	movlw	0
  2351  01452A  6EE6               	movwf	postinc1,c
  2352  01452C  ECA2  F0C6         	call	_set_vterm	;wreg free
  2353                           
  2354                           ; BSR set to: 4
  2355                           ;main.c: 267:     update_lcd(0);
  2356  014530  0E00               	movlw	0
  2357  014532  6EE6               	movwf	postinc1,c
  2358  014534  ECBE  F0B8         	call	_update_lcd	;wreg free
  2359                           
  2360                           ;main.c: 268:    } else {
  2361  014538  D70D               	goto	l10404
  2362  01453A                     l10448:
  2363                           
  2364                           ;main.c: 269:     set_vterm(2);
  2365  01453A  0E02               	movlw	2
  2366  01453C  6EE6               	movwf	postinc1,c
  2367  01453E  ECA2  F0C6         	call	_set_vterm	;wreg free
  2368                           
  2369                           ; BSR set to: 4
  2370                           ;main.c: 270:     update_lcd(2);
  2371  014542  0E02               	movlw	2
  2372  014544  6EE6               	movwf	postinc1,c
  2373  014546  ECBE  F0B8         	call	_update_lcd	;wreg free
  2374  01454A  D704               	goto	l10404
  2375  01454C                     __end_of_main:
  2376                           	opt callstack 0
  2377                           
  2378 ;; *************** function _start_switch_handler *****************
  2379 ;; Defined at:
  2380 ;;		line 60 in file "mbmc.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1  [STACK] void 
  2387 ;; Registers used:
  2388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  2389 ;; Tracked objects:
  2390 ;;		On entry : 1/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    7
  2401 ;; This function calls:
  2402 ;;		_INT1_SetInterruptHandler
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text1
  2409  018E1C                     __ptext1:
  2410                           	opt callstack 0
  2411  018E1C                     _start_switch_handler:
  2412                           	opt callstack 23
  2413                           
  2414                           ;mbmc.c: 62:  INT1_SetInterruptHandler(switch_handler);
  2415                           
  2416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2417                           ;incstack = 0
  2418  018E1C  0E06               	movlw	low _switch_handler
  2419  018E1E  6EE6               	movwf	postinc1,c
  2420  018E20  0E8F               	movlw	high _switch_handler
  2421  018E22  6EE6               	movwf	postinc1,c
  2422  018E24  0E01               	movlw	low (_switch_handler shr (0+16))
  2423  018E26  6EE6               	movwf	postinc1,c
  2424  018E28  EC3F  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
  2425                           
  2426                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2427  018E2C  0012               	return		;funcret
  2428  018E2E                     __end_of_start_switch_handler:
  2429                           	opt callstack 0
  2430                           
  2431 ;; *************** function _start_adc_scan *****************
  2432 ;; Defined at:
  2433 ;;		line 33 in file "daq.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1  [STACK] _Bool 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 1/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    7
  2454 ;; This function calls:
  2455 ;;		_ADCC_DischargeSampleCapacitor
  2456 ;;		_ADCC_SetADIInterruptHandler
  2457 ;;		_ADCC_SetADTIInterruptHandler
  2458 ;;		_ADCC_StartConversion
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text2
  2465  01801A                     __ptext2:
  2466                           	opt callstack 0
  2467  01801A                     _start_adc_scan:
  2468                           	opt callstack 23
  2469                           
  2470                           ;daq.c: 35:  if (R.done)
  2471                           
  2472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2473                           ;incstack = 0
  2474  01801A  0100               	movlb	0	; () banked
  2475  01801C  51C9               	movf	(_R+39)& (0+255),w,b	;volatile
  2476  01801E  A4D8               	btfss	status,2,c
  2477  018020  0012               	return	
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;daq.c: 38:  R.scan_index = 0;
  2481  018022  6BC6               	clrf	(_R+36)& (0+255),b	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2485  018024  013A               	movlb	58	; () banked
  2486  018026  5140               	movf	64,w,b	;volatile
  2487  018028  006E F940  F036    	movff	14928,btemp	;volatile
  2488  01802E  6A37               	clrf	(btemp+1)^0,c
  2489  018030  0060  F0D8  F037   	movff	btemp,btemp+1
  2490  018036  6A36               	clrf	btemp^0,c
  2491  018038  2636               	addwf	btemp^0,f,c
  2492  01803A  0E00               	movlw	0
  2493  01803C  2237               	addwfc	(btemp+1)^0,f,c
  2494  01803E  0E77               	movlw	119
  2495  018040  1436               	andwf	btemp^0,w,c
  2496  018042  0100               	movlb	0	; () banked
  2497  018044  6FC7               	movwf	(_R+37)& (0+255),b	;volatile
  2498  018046  0E3C               	movlw	60
  2499  018048  1437               	andwf	(btemp+1)^0,w,c
  2500  01804A  6FC8               	movwf	(_R+38)& (0+255),b	;volatile
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2504  01804C  0E10               	movlw	low _adc_int_handler
  2505  01804E  6EE6               	movwf	postinc1,c
  2506  018050  0E8F               	movlw	high _adc_int_handler
  2507  018052  6EE6               	movwf	postinc1,c
  2508  018054  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2509  018056  6EE6               	movwf	postinc1,c
  2510  018058  EC7B  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2511                           
  2512                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2513  01805C  0E80               	movlw	low _adc_int_t_handler
  2514  01805E  6EE6               	movwf	postinc1,c
  2515  018060  0E7D               	movlw	high _adc_int_t_handler
  2516  018062  6EE6               	movwf	postinc1,c
  2517  018064  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2518  018066  6EE6               	movwf	postinc1,c
  2519  018068  EC67  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2520                           
  2521                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2522  01806C  EC63  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2523                           
  2524                           ; BSR set to: 62
  2525                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2526  018070  0100               	movlb	0	; () banked
  2527  018072  51C6               	movf	(_R+36)& (0+255),w,b	;volatile
  2528  018074  0B0F               	andlw	15
  2529  018076  6EE6               	movwf	postinc1,c
  2530  018078  EC17  F0C7         	call	_ADCC_StartConversion	;wreg free
  2531                           
  2532                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2533  01807C  0012               	return		;funcret
  2534  01807E                     __end_of_start_adc_scan:
  2535                           	opt callstack 0
  2536                           
  2537 ;; *************** function _ADCC_StartConversion *****************
  2538 ;; Defined at:
  2539 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  channel         1  [STACK] enum E16136
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1  [STACK] void 
  2546 ;; Registers used:
  2547 ;;		fsr1l, fsr1h
  2548 ;; Tracked objects:
  2549 ;;		On entry : 3F/0
  2550 ;;		On exit  : 3F/3E
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    6
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_start_adc_scan
  2564 ;;		_adc_int_t_handler
  2565 ;; This function uses a reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text3
  2569  018E2E                     __ptext3:
  2570                           	opt callstack 0
  2571  018E2E                     _ADCC_StartConversion:
  2572                           	opt callstack 6
  2573                           
  2574                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2575                           ;stkvar	_channel @ sp[(0)+-1]
  2576                           
  2577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2578                           ;incstack = 0
  2579  018E2E  0EFF               	movlw	-1
  2580  018E30  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2581                           
  2582                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2583  018E36  013E               	movlb	62	; () banked
  2584  018E38  8FF8               	bsf	248,7,b	;volatile
  2585                           
  2586                           ; BSR set to: 62
  2587                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2588  018E3A  81F8               	bsf	248,0,b	;volatile
  2589                           
  2590                           ; BSR set to: 62
  2591                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2592  018E3C  52E5               	movf	postdec1,f,c
  2593  018E3E  0012               	return		;funcret
  2594  018E40                     __end_of_ADCC_StartConversion:
  2595                           	opt callstack 0
  2596                           
  2597 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2598 ;; Defined at:
  2599 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1  [STACK] void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 3F/3E
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    6
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_start_adc_scan
  2624 ;;		_adc_int_t_handler
  2625 ;; This function uses a reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text4
  2629  018EC6                     __ptext4:
  2630                           	opt callstack 0
  2631  018EC6                     _ADCC_DischargeSampleCapacitor:
  2632                           	opt callstack 6
  2633                           
  2634                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2635                           
  2636                           ; BSR set to: 62
  2637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2638                           ;incstack = 0
  2639  018EC6  0E3B               	movlw	59
  2640  018EC8  013E               	movlb	62	; () banked
  2641  018ECA  6FF1               	movwf	241,b	;volatile
  2642                           
  2643                           ; BSR set to: 62
  2644                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2645  018ECC  0012               	return		;funcret
  2646  018ECE                     __end_of_ADCC_DischargeSampleCapacitor:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _srand *****************
  2650 ;; Defined at:
  2651 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  s               2  [STACK] unsigned int 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1  [STACK] void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2660 ;; Tracked objects:
  2661 ;;		On entry : 3F/0
  2662 ;;		On exit  : 3F/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    6
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text5
  2680  018744                     __ptext5:
  2681                           	opt callstack 0
  2682  018744                     _srand:
  2683                           	opt callstack 24
  2684                           
  2685                           ;stkvar	_s @ sp[(0)+-2]
  2686                           
  2687                           ; BSR set to: 62
  2688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2689                           ;incstack = 0
  2690  018744  0EFE               	movlw	-2
  2691  018746  50E3               	movf	plusw1,w,c
  2692  018748  0FFF               	addlw	255
  2693  01874A  6E40               	movwf	(btemp+10)^0,c
  2694  01874C  0EFF               	movlw	-1
  2695  01874E  006F FF8C  F041    	movff	plusw1,btemp+11
  2696  018754  0EFF               	movlw	255
  2697  018756  2241               	addwfc	(btemp+11)^0,f,c
  2698  018758  0060  F100  F09A   	movff	btemp+10,_seed
  2699  01875E  0060  F104  F09B   	movff	btemp+11,_seed+1
  2700  018764  0100               	movlb	0	; () banked
  2701  018766  6B9C               	clrf	(_seed+2)& (0+255),b
  2702  018768  6B9D               	clrf	(_seed+3)& (0+255),b
  2703  01876A  6B9E               	clrf	(_seed+4)& (0+255),b
  2704  01876C  6B9F               	clrf	(_seed+5)& (0+255),b
  2705  01876E  6BA0               	clrf	(_seed+6)& (0+255),b
  2706  018770  6BA1               	clrf	(_seed+7)& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2710  018772  52E5               	movf	postdec1,f,c
  2711  018774  52E5               	movf	postdec1,f,c
  2712  018776  0012               	return		;funcret
  2713  018778                     __end_of_srand:
  2714                           	opt callstack 0
  2715                           
  2716 ;; *************** function _init_display *****************
  2717 ;; Defined at:
  2718 ;;		line 37 in file "eadog.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1  [STACK] void 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/1
  2729 ;;		On exit  : 3F/3D
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    8
  2739 ;; This function calls:
  2740 ;;		_ringBufS_init
  2741 ;;		_send_lcd_cmd
  2742 ;;		_send_lcd_cmd_long
  2743 ;;		_wdtdelay
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text6
  2750  017394                     __ptext6:
  2751                           	opt callstack 0
  2752  017394                     _init_display:
  2753                           	opt callstack 22
  2754                           
  2755                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2756                           
  2757                           ; BSR set to: 0
  2758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2759                           ;incstack = 0
  2760  017394  0E83               	movlw	low _ring_buf1
  2761  017396  0100               	movlb	0	; () banked
  2762  017398  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2763  01739A  0E03               	movlw	high _ring_buf1
  2764  01739C  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2765                           
  2766                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2767  01739E  0E40               	movlw	low _ring_buf2
  2768  0173A0  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2769  0173A2  0E03               	movlw	high _ring_buf2
  2770  0173A4  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2774  0173A6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2775  0173AC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2776  0173B2  ECB3  F0C4         	call	_ringBufS_init	;wreg free
  2777                           
  2778                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2779  0173B6  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2780  0173BC  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2781  0173C2  ECB3  F0C4         	call	_ringBufS_init	;wreg free
  2782                           
  2783                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2784  0173C6  84BE               	bsf	190,2,c	;volatile
  2785  0173C8  84BC               	bsf	188,2,c	;volatile
  2786                           
  2787                           ;eadog.c: 46:  wdtdelay(350000);
  2788  0173CA  0E30               	movlw	48
  2789  0173CC  6EE6               	movwf	postinc1,c
  2790  0173CE  0E57               	movlw	87
  2791  0173D0  6EE6               	movwf	postinc1,c
  2792  0173D2  0E05               	movlw	5
  2793  0173D4  6EE6               	movwf	postinc1,c
  2794  0173D6  0E00               	movlw	0
  2795  0173D8  6EE6               	movwf	postinc1,c
  2796  0173DA  EC30  F0C1         	call	_wdtdelay	;wreg free
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2800  0173DE  0E39               	movlw	57
  2801  0173E0  6EE6               	movwf	postinc1,c
  2802  0173E2  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2806  0173E6  0E1D               	movlw	29
  2807  0173E8  6EE6               	movwf	postinc1,c
  2808  0173EA  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2812  0173EE  0E50               	movlw	80
  2813  0173F0  6EE6               	movwf	postinc1,c
  2814  0173F2  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2818  0173F6  0E6C               	movlw	108
  2819  0173F8  6EE6               	movwf	postinc1,c
  2820  0173FA  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2824  0173FE  0E76               	movlw	118
  2825  017400  6EE6               	movwf	postinc1,c
  2826  017402  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2830  017406  0E38               	movlw	56
  2831  017408  6EE6               	movwf	postinc1,c
  2832  01740A  EC8B  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2836  01740E  0E0F               	movlw	15
  2837  017410  6EE6               	movwf	postinc1,c
  2838  017412  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2842  017416  0E01               	movlw	1
  2843  017418  6EE6               	movwf	postinc1,c
  2844  01741A  EC8B  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2848  01741E  0E02               	movlw	2
  2849  017420  6EE6               	movwf	postinc1,c
  2850  017422  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2854  017426  0E06               	movlw	6
  2855  017428  6EE6               	movwf	postinc1,c
  2856  01742A  EC9F  F0C4         	call	_send_lcd_cmd	;wreg free
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;eadog.c: 57:  wdtdelay(30);
  2860  01742E  0E1E               	movlw	30
  2861  017430  6EE6               	movwf	postinc1,c
  2862  017432  0E00               	movlw	0
  2863  017434  6EE6               	movwf	postinc1,c
  2864  017436  0E00               	movlw	0
  2865  017438  6EE6               	movwf	postinc1,c
  2866  01743A  0E00               	movlw	0
  2867  01743C  6EE6               	movwf	postinc1,c
  2868  01743E  EC30  F0C1         	call	_wdtdelay	;wreg free
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2872  017442  0E02               	movlw	2
  2873  017444  013D               	movlb	61	; () banked
  2874  017446  6F16               	movwf	22,b	;volatile
  2875                           
  2876                           ; BSR set to: 61
  2877                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2878  017448  0E40               	movlw	64
  2879  01744A  6F15               	movwf	21,b	;volatile
  2880                           
  2881                           ; BSR set to: 61
  2882                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2883  01744C  0E83               	movlw	131
  2884  01744E  6F14               	movwf	20,b	;volatile
  2885                           
  2886                           ; BSR set to: 61
  2887                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2888  017450  931A               	bcf	26,1,b	;volatile
  2889                           
  2890                           ; BSR set to: 61
  2891                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2892  017452  0E3F               	movlw	-193
  2893  017454  013B               	movlb	59	; () banked
  2894  017456  17FD               	andwf	253,f,b	;volatile
  2895                           
  2896                           ; BSR set to: 59
  2897                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2898  017458  9BFD               	bcf	253,5,b	;volatile
  2899                           
  2900                           ; BSR set to: 59
  2901                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2902  01745A  51FD               	movf	253,w,b	;volatile
  2903  01745C  0BF9               	andlw	-7
  2904  01745E  0902               	iorlw	2
  2905  017460  6FFD               	movwf	253,b	;volatile
  2906                           
  2907                           ; BSR set to: 59
  2908                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2909  017462  0EE7               	movlw	-25
  2910  017464  17FD               	andwf	253,f,b	;volatile
  2911                           
  2912                           ; BSR set to: 59
  2913                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2914  017466  81FD               	bsf	253,0,b	;volatile
  2915                           
  2916                           ; BSR set to: 59
  2917                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2918  017468  0E83               	movlw	low _ring_buf1
  2919  01746A  6FF9               	movwf	249,b	;volatile
  2920  01746C  0E03               	movlw	high _ring_buf1
  2921  01746E  6FFA               	movwf	250,b	;volatile
  2922  017470  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2923  017472  6FFB               	movwf	251,b	;volatile
  2924                           
  2925                           ; BSR set to: 59
  2926                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2927  017474  9BFC               	bcf	252,5,b	;volatile
  2928                           
  2929                           ; BSR set to: 59
  2930                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2931  017476  013D               	movlb	61	; () banked
  2932  017478  831A               	bsf	26,1,b	;volatile
  2933                           
  2934                           ; BSR set to: 61
  2935                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2936  01747A  94BE               	bcf	190,2,c	;volatile
  2937                           
  2938                           ; BSR set to: 61
  2939                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2940  01747C  0012               	return		;funcret
  2941  01747E                     __end_of_init_display:
  2942                           	opt callstack 0
  2943                           
  2944 ;; *************** function _send_lcd_cmd_long *****************
  2945 ;; Defined at:
  2946 ;;		line 114 in file "eadog.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  cmd             1  [STACK] const unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1  [STACK] void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2955 ;; Tracked objects:
  2956 ;;		On entry : 3F/0
  2957 ;;		On exit  : 3F/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    7
  2967 ;; This function calls:
  2968 ;;		_SPI1_Exchange8bit
  2969 ;;		_wdtdelay
  2970 ;; This function is called by:
  2971 ;;		_init_display
  2972 ;; This function uses a reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text7
  2976  018916                     __ptext7:
  2977                           	opt callstack 0
  2978  018916                     _send_lcd_cmd_long:
  2979                           	opt callstack 22
  2980                           
  2981                           ; BSR set to: 61
  2982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2983                           ;incstack = 0
  2984                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2985  018916  92BC               	bcf	188,1,c	;volatile
  2986                           
  2987                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2988  018918  94BC               	bcf	188,2,c	;volatile
  2989                           
  2990                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2991                           ;stkvar	_cmd @ sp[(0)+-1]
  2992  01891A  0EFF               	movlw	-1
  2993  01891C  50E3               	movf	plusw1,w,c
  2994  01891E  6EE6               	movwf	postinc1,c
  2995  018920  EC49  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  2996                           
  2997                           ; BSR set to: 57
  2998                           ;eadog.c: 119:  wdtdelay(800);
  2999  018924  0E20               	movlw	32
  3000  018926  6EE6               	movwf	postinc1,c
  3001  018928  0E03               	movlw	3
  3002  01892A  6EE6               	movwf	postinc1,c
  3003  01892C  0E00               	movlw	0
  3004  01892E  6EE6               	movwf	postinc1,c
  3005  018930  0E00               	movlw	0
  3006  018932  6EE6               	movwf	postinc1,c
  3007  018934  EC30  F0C1         	call	_wdtdelay	;wreg free
  3008                           
  3009                           ; BSR set to: 0
  3010  018938  82BC               	bsf	188,1,c	;volatile
  3011                           
  3012                           ; BSR set to: 0
  3013                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3014  01893A  52E5               	movf	postdec1,f,c
  3015  01893C  0012               	return		;funcret
  3016  01893E                     __end_of_send_lcd_cmd_long:
  3017                           	opt callstack 0
  3018                           
  3019 ;; *************** function _send_lcd_cmd *****************
  3020 ;; Defined at:
  3021 ;;		line 102 in file "eadog.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  cmd             1  [STACK] const unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1  [STACK] void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3030 ;; Tracked objects:
  3031 ;;		On entry : 3F/0
  3032 ;;		On exit  : 3F/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    7
  3042 ;; This function calls:
  3043 ;;		_SPI1_Exchange8bit
  3044 ;;		_wdtdelay
  3045 ;; This function is called by:
  3046 ;;		_init_display
  3047 ;; This function uses a reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text8
  3051  01893E                     __ptext8:
  3052                           	opt callstack 0
  3053  01893E                     _send_lcd_cmd:
  3054                           	opt callstack 22
  3055                           
  3056                           ; BSR set to: 0
  3057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3058                           ;incstack = 0
  3059                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3060  01893E  92BC               	bcf	188,1,c	;volatile
  3061                           
  3062                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3063  018940  94BC               	bcf	188,2,c	;volatile
  3064                           
  3065                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3066                           ;stkvar	_cmd @ sp[(0)+-1]
  3067  018942  0EFF               	movlw	-1
  3068  018944  50E3               	movf	plusw1,w,c
  3069  018946  6EE6               	movwf	postinc1,c
  3070  018948  EC49  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3071                           
  3072                           ; BSR set to: 57
  3073                           ;eadog.c: 107:  wdtdelay(30);
  3074  01894C  0E1E               	movlw	30
  3075  01894E  6EE6               	movwf	postinc1,c
  3076  018950  0E00               	movlw	0
  3077  018952  6EE6               	movwf	postinc1,c
  3078  018954  0E00               	movlw	0
  3079  018956  6EE6               	movwf	postinc1,c
  3080  018958  0E00               	movlw	0
  3081  01895A  6EE6               	movwf	postinc1,c
  3082  01895C  EC30  F0C1         	call	_wdtdelay	;wreg free
  3083                           
  3084                           ; BSR set to: 0
  3085  018960  82BC               	bsf	188,1,c	;volatile
  3086                           
  3087                           ; BSR set to: 0
  3088                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3089  018962  52E5               	movf	postdec1,f,c
  3090  018964  0012               	return		;funcret
  3091  018966                     __end_of_send_lcd_cmd:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _SPI1_Exchange8bit *****************
  3095 ;; Defined at:
  3096 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  data            1  [STACK] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1  [STACK] unsigned char 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 3F/39
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    6
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_send_lcd_cmd
  3121 ;;		_send_lcd_cmd_long
  3122 ;; This function uses a reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text9
  3126  018C92                     __ptext9:
  3127                           	opt callstack 0
  3128  018C92                     _SPI1_Exchange8bit:
  3129                           	opt callstack 22
  3130                           
  3131                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3132                           
  3133                           ; BSR set to: 0
  3134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3135                           ;incstack = 0
  3136  018C92  0E01               	movlw	1
  3137  018C94  013D               	movlb	61	; () banked
  3138  018C96  6F12               	movwf	18,b	;volatile
  3139                           
  3140                           ; BSR set to: 61
  3141                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3142                           ;stkvar	_data @ sp[(0)+-1]
  3143  018C98  0EFF               	movlw	-1
  3144  018C9A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3145  018CA0                     l835:
  3146                           
  3147                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3148  018CA0  0139               	movlb	57	; () banked
  3149  018CA2  A9A2               	btfss	162,4,b	;volatile
  3150  018CA4  D7FD               	goto	l835
  3151                           
  3152                           ; BSR set to: 57
  3153                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3154  018CA6  006F F440  F036    	movff	15632,btemp	;volatile
  3155                           
  3156                           ; BSR set to: 57
  3157                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3158  018CAC  52E5               	movf	postdec1,f,c
  3159  018CAE  0012               	return		;funcret
  3160  018CB0                     __end_of_SPI1_Exchange8bit:
  3161                           	opt callstack 0
  3162                           
  3163 ;; *************** function _ringBufS_init *****************
  3164 ;; Defined at:
  3165 ;;		line 22 in file "ringbufs.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  _this           2  [STACK] PTR volatile struct ring
  3168 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1  [STACK] void 
  3173 ;; Registers used:
  3174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    7
  3187 ;; This function calls:
  3188 ;;		_memset
  3189 ;; This function is called by:
  3190 ;;		_init_display
  3191 ;; This function uses a reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text10
  3195  018966                     __ptext10:
  3196                           	opt callstack 0
  3197  018966                     _ringBufS_init:
  3198                           	opt callstack 22
  3199                           
  3200                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3201                           
  3202                           ; BSR set to: 57
  3203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3204                           ;incstack = 0
  3205  018966  0E43               	movlw	67
  3206  018968  6EE6               	movwf	postinc1,c
  3207  01896A  0E00               	movlw	0
  3208  01896C  6EE6               	movwf	postinc1,c
  3209  01896E  0E00               	movlw	0
  3210  018970  6EE6               	movwf	postinc1,c
  3211  018972  0E00               	movlw	0
  3212  018974  6EE6               	movwf	postinc1,c
  3213                           
  3214                           ;stkvar	__this @ sp[(-4)+-2]
  3215  018976  0EFA               	movlw	-6
  3216  018978  006F FF8F FFE6     	movff	plusw1,postinc1
  3217  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
  3218  018984  ECD9  F0A7         	call	_memset	;wreg free
  3219                           
  3220                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3221  018988  52E5               	movf	postdec1,f,c
  3222  01898A  52E5               	movf	postdec1,f,c
  3223  01898C  0012               	return		;funcret
  3224  01898E                     __end_of_ringBufS_init:
  3225                           	opt callstack 0
  3226                           
  3227 ;; *************** function _eaDogM_WriteCommand *****************
  3228 ;; Defined at:
  3229 ;;		line 160 in file "eadog.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  cmd             1  [STACK] const unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1  [STACK] void 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3238 ;; Tracked objects:
  3239 ;;		On entry : 3F/3D
  3240 ;;		On exit  : 3F/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:   16
  3250 ;; This function calls:
  3251 ;;		_send_lcd_cmd_dma
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text11
  3258  018E50                     __ptext11:
  3259                           	opt callstack 0
  3260  018E50                     _eaDogM_WriteCommand:
  3261                           	opt callstack 14
  3262                           
  3263                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3264                           ;stkvar	_cmd @ sp[(0)+-1]
  3265                           
  3266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3267                           ;incstack = 0
  3268  018E50  0EFF               	movlw	-1
  3269  018E52  50E3               	movf	plusw1,w,c
  3270  018E54  6EE6               	movwf	postinc1,c
  3271  018E56  EC8A  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  3272                           
  3273                           ; BSR set to: 0
  3274                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3275  018E5A  52E5               	movf	postdec1,f,c
  3276  018E5C  0012               	return		;funcret
  3277  018E5E                     __end_of_eaDogM_WriteCommand:
  3278                           	opt callstack 0
  3279                           
  3280 ;; *************** function _convert_adc_data *****************
  3281 ;; Defined at:
  3282 ;;		line 40 in file "mbmc.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  i               1  [STACK] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1  [STACK] void 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3300 ;;Total ram usage:        0 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    9
  3303 ;; This function calls:
  3304 ;;		_conv_raw_result
  3305 ;;		_lp_filter
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text12
  3312  017DFE                     __ptext12:
  3313                           	opt callstack 0
  3314  017DFE                     _convert_adc_data:
  3315                           	opt callstack 0
  3316                           
  3317                           ; BSR set to: 0
  3318                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3319  017DFE  52E6               	movf	postinc1,f,c
  3320                           
  3321                           ;mbmc.c: 42:  uint8_t i = 0;
  3322                           ;stkvar	_i @ sp[(-1)+0]
  3323                           
  3324                           ;incstack = 0
  3325  017E00  0EFF               	movlw	-1
  3326  017E02  6AE3               	clrf	plusw1,c
  3327  017E04                     l8952:
  3328                           
  3329                           ;mbmc.c: 46:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3330  017E04  0E01               	movlw	1
  3331  017E06  6EE6               	movwf	postinc1,c
  3332                           
  3333                           ;stkvar	_i @ sp[(-2)+0]
  3334  017E08  0EFE               	movlw	-2
  3335  017E0A  50E3               	movf	plusw1,w,c
  3336  017E0C  6EE6               	movwf	postinc1,c
  3337  017E0E  0E01               	movlw	1
  3338  017E10  6EE6               	movwf	postinc1,c
  3339                           
  3340                           ;stkvar	_i @ sp[(-4)+0]
  3341  017E12  0EFC               	movlw	-4
  3342  017E14  50E3               	movf	plusw1,w,c
  3343  017E16  6EE6               	movwf	postinc1,c
  3344  017E18  ECEB  F098         	call	_conv_raw_result	;wreg free
  3345  017E1C  0060  F0DB  FFE6   	movff	btemp,postinc1
  3346  017E22  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3347  017E28  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3348  017E2E  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3349  017E34  EC63  F0B1         	call	_lp_filter	;wreg free
  3350                           
  3351                           ;stkvar	_i @ sp[(-1)+0]
  3352  017E38  0EFF               	movlw	-1
  3353  017E3A  50E3               	movf	plusw1,w,c
  3354  017E3C  0D04               	mullw	4
  3355  017E3E  0E00               	movlw	low _C
  3356  017E40  24F3               	addwf	243,w,c
  3357  017E42  6ED9               	movwf	fsr2l,c
  3358  017E44  0E02               	movlw	high _C
  3359  017E46  20F4               	addwfc	prodh,w,c
  3360  017E48  6EDA               	movwf	fsr2h,c
  3361  017E4A  0060  F0DB  FFDE   	movff	btemp,postinc2
  3362  017E50  0060  F0DF  FFDE   	movff	btemp+1,postinc2
  3363  017E56  0060  F0E3  FFDE   	movff	btemp+2,postinc2
  3364  017E5C  0060  F0E7  FFDE   	movff	btemp+3,postinc2
  3365                           
  3366                           ;mbmc.c: 50:  } while (++i < 16);
  3367                           ;stkvar	_i @ sp[(-1)+0]
  3368  017E62  0EFF               	movlw	-1
  3369  017E64  2AE3               	incf	plusw1,f,c
  3370  017E66  0EFF               	movlw	-1
  3371  017E68  006F FF8C  F036    	movff	plusw1,btemp
  3372  017E6E  0E0F               	movlw	15
  3373  017E70  6436               	cpfsgt	btemp^0,c
  3374  017E72  D7C8               	goto	l8952
  3375                           
  3376                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3377  017E74  52E5               	movf	postdec1,f,c
  3378  017E76  0012               	return		;funcret
  3379  017E78                     __end_of_convert_adc_data:
  3380                           	opt callstack 0
  3381                           
  3382 ;; *************** function _lp_filter *****************
  3383 ;; Defined at:
  3384 ;;		line 18 in file "mbmc.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  new             4  [STACK] const float 
  3387 ;;  bn              1  [STACK] const unsigned char 
  3388 ;;  slow            1  [STACK] const char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  lp_speed        4  [STACK] float 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  4  [STACK] float 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    8
  3407 ;; This function calls:
  3408 ;;		___fladd
  3409 ;;		___flmul
  3410 ;;		___flsub
  3411 ;; This function is called by:
  3412 ;;		_convert_adc_data
  3413 ;; This function uses a reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text13
  3417  0162C6                     __ptext13:
  3418                           	opt callstack 0
  3419  0162C6                     _lp_filter:
  3420                           	opt callstack 0
  3421                           
  3422                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3423  0162C6  52E6               	movf	postinc1,f,c
  3424  0162C8  52E6               	movf	postinc1,f,c
  3425  0162CA  52E6               	movf	postinc1,f,c
  3426  0162CC  52E6               	movf	postinc1,f,c
  3427                           
  3428                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16];;mbmc.c: 21:  float lp_speed;;mbmc.c: 23: 
      +                           if (bn >= 16)
  3429                           ;stkvar	_bn @ sp[(-4)+-5]
  3430                           
  3431                           ;incstack = 0
  3432  0162CE  0EF7               	movlw	-9
  3433  0162D0  006F FF8C  F036    	movff	plusw1,btemp
  3434  0162D6  0E0F               	movlw	15
  3435  0162D8  6436               	cpfsgt	btemp^0,c
  3436  0162DA  D011               	goto	l8746
  3437  0162DC                     u8590:
  3438                           
  3439                           ;mbmc.c: 24:   return new;
  3440                           ;stkvar	_new @ sp[(-4)+-4]
  3441  0162DC  0EF8               	movlw	-8
  3442  0162DE  006F FF8C  F036    	movff	plusw1,btemp
  3443  0162E4  0EF9               	movlw	-7
  3444  0162E6  006F FF8C  F037    	movff	plusw1,btemp+1
  3445  0162EC  0EFA               	movlw	-6
  3446  0162EE  006F FF8C  F038    	movff	plusw1,btemp+2
  3447  0162F4  0EFB               	movlw	-5
  3448  0162F6  006F FF8C  F039    	movff	plusw1,btemp+3
  3449  0162FC  D0BF               	goto	l1693
  3450  0162FE                     l8746:
  3451                           
  3452                           ;mbmc.c: 26:  if (slow == (-1)) {
  3453                           ;stkvar	_slow @ sp[(-4)+-6]
  3454  0162FE  0EF6               	movlw	-10
  3455  016300  28E3               	incf	plusw1,w,c
  3456  016302  A4D8               	btfss	status,2,c
  3457  016304  D012               	goto	l8754
  3458                           
  3459                           ;mbmc.c: 27:   smooth[bn] = 0.0;
  3460                           ;stkvar	_bn @ sp[(-4)+-5]
  3461  016306  0EF7               	movlw	-9
  3462  016308  50E3               	movf	plusw1,w,c
  3463  01630A  0D04               	mullw	4
  3464  01630C  0EBB               	movlw	low lp_filter@smooth
  3465  01630E  24F3               	addwf	243,w,c
  3466  016310  6ED9               	movwf	fsr2l,c
  3467  016312  0E01               	movlw	high lp_filter@smooth
  3468  016314  20F4               	addwfc	prodh,w,c
  3469  016316  6EDA               	movwf	fsr2h,c
  3470  016318  0E00               	movlw	0
  3471  01631A  6EDE               	movwf	postinc2,c
  3472  01631C  0E00               	movlw	0
  3473  01631E  6EDE               	movwf	postinc2,c
  3474  016320  0E00               	movlw	0
  3475  016322  6EDE               	movwf	postinc2,c
  3476  016324  0E00               	movlw	0
  3477  016326  6EDD               	movwf	postdec2,c
  3478  016328  D7D9               	goto	u8590
  3479  01632A                     l8754:
  3480                           
  3481                           ;mbmc.c: 31:  if (slow) {
  3482                           ;stkvar	_slow @ sp[(-4)+-6]
  3483  01632A  0EF6               	movlw	-10
  3484  01632C  50E3               	movf	plusw1,w,c
  3485  01632E  B4D8               	btfsc	status,2,c
  3486  016330  D008               	goto	l8758
  3487                           
  3488                           ;mbmc.c: 32:   lp_speed = 0.066;
  3489  016332  0E02               	movlw	2
  3490  016334  6E3E               	movwf	(btemp+8)^0,c
  3491  016336  0E2B               	movlw	43
  3492  016338  6E3F               	movwf	(btemp+9)^0,c
  3493  01633A  0E87               	movlw	135
  3494  01633C  6E40               	movwf	(btemp+10)^0,c
  3495  01633E  0E3D               	movlw	61
  3496  016340  D007               	goto	L1
  3497  016342                     l8758:
  3498                           
  3499                           ;mbmc.c: 34:   lp_speed = 0.125;
  3500  016342  0E00               	movlw	0
  3501  016344  6E3E               	movwf	(btemp+8)^0,c
  3502  016346  0E00               	movlw	0
  3503  016348  6E3F               	movwf	(btemp+9)^0,c
  3504  01634A  0E00               	movlw	0
  3505  01634C  6E40               	movwf	(btemp+10)^0,c
  3506  01634E  0E3E               	movlw	62
  3507  016350                     L1:
  3508  016350  6E41               	movwf	(btemp+11)^0,c
  3509                           
  3510                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3511  016352  0EFC               	movlw	-4
  3512  016354  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  3513  01635A  0EFD               	movlw	-3
  3514  01635C  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  3515  016362  0EFE               	movlw	-2
  3516  016364  0060  F103  FFE3   	movff	btemp+10,plusw1
  3517  01636A  0EFF               	movlw	-1
  3518  01636C  0060  F107  FFE3   	movff	btemp+11,plusw1
  3519                           
  3520                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3521                           ;stkvar	_bn @ sp[(-4)+-5]
  3522  016372  0EF7               	movlw	-9
  3523  016374  50E3               	movf	plusw1,w,c
  3524  016376  0D04               	mullw	4
  3525  016378  0EBB               	movlw	low lp_filter@smooth
  3526  01637A  24F3               	addwf	243,w,c
  3527  01637C  6ED9               	movwf	fsr2l,c
  3528  01637E  0E01               	movlw	high lp_filter@smooth
  3529  016380  20F4               	addwfc	prodh,w,c
  3530  016382  6EDA               	movwf	fsr2h,c
  3531  016384  006F FF7B FFE6     	movff	postinc2,postinc1
  3532  01638A  006F FF7B FFE6     	movff	postinc2,postinc1
  3533  016390  006F FF7B FFE6     	movff	postinc2,postinc1
  3534  016396  006F FF7B FFE6     	movff	postinc2,postinc1
  3535                           
  3536                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3537  01639C  0EF8               	movlw	-8
  3538  01639E  006F FF8F FFE6     	movff	plusw1,postinc1
  3539  0163A4  006F FF8F FFE6     	movff	plusw1,postinc1
  3540  0163AA  006F FF8F FFE6     	movff	plusw1,postinc1
  3541  0163B0  006F FF8F FFE6     	movff	plusw1,postinc1
  3542                           
  3543                           ;stkvar	_bn @ sp[(-12)+-5]
  3544  0163B6  0EEF               	movlw	-17
  3545  0163B8  50E3               	movf	plusw1,w,c
  3546  0163BA  0D04               	mullw	4
  3547  0163BC  0EBB               	movlw	low lp_filter@smooth
  3548  0163BE  24F3               	addwf	243,w,c
  3549  0163C0  6ED9               	movwf	fsr2l,c
  3550  0163C2  0E01               	movlw	high lp_filter@smooth
  3551  0163C4  20F4               	addwfc	prodh,w,c
  3552  0163C6  6EDA               	movwf	fsr2h,c
  3553  0163C8  006F FF7B FFE6     	movff	postinc2,postinc1
  3554  0163CE  006F FF7B FFE6     	movff	postinc2,postinc1
  3555  0163D4  006F FF7B FFE6     	movff	postinc2,postinc1
  3556  0163DA  006F FF7B FFE6     	movff	postinc2,postinc1
  3557                           
  3558                           ;stkvar	_new @ sp[(-16)+-4]
  3559  0163E0  0EEC               	movlw	-20
  3560  0163E2  006F FF8F FFE6     	movff	plusw1,postinc1
  3561  0163E8  006F FF8F FFE6     	movff	plusw1,postinc1
  3562  0163EE  006F FF8F FFE6     	movff	plusw1,postinc1
  3563  0163F4  006F FF8F FFE6     	movff	plusw1,postinc1
  3564  0163FA  EC00  F0C2         	call	___flsub	;wreg free
  3565  0163FE  0060  F0DB  FFE6   	movff	btemp,postinc1
  3566  016404  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3567  01640A  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3568  016410  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3569  016416  ECF8  F090         	call	___flmul	;wreg free
  3570  01641A  0060  F0DB  FFE6   	movff	btemp,postinc1
  3571  016420  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3572  016426  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3573  01642C  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3574  016432  EC0D  F095         	call	___fladd	;wreg free
  3575                           
  3576                           ;stkvar	_bn @ sp[(-4)+-5]
  3577  016436  0EF7               	movlw	-9
  3578  016438  50E3               	movf	plusw1,w,c
  3579  01643A  0D04               	mullw	4
  3580  01643C  0EBB               	movlw	low lp_filter@smooth
  3581  01643E  24F3               	addwf	243,w,c
  3582  016440  6ED9               	movwf	fsr2l,c
  3583  016442  0E01               	movlw	high lp_filter@smooth
  3584  016444  20F4               	addwfc	prodh,w,c
  3585  016446  6EDA               	movwf	fsr2h,c
  3586  016448  0060  F0DB  FFDE   	movff	btemp,postinc2
  3587  01644E  0060  F0DF  FFDE   	movff	btemp+1,postinc2
  3588  016454  0060  F0E3  FFDE   	movff	btemp+2,postinc2
  3589  01645A  0060  F0E7  FFDD   	movff	btemp+3,postdec2
  3590  016460  52DD               	movf	postdec2,f,c
  3591  016462  52DD               	movf	postdec2,f,c
  3592  016464  006F FF78  F036    	movff	postinc2,btemp
  3593  01646A  006F FF78  F037    	movff	postinc2,btemp+1
  3594  016470  006F FF78  F038    	movff	postinc2,btemp+2
  3595  016476  006F FF78  F039    	movff	postinc2,btemp+3
  3596  01647C                     l1693:
  3597                           
  3598                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3599  01647C  0EF6               	movlw	246
  3600  01647E  26E1               	addwf	fsr1l,f,c
  3601  016480  0EFF               	movlw	255
  3602  016482  22E2               	addwfc	fsr1h,f,c
  3603  016484  0012               	return		;funcret
  3604  016486                     __end_of_lp_filter:
  3605                           	opt callstack 0
  3606                           
  3607 ;; *************** function _conv_raw_result *****************
  3608 ;; Defined at:
  3609 ;;		line 80 in file "daq.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  chan            1  [STACK] const enum E16136
  3612 ;;  to_what         1  [STACK] const enum E16198
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  4  [STACK] float 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    8
  3631 ;; This function calls:
  3632 ;;		___fldiv
  3633 ;;		___flmul
  3634 ;;		___flsub
  3635 ;;		___xxtofl
  3636 ;;		_get_raw_result
  3637 ;;		_nanf
  3638 ;; This function is called by:
  3639 ;;		_convert_adc_data
  3640 ;; This function uses a reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text14
  3644  0131D6                     __ptext14:
  3645                           	opt callstack 0
  3646  0131D6                     _conv_raw_result:
  3647                           	opt callstack 21
  3648                           
  3649                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3650                           ;stkvar	_chan @ sp[(0)+-1]
  3651                           
  3652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3653                           ;incstack = 0
  3654  0131D6  0EFF               	movlw	-1
  3655  0131D8  006F FF8C  F041    	movff	plusw1,btemp+11
  3656  0131DE  0E77               	movlw	119
  3657  0131E0  6E3E               	movwf	(btemp+8)^0,c
  3658  0131E2  0E3C               	movlw	60
  3659  0131E4  6E3F               	movwf	(btemp+9)^0,c
  3660  0131E6  2A41               	incf	(btemp+11)^0,f,c
  3661  0131E8  D003               	goto	u8474
  3662  0131EA                     u8475:
  3663  0131EA  343F               	rlcf	(btemp+9)^0,w,c
  3664  0131EC  323F               	rrcf	(btemp+9)^0,f,c
  3665  0131EE  323E               	rrcf	(btemp+8)^0,f,c
  3666  0131F0                     u8474:
  3667  0131F0  2E41               	decfsz	(btemp+11)^0,f,c
  3668  0131F2  D7FB               	goto	u8475
  3669  0131F4  B03E               	btfsc	(btemp+8)^0,0,c
  3670  0131F6  D29F               	goto	l8730
  3671                           
  3672                           ;daq.c: 83:   return nanf("");
  3673  0131F8  0E0B               	movlw	low (STR_27+18)
  3674  0131FA  6EE6               	movwf	postinc1,c
  3675  0131FC  0EFF               	movlw	high (STR_27+18)
  3676  0131FE  6EE6               	movwf	postinc1,c
  3677  013200  EC71  F0C0         	call	_nanf	;wreg free
  3678  013204  D2A8               	goto	l1650
  3679  013206                     l8682:
  3680                           
  3681                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3682                           ;stkvar	_chan @ sp[(0)+-1]
  3683  013206  0EFF               	movlw	-1
  3684  013208  006F FF8C  F041    	movff	plusw1,btemp+11
  3685  01320E  0E03               	movlw	3
  3686  013210  6E3E               	movwf	(btemp+8)^0,c
  3687  013212  0E00               	movlw	0
  3688  013214  6E3F               	movwf	(btemp+9)^0,c
  3689  013216  2A41               	incf	(btemp+11)^0,f,c
  3690  013218  D003               	goto	u8494
  3691  01321A                     u8495:
  3692  01321A  343F               	rlcf	(btemp+9)^0,w,c
  3693  01321C  323F               	rrcf	(btemp+9)^0,f,c
  3694  01321E  323E               	rrcf	(btemp+8)^0,f,c
  3695  013220                     u8494:
  3696  013220  2E41               	decfsz	(btemp+11)^0,f,c
  3697  013222  D7FB               	goto	u8495
  3698  013224  A03E               	btfss	(btemp+8)^0,0,c
  3699  013226  D117               	goto	l8696
  3700                           
  3701                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3702                           ;stkvar	_chan @ sp[(0)+-1]
  3703  013228  0EFF               	movlw	-1
  3704  01322A  006F FF8C  F041    	movff	plusw1,btemp+11
  3705  013230  0E01               	movlw	1
  3706  013232  6E3E               	movwf	(btemp+8)^0,c
  3707  013234  0E00               	movlw	0
  3708  013236  6E3F               	movwf	(btemp+9)^0,c
  3709  013238  2A41               	incf	(btemp+11)^0,f,c
  3710  01323A  D003               	goto	u8514
  3711  01323C                     u8515:
  3712  01323C  343F               	rlcf	(btemp+9)^0,w,c
  3713  01323E  323F               	rrcf	(btemp+9)^0,f,c
  3714  013240  323E               	rrcf	(btemp+8)^0,f,c
  3715  013242                     u8514:
  3716  013242  2E41               	decfsz	(btemp+11)^0,f,c
  3717  013244  D7FB               	goto	u8515
  3718  013246  A03E               	btfss	(btemp+8)^0,0,c
  3719  013248  D083               	goto	l8692
  3720                           
  3721                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 143.85/
      +                          1000.0;
  3722  01324A  0E00               	movlw	0
  3723  01324C  6EE6               	movwf	postinc1,c
  3724  01324E  0E00               	movlw	0
  3725  013250  6EE6               	movwf	postinc1,c
  3726  013252  0E7A               	movlw	122
  3727  013254  6EE6               	movwf	postinc1,c
  3728  013256  0E44               	movlw	68
  3729  013258  6EE6               	movwf	postinc1,c
  3730  01325A  0E9A               	movlw	154
  3731  01325C  6EE6               	movwf	postinc1,c
  3732  01325E  0ED9               	movlw	217
  3733  013260  6EE6               	movwf	postinc1,c
  3734  013262  0E0F               	movlw	15
  3735  013264  6EE6               	movwf	postinc1,c
  3736  013266  0E43               	movlw	67
  3737  013268  6EE6               	movwf	postinc1,c
  3738  01326A  0060  F308  F03E   	movff	_R+32,btemp+8	;volatile
  3739  013270  0060  F30C  F03F   	movff	_R+33,btemp+9	;volatile
  3740  013276  0E00               	movlw	0
  3741  013278  BE3F               	btfsc	(btemp+9)^0,7,c
  3742  01327A  0EFF               	movlw	255
  3743  01327C  6E40               	movwf	(btemp+10)^0,c
  3744  01327E  6E41               	movwf	(btemp+11)^0,c
  3745  013280  0060  F0FB  FFE6   	movff	btemp+8,postinc1
  3746  013286  0060  F0FF  FFE6   	movff	btemp+9,postinc1
  3747  01328C  0060  F103  FFE6   	movff	btemp+10,postinc1
  3748  013292  0060  F107  FFE6   	movff	btemp+11,postinc1
  3749  013298  0E01               	movlw	1
  3750  01329A  6EE6               	movwf	postinc1,c
  3751  01329C  EC61  F0B0         	call	___xxtofl	;wreg free
  3752  0132A0  0060  F0DB  FFE6   	movff	btemp,postinc1
  3753  0132A6  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3754  0132AC  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3755  0132B2  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3756                           
  3757                           ;stkvar	_chan @ sp[(-12)+-1]
  3758  0132B8  0EF3               	movlw	-13
  3759  0132BA  50E3               	movf	plusw1,w,c
  3760  0132BC  6EE6               	movwf	postinc1,c
  3761  0132BE  EC58  F0C6         	call	_get_raw_result	;wreg free
  3762  0132C2  0060  F0D8  F040   	movff	btemp,btemp+10
  3763  0132C8  0060  F0DC  F041   	movff	btemp+1,btemp+11
  3764  0132CE  5040               	movf	(btemp+10)^0,w,c
  3765  0132D0  6E3A               	movwf	(btemp+4)^0,c
  3766  0132D2  5041               	movf	(btemp+11)^0,w,c
  3767  0132D4  6E3B               	movwf	(btemp+5)^0,c
  3768  0132D6  6A3C               	clrf	(btemp+6)^0,c
  3769  0132D8  6A3D               	clrf	(btemp+7)^0,c
  3770  0132DA  0060  F0EB  FFE6   	movff	btemp+4,postinc1
  3771  0132E0  0060  F0EF  FFE6   	movff	btemp+5,postinc1
  3772  0132E6  0060  F0F3  FFE6   	movff	btemp+6,postinc1
  3773  0132EC  0060  F0F7  FFE6   	movff	btemp+7,postinc1
  3774  0132F2  0E00               	movlw	0
  3775  0132F4  6EE6               	movwf	postinc1,c
  3776  0132F6  EC61  F0B0         	call	___xxtofl	;wreg free
  3777  0132FA  0060  F0DB  FFE6   	movff	btemp,postinc1
  3778  013300  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3779  013306  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3780  01330C  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3781  013312  EC00  F0C2         	call	___flsub	;wreg free
  3782  013316  0060  F0DB  FFE6   	movff	btemp,postinc1
  3783  01331C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3784  013322  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3785  013328  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3786  01332E  ECF8  F090         	call	___flmul	;wreg free
  3787  013332  0060  F0DB  FFE6   	movff	btemp,postinc1
  3788  013338  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3789  01333E  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3790  013344  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3791  01334A  ECAE  F09B         	call	___fldiv	;wreg free
  3792  01334E  D203               	goto	l1650
  3793  013350                     l8692:
  3794                           
  3795                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 60.1/10
      +                          00.0;
  3796  013350  0E00               	movlw	0
  3797  013352  6EE6               	movwf	postinc1,c
  3798  013354  0E00               	movlw	0
  3799  013356  6EE6               	movwf	postinc1,c
  3800  013358  0E7A               	movlw	122
  3801  01335A  6EE6               	movwf	postinc1,c
  3802  01335C  0E44               	movlw	68
  3803  01335E  6EE6               	movwf	postinc1,c
  3804  013360  0E66               	movlw	102
  3805  013362  6EE6               	movwf	postinc1,c
  3806  013364  0E66               	movlw	102
  3807  013366  6EE6               	movwf	postinc1,c
  3808  013368  0E70               	movlw	112
  3809  01336A  6EE6               	movwf	postinc1,c
  3810  01336C  0E42               	movlw	66
  3811  01336E  6EE6               	movwf	postinc1,c
  3812  013370  0060  F310  F03E   	movff	_R+34,btemp+8	;volatile
  3813  013376  0060  F314  F03F   	movff	_R+35,btemp+9	;volatile
  3814  01337C  0E00               	movlw	0
  3815  01337E  BE3F               	btfsc	(btemp+9)^0,7,c
  3816  013380  0EFF               	movlw	255
  3817  013382  6E40               	movwf	(btemp+10)^0,c
  3818  013384  6E41               	movwf	(btemp+11)^0,c
  3819  013386  0060  F0FB  FFE6   	movff	btemp+8,postinc1
  3820  01338C  0060  F0FF  FFE6   	movff	btemp+9,postinc1
  3821  013392  0060  F103  FFE6   	movff	btemp+10,postinc1
  3822  013398  0060  F107  FFE6   	movff	btemp+11,postinc1
  3823  01339E  0E01               	movlw	1
  3824  0133A0  6EE6               	movwf	postinc1,c
  3825  0133A2  EC61  F0B0         	call	___xxtofl	;wreg free
  3826  0133A6  0060  F0DB  FFE6   	movff	btemp,postinc1
  3827  0133AC  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3828  0133B2  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3829  0133B8  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3830                           
  3831                           ;stkvar	_chan @ sp[(-12)+-1]
  3832  0133BE  0EF3               	movlw	-13
  3833  0133C0  50E3               	movf	plusw1,w,c
  3834  0133C2  6EE6               	movwf	postinc1,c
  3835  0133C4  EC58  F0C6         	call	_get_raw_result	;wreg free
  3836  0133C8  0060  F0D8  F040   	movff	btemp,btemp+10
  3837  0133CE  0060  F0DC  F041   	movff	btemp+1,btemp+11
  3838  0133D4  5040               	movf	(btemp+10)^0,w,c
  3839  0133D6  6E3A               	movwf	(btemp+4)^0,c
  3840  0133D8  5041               	movf	(btemp+11)^0,w,c
  3841  0133DA  6E3B               	movwf	(btemp+5)^0,c
  3842  0133DC  6A3C               	clrf	(btemp+6)^0,c
  3843  0133DE  6A3D               	clrf	(btemp+7)^0,c
  3844  0133E0  0060  F0EB  FFE6   	movff	btemp+4,postinc1
  3845  0133E6  0060  F0EF  FFE6   	movff	btemp+5,postinc1
  3846  0133EC  0060  F0F3  FFE6   	movff	btemp+6,postinc1
  3847  0133F2  0060  F0F7  FFE6   	movff	btemp+7,postinc1
  3848  0133F8  0E00               	movlw	0
  3849  0133FA  6EE6               	movwf	postinc1,c
  3850  0133FC  EC61  F0B0         	call	___xxtofl	;wreg free
  3851  013400  0060  F0DB  FFE6   	movff	btemp,postinc1
  3852  013406  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3853  01340C  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3854  013412  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3855  013418  EC00  F0C2         	call	___flsub	;wreg free
  3856  01341C  0060  F0DB  FFE6   	movff	btemp,postinc1
  3857  013422  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3858  013428  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3859  01342E  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3860  013434  ECF8  F090         	call	___flmul	;wreg free
  3861  013438  0060  F0DB  FFE6   	movff	btemp,postinc1
  3862  01343E  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3863  013444  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3864  01344A  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3865  013450  ECAE  F09B         	call	___fldiv	;wreg free
  3866  013454  D180               	goto	l1650
  3867  013456                     l8696:
  3868                           
  3869                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3870                           ;stkvar	_chan @ sp[(0)+-1]
  3871  013456  0EFF               	movlw	-1
  3872  013458  006F FF8C  F041    	movff	plusw1,btemp+11
  3873  01345E  0E00               	movlw	0
  3874  013460  6E3E               	movwf	(btemp+8)^0,c
  3875  013462  0E08               	movlw	8
  3876  013464  6E3F               	movwf	(btemp+9)^0,c
  3877  013466  2A41               	incf	(btemp+11)^0,f,c
  3878  013468  D003               	goto	u8534
  3879  01346A                     u8535:
  3880  01346A  343F               	rlcf	(btemp+9)^0,w,c
  3881  01346C  323F               	rrcf	(btemp+9)^0,f,c
  3882  01346E  323E               	rrcf	(btemp+8)^0,f,c
  3883  013470                     u8534:
  3884  013470  2E41               	decfsz	(btemp+11)^0,f,c
  3885  013472  D7FB               	goto	u8535
  3886  013474  A03E               	btfss	(btemp+8)^0,0,c
  3887  013476  D008               	goto	l8704
  3888                           
  3889                           ;daq.c: 95:     return 25.0;
  3890  013478  0E00               	movlw	0
  3891  01347A  6E36               	movwf	btemp^0,c
  3892  01347C  0E00               	movlw	0
  3893  01347E  6E37               	movwf	(btemp+1)^0,c
  3894  013480  0EC8               	movlw	200
  3895  013482  6E38               	movwf	(btemp+2)^0,c
  3896  013484  0E41               	movlw	65
  3897  013486  D155               	goto	L2
  3898  013488                     l8704:
  3899                           
  3900                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3901  013488  0E00               	movlw	0
  3902  01348A  6EE6               	movwf	postinc1,c
  3903  01348C  0E00               	movlw	0
  3904  01348E  6EE6               	movwf	postinc1,c
  3905  013490  0E7A               	movlw	122
  3906  013492  6EE6               	movwf	postinc1,c
  3907  013494  0E44               	movlw	68
  3908  013496  6EE6               	movwf	postinc1,c
  3909  013498  0E00               	movlw	0
  3910  01349A  6EE6               	movwf	postinc1,c
  3911  01349C  0E00               	movlw	0
  3912  01349E  6EE6               	movwf	postinc1,c
  3913  0134A0  0E00               	movlw	0
  3914  0134A2  6EE6               	movwf	postinc1,c
  3915  0134A4  0E40               	movlw	64
  3916  0134A6  6EE6               	movwf	postinc1,c
  3917  0134A8  0E61               	movlw	97
  3918  0134AA  6EE6               	movwf	postinc1,c
  3919  0134AC  0E03               	movlw	3
  3920  0134AE  6EE6               	movwf	postinc1,c
  3921  0134B0  0E04               	movlw	4
  3922  0134B2  6EE6               	movwf	postinc1,c
  3923  0134B4  0E41               	movlw	65
  3924  0134B6  6EE6               	movwf	postinc1,c
  3925                           
  3926                           ;stkvar	_chan @ sp[(-12)+-1]
  3927  0134B8  0EF3               	movlw	-13
  3928  0134BA  50E3               	movf	plusw1,w,c
  3929  0134BC  6EE6               	movwf	postinc1,c
  3930  0134BE  EC58  F0C6         	call	_get_raw_result	;wreg free
  3931  0134C2  0060  F0D8  F040   	movff	btemp,btemp+10
  3932  0134C8  0060  F0DC  F041   	movff	btemp+1,btemp+11
  3933  0134CE  5040               	movf	(btemp+10)^0,w,c
  3934  0134D0  6E3A               	movwf	(btemp+4)^0,c
  3935  0134D2  5041               	movf	(btemp+11)^0,w,c
  3936  0134D4  6E3B               	movwf	(btemp+5)^0,c
  3937  0134D6  6A3C               	clrf	(btemp+6)^0,c
  3938  0134D8  6A3D               	clrf	(btemp+7)^0,c
  3939  0134DA  0060  F0EB  FFE6   	movff	btemp+4,postinc1
  3940  0134E0  0060  F0EF  FFE6   	movff	btemp+5,postinc1
  3941  0134E6  0060  F0F3  FFE6   	movff	btemp+6,postinc1
  3942  0134EC  0060  F0F7  FFE6   	movff	btemp+7,postinc1
  3943  0134F2  0E00               	movlw	0
  3944  0134F4  6EE6               	movwf	postinc1,c
  3945  0134F6  EC61  F0B0         	call	___xxtofl	;wreg free
  3946  0134FA  0060  F0DB  FFE6   	movff	btemp,postinc1
  3947  013500  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3948  013506  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3949  01350C  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3950  013512  ECF8  F090         	call	___flmul	;wreg free
  3951  013516  0060  F0DB  FFE6   	movff	btemp,postinc1
  3952  01351C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3953  013522  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3954  013528  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3955  01352E  ECAE  F09B         	call	___fldiv	;wreg free
  3956  013532  0060  F0DB  FFE6   	movff	btemp,postinc1
  3957  013538  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3958  01353E  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  3959  013544  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  3960  01354A  ECAE  F09B         	call	___fldiv	;wreg free
  3961  01354E  D103               	goto	l1650
  3962  013550                     l8708:
  3963                           
  3964                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3965                           ;stkvar	_chan @ sp[(0)+-1]
  3966  013550  0EFF               	movlw	-1
  3967  013552  006F FF8C  F041    	movff	plusw1,btemp+11
  3968  013558  0E03               	movlw	3
  3969  01355A  6E3E               	movwf	(btemp+8)^0,c
  3970  01355C  0E00               	movlw	0
  3971  01355E  6E3F               	movwf	(btemp+9)^0,c
  3972  013560  2A41               	incf	(btemp+11)^0,f,c
  3973  013562  D003               	goto	u8554
  3974  013564                     u8555:
  3975  013564  343F               	rlcf	(btemp+9)^0,w,c
  3976  013566  323F               	rrcf	(btemp+9)^0,f,c
  3977  013568  323E               	rrcf	(btemp+8)^0,f,c
  3978  01356A                     u8554:
  3979  01356A  2E41               	decfsz	(btemp+11)^0,f,c
  3980  01356C  D7FB               	goto	u8555
  3981  01356E  B03E               	btfsc	(btemp+8)^0,0,c
  3982  013570  D011               	goto	u8580
  3983                           
  3984                           ;stkvar	_chan @ sp[(0)+-1]
  3985  013572  0EFF               	movlw	-1
  3986  013574  006F FF8C  F041    	movff	plusw1,btemp+11
  3987  01357A  0E00               	movlw	0
  3988  01357C  6E3E               	movwf	(btemp+8)^0,c
  3989  01357E  0E08               	movlw	8
  3990  013580  6E3F               	movwf	(btemp+9)^0,c
  3991  013582  2A41               	incf	(btemp+11)^0,f,c
  3992  013584  D003               	goto	u8574
  3993  013586                     u8575:
  3994  013586  343F               	rlcf	(btemp+9)^0,w,c
  3995  013588  323F               	rrcf	(btemp+9)^0,f,c
  3996  01358A  323E               	rrcf	(btemp+8)^0,f,c
  3997  01358C                     u8574:
  3998  01358C  2E41               	decfsz	(btemp+11)^0,f,c
  3999  01358E  D7FB               	goto	u8575
  4000  013590  A03E               	btfss	(btemp+8)^0,0,c
  4001  013592  D064               	goto	l8716
  4002  013594                     u8580:
  4003                           
  4004                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  4005  013594  0E00               	movlw	0
  4006  013596  6EE6               	movwf	postinc1,c
  4007  013598  0E00               	movlw	0
  4008  01359A  6EE6               	movwf	postinc1,c
  4009  01359C  0E7A               	movlw	122
  4010  01359E  6EE6               	movwf	postinc1,c
  4011  0135A0  0E44               	movlw	68
  4012  0135A2  6EE6               	movwf	postinc1,c
  4013  0135A4  0E00               	movlw	0
  4014  0135A6  6EE6               	movwf	postinc1,c
  4015  0135A8  0E00               	movlw	0
  4016  0135AA  6EE6               	movwf	postinc1,c
  4017  0135AC  0E00               	movlw	0
  4018  0135AE  6EE6               	movwf	postinc1,c
  4019  0135B0  0E40               	movlw	64
  4020  0135B2  6EE6               	movwf	postinc1,c
  4021  0135B4  0E00               	movlw	0
  4022  0135B6  6EE6               	movwf	postinc1,c
  4023  0135B8  0E00               	movlw	0
  4024  0135BA  6EE6               	movwf	postinc1,c
  4025  0135BC  0EA0               	movlw	160
  4026  0135BE  6EE6               	movwf	postinc1,c
  4027  0135C0  0E3F               	movlw	63
  4028  0135C2  6EE6               	movwf	postinc1,c
  4029                           
  4030                           ;stkvar	_chan @ sp[(-12)+-1]
  4031  0135C4  0EF3               	movlw	-13
  4032  0135C6  50E3               	movf	plusw1,w,c
  4033  0135C8  6EE6               	movwf	postinc1,c
  4034  0135CA  EC58  F0C6         	call	_get_raw_result	;wreg free
  4035  0135CE  0060  F0D8  F040   	movff	btemp,btemp+10
  4036  0135D4  0060  F0DC  F041   	movff	btemp+1,btemp+11
  4037  0135DA  5040               	movf	(btemp+10)^0,w,c
  4038  0135DC  6E3A               	movwf	(btemp+4)^0,c
  4039  0135DE  5041               	movf	(btemp+11)^0,w,c
  4040  0135E0  6E3B               	movwf	(btemp+5)^0,c
  4041  0135E2  6A3C               	clrf	(btemp+6)^0,c
  4042  0135E4  6A3D               	clrf	(btemp+7)^0,c
  4043  0135E6  0060  F0EB  FFE6   	movff	btemp+4,postinc1
  4044  0135EC  0060  F0EF  FFE6   	movff	btemp+5,postinc1
  4045  0135F2  0060  F0F3  FFE6   	movff	btemp+6,postinc1
  4046  0135F8  0060  F0F7  FFE6   	movff	btemp+7,postinc1
  4047  0135FE  0E00               	movlw	0
  4048  013600  6EE6               	movwf	postinc1,c
  4049  013602  EC61  F0B0         	call	___xxtofl	;wreg free
  4050  013606  0060  F0DB  FFE6   	movff	btemp,postinc1
  4051  01360C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4052  013612  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4053  013618  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4054  01361E  ECF8  F090         	call	___flmul	;wreg free
  4055  013622  0060  F0DB  FFE6   	movff	btemp,postinc1
  4056  013628  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4057  01362E  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4058  013634  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4059  01363A  ECAE  F09B         	call	___fldiv	;wreg free
  4060  01363E  0060  F0DB  FFE6   	movff	btemp,postinc1
  4061  013644  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4062  01364A  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4063  013650  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4064  013656  ECAE  F09B         	call	___fldiv	;wreg free
  4065  01365A  D07D               	goto	l1650
  4066  01365C                     l8716:
  4067                           
  4068                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4069  01365C  0E00               	movlw	0
  4070  01365E  6EE6               	movwf	postinc1,c
  4071  013660  0E00               	movlw	0
  4072  013662  6EE6               	movwf	postinc1,c
  4073  013664  0E7A               	movlw	122
  4074  013666  6EE6               	movwf	postinc1,c
  4075  013668  0E44               	movlw	68
  4076  01366A  6EE6               	movwf	postinc1,c
  4077  01366C  0E00               	movlw	0
  4078  01366E  6EE6               	movwf	postinc1,c
  4079  013670  0E00               	movlw	0
  4080  013672  6EE6               	movwf	postinc1,c
  4081  013674  0E00               	movlw	0
  4082  013676  6EE6               	movwf	postinc1,c
  4083  013678  0E40               	movlw	64
  4084  01367A  6EE6               	movwf	postinc1,c
  4085  01367C  0E61               	movlw	97
  4086  01367E  6EE6               	movwf	postinc1,c
  4087  013680  0E03               	movlw	3
  4088  013682  6EE6               	movwf	postinc1,c
  4089  013684  0E04               	movlw	4
  4090  013686  6EE6               	movwf	postinc1,c
  4091  013688  0E41               	movlw	65
  4092  01368A  6EE6               	movwf	postinc1,c
  4093                           
  4094                           ;stkvar	_chan @ sp[(-12)+-1]
  4095  01368C  0EF3               	movlw	-13
  4096  01368E  50E3               	movf	plusw1,w,c
  4097  013690  6EE6               	movwf	postinc1,c
  4098  013692  EC58  F0C6         	call	_get_raw_result	;wreg free
  4099  013696  0060  F0D8  F040   	movff	btemp,btemp+10
  4100  01369C  0060  F0DC  F041   	movff	btemp+1,btemp+11
  4101  0136A2  5040               	movf	(btemp+10)^0,w,c
  4102  0136A4  6E3A               	movwf	(btemp+4)^0,c
  4103  0136A6  5041               	movf	(btemp+11)^0,w,c
  4104  0136A8  6E3B               	movwf	(btemp+5)^0,c
  4105  0136AA  6A3C               	clrf	(btemp+6)^0,c
  4106  0136AC  6A3D               	clrf	(btemp+7)^0,c
  4107  0136AE  0060  F0EB  FFE6   	movff	btemp+4,postinc1
  4108  0136B4  0060  F0EF  FFE6   	movff	btemp+5,postinc1
  4109  0136BA  0060  F0F3  FFE6   	movff	btemp+6,postinc1
  4110  0136C0  0060  F0F7  FFE6   	movff	btemp+7,postinc1
  4111  0136C6  0E00               	movlw	0
  4112  0136C8  6EE6               	movwf	postinc1,c
  4113  0136CA  EC61  F0B0         	call	___xxtofl	;wreg free
  4114  0136CE  0060  F0DB  FFE6   	movff	btemp,postinc1
  4115  0136D4  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4116  0136DA  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4117  0136E0  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4118  0136E6  ECF8  F090         	call	___flmul	;wreg free
  4119  0136EA  0060  F0DB  FFE6   	movff	btemp,postinc1
  4120  0136F0  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4121  0136F6  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4122  0136FC  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4123  013702  ECAE  F09B         	call	___fldiv	;wreg free
  4124  013706  0060  F0DB  FFE6   	movff	btemp,postinc1
  4125  01370C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4126  013712  0060  F0E3  FFE6   	movff	btemp+2,postinc1
  4127  013718  0060  F0E7  FFE6   	movff	btemp+3,postinc1
  4128  01371E  ECAE  F09B         	call	___fldiv	;wreg free
  4129  013722  D019               	goto	l1650
  4130  013724                     l8722:
  4131                           
  4132                           ;daq.c: 108:   return 0.0;
  4133  013724  0E00               	movlw	0
  4134  013726  6E36               	movwf	btemp^0,c
  4135  013728  0E00               	movlw	0
  4136  01372A  6E37               	movwf	(btemp+1)^0,c
  4137  01372C  0E00               	movlw	0
  4138  01372E  6E38               	movwf	(btemp+2)^0,c
  4139  013730  0E00               	movlw	0
  4140  013732                     L2:
  4141  013732  6E39               	movwf	(btemp+3)^0,c
  4142  013734  D010               	goto	l1650
  4143  013736                     l8730:
  4144                           
  4145                           ;stkvar	_to_what @ sp[(0)+-2]
  4146  013736  0EFE               	movlw	-2
  4147  013738  50E3               	movf	plusw1,w,c
  4148  01373A  6E40               	movwf	(btemp+10)^0,c
  4149  01373C  6A41               	clrf	(btemp+11)^0,c
  4150                           
  4151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4152                           ; Switch size 1, requested type "simple"
  4153                           ; Number of cases is 1, Range of values is 0 to 0
  4154                           ; switch strategies available:
  4155                           ; Name         Instructions Cycles
  4156                           ; simple_byte            4     3 (average)
  4157                           ;	Chosen strategy is simple_byte
  4158  01373E  5041               	movf	(btemp+11)^0,w,c
  4159  013740  0A00               	xorlw	0	; case 0
  4160  013742  A4D8               	btfss	status,2,c
  4161  013744  D7EF               	goto	l8722
  4162                           
  4163                           ; Switch size 1, requested type "simple"
  4164                           ; Number of cases is 2, Range of values is 0 to 1
  4165                           ; switch strategies available:
  4166                           ; Name         Instructions Cycles
  4167                           ; simple_byte            7     4 (average)
  4168                           ;	Chosen strategy is simple_byte
  4169  013746  5040               	movf	(btemp+10)^0,w,c
  4170  013748  0A00               	xorlw	0	; case 0
  4171  01374A  B4D8               	btfsc	status,2,c
  4172  01374C  D55C               	goto	l8682
  4173  01374E  0A01               	xorlw	1	; case 1
  4174  013750  B4D8               	btfsc	status,2,c
  4175  013752  D6FE               	goto	l8708
  4176  013754  D7E7               	goto	l8722
  4177  013756                     l1650:
  4178                           
  4179                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4180  013756  52E5               	movf	postdec1,f,c
  4181  013758  52E5               	movf	postdec1,f,c
  4182  01375A  0012               	return		;funcret
  4183  01375C                     __end_of_conv_raw_result:
  4184                           	opt callstack 0
  4185                           
  4186 ;; *************** function _nanf *****************
  4187 ;; Defined at:
  4188 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  s               2  [STACK] PTR const unsigned char 
  4191 ;;		 -> STR_33(1), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  u               4  [STACK] struct .
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  4  [STACK] float 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    6
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_conv_raw_result
  4214 ;; This function uses a reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text15
  4218  0180E2                     __ptext15:
  4219                           	opt callstack 0
  4220  0180E2                     _nanf:
  4221                           	opt callstack 0
  4222                           
  4223                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4224  0180E2  52E6               	movf	postinc1,f,c
  4225  0180E4  52E6               	movf	postinc1,f,c
  4226  0180E6  52E6               	movf	postinc1,f,c
  4227  0180E8  52E6               	movf	postinc1,f,c
  4228                           
  4229                           ;incstack = 0
  4230  0180EA  0EFF               	movlw	255
  4231  0180EC  6E3E               	movwf	(btemp+8)^0,c
  4232  0180EE  0EFF               	movlw	255
  4233  0180F0  6E3F               	movwf	(btemp+9)^0,c
  4234  0180F2  0EFF               	movlw	255
  4235  0180F4  6E40               	movwf	(btemp+10)^0,c
  4236  0180F6  0E7F               	movlw	127
  4237  0180F8  6E41               	movwf	(btemp+11)^0,c
  4238                           
  4239                           ;stkvar	_u @ sp[(-4)+0]
  4240  0180FA  0EFC               	movlw	-4
  4241  0180FC  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  4242  018102  0EFD               	movlw	-3
  4243  018104  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  4244  01810A  0EFE               	movlw	-2
  4245  01810C  0060  F103  FFE3   	movff	btemp+10,plusw1
  4246  018112  0EFF               	movlw	-1
  4247  018114  0060  F107  FFE3   	movff	btemp+11,plusw1
  4248                           
  4249                           ;stkvar	_u @ sp[(-4)+0]
  4250  01811A  0EFC               	movlw	-4
  4251  01811C  006F FF8C  F036    	movff	plusw1,btemp
  4252  018122  0EFD               	movlw	-3
  4253  018124  006F FF8C  F037    	movff	plusw1,btemp+1
  4254  01812A  0EFE               	movlw	-2
  4255  01812C  006F FF8C  F038    	movff	plusw1,btemp+2
  4256  018132  0EFF               	movlw	-1
  4257  018134  006F FF8C  F039    	movff	plusw1,btemp+3
  4258                           
  4259                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4260  01813A  0EFA               	movlw	250
  4261  01813C  26E1               	addwf	fsr1l,f,c
  4262  01813E  0EFF               	movlw	255
  4263  018140  22E2               	addwfc	fsr1h,f,c
  4264  018142  0012               	return		;funcret
  4265  018144                     __end_of_nanf:
  4266                           	opt callstack 0
  4267                           
  4268 ;; *************** function _get_raw_result *****************
  4269 ;; Defined at:
  4270 ;;		line 72 in file "daq.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  index           1  [STACK] const enum E16136
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  2  [STACK] unsigned short 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    6
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_main
  4295 ;;		_conv_raw_result
  4296 ;; This function uses a reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text16
  4300  018CB0                     __ptext16:
  4301                           	opt callstack 0
  4302  018CB0                     _get_raw_result:
  4303                           	opt callstack 24
  4304                           
  4305                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4306                           ;stkvar	_index @ sp[(0)+-1]
  4307                           
  4308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4309                           ;incstack = 0
  4310  018CB0  0EFF               	movlw	-1
  4311  018CB2  50E3               	movf	plusw1,w,c
  4312  018CB4  0D02               	mullw	2
  4313  018CB6  50F3               	movf	243,w,c
  4314  018CB8  0FA2               	addlw	low _R
  4315  018CBA  6ED9               	movwf	fsr2l,c
  4316  018CBC  6ADA               	clrf	fsr2h,c
  4317  018CBE  006F FF78  F036    	movff	postinc2,btemp
  4318  018CC4  006F FF74  F037    	movff	postdec2,btemp+1
  4319                           
  4320                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4321  018CCA  52E5               	movf	postdec1,f,c
  4322  018CCC  0012               	return		;funcret
  4323  018CCE                     __end_of_get_raw_result:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function ___xxtofl *****************
  4327 ;; Defined at:
  4328 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  sign            1  [STACK] unsigned char 
  4331 ;;  val             4  [STACK] long 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  arg             4  [STACK] unsigned long 
  4334 ;;  exp             1  [STACK] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  4  [STACK] unsigned char 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    6
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_conv_raw_result
  4355 ;; This function uses a reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text17
  4359  0160C2                     __ptext17:
  4360                           	opt callstack 0
  4361  0160C2                     ___xxtofl:
  4362                           	opt callstack 0
  4363                           
  4364                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4365  0160C2  0E05               	movlw	5
  4366  0160C4  26E1               	addwf	fsr1l,f,c
  4367  0160C6  0E00               	movlw	0
  4368  0160C8  22E2               	addwfc	fsr1h,f,c
  4369                           
  4370                           ;stkvar	_sign @ sp[(-5)+-1]
  4371                           
  4372                           ;incstack = 0
  4373  0160CA  0EFA               	movlw	-6
  4374  0160CC  50E3               	movf	plusw1,w,c
  4375  0160CE  B4D8               	btfsc	status,2,c
  4376  0160D0  D01D               	goto	l8154
  4377                           
  4378                           ;stkvar	_val @ sp[(-5)+-5]
  4379  0160D2  0EF9               	movlw	-7
  4380  0160D4  AEE3               	btfss	plusw1,7,c
  4381  0160D6  D01A               	goto	l8154
  4382                           
  4383                           ;stkvar	_val @ sp[(-5)+-5]
  4384  0160D8  0EF6               	movlw	-10
  4385  0160DA  006F FF8C  F03E    	movff	plusw1,btemp+8
  4386  0160E0  0EF7               	movlw	-9
  4387  0160E2  006F FF8C  F03F    	movff	plusw1,btemp+9
  4388  0160E8  0EF8               	movlw	-8
  4389  0160EA  006F FF8C  F040    	movff	plusw1,btemp+10
  4390  0160F0  0EF9               	movlw	-7
  4391  0160F2  006F FF8C  F041    	movff	plusw1,btemp+11
  4392  0160F8  1E3E               	comf	(btemp+8)^0,f,c
  4393  0160FA  1E3F               	comf	(btemp+9)^0,f,c
  4394  0160FC  1E40               	comf	(btemp+10)^0,f,c
  4395  0160FE  1E41               	comf	(btemp+11)^0,f,c
  4396  016100  2A3E               	incf	(btemp+8)^0,f,c
  4397  016102  0E00               	movlw	0
  4398  016104  223F               	addwfc	(btemp+9)^0,f,c
  4399  016106  2240               	addwfc	(btemp+10)^0,f,c
  4400  016108  2241               	addwfc	(btemp+11)^0,f,c
  4401  01610A  D010               	goto	L3
  4402  01610C                     l8154:
  4403                           
  4404                           ;stkvar	_val @ sp[(-5)+-5]
  4405  01610C  0EF6               	movlw	-10
  4406  01610E  006F FF8C  F03E    	movff	plusw1,btemp+8
  4407  016114  0EF7               	movlw	-9
  4408  016116  006F FF8C  F03F    	movff	plusw1,btemp+9
  4409  01611C  0EF8               	movlw	-8
  4410  01611E  006F FF8C  F040    	movff	plusw1,btemp+10
  4411  016124  0EF9               	movlw	-7
  4412  016126  006F FF8C  F041    	movff	plusw1,btemp+11
  4413  01612C                     L3:
  4414                           
  4415                           ;stkvar	_arg @ sp[(-5)+0]
  4416  01612C  0EFB               	movlw	-5
  4417  01612E  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  4418  016134  0EFC               	movlw	-4
  4419  016136  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  4420  01613C  0EFD               	movlw	-3
  4421  01613E  0060  F103  FFE3   	movff	btemp+10,plusw1
  4422  016144  0EFE               	movlw	-2
  4423  016146  0060  F107  FFE3   	movff	btemp+11,plusw1
  4424                           
  4425                           ;stkvar	_val @ sp[(-5)+-5]
  4426  01614C  0EF6               	movlw	-10
  4427  01614E  50E3               	movf	plusw1,w,c
  4428  016150  E113               	bnz	l8162
  4429  016152  0EF7               	movlw	-9
  4430  016154  50E3               	movf	plusw1,w,c
  4431  016156  E110               	bnz	l8162
  4432  016158  0EF8               	movlw	-8
  4433  01615A  50E3               	movf	plusw1,w,c
  4434  01615C  E10D               	bnz	l8162
  4435  01615E  0EF9               	movlw	-7
  4436  016160  50E3               	movf	plusw1,w,c
  4437  016162  A4D8               	btfss	status,2,c
  4438  016164  D009               	goto	l8162
  4439  016166  0E00               	movlw	0
  4440  016168  6E36               	movwf	btemp^0,c
  4441  01616A  0E00               	movlw	0
  4442  01616C  6E37               	movwf	(btemp+1)^0,c
  4443  01616E  0E00               	movlw	0
  4444  016170  6E38               	movwf	(btemp+2)^0,c
  4445  016172  0E00               	movlw	0
  4446  016174  6E39               	movwf	(btemp+3)^0,c
  4447  016176  D0A2               	goto	l2671
  4448  016178                     l8162:
  4449  016178  0E96               	movlw	150
  4450  01617A  6E41               	movwf	(btemp+11)^0,c
  4451                           
  4452                           ;stkvar	_exp @ sp[(-5)+4]
  4453  01617C  0EFF               	movlw	-1
  4454  01617E  0060  F107  FFE3   	movff	btemp+11,plusw1
  4455  016184  D00B               	goto	l8166
  4456  016186                     l8164:
  4457                           
  4458                           ;stkvar	_exp @ sp[(-5)+4]
  4459  016186  0EFF               	movlw	-1
  4460  016188  2AE3               	incf	plusw1,f,c
  4461                           
  4462                           ;stkvar	_arg @ sp[(-5)+0]
  4463  01618A  90D8               	bcf	status,0,c
  4464  01618C  0EFE               	movlw	-2
  4465  01618E  32E3               	rrcf	plusw1,f,c
  4466  016190  0EFD               	movlw	-3
  4467  016192  32E3               	rrcf	plusw1,f,c
  4468  016194  0EFC               	movlw	-4
  4469  016196  32E3               	rrcf	plusw1,f,c
  4470  016198  0EFB               	movlw	-5
  4471  01619A  32E3               	rrcf	plusw1,f,c
  4472  01619C                     l8166:
  4473                           
  4474                           ;stkvar	_arg @ sp[(-5)+0]
  4475  01619C  50E1               	movf	fsr1l,w,c
  4476  01619E  0FFB               	addlw	-5
  4477  0161A0  6ED9               	movwf	fsr2l,c
  4478  0161A2  50E2               	movf	fsr1h,w,c
  4479  0161A4  6EDA               	movwf	fsr2h,c
  4480  0161A6  0EFF               	movlw	255
  4481  0161A8  22DA               	addwfc	fsr2h,f,c
  4482  0161AA  52DE               	movf	postinc2,f,c
  4483  0161AC  52DE               	movf	postinc2,f,c
  4484  0161AE  52DE               	movf	postinc2,f,c
  4485  0161B0  0EFE               	movlw	254
  4486  0161B2  14DD               	andwf	postdec2,w,c
  4487  0161B4  B4D8               	btfsc	status,2,c
  4488  0161B6  D018               	goto	l8174
  4489  0161B8  D7E6               	goto	l8164
  4490  0161BA                     l8168:
  4491                           
  4492                           ;stkvar	_exp @ sp[(-5)+4]
  4493  0161BA  0EFF               	movlw	-1
  4494  0161BC  2AE3               	incf	plusw1,f,c
  4495                           
  4496                           ;stkvar	_arg @ sp[(-5)+0]
  4497  0161BE  50E1               	movf	fsr1l,w,c
  4498  0161C0  0FFB               	addlw	-5
  4499  0161C2  6ED9               	movwf	fsr2l,c
  4500  0161C4  50E2               	movf	fsr1h,w,c
  4501  0161C6  6EDA               	movwf	fsr2h,c
  4502  0161C8  0EFF               	movlw	255
  4503  0161CA  22DA               	addwfc	fsr2h,f,c
  4504  0161CC  2ADE               	incf	postinc2,f,c
  4505  0161CE  0E00               	movlw	0
  4506  0161D0  22DE               	addwfc	postinc2,f,c
  4507  0161D2  22DE               	addwfc	postinc2,f,c
  4508  0161D4  22DE               	addwfc	postinc2,f,c
  4509                           
  4510                           ;stkvar	_arg @ sp[(-5)+0]
  4511  0161D6  90D8               	bcf	status,0,c
  4512  0161D8  0EFE               	movlw	-2
  4513  0161DA  32E3               	rrcf	plusw1,f,c
  4514  0161DC  0EFD               	movlw	-3
  4515  0161DE  32E3               	rrcf	plusw1,f,c
  4516  0161E0  0EFC               	movlw	-4
  4517  0161E2  32E3               	rrcf	plusw1,f,c
  4518  0161E4  0EFB               	movlw	-5
  4519  0161E6  32E3               	rrcf	plusw1,f,c
  4520  0161E8                     l8174:
  4521                           
  4522                           ;stkvar	_arg @ sp[(-5)+0]
  4523  0161E8  50E1               	movf	fsr1l,w,c
  4524  0161EA  0FFB               	addlw	-5
  4525  0161EC  6ED9               	movwf	fsr2l,c
  4526  0161EE  50E2               	movf	fsr1h,w,c
  4527  0161F0  6EDA               	movwf	fsr2h,c
  4528  0161F2  0EFF               	movlw	255
  4529  0161F4  22DA               	addwfc	fsr2h,f,c
  4530  0161F6  52DE               	movf	postinc2,f,c
  4531  0161F8  52DE               	movf	postinc2,f,c
  4532  0161FA  52DE               	movf	postinc2,f,c
  4533  0161FC  0EFF               	movlw	255
  4534  0161FE  14DD               	andwf	postdec2,w,c
  4535  016200  B4D8               	btfsc	status,2,c
  4536  016202  D00C               	goto	l8178
  4537  016204  D7DA               	goto	l8168
  4538  016206                     l8176:
  4539                           
  4540                           ;stkvar	_exp @ sp[(-5)+4]
  4541  016206  0EFF               	movlw	-1
  4542  016208  06E3               	decf	plusw1,f,c
  4543                           
  4544                           ;stkvar	_arg @ sp[(-5)+0]
  4545  01620A  90D8               	bcf	status,0,c
  4546  01620C  0EFB               	movlw	-5
  4547  01620E  36E3               	rlcf	plusw1,f,c
  4548  016210  0EFC               	movlw	-4
  4549  016212  36E3               	rlcf	plusw1,f,c
  4550  016214  0EFD               	movlw	-3
  4551  016216  36E3               	rlcf	plusw1,f,c
  4552  016218  0EFE               	movlw	-2
  4553  01621A  36E3               	rlcf	plusw1,f,c
  4554  01621C                     l8178:
  4555                           
  4556                           ;stkvar	_arg @ sp[(-5)+0]
  4557  01621C  0EFD               	movlw	-3
  4558  01621E  BEE3               	btfsc	plusw1,7,c
  4559  016220  D007               	goto	u8300
  4560                           
  4561                           ;stkvar	_exp @ sp[(-5)+4]
  4562  016222  0EFF               	movlw	-1
  4563  016224  006F FF8C  F036    	movff	plusw1,btemp
  4564  01622A  0E02               	movlw	2
  4565  01622C  6036               	cpfslt	btemp^0,c
  4566  01622E  D7EB               	goto	l8176
  4567  016230                     u8300:
  4568                           
  4569                           ;stkvar	_exp @ sp[(-5)+4]
  4570  016230  0EFF               	movlw	-1
  4571  016232  B0E3               	btfsc	plusw1,0,c
  4572  016234  D002               	goto	l8186
  4573                           
  4574                           ;stkvar	_arg @ sp[(-5)+0]
  4575  016236  0EFD               	movlw	-3
  4576  016238  9EE3               	bcf	plusw1,7,c
  4577  01623A                     l8186:
  4578                           
  4579                           ;stkvar	_exp @ sp[(-5)+4]
  4580  01623A  50E1               	movf	fsr1l,w,c
  4581  01623C  0FFF               	addlw	-1
  4582  01623E  6ED9               	movwf	fsr2l,c
  4583  016240  50E2               	movf	fsr1h,w,c
  4584  016242  6EDA               	movwf	fsr2h,c
  4585  016244  0EFF               	movlw	255
  4586  016246  22DA               	addwfc	fsr2h,f,c
  4587  016248  90D8               	bcf	status,0,c
  4588  01624A  32DF               	rrcf	indf2,f,c
  4589                           
  4590                           ;stkvar	_exp @ sp[(-5)+4]
  4591  01624C  0EFF               	movlw	-1
  4592  01624E  006F FF8C  F041    	movff	plusw1,btemp+11
  4593  016254  0060  F104  F03A   	movff	btemp+11,btemp+4
  4594  01625A  6A3B               	clrf	(btemp+5)^0,c
  4595  01625C  6A3C               	clrf	(btemp+6)^0,c
  4596  01625E  6A3D               	clrf	(btemp+7)^0,c
  4597  016260  0060  F0E8  F03D   	movff	btemp+4,btemp+7
  4598  016266  6A3C               	clrf	(btemp+6)^0,c
  4599  016268  6A3B               	clrf	(btemp+5)^0,c
  4600  01626A  6A3A               	clrf	(btemp+4)^0,c
  4601                           
  4602                           ;stkvar	_arg @ sp[(-5)+0]
  4603  01626C  50E1               	movf	fsr1l,w,c
  4604  01626E  0FFB               	addlw	-5
  4605  016270  6ED9               	movwf	fsr2l,c
  4606  016272  50E2               	movf	fsr1h,w,c
  4607  016274  6EDA               	movwf	fsr2h,c
  4608  016276  0EFF               	movlw	255
  4609  016278  22DA               	addwfc	fsr2h,f,c
  4610  01627A  503A               	movf	(btemp+4)^0,w,c
  4611  01627C  12DE               	iorwf	postinc2,f,c
  4612  01627E  503B               	movf	(btemp+5)^0,w,c
  4613  016280  12DE               	iorwf	postinc2,f,c
  4614  016282  503C               	movf	(btemp+6)^0,w,c
  4615  016284  12DE               	iorwf	postinc2,f,c
  4616  016286  503D               	movf	(btemp+7)^0,w,c
  4617  016288  12DE               	iorwf	postinc2,f,c
  4618                           
  4619                           ;stkvar	_sign @ sp[(-5)+-1]
  4620  01628A  0EFA               	movlw	-6
  4621  01628C  50E3               	movf	plusw1,w,c
  4622  01628E  B4D8               	btfsc	status,2,c
  4623  016290  D005               	goto	l8196
  4624                           
  4625                           ;stkvar	_val @ sp[(-5)+-5]
  4626  016292  0EF9               	movlw	-7
  4627  016294  AEE3               	btfss	plusw1,7,c
  4628  016296  D002               	goto	l8196
  4629                           
  4630                           ;stkvar	_arg @ sp[(-5)+0]
  4631  016298  0EFE               	movlw	-2
  4632  01629A  8EE3               	bsf	plusw1,7,c
  4633  01629C                     l8196:
  4634                           
  4635                           ;stkvar	_arg @ sp[(-5)+0]
  4636  01629C  0EFB               	movlw	-5
  4637  01629E  006F FF8C  F036    	movff	plusw1,btemp
  4638  0162A4  0EFC               	movlw	-4
  4639  0162A6  006F FF8C  F037    	movff	plusw1,btemp+1
  4640  0162AC  0EFD               	movlw	-3
  4641  0162AE  006F FF8C  F038    	movff	plusw1,btemp+2
  4642  0162B4  0EFE               	movlw	-2
  4643  0162B6  006F FF8C  F039    	movff	plusw1,btemp+3
  4644  0162BC                     l2671:
  4645                           
  4646                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4647  0162BC  0EF6               	movlw	246
  4648  0162BE  26E1               	addwf	fsr1l,f,c
  4649  0162C0  0EFF               	movlw	255
  4650  0162C2  22E2               	addwfc	fsr1h,f,c
  4651  0162C4  0012               	return		;funcret
  4652  0162C6                     __end_of___xxtofl:
  4653                           	opt callstack 0
  4654                           
  4655 ;; *************** function _clear_adc_scan *****************
  4656 ;; Defined at:
  4657 ;;		line 64 in file "daq.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1  [STACK] void 
  4664 ;; Registers used:
  4665 ;;		None
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 3F/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    6
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_main
  4682 ;; This function uses a reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text18
  4686  018EEE                     __ptext18:
  4687                           	opt callstack 0
  4688  018EEE                     _clear_adc_scan:
  4689                           	opt callstack 24
  4690                           
  4691                           ;daq.c: 66:  R.done = 0;
  4692                           
  4693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4694                           ;incstack = 0
  4695  018EEE  0100               	movlb	0	; () banked
  4696  018EF0  6BC9               	clrf	(_R+39)& (0+255),b	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4700  018EF2  0012               	return		;funcret
  4701  018EF4                     __end_of_clear_adc_scan:
  4702                           	opt callstack 0
  4703                           
  4704 ;; *************** function _check_help *****************
  4705 ;; Defined at:
  4706 ;;		line 40 in file "mconfig.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  flipper         1  [STACK] const _Bool 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1  [STACK] void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4715 ;; Tracked objects:
  4716 ;;		On entry : 3F/1
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:   18
  4727 ;; This function calls:
  4728 ;;		_StartTimer
  4729 ;;		_TimerDone
  4730 ;;		_display_help
  4731 ;;		_display_info
  4732 ;;		_get_vterm_ptr
  4733 ;;		_help_button
  4734 ;;		_mode_lamp_bright
  4735 ;;		_mode_lamp_dim
  4736 ;;		_set_display_info
  4737 ;;		_set_temp_display_help
  4738 ;;		_set_vterm
  4739 ;;		_sprintf
  4740 ;;		_update_lcd
  4741 ;;		_vterm_dump
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;; This function uses a reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text19
  4748  015EB0                     __ptext19:
  4749                           	opt callstack 0
  4750  015EB0                     _check_help:
  4751                           	opt callstack 12
  4752                           
  4753                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4754                           
  4755                           ; BSR set to: 0
  4756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4757                           ;incstack = 0
  4758  015EB0  EC50  F0C3         	call	_help_button	;wreg free
  4759  015EB4  5036               	movf	btemp^0,w,c
  4760  015EB6  B4D8               	btfsc	status,2,c
  4761  015EB8  D0D0               	goto	l10310
  4762  015EBA  EC67  F0C7         	call	_display_info	;wreg free
  4763  015EBE  0436               	decf	btemp^0,w,c
  4764  015EC0  B4D8               	btfsc	status,2,c
  4765  015EC2  D0CB               	goto	l10310
  4766                           
  4767                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4768  015EC4  0EDC               	movlw	220
  4769  015EC6  6EE6               	movwf	postinc1,c
  4770  015EC8  0E05               	movlw	5
  4771  015ECA  6EE6               	movwf	postinc1,c
  4772  015ECC  0E0B               	movlw	11
  4773  015ECE  6EE6               	movwf	postinc1,c
  4774  015ED0  EC32  F0C3         	call	_StartTimer	;wreg free
  4775                           
  4776                           ;mconfig.c: 47:   if (V.debug)
  4777  015ED4  0101               	movlb	1	; () banked
  4778  015ED6  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4779                           
  4780                           ; BSR set to: 1
  4781                           ;mconfig.c: 48:    vterm_dump();
  4782  015ED8  EC7F  F0B6         	call	_vterm_dump	;wreg free
  4783                           
  4784                           ;mconfig.c: 50:   set_vterm(1);
  4785  015EDC  0E01               	movlw	1
  4786  015EDE  6EE6               	movwf	postinc1,c
  4787  015EE0  ECA2  F0C6         	call	_set_vterm	;wreg free
  4788                           
  4789                           ; BSR set to: 4
  4790                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4791  015EE4  EC67  F0C7         	call	_display_info	;wreg free
  4792  015EE8  5036               	movf	btemp^0,w,c
  4793  015EEA  6EE6               	movwf	postinc1,c
  4794  015EEC  EC20  F0C7         	call	_set_temp_display_help	;wreg free
  4795                           
  4796                           ; BSR set to: 1
  4797                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4798  015EF0  0E01               	movlw	1
  4799  015EF2  6EE6               	movwf	postinc1,c
  4800  015EF4  EC67  F0C6         	call	_set_display_info	;wreg free
  4801                           
  4802                           ;mconfig.c: 53:   if (flipper) {
  4803                           ;stkvar	_flipper @ sp[(0)+-1]
  4804  015EF8  0EFF               	movlw	-1
  4805  015EFA  50E3               	movf	plusw1,w,c
  4806  015EFC  B4D8               	btfsc	status,2,c
  4807  015EFE  D019               	goto	l10298
  4808                           
  4809                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4810  015F00  0EB3               	movlw	low STR_15
  4811  015F02  6EE6               	movwf	postinc1,c
  4812  015F04  0EFF               	movlw	high STR_15
  4813  015F06  6EE6               	movwf	postinc1,c
  4814  015F08  0E0C               	movlw	low STR_17
  4815  015F0A  6EE6               	movwf	postinc1,c
  4816  015F0C  0EFF               	movlw	high STR_17
  4817  015F0E  6EE6               	movwf	postinc1,c
  4818  015F10  0E01               	movlw	1
  4819  015F12  6EE6               	movwf	postinc1,c
  4820  015F14  0E00               	movlw	0
  4821  015F16  6EE6               	movwf	postinc1,c
  4822  015F18  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  4823  015F1C  0060  F0DB  FFE6   	movff	btemp,postinc1
  4824  015F22  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4825  015F28  0E06               	movlw	6
  4826  015F2A  6EE6               	movwf	postinc1,c
  4827  015F2C  EC45  F0B9         	call	_sprintf	;wreg free
  4828                           
  4829                           ;mconfig.c: 55:   } else {
  4830  015F30  D018               	goto	l1556
  4831  015F32                     l10298:
  4832                           
  4833                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4834  015F32  0EC9               	movlw	low STR_16
  4835  015F34  6EE6               	movwf	postinc1,c
  4836  015F36  0EFF               	movlw	high STR_16
  4837  015F38  6EE6               	movwf	postinc1,c
  4838  015F3A  0E0C               	movlw	low STR_17
  4839  015F3C  6EE6               	movwf	postinc1,c
  4840  015F3E  0EFF               	movlw	high STR_17
  4841  015F40  6EE6               	movwf	postinc1,c
  4842  015F42  0E01               	movlw	1
  4843  015F44  6EE6               	movwf	postinc1,c
  4844  015F46  0E00               	movlw	0
  4845  015F48  6EE6               	movwf	postinc1,c
  4846  015F4A  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  4847  015F4E  0060  F0DB  FFE6   	movff	btemp,postinc1
  4848  015F54  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4849  015F5A  0E06               	movlw	6
  4850  015F5C  6EE6               	movwf	postinc1,c
  4851  015F5E  EC45  F0B9         	call	_sprintf	;wreg free
  4852  015F62                     l1556:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4856  015F62  0101               	movlb	1	; () banked
  4857  015F64  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4858  015F66  32E8               	rrcf	wreg,f,c
  4859  015F68  32E8               	rrcf	wreg,f,c
  4860  015F6A  0B03               	andlw	3
  4861  015F6C  0D24               	mullw	36
  4862  015F6E  0E12               	movlw	18
  4863  015F70  26F3               	addwf	243,f,c
  4864  015F72  0E00               	movlw	0
  4865  015F74  22F4               	addwfc	244,f,c
  4866  015F76  0E51               	movlw	low _T
  4867  015F78  6E40               	movwf	(btemp+10)^0,c
  4868  015F7A  0EFE               	movlw	high _T
  4869  015F7C  6E41               	movwf	(btemp+11)^0,c
  4870  015F7E  50F3               	movf	243,w,c
  4871  015F80  2640               	addwf	(btemp+10)^0,f,c
  4872  015F82  50F4               	movf	244,w,c
  4873  015F84  2241               	addwfc	(btemp+11)^0,f,c
  4874  015F86  0060  F103  FFE6   	movff	btemp+10,postinc1
  4875  015F8C  0060  F107  FFE6   	movff	btemp+11,postinc1
  4876  015F92  0EBF               	movlw	low STR_19
  4877  015F94  6EE6               	movwf	postinc1,c
  4878  015F96  0EFF               	movlw	high STR_19
  4879  015F98  6EE6               	movwf	postinc1,c
  4880  015F9A  0E01               	movlw	1
  4881  015F9C  6EE6               	movwf	postinc1,c
  4882  015F9E  0E01               	movlw	1
  4883  015FA0  6EE6               	movwf	postinc1,c
  4884  015FA2  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  4885  015FA6  0060  F0DB  FFE6   	movff	btemp,postinc1
  4886  015FAC  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4887  015FB2  0E06               	movlw	6
  4888  015FB4  6EE6               	movwf	postinc1,c
  4889  015FB6  EC45  F0B9         	call	_sprintf	;wreg free
  4890                           
  4891                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4892  015FBA  0101               	movlb	1	; () banked
  4893  015FBC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4894  015FBE  32E8               	rrcf	wreg,f,c
  4895  015FC0  32E8               	rrcf	wreg,f,c
  4896  015FC2  0B03               	andlw	3
  4897  015FC4  0D24               	mullw	36
  4898  015FC6  0E51               	movlw	low _T
  4899  015FC8  6E40               	movwf	(btemp+10)^0,c
  4900  015FCA  0EFE               	movlw	high _T
  4901  015FCC  6E41               	movwf	(btemp+11)^0,c
  4902  015FCE  50F3               	movf	243,w,c
  4903  015FD0  2640               	addwf	(btemp+10)^0,f,c
  4904  015FD2  50F4               	movf	244,w,c
  4905  015FD4  2241               	addwfc	(btemp+11)^0,f,c
  4906  015FD6  0060  F103  FFE6   	movff	btemp+10,postinc1
  4907  015FDC  0060  F107  FFE6   	movff	btemp+11,postinc1
  4908  015FE2  0EBF               	movlw	low STR_19
  4909  015FE4  6EE6               	movwf	postinc1,c
  4910  015FE6  0EFF               	movlw	high STR_19
  4911  015FE8  6EE6               	movwf	postinc1,c
  4912  015FEA  0E01               	movlw	1
  4913  015FEC  6EE6               	movwf	postinc1,c
  4914  015FEE  0E02               	movlw	2
  4915  015FF0  6EE6               	movwf	postinc1,c
  4916  015FF2  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  4917  015FF6  0060  F0DB  FFE6   	movff	btemp,postinc1
  4918  015FFC  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  4919  016002  0E06               	movlw	6
  4920  016004  6EE6               	movwf	postinc1,c
  4921  016006  EC45  F0B9         	call	_sprintf	;wreg free
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;mconfig.c: 60:   V.help_id++;
  4925  01600A  EE20  F19B         	lfsr	2,_V+155	;volatile
  4926  01600E  38DF               	swapf	223,w,c
  4927  016010  6E41               	movwf	(btemp+11)^0,c
  4928  016012  3241               	rrcf	(btemp+11)^0,f,c
  4929  016014  3041               	rrcf	(btemp+11)^0,w,c
  4930  016016  0B03               	andlw	3
  4931  016018  6E41               	movwf	(btemp+11)^0,c
  4932  01601A  2A41               	incf	(btemp+11)^0,f,c
  4933  01601C  3A41               	swapf	(btemp+11)^0,f,c
  4934  01601E  3641               	rlcf	(btemp+11)^0,f,c
  4935  016020  3641               	rlcf	(btemp+11)^0,f,c
  4936  016022  50DF               	movf	223,w,c
  4937  016024  1841               	xorwf	(btemp+11)^0,w,c
  4938  016026  0B3F               	andlw	-193
  4939  016028  1841               	xorwf	(btemp+11)^0,w,c
  4940  01602A  6EDF               	movwf	223,c
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4944  01602C  0EB8               	movlw	184
  4945  01602E  6EE6               	movwf	postinc1,c
  4946  016030  0E0B               	movlw	11
  4947  016032  6EE6               	movwf	postinc1,c
  4948  016034  0E09               	movlw	9
  4949  016036  6EE6               	movwf	postinc1,c
  4950  016038  EC32  F0C3         	call	_StartTimer	;wreg free
  4951                           
  4952                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4953  01603C  0EB8               	movlw	184
  4954  01603E  6EE6               	movwf	postinc1,c
  4955  016040  0E0B               	movlw	11
  4956  016042  6EE6               	movwf	postinc1,c
  4957  016044  0E07               	movlw	7
  4958  016046  6EE6               	movwf	postinc1,c
  4959  016048  EC32  F0C3         	call	_StartTimer	;wreg free
  4960                           
  4961                           ;mconfig.c: 63:   mode_lamp_bright();
  4962  01604C  EC2F  F0C7         	call	_mode_lamp_bright	;wreg free
  4963                           
  4964                           ;mconfig.c: 64:   update_lcd(1);
  4965  016050  0E01               	movlw	1
  4966  016052  6EE6               	movwf	postinc1,c
  4967  016054  ECBE  F0B8         	call	_update_lcd	;wreg free
  4968                           
  4969                           ;mconfig.c: 65:  } else {
  4970  016058  D032               	goto	l1560
  4971  01605A                     l10310:
  4972                           
  4973                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4974  01605A  0E09               	movlw	9
  4975  01605C  6EE6               	movwf	postinc1,c
  4976  01605E  ECF3  F0C5         	call	_TimerDone	;wreg free
  4977  016062  5036               	movf	btemp^0,w,c
  4978  016064  B4D8               	btfsc	status,2,c
  4979  016066  D02B               	goto	l1560
  4980                           
  4981                           ;mconfig.c: 67:    set_vterm(0);
  4982  016068  0E00               	movlw	0
  4983  01606A  6EE6               	movwf	postinc1,c
  4984  01606C  ECA2  F0C6         	call	_set_vterm	;wreg free
  4985                           
  4986                           ; BSR set to: 4
  4987                           ;mconfig.c: 68:    V.help = 0;
  4988  016070  0101               	movlb	1	; () banked
  4989  016072  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4990                           
  4991                           ; BSR set to: 1
  4992                           ;mconfig.c: 69:    set_display_info(display_help());
  4993  016074  EC6B  F0C7         	call	_display_help	;wreg free
  4994  016078  5036               	movf	btemp^0,w,c
  4995  01607A  6EE6               	movwf	postinc1,c
  4996  01607C  EC67  F0C6         	call	_set_display_info	;wreg free
  4997                           
  4998                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4999  016080  0060  F657  FFE6   	movff	_V+149,postinc1
  5000  016086  0060  F65B  FFE6   	movff	_V+150,postinc1
  5001  01608C  ECCB  F0C6         	call	_mode_lamp_dim	;wreg free
  5002                           
  5003                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5004  016090  0E0B               	movlw	11
  5005  016092  6EE6               	movwf	postinc1,c
  5006  016094  ECF3  F0C5         	call	_TimerDone	;wreg free
  5007  016098  5036               	movf	btemp^0,w,c
  5008  01609A  B4D8               	btfsc	status,2,c
  5009  01609C  D010               	goto	l1560
  5010                           
  5011                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5012  01609E  0101               	movlb	1	; () banked
  5013  0160A0  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5014  0160A2  A4D8               	btfss	status,2,c
  5015  0160A4  D002               	goto	u10700
  5016  0160A6  0E01               	movlw	1
  5017  0160A8  D001               	goto	u10710
  5018  0160AA                     u10700:
  5019  0160AA  0E00               	movlw	0
  5020  0160AC                     u10710:
  5021  0160AC  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5022                           
  5023                           ; BSR set to: 1
  5024                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5025  0160AE  0EDC               	movlw	220
  5026  0160B0  6EE6               	movwf	postinc1,c
  5027  0160B2  0E05               	movlw	5
  5028  0160B4  6EE6               	movwf	postinc1,c
  5029  0160B6  0E0B               	movlw	11
  5030  0160B8  6EE6               	movwf	postinc1,c
  5031  0160BA  EC32  F0C3         	call	_StartTimer	;wreg free
  5032  0160BE                     l1560:
  5033                           
  5034                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5035  0160BE  52E5               	movf	postdec1,f,c
  5036  0160C0  0012               	return		;funcret
  5037  0160C2                     __end_of_check_help:
  5038                           	opt callstack 0
  5039                           
  5040 ;; *************** function _vterm_dump *****************
  5041 ;; Defined at:
  5042 ;;		line 118 in file "mconfig.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1  [STACK] void 
  5049 ;; Registers used:
  5050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5051 ;; Tracked objects:
  5052 ;;		On entry : 3F/1
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:   17
  5063 ;; This function calls:
  5064 ;;		_WaitMs
  5065 ;;		_eaDogM_WriteStringAtPos
  5066 ;;		_get_vterm_ptr
  5067 ;;		_sprintf
  5068 ;;		_wait_lcd_done
  5069 ;; This function is called by:
  5070 ;;		_check_help
  5071 ;; This function uses a reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text20
  5075  016CFE                     __ptext20:
  5076                           	opt callstack 0
  5077  016CFE                     _vterm_dump:
  5078                           	opt callstack 12
  5079                           
  5080                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5081                           
  5082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5083                           ;incstack = 0
  5084  016CFE  0E01               	movlw	1
  5085  016D00  6EE6               	movwf	postinc1,c
  5086  016D02  0E00               	movlw	0
  5087  016D04  6EE6               	movwf	postinc1,c
  5088  016D06  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5089  016D0A  0060  F0DB  FFE6   	movff	btemp,postinc1
  5090  016D10  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5091  016D16  0E00               	movlw	0
  5092  016D18  6EE6               	movwf	postinc1,c
  5093  016D1A  0E00               	movlw	0
  5094  016D1C  6EE6               	movwf	postinc1,c
  5095  016D1E  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5096  016D22  0060  F0DB  FFE6   	movff	btemp,postinc1
  5097  016D28  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5098  016D2E  0E88               	movlw	low STR_21
  5099  016D30  6EE6               	movwf	postinc1,c
  5100  016D32  0EFF               	movlw	high STR_21
  5101  016D34  6EE6               	movwf	postinc1,c
  5102  016D36  0E01               	movlw	low (_V+1)
  5103  016D38  6EE6               	movwf	postinc1,c
  5104  016D3A  0E01               	movlw	high (_V+1)
  5105  016D3C  6EE6               	movwf	postinc1,c
  5106  016D3E  0E08               	movlw	8
  5107  016D40  6EE6               	movwf	postinc1,c
  5108  016D42  EC45  F0B9         	call	_sprintf	;wreg free
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;mconfig.c: 121:  wait_lcd_done();
  5112  016D46  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5116  016D4A  0E01               	movlw	low (_V+1)
  5117  016D4C  6EE6               	movwf	postinc1,c
  5118  016D4E  0E01               	movlw	high (_V+1)
  5119  016D50  6EE6               	movwf	postinc1,c
  5120  016D52  0E00               	movlw	0
  5121  016D54  6EE6               	movwf	postinc1,c
  5122  016D56  0E00               	movlw	0
  5123  016D58  6EE6               	movwf	postinc1,c
  5124  016D5A  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5125                           
  5126                           ; BSR set to: 59
  5127                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5128  016D5E  0E01               	movlw	1
  5129  016D60  6EE6               	movwf	postinc1,c
  5130  016D62  0E01               	movlw	1
  5131  016D64  6EE6               	movwf	postinc1,c
  5132  016D66  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5133  016D6A  0060  F0DB  FFE6   	movff	btemp,postinc1
  5134  016D70  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5135  016D76  0E00               	movlw	0
  5136  016D78  6EE6               	movwf	postinc1,c
  5137  016D7A  0E01               	movlw	1
  5138  016D7C  6EE6               	movwf	postinc1,c
  5139  016D7E  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5140  016D82  0060  F0DB  FFE6   	movff	btemp,postinc1
  5141  016D88  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5142  016D8E  0E88               	movlw	low STR_21
  5143  016D90  6EE6               	movwf	postinc1,c
  5144  016D92  0EFF               	movlw	high STR_21
  5145  016D94  6EE6               	movwf	postinc1,c
  5146  016D96  0E01               	movlw	low (_V+1)
  5147  016D98  6EE6               	movwf	postinc1,c
  5148  016D9A  0E01               	movlw	high (_V+1)
  5149  016D9C  6EE6               	movwf	postinc1,c
  5150  016D9E  0E08               	movlw	8
  5151  016DA0  6EE6               	movwf	postinc1,c
  5152  016DA2  EC45  F0B9         	call	_sprintf	;wreg free
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;mconfig.c: 124:  wait_lcd_done();
  5156  016DA6  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5157                           
  5158                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5159  016DAA  0E01               	movlw	low (_V+1)
  5160  016DAC  6EE6               	movwf	postinc1,c
  5161  016DAE  0E01               	movlw	high (_V+1)
  5162  016DB0  6EE6               	movwf	postinc1,c
  5163  016DB2  0E00               	movlw	0
  5164  016DB4  6EE6               	movwf	postinc1,c
  5165  016DB6  0E01               	movlw	1
  5166  016DB8  6EE6               	movwf	postinc1,c
  5167  016DBA  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5168                           
  5169                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5170  016DBE  0E01               	movlw	1
  5171  016DC0  6EE6               	movwf	postinc1,c
  5172  016DC2  0E02               	movlw	2
  5173  016DC4  6EE6               	movwf	postinc1,c
  5174  016DC6  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5175  016DCA  0060  F0DB  FFE6   	movff	btemp,postinc1
  5176  016DD0  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5177  016DD6  0E00               	movlw	0
  5178  016DD8  6EE6               	movwf	postinc1,c
  5179  016DDA  0E02               	movlw	2
  5180  016DDC  6EE6               	movwf	postinc1,c
  5181  016DDE  EC1E  F0C4         	call	_get_vterm_ptr	;wreg free
  5182  016DE2  0060  F0DB  FFE6   	movff	btemp,postinc1
  5183  016DE8  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5184  016DEE  0E88               	movlw	low STR_21
  5185  016DF0  6EE6               	movwf	postinc1,c
  5186  016DF2  0EFF               	movlw	high STR_21
  5187  016DF4  6EE6               	movwf	postinc1,c
  5188  016DF6  0E01               	movlw	low (_V+1)
  5189  016DF8  6EE6               	movwf	postinc1,c
  5190  016DFA  0E01               	movlw	high (_V+1)
  5191  016DFC  6EE6               	movwf	postinc1,c
  5192  016DFE  0E08               	movlw	8
  5193  016E00  6EE6               	movwf	postinc1,c
  5194  016E02  EC45  F0B9         	call	_sprintf	;wreg free
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;mconfig.c: 127:  wait_lcd_done();
  5198  016E06  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5202  016E0A  0E01               	movlw	low (_V+1)
  5203  016E0C  6EE6               	movwf	postinc1,c
  5204  016E0E  0E01               	movlw	high (_V+1)
  5205  016E10  6EE6               	movwf	postinc1,c
  5206  016E12  0E00               	movlw	0
  5207  016E14  6EE6               	movwf	postinc1,c
  5208  016E16  0E02               	movlw	2
  5209  016E18  6EE6               	movwf	postinc1,c
  5210  016E1A  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5211                           
  5212                           ; BSR set to: 59
  5213                           ;mconfig.c: 129:  WaitMs(3000);
  5214  016E1E  0EB8               	movlw	184
  5215  016E20  6EE6               	movwf	postinc1,c
  5216  016E22  0E0B               	movlw	11
  5217  016E24  6EE6               	movwf	postinc1,c
  5218  016E26  EC6C  F0C3         	call	_WaitMs	;wreg free
  5219                           
  5220                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5221  016E2A  0012               	return		;funcret
  5222  016E2C                     __end_of_vterm_dump:
  5223                           	opt callstack 0
  5224                           
  5225 ;; *************** function _sprintf *****************
  5226 ;; Defined at:
  5227 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  s               2  [STACK] PTR unsigned char 
  5230 ;;		 -> D.lcd(216), D(218), V(187), 
  5231 ;;  fmt             2  [STACK] PTR const unsigned char 
  5232 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5233 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5234 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5235 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5236 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  5237 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5238 ;;		 -> STR_1(17), 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  f               6  [STACK] struct _IO_FILE
  5241 ;;  ap              2  [STACK] PTR void [1]
  5242 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5243 ;;  ret             2    0        int 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  2  [STACK] int 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/4
  5250 ;;		On exit  : 3F/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:   14
  5260 ;; This function calls:
  5261 ;;		_vfprintf
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;;		_check_help
  5265 ;;		_vterm_dump
  5266 ;; This function uses a reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text21
  5270  01728A                     __ptext21:
  5271                           	opt callstack 0
  5272  01728A                     _sprintf:
  5273                           	opt callstack 0
  5274                           
  5275                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5276  01728A  0E08               	movlw	8
  5277  01728C  26E1               	addwf	fsr1l,f,c
  5278  01728E  0E00               	movlw	0
  5279  017290  22E2               	addwfc	fsr1h,f,c
  5280                           
  5281                           ;incstack = 0
  5282  017292  0EFE               	movlw	254
  5283  017294  6E40               	movwf	(btemp+10)^0,c
  5284  017296  0EFF               	movlw	255
  5285  017298  6E41               	movwf	(btemp+11)^0,c
  5286                           
  5287                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5288  01729A  0EF5               	movlw	245
  5289  01729C  24E1               	addwf	fsr1l,w,c
  5290  01729E  6E3E               	movwf	(btemp+8)^0,c
  5291  0172A0  0EFF               	movlw	255
  5292  0172A2  20E2               	addwfc	fsr1h,w,c
  5293  0172A4  6E3F               	movwf	(btemp+9)^0,c
  5294  0172A6  5040               	movf	(btemp+10)^0,w,c
  5295  0172A8  263E               	addwf	(btemp+8)^0,f,c
  5296  0172AA  5041               	movf	(btemp+11)^0,w,c
  5297  0172AC  223F               	addwfc	(btemp+9)^0,f,c
  5298                           
  5299                           ;stkvar	_ap @ sp[(-8)+6]
  5300  0172AE  0EFF               	movlw	-1
  5301  0172B0  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  5302  0172B6  0EFE               	movlw	-2
  5303  0172B8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  5304                           
  5305                           ;stkvar	_s @ sp[(-8)+-3]
  5306  0172BE  0EF5               	movlw	-11
  5307  0172C0  006F FF8C  F040    	movff	plusw1,btemp+10
  5308  0172C6  0EF6               	movlw	-10
  5309  0172C8  006F FF8C  F041    	movff	plusw1,btemp+11
  5310                           
  5311                           ;stkvar	_f @ sp[(-8)+0]
  5312  0172CE  0EF9               	movlw	-7
  5313  0172D0  0060  F107  FFE3   	movff	btemp+11,plusw1
  5314  0172D6  0EF8               	movlw	-8
  5315  0172D8  0060  F103  FFE3   	movff	btemp+10,plusw1
  5316                           
  5317                           ;stkvar	_f @ sp[(-8)+0]
  5318  0172DE  0EFA               	movlw	250
  5319  0172E0  24E1               	addwf	fsr1l,w,c
  5320  0172E2  6ED9               	movwf	fsr2l,c
  5321  0172E4  0EFF               	movlw	255
  5322  0172E6  20E2               	addwfc	fsr1h,w,c
  5323  0172E8  6EDA               	movwf	fsr2h,c
  5324  0172EA  0E00               	movlw	0
  5325  0172EC  6EDE               	movwf	postinc2,c
  5326  0172EE  0E00               	movlw	0
  5327  0172F0  6EDD               	movwf	postdec2,c
  5328                           
  5329                           ;stkvar	_f @ sp[(-8)+0]
  5330  0172F2  0EFC               	movlw	252
  5331  0172F4  24E1               	addwf	fsr1l,w,c
  5332  0172F6  6ED9               	movwf	fsr2l,c
  5333  0172F8  0EFF               	movlw	255
  5334  0172FA  20E2               	addwfc	fsr1h,w,c
  5335  0172FC  6EDA               	movwf	fsr2h,c
  5336  0172FE  0E00               	movlw	0
  5337  017300  6EDE               	movwf	postinc2,c
  5338  017302  0E00               	movlw	0
  5339  017304  6EDD               	movwf	postdec2,c
  5340                           
  5341                           ;stkvar	_ap @ sp[(-8)+6]
  5342  017306  0EFE               	movlw	254
  5343  017308  24E1               	addwf	fsr1l,w,c
  5344  01730A  6E36               	movwf	btemp^0,c
  5345  01730C  0EFF               	movlw	255
  5346  01730E  20E2               	addwfc	fsr1h,w,c
  5347  017310  6E37               	movwf	(btemp+1)^0,c
  5348  017312  0060  F0DB  FFE6   	movff	btemp,postinc1
  5349  017318  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5350                           
  5351                           ;stkvar	_fmt @ sp[(-10)+-5]
  5352  01731E  0EF1               	movlw	-15
  5353  017320  006F FF8F FFE6     	movff	plusw1,postinc1
  5354  017326  006F FF8F FFE6     	movff	plusw1,postinc1
  5355                           
  5356                           ;stkvar	_f @ sp[(-12)+0]
  5357  01732C  0EF4               	movlw	244
  5358  01732E  24E1               	addwf	fsr1l,w,c
  5359  017330  6E36               	movwf	btemp^0,c
  5360  017332  0EFF               	movlw	255
  5361  017334  20E2               	addwfc	fsr1h,w,c
  5362  017336  6E37               	movwf	(btemp+1)^0,c
  5363  017338  0060  F0DB  FFE6   	movff	btemp,postinc1
  5364  01733E  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5365  017344  ECCC  F0BB         	call	_vfprintf	;wreg free
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;stkvar	_f @ sp[(-8)+0]
  5369  017348  0EFA               	movlw	250
  5370  01734A  24E1               	addwf	fsr1l,w,c
  5371  01734C  6ED9               	movwf	fsr2l,c
  5372  01734E  0EFF               	movlw	255
  5373  017350  20E2               	addwfc	fsr1h,w,c
  5374  017352  6EDA               	movwf	fsr2h,c
  5375  017354  006F FF78  F040    	movff	postinc2,btemp+10
  5376  01735A  006F FF74  F041    	movff	postdec2,btemp+11
  5377                           
  5378                           ;stkvar	_s @ sp[(-8)+-3]
  5379  017360  0EF5               	movlw	-11
  5380  017362  006F FF8C  F03E    	movff	plusw1,btemp+8
  5381  017368  0EF6               	movlw	-10
  5382  01736A  006F FF8C  F03F    	movff	plusw1,btemp+9
  5383  017370  5040               	movf	(btemp+10)^0,w,c
  5384  017372  243E               	addwf	(btemp+8)^0,w,c
  5385  017374  6ED9               	movwf	fsr2l,c
  5386  017376  5041               	movf	(btemp+11)^0,w,c
  5387  017378  203F               	addwfc	(btemp+9)^0,w,c
  5388  01737A  6EDA               	movwf	fsr2h,c
  5389  01737C  0E00               	movlw	0
  5390  01737E  6EDF               	movwf	indf2,c
  5391                           
  5392                           ; BSR set to: 0
  5393                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5394  017380  0EF8               	movlw	248
  5395  017382  26E1               	addwf	fsr1l,f,c
  5396  017384  0EFF               	movlw	255
  5397  017386  22E2               	addwfc	fsr1h,f,c
  5398  017388  52E5               	movf	postdec1,f,c
  5399  01738A  50E7               	movf	indf1,w,c
  5400  01738C  5EE1               	subwf	fsr1l,f,c
  5401  01738E  0E00               	movlw	0
  5402  017390  5AE2               	subwfb	fsr1h,f,c
  5403  017392  0012               	return		;funcret
  5404  017394                     __end_of_sprintf:
  5405                           	opt callstack 0
  5406                           
  5407 ;; *************** function _get_vterm_ptr *****************
  5408 ;; Defined at:
  5409 ;;		line 113 in file "mconfig.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  line            1  [STACK] const unsigned char 
  5412 ;;  vterm           1  [STACK] const unsigned char 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  2  [STACK] PTR unsigned char 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/4
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5428 ;;Total ram usage:        0 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    6
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_main
  5435 ;;		_check_help
  5436 ;;		_vterm_dump
  5437 ;; This function uses a reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text22
  5441  01883C                     __ptext22:
  5442                           	opt callstack 0
  5443  01883C                     _get_vterm_ptr:
  5444                           	opt callstack 24
  5445                           
  5446                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5447                           ;stkvar	_vterm @ sp[(0)+-2]
  5448                           
  5449                           ; BSR set to: 0
  5450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5451                           ;incstack = 0
  5452  01883C  0EFE               	movlw	-2
  5453  01883E  50E3               	movf	plusw1,w,c
  5454  018840  0B03               	andlw	3
  5455  018842  0D36               	mullw	54
  5456  018844  0E00               	movlw	low _D
  5457  018846  6E36               	movwf	btemp^0,c
  5458  018848  0E04               	movlw	high _D
  5459  01884A  6E37               	movwf	(btemp+1)^0,c
  5460  01884C  50F3               	movf	243,w,c
  5461  01884E  2636               	addwf	btemp^0,f,c
  5462  018850  50F4               	movf	244,w,c
  5463  018852  2237               	addwfc	(btemp+1)^0,f,c
  5464                           
  5465                           ;stkvar	_line @ sp[(0)+-1]
  5466  018854  0EFF               	movlw	-1
  5467  018856  50E3               	movf	plusw1,w,c
  5468  018858  0B03               	andlw	3
  5469  01885A  0D12               	mullw	18
  5470  01885C  50F3               	movf	243,w,c
  5471  01885E  2636               	addwf	btemp^0,f,c
  5472  018860  50F4               	movf	244,w,c
  5473  018862  2237               	addwfc	(btemp+1)^0,f,c
  5474                           
  5475                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5476  018864  52E5               	movf	postdec1,f,c
  5477  018866  52E5               	movf	postdec1,f,c
  5478  018868  0012               	return		;funcret
  5479  01886A                     __end_of_get_vterm_ptr:
  5480                           	opt callstack 0
  5481                           
  5482 ;; *************** function _WaitMs *****************
  5483 ;; Defined at:
  5484 ;;		line 32 in file "timers.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  numMilliseco    2  [STACK] const unsigned short 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1  [STACK] void 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/1
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5502 ;;Total ram usage:        0 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    7
  5505 ;; This function calls:
  5506 ;;		_StartTimer
  5507 ;;		_TimerDone
  5508 ;; This function is called by:
  5509 ;;		_main
  5510 ;;		_vterm_dump
  5511 ;; This function uses a reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text23
  5515  0186D8                     __ptext23:
  5516                           	opt callstack 0
  5517  0186D8                     _WaitMs:
  5518                           	opt callstack 21
  5519                           
  5520                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5521                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5522                           
  5523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5524                           ;incstack = 0
  5525  0186D8  0EFE               	movlw	-2
  5526  0186DA  006F FF8F FFE6     	movff	plusw1,postinc1
  5527  0186E0  006F FF8F FFE6     	movff	plusw1,postinc1
  5528  0186E6  0E00               	movlw	0
  5529  0186E8  6EE6               	movwf	postinc1,c
  5530  0186EA  EC32  F0C3         	call	_StartTimer	;wreg free
  5531                           
  5532                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5533  0186EE  D005               	goto	l8116
  5534  0186F0                     l1486:
  5535                           
  5536                           ;timers.c: 36:   __nop();
  5537  0186F0  F000               	nop	
  5538                           
  5539                           ;timers.c: 37:   __nop();
  5540  0186F2  F000               	nop	
  5541                           
  5542                           ;timers.c: 38:   __nop();
  5543  0186F4  F000               	nop	
  5544                           
  5545                           ;timers.c: 39:   __nop();
  5546  0186F6  F000               	nop	
  5547  0186F8  0004               	clrwdt		;# 
  5548  0186FA                     l8116:
  5549                           
  5550                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5551  0186FA  0E00               	movlw	0
  5552  0186FC  6EE6               	movwf	postinc1,c
  5553  0186FE  ECF3  F0C5         	call	_TimerDone	;wreg free
  5554  018702  5036               	movf	btemp^0,w,c
  5555  018704  B4D8               	btfsc	status,2,c
  5556  018706  D7F4               	goto	l1486
  5557                           
  5558                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5559  018708  52E5               	movf	postdec1,f,c
  5560  01870A  52E5               	movf	postdec1,f,c
  5561  01870C  0012               	return		;funcret
  5562  01870E                     __end_of_WaitMs:
  5563                           	opt callstack 0
  5564                           
  5565 ;; *************** function _update_lcd *****************
  5566 ;; Defined at:
  5567 ;;		line 82 in file "mconfig.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  vterm           1  [STACK] unsigned char 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1  [STACK] unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   17
  5588 ;; This function calls:
  5589 ;;		_eaDogM_WriteStringAtPos
  5590 ;;		_wait_lcd_done
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;;		_check_help
  5594 ;; This function uses a reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text24
  5598  01717C                     __ptext24:
  5599                           	opt callstack 0
  5600  01717C                     _update_lcd:
  5601                           	opt callstack 13
  5602                           
  5603                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5604                           ;stkvar	_vterm @ sp[(0)+-1]
  5605                           
  5606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5607                           ;incstack = 0
  5608  01717C  0EFF               	movlw	-1
  5609  01717E  006F FF8C  F036    	movff	plusw1,btemp
  5610  017184  0E03               	movlw	3
  5611  017186  1636               	andwf	btemp^0,f,c
  5612  017188  0EFF               	movlw	-1
  5613  01718A  0060  F0DB  FFE3   	movff	btemp,plusw1
  5614                           
  5615                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5616  017190  0104               	movlb	4	; () banked
  5617  017192  A1D8               	btfss	(_D+216)& (0+255),0,b
  5618  017194  D004               	goto	l10182
  5619                           
  5620                           ; BSR set to: 4
  5621                           ;stkvar	_vterm @ sp[(0)+-1]
  5622  017196  0EFF               	movlw	-1
  5623  017198  50E3               	movf	plusw1,w,c
  5624  01719A  B4D8               	btfsc	status,2,c
  5625  01719C  D074               	goto	l1564
  5626  01719E                     l10182:
  5627                           
  5628                           ; BSR set to: 4
  5629                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5630                           ;stkvar	_vterm @ sp[(0)+-1]
  5631  01719E  0EFF               	movlw	-1
  5632  0171A0  50E3               	movf	plusw1,w,c
  5633  0171A2  0D36               	mullw	54
  5634  0171A4  0E10               	movlw	low (_D+16)
  5635  0171A6  24F3               	addwf	243,w,c
  5636  0171A8  6ED9               	movwf	fsr2l,c
  5637  0171AA  0E04               	movlw	high (_D+16)
  5638  0171AC  20F4               	addwfc	prodh,w,c
  5639  0171AE  6EDA               	movwf	fsr2h,c
  5640  0171B0  0E00               	movlw	0
  5641  0171B2  6EDF               	movwf	indf2,c
  5642                           
  5643                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5644                           ;stkvar	_vterm @ sp[(0)+-1]
  5645  0171B4  0EFF               	movlw	-1
  5646  0171B6  50E3               	movf	plusw1,w,c
  5647  0171B8  0D36               	mullw	54
  5648  0171BA  0E22               	movlw	low (_D+34)
  5649  0171BC  24F3               	addwf	243,w,c
  5650  0171BE  6ED9               	movwf	fsr2l,c
  5651  0171C0  0E04               	movlw	high (_D+34)
  5652  0171C2  20F4               	addwfc	prodh,w,c
  5653  0171C4  6EDA               	movwf	fsr2h,c
  5654  0171C6  0E00               	movlw	0
  5655  0171C8  6EDF               	movwf	indf2,c
  5656                           
  5657                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5658                           ;stkvar	_vterm @ sp[(0)+-1]
  5659  0171CA  0EFF               	movlw	-1
  5660  0171CC  50E3               	movf	plusw1,w,c
  5661  0171CE  0D36               	mullw	54
  5662  0171D0  0E34               	movlw	low (_D+52)
  5663  0171D2  24F3               	addwf	243,w,c
  5664  0171D4  6ED9               	movwf	fsr2l,c
  5665  0171D6  0E04               	movlw	high (_D+52)
  5666  0171D8  20F4               	addwfc	prodh,w,c
  5667  0171DA  6EDA               	movwf	fsr2h,c
  5668  0171DC  0E00               	movlw	0
  5669  0171DE  6EDF               	movwf	indf2,c
  5670                           
  5671                           ; BSR set to: 4
  5672                           ;mconfig.c: 92:  wait_lcd_done();
  5673  0171E0  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5677                           ;stkvar	_vterm @ sp[(0)+-1]
  5678  0171E4  0EFF               	movlw	-1
  5679  0171E6  50E3               	movf	plusw1,w,c
  5680  0171E8  0D36               	mullw	54
  5681  0171EA  0E00               	movlw	low _D
  5682  0171EC  6E40               	movwf	(btemp+10)^0,c
  5683  0171EE  0E04               	movlw	high _D
  5684  0171F0  6E41               	movwf	(btemp+11)^0,c
  5685  0171F2  50F3               	movf	243,w,c
  5686  0171F4  2640               	addwf	(btemp+10)^0,f,c
  5687  0171F6  50F4               	movf	244,w,c
  5688  0171F8  2241               	addwfc	(btemp+11)^0,f,c
  5689  0171FA  0060  F103  FFE6   	movff	btemp+10,postinc1
  5690  017200  0060  F107  FFE6   	movff	btemp+11,postinc1
  5691  017206  0E00               	movlw	0
  5692  017208  6EE6               	movwf	postinc1,c
  5693  01720A  0E00               	movlw	0
  5694  01720C  6EE6               	movwf	postinc1,c
  5695  01720E  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5696                           
  5697                           ; BSR set to: 59
  5698                           ;mconfig.c: 94:  wait_lcd_done();
  5699  017212  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5703                           ;stkvar	_vterm @ sp[(0)+-1]
  5704  017216  0EFF               	movlw	-1
  5705  017218  50E3               	movf	plusw1,w,c
  5706  01721A  0D36               	mullw	54
  5707  01721C  0E00               	movlw	low _D
  5708  01721E  6E40               	movwf	(btemp+10)^0,c
  5709  017220  0E04               	movlw	high _D
  5710  017222  6E41               	movwf	(btemp+11)^0,c
  5711  017224  0E12               	movlw	18
  5712  017226  2640               	addwf	(btemp+10)^0,f,c
  5713  017228  0E00               	movlw	0
  5714  01722A  2241               	addwfc	(btemp+11)^0,f,c
  5715  01722C  50F3               	movf	243,w,c
  5716  01722E  2640               	addwf	(btemp+10)^0,f,c
  5717  017230  50F4               	movf	244,w,c
  5718  017232  2241               	addwfc	(btemp+11)^0,f,c
  5719  017234  0060  F103  FFE6   	movff	btemp+10,postinc1
  5720  01723A  0060  F107  FFE6   	movff	btemp+11,postinc1
  5721  017240  0E00               	movlw	0
  5722  017242  6EE6               	movwf	postinc1,c
  5723  017244  0E01               	movlw	1
  5724  017246  6EE6               	movwf	postinc1,c
  5725  017248  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5726                           
  5727                           ; BSR set to: 59
  5728                           ;mconfig.c: 96:  wait_lcd_done();
  5729  01724C  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5733                           ;stkvar	_vterm @ sp[(0)+-1]
  5734  017250  0EFF               	movlw	-1
  5735  017252  50E3               	movf	plusw1,w,c
  5736  017254  0D36               	mullw	54
  5737  017256  0E00               	movlw	low _D
  5738  017258  6E40               	movwf	(btemp+10)^0,c
  5739  01725A  0E04               	movlw	high _D
  5740  01725C  6E41               	movwf	(btemp+11)^0,c
  5741  01725E  0E24               	movlw	36
  5742  017260  2640               	addwf	(btemp+10)^0,f,c
  5743  017262  0E00               	movlw	0
  5744  017264  2241               	addwfc	(btemp+11)^0,f,c
  5745  017266  50F3               	movf	243,w,c
  5746  017268  2640               	addwf	(btemp+10)^0,f,c
  5747  01726A  50F4               	movf	244,w,c
  5748  01726C  2241               	addwfc	(btemp+11)^0,f,c
  5749  01726E  0060  F103  FFE6   	movff	btemp+10,postinc1
  5750  017274  0060  F107  FFE6   	movff	btemp+11,postinc1
  5751  01727A  0E00               	movlw	0
  5752  01727C  6EE6               	movwf	postinc1,c
  5753  01727E  0E02               	movlw	2
  5754  017280  6EE6               	movwf	postinc1,c
  5755  017282  EC87  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5756  017286                     l1564:
  5757                           
  5758                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5759  017286  52E5               	movf	postdec1,f,c
  5760  017288  0012               	return		;funcret
  5761  01728A                     __end_of_update_lcd:
  5762                           	opt callstack 0
  5763                           
  5764 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5765 ;; Defined at:
  5766 ;;		line 252 in file "eadog.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  r               1  [STACK] const unsigned char 
  5769 ;;  c               1  [STACK] const unsigned char 
  5770 ;;  strPtr          2  [STACK] PTR unsigned char 
  5771 ;;		 -> D.lcd(216), D(218), V(187), 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1  [STACK] void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5778 ;; Tracked objects:
  5779 ;;		On entry : 3F/0
  5780 ;;		On exit  : 3F/3B
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:   16
  5790 ;; This function calls:
  5791 ;;		_eaDogM_WriteString
  5792 ;;		_send_lcd_cmd_dma
  5793 ;; This function is called by:
  5794 ;;		_update_lcd
  5795 ;;		_vterm_dump
  5796 ;; This function uses a reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text25
  5800  01870E                     __ptext25:
  5801                           	opt callstack 0
  5802  01870E                     _eaDogM_WriteStringAtPos:
  5803                           	opt callstack 13
  5804                           
  5805                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5806                           ;stkvar	_c @ sp[(0)+-2]
  5807                           
  5808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5809                           ;incstack = 0
  5810  01870E  0EFE               	movlw	-2
  5811  018710  006F FF8C  F041    	movff	plusw1,btemp+11
  5812                           
  5813                           ;stkvar	_r @ sp[(0)+-1]
  5814  018716  0EFF               	movlw	-1
  5815  018718  50E3               	movf	plusw1,w,c
  5816  01871A  0D10               	mullw	16
  5817  01871C  50F3               	movf	243,w,c
  5818  01871E  2441               	addwf	(btemp+11)^0,w,c
  5819  018720  0F80               	addlw	128
  5820  018722  6EE6               	movwf	postinc1,c
  5821  018724  EC8A  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  5822                           
  5823                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5824                           ;stkvar	_strPtr @ sp[(0)+-4]
  5825  018728  0EFC               	movlw	-4
  5826  01872A  006F FF8F FFE6     	movff	plusw1,postinc1
  5827  018730  006F FF8F FFE6     	movff	plusw1,postinc1
  5828  018736  EC77  F0BC         	call	_eaDogM_WriteString	;wreg free
  5829                           
  5830                           ; BSR set to: 59
  5831                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5832  01873A  52E5               	movf	postdec1,f,c
  5833  01873C  52E5               	movf	postdec1,f,c
  5834  01873E  52E5               	movf	postdec1,f,c
  5835  018740  52E5               	movf	postdec1,f,c
  5836  018742  0012               	return		;funcret
  5837  018744                     __end_of_eaDogM_WriteStringAtPos:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _send_lcd_cmd_dma *****************
  5841 ;; Defined at:
  5842 ;;		line 205 in file "eadog.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  strPtr          1  [STACK] unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;		None
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1  [STACK] void 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/3D
  5853 ;;		On exit  : 3F/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5860 ;;Total ram usage:        0 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:   15
  5863 ;; This function calls:
  5864 ;;		_printf
  5865 ;;		_ringBufS_flush
  5866 ;;		_start_lcd
  5867 ;;		_wait_lcd_done
  5868 ;;		_wait_lcd_set
  5869 ;; This function is called by:
  5870 ;;		_eaDogM_WriteCommand
  5871 ;;		_eaDogM_WriteStringAtPos
  5872 ;; This function uses a reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text26
  5876  018314                     __ptext26:
  5877                           	opt callstack 0
  5878  018314                     _send_lcd_cmd_dma:
  5879                           	opt callstack 13
  5880                           
  5881                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5882                           
  5883                           ; BSR set to: 59
  5884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5885                           ;incstack = 0
  5886  018314  EC7A  F0C7         	call	_wait_lcd_set	;wreg free
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5890  018318  0E00               	movlw	0
  5891  01831A  6EE6               	movwf	postinc1,c
  5892  01831C  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5893  018322  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5894  018328  EC67  F0BD         	call	_ringBufS_flush	;wreg free
  5895  01832C  92BC               	bcf	188,1,c	;volatile
  5896  01832E  94BC               	bcf	188,2,c	;volatile
  5897                           
  5898                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5899  018330  013B               	movlb	59	; () banked
  5900  018332  9FFC               	bcf	252,7,b	;volatile
  5901                           
  5902                           ; BSR set to: 59
  5903                           ;eadog.c: 214:  DMA1SSZ = 1;
  5904  018334  0E00               	movlw	0
  5905  018336  6FF8               	movwf	248,b	;volatile
  5906  018338  0E01               	movlw	1
  5907  01833A  6FF7               	movwf	247,b	;volatile
  5908                           
  5909                           ; BSR set to: 59
  5910                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5911  01833C  8FFC               	bsf	252,7,b	;volatile
  5912                           
  5913                           ; BSR set to: 59
  5914                           ;eadog.c: 216:  printf("%c", strPtr);
  5915                           ;stkvar	_strPtr @ sp[(0)+-1]
  5916  01833E  0EFF               	movlw	-1
  5917  018340  50E3               	movf	plusw1,w,c
  5918  018342  6EE6               	movwf	postinc1,c
  5919  018344  0E00               	movlw	0
  5920  018346  6EE6               	movwf	postinc1,c
  5921  018348  0EF9               	movlw	low STR_13
  5922  01834A  6EE6               	movwf	postinc1,c
  5923  01834C  0EFF               	movlw	high STR_13
  5924  01834E  6EE6               	movwf	postinc1,c
  5925  018350  0E04               	movlw	4
  5926  018352  6EE6               	movwf	postinc1,c
  5927  018354  ECA2  F0C0         	call	_printf	;wreg free
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;eadog.c: 217:  start_lcd();
  5931  018358  EC7D  F0C7         	call	_start_lcd	;wreg free
  5932                           
  5933                           ; BSR set to: 59
  5934                           ;eadog.c: 218:  wait_lcd_done();
  5935  01835C  EC94  F0C6         	call	_wait_lcd_done	;wreg free
  5936                           
  5937                           ; BSR set to: 0
  5938  018360  82BC               	bsf	188,1,c	;volatile
  5939                           
  5940                           ; BSR set to: 0
  5941                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5942  018362  52E5               	movf	postdec1,f,c
  5943  018364  0012               	return		;funcret
  5944  018366                     __end_of_send_lcd_cmd_dma:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _wait_lcd_done *****************
  5948 ;; Defined at:
  5949 ;;		line 141 in file "eadog.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1  [STACK] void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 3F/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5967 ;;Total ram usage:        0 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    7
  5970 ;; This function calls:
  5971 ;;		_wdtdelay
  5972 ;; This function is called by:
  5973 ;;		_send_lcd_cmd_dma
  5974 ;;		_update_lcd
  5975 ;;		_vterm_dump
  5976 ;; This function uses a reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text27
  5980  018D28                     __ptext27:
  5981                           	opt callstack 0
  5982  018D28                     _wait_lcd_done:
  5983                           	opt callstack 22
  5984                           
  5985                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5986                           
  5987                           ; BSR set to: 0
  5988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5989                           ;incstack = 0
  5990  018D28  0100               	movlb	0	; () banked
  5991  018D2A  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5992  018D2C  D7FD               	goto	_wait_lcd_done
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;eadog.c: 144:  wdtdelay(50);
  5996  018D2E  0E32               	movlw	50
  5997  018D30  6EE6               	movwf	postinc1,c
  5998  018D32  0E00               	movlw	0
  5999  018D34  6EE6               	movwf	postinc1,c
  6000  018D36  0E00               	movlw	0
  6001  018D38  6EE6               	movwf	postinc1,c
  6002  018D3A  0E00               	movlw	0
  6003  018D3C  6EE6               	movwf	postinc1,c
  6004  018D3E  EC30  F0C1         	call	_wdtdelay	;wreg free
  6005                           
  6006                           ; BSR set to: 0
  6007                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6008  018D42  0012               	return		;funcret
  6009  018D44                     __end_of_wait_lcd_done:
  6010                           	opt callstack 0
  6011                           
  6012 ;; *************** function _wdtdelay *****************
  6013 ;; Defined at:
  6014 ;;		line 22 in file "eadog.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  delay           4  [STACK] const unsigned long 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1  [STACK] void 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 3F/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    6
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_init_display
  6039 ;;		_send_lcd_cmd
  6040 ;;		_send_lcd_cmd_long
  6041 ;;		_wait_lcd_done
  6042 ;; This function uses a reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text28
  6046  018260                     __ptext28:
  6047                           	opt callstack 0
  6048  018260                     _wdtdelay:
  6049                           	opt callstack 22
  6050                           
  6051                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6052                           
  6053                           ; BSR set to: 0
  6054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6055                           ;incstack = 0
  6056  018260  0100               	movlb	0	; () banked
  6057  018262  6B90               	clrf	wdtdelay@dcount& (0+255),b
  6058  018264  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6059  018266  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6060  018268  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6061  01826A                     l1331:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;eadog.c: 27:   __nop();
  6065  01826A  F000               	nop	
  6066  01826C  0004               	clrwdt		;# 
  6067                           
  6068                           ;eadog.c: 29:  };
  6069  01826E  0E01               	movlw	1
  6070  018270  0100               	movlb	0	; () banked
  6071  018272  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6072  018274  0E00               	movlw	0
  6073  018276  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6074  018278  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6075  01827A  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;stkvar	_delay @ sp[(0)+-4]
  6079  01827C  0EFC               	movlw	-4
  6080  01827E  006F FF8C  F036    	movff	plusw1,btemp
  6081  018284  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6082  018286  5C36               	subwf	btemp^0,w,c
  6083  018288  0EFD               	movlw	-3
  6084  01828A  006F FF8C  F036    	movff	plusw1,btemp
  6085  018290  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6086  018292  5836               	subwfb	btemp^0,w,c
  6087  018294  0EFE               	movlw	-2
  6088  018296  006F FF8C  F036    	movff	plusw1,btemp
  6089  01829C  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6090  01829E  5836               	subwfb	btemp^0,w,c
  6091  0182A0  0EFF               	movlw	-1
  6092  0182A2  006F FF8C  F036    	movff	plusw1,btemp
  6093  0182A8  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6094  0182AA  5836               	subwfb	btemp^0,w,c
  6095  0182AC  B0D8               	btfsc	status,0,c
  6096  0182AE  D7DD               	goto	l1331
  6097                           
  6098                           ; BSR set to: 0
  6099                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6100  0182B0  52E5               	movf	postdec1,f,c
  6101  0182B2  52E5               	movf	postdec1,f,c
  6102  0182B4  52E5               	movf	postdec1,f,c
  6103  0182B6  52E5               	movf	postdec1,f,c
  6104  0182B8  0012               	return		;funcret
  6105  0182BA                     __end_of_wdtdelay:
  6106                           	opt callstack 0
  6107                           
  6108 ;; *************** function _eaDogM_WriteString *****************
  6109 ;; Defined at:
  6110 ;;		line 184 in file "eadog.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  strPtr          2  [STACK] PTR unsigned char 
  6113 ;;		 -> D.lcd(216), D(218), V(187), 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1  [STACK] void 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6120 ;; Tracked objects:
  6121 ;;		On entry : 3F/0
  6122 ;;		On exit  : 3F/3B
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:   15
  6132 ;; This function calls:
  6133 ;;		_printf
  6134 ;;		_ringBufS_flush
  6135 ;;		_start_lcd
  6136 ;;		_strlen
  6137 ;;		_wait_lcd_set
  6138 ;; This function is called by:
  6139 ;;		_eaDogM_WriteStringAtPos
  6140 ;; This function uses a reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text29
  6144  0178EE                     __ptext29:
  6145                           	opt callstack 0
  6146  0178EE                     _eaDogM_WriteString:
  6147                           	opt callstack 13
  6148                           
  6149                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6150                           
  6151                           ; BSR set to: 0
  6152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6153                           ;incstack = 0
  6154  0178EE  EC7A  F0C7         	call	_wait_lcd_set	;wreg free
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6158  0178F2  0E00               	movlw	0
  6159  0178F4  6EE6               	movwf	postinc1,c
  6160  0178F6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6161  0178FC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6162  017902  EC67  F0BD         	call	_ringBufS_flush	;wreg free
  6163  017906  94BC               	bcf	188,2,c	;volatile
  6164                           
  6165                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6166                           ;stkvar	_strPtr @ sp[(0)+-2]
  6167  017908  0EFE               	movlw	-2
  6168  01790A  006F FF8F FFE6     	movff	plusw1,postinc1
  6169  017910  006F FF8F FFE6     	movff	plusw1,postinc1
  6170  017916  ECCA  F0BC         	call	_strlen	;wreg free
  6171  01791A  5037               	movf	(btemp+1)^0,w,c
  6172  01791C  E104               	bnz	u10610
  6173  01791E  0E41               	movlw	65
  6174  017920  5C36               	subwf	btemp^0,w,c
  6175  017922  A0D8               	btfss	status,0,c
  6176  017924  D010               	goto	l10148
  6177  017926                     u10610:
  6178                           
  6179                           ;stkvar	_strPtr @ sp[(0)+-2]
  6180  017926  0EFE               	movlw	-2
  6181  017928  006F FF8C  F040    	movff	plusw1,btemp+10
  6182  01792E  0EFF               	movlw	-1
  6183  017930  006F FF8C  F041    	movff	plusw1,btemp+11
  6184  017936  0E40               	movlw	64
  6185  017938  2440               	addwf	(btemp+10)^0,w,c
  6186  01793A  6ED9               	movwf	fsr2l,c
  6187  01793C  0E00               	movlw	0
  6188  01793E  2041               	addwfc	(btemp+11)^0,w,c
  6189  017940  6EDA               	movwf	fsr2h,c
  6190  017942  0E00               	movlw	0
  6191  017944  6EDF               	movwf	indf2,c
  6192  017946                     l10148:
  6193                           
  6194                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6195  017946  013B               	movlb	59	; () banked
  6196  017948  9FFC               	bcf	252,7,b	;volatile
  6197                           
  6198                           ; BSR set to: 59
  6199                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6200                           ;stkvar	_strPtr @ sp[(0)+-2]
  6201  01794A  0EFE               	movlw	-2
  6202  01794C  006F FF8F FFE6     	movff	plusw1,postinc1
  6203  017952  006F FF8F FFE6     	movff	plusw1,postinc1
  6204  017958  ECCA  F0BC         	call	_strlen	;wreg free
  6205  01795C  0060  F0DB  FBF7   	movff	btemp,15351	;volatile
  6206  017962  0060  F0DF  FBF8   	movff	btemp+1,15352	;volatile
  6207                           
  6208                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6209  017968  013B               	movlb	59	; () banked
  6210  01796A  8FFC               	bsf	252,7,b	;volatile
  6211                           
  6212                           ; BSR set to: 59
  6213                           ;eadog.c: 195:  printf("%s", strPtr);
  6214                           ;stkvar	_strPtr @ sp[(0)+-2]
  6215  01796C  0EFE               	movlw	-2
  6216  01796E  006F FF8F FFE6     	movff	plusw1,postinc1
  6217  017974  006F FF8F FFE6     	movff	plusw1,postinc1
  6218  01797A  0EFC               	movlw	low STR_12
  6219  01797C  6EE6               	movwf	postinc1,c
  6220  01797E  0EFF               	movlw	high STR_12
  6221  017980  6EE6               	movwf	postinc1,c
  6222  017982  0E04               	movlw	4
  6223  017984  6EE6               	movwf	postinc1,c
  6224  017986  ECA2  F0C0         	call	_printf	;wreg free
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;eadog.c: 196:  start_lcd();
  6228  01798A  EC7D  F0C7         	call	_start_lcd	;wreg free
  6229                           
  6230                           ; BSR set to: 59
  6231                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6232  01798E  52E5               	movf	postdec1,f,c
  6233  017990  52E5               	movf	postdec1,f,c
  6234  017992  0012               	return		;funcret
  6235  017994                     __end_of_eaDogM_WriteString:
  6236                           	opt callstack 0
  6237                           
  6238 ;; *************** function _wait_lcd_set *****************
  6239 ;; Defined at:
  6240 ;;		line 131 in file "eadog.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;		None
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1  [STACK] void 
  6247 ;; Registers used:
  6248 ;;		None
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/3D
  6251 ;;		On exit  : 3F/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6258 ;;Total ram usage:        0 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    6
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_eaDogM_WriteString
  6265 ;;		_send_lcd_cmd_dma
  6266 ;; This function uses a reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text30
  6270  018EF4                     __ptext30:
  6271                           	opt callstack 0
  6272  018EF4                     _wait_lcd_set:
  6273                           	opt callstack 21
  6274                           
  6275                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6276                           
  6277                           ; BSR set to: 59
  6278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6279                           ;incstack = 0
  6280  018EF4  0100               	movlb	0	; () banked
  6281  018EF6  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6282                           
  6283                           ; BSR set to: 0
  6284                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6285  018EF8  0012               	return		;funcret
  6286  018EFA                     __end_of_wait_lcd_set:
  6287                           	opt callstack 0
  6288                           
  6289 ;; *************** function _start_lcd *****************
  6290 ;; Defined at:
  6291 ;;		line 126 in file "eadog.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1  [STACK] void 
  6298 ;; Registers used:
  6299 ;;		None
  6300 ;; Tracked objects:
  6301 ;;		On entry : 3F/0
  6302 ;;		On exit  : 3F/3B
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    6
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_eaDogM_WriteString
  6316 ;;		_send_lcd_cmd_dma
  6317 ;; This function uses a reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text31
  6321  018EFA                     __ptext31:
  6322                           	opt callstack 0
  6323  018EFA                     _start_lcd:
  6324                           	opt callstack 21
  6325                           
  6326                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6327                           
  6328                           ; BSR set to: 0
  6329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6330                           ;incstack = 0
  6331  018EFA  013B               	movlb	59	; () banked
  6332  018EFC  8DFC               	bsf	252,6,b	;volatile
  6333                           
  6334                           ; BSR set to: 59
  6335                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6336  018EFE  0012               	return		;funcret
  6337  018F00                     __end_of_start_lcd:
  6338                           	opt callstack 0
  6339                           
  6340 ;; *************** function _ringBufS_flush *****************
  6341 ;; Defined at:
  6342 ;;		line 76 in file "ringbufs.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6345 ;;		 -> ring_buf1(67), 
  6346 ;;  clearBuffer     1  [STACK] const char 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1  [STACK] void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6353 ;; Tracked objects:
  6354 ;;		On entry : 3F/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    7
  6365 ;; This function calls:
  6366 ;;		_memset
  6367 ;; This function is called by:
  6368 ;;		_eaDogM_WriteString
  6369 ;;		_send_lcd_cmd_dma
  6370 ;; This function uses a reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text32
  6374  017ACE                     __ptext32:
  6375                           	opt callstack 0
  6376  017ACE                     _ringBufS_flush:
  6377                           	opt callstack 20
  6378                           
  6379                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6380                           ;stkvar	__this @ sp[(0)+-2]
  6381                           
  6382                           ; BSR set to: 59
  6383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6384                           ;incstack = 0
  6385  017ACE  0EFE               	movlw	-2
  6386  017AD0  006F FF8C  F040    	movff	plusw1,btemp+10
  6387  017AD6  0EFF               	movlw	-1
  6388  017AD8  006F FF8C  F041    	movff	plusw1,btemp+11
  6389  017ADE  0E42               	movlw	66
  6390  017AE0  2440               	addwf	(btemp+10)^0,w,c
  6391  017AE2  6ED9               	movwf	fsr2l,c
  6392  017AE4  0E00               	movlw	0
  6393  017AE6  2041               	addwfc	(btemp+11)^0,w,c
  6394  017AE8  6EDA               	movwf	fsr2h,c
  6395  017AEA  0E00               	movlw	0
  6396  017AEC  6EDF               	movwf	indf2,c
  6397                           
  6398                           ;ringbufs.c: 79:  _this->head = 0;
  6399                           ;stkvar	__this @ sp[(0)+-2]
  6400  017AEE  0EFE               	movlw	-2
  6401  017AF0  006F FF8C  F040    	movff	plusw1,btemp+10
  6402  017AF6  0EFF               	movlw	-1
  6403  017AF8  006F FF8C  F041    	movff	plusw1,btemp+11
  6404  017AFE  0E40               	movlw	64
  6405  017B00  2440               	addwf	(btemp+10)^0,w,c
  6406  017B02  6ED9               	movwf	fsr2l,c
  6407  017B04  0E00               	movlw	0
  6408  017B06  2041               	addwfc	(btemp+11)^0,w,c
  6409  017B08  6EDA               	movwf	fsr2h,c
  6410  017B0A  0E00               	movlw	0
  6411  017B0C  6EDF               	movwf	indf2,c
  6412                           
  6413                           ;ringbufs.c: 80:  _this->tail = 0;
  6414                           ;stkvar	__this @ sp[(0)+-2]
  6415  017B0E  0EFE               	movlw	-2
  6416  017B10  006F FF8C  F040    	movff	plusw1,btemp+10
  6417  017B16  0EFF               	movlw	-1
  6418  017B18  006F FF8C  F041    	movff	plusw1,btemp+11
  6419  017B1E  0E41               	movlw	65
  6420  017B20  2440               	addwf	(btemp+10)^0,w,c
  6421  017B22  6ED9               	movwf	fsr2l,c
  6422  017B24  0E00               	movlw	0
  6423  017B26  2041               	addwfc	(btemp+11)^0,w,c
  6424  017B28  6EDA               	movwf	fsr2h,c
  6425  017B2A  0E00               	movlw	0
  6426  017B2C  6EDF               	movwf	indf2,c
  6427                           
  6428                           ;ringbufs.c: 81:  if (clearBuffer) {
  6429                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6430  017B2E  0EFD               	movlw	-3
  6431  017B30  50E3               	movf	plusw1,w,c
  6432  017B32  B4D8               	btfsc	status,2,c
  6433  017B34  D011               	goto	l1471
  6434                           
  6435                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6436  017B36  0E40               	movlw	64
  6437  017B38  6EE6               	movwf	postinc1,c
  6438  017B3A  0E00               	movlw	0
  6439  017B3C  6EE6               	movwf	postinc1,c
  6440  017B3E  0E00               	movlw	0
  6441  017B40  6EE6               	movwf	postinc1,c
  6442  017B42  0E00               	movlw	0
  6443  017B44  6EE6               	movwf	postinc1,c
  6444                           
  6445                           ;stkvar	__this @ sp[(-4)+-2]
  6446  017B46  0EFA               	movlw	-6
  6447  017B48  006F FF8F FFE6     	movff	plusw1,postinc1
  6448  017B4E  006F FF8F FFE6     	movff	plusw1,postinc1
  6449  017B54  ECD9  F0A7         	call	_memset	;wreg free
  6450  017B58                     l1471:
  6451                           
  6452                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6453  017B58  52E5               	movf	postdec1,f,c
  6454  017B5A  52E5               	movf	postdec1,f,c
  6455  017B5C  52E5               	movf	postdec1,f,c
  6456  017B5E  0012               	return		;funcret
  6457  017B60                     __end_of_ringBufS_flush:
  6458                           	opt callstack 0
  6459                           
  6460 ;; *************** function _memset *****************
  6461 ;; Defined at:
  6462 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  dest            2  [STACK] PTR void 
  6465 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6466 ;;  c               2  [STACK] int 
  6467 ;;  n               2  [STACK] unsigned int 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  s               2  [STACK] PTR unsigned char 
  6470 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6471 ;;  k               2  [STACK] unsigned int 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  2  [STACK] PTR void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;Total ram usage:        0 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    6
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_ringBufS_init
  6492 ;;		_ringBufS_flush
  6493 ;; This function uses a reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text33
  6497  014FB2                     __ptext33:
  6498                           	opt callstack 0
  6499  014FB2                     _memset:
  6500                           	opt callstack 0
  6501                           
  6502                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6503  014FB2  52E6               	movf	postinc1,f,c
  6504  014FB4  52E6               	movf	postinc1,f,c
  6505  014FB6  52E6               	movf	postinc1,f,c
  6506  014FB8  52E6               	movf	postinc1,f,c
  6507                           
  6508                           ;stkvar	_dest @ sp[(-4)+-2]
  6509                           
  6510                           ;incstack = 0
  6511  014FBA  0EFA               	movlw	-6
  6512  014FBC  006F FF8C  F040    	movff	plusw1,btemp+10
  6513  014FC2  0EFB               	movlw	-5
  6514  014FC4  006F FF8C  F041    	movff	plusw1,btemp+11
  6515                           
  6516                           ;stkvar	_s @ sp[(-4)+0]
  6517  014FCA  0EFD               	movlw	-3
  6518  014FCC  0060  F107  FFE3   	movff	btemp+11,plusw1
  6519  014FD2  0EFC               	movlw	-4
  6520  014FD4  0060  F103  FFE3   	movff	btemp+10,plusw1
  6521                           
  6522                           ;stkvar	_n @ sp[(-4)+-6]
  6523  014FDA  0EF6               	movlw	-10
  6524  014FDC  006F FF8C  F036    	movff	plusw1,btemp
  6525  014FE2  0EF7               	movlw	-9
  6526  014FE4  50E3               	movf	plusw1,w,c
  6527  014FE6  1036               	iorwf	btemp^0,w,c
  6528  014FE8  B4D8               	btfsc	status,2,c
  6529  014FEA  D154               	goto	u10580
  6530                           
  6531                           ;stkvar	_c @ sp[(-4)+-4]
  6532                           ;stkvar	_s @ sp[(-4)+0]
  6533  014FEC  0EFC               	movlw	-4
  6534  014FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6535  014FF4  0EFD               	movlw	-3
  6536  014FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6537  014FFC  0EF8               	movlw	-8
  6538  014FFE  006F FF8F FFDF     	movff	plusw1,indf2
  6539                           
  6540                           ;stkvar	_c @ sp[(-4)+-4]
  6541                           ;stkvar	_n @ sp[(-4)+-6]
  6542                           ;stkvar	_s @ sp[(-4)+0]
  6543  015004  0EFC               	movlw	-4
  6544  015006  006F FF8C  F040    	movff	plusw1,btemp+10
  6545  01500C  0EFD               	movlw	-3
  6546  01500E  006F FF8C  F041    	movff	plusw1,btemp+11
  6547  015014  0EF6               	movlw	-10
  6548  015016  50E3               	movf	plusw1,w,c
  6549  015018  2640               	addwf	(btemp+10)^0,f,c
  6550  01501A  0EF7               	movlw	-9
  6551  01501C  50E3               	movf	plusw1,w,c
  6552  01501E  2241               	addwfc	(btemp+11)^0,f,c
  6553  015020  0EFF               	movlw	255
  6554  015022  2440               	addwf	(btemp+10)^0,w,c
  6555  015024  6ED9               	movwf	fsr2l,c
  6556  015026  0EFF               	movlw	255
  6557  015028  2041               	addwfc	(btemp+11)^0,w,c
  6558  01502A  6EDA               	movwf	fsr2h,c
  6559  01502C  0EF8               	movlw	-8
  6560  01502E  006F FF8F FFDF     	movff	plusw1,indf2
  6561                           
  6562                           ;stkvar	_n @ sp[(-4)+-6]
  6563  015034  0EF7               	movlw	-9
  6564  015036  50E3               	movf	plusw1,w,c
  6565  015038  E108               	bnz	l10064
  6566  01503A  0EF6               	movlw	-10
  6567  01503C  006F FF8C  F036    	movff	plusw1,btemp
  6568  015042  0E03               	movlw	3
  6569  015044  5E36               	subwf	btemp^0,f,c
  6570  015046  A0D8               	btfss	status,0,c
  6571  015048  D125               	goto	u10580
  6572  01504A                     l10064:
  6573                           
  6574                           ;stkvar	_c @ sp[(-4)+-4]
  6575                           ;stkvar	_s @ sp[(-4)+0]
  6576  01504A  0EFC               	movlw	-4
  6577  01504C  006F FF8C  F040    	movff	plusw1,btemp+10
  6578  015052  0EFD               	movlw	-3
  6579  015054  006F FF8C  F041    	movff	plusw1,btemp+11
  6580  01505A  0E01               	movlw	1
  6581  01505C  2440               	addwf	(btemp+10)^0,w,c
  6582  01505E  6ED9               	movwf	fsr2l,c
  6583  015060  0E00               	movlw	0
  6584  015062  2041               	addwfc	(btemp+11)^0,w,c
  6585  015064  6EDA               	movwf	fsr2h,c
  6586  015066  0EF8               	movlw	-8
  6587  015068  006F FF8F FFDF     	movff	plusw1,indf2
  6588                           
  6589                           ;stkvar	_c @ sp[(-4)+-4]
  6590                           ;stkvar	_s @ sp[(-4)+0]
  6591  01506E  0EFC               	movlw	-4
  6592  015070  006F FF8C  F040    	movff	plusw1,btemp+10
  6593  015076  0EFD               	movlw	-3
  6594  015078  006F FF8C  F041    	movff	plusw1,btemp+11
  6595  01507E  0E02               	movlw	2
  6596  015080  2440               	addwf	(btemp+10)^0,w,c
  6597  015082  6ED9               	movwf	fsr2l,c
  6598  015084  0E00               	movlw	0
  6599  015086  2041               	addwfc	(btemp+11)^0,w,c
  6600  015088  6EDA               	movwf	fsr2h,c
  6601  01508A  0EF8               	movlw	-8
  6602  01508C  006F FF8F FFDF     	movff	plusw1,indf2
  6603                           
  6604                           ;stkvar	_c @ sp[(-4)+-4]
  6605                           ;stkvar	_n @ sp[(-4)+-6]
  6606                           ;stkvar	_s @ sp[(-4)+0]
  6607  015092  0EFC               	movlw	-4
  6608  015094  006F FF8C  F040    	movff	plusw1,btemp+10
  6609  01509A  0EFD               	movlw	-3
  6610  01509C  006F FF8C  F041    	movff	plusw1,btemp+11
  6611  0150A2  0EF6               	movlw	-10
  6612  0150A4  50E3               	movf	plusw1,w,c
  6613  0150A6  2640               	addwf	(btemp+10)^0,f,c
  6614  0150A8  0EF7               	movlw	-9
  6615  0150AA  50E3               	movf	plusw1,w,c
  6616  0150AC  2241               	addwfc	(btemp+11)^0,f,c
  6617  0150AE  0EFE               	movlw	254
  6618  0150B0  2440               	addwf	(btemp+10)^0,w,c
  6619  0150B2  6ED9               	movwf	fsr2l,c
  6620  0150B4  0EFF               	movlw	255
  6621  0150B6  2041               	addwfc	(btemp+11)^0,w,c
  6622  0150B8  6EDA               	movwf	fsr2h,c
  6623  0150BA  0EF8               	movlw	-8
  6624  0150BC  006F FF8F FFDF     	movff	plusw1,indf2
  6625                           
  6626                           ;stkvar	_c @ sp[(-4)+-4]
  6627                           ;stkvar	_n @ sp[(-4)+-6]
  6628                           ;stkvar	_s @ sp[(-4)+0]
  6629  0150C2  0EFC               	movlw	-4
  6630  0150C4  006F FF8C  F040    	movff	plusw1,btemp+10
  6631  0150CA  0EFD               	movlw	-3
  6632  0150CC  006F FF8C  F041    	movff	plusw1,btemp+11
  6633  0150D2  0EF6               	movlw	-10
  6634  0150D4  50E3               	movf	plusw1,w,c
  6635  0150D6  2640               	addwf	(btemp+10)^0,f,c
  6636  0150D8  0EF7               	movlw	-9
  6637  0150DA  50E3               	movf	plusw1,w,c
  6638  0150DC  2241               	addwfc	(btemp+11)^0,f,c
  6639  0150DE  0EFD               	movlw	253
  6640  0150E0  2440               	addwf	(btemp+10)^0,w,c
  6641  0150E2  6ED9               	movwf	fsr2l,c
  6642  0150E4  0EFF               	movlw	255
  6643  0150E6  2041               	addwfc	(btemp+11)^0,w,c
  6644  0150E8  6EDA               	movwf	fsr2h,c
  6645  0150EA  0EF8               	movlw	-8
  6646  0150EC  006F FF8F FFDF     	movff	plusw1,indf2
  6647                           
  6648                           ;stkvar	_n @ sp[(-4)+-6]
  6649  0150F2  0EF7               	movlw	-9
  6650  0150F4  50E3               	movf	plusw1,w,c
  6651  0150F6  E108               	bnz	l10070
  6652  0150F8  0EF6               	movlw	-10
  6653  0150FA  006F FF8C  F036    	movff	plusw1,btemp
  6654  015100  0E07               	movlw	7
  6655  015102  5E36               	subwf	btemp^0,f,c
  6656  015104  A0D8               	btfss	status,0,c
  6657  015106  D0C6               	goto	u10580
  6658  015108                     l10070:
  6659                           
  6660                           ;stkvar	_c @ sp[(-4)+-4]
  6661                           ;stkvar	_s @ sp[(-4)+0]
  6662  015108  0EFC               	movlw	-4
  6663  01510A  006F FF8C  F040    	movff	plusw1,btemp+10
  6664  015110  0EFD               	movlw	-3
  6665  015112  006F FF8C  F041    	movff	plusw1,btemp+11
  6666  015118  0E03               	movlw	3
  6667  01511A  2440               	addwf	(btemp+10)^0,w,c
  6668  01511C  6ED9               	movwf	fsr2l,c
  6669  01511E  0E00               	movlw	0
  6670  015120  2041               	addwfc	(btemp+11)^0,w,c
  6671  015122  6EDA               	movwf	fsr2h,c
  6672  015124  0EF8               	movlw	-8
  6673  015126  006F FF8F FFDF     	movff	plusw1,indf2
  6674                           
  6675                           ;stkvar	_c @ sp[(-4)+-4]
  6676                           ;stkvar	_n @ sp[(-4)+-6]
  6677                           ;stkvar	_s @ sp[(-4)+0]
  6678  01512C  0EFC               	movlw	-4
  6679  01512E  006F FF8C  F040    	movff	plusw1,btemp+10
  6680  015134  0EFD               	movlw	-3
  6681  015136  006F FF8C  F041    	movff	plusw1,btemp+11
  6682  01513C  0EF6               	movlw	-10
  6683  01513E  50E3               	movf	plusw1,w,c
  6684  015140  2640               	addwf	(btemp+10)^0,f,c
  6685  015142  0EF7               	movlw	-9
  6686  015144  50E3               	movf	plusw1,w,c
  6687  015146  2241               	addwfc	(btemp+11)^0,f,c
  6688  015148  0EFC               	movlw	252
  6689  01514A  2440               	addwf	(btemp+10)^0,w,c
  6690  01514C  6ED9               	movwf	fsr2l,c
  6691  01514E  0EFF               	movlw	255
  6692  015150  2041               	addwfc	(btemp+11)^0,w,c
  6693  015152  6EDA               	movwf	fsr2h,c
  6694  015154  0EF8               	movlw	-8
  6695  015156  006F FF8F FFDF     	movff	plusw1,indf2
  6696                           
  6697                           ;stkvar	_n @ sp[(-4)+-6]
  6698  01515C  0EF7               	movlw	-9
  6699  01515E  50E3               	movf	plusw1,w,c
  6700  015160  E108               	bnz	l10076
  6701  015162  0EF6               	movlw	-10
  6702  015164  006F FF8C  F036    	movff	plusw1,btemp
  6703  01516A  0E09               	movlw	9
  6704  01516C  5E36               	subwf	btemp^0,f,c
  6705  01516E  A0D8               	btfss	status,0,c
  6706  015170  D091               	goto	u10580
  6707  015172                     l10076:
  6708                           
  6709                           ;stkvar	_s @ sp[(-4)+0]
  6710  015172  0EFC               	movlw	-4
  6711  015174  006F FF8C  F040    	movff	plusw1,btemp+10
  6712  01517A  1E40               	comf	(btemp+10)^0,f,c
  6713  01517C  0EFD               	movlw	-3
  6714  01517E  006F FF8C  F041    	movff	plusw1,btemp+11
  6715  015184  1E41               	comf	(btemp+11)^0,f,c
  6716  015186  2A40               	incf	(btemp+10)^0,f,c
  6717  015188  B4D8               	btfsc	status,2,c
  6718  01518A  2A41               	incf	(btemp+11)^0,f,c
  6719  01518C  0E03               	movlw	3
  6720  01518E  1640               	andwf	(btemp+10)^0,f,c
  6721  015190  0E00               	movlw	0
  6722  015192  1641               	andwf	(btemp+11)^0,f,c
  6723                           
  6724                           ;stkvar	_k @ sp[(-4)+2]
  6725  015194  0EFE               	movlw	-2
  6726  015196  0060  F103  FFE3   	movff	btemp+10,plusw1
  6727  01519C  0EFF               	movlw	-1
  6728  01519E  0060  F107  FFE3   	movff	btemp+11,plusw1
  6729                           
  6730                           ;stkvar	_k @ sp[(-4)+2]
  6731                           ;stkvar	_s @ sp[(-4)+0]
  6732  0151A4  0EFC               	movlw	-4
  6733  0151A6  50E3               	movf	plusw1,w,c
  6734  0151A8  6E36               	movwf	btemp^0,c
  6735  0151AA  0EFE               	movlw	-2
  6736  0151AC  50E3               	movf	plusw1,w,c
  6737  0151AE  2636               	addwf	btemp^0,f,c
  6738  0151B0  0EFC               	movlw	-4
  6739  0151B2  0060  F0DB  FFE3   	movff	btemp,plusw1
  6740  0151B8  0EFD               	movlw	-3
  6741  0151BA  50E3               	movf	plusw1,w,c
  6742  0151BC  6E36               	movwf	btemp^0,c
  6743  0151BE  0EFF               	movlw	-1
  6744  0151C0  50E3               	movf	plusw1,w,c
  6745  0151C2  2236               	addwfc	btemp^0,f,c
  6746  0151C4  0EFD               	movlw	-3
  6747  0151C6  0060  F0DB  FFE3   	movff	btemp,plusw1
  6748                           
  6749                           ;stkvar	_k @ sp[(-4)+2]
  6750                           ;stkvar	_n @ sp[(-4)+-6]
  6751  0151CC  0EF6               	movlw	-10
  6752  0151CE  50E3               	movf	plusw1,w,c
  6753  0151D0  6E36               	movwf	btemp^0,c
  6754  0151D2  0EFE               	movlw	-2
  6755  0151D4  50E3               	movf	plusw1,w,c
  6756  0151D6  5E36               	subwf	btemp^0,f,c
  6757  0151D8  0EF6               	movlw	-10
  6758  0151DA  0060  F0DB  FFE3   	movff	btemp,plusw1
  6759  0151E0  0EF7               	movlw	-9
  6760  0151E2  50E3               	movf	plusw1,w,c
  6761  0151E4  6E36               	movwf	btemp^0,c
  6762  0151E6  0EFF               	movlw	-1
  6763  0151E8  50E3               	movf	plusw1,w,c
  6764  0151EA  5A36               	subwfb	btemp^0,f,c
  6765  0151EC  0EF7               	movlw	-9
  6766  0151EE  0060  F0DB  FFE3   	movff	btemp,plusw1
  6767  0151F4  0EFC               	movlw	252
  6768  0151F6  6E40               	movwf	(btemp+10)^0,c
  6769  0151F8  0EFF               	movlw	255
  6770  0151FA  6E41               	movwf	(btemp+11)^0,c
  6771                           
  6772                           ;stkvar	_n @ sp[(-4)+-6]
  6773  0151FC  0EF6               	movlw	-10
  6774  0151FE  006F FF8C  F036    	movff	plusw1,btemp
  6775  015204  5040               	movf	(btemp+10)^0,w,c
  6776  015206  1636               	andwf	btemp^0,f,c
  6777  015208  0EF6               	movlw	-10
  6778  01520A  0060  F0DB  FFE3   	movff	btemp,plusw1
  6779  015210  0EF7               	movlw	-9
  6780  015212  006F FF8C  F036    	movff	plusw1,btemp
  6781  015218  5041               	movf	(btemp+11)^0,w,c
  6782  01521A  1636               	andwf	btemp^0,f,c
  6783  01521C  0EF7               	movlw	-9
  6784  01521E  D02E               	goto	L4
  6785  015220                     l10084:
  6786                           
  6787                           ;stkvar	_c @ sp[(-4)+-4]
  6788                           ;stkvar	_s @ sp[(-4)+0]
  6789  015220  0EFC               	movlw	-4
  6790  015222  006F FF8F FFD9     	movff	plusw1,fsr2l
  6791  015228  0EFD               	movlw	-3
  6792  01522A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6793  015230  0EF8               	movlw	-8
  6794  015232  006F FF8F FFDF     	movff	plusw1,indf2
  6795                           
  6796                           ;stkvar	_n @ sp[(-4)+-6]
  6797  015238  0EF6               	movlw	-10
  6798  01523A  006F FF8C  F036    	movff	plusw1,btemp
  6799  015240  0E01               	movlw	1
  6800  015242  5E36               	subwf	btemp^0,f,c
  6801  015244  0EF6               	movlw	-10
  6802  015246  0060  F0DB  FFE3   	movff	btemp,plusw1
  6803  01524C  0EF7               	movlw	-9
  6804  01524E  006F FF8C  F036    	movff	plusw1,btemp
  6805  015254  0E00               	movlw	0
  6806  015256  5A36               	subwfb	btemp^0,f,c
  6807  015258  0EF7               	movlw	-9
  6808  01525A  0060  F0DB  FFE3   	movff	btemp,plusw1
  6809                           
  6810                           ;stkvar	_s @ sp[(-4)+0]
  6811  015260  0EFC               	movlw	-4
  6812  015262  50E3               	movf	plusw1,w,c
  6813  015264  0F01               	addlw	1
  6814  015266  6E36               	movwf	btemp^0,c
  6815  015268  0EFC               	movlw	-4
  6816  01526A  0060  F0DB  FFE3   	movff	btemp,plusw1
  6817  015270  6A36               	clrf	btemp^0,c
  6818  015272  0EFD               	movlw	-3
  6819  015274  50E3               	movf	plusw1,w,c
  6820  015276  2036               	addwfc	btemp^0,w,c
  6821  015278  6E36               	movwf	btemp^0,c
  6822  01527A  0EFD               	movlw	-3
  6823  01527C                     L4:
  6824  01527C  0060  F0DB  FFE3   	movff	btemp,plusw1
  6825                           
  6826                           ;stkvar	_n @ sp[(-4)+-6]
  6827  015282  0EF6               	movlw	-10
  6828  015284  006F FF8C  F036    	movff	plusw1,btemp
  6829  01528A  0EF7               	movlw	-9
  6830  01528C  50E3               	movf	plusw1,w,c
  6831  01528E  1036               	iorwf	btemp^0,w,c
  6832  015290  A4D8               	btfss	status,2,c
  6833  015292  D7C6               	goto	l10084
  6834  015294                     u10580:
  6835                           
  6836                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6837  015294  0EF6               	movlw	246
  6838  015296  26E1               	addwf	fsr1l,f,c
  6839  015298  0EFF               	movlw	255
  6840  01529A  22E2               	addwfc	fsr1h,f,c
  6841  01529C  0012               	return		;funcret
  6842  01529E                     __end_of_memset:
  6843                           	opt callstack 0
  6844                           
  6845 ;; *************** function _printf *****************
  6846 ;; Defined at:
  6847 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  fmt             2  [STACK] PTR const unsigned char 
  6850 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  ap              2  [STACK] PTR void [1]
  6853 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6854 ;;  ret             2    0        int 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2  [STACK] int 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6859 ;; Tracked objects:
  6860 ;;		On entry : 3F/3B
  6861 ;;		On exit  : 3F/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6868 ;;Total ram usage:        0 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:   14
  6871 ;; This function calls:
  6872 ;;		_vfprintf
  6873 ;; This function is called by:
  6874 ;;		_eaDogM_WriteString
  6875 ;;		_send_lcd_cmd_dma
  6876 ;; This function uses a reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text34
  6880  018144                     __ptext34:
  6881                           	opt callstack 0
  6882  018144                     _printf:
  6883                           	opt callstack 0
  6884                           
  6885                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6886  018144  52E6               	movf	postinc1,f,c
  6887  018146  52E6               	movf	postinc1,f,c
  6888                           
  6889                           ;stkvar	?_printf @ sp[(-2)+-3]
  6890                           
  6891                           ;incstack = 0
  6892  018148  0EFB               	movlw	251
  6893  01814A  24E1               	addwf	fsr1l,w,c
  6894  01814C  6E40               	movwf	(btemp+10)^0,c
  6895  01814E  0EFF               	movlw	255
  6896  018150  20E2               	addwfc	fsr1h,w,c
  6897  018152  6E41               	movwf	(btemp+11)^0,c
  6898                           
  6899                           ;stkvar	_ap @ sp[(-2)+0]
  6900  018154  0EFF               	movlw	-1
  6901  018156  0060  F107  FFE3   	movff	btemp+11,plusw1
  6902  01815C  0EFE               	movlw	-2
  6903  01815E  0060  F103  FFE3   	movff	btemp+10,plusw1
  6904                           
  6905                           ;stkvar	_ap @ sp[(-2)+0]
  6906  018164  0EFE               	movlw	254
  6907  018166  24E1               	addwf	fsr1l,w,c
  6908  018168  6E36               	movwf	btemp^0,c
  6909  01816A  0EFF               	movlw	255
  6910  01816C  20E2               	addwfc	fsr1h,w,c
  6911  01816E  6E37               	movwf	(btemp+1)^0,c
  6912  018170  0060  F0DB  FFE6   	movff	btemp,postinc1
  6913  018176  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  6914                           
  6915                           ;stkvar	_fmt @ sp[(-4)+-3]
  6916  01817C  0EF9               	movlw	-7
  6917  01817E  006F FF8F FFE6     	movff	plusw1,postinc1
  6918  018184  006F FF8F FFE6     	movff	plusw1,postinc1
  6919  01818A  0E00               	movlw	0
  6920  01818C  6EE6               	movwf	postinc1,c
  6921  01818E  0E00               	movlw	0
  6922  018190  6EE6               	movwf	postinc1,c
  6923  018192  ECCC  F0BB         	call	_vfprintf	;wreg free
  6924                           
  6925                           ; BSR set to: 0
  6926                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6927  018196  52E5               	movf	postdec1,f,c
  6928  018198  52E5               	movf	postdec1,f,c
  6929  01819A  52E5               	movf	postdec1,f,c
  6930  01819C  50E7               	movf	indf1,w,c
  6931  01819E  5EE1               	subwf	fsr1l,f,c
  6932  0181A0  0E00               	movlw	0
  6933  0181A2  5AE2               	subwfb	fsr1h,f,c
  6934  0181A4  0012               	return		;funcret
  6935  0181A6                     __end_of_printf:
  6936                           	opt callstack 0
  6937                           
  6938 ;; *************** function _vfprintf *****************
  6939 ;; Defined at:
  6940 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6943 ;;		 -> f(6), NULL(0), 
  6944 ;;  fmt             2  [STACK] PTR const unsigned char 
  6945 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6946 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6947 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6948 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6949 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6950 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6951 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6952 ;;  ap              2  [STACK] PTR PTR void 
  6953 ;;		 -> ap(2), ap(2), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  cfmt            2  [STACK] PTR unsigned char 
  6956 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6957 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6958 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6959 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6960 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6961 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6962 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  2  [STACK] int 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/4
  6969 ;;		On exit  : 3F/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:   13
  6979 ;; This function calls:
  6980 ;;		_vfpfcnvrt
  6981 ;; This function is called by:
  6982 ;;		_sprintf
  6983 ;;		_printf
  6984 ;; This function uses a reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text35
  6988  017798                     __ptext35:
  6989                           	opt callstack 0
  6990  017798                     _vfprintf:
  6991                           	opt callstack 0
  6992                           
  6993                           ; BSR set to: 0
  6994                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6995  017798  52E6               	movf	postinc1,f,c
  6996  01779A  52E6               	movf	postinc1,f,c
  6997                           
  6998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6999                           ;stkvar	_fmt @ sp[(-2)+-4]
  7000                           
  7001                           ;incstack = 0
  7002  01779C  0EFA               	movlw	-6
  7003  01779E  006F FF8C  F040    	movff	plusw1,btemp+10
  7004  0177A4  0EFB               	movlw	-5
  7005  0177A6  006F FF8C  F041    	movff	plusw1,btemp+11
  7006                           
  7007                           ;stkvar	_cfmt @ sp[(-2)+0]
  7008  0177AC  0EFF               	movlw	-1
  7009  0177AE  0060  F107  FFE3   	movff	btemp+11,plusw1
  7010  0177B4  0EFE               	movlw	-2
  7011  0177B6  0060  F103  FFE3   	movff	btemp+10,plusw1
  7012                           
  7013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7014  0177BC  0100               	movlb	0	; () banked
  7015  0177BE  6B98               	clrf	_nout& (0+255),b
  7016  0177C0  6B99               	clrf	(_nout+1)& (0+255),b
  7017                           
  7018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7019  0177C2  D021               	goto	l10098
  7020  0177C4                     l10096:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7024                           ;stkvar	_ap @ sp[(-2)+-6]
  7025  0177C4  0EF8               	movlw	-8
  7026  0177C6  006F FF8F FFE6     	movff	plusw1,postinc1
  7027  0177CC  006F FF8F FFE6     	movff	plusw1,postinc1
  7028                           
  7029                           ;stkvar	_cfmt @ sp[(-4)+0]
  7030  0177D2  0EFC               	movlw	252
  7031  0177D4  24E1               	addwf	fsr1l,w,c
  7032  0177D6  6E36               	movwf	btemp^0,c
  7033  0177D8  0EFF               	movlw	255
  7034  0177DA  20E2               	addwfc	fsr1h,w,c
  7035  0177DC  6E37               	movwf	(btemp+1)^0,c
  7036  0177DE  0060  F0DB  FFE6   	movff	btemp,postinc1
  7037  0177E4  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  7038                           
  7039                           ;stkvar	_fp @ sp[(-6)+-2]
  7040  0177EA  0EF8               	movlw	-8
  7041  0177EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7042  0177F2  006F FF8F FFE6     	movff	plusw1,postinc1
  7043  0177F8  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7044  0177FC  5036               	movf	btemp^0,w,c
  7045  0177FE  0100               	movlb	0	; () banked
  7046  017800  2798               	addwf	_nout& (0+255),f,b
  7047  017802  5037               	movf	(btemp+1)^0,w,c
  7048  017804  2399               	addwfc	(_nout+1)& (0+255),f,b
  7049  017806                     l10098:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7053                           ;stkvar	_cfmt @ sp[(-2)+0]
  7054  017806  50E1               	movf	fsr1l,w,c
  7055  017808  0FFE               	addlw	-2
  7056  01780A  6ED9               	movwf	fsr2l,c
  7057  01780C  50E2               	movf	fsr1h,w,c
  7058  01780E  6EDA               	movwf	fsr2h,c
  7059  017810  0EFF               	movlw	255
  7060  017812  22DA               	addwfc	fsr2h,f,c
  7061  017814  006F FF7B FFF6     	movff	postinc2,tblptrl
  7062  01781A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7063  017820                     	if	0	;tblptru may be non-zero
  7064  017820                     	endif
  7065  017820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7066  017820  0E00               	movlw	low (__mediumconst shr (0+16))
  7067  017822  6EF8               	movwf	tblptru,c
  7068  017824                     	endif
  7069  017824  0008               	tblrd		*
  7070  017826  50F5               	movf	tablat,w,c
  7071  017828  0900               	iorlw	0
  7072  01782A  A4D8               	btfss	status,2,c
  7073  01782C  D7CB               	goto	l10096
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7077  01782E  0060  F260  F036   	movff	_nout,btemp
  7078  017834  0060  F264  F037   	movff	_nout+1,btemp+1
  7079                           
  7080                           ; BSR set to: 0
  7081                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7082  01783A  0EF8               	movlw	248
  7083  01783C  26E1               	addwf	fsr1l,f,c
  7084  01783E  0EFF               	movlw	255
  7085  017840  22E2               	addwfc	fsr1h,f,c
  7086  017842  0012               	return		;funcret
  7087  017844                     __end_of_vfprintf:
  7088                           	opt callstack 0
  7089                           
  7090 ;; *************** function _vfpfcnvrt *****************
  7091 ;; Defined at:
  7092 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7095 ;;		 -> f(6), NULL(0), 
  7096 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7097 ;;		 -> cfmt(2), 
  7098 ;;  ap              2  [STACK] PTR PTR void 
  7099 ;;		 -> ap(2), ap(2), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  llu             8  [STACK] unsigned long long 
  7102 ;;  ll              8  [STACK] long long 
  7103 ;;  f               4  [STACK] long long 
  7104 ;;  ct              3  [STACK] unsigned char [3]
  7105 ;;  vp              3    0        PTR void 
  7106 ;;  cp              2  [STACK] PTR unsigned char 
  7107 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7108 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7109 ;;		 -> STR_3(5), V(187), 
  7110 ;;  i               2    0        int 
  7111 ;;  done            2    0        int 
  7112 ;;  c               1  [STACK] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  2  [STACK] int 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7126 ;;Total ram usage:        0 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   12
  7129 ;; This function calls:
  7130 ;;		_atoi
  7131 ;;		_ctoa
  7132 ;;		_dtoa
  7133 ;;		_efgtoa
  7134 ;;		_fputc
  7135 ;;		_isdigit
  7136 ;;		_isupper
  7137 ;;		_stoa
  7138 ;;		_strncmp
  7139 ;;		_tolower
  7140 ;;		_utoa
  7141 ;;		_xtoa
  7142 ;; This function is called by:
  7143 ;;		_vfprintf
  7144 ;; This function uses a reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text36
  7148  011244                     __ptext36:
  7149                           	opt callstack 0
  7150  011244                     _vfpfcnvrt:
  7151                           	opt callstack 0
  7152                           
  7153                           ; BSR set to: 0
  7154                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7155  011244  0E20               	movlw	32
  7156  011246  26E1               	addwf	fsr1l,f,c
  7157  011248  0E00               	movlw	0
  7158  01124A  22E2               	addwfc	fsr1h,f,c
  7159                           
  7160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7161                           ;stkvar	_fmt @ sp[(-32)+-4]
  7162                           
  7163                           ;incstack = 0
  7164  01124C  0EDC               	movlw	-36
  7165  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7166  011254  0EDD               	movlw	-35
  7167  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7168  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7169  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7170  011268                     	if	0	;tblptru may be non-zero
  7171  011268                     	endif
  7172  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7173  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7174  01126A  6EF8               	movwf	tblptru,c
  7175  01126C                     	endif
  7176  01126C  0008               	tblrd		*
  7177  01126E  50F5               	movf	tablat,w,c
  7178  011270  0A25               	xorlw	37
  7179  011272  A4D8               	btfss	status,2,c
  7180  011274  EFC9  F090         	goto	l10042
  7181                           
  7182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7183                           ;stkvar	_fmt @ sp[(-32)+-4]
  7184  011278  0EDC               	movlw	-36
  7185  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7186  011280  0EDD               	movlw	-35
  7187  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7188  011288  2ADE               	incf	postinc2,f,c
  7189  01128A  0E00               	movlw	0
  7190  01128C  22DD               	addwfc	postdec2,f,c
  7191                           
  7192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7193  01128E  6A1F               	clrf	_width^0,c
  7194  011290  6A20               	clrf	(_width+1)^0,c
  7195  011292  6A23               	clrf	_flags^0,c
  7196  011294  6A24               	clrf	(_flags+1)^0,c
  7197                           
  7198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7199  011296  6821               	setf	_prec^0,c
  7200  011298  6822               	setf	(_prec+1)^0,c
  7201                           
  7202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7203                           ;stkvar	_fmt @ sp[(-32)+-4]
  7204  01129A  0EDC               	movlw	-36
  7205  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7206  0112A2  0EDD               	movlw	-35
  7207  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7208  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7209  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7210  0112B6                     	if	0	;tblptru may be non-zero
  7211  0112B6                     	endif
  7212  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7213  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7214  0112B8  6EF8               	movwf	tblptru,c
  7215  0112BA                     	endif
  7216  0112BA  0008               	tblrd		*
  7217  0112BC  50F5               	movf	tablat,w,c
  7218  0112BE  0A2A               	xorlw	42
  7219  0112C0  A4D8               	btfss	status,2,c
  7220  0112C2  D031               	goto	l9860
  7221                           
  7222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7223                           ;stkvar	_fmt @ sp[(-32)+-4]
  7224  0112C4  0EDC               	movlw	-36
  7225  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7226  0112CC  0EDD               	movlw	-35
  7227  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7228  0112D4  2ADE               	incf	postinc2,f,c
  7229  0112D6  0E00               	movlw	0
  7230  0112D8  22DD               	addwfc	postdec2,f,c
  7231                           
  7232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7233                           ;stkvar	_ap @ sp[(-32)+-6]
  7234  0112DA  0EDA               	movlw	-38
  7235  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7236  0112E2  0EDB               	movlw	-37
  7237  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7238  0112EA  0E02               	movlw	2
  7239  0112EC  5EDE               	subwf	postinc2,f,c
  7240  0112EE  0E00               	movlw	0
  7241  0112F0  5ADD               	subwfb	postdec2,f,c
  7242  0112F2  006F FF78  F040    	movff	postinc2,btemp+10
  7243  0112F8  006F FF74  F041    	movff	postdec2,btemp+11
  7244  0112FE  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7245  011304  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7246  01130A  006F FF78  F01F    	movff	postinc2,_width
  7247  011310  006F FF74  F020    	movff	postdec2,_width+1
  7248                           
  7249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7250  011316  AE20               	btfss	(_width+1)^0,7,c
  7251  011318  D066               	goto	u10280
  7252                           
  7253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7254  01131A  8023               	bsf	_flags^0,0,c
  7255                           
  7256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7257  01131C  6C1F               	negf	_width^0,c
  7258  01131E  1E20               	comf	(_width+1)^0,f,c
  7259  011320  B0D8               	btfsc	status,0,c
  7260  011322  2A20               	incf	(_width+1)^0,f,c
  7261  011324  D060               	goto	u10280
  7262  011326                     l9860:
  7263                           
  7264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7265                           ;stkvar	_fmt @ sp[(-32)+-4]
  7266  011326  0EDC               	movlw	-36
  7267  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7268  01132E  0EDD               	movlw	-35
  7269  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7270  011336  006F FF78  F040    	movff	postinc2,btemp+10
  7271  01133C  006F FF74  F041    	movff	postdec2,btemp+11
  7272  011342  0060  F103  FFE6   	movff	btemp+10,postinc1
  7273  011348  0060  F107  FFE6   	movff	btemp+11,postinc1
  7274  01134E  ECEE  F0AB         	call	_atoi	;wreg free
  7275  011352  0060  F0D8  F01F   	movff	btemp,_width
  7276  011358  0060  F0DC  F020   	movff	btemp+1,_width+1
  7277                           
  7278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7279  01135E  D00B               	goto	l9864
  7280  011360                     l9862:
  7281                           
  7282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7283                           ;stkvar	_fmt @ sp[(-32)+-4]
  7284  011360  0EDC               	movlw	-36
  7285  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7286  011368  0EDD               	movlw	-35
  7287  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7288  011370  2ADE               	incf	postinc2,f,c
  7289  011372  0E00               	movlw	0
  7290  011374  22DD               	addwfc	postdec2,f,c
  7291  011376                     l9864:
  7292  011376  0ED0               	movlw	208
  7293  011378  6E40               	movwf	(btemp+10)^0,c
  7294  01137A  0EFF               	movlw	255
  7295  01137C  6E41               	movwf	(btemp+11)^0,c
  7296                           
  7297                           ;stkvar	_fmt @ sp[(-32)+-4]
  7298  01137E  0EDC               	movlw	-36
  7299  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7300  011386  0EDD               	movlw	-35
  7301  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7302  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7303  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7304  01139A                     	if	0	;tblptru may be non-zero
  7305  01139A                     	endif
  7306  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7307  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7308  01139C  6EF8               	movwf	tblptru,c
  7309  01139E                     	endif
  7310  01139E  0008               	tblrd		*
  7311  0113A0  50F5               	movf	tablat,w,c
  7312  0113A2  6E3E               	movwf	(btemp+8)^0,c
  7313  0113A4  6A3F               	clrf	(btemp+9)^0,c
  7314  0113A6  5040               	movf	(btemp+10)^0,w,c
  7315  0113A8  263E               	addwf	(btemp+8)^0,f,c
  7316  0113AA  5041               	movf	(btemp+11)^0,w,c
  7317  0113AC  223F               	addwfc	(btemp+9)^0,f,c
  7318  0113AE  503F               	movf	(btemp+9)^0,w,c
  7319  0113B0  E106               	bnz	u10260
  7320  0113B2  0E0A               	movlw	10
  7321  0113B4  5C3E               	subwf	(btemp+8)^0,w,c
  7322  0113B6  B0D8               	btfsc	status,0,c
  7323  0113B8  D002               	goto	u10260
  7324  0113BA  0E01               	movlw	1
  7325  0113BC  D001               	goto	u10270
  7326  0113BE                     u10260:
  7327  0113BE  0E00               	movlw	0
  7328  0113C0                     u10270:
  7329  0113C0  6E40               	movwf	(btemp+10)^0,c
  7330  0113C2  6A41               	clrf	(btemp+11)^0,c
  7331                           
  7332                           ;stkvar	_vfpfcnvrt$4257 @ sp[(-32)+4]
  7333  0113C4  0EE4               	movlw	-28
  7334  0113C6  0060  F103  FFE3   	movff	btemp+10,plusw1
  7335  0113CC  0EE5               	movlw	-27
  7336  0113CE  0060  F107  FFE3   	movff	btemp+11,plusw1
  7337                           
  7338                           ;stkvar	_vfpfcnvrt$4257 @ sp[(-32)+4]
  7339  0113D4  0EE4               	movlw	-28
  7340  0113D6  006F FF8C  F036    	movff	plusw1,btemp
  7341  0113DC  0EE5               	movlw	-27
  7342  0113DE  50E3               	movf	plusw1,w,c
  7343  0113E0  1036               	iorwf	btemp^0,w,c
  7344  0113E2  A4D8               	btfss	status,2,c
  7345  0113E4  D7BD               	goto	l9862
  7346  0113E6                     u10280:
  7347                           
  7348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7349                           ;stkvar	_fmt @ sp[(-32)+-4]
  7350  0113E6  0EDC               	movlw	-36
  7351  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7352  0113EE  0EDD               	movlw	-35
  7353  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7354  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7355  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7356  011402                     	if	0	;tblptru may be non-zero
  7357  011402                     	endif
  7358  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7359  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7360  011404  6EF8               	movwf	tblptru,c
  7361  011406                     	endif
  7362  011406  0008               	tblrd		*
  7363  011408  50F5               	movf	tablat,w,c
  7364  01140A  0A2E               	xorlw	46
  7365  01140C  A4D8               	btfss	status,2,c
  7366  01140E  D0AC               	goto	u10330
  7367                           
  7368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7369  011410  6A21               	clrf	_prec^0,c
  7370  011412  6A22               	clrf	(_prec+1)^0,c
  7371                           
  7372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7373                           ;stkvar	_fmt @ sp[(-32)+-4]
  7374  011414  0EDC               	movlw	-36
  7375  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7376  01141C  0EDD               	movlw	-35
  7377  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7378  011424  2ADE               	incf	postinc2,f,c
  7379  011426  0E00               	movlw	0
  7380  011428  22DD               	addwfc	postdec2,f,c
  7381                           
  7382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7383                           ;stkvar	_fmt @ sp[(-32)+-4]
  7384  01142A  0EDC               	movlw	-36
  7385  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7386  011432  0EDD               	movlw	-35
  7387  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7388  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7389  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7390  011446                     	if	0	;tblptru may be non-zero
  7391  011446                     	endif
  7392  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7393  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7394  011448  6EF8               	movwf	tblptru,c
  7395  01144A                     	endif
  7396  01144A  0008               	tblrd		*
  7397  01144C  50F5               	movf	tablat,w,c
  7398  01144E  0A2A               	xorlw	42
  7399  011450  A4D8               	btfss	status,2,c
  7400  011452  D02A               	goto	l9882
  7401                           
  7402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7403                           ;stkvar	_fmt @ sp[(-32)+-4]
  7404  011454  0EDC               	movlw	-36
  7405  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7406  01145C  0EDD               	movlw	-35
  7407  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7408  011464  2ADE               	incf	postinc2,f,c
  7409  011466  0E00               	movlw	0
  7410  011468  22DD               	addwfc	postdec2,f,c
  7411                           
  7412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7413                           ;stkvar	_ap @ sp[(-32)+-6]
  7414  01146A  0EDA               	movlw	-38
  7415  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7416  011472  0EDB               	movlw	-37
  7417  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7418  01147A  0E02               	movlw	2
  7419  01147C  5EDE               	subwf	postinc2,f,c
  7420  01147E  0E00               	movlw	0
  7421  011480  5ADD               	subwfb	postdec2,f,c
  7422  011482  006F FF78  F040    	movff	postinc2,btemp+10
  7423  011488  006F FF74  F041    	movff	postdec2,btemp+11
  7424  01148E  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7425  011494  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7426  01149A  006F FF78  F021    	movff	postinc2,_prec
  7427  0114A0  006F FF74  F022    	movff	postdec2,_prec+1
  7428                           
  7429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7430  0114A6  D060               	goto	u10330
  7431  0114A8                     l9882:
  7432                           
  7433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7434                           ;stkvar	_fmt @ sp[(-32)+-4]
  7435  0114A8  0EDC               	movlw	-36
  7436  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7437  0114B0  0EDD               	movlw	-35
  7438  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7439  0114B8  006F FF78  F040    	movff	postinc2,btemp+10
  7440  0114BE  006F FF74  F041    	movff	postdec2,btemp+11
  7441  0114C4  0060  F103  FFE6   	movff	btemp+10,postinc1
  7442  0114CA  0060  F107  FFE6   	movff	btemp+11,postinc1
  7443  0114D0  ECEE  F0AB         	call	_atoi	;wreg free
  7444  0114D4  0060  F0D8  F021   	movff	btemp,_prec
  7445  0114DA  0060  F0DC  F022   	movff	btemp+1,_prec+1
  7446                           
  7447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7448  0114E0  D00B               	goto	l9886
  7449  0114E2                     l9884:
  7450                           
  7451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7452                           ;stkvar	_fmt @ sp[(-32)+-4]
  7453  0114E2  0EDC               	movlw	-36
  7454  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7455  0114EA  0EDD               	movlw	-35
  7456  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7457  0114F2  2ADE               	incf	postinc2,f,c
  7458  0114F4  0E00               	movlw	0
  7459  0114F6  22DD               	addwfc	postdec2,f,c
  7460  0114F8                     l9886:
  7461  0114F8  0ED0               	movlw	208
  7462  0114FA  6E40               	movwf	(btemp+10)^0,c
  7463  0114FC  0EFF               	movlw	255
  7464  0114FE  6E41               	movwf	(btemp+11)^0,c
  7465                           
  7466                           ;stkvar	_fmt @ sp[(-32)+-4]
  7467  011500  0EDC               	movlw	-36
  7468  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7469  011508  0EDD               	movlw	-35
  7470  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7471  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7472  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7473  01151C                     	if	0	;tblptru may be non-zero
  7474  01151C                     	endif
  7475  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7476  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7477  01151E  6EF8               	movwf	tblptru,c
  7478  011520                     	endif
  7479  011520  0008               	tblrd		*
  7480  011522  50F5               	movf	tablat,w,c
  7481  011524  6E3E               	movwf	(btemp+8)^0,c
  7482  011526  6A3F               	clrf	(btemp+9)^0,c
  7483  011528  5040               	movf	(btemp+10)^0,w,c
  7484  01152A  263E               	addwf	(btemp+8)^0,f,c
  7485  01152C  5041               	movf	(btemp+11)^0,w,c
  7486  01152E  223F               	addwfc	(btemp+9)^0,f,c
  7487  011530  503F               	movf	(btemp+9)^0,w,c
  7488  011532  E106               	bnz	u10310
  7489  011534  0E0A               	movlw	10
  7490  011536  5C3E               	subwf	(btemp+8)^0,w,c
  7491  011538  B0D8               	btfsc	status,0,c
  7492  01153A  D002               	goto	u10310
  7493  01153C  0E01               	movlw	1
  7494  01153E  D001               	goto	u10320
  7495  011540                     u10310:
  7496  011540  0E00               	movlw	0
  7497  011542                     u10320:
  7498  011542  6E40               	movwf	(btemp+10)^0,c
  7499  011544  6A41               	clrf	(btemp+11)^0,c
  7500                           
  7501                           ;stkvar	_vfpfcnvrt$4258 @ sp[(-32)+0]
  7502  011546  0EE0               	movlw	-32
  7503  011548  0060  F103  FFE3   	movff	btemp+10,plusw1
  7504  01154E  0EE1               	movlw	-31
  7505  011550  0060  F107  FFE3   	movff	btemp+11,plusw1
  7506                           
  7507                           ;stkvar	_vfpfcnvrt$4258 @ sp[(-32)+0]
  7508  011556  0EE0               	movlw	-32
  7509  011558  006F FF8C  F036    	movff	plusw1,btemp
  7510  01155E  0EE1               	movlw	-31
  7511  011560  50E3               	movf	plusw1,w,c
  7512  011562  1036               	iorwf	btemp^0,w,c
  7513  011564  A4D8               	btfss	status,2,c
  7514  011566  D7BD               	goto	l9884
  7515  011568                     u10330:
  7516                           
  7517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7518                           ;stkvar	_fmt @ sp[(-32)+-4]
  7519  011568  0EDC               	movlw	-36
  7520  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7521  011570  0EDD               	movlw	-35
  7522  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7523  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7524  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7525  011584                     	if	0	;tblptru may be non-zero
  7526  011584                     	endif
  7527  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7528  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7529  011586  6EF8               	movwf	tblptru,c
  7530  011588                     	endif
  7531  011588  0008               	tblrd		*
  7532  01158A  50F5               	movf	tablat,w,c
  7533  01158C  6EE6               	movwf	postinc1,c
  7534  01158E  0E00               	movlw	0
  7535  011590  6EE6               	movwf	postinc1,c
  7536  011592  EC7E  F0BE         	call	_tolower	;wreg free
  7537                           
  7538                           ;stkvar	_ct @ sp[(-32)+26]
  7539  011596  0EFA               	movlw	-6
  7540  011598  0060  F0DB  FFE3   	movff	btemp,plusw1
  7541                           
  7542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7543                           ;stkvar	_ct @ sp[(-32)+26]
  7544  01159E  0EFA               	movlw	-6
  7545  0115A0  50E3               	movf	plusw1,w,c
  7546  0115A2  B4D8               	btfsc	status,2,c
  7547  0115A4  D05B               	goto	l9902
  7548                           
  7549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7550                           ;stkvar	_ct @ sp[(-32)+26]
  7551  0115A6  0EFB               	movlw	251
  7552  0115A8  24E1               	addwf	fsr1l,w,c
  7553  0115AA  6ED9               	movwf	fsr2l,c
  7554  0115AC  0EFF               	movlw	255
  7555  0115AE  20E2               	addwfc	fsr1h,w,c
  7556  0115B0  6EDA               	movwf	fsr2h,c
  7557                           
  7558                           ;stkvar	_fmt @ sp[(-32)+-4]
  7559  0115B2  0EDC               	movlw	-36
  7560  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7561  0115BA  0EDD               	movlw	-35
  7562  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7563  0115C2  006F FFB8  F040    	movff	postinc0,btemp+10
  7564  0115C8  006F FFB4  F041    	movff	postdec0,btemp+11
  7565  0115CE  0E01               	movlw	1
  7566  0115D0  2640               	addwf	(btemp+10)^0,f,c
  7567  0115D2  0E00               	movlw	0
  7568  0115D4  2241               	addwfc	(btemp+11)^0,f,c
  7569  0115D6  0060  F103  FFF6   	movff	btemp+10,tblptrl
  7570  0115DC  0060  F107  FFF7   	movff	btemp+11,tblptrh
  7571  0115E2                     	if	0	;tblptru may be non-zero
  7572  0115E2                     	endif
  7573  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7574  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7575  0115E4  6EF8               	movwf	tblptru,c
  7576  0115E6                     	endif
  7577  0115E6  0008               	tblrd		*
  7578  0115E8  50F5               	movf	tablat,w,c
  7579  0115EA  6EE6               	movwf	postinc1,c
  7580  0115EC  0E00               	movlw	0
  7581  0115EE  6EE6               	movwf	postinc1,c
  7582  0115F0  EC7E  F0BE         	call	_tolower	;wreg free
  7583  0115F4  5036               	movf	btemp^0,w,c
  7584  0115F6  6EDF               	movwf	indf2,c
  7585                           
  7586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7587                           ;stkvar	_ct @ sp[(-32)+26]
  7588  0115F8  0EFB               	movlw	251
  7589  0115FA  24E1               	addwf	fsr1l,w,c
  7590  0115FC  6ED9               	movwf	fsr2l,c
  7591  0115FE  0EFF               	movlw	255
  7592  011600  20E2               	addwfc	fsr1h,w,c
  7593  011602  6EDA               	movwf	fsr2h,c
  7594  011604  50DF               	movf	indf2,w,c
  7595  011606  B4D8               	btfsc	status,2,c
  7596  011608  D029               	goto	l9902
  7597                           
  7598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7599                           ;stkvar	_ct @ sp[(-32)+26]
  7600  01160A  0EFC               	movlw	252
  7601  01160C  24E1               	addwf	fsr1l,w,c
  7602  01160E  6ED9               	movwf	fsr2l,c
  7603  011610  0EFF               	movlw	255
  7604  011612  20E2               	addwfc	fsr1h,w,c
  7605  011614  6EDA               	movwf	fsr2h,c
  7606                           
  7607                           ;stkvar	_fmt @ sp[(-32)+-4]
  7608  011616  0EDC               	movlw	-36
  7609  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7610  01161E  0EDD               	movlw	-35
  7611  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7612  011626  006F FFB8  F040    	movff	postinc0,btemp+10
  7613  01162C  006F FFB4  F041    	movff	postdec0,btemp+11
  7614  011632  0E02               	movlw	2
  7615  011634  2640               	addwf	(btemp+10)^0,f,c
  7616  011636  0E00               	movlw	0
  7617  011638  2241               	addwfc	(btemp+11)^0,f,c
  7618  01163A  0060  F103  FFF6   	movff	btemp+10,tblptrl
  7619  011640  0060  F107  FFF7   	movff	btemp+11,tblptrh
  7620  011646                     	if	0	;tblptru may be non-zero
  7621  011646                     	endif
  7622  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7623  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7624  011648  6EF8               	movwf	tblptru,c
  7625  01164A                     	endif
  7626  01164A  0008               	tblrd		*
  7627  01164C  50F5               	movf	tablat,w,c
  7628  01164E  6EE6               	movwf	postinc1,c
  7629  011650  0E00               	movlw	0
  7630  011652  6EE6               	movwf	postinc1,c
  7631  011654  EC7E  F0BE         	call	_tolower	;wreg free
  7632  011658  5036               	movf	btemp^0,w,c
  7633  01165A  6EDF               	movwf	indf2,c
  7634  01165C                     l9902:
  7635                           
  7636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7637                           ;stkvar	_fmt @ sp[(-32)+-4]
  7638  01165C  0EDC               	movlw	-36
  7639  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7640  011664  0EDD               	movlw	-35
  7641  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7642  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7643  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7644  011678                     	if	0	;tblptru may be non-zero
  7645  011678                     	endif
  7646  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7647  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7648  01167A  6EF8               	movwf	tblptru,c
  7649  01167C                     	endif
  7650  01167C  0008               	tblrd		*
  7651  01167E  50F5               	movf	tablat,w,c
  7652  011680  0A63               	xorlw	99
  7653  011682  A4D8               	btfss	status,2,c
  7654  011684  D037               	goto	l9912
  7655                           
  7656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7657                           ;stkvar	_fmt @ sp[(-32)+-4]
  7658  011686  0EDC               	movlw	-36
  7659  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7660  01168E  0EDD               	movlw	-35
  7661  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7662  011696  2ADE               	incf	postinc2,f,c
  7663  011698  0E00               	movlw	0
  7664  01169A  22DD               	addwfc	postdec2,f,c
  7665                           
  7666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7667                           ;stkvar	_ap @ sp[(-32)+-6]
  7668  01169C  0EDA               	movlw	-38
  7669  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7670  0116A4  0EDB               	movlw	-37
  7671  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7672  0116AC  0E02               	movlw	2
  7673  0116AE  5EDE               	subwf	postinc2,f,c
  7674  0116B0  0E00               	movlw	0
  7675  0116B2  5ADD               	subwfb	postdec2,f,c
  7676  0116B4  006F FF78  F040    	movff	postinc2,btemp+10
  7677  0116BA  006F FF74  F041    	movff	postdec2,btemp+11
  7678  0116C0  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7679  0116C6  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7680  0116CC  50DF               	movf	indf2,w,c
  7681  0116CE  6E41               	movwf	(btemp+11)^0,c
  7682                           
  7683                           ;stkvar	_c @ sp[(-32)+31]
  7684  0116D0  0EFF               	movlw	-1
  7685  0116D2  0060  F107  FFE3   	movff	btemp+11,plusw1
  7686                           
  7687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7688                           ;stkvar	_c @ sp[(-32)+31]
  7689  0116D8  0EFF               	movlw	-1
  7690  0116DA  50E3               	movf	plusw1,w,c
  7691  0116DC  6EE6               	movwf	postinc1,c
  7692                           
  7693                           ;stkvar	_fp @ sp[(-33)+-2]
  7694  0116DE  0EDD               	movlw	-35
  7695  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7696  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7697  0116EC  ECF8  F0BD         	call	_ctoa	;wreg free
  7698  0116F0  EFF3  F090         	goto	l1980
  7699  0116F4                     l9912:
  7700                           
  7701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7702                           ;stkvar	_fmt @ sp[(-32)+-4]
  7703  0116F4  0EDC               	movlw	-36
  7704  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7705  0116FC  0EDD               	movlw	-35
  7706  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7707  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7708  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7709  011710                     	if	0	;tblptru may be non-zero
  7710  011710                     	endif
  7711  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7712  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7713  011712  6EF8               	movwf	tblptru,c
  7714  011714                     	endif
  7715  011714  0008               	tblrd		*
  7716  011716  50F5               	movf	tablat,w,c
  7717  011718  0A64               	xorlw	100
  7718  01171A  B4D8               	btfsc	status,2,c
  7719  01171C  D015               	goto	u10380
  7720                           
  7721                           ;stkvar	_fmt @ sp[(-32)+-4]
  7722  01171E  0EDC               	movlw	-36
  7723  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7724  011726  0EDD               	movlw	-35
  7725  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7726  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7727  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7728  01173A                     	if	0	;tblptru may be non-zero
  7729  01173A                     	endif
  7730  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7731  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7732  01173C  6EF8               	movwf	tblptru,c
  7733  01173E                     	endif
  7734  01173E  0008               	tblrd		*
  7735  011740  50F5               	movf	tablat,w,c
  7736  011742  0A69               	xorlw	105
  7737  011744  A4D8               	btfss	status,2,c
  7738  011746  D076               	goto	l9924
  7739  011748                     u10380:
  7740                           
  7741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7742                           ;stkvar	_fmt @ sp[(-32)+-4]
  7743  011748  0EDC               	movlw	-36
  7744  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7745  011750  0EDD               	movlw	-35
  7746  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7747  011758  2ADE               	incf	postinc2,f,c
  7748  01175A  0E00               	movlw	0
  7749  01175C  22DD               	addwfc	postdec2,f,c
  7750                           
  7751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7752                           ;stkvar	_ap @ sp[(-32)+-6]
  7753  01175E  0EDA               	movlw	-38
  7754  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7755  011766  0EDB               	movlw	-37
  7756  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7757  01176E  0E02               	movlw	2
  7758  011770  5EDE               	subwf	postinc2,f,c
  7759  011772  0E00               	movlw	0
  7760  011774  5ADD               	subwfb	postdec2,f,c
  7761  011776  006F FF78  F040    	movff	postinc2,btemp+10
  7762  01177C  006F FF74  F041    	movff	postdec2,btemp+11
  7763  011782  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7764  011788  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7765  01178E  006F FF78  F040    	movff	postinc2,btemp+10
  7766  011794  006F FF74  F041    	movff	postdec2,btemp+11
  7767                           
  7768                           ;stkvar	_ll @ sp[(-32)+14]
  7769  01179A  0EEE               	movlw	-18
  7770  01179C  0060  F103  FFE3   	movff	btemp+10,plusw1
  7771  0117A2  0EEF               	movlw	-17
  7772  0117A4  0060  F107  FFE3   	movff	btemp+11,plusw1
  7773  0117AA  6A36               	clrf	btemp^0,c
  7774  0117AC  BEE3               	btfsc	plusw1,7,c
  7775  0117AE  6836               	setf	btemp^0,c
  7776  0117B0  0EF0               	movlw	-16
  7777  0117B2  0060  F0DB  FFE3   	movff	btemp,plusw1
  7778  0117B8  0EF1               	movlw	-15
  7779  0117BA  0060  F0DB  FFE3   	movff	btemp,plusw1
  7780  0117C0  0EF2               	movlw	-14
  7781  0117C2  0060  F0DB  FFE3   	movff	btemp,plusw1
  7782  0117C8  0EF3               	movlw	-13
  7783  0117CA  0060  F0DB  FFE3   	movff	btemp,plusw1
  7784  0117D0  0EF4               	movlw	-12
  7785  0117D2  0060  F0DB  FFE3   	movff	btemp,plusw1
  7786  0117D8  0EF5               	movlw	-11
  7787  0117DA  0060  F0DB  FFE3   	movff	btemp,plusw1
  7788  0117E0                     l9920:
  7789                           
  7790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7791                           ;stkvar	_ll @ sp[(-32)+14]
  7792  0117E0  50E1               	movf	fsr1l,w,c
  7793  0117E2  0FEE               	addlw	-18
  7794  0117E4  6ED9               	movwf	fsr2l,c
  7795  0117E6  50E2               	movf	fsr1h,w,c
  7796  0117E8  6EDA               	movwf	fsr2h,c
  7797  0117EA  0EFF               	movlw	255
  7798  0117EC  22DA               	addwfc	fsr2h,f,c
  7799  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7800  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7801  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7802  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7803  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7804  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7805  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7806  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7807                           
  7808                           ;stkvar	_fp @ sp[(-40)+-2]
  7809  01181E  0ED6               	movlw	-42
  7810  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7811  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7812  01182C  EC6B  F09E         	call	_dtoa	;wreg free
  7813  011830  EFF3  F090         	goto	l1980
  7814  011834                     l9924:
  7815                           
  7816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7817  011834  0E02               	movlw	2
  7818  011836  6EE6               	movwf	postinc1,c
  7819  011838  0E00               	movlw	0
  7820  01183A  6EE6               	movwf	postinc1,c
  7821  01183C  0EEA               	movlw	low STR_42
  7822  01183E  6EE6               	movwf	postinc1,c
  7823  011840  0EFF               	movlw	high STR_42
  7824  011842  6EE6               	movwf	postinc1,c
  7825                           
  7826                           ;stkvar	_fmt @ sp[(-36)+-4]
  7827  011844  0ED8               	movlw	-40
  7828  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7829  01184C  0ED9               	movlw	-39
  7830  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7831  011854  006F FF78  F040    	movff	postinc2,btemp+10
  7832  01185A  006F FF74  F041    	movff	postdec2,btemp+11
  7833  011860  0060  F103  FFE6   	movff	btemp+10,postinc1
  7834  011866  0060  F107  FFE6   	movff	btemp+11,postinc1
  7835  01186C  EC48  F0AE         	call	_strncmp	;wreg free
  7836  011870  5036               	movf	btemp^0,w,c
  7837  011872  1037               	iorwf	(btemp+1)^0,w,c
  7838  011874  B4D8               	btfsc	status,2,c
  7839  011876  D022               	goto	u10400
  7840  011878  0E02               	movlw	2
  7841  01187A  6EE6               	movwf	postinc1,c
  7842  01187C  0E00               	movlw	0
  7843  01187E  6EE6               	movwf	postinc1,c
  7844  011880  0EF0               	movlw	low STR_46
  7845  011882  6EE6               	movwf	postinc1,c
  7846  011884  0EFF               	movlw	high STR_46
  7847  011886  6EE6               	movwf	postinc1,c
  7848                           
  7849                           ;stkvar	_fmt @ sp[(-36)+-4]
  7850  011888  0ED8               	movlw	-40
  7851  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7852  011890  0ED9               	movlw	-39
  7853  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7854  011898  006F FF78  F040    	movff	postinc2,btemp+10
  7855  01189E  006F FF74  F041    	movff	postdec2,btemp+11
  7856  0118A4  0060  F103  FFE6   	movff	btemp+10,postinc1
  7857  0118AA  0060  F107  FFE6   	movff	btemp+11,postinc1
  7858  0118B0  EC48  F0AE         	call	_strncmp	;wreg free
  7859  0118B4  5036               	movf	btemp^0,w,c
  7860  0118B6  1037               	iorwf	(btemp+1)^0,w,c
  7861  0118B8  A4D8               	btfss	status,2,c
  7862  0118BA  D069               	goto	l9936
  7863  0118BC                     u10400:
  7864                           
  7865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7866                           ;stkvar	_fmt @ sp[(-32)+-4]
  7867  0118BC  0EDC               	movlw	-36
  7868  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7869  0118C4  0EDD               	movlw	-35
  7870  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7871  0118CC  0E02               	movlw	2
  7872  0118CE  26DE               	addwf	postinc2,f,c
  7873  0118D0  0E00               	movlw	0
  7874  0118D2  22DD               	addwfc	postdec2,f,c
  7875                           
  7876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7877                           ;stkvar	_ap @ sp[(-32)+-6]
  7878  0118D4  0EDA               	movlw	-38
  7879  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7880  0118DC  0EDB               	movlw	-37
  7881  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7882  0118E4  0E04               	movlw	4
  7883  0118E6  5EDE               	subwf	postinc2,f,c
  7884  0118E8  0E00               	movlw	0
  7885  0118EA  5ADD               	subwfb	postdec2,f,c
  7886  0118EC  006F FF78  F040    	movff	postinc2,btemp+10
  7887  0118F2  006F FF74  F041    	movff	postdec2,btemp+11
  7888  0118F8  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7889  0118FE  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7890  011904  006F FF78  F03E    	movff	postinc2,btemp+8
  7891  01190A  006F FF78  F03F    	movff	postinc2,btemp+9
  7892  011910  006F FF78  F040    	movff	postinc2,btemp+10
  7893  011916  006F FF78  F041    	movff	postinc2,btemp+11
  7894  01191C  0060  F0F8  F046   	movff	btemp+8,btemp+16
  7895  011922  0060  F0FC  F047   	movff	btemp+9,btemp+17
  7896  011928  0060  F100  F048   	movff	btemp+10,btemp+18
  7897  01192E  0060  F104  F049   	movff	btemp+11,btemp+19
  7898  011934  6A4A               	clrf	(btemp+20)^0,c
  7899  011936  BE49               	btfsc	(btemp+19)^0,7,c
  7900  011938  684A               	setf	(btemp+20)^0,c
  7901  01193A  0060  F128  F04B   	movff	btemp+20,btemp+21
  7902  011940  0060  F128  F04C   	movff	btemp+20,btemp+22
  7903  011946  0060  F128  F04D   	movff	btemp+20,btemp+23
  7904                           
  7905                           ;stkvar	_ll @ sp[(-32)+14]
  7906  01194C  0EEE               	movlw	-18
  7907  01194E  0060  F11B  FFE3   	movff	btemp+16,plusw1
  7908  011954  0EEF               	movlw	-17
  7909  011956  0060  F11F  FFE3   	movff	btemp+17,plusw1
  7910  01195C  0EF0               	movlw	-16
  7911  01195E  0060  F123  FFE3   	movff	btemp+18,plusw1
  7912  011964  0EF1               	movlw	-15
  7913  011966  0060  F127  FFE3   	movff	btemp+19,plusw1
  7914  01196C  0EF2               	movlw	-14
  7915  01196E  0060  F12B  FFE3   	movff	btemp+20,plusw1
  7916  011974  0EF3               	movlw	-13
  7917  011976  0060  F12F  FFE3   	movff	btemp+21,plusw1
  7918  01197C  0EF4               	movlw	-12
  7919  01197E  0060  F133  FFE3   	movff	btemp+22,plusw1
  7920  011984  0EF5               	movlw	-11
  7921  011986  0060  F137  FFE3   	movff	btemp+23,plusw1
  7922  01198C  D729               	goto	l9920
  7923  01198E                     l9936:
  7924                           
  7925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7926                           ;stkvar	_ct @ sp[(-32)+26]
  7927  01198E  0EFA               	movlw	-6
  7928  011990  006F FF8C  F036    	movff	plusw1,btemp
  7929  011996  0E66               	movlw	102
  7930  011998  1836               	xorwf	btemp^0,w,c
  7931  01199A  A4D8               	btfss	status,2,c
  7932  01199C  D06E               	goto	l9948
  7933                           
  7934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7935                           ;stkvar	_fmt @ sp[(-32)+-4]
  7936  01199E  0EDC               	movlw	-36
  7937  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7938  0119A6  0EDD               	movlw	-35
  7939  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7940  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7941  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7942  0119BA                     	if	0	;tblptru may be non-zero
  7943  0119BA                     	endif
  7944  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7945  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7946  0119BC  6EF8               	movwf	tblptru,c
  7947  0119BE                     	endif
  7948                           
  7949                           ;stkvar	_c @ sp[(-32)+31]
  7950  0119BE  0008               	tblrd		*
  7951  0119C0  0EFF               	movlw	-1
  7952  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7953                           
  7954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7955                           ;stkvar	_fmt @ sp[(-32)+-4]
  7956  0119C8  0EDC               	movlw	-36
  7957  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7958  0119D0  0EDD               	movlw	-35
  7959  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7960  0119D8  2ADE               	incf	postinc2,f,c
  7961  0119DA  0E00               	movlw	0
  7962  0119DC  22DD               	addwfc	postdec2,f,c
  7963                           
  7964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7965                           ;stkvar	_ap @ sp[(-32)+-6]
  7966  0119DE  0EDA               	movlw	-38
  7967  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7968  0119E6  0EDB               	movlw	-37
  7969  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7970  0119EE  0E04               	movlw	4
  7971  0119F0  5EDE               	subwf	postinc2,f,c
  7972  0119F2  0E00               	movlw	0
  7973  0119F4  5ADD               	subwfb	postdec2,f,c
  7974  0119F6  006F FF78  F040    	movff	postinc2,btemp+10
  7975  0119FC  006F FF74  F041    	movff	postdec2,btemp+11
  7976  011A02  0060  F103  FFD9   	movff	btemp+10,fsr2l
  7977  011A08  0060  F107  FFDA   	movff	btemp+11,fsr2h
  7978  011A0E  006F FF78  F03E    	movff	postinc2,btemp+8
  7979  011A14  006F FF78  F03F    	movff	postinc2,btemp+9
  7980  011A1A  006F FF78  F040    	movff	postinc2,btemp+10
  7981  011A20  006F FF78  F041    	movff	postinc2,btemp+11
  7982                           
  7983                           ;stkvar	_f @ sp[(-32)+22]
  7984  011A26  0EF6               	movlw	-10
  7985  011A28  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  7986  011A2E  0EF7               	movlw	-9
  7987  011A30  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  7988  011A36  0EF8               	movlw	-8
  7989  011A38  0060  F103  FFE3   	movff	btemp+10,plusw1
  7990  011A3E  0EF9               	movlw	-7
  7991  011A40  0060  F107  FFE3   	movff	btemp+11,plusw1
  7992  011A46                     l9944:
  7993                           
  7994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7995                           ;stkvar	_c @ sp[(-32)+31]
  7996  011A46  0EFF               	movlw	-1
  7997  011A48  50E3               	movf	plusw1,w,c
  7998  011A4A  6EE6               	movwf	postinc1,c
  7999                           
  8000                           ;stkvar	_f @ sp[(-33)+22]
  8001  011A4C  0EF5               	movlw	-11
  8002  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  8003  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  8004  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8005  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  8006                           
  8007                           ;stkvar	_fp @ sp[(-37)+-2]
  8008  011A66  0ED9               	movlw	-39
  8009  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  8010  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8011  011A74  EC00  F080         	call	_efgtoa	;wreg free
  8012  011A78  D3B6               	goto	l1980
  8013  011A7A                     l9948:
  8014                           
  8015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8016  011A7A  0E02               	movlw	2
  8017  011A7C  6EE6               	movwf	postinc1,c
  8018  011A7E  0E00               	movlw	0
  8019  011A80  6EE6               	movwf	postinc1,c
  8020  011A82  0EED               	movlw	low STR_51
  8021  011A84  6EE6               	movwf	postinc1,c
  8022  011A86  0EFF               	movlw	high STR_51
  8023  011A88  6EE6               	movwf	postinc1,c
  8024                           
  8025                           ;stkvar	_ct @ sp[(-36)+26]
  8026  011A8A  0EF6               	movlw	246
  8027  011A8C  24E1               	addwf	fsr1l,w,c
  8028  011A8E  6E36               	movwf	btemp^0,c
  8029  011A90  0EFF               	movlw	255
  8030  011A92  20E2               	addwfc	fsr1h,w,c
  8031  011A94  6E37               	movwf	(btemp+1)^0,c
  8032  011A96  0060  F0DB  FFE6   	movff	btemp,postinc1
  8033  011A9C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  8034  011AA2  EC48  F0AE         	call	_strncmp	;wreg free
  8035  011AA6  5036               	movf	btemp^0,w,c
  8036  011AA8  1037               	iorwf	(btemp+1)^0,w,c
  8037  011AAA  A4D8               	btfss	status,2,c
  8038  011AAC  D096               	goto	l9968
  8039                           
  8040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8041                           ;stkvar	_fmt @ sp[(-32)+-4]
  8042  011AAE  0EDC               	movlw	-36
  8043  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8044  011AB6  0EDD               	movlw	-35
  8045  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8046  011ABE  006F FF78  F040    	movff	postinc2,btemp+10
  8047  011AC4  006F FF74  F041    	movff	postdec2,btemp+11
  8048  011ACA  0E01               	movlw	1
  8049  011ACC  2640               	addwf	(btemp+10)^0,f,c
  8050  011ACE  0E00               	movlw	0
  8051  011AD0  2241               	addwfc	(btemp+11)^0,f,c
  8052  011AD2  0060  F103  FFF6   	movff	btemp+10,tblptrl
  8053  011AD8  0060  F107  FFF7   	movff	btemp+11,tblptrh
  8054  011ADE                     	if	0	;tblptru may be non-zero
  8055  011ADE                     	endif
  8056  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8057  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  8058  011AE0  6EF8               	movwf	tblptru,c
  8059  011AE2                     	endif
  8060                           
  8061                           ;stkvar	_c @ sp[(-32)+31]
  8062  011AE2  0008               	tblrd		*
  8063  011AE4  0EFF               	movlw	-1
  8064  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  8065  011AEC  0EBF               	movlw	191
  8066  011AEE  6E40               	movwf	(btemp+10)^0,c
  8067  011AF0  0EFF               	movlw	255
  8068  011AF2  6E41               	movwf	(btemp+11)^0,c
  8069                           
  8070                           ;stkvar	_fmt @ sp[(-32)+-4]
  8071  011AF4  0EDC               	movlw	-36
  8072  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8073  011AFC  0EDD               	movlw	-35
  8074  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8075  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  8076  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8077  011B10                     	if	0	;tblptru may be non-zero
  8078  011B10                     	endif
  8079  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8080  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8081  011B12  6EF8               	movwf	tblptru,c
  8082  011B14                     	endif
  8083  011B14  0008               	tblrd		*
  8084  011B16  50F5               	movf	tablat,w,c
  8085  011B18  6E3E               	movwf	(btemp+8)^0,c
  8086  011B1A  6A3F               	clrf	(btemp+9)^0,c
  8087  011B1C  5040               	movf	(btemp+10)^0,w,c
  8088  011B1E  263E               	addwf	(btemp+8)^0,f,c
  8089  011B20  5041               	movf	(btemp+11)^0,w,c
  8090  011B22  223F               	addwfc	(btemp+9)^0,f,c
  8091  011B24  503F               	movf	(btemp+9)^0,w,c
  8092  011B26  E106               	bnz	u10430
  8093  011B28  0E1A               	movlw	26
  8094  011B2A  5C3E               	subwf	(btemp+8)^0,w,c
  8095  011B2C  B0D8               	btfsc	status,0,c
  8096  011B2E  D002               	goto	u10430
  8097  011B30  0E01               	movlw	1
  8098  011B32  D001               	goto	u10440
  8099  011B34                     u10430:
  8100  011B34  0E00               	movlw	0
  8101  011B36                     u10440:
  8102  011B36  6E40               	movwf	(btemp+10)^0,c
  8103  011B38  6A41               	clrf	(btemp+11)^0,c
  8104                           
  8105                           ;stkvar	_vfpfcnvrt$4269 @ sp[(-32)+2]
  8106  011B3A  0EE2               	movlw	-30
  8107  011B3C  0060  F103  FFE3   	movff	btemp+10,plusw1
  8108  011B42  0EE3               	movlw	-29
  8109  011B44  0060  F107  FFE3   	movff	btemp+11,plusw1
  8110                           
  8111                           ;stkvar	_vfpfcnvrt$4269 @ sp[(-32)+2]
  8112  011B4A  0EE2               	movlw	-30
  8113  011B4C  006F FF8C  F036    	movff	plusw1,btemp
  8114  011B52  0EE3               	movlw	-29
  8115  011B54  50E3               	movf	plusw1,w,c
  8116  011B56  1036               	iorwf	btemp^0,w,c
  8117                           
  8118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8119                           ;stkvar	_ap @ sp[(-32)+-6]
  8120                           
  8121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8122                           
  8123                           ;stkvar	_f @ sp[(-32)+22]
  8124                           
  8125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8126                           ;stkvar	_ap @ sp[(-32)+-6]
  8127  011B58  0EDA               	movlw	-38
  8128  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8129  011B60  0EDB               	movlw	-37
  8130  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  8131  011B68  0E04               	movlw	4
  8132  011B6A  5EDE               	subwf	postinc2,f,c
  8133  011B6C  0E00               	movlw	0
  8134  011B6E  5ADD               	subwfb	postdec2,f,c
  8135  011B70  006F FF78  F040    	movff	postinc2,btemp+10
  8136  011B76  006F FF74  F041    	movff	postdec2,btemp+11
  8137  011B7C  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8138  011B82  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8139  011B88  006F FF78  F03E    	movff	postinc2,btemp+8
  8140  011B8E  006F FF78  F03F    	movff	postinc2,btemp+9
  8141  011B94  006F FF78  F040    	movff	postinc2,btemp+10
  8142  011B9A  006F FF78  F041    	movff	postinc2,btemp+11
  8143                           
  8144                           ;stkvar	_f @ sp[(-32)+22]
  8145  011BA0  0EF6               	movlw	-10
  8146  011BA2  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  8147  011BA8  0EF7               	movlw	-9
  8148  011BAA  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  8149  011BB0  0EF8               	movlw	-8
  8150  011BB2  0060  F103  FFE3   	movff	btemp+10,plusw1
  8151  011BB8  0EF9               	movlw	-7
  8152  011BBA  0060  F107  FFE3   	movff	btemp+11,plusw1
  8153                           
  8154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8155                           ;stkvar	_fmt @ sp[(-32)+-4]
  8156  011BC0  0EDC               	movlw	-36
  8157  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8158  011BC8  0EDD               	movlw	-35
  8159  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8160  011BD0  0E02               	movlw	2
  8161  011BD2  26DE               	addwf	postinc2,f,c
  8162  011BD4  0E00               	movlw	0
  8163  011BD6  22DD               	addwfc	postdec2,f,c
  8164  011BD8  D736               	goto	l9944
  8165  011BDA                     l9968:
  8166                           
  8167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8168                           ;stkvar	_fmt @ sp[(-32)+-4]
  8169  011BDA  0EDC               	movlw	-36
  8170  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8171  011BE2  0EDD               	movlw	-35
  8172  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8173  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8174  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8175  011BF6                     	if	0	;tblptru may be non-zero
  8176  011BF6                     	endif
  8177  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8178  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8179  011BF8  6EF8               	movwf	tblptru,c
  8180  011BFA                     	endif
  8181  011BFA  0008               	tblrd		*
  8182  011BFC  50F5               	movf	tablat,w,c
  8183  011BFE  0A73               	xorlw	115
  8184  011C00  A4D8               	btfss	status,2,c
  8185  011C02  D042               	goto	l9978
  8186                           
  8187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8188                           ;stkvar	_fmt @ sp[(-32)+-4]
  8189  011C04  0EDC               	movlw	-36
  8190  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8191  011C0C  0EDD               	movlw	-35
  8192  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8193  011C14  2ADE               	incf	postinc2,f,c
  8194  011C16  0E00               	movlw	0
  8195  011C18  22DD               	addwfc	postdec2,f,c
  8196                           
  8197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8198                           ;stkvar	_ap @ sp[(-32)+-6]
  8199  011C1A  0EDA               	movlw	-38
  8200  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8201  011C22  0EDB               	movlw	-37
  8202  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8203  011C2A  0E02               	movlw	2
  8204  011C2C  5EDE               	subwf	postinc2,f,c
  8205  011C2E  0E00               	movlw	0
  8206  011C30  5ADD               	subwfb	postdec2,f,c
  8207  011C32  006F FF78  F040    	movff	postinc2,btemp+10
  8208  011C38  006F FF74  F041    	movff	postdec2,btemp+11
  8209  011C3E  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8210  011C44  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8211  011C4A  006F FF78  F040    	movff	postinc2,btemp+10
  8212  011C50  006F FF74  F041    	movff	postdec2,btemp+11
  8213                           
  8214                           ;stkvar	_cp @ sp[(-32)+29]
  8215  011C56  0EFE               	movlw	-2
  8216  011C58  0060  F107  FFE3   	movff	btemp+11,plusw1
  8217  011C5E  0EFD               	movlw	-3
  8218  011C60  0060  F103  FFE3   	movff	btemp+10,plusw1
  8219                           
  8220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8221                           ;stkvar	_cp @ sp[(-32)+29]
  8222  011C66  0EFD               	movlw	-3
  8223  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8224  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8225                           
  8226                           ;stkvar	_fp @ sp[(-34)+-2]
  8227  011C74  0EDC               	movlw	-36
  8228  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8229  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8230  011C82  EC4F  F0A9         	call	_stoa	;wreg free
  8231  011C86  D2AF               	goto	l1980
  8232  011C88                     l9978:
  8233                           
  8234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8235                           ;stkvar	_fmt @ sp[(-32)+-4]
  8236  011C88  0EDC               	movlw	-36
  8237  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8238  011C90  0EDD               	movlw	-35
  8239  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8240  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8241  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8242  011CA4                     	if	0	;tblptru may be non-zero
  8243  011CA4                     	endif
  8244  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8245  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8246  011CA6  6EF8               	movwf	tblptru,c
  8247  011CA8                     	endif
  8248  011CA8  0008               	tblrd		*
  8249  011CAA  50F5               	movf	tablat,w,c
  8250  011CAC  0A75               	xorlw	117
  8251  011CAE  A4D8               	btfss	status,2,c
  8252  011CB0  D07C               	goto	l9988
  8253                           
  8254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8255                           ;stkvar	_fmt @ sp[(-32)+-4]
  8256  011CB2  0EDC               	movlw	-36
  8257  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8258  011CBA  0EDD               	movlw	-35
  8259  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8260  011CC2  2ADE               	incf	postinc2,f,c
  8261  011CC4  0E00               	movlw	0
  8262  011CC6  22DD               	addwfc	postdec2,f,c
  8263                           
  8264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8265                           ;stkvar	_ap @ sp[(-32)+-6]
  8266  011CC8  0EDA               	movlw	-38
  8267  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8268  011CD0  0EDB               	movlw	-37
  8269  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8270  011CD8  0E02               	movlw	2
  8271  011CDA  5EDE               	subwf	postinc2,f,c
  8272  011CDC  0E00               	movlw	0
  8273  011CDE  5ADD               	subwfb	postdec2,f,c
  8274  011CE0  006F FF78  F040    	movff	postinc2,btemp+10
  8275  011CE6  006F FF74  F041    	movff	postdec2,btemp+11
  8276  011CEC  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8277  011CF2  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8278  011CF8  006F FF78  F040    	movff	postinc2,btemp+10
  8279  011CFE  006F FF74  F041    	movff	postdec2,btemp+11
  8280  011D04  5040               	movf	(btemp+10)^0,w,c
  8281  011D06  6E46               	movwf	(btemp+16)^0,c
  8282  011D08  5041               	movf	(btemp+11)^0,w,c
  8283  011D0A  6E47               	movwf	(btemp+17)^0,c
  8284  011D0C  6A48               	clrf	(btemp+18)^0,c
  8285  011D0E  6A49               	clrf	(btemp+19)^0,c
  8286  011D10  6A4A               	clrf	(btemp+20)^0,c
  8287  011D12  6A4B               	clrf	(btemp+21)^0,c
  8288  011D14  6A4C               	clrf	(btemp+22)^0,c
  8289  011D16  6A4D               	clrf	(btemp+23)^0,c
  8290                           
  8291                           ;stkvar	_llu @ sp[(-32)+6]
  8292  011D18  0EE6               	movlw	-26
  8293  011D1A  0060  F11B  FFE3   	movff	btemp+16,plusw1
  8294  011D20  0EE7               	movlw	-25
  8295  011D22  0060  F11F  FFE3   	movff	btemp+17,plusw1
  8296  011D28  0EE8               	movlw	-24
  8297  011D2A  0060  F123  FFE3   	movff	btemp+18,plusw1
  8298  011D30  0EE9               	movlw	-23
  8299  011D32  0060  F127  FFE3   	movff	btemp+19,plusw1
  8300  011D38  0EEA               	movlw	-22
  8301  011D3A  0060  F12B  FFE3   	movff	btemp+20,plusw1
  8302  011D40  0EEB               	movlw	-21
  8303  011D42  0060  F12F  FFE3   	movff	btemp+21,plusw1
  8304  011D48  0EEC               	movlw	-20
  8305  011D4A  0060  F133  FFE3   	movff	btemp+22,plusw1
  8306  011D50  0EED               	movlw	-19
  8307  011D52  0060  F137  FFE3   	movff	btemp+23,plusw1
  8308                           
  8309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8310                           ;stkvar	_llu @ sp[(-32)+6]
  8311  011D58  50E1               	movf	fsr1l,w,c
  8312  011D5A  0FE6               	addlw	-26
  8313  011D5C  6ED9               	movwf	fsr2l,c
  8314  011D5E  50E2               	movf	fsr1h,w,c
  8315  011D60  6EDA               	movwf	fsr2h,c
  8316  011D62  0EFF               	movlw	255
  8317  011D64  22DA               	addwfc	fsr2h,f,c
  8318  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8319  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8320  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8321  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8322  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8323  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8324  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8325  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8326                           
  8327                           ;stkvar	_fp @ sp[(-40)+-2]
  8328  011D96  0ED6               	movlw	-42
  8329  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8330  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8331  011DA4  EC39  F0A6         	call	_utoa	;wreg free
  8332  011DA8  D21E               	goto	l1980
  8333  011DAA                     l9988:
  8334                           
  8335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8336  011DAA  0E02               	movlw	2
  8337  011DAC  6EE6               	movwf	postinc1,c
  8338  011DAE  0E00               	movlw	0
  8339  011DB0  6EE6               	movwf	postinc1,c
  8340  011DB2  0EF3               	movlw	low STR_56
  8341  011DB4  6EE6               	movwf	postinc1,c
  8342  011DB6  0EFF               	movlw	high STR_56
  8343  011DB8  6EE6               	movwf	postinc1,c
  8344                           
  8345                           ;stkvar	_fmt @ sp[(-36)+-4]
  8346  011DBA  0ED8               	movlw	-40
  8347  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8348  011DC2  0ED9               	movlw	-39
  8349  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8350  011DCA  006F FF78  F040    	movff	postinc2,btemp+10
  8351  011DD0  006F FF74  F041    	movff	postdec2,btemp+11
  8352  011DD6  0060  F103  FFE6   	movff	btemp+10,postinc1
  8353  011DDC  0060  F107  FFE6   	movff	btemp+11,postinc1
  8354  011DE2  EC48  F0AE         	call	_strncmp	;wreg free
  8355  011DE6  5036               	movf	btemp^0,w,c
  8356  011DE8  1037               	iorwf	(btemp+1)^0,w,c
  8357  011DEA  A4D8               	btfss	status,2,c
  8358  011DEC  D039               	goto	l9998
  8359                           
  8360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8361                           ;stkvar	_fmt @ sp[(-32)+-4]
  8362  011DEE  0EDC               	movlw	-36
  8363  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8364  011DF6  0EDD               	movlw	-35
  8365  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8366  011DFE  0E02               	movlw	2
  8367  011E00  26DE               	addwf	postinc2,f,c
  8368  011E02  0E00               	movlw	0
  8369  011E04  22DD               	addwfc	postdec2,f,c
  8370                           
  8371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8372                           ;stkvar	_ap @ sp[(-32)+-6]
  8373  011E06  0EDA               	movlw	-38
  8374  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8375  011E0E  0EDB               	movlw	-37
  8376  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8377  011E16  0E04               	movlw	4
  8378  011E18  5EDE               	subwf	postinc2,f,c
  8379  011E1A  0E00               	movlw	0
  8380  011E1C  5ADD               	subwfb	postdec2,f,c
  8381  011E1E  006F FF78  F040    	movff	postinc2,btemp+10
  8382  011E24  006F FF74  F041    	movff	postdec2,btemp+11
  8383  011E2A  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8384  011E30  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8385  011E36  006F FF78  F03E    	movff	postinc2,btemp+8
  8386  011E3C  006F FF78  F03F    	movff	postinc2,btemp+9
  8387  011E42  006F FF78  F040    	movff	postinc2,btemp+10
  8388  011E48  006F FF78  F041    	movff	postinc2,btemp+11
  8389  011E4E  503E               	movf	(btemp+8)^0,w,c
  8390  011E50  6E46               	movwf	(btemp+16)^0,c
  8391  011E52  503F               	movf	(btemp+9)^0,w,c
  8392  011E54  6E47               	movwf	(btemp+17)^0,c
  8393  011E56  5040               	movf	(btemp+10)^0,w,c
  8394  011E58  6E48               	movwf	(btemp+18)^0,c
  8395  011E5A  5041               	movf	(btemp+11)^0,w,c
  8396  011E5C  6E49               	movwf	(btemp+19)^0,c
  8397  011E5E  D758               	goto	L5
  8398  011E60                     l9998:
  8399                           
  8400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8401                           ;stkvar	_fmt @ sp[(-32)+-4]
  8402  011E60  0EDC               	movlw	-36
  8403  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8404  011E68  0EDD               	movlw	-35
  8405  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8406  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8407  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8408  011E7C                     	if	0	;tblptru may be non-zero
  8409  011E7C                     	endif
  8410  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8411  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8412  011E7E  6EF8               	movwf	tblptru,c
  8413  011E80                     	endif
  8414  011E80  0008               	tblrd		*
  8415  011E82  50F5               	movf	tablat,w,c
  8416  011E84  0A78               	xorlw	120
  8417  011E86  B4D8               	btfsc	status,2,c
  8418  011E88  D015               	goto	u10500
  8419                           
  8420                           ;stkvar	_fmt @ sp[(-32)+-4]
  8421  011E8A  0EDC               	movlw	-36
  8422  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8423  011E92  0EDD               	movlw	-35
  8424  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8425  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8426  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8427  011EA6                     	if	0	;tblptru may be non-zero
  8428  011EA6                     	endif
  8429  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8430  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8431  011EA8  6EF8               	movwf	tblptru,c
  8432  011EAA                     	endif
  8433  011EAA  0008               	tblrd		*
  8434  011EAC  50F5               	movf	tablat,w,c
  8435  011EAE  0A58               	xorlw	88
  8436  011EB0  A4D8               	btfss	status,2,c
  8437  011EB2  D094               	goto	l10012
  8438  011EB4                     u10500:
  8439                           
  8440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8441                           ;stkvar	_fmt @ sp[(-32)+-4]
  8442  011EB4  0EDC               	movlw	-36
  8443  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8444  011EBC  0EDD               	movlw	-35
  8445  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8446  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8447  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8448  011ED0                     	if	0	;tblptru may be non-zero
  8449  011ED0                     	endif
  8450  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8451  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8452  011ED2  6EF8               	movwf	tblptru,c
  8453  011ED4                     	endif
  8454                           
  8455                           ;stkvar	_c @ sp[(-32)+31]
  8456  011ED4  0008               	tblrd		*
  8457  011ED6  0EFF               	movlw	-1
  8458  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8459                           
  8460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8461                           ;stkvar	_fmt @ sp[(-32)+-4]
  8462  011EDE  0EDC               	movlw	-36
  8463  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8464  011EE6  0EDD               	movlw	-35
  8465  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8466  011EEE  2ADE               	incf	postinc2,f,c
  8467  011EF0  0E00               	movlw	0
  8468  011EF2  22DD               	addwfc	postdec2,f,c
  8469                           
  8470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8471                           ;stkvar	_ap @ sp[(-32)+-6]
  8472  011EF4  0EDA               	movlw	-38
  8473  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8474  011EFC  0EDB               	movlw	-37
  8475  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8476  011F04  0E02               	movlw	2
  8477  011F06  5EDE               	subwf	postinc2,f,c
  8478  011F08  0E00               	movlw	0
  8479  011F0A  5ADD               	subwfb	postdec2,f,c
  8480  011F0C  006F FF78  F040    	movff	postinc2,btemp+10
  8481  011F12  006F FF74  F041    	movff	postdec2,btemp+11
  8482  011F18  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8483  011F1E  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8484  011F24  006F FF78  F040    	movff	postinc2,btemp+10
  8485  011F2A  006F FF74  F041    	movff	postdec2,btemp+11
  8486  011F30  5040               	movf	(btemp+10)^0,w,c
  8487  011F32  6E46               	movwf	(btemp+16)^0,c
  8488  011F34  5041               	movf	(btemp+11)^0,w,c
  8489  011F36  6E47               	movwf	(btemp+17)^0,c
  8490  011F38  6A48               	clrf	(btemp+18)^0,c
  8491  011F3A  6A49               	clrf	(btemp+19)^0,c
  8492  011F3C  6A4A               	clrf	(btemp+20)^0,c
  8493  011F3E  6A4B               	clrf	(btemp+21)^0,c
  8494  011F40  6A4C               	clrf	(btemp+22)^0,c
  8495  011F42  6A4D               	clrf	(btemp+23)^0,c
  8496                           
  8497                           ;stkvar	_llu @ sp[(-32)+6]
  8498  011F44  0EE6               	movlw	-26
  8499  011F46  0060  F11B  FFE3   	movff	btemp+16,plusw1
  8500  011F4C  0EE7               	movlw	-25
  8501  011F4E  0060  F11F  FFE3   	movff	btemp+17,plusw1
  8502  011F54  0EE8               	movlw	-24
  8503  011F56  0060  F123  FFE3   	movff	btemp+18,plusw1
  8504  011F5C  0EE9               	movlw	-23
  8505  011F5E  0060  F127  FFE3   	movff	btemp+19,plusw1
  8506  011F64  0EEA               	movlw	-22
  8507  011F66  0060  F12B  FFE3   	movff	btemp+20,plusw1
  8508  011F6C  0EEB               	movlw	-21
  8509  011F6E  0060  F12F  FFE3   	movff	btemp+21,plusw1
  8510  011F74  0EEC               	movlw	-20
  8511  011F76  0060  F133  FFE3   	movff	btemp+22,plusw1
  8512  011F7C  0EED               	movlw	-19
  8513  011F7E  0060  F137  FFE3   	movff	btemp+23,plusw1
  8514                           
  8515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8516                           ;stkvar	_c @ sp[(-32)+31]
  8517  011F84  0EFF               	movlw	-1
  8518  011F86  50E3               	movf	plusw1,w,c
  8519  011F88  6EE6               	movwf	postinc1,c
  8520                           
  8521                           ;stkvar	_llu @ sp[(-33)+6]
  8522  011F8A  50E1               	movf	fsr1l,w,c
  8523  011F8C  0FE5               	addlw	-27
  8524  011F8E  6ED9               	movwf	fsr2l,c
  8525  011F90  50E2               	movf	fsr1h,w,c
  8526  011F92  6EDA               	movwf	fsr2h,c
  8527  011F94  0EFF               	movlw	255
  8528  011F96  22DA               	addwfc	fsr2h,f,c
  8529  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8530  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8531  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8532  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8533  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8534  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8535  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8536  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8537                           
  8538                           ;stkvar	_fp @ sp[(-41)+-2]
  8539  011FC8  0ED5               	movlw	-43
  8540  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8541  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8542  011FD6  ECA6  F0A2         	call	_xtoa	;wreg free
  8543  011FDA  D105               	goto	l1980
  8544  011FDC                     l10012:
  8545                           
  8546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8547  011FDC  0E02               	movlw	2
  8548  011FDE  6EE6               	movwf	postinc1,c
  8549  011FE0  0E00               	movlw	0
  8550  011FE2  6EE6               	movwf	postinc1,c
  8551  011FE4  0EF6               	movlw	low STR_61
  8552  011FE6  6EE6               	movwf	postinc1,c
  8553  011FE8  0EFF               	movlw	high STR_61
  8554  011FEA  6EE6               	movwf	postinc1,c
  8555                           
  8556                           ;stkvar	_fmt @ sp[(-36)+-4]
  8557  011FEC  0ED8               	movlw	-40
  8558  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8559  011FF4  0ED9               	movlw	-39
  8560  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8561  011FFC  006F FF78  F040    	movff	postinc2,btemp+10
  8562  012002  006F FF74  F041    	movff	postdec2,btemp+11
  8563  012008  0060  F103  FFE6   	movff	btemp+10,postinc1
  8564  01200E  0060  F107  FFE6   	movff	btemp+11,postinc1
  8565  012014  EC48  F0AE         	call	_strncmp	;wreg free
  8566  012018  5036               	movf	btemp^0,w,c
  8567  01201A  1037               	iorwf	(btemp+1)^0,w,c
  8568  01201C  B4D8               	btfsc	status,2,c
  8569  01201E  D022               	goto	u10520
  8570  012020  0E02               	movlw	2
  8571  012022  6EE6               	movwf	postinc1,c
  8572  012024  0E00               	movlw	0
  8573  012026  6EE6               	movwf	postinc1,c
  8574  012028  0EE7               	movlw	low STR_65
  8575  01202A  6EE6               	movwf	postinc1,c
  8576  01202C  0EFF               	movlw	high STR_65
  8577  01202E  6EE6               	movwf	postinc1,c
  8578                           
  8579                           ;stkvar	_fmt @ sp[(-36)+-4]
  8580  012030  0ED8               	movlw	-40
  8581  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8582  012038  0ED9               	movlw	-39
  8583  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8584  012040  006F FF78  F040    	movff	postinc2,btemp+10
  8585  012046  006F FF74  F041    	movff	postdec2,btemp+11
  8586  01204C  0060  F103  FFE6   	movff	btemp+10,postinc1
  8587  012052  0060  F107  FFE6   	movff	btemp+11,postinc1
  8588  012058  EC48  F0AE         	call	_strncmp	;wreg free
  8589  01205C  5036               	movf	btemp^0,w,c
  8590  01205E  1037               	iorwf	(btemp+1)^0,w,c
  8591  012060  A4D8               	btfss	status,2,c
  8592  012062  D058               	goto	l10026
  8593  012064                     u10520:
  8594                           
  8595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8596                           ;stkvar	_fmt @ sp[(-32)+-4]
  8597  012064  0EDC               	movlw	-36
  8598  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8599  01206C  0EDD               	movlw	-35
  8600  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8601  012074  006F FF78  F040    	movff	postinc2,btemp+10
  8602  01207A  006F FF74  F041    	movff	postdec2,btemp+11
  8603  012080  0E01               	movlw	1
  8604  012082  2640               	addwf	(btemp+10)^0,f,c
  8605  012084  0E00               	movlw	0
  8606  012086  2241               	addwfc	(btemp+11)^0,f,c
  8607  012088  0060  F103  FFF6   	movff	btemp+10,tblptrl
  8608  01208E  0060  F107  FFF7   	movff	btemp+11,tblptrh
  8609  012094                     	if	0	;tblptru may be non-zero
  8610  012094                     	endif
  8611  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8612  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8613  012096  6EF8               	movwf	tblptru,c
  8614  012098                     	endif
  8615                           
  8616                           ;stkvar	_c @ sp[(-32)+31]
  8617  012098  0008               	tblrd		*
  8618  01209A  0EFF               	movlw	-1
  8619  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8620                           
  8621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8622                           ;stkvar	_fmt @ sp[(-32)+-4]
  8623  0120A2  0EDC               	movlw	-36
  8624  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8625  0120AA  0EDD               	movlw	-35
  8626  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8627  0120B2  0E02               	movlw	2
  8628  0120B4  26DE               	addwf	postinc2,f,c
  8629  0120B6  0E00               	movlw	0
  8630  0120B8  22DD               	addwfc	postdec2,f,c
  8631                           
  8632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8633                           ;stkvar	_ap @ sp[(-32)+-6]
  8634  0120BA  0EDA               	movlw	-38
  8635  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8636  0120C2  0EDB               	movlw	-37
  8637  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8638  0120CA  0E04               	movlw	4
  8639  0120CC  5EDE               	subwf	postinc2,f,c
  8640  0120CE  0E00               	movlw	0
  8641  0120D0  5ADD               	subwfb	postdec2,f,c
  8642  0120D2  006F FF78  F040    	movff	postinc2,btemp+10
  8643  0120D8  006F FF74  F041    	movff	postdec2,btemp+11
  8644  0120DE  0060  F103  FFD9   	movff	btemp+10,fsr2l
  8645  0120E4  0060  F107  FFDA   	movff	btemp+11,fsr2h
  8646  0120EA  006F FF78  F03E    	movff	postinc2,btemp+8
  8647  0120F0  006F FF78  F03F    	movff	postinc2,btemp+9
  8648  0120F6  006F FF78  F040    	movff	postinc2,btemp+10
  8649  0120FC  006F FF78  F041    	movff	postinc2,btemp+11
  8650  012102  503E               	movf	(btemp+8)^0,w,c
  8651  012104  6E46               	movwf	(btemp+16)^0,c
  8652  012106  503F               	movf	(btemp+9)^0,w,c
  8653  012108  6E47               	movwf	(btemp+17)^0,c
  8654  01210A  5040               	movf	(btemp+10)^0,w,c
  8655  01210C  6E48               	movwf	(btemp+18)^0,c
  8656  01210E  5041               	movf	(btemp+11)^0,w,c
  8657  012110  6E49               	movwf	(btemp+19)^0,c
  8658  012112  D714               	goto	L6
  8659  012114                     l10026:
  8660                           
  8661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8662                           ;stkvar	_fmt @ sp[(-32)+-4]
  8663  012114  0EDC               	movlw	-36
  8664  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8665  01211C  0EDD               	movlw	-35
  8666  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8667  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8668  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8669  012130                     	if	0	;tblptru may be non-zero
  8670  012130                     	endif
  8671  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8672  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8673  012132  6EF8               	movwf	tblptru,c
  8674  012134                     	endif
  8675  012134  0008               	tblrd		*
  8676  012136  50F5               	movf	tablat,w,c
  8677  012138  0A25               	xorlw	37
  8678  01213A  A4D8               	btfss	status,2,c
  8679  01213C  D01A               	goto	l10036
  8680                           
  8681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8682                           ;stkvar	_fmt @ sp[(-32)+-4]
  8683  01213E  0EDC               	movlw	-36
  8684  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8685  012146  0EDD               	movlw	-35
  8686  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8687  01214E  2ADE               	incf	postinc2,f,c
  8688  012150  0E00               	movlw	0
  8689  012152  22DD               	addwfc	postdec2,f,c
  8690                           
  8691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8692                           ;stkvar	_fp @ sp[(-32)+-2]
  8693  012154  0EDE               	movlw	-34
  8694  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8695  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8696  012162  0E25               	movlw	37
  8697  012164  6EE6               	movwf	postinc1,c
  8698  012166  0E00               	movlw	0
  8699  012168  6EE6               	movwf	postinc1,c
  8700  01216A  EC16  F0B7         	call	_fputc	;wreg free
  8701  01216E                     l10032:
  8702                           
  8703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8704  01216E  0E01               	movlw	1
  8705  012170  D00C               	goto	L7
  8706  012172                     l10036:
  8707                           
  8708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8709                           ;stkvar	_fmt @ sp[(-32)+-4]
  8710  012172  0EDC               	movlw	-36
  8711  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8712  01217A  0EDD               	movlw	-35
  8713  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8714  012182  2ADE               	incf	postinc2,f,c
  8715  012184  0E00               	movlw	0
  8716  012186  22DD               	addwfc	postdec2,f,c
  8717                           
  8718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8719  012188  0E00               	movlw	0
  8720  01218A                     L7:
  8721  01218A  6E36               	movwf	btemp^0,c
  8722  01218C  0E00               	movlw	0
  8723  01218E  6E37               	movwf	(btemp+1)^0,c
  8724  012190  D02A               	goto	l1980
  8725  012192                     l10042:
  8726                           
  8727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8728                           ;stkvar	_fp @ sp[(-32)+-2]
  8729  012192  0EDE               	movlw	-34
  8730  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8731  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8732                           
  8733                           ;stkvar	_fmt @ sp[(-34)+-4]
  8734  0121A0  0EDA               	movlw	-38
  8735  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8736  0121A8  0EDB               	movlw	-37
  8737  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8738  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8739  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8740  0121BC                     	if	0	;tblptru may be non-zero
  8741  0121BC                     	endif
  8742  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8743  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8744  0121BE  6EF8               	movwf	tblptru,c
  8745  0121C0                     	endif
  8746  0121C0  0008               	tblrd		*
  8747  0121C2  50F5               	movf	tablat,w,c
  8748  0121C4  6EE6               	movwf	postinc1,c
  8749  0121C6  0E00               	movlw	0
  8750  0121C8  6EE6               	movwf	postinc1,c
  8751  0121CA  EC16  F0B7         	call	_fputc	;wreg free
  8752                           
  8753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8754                           ;stkvar	_fmt @ sp[(-32)+-4]
  8755  0121CE  0EDC               	movlw	-36
  8756  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8757  0121D6  0EDD               	movlw	-35
  8758  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8759  0121DE  2ADE               	incf	postinc2,f,c
  8760  0121E0  0E00               	movlw	0
  8761  0121E2  22DD               	addwfc	postdec2,f,c
  8762  0121E4  D7C4               	goto	l10032
  8763  0121E6                     l1980:
  8764                           
  8765                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8766  0121E6  0EDA               	movlw	218
  8767  0121E8  26E1               	addwf	fsr1l,f,c
  8768  0121EA  0EFF               	movlw	255
  8769  0121EC  22E2               	addwfc	fsr1h,f,c
  8770  0121EE  0012               	return		;funcret
  8771  0121F0                     __end_of_vfpfcnvrt:
  8772                           	opt callstack 0
  8773                           
  8774 ;; *************** function _xtoa *****************
  8775 ;; Defined at:
  8776 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8779 ;;		 -> f(6), NULL(0), 
  8780 ;;  d               8  [STACK] unsigned long long 
  8781 ;;  x               1  [STACK] unsigned char 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  n               8  [STACK] unsigned long long 
  8784 ;;  c               2  [STACK] int 
  8785 ;;  i               2  [STACK] int 
  8786 ;;  w               2  [STACK] int 
  8787 ;;  p               2  [STACK] int 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  2  [STACK] int 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:   11
  8804 ;; This function calls:
  8805 ;;		_isalpha
  8806 ;;		_isupper
  8807 ;;		_pad
  8808 ;;		_toupper
  8809 ;; This function is called by:
  8810 ;;		_vfpfcnvrt
  8811 ;; This function uses a reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text37
  8815  01454C                     __ptext37:
  8816                           	opt callstack 0
  8817  01454C                     _xtoa:
  8818                           	opt callstack 0
  8819                           
  8820                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8821  01454C  0E14               	movlw	20
  8822  01454E  26E1               	addwf	fsr1l,f,c
  8823  014550  0E00               	movlw	0
  8824  014552  22E2               	addwfc	fsr1h,f,c
  8825                           
  8826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8827                           
  8828                           ;incstack = 0
  8829  014554  AE22               	btfss	(_prec+1)^0,7,c
  8830                           
  8831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8832  014556  9223               	bcf	_flags^0,1,c
  8833                           
  8834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8835  014558  BE22               	btfsc	(_prec+1)^0,7,c
  8836  01455A  D005               	goto	u10060
  8837  01455C  5022               	movf	(_prec+1)^0,w,c
  8838  01455E  E110               	bnz	l9778
  8839  014560  0421               	decf	_prec^0,w,c
  8840  014562  B0D8               	btfsc	status,0,c
  8841  014564  D00D               	goto	l9778
  8842  014566                     u10060:
  8843  014566  0E01               	movlw	1
  8844  014568  6E40               	movwf	(btemp+10)^0,c
  8845  01456A  0E00               	movlw	0
  8846  01456C  6E41               	movwf	(btemp+11)^0,c
  8847                           
  8848                           ;stkvar	_p @ sp[(-20)+18]
  8849  01456E  0EFE               	movlw	-2
  8850  014570  0060  F103  FFE3   	movff	btemp+10,plusw1
  8851  014576  0EFF               	movlw	-1
  8852  014578  0060  F107  FFE3   	movff	btemp+11,plusw1
  8853  01457E  D008               	goto	l1930
  8854  014580                     l9778:
  8855                           
  8856                           ;stkvar	_p @ sp[(-20)+18]
  8857  014580  0EFE               	movlw	-2
  8858  014582  0060  F087  FFE3   	movff	_prec,plusw1
  8859  014588  0EFF               	movlw	-1
  8860  01458A  0060  F08B  FFE3   	movff	_prec+1,plusw1
  8861  014590                     l1930:
  8862                           
  8863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8864                           ;stkvar	_w @ sp[(-20)+16]
  8865  014590  0EFC               	movlw	-4
  8866  014592  0060  F07F  FFE3   	movff	_width,plusw1
  8867  014598  0EFD               	movlw	-3
  8868  01459A  0060  F083  FFE3   	movff	_width+1,plusw1
  8869                           
  8870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8871  0145A0  A823               	btfss	_flags^0,4,c
  8872  0145A2  D00B               	goto	l9784
  8873                           
  8874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8875                           ;stkvar	_w @ sp[(-20)+16]
  8876  0145A4  50E1               	movf	fsr1l,w,c
  8877  0145A6  0FFC               	addlw	-4
  8878  0145A8  6ED9               	movwf	fsr2l,c
  8879  0145AA  50E2               	movf	fsr1h,w,c
  8880  0145AC  6EDA               	movwf	fsr2h,c
  8881  0145AE  0EFF               	movlw	255
  8882  0145B0  22DA               	addwfc	fsr2h,f,c
  8883  0145B2  0EFE               	movlw	254
  8884  0145B4  26DE               	addwf	postinc2,f,c
  8885  0145B6  0EFF               	movlw	255
  8886  0145B8  22DD               	addwfc	postdec2,f,c
  8887  0145BA                     l9784:
  8888                           
  8889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8890                           ;stkvar	_d @ sp[(-20)+-10]
  8891  0145BA  0EE2               	movlw	226
  8892  0145BC  24E1               	addwf	fsr1l,w,c
  8893  0145BE  6ED9               	movwf	fsr2l,c
  8894  0145C0  0EFF               	movlw	255
  8895  0145C2  20E2               	addwfc	fsr1h,w,c
  8896  0145C4  6EDA               	movwf	fsr2h,c
  8897                           
  8898                           ;stkvar	_n @ sp[(-20)+4]
  8899  0145C6  0E08               	movlw	8
  8900  0145C8  6E36               	movwf	btemp^0,c
  8901  0145CA  0EF0               	movlw	-16
  8902  0145CC                     us1008999:
  8903  0145CC  006F FF7B FFE3     	movff	postinc2,plusw1
  8904  0145D2  28E8               	incf	wreg,w,c
  8905  0145D4  2E36               	decfsz	btemp^0,f,c
  8906  0145D6  D7FA               	bra	us1008999
  8907                           
  8908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8909  0145D8  0E4F               	movlw	79
  8910  0145DA  6E40               	movwf	(btemp+10)^0,c
  8911  0145DC  0E00               	movlw	0
  8912  0145DE  6E41               	movwf	(btemp+11)^0,c
  8913                           
  8914                           ;stkvar	_i @ sp[(-20)+14]
  8915  0145E0  0EFA               	movlw	-6
  8916  0145E2  0060  F103  FFE3   	movff	btemp+10,plusw1
  8917  0145E8  0EFB               	movlw	-5
  8918  0145EA  0060  F107  FFE3   	movff	btemp+11,plusw1
  8919                           
  8920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8921  0145F0  0102               	movlb	2	; () banked
  8922  0145F2  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8923                           
  8924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8925  0145F4  D0EE               	goto	l9822
  8926  0145F6                     l9790:
  8927                           
  8928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8929                           ;stkvar	_i @ sp[(-20)+14]
  8930  0145F6  50E1               	movf	fsr1l,w,c
  8931  0145F8  0FFA               	addlw	-6
  8932  0145FA  6ED9               	movwf	fsr2l,c
  8933  0145FC  50E2               	movf	fsr1h,w,c
  8934  0145FE  6EDA               	movwf	fsr2h,c
  8935  014600  0EFF               	movlw	255
  8936  014602  22DA               	addwfc	fsr2h,f,c
  8937  014604  06DE               	decf	postinc2,f,c
  8938  014606  0E00               	movlw	0
  8939  014608  5ADD               	subwfb	postdec2,f,c
  8940                           
  8941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8942                           ;stkvar	_n @ sp[(-20)+4]
  8943  01460A  0EF0               	movlw	-16
  8944  01460C  006F FF8C  F040    	movff	plusw1,btemp+10
  8945  014612  0EF1               	movlw	-15
  8946  014614  006F FF8C  F041    	movff	plusw1,btemp+11
  8947  01461A  0E0F               	movlw	15
  8948  01461C  1640               	andwf	(btemp+10)^0,f,c
  8949  01461E  0E00               	movlw	0
  8950  014620  1641               	andwf	(btemp+11)^0,f,c
  8951                           
  8952                           ;stkvar	_c @ sp[(-20)+12]
  8953  014622  0EF8               	movlw	-8
  8954  014624  0060  F103  FFE3   	movff	btemp+10,plusw1
  8955  01462A  0EF9               	movlw	-7
  8956  01462C  0060  F107  FFE3   	movff	btemp+11,plusw1
  8957                           
  8958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8959                           ;stkvar	_c @ sp[(-20)+12]
  8960  014632  0EF9               	movlw	-7
  8961  014634  BEE3               	btfsc	plusw1,7,c
  8962  014636  D00F               	goto	l9798
  8963  014638  0EF9               	movlw	-7
  8964  01463A  50E3               	movf	plusw1,w,c
  8965  01463C  E108               	bnz	u10090
  8966  01463E  0EF8               	movlw	-8
  8967  014640  006F FF8C  F036    	movff	plusw1,btemp
  8968  014646  0E0A               	movlw	10
  8969  014648  5E36               	subwf	btemp^0,f,c
  8970  01464A  A0D8               	btfss	status,0,c
  8971  01464C  D004               	goto	l9798
  8972  01464E                     u10090:
  8973                           
  8974                           ;stkvar	_c @ sp[(-20)+12]
  8975  01464E  0EF8               	movlw	-8
  8976  014650  50E3               	movf	plusw1,w,c
  8977  014652  0F57               	addlw	87
  8978  014654  D003               	goto	L8
  8979  014656                     l9798:
  8980                           
  8981                           ;stkvar	_c @ sp[(-20)+12]
  8982  014656  0EF8               	movlw	-8
  8983  014658  50E3               	movf	plusw1,w,c
  8984  01465A  0F30               	addlw	48
  8985  01465C                     L8:
  8986  01465C  6E40               	movwf	(btemp+10)^0,c
  8987  01465E  0EF9               	movlw	-7
  8988  014660  006F FF8C  F041    	movff	plusw1,btemp+11
  8989  014666  0E00               	movlw	0
  8990  014668  2241               	addwfc	(btemp+11)^0,f,c
  8991                           
  8992                           ;stkvar	_c @ sp[(-20)+12]
  8993  01466A  0EF8               	movlw	-8
  8994  01466C  0060  F103  FFE3   	movff	btemp+10,plusw1
  8995  014672  0EF9               	movlw	-7
  8996  014674  0060  F107  FFE3   	movff	btemp+11,plusw1
  8997  01467A  0EBF               	movlw	191
  8998  01467C  6E40               	movwf	(btemp+10)^0,c
  8999  01467E  0EFF               	movlw	255
  9000  014680  6E41               	movwf	(btemp+11)^0,c
  9001                           
  9002                           ;stkvar	_x @ sp[(-20)+-11]
  9003  014682  0EE1               	movlw	-31
  9004  014684  50E3               	movf	plusw1,w,c
  9005  014686  6E3E               	movwf	(btemp+8)^0,c
  9006  014688  6A3F               	clrf	(btemp+9)^0,c
  9007  01468A  5040               	movf	(btemp+10)^0,w,c
  9008  01468C  263E               	addwf	(btemp+8)^0,f,c
  9009  01468E  5041               	movf	(btemp+11)^0,w,c
  9010  014690  223F               	addwfc	(btemp+9)^0,f,c
  9011  014692  503F               	movf	(btemp+9)^0,w,c
  9012  014694  E106               	bnz	u10100
  9013  014696  0E1A               	movlw	26
  9014  014698  5C3E               	subwf	(btemp+8)^0,w,c
  9015  01469A  B0D8               	btfsc	status,0,c
  9016  01469C  D002               	goto	u10100
  9017  01469E  0E01               	movlw	1
  9018  0146A0  D001               	goto	u10110
  9019  0146A2                     u10100:
  9020  0146A2  0E00               	movlw	0
  9021  0146A4                     u10110:
  9022  0146A4  6E40               	movwf	(btemp+10)^0,c
  9023  0146A6  6A41               	clrf	(btemp+11)^0,c
  9024                           
  9025                           ;stkvar	_xtoa$4242 @ sp[(-20)+2]
  9026  0146A8  0EEE               	movlw	-18
  9027  0146AA  0060  F103  FFE3   	movff	btemp+10,plusw1
  9028  0146B0  0EEF               	movlw	-17
  9029  0146B2  0060  F107  FFE3   	movff	btemp+11,plusw1
  9030                           
  9031                           ;stkvar	_xtoa$4242 @ sp[(-20)+2]
  9032  0146B8  0EEE               	movlw	-18
  9033  0146BA  006F FF8C  F036    	movff	plusw1,btemp
  9034  0146C0  0EEF               	movlw	-17
  9035  0146C2  50E3               	movf	plusw1,w,c
  9036  0146C4  1036               	iorwf	btemp^0,w,c
  9037  0146C6  B4D8               	btfsc	status,2,c
  9038  0146C8  D041               	goto	l9814
  9039  0146CA  0E9F               	movlw	159
  9040  0146CC  6E40               	movwf	(btemp+10)^0,c
  9041  0146CE  0EFF               	movlw	255
  9042  0146D0  6E41               	movwf	(btemp+11)^0,c
  9043                           
  9044                           ;stkvar	_c @ sp[(-20)+12]
  9045  0146D2  0EF8               	movlw	-8
  9046  0146D4  006F FF8C  F03E    	movff	plusw1,btemp+8
  9047  0146DA  0EF9               	movlw	-7
  9048  0146DC  006F FF8C  F03F    	movff	plusw1,btemp+9
  9049  0146E2  0E20               	movlw	32
  9050  0146E4  123E               	iorwf	(btemp+8)^0,f,c
  9051  0146E6  0E00               	movlw	0
  9052  0146E8  123F               	iorwf	(btemp+9)^0,f,c
  9053  0146EA  5040               	movf	(btemp+10)^0,w,c
  9054  0146EC  263E               	addwf	(btemp+8)^0,f,c
  9055  0146EE  5041               	movf	(btemp+11)^0,w,c
  9056  0146F0  223F               	addwfc	(btemp+9)^0,f,c
  9057  0146F2  503F               	movf	(btemp+9)^0,w,c
  9058  0146F4  E106               	bnz	u10130
  9059  0146F6  0E1A               	movlw	26
  9060  0146F8  5C3E               	subwf	(btemp+8)^0,w,c
  9061  0146FA  B0D8               	btfsc	status,0,c
  9062  0146FC  D002               	goto	u10130
  9063  0146FE  0E01               	movlw	1
  9064  014700  D001               	goto	u10140
  9065  014702                     u10130:
  9066  014702  0E00               	movlw	0
  9067  014704                     u10140:
  9068  014704  6E40               	movwf	(btemp+10)^0,c
  9069  014706  6A41               	clrf	(btemp+11)^0,c
  9070                           
  9071                           ;stkvar	_xtoa$4243 @ sp[(-20)+0]
  9072  014708  0EEC               	movlw	-20
  9073  01470A  0060  F103  FFE3   	movff	btemp+10,plusw1
  9074  014710  0EED               	movlw	-19
  9075  014712  0060  F107  FFE3   	movff	btemp+11,plusw1
  9076                           
  9077                           ;stkvar	_xtoa$4243 @ sp[(-20)+0]
  9078  014718  0EEC               	movlw	-20
  9079  01471A  006F FF8C  F036    	movff	plusw1,btemp
  9080  014720  0EED               	movlw	-19
  9081  014722  50E3               	movf	plusw1,w,c
  9082  014724  1036               	iorwf	btemp^0,w,c
  9083  014726  B4D8               	btfsc	status,2,c
  9084  014728  D011               	goto	l9814
  9085                           
  9086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9087                           ;stkvar	_c @ sp[(-20)+12]
  9088  01472A  0EF8               	movlw	-8
  9089  01472C  006F FF8F FFE6     	movff	plusw1,postinc1
  9090  014732  006F FF8F FFE6     	movff	plusw1,postinc1
  9091  014738  EC3C  F0BE         	call	_toupper	;wreg free
  9092                           
  9093                           ;stkvar	_c @ sp[(-20)+12]
  9094  01473C  0EF8               	movlw	-8
  9095  01473E  0060  F0DB  FFE3   	movff	btemp,plusw1
  9096  014744  0EF9               	movlw	-7
  9097  014746  0060  F0DF  FFE3   	movff	btemp+1,plusw1
  9098  01474C                     l9814:
  9099                           
  9100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9101                           ;stkvar	_c @ sp[(-20)+12]
  9102                           ;stkvar	_i @ sp[(-20)+14]
  9103  01474C  0EFA               	movlw	-6
  9104  01474E  006F FF8C  F040    	movff	plusw1,btemp+10
  9105  014754  0EFB               	movlw	-5
  9106  014756  006F FF8C  F041    	movff	plusw1,btemp+11
  9107  01475C  0EAC               	movlw	low _dbuf
  9108  01475E  2440               	addwf	(btemp+10)^0,w,c
  9109  014760  6ED9               	movwf	fsr2l,c
  9110  014762  0E02               	movlw	high _dbuf
  9111  014764  2041               	addwfc	(btemp+11)^0,w,c
  9112  014766  6EDA               	movwf	fsr2h,c
  9113  014768  0EF8               	movlw	-8
  9114  01476A  006F FF8F FFDF     	movff	plusw1,indf2
  9115                           
  9116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9117                           ;stkvar	_p @ sp[(-20)+18]
  9118  014770  50E1               	movf	fsr1l,w,c
  9119  014772  0FFE               	addlw	-2
  9120  014774  6ED9               	movwf	fsr2l,c
  9121  014776  50E2               	movf	fsr1h,w,c
  9122  014778  6EDA               	movwf	fsr2h,c
  9123  01477A  0EFF               	movlw	255
  9124  01477C  22DA               	addwfc	fsr2h,f,c
  9125  01477E  06DE               	decf	postinc2,f,c
  9126  014780  0E00               	movlw	0
  9127  014782  5ADD               	subwfb	postdec2,f,c
  9128                           
  9129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9130                           ;stkvar	_w @ sp[(-20)+16]
  9131  014784  50E1               	movf	fsr1l,w,c
  9132  014786  0FFC               	addlw	-4
  9133  014788  6ED9               	movwf	fsr2l,c
  9134  01478A  50E2               	movf	fsr1h,w,c
  9135  01478C  6EDA               	movwf	fsr2h,c
  9136  01478E  0EFF               	movlw	255
  9137  014790  22DA               	addwfc	fsr2h,f,c
  9138  014792  06DE               	decf	postinc2,f,c
  9139  014794  0E00               	movlw	0
  9140  014796  5ADD               	subwfb	postdec2,f,c
  9141                           
  9142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9143  014798  0E04               	movlw	4
  9144  01479A  6E41               	movwf	(btemp+11)^0,c
  9145                           
  9146                           ;stkvar	_n @ sp[(-20)+4]
  9147  01479C  50E1               	movf	fsr1l,w,c
  9148  01479E  0FF0               	addlw	-16
  9149  0147A0  6ED9               	movwf	fsr2l,c
  9150  0147A2  50E2               	movf	fsr1h,w,c
  9151  0147A4  6EDA               	movwf	fsr2h,c
  9152  0147A6  0EFF               	movlw	255
  9153  0147A8  22DA               	addwfc	fsr2h,f,c
  9154  0147AA  2841               	incf	(btemp+11)^0,w,c
  9155  0147AC  52DE               	movf	postinc2,f,c
  9156  0147AE  D00F               	goto	u10160
  9157  0147B0                     u10165:
  9158  0147B0  52DE               	movf	postinc2,f,c
  9159  0147B2  52DE               	movf	postinc2,f,c
  9160  0147B4  52DE               	movf	postinc2,f,c
  9161  0147B6  52DE               	movf	postinc2,f,c
  9162  0147B8  52DE               	movf	postinc2,f,c
  9163  0147BA  52DE               	movf	postinc2,f,c
  9164  0147BC  90D8               	bcf	status,0,c
  9165  0147BE  32DD               	rrcf	postdec2,f,c
  9166  0147C0  32DD               	rrcf	postdec2,f,c
  9167  0147C2  32DD               	rrcf	postdec2,f,c
  9168  0147C4  32DD               	rrcf	postdec2,f,c
  9169  0147C6  32DD               	rrcf	postdec2,f,c
  9170  0147C8  32DD               	rrcf	postdec2,f,c
  9171  0147CA  32DD               	rrcf	postdec2,f,c
  9172  0147CC  32DE               	rrcf	postinc2,f,c
  9173  0147CE                     u10160:
  9174  0147CE  2EE8               	decfsz	wreg,f,c
  9175  0147D0  D7EF               	goto	u10165
  9176  0147D2                     l9822:
  9177                           
  9178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9179                           ;stkvar	_i @ sp[(-20)+14]
  9180  0147D2  0EFB               	movlw	-5
  9181  0147D4  BEE3               	btfsc	plusw1,7,c
  9182  0147D6  D03A               	goto	u10210
  9183  0147D8  0EFB               	movlw	-5
  9184  0147DA  50E3               	movf	plusw1,w,c
  9185  0147DC  E108               	bnz	u10170
  9186  0147DE  0EFA               	movlw	-6
  9187  0147E0  006F FF8C  F036    	movff	plusw1,btemp
  9188  0147E6  0E02               	movlw	2
  9189  0147E8  5E36               	subwf	btemp^0,f,c
  9190  0147EA  A0D8               	btfss	status,0,c
  9191  0147EC  D02F               	goto	u10210
  9192  0147EE                     u10170:
  9193                           
  9194                           ;stkvar	_n @ sp[(-20)+4]
  9195  0147EE  0EF0               	movlw	-16
  9196  0147F0  50E3               	movf	plusw1,w,c
  9197  0147F2  E115               	bnz	u10181
  9198  0147F4  0EF1               	movlw	-15
  9199  0147F6  50E3               	movf	plusw1,w,c
  9200  0147F8  E112               	bnz	u10181
  9201  0147FA  0EF2               	movlw	-14
  9202  0147FC  50E3               	movf	plusw1,w,c
  9203  0147FE  E10F               	bnz	u10181
  9204  014800  0EF3               	movlw	-13
  9205  014802  50E3               	movf	plusw1,w,c
  9206  014804  E10C               	bnz	u10181
  9207  014806  0EF4               	movlw	-12
  9208  014808  50E3               	movf	plusw1,w,c
  9209  01480A  E109               	bnz	u10181
  9210  01480C  0EF5               	movlw	-11
  9211  01480E  50E3               	movf	plusw1,w,c
  9212  014810  E106               	bnz	u10181
  9213  014812  0EF6               	movlw	-10
  9214  014814  50E3               	movf	plusw1,w,c
  9215  014816  E103               	bnz	u10181
  9216  014818  0EF7               	movlw	-9
  9217  01481A  50E3               	movf	plusw1,w,c
  9218  01481C  A4D8               	btfss	status,2,c
  9219  01481E                     u10181:
  9220  01481E  D6EB               	goto	l9790
  9221                           
  9222                           ;stkvar	_p @ sp[(-20)+18]
  9223  014820  0EFF               	movlw	-1
  9224  014822  BEE3               	btfsc	plusw1,7,c
  9225  014824  D007               	goto	u10190
  9226  014826  0EFF               	movlw	-1
  9227  014828  50E3               	movf	plusw1,w,c
  9228  01482A  E103               	bnz	u10191
  9229  01482C  0EFE               	movlw	-2
  9230  01482E  04E3               	decf	plusw1,w,c
  9231  014830  B0D8               	btfsc	status,0,c
  9232  014832                     u10191:
  9233  014832  D6E1               	goto	l9790
  9234  014834                     u10190:
  9235                           
  9236                           ;stkvar	_w @ sp[(-20)+16]
  9237  014834  0EFD               	movlw	-3
  9238  014836  BEE3               	btfsc	plusw1,7,c
  9239  014838  D009               	goto	u10210
  9240  01483A  0EFD               	movlw	-3
  9241  01483C  50E3               	movf	plusw1,w,c
  9242  01483E  E104               	bnz	u10200
  9243  014840  0EFC               	movlw	-4
  9244  014842  04E3               	decf	plusw1,w,c
  9245  014844  A0D8               	btfss	status,0,c
  9246  014846  D002               	goto	u10210
  9247  014848                     u10200:
  9248  014848  B223               	btfsc	_flags^0,1,c
  9249  01484A  D6D5               	goto	l9790
  9250  01484C                     u10210:
  9251                           
  9252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9253  01484C  A823               	btfss	_flags^0,4,c
  9254  01484E  D036               	goto	l9838
  9255                           
  9256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9257                           ;stkvar	_i @ sp[(-20)+14]
  9258  014850  50E1               	movf	fsr1l,w,c
  9259  014852  0FFA               	addlw	-6
  9260  014854  6ED9               	movwf	fsr2l,c
  9261  014856  50E2               	movf	fsr1h,w,c
  9262  014858  6EDA               	movwf	fsr2h,c
  9263  01485A  0EFF               	movlw	255
  9264  01485C  22DA               	addwfc	fsr2h,f,c
  9265  01485E  06DE               	decf	postinc2,f,c
  9266  014860  0E00               	movlw	0
  9267  014862  5ADD               	subwfb	postdec2,f,c
  9268                           
  9269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9270                           ;stkvar	_x @ sp[(-20)+-11]
  9271                           ;stkvar	_i @ sp[(-20)+14]
  9272  014864  0EFA               	movlw	-6
  9273  014866  006F FF8C  F040    	movff	plusw1,btemp+10
  9274  01486C  0EFB               	movlw	-5
  9275  01486E  006F FF8C  F041    	movff	plusw1,btemp+11
  9276  014874  0EAC               	movlw	low _dbuf
  9277  014876  2440               	addwf	(btemp+10)^0,w,c
  9278  014878  6ED9               	movwf	fsr2l,c
  9279  01487A  0E02               	movlw	high _dbuf
  9280  01487C  2041               	addwfc	(btemp+11)^0,w,c
  9281  01487E  6EDA               	movwf	fsr2h,c
  9282  014880  0EE1               	movlw	-31
  9283  014882  006F FF8F FFDF     	movff	plusw1,indf2
  9284                           
  9285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9286                           ;stkvar	_i @ sp[(-20)+14]
  9287  014888  50E1               	movf	fsr1l,w,c
  9288  01488A  0FFA               	addlw	-6
  9289  01488C  6ED9               	movwf	fsr2l,c
  9290  01488E  50E2               	movf	fsr1h,w,c
  9291  014890  6EDA               	movwf	fsr2h,c
  9292  014892  0EFF               	movlw	255
  9293  014894  22DA               	addwfc	fsr2h,f,c
  9294  014896  06DE               	decf	postinc2,f,c
  9295  014898  0E00               	movlw	0
  9296  01489A  5ADD               	subwfb	postdec2,f,c
  9297                           
  9298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9299                           ;stkvar	_i @ sp[(-20)+14]
  9300  01489C  0EFA               	movlw	-6
  9301  01489E  006F FF8C  F040    	movff	plusw1,btemp+10
  9302  0148A4  0EFB               	movlw	-5
  9303  0148A6  006F FF8C  F041    	movff	plusw1,btemp+11
  9304  0148AC  0EAC               	movlw	low _dbuf
  9305  0148AE  2440               	addwf	(btemp+10)^0,w,c
  9306  0148B0  6ED9               	movwf	fsr2l,c
  9307  0148B2  0E02               	movlw	high _dbuf
  9308  0148B4  2041               	addwfc	(btemp+11)^0,w,c
  9309  0148B6  6EDA               	movwf	fsr2h,c
  9310  0148B8  0E30               	movlw	48
  9311  0148BA  6EDF               	movwf	indf2,c
  9312  0148BC                     l9838:
  9313                           
  9314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9315                           ;stkvar	_w @ sp[(-20)+16]
  9316  0148BC  0EFC               	movlw	-4
  9317  0148BE  006F FF8F FFE6     	movff	plusw1,postinc1
  9318  0148C4  006F FF8F FFE6     	movff	plusw1,postinc1
  9319                           
  9320                           ;stkvar	_i @ sp[(-22)+14]
  9321  0148CA  0EAC               	movlw	low _dbuf
  9322  0148CC  6E40               	movwf	(btemp+10)^0,c
  9323  0148CE  0E02               	movlw	high _dbuf
  9324  0148D0  6E41               	movwf	(btemp+11)^0,c
  9325  0148D2  0EF8               	movlw	-8
  9326  0148D4  50E3               	movf	plusw1,w,c
  9327  0148D6  2640               	addwf	(btemp+10)^0,f,c
  9328  0148D8  0EF9               	movlw	-7
  9329  0148DA  50E3               	movf	plusw1,w,c
  9330  0148DC  2241               	addwfc	(btemp+11)^0,f,c
  9331  0148DE  0060  F103  FFE6   	movff	btemp+10,postinc1
  9332  0148E4  0060  F107  FFE6   	movff	btemp+11,postinc1
  9333                           
  9334                           ;stkvar	_fp @ sp[(-24)+-2]
  9335  0148EA  0EE6               	movlw	-26
  9336  0148EC  006F FF8F FFE6     	movff	plusw1,postinc1
  9337  0148F2  006F FF8F FFE6     	movff	plusw1,postinc1
  9338  0148F8  EC34  F0B8         	call	_pad	;wreg free
  9339                           
  9340                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9341  0148FC  0EE1               	movlw	225
  9342  0148FE  26E1               	addwf	fsr1l,f,c
  9343  014900  0EFF               	movlw	255
  9344  014902  22E2               	addwfc	fsr1h,f,c
  9345  014904  0012               	return		;funcret
  9346  014906                     __end_of_xtoa:
  9347                           	opt callstack 0
  9348                           
  9349 ;; *************** function _toupper *****************
  9350 ;; Defined at:
  9351 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  c               2  [STACK] int 
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  2  [STACK] int 
  9358 ;; Registers used:
  9359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/2
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;Total ram usage:        0 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; Hardware stack levels required when called:    7
  9372 ;; This function calls:
  9373 ;;		_islower
  9374 ;; This function is called by:
  9375 ;;		_xtoa
  9376 ;; This function uses a reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text38
  9380  017C78                     __ptext38:
  9381                           	opt callstack 0
  9382  017C78                     _toupper:
  9383                           	opt callstack 0
  9384                           
  9385                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9386  017C78  52E6               	movf	postinc1,f,c
  9387  017C7A  52E6               	movf	postinc1,f,c
  9388                           
  9389                           ;stkvar	_c @ sp[(-2)+-2]
  9390                           
  9391                           ;incstack = 0
  9392  017C7C  0EFC               	movlw	-4
  9393  017C7E  50E3               	movf	plusw1,w,c
  9394  017C80  0F9F               	addlw	159
  9395  017C82  6E40               	movwf	(btemp+10)^0,c
  9396  017C84  0EFD               	movlw	-3
  9397  017C86  006F FF8C  F041    	movff	plusw1,btemp+11
  9398  017C8C  0EFF               	movlw	255
  9399  017C8E  2241               	addwfc	(btemp+11)^0,f,c
  9400  017C90  5041               	movf	(btemp+11)^0,w,c
  9401  017C92  E106               	bnz	u5390
  9402  017C94  0E1A               	movlw	26
  9403  017C96  5C40               	subwf	(btemp+10)^0,w,c
  9404  017C98  B0D8               	btfsc	status,0,c
  9405  017C9A  D002               	goto	u5390
  9406  017C9C  0E01               	movlw	1
  9407  017C9E  D001               	goto	u5400
  9408  017CA0                     u5390:
  9409  017CA0  0E00               	movlw	0
  9410  017CA2                     u5400:
  9411  017CA2  6E40               	movwf	(btemp+10)^0,c
  9412  017CA4  6A41               	clrf	(btemp+11)^0,c
  9413                           
  9414                           ;stkvar	_toupper$4927 @ sp[(-2)+0]
  9415  017CA6  0EFE               	movlw	-2
  9416  017CA8  0060  F103  FFE3   	movff	btemp+10,plusw1
  9417  017CAE  0EFF               	movlw	-1
  9418  017CB0  0060  F107  FFE3   	movff	btemp+11,plusw1
  9419                           
  9420                           ;stkvar	_toupper$4927 @ sp[(-2)+0]
  9421  017CB6  0EFE               	movlw	-2
  9422  017CB8  006F FF8C  F036    	movff	plusw1,btemp
  9423  017CBE  0EFF               	movlw	-1
  9424  017CC0  50E3               	movf	plusw1,w,c
  9425  017CC2  1036               	iorwf	btemp^0,w,c
  9426  017CC4  B4D8               	btfsc	status,2,c
  9427  017CC6  D00D               	goto	l6480
  9428                           
  9429                           ;stkvar	_c @ sp[(-2)+-2]
  9430  017CC8  0EFC               	movlw	-4
  9431  017CCA  006F FF8C  F036    	movff	plusw1,btemp
  9432  017CD0  0EFD               	movlw	-3
  9433  017CD2  006F FF8C  F037    	movff	plusw1,btemp+1
  9434  017CD8  0E5F               	movlw	95
  9435  017CDA  1636               	andwf	btemp^0,f,c
  9436  017CDC  0E00               	movlw	0
  9437  017CDE  1637               	andwf	(btemp+1)^0,f,c
  9438  017CE0  D008               	goto	l2871
  9439  017CE2                     l6480:
  9440                           
  9441                           ;stkvar	_c @ sp[(-2)+-2]
  9442  017CE2  0EFC               	movlw	-4
  9443  017CE4  006F FF8C  F036    	movff	plusw1,btemp
  9444  017CEA  0EFD               	movlw	-3
  9445  017CEC  006F FF8C  F037    	movff	plusw1,btemp+1
  9446  017CF2                     l2871:
  9447                           
  9448                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9449  017CF2  52E5               	movf	postdec1,f,c
  9450  017CF4  52E5               	movf	postdec1,f,c
  9451  017CF6  52E5               	movf	postdec1,f,c
  9452  017CF8  52E5               	movf	postdec1,f,c
  9453  017CFA  0012               	return		;funcret
  9454  017CFC                     __end_of_toupper:
  9455                           	opt callstack 0
  9456                           
  9457 ;; *************** function _islower *****************
  9458 ;; Defined at:
  9459 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  c               2  [STACK] int 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  2  [STACK] int 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9477 ;;Total ram usage:        0 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    6
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_toupper
  9484 ;; This function uses a reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text39
  9488  0187AC                     __ptext39:
  9489                           	opt callstack 0
  9490  0187AC                     _islower:
  9491                           	opt callstack 16
  9492                           
  9493                           ;stkvar	_c @ sp[(0)+-2]
  9494                           
  9495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9496                           ;incstack = 0
  9497  0187AC  0EFE               	movlw	-2
  9498  0187AE  50E3               	movf	plusw1,w,c
  9499  0187B0  0F9F               	addlw	159
  9500  0187B2  6E40               	movwf	(btemp+10)^0,c
  9501  0187B4  0EFF               	movlw	-1
  9502  0187B6  006F FF8C  F041    	movff	plusw1,btemp+11
  9503  0187BC  0EFF               	movlw	255
  9504  0187BE  2241               	addwfc	(btemp+11)^0,f,c
  9505  0187C0  5041               	movf	(btemp+11)^0,w,c
  9506  0187C2  E106               	bnz	u5080
  9507  0187C4  0E1A               	movlw	26
  9508  0187C6  5C40               	subwf	(btemp+10)^0,w,c
  9509  0187C8  B0D8               	btfsc	status,0,c
  9510  0187CA  D002               	goto	u5080
  9511  0187CC  0E01               	movlw	1
  9512  0187CE  D001               	goto	u5090
  9513  0187D0                     u5080:
  9514  0187D0  0E00               	movlw	0
  9515  0187D2                     u5090:
  9516  0187D2  6E36               	movwf	btemp^0,c
  9517  0187D4  6A37               	clrf	(btemp+1)^0,c
  9518                           
  9519                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9520  0187D6  52E5               	movf	postdec1,f,c
  9521  0187D8  52E5               	movf	postdec1,f,c
  9522  0187DA  0012               	return		;funcret
  9523  0187DC                     __end_of_islower:
  9524                           	opt callstack 0
  9525                           
  9526 ;; *************** function _isalpha *****************
  9527 ;; Defined at:
  9528 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  c               2  [STACK] int 
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  2  [STACK] int 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9546 ;;Total ram usage:        0 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    6
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_xtoa
  9553 ;; This function uses a reentrant model
  9554 ;;
  9555                           
  9556                           	psect	text40
  9557  01855E                     __ptext40:
  9558                           	opt callstack 0
  9559  01855E                     _isalpha:
  9560                           	opt callstack 17
  9561                           
  9562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9563                           ;incstack = 0
  9564  01855E  0E9F               	movlw	159
  9565  018560  6E40               	movwf	(btemp+10)^0,c
  9566  018562  0EFF               	movlw	255
  9567  018564  6E41               	movwf	(btemp+11)^0,c
  9568                           
  9569                           ;stkvar	_c @ sp[(0)+-2]
  9570  018566  0EFE               	movlw	-2
  9571  018568  006F FF8C  F03E    	movff	plusw1,btemp+8
  9572  01856E  0EFF               	movlw	-1
  9573  018570  006F FF8C  F03F    	movff	plusw1,btemp+9
  9574  018576  0E20               	movlw	32
  9575  018578  123E               	iorwf	(btemp+8)^0,f,c
  9576  01857A  0E00               	movlw	0
  9577  01857C  123F               	iorwf	(btemp+9)^0,f,c
  9578  01857E  5040               	movf	(btemp+10)^0,w,c
  9579  018580  263E               	addwf	(btemp+8)^0,f,c
  9580  018582  5041               	movf	(btemp+11)^0,w,c
  9581  018584  223F               	addwfc	(btemp+9)^0,f,c
  9582  018586  503F               	movf	(btemp+9)^0,w,c
  9583  018588  E106               	bnz	u5370
  9584  01858A  0E1A               	movlw	26
  9585  01858C  5C3E               	subwf	(btemp+8)^0,w,c
  9586  01858E  B0D8               	btfsc	status,0,c
  9587  018590  D002               	goto	u5370
  9588  018592  0E01               	movlw	1
  9589  018594  D001               	goto	u5380
  9590  018596                     u5370:
  9591  018596  0E00               	movlw	0
  9592  018598                     u5380:
  9593  018598  6E36               	movwf	btemp^0,c
  9594  01859A  6A37               	clrf	(btemp+1)^0,c
  9595                           
  9596                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9597  01859C  52E5               	movf	postdec1,f,c
  9598  01859E  52E5               	movf	postdec1,f,c
  9599  0185A0  0012               	return		;funcret
  9600  0185A2                     __end_of_isalpha:
  9601                           	opt callstack 0
  9602                           
  9603 ;; *************** function _utoa *****************
  9604 ;; Defined at:
  9605 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9608 ;;		 -> f(6), NULL(0), 
  9609 ;;  d               8  [STACK] unsigned long long 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  n               8  [STACK] unsigned long long 
  9612 ;;  i               2  [STACK] int 
  9613 ;;  w               2  [STACK] int 
  9614 ;;  p               2  [STACK] int 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  2  [STACK] int 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:   11
  9631 ;; This function calls:
  9632 ;;		___lodiv
  9633 ;;		___lomod
  9634 ;;		_pad
  9635 ;; This function is called by:
  9636 ;;		_vfpfcnvrt
  9637 ;; This function uses a reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text41
  9641  014C72                     __ptext41:
  9642                           	opt callstack 0
  9643  014C72                     _utoa:
  9644                           	opt callstack 0
  9645                           
  9646                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9647  014C72  0E0E               	movlw	14
  9648  014C74  26E1               	addwf	fsr1l,f,c
  9649  014C76  0E00               	movlw	0
  9650  014C78  22E2               	addwfc	fsr1h,f,c
  9651                           
  9652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9653                           
  9654                           ;incstack = 0
  9655  014C7A  AE22               	btfss	(_prec+1)^0,7,c
  9656                           
  9657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9658  014C7C  9223               	bcf	_flags^0,1,c
  9659                           
  9660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9661  014C7E  BE22               	btfsc	(_prec+1)^0,7,c
  9662  014C80  D005               	goto	u9980
  9663  014C82  5022               	movf	(_prec+1)^0,w,c
  9664  014C84  E110               	bnz	l9738
  9665  014C86  0421               	decf	_prec^0,w,c
  9666  014C88  B0D8               	btfsc	status,0,c
  9667  014C8A  D00D               	goto	l9738
  9668  014C8C                     u9980:
  9669  014C8C  0E01               	movlw	1
  9670  014C8E  6E40               	movwf	(btemp+10)^0,c
  9671  014C90  0E00               	movlw	0
  9672  014C92  6E41               	movwf	(btemp+11)^0,c
  9673                           
  9674                           ;stkvar	_p @ sp[(-14)+12]
  9675  014C94  0EFE               	movlw	-2
  9676  014C96  0060  F103  FFE3   	movff	btemp+10,plusw1
  9677  014C9C  0EFF               	movlw	-1
  9678  014C9E  0060  F107  FFE3   	movff	btemp+11,plusw1
  9679  014CA4  D008               	goto	l1915
  9680  014CA6                     l9738:
  9681                           
  9682                           ;stkvar	_p @ sp[(-14)+12]
  9683  014CA6  0EFE               	movlw	-2
  9684  014CA8  0060  F087  FFE3   	movff	_prec,plusw1
  9685  014CAE  0EFF               	movlw	-1
  9686  014CB0  0060  F08B  FFE3   	movff	_prec+1,plusw1
  9687  014CB6                     l1915:
  9688                           
  9689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9690                           ;stkvar	_w @ sp[(-14)+10]
  9691  014CB6  0EFC               	movlw	-4
  9692  014CB8  0060  F07F  FFE3   	movff	_width,plusw1
  9693  014CBE  0EFD               	movlw	-3
  9694  014CC0  0060  F083  FFE3   	movff	_width+1,plusw1
  9695                           
  9696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9697                           ;stkvar	_d @ sp[(-14)+-10]
  9698  014CC6  0EE8               	movlw	232
  9699  014CC8  24E1               	addwf	fsr1l,w,c
  9700  014CCA  6ED9               	movwf	fsr2l,c
  9701  014CCC  0EFF               	movlw	255
  9702  014CCE  20E2               	addwfc	fsr1h,w,c
  9703  014CD0  6EDA               	movwf	fsr2h,c
  9704                           
  9705                           ;stkvar	_n @ sp[(-14)+0]
  9706  014CD2  0E08               	movlw	8
  9707  014CD4  6E36               	movwf	btemp^0,c
  9708  014CD6  0EF2               	movlw	-14
  9709  014CD8                     us999999:
  9710  014CD8  006F FF7B FFE3     	movff	postinc2,plusw1
  9711  014CDE  28E8               	incf	wreg,w,c
  9712  014CE0  2E36               	decfsz	btemp^0,f,c
  9713  014CE2  D7FA               	bra	us999999
  9714                           
  9715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9716  014CE4  0E4F               	movlw	79
  9717  014CE6  6E40               	movwf	(btemp+10)^0,c
  9718  014CE8  0E00               	movlw	0
  9719  014CEA  6E41               	movwf	(btemp+11)^0,c
  9720                           
  9721                           ;stkvar	_i @ sp[(-14)+8]
  9722  014CEC  0EFA               	movlw	-6
  9723  014CEE  0060  F103  FFE3   	movff	btemp+10,plusw1
  9724  014CF4  0EFB               	movlw	-5
  9725  014CF6  0060  F107  FFE3   	movff	btemp+11,plusw1
  9726                           
  9727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9728  014CFC  0102               	movlb	2	; () banked
  9729  014CFE  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9730                           
  9731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9732  014D00  D0FB               	goto	l9756
  9733  014D02                     l9746:
  9734                           
  9735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9736                           ;stkvar	_i @ sp[(-14)+8]
  9737  014D02  50E1               	movf	fsr1l,w,c
  9738  014D04  0FFA               	addlw	-6
  9739  014D06  6ED9               	movwf	fsr2l,c
  9740  014D08  50E2               	movf	fsr1h,w,c
  9741  014D0A  6EDA               	movwf	fsr2h,c
  9742  014D0C  0EFF               	movlw	255
  9743  014D0E  22DA               	addwfc	fsr2h,f,c
  9744  014D10  06DE               	decf	postinc2,f,c
  9745  014D12  0E00               	movlw	0
  9746  014D14  5ADD               	subwfb	postdec2,f,c
  9747                           
  9748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9749  014D16  0E0A               	movlw	10
  9750  014D18  6EE6               	movwf	postinc1,c
  9751  014D1A  0E00               	movlw	0
  9752  014D1C  6EE6               	movwf	postinc1,c
  9753  014D1E  0E00               	movlw	0
  9754  014D20  6EE6               	movwf	postinc1,c
  9755  014D22  0E00               	movlw	0
  9756  014D24  6EE6               	movwf	postinc1,c
  9757  014D26  0E00               	movlw	0
  9758  014D28  6EE6               	movwf	postinc1,c
  9759  014D2A  0E00               	movlw	0
  9760  014D2C  6EE6               	movwf	postinc1,c
  9761  014D2E  0E00               	movlw	0
  9762  014D30  6EE6               	movwf	postinc1,c
  9763  014D32  0E00               	movlw	0
  9764  014D34  6EE6               	movwf	postinc1,c
  9765                           
  9766                           ;stkvar	_n @ sp[(-22)+0]
  9767  014D36  50E1               	movf	fsr1l,w,c
  9768  014D38  0FEA               	addlw	-22
  9769  014D3A  6ED9               	movwf	fsr2l,c
  9770  014D3C  50E2               	movf	fsr1h,w,c
  9771  014D3E  6EDA               	movwf	fsr2h,c
  9772  014D40  0EFF               	movlw	255
  9773  014D42  22DA               	addwfc	fsr2h,f,c
  9774  014D44  006F FF7B FFE6     	movff	postinc2,postinc1
  9775  014D4A  006F FF7B FFE6     	movff	postinc2,postinc1
  9776  014D50  006F FF7B FFE6     	movff	postinc2,postinc1
  9777  014D56  006F FF7B FFE6     	movff	postinc2,postinc1
  9778  014D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  9779  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
  9780  014D68  006F FF7B FFE6     	movff	postinc2,postinc1
  9781  014D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9782  014D74  ECDF  F0B5         	call	___lomod	;wreg free
  9783  014D78  52E5               	movf	postdec1,f,c
  9784  014D7A  006F FF9C  F04D    	movff	indf1,btemp+23
  9785  014D80  52E5               	movf	postdec1,f,c
  9786  014D82  006F FF9C  F04C    	movff	indf1,btemp+22
  9787  014D88  52E5               	movf	postdec1,f,c
  9788  014D8A  006F FF9C  F04B    	movff	indf1,btemp+21
  9789  014D90  52E5               	movf	postdec1,f,c
  9790  014D92  006F FF9C  F04A    	movff	indf1,btemp+20
  9791  014D98  52E5               	movf	postdec1,f,c
  9792  014D9A  006F FF9C  F049    	movff	indf1,btemp+19
  9793  014DA0  52E5               	movf	postdec1,f,c
  9794  014DA2  006F FF9C  F048    	movff	indf1,btemp+18
  9795  014DA8  52E5               	movf	postdec1,f,c
  9796  014DAA  006F FF9C  F047    	movff	indf1,btemp+17
  9797  014DB0  52E5               	movf	postdec1,f,c
  9798  014DB2  006F FF9C  F046    	movff	indf1,btemp+16
  9799  014DB8  0EF8               	movlw	248
  9800  014DBA  26E1               	addwf	fsr1l,f,c
  9801  014DBC  0EFF               	movlw	255
  9802  014DBE  22E2               	addwfc	fsr1h,f,c
  9803  014DC0  0E30               	movlw	48
  9804  014DC2  2646               	addwf	(btemp+16)^0,f,c
  9805                           
  9806                           ;stkvar	_i @ sp[(-14)+8]
  9807  014DC4  0EFA               	movlw	-6
  9808  014DC6  006F FF8C  F040    	movff	plusw1,btemp+10
  9809  014DCC  0EFB               	movlw	-5
  9810  014DCE  006F FF8C  F041    	movff	plusw1,btemp+11
  9811  014DD4  0EAC               	movlw	low _dbuf
  9812  014DD6  2440               	addwf	(btemp+10)^0,w,c
  9813  014DD8  6ED9               	movwf	fsr2l,c
  9814  014DDA  0E02               	movlw	high _dbuf
  9815  014DDC  2041               	addwfc	(btemp+11)^0,w,c
  9816  014DDE  6EDA               	movwf	fsr2h,c
  9817  014DE0  0060  F11B  FFDF   	movff	btemp+16,indf2
  9818                           
  9819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9820                           ;stkvar	_p @ sp[(-14)+12]
  9821  014DE6  50E1               	movf	fsr1l,w,c
  9822  014DE8  0FFE               	addlw	-2
  9823  014DEA  6ED9               	movwf	fsr2l,c
  9824  014DEC  50E2               	movf	fsr1h,w,c
  9825  014DEE  6EDA               	movwf	fsr2h,c
  9826  014DF0  0EFF               	movlw	255
  9827  014DF2  22DA               	addwfc	fsr2h,f,c
  9828  014DF4  06DE               	decf	postinc2,f,c
  9829  014DF6  0E00               	movlw	0
  9830  014DF8  5ADD               	subwfb	postdec2,f,c
  9831                           
  9832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9833                           ;stkvar	_w @ sp[(-14)+10]
  9834  014DFA  50E1               	movf	fsr1l,w,c
  9835  014DFC  0FFC               	addlw	-4
  9836  014DFE  6ED9               	movwf	fsr2l,c
  9837  014E00  50E2               	movf	fsr1h,w,c
  9838  014E02  6EDA               	movwf	fsr2h,c
  9839  014E04  0EFF               	movlw	255
  9840  014E06  22DA               	addwfc	fsr2h,f,c
  9841  014E08  06DE               	decf	postinc2,f,c
  9842  014E0A  0E00               	movlw	0
  9843  014E0C  5ADD               	subwfb	postdec2,f,c
  9844                           
  9845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9846  014E0E  0E0A               	movlw	10
  9847  014E10  6EE6               	movwf	postinc1,c
  9848  014E12  0E00               	movlw	0
  9849  014E14  6EE6               	movwf	postinc1,c
  9850  014E16  0E00               	movlw	0
  9851  014E18  6EE6               	movwf	postinc1,c
  9852  014E1A  0E00               	movlw	0
  9853  014E1C  6EE6               	movwf	postinc1,c
  9854  014E1E  0E00               	movlw	0
  9855  014E20  6EE6               	movwf	postinc1,c
  9856  014E22  0E00               	movlw	0
  9857  014E24  6EE6               	movwf	postinc1,c
  9858  014E26  0E00               	movlw	0
  9859  014E28  6EE6               	movwf	postinc1,c
  9860  014E2A  0E00               	movlw	0
  9861  014E2C  6EE6               	movwf	postinc1,c
  9862                           
  9863                           ;stkvar	_n @ sp[(-22)+0]
  9864  014E2E  50E1               	movf	fsr1l,w,c
  9865  014E30  0FEA               	addlw	-22
  9866  014E32  6ED9               	movwf	fsr2l,c
  9867  014E34  50E2               	movf	fsr1h,w,c
  9868  014E36  6EDA               	movwf	fsr2h,c
  9869  014E38  0EFF               	movlw	255
  9870  014E3A  22DA               	addwfc	fsr2h,f,c
  9871  014E3C  006F FF7B FFE6     	movff	postinc2,postinc1
  9872  014E42  006F FF7B FFE6     	movff	postinc2,postinc1
  9873  014E48  006F FF7B FFE6     	movff	postinc2,postinc1
  9874  014E4E  006F FF7B FFE6     	movff	postinc2,postinc1
  9875  014E54  006F FF7B FFE6     	movff	postinc2,postinc1
  9876  014E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  9877  014E60  006F FF7B FFE6     	movff	postinc2,postinc1
  9878  014E66  006F FF7B FFE6     	movff	postinc2,postinc1
  9879  014E6C  EC0E  F0B3         	call	___lodiv	;wreg free
  9880  014E70  52E5               	movf	postdec1,f,c
  9881  014E72  006F FF9C  F04D    	movff	indf1,btemp+23
  9882  014E78  52E5               	movf	postdec1,f,c
  9883  014E7A  006F FF9C  F04C    	movff	indf1,btemp+22
  9884  014E80  52E5               	movf	postdec1,f,c
  9885  014E82  006F FF9C  F04B    	movff	indf1,btemp+21
  9886  014E88  52E5               	movf	postdec1,f,c
  9887  014E8A  006F FF9C  F04A    	movff	indf1,btemp+20
  9888  014E90  52E5               	movf	postdec1,f,c
  9889  014E92  006F FF9C  F049    	movff	indf1,btemp+19
  9890  014E98  52E5               	movf	postdec1,f,c
  9891  014E9A  006F FF9C  F048    	movff	indf1,btemp+18
  9892  014EA0  52E5               	movf	postdec1,f,c
  9893  014EA2  006F FF9C  F047    	movff	indf1,btemp+17
  9894  014EA8  52E5               	movf	postdec1,f,c
  9895  014EAA  006F FF9C  F046    	movff	indf1,btemp+16
  9896  014EB0  0EF8               	movlw	248
  9897  014EB2  26E1               	addwf	fsr1l,f,c
  9898  014EB4  0EFF               	movlw	255
  9899  014EB6  22E2               	addwfc	fsr1h,f,c
  9900                           
  9901                           ;stkvar	_n @ sp[(-14)+0]
  9902  014EB8  0EF2               	movlw	-14
  9903  014EBA  0060  F11B  FFE3   	movff	btemp+16,plusw1
  9904  014EC0  0EF3               	movlw	-13
  9905  014EC2  0060  F11F  FFE3   	movff	btemp+17,plusw1
  9906  014EC8  0EF4               	movlw	-12
  9907  014ECA  0060  F123  FFE3   	movff	btemp+18,plusw1
  9908  014ED0  0EF5               	movlw	-11
  9909  014ED2  0060  F127  FFE3   	movff	btemp+19,plusw1
  9910  014ED8  0EF6               	movlw	-10
  9911  014EDA  0060  F12B  FFE3   	movff	btemp+20,plusw1
  9912  014EE0  0EF7               	movlw	-9
  9913  014EE2  0060  F12F  FFE3   	movff	btemp+21,plusw1
  9914  014EE8  0EF8               	movlw	-8
  9915  014EEA  0060  F133  FFE3   	movff	btemp+22,plusw1
  9916  014EF0  0EF9               	movlw	-7
  9917  014EF2  0060  F137  FFE3   	movff	btemp+23,plusw1
  9918  014EF8                     l9756:
  9919                           
  9920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9921                           ;stkvar	_i @ sp[(-14)+8]
  9922  014EF8  0EFA               	movlw	-6
  9923  014EFA  006F FF8C  F036    	movff	plusw1,btemp
  9924  014F00  0EFB               	movlw	-5
  9925  014F02  50E3               	movf	plusw1,w,c
  9926  014F04  1036               	iorwf	btemp^0,w,c
  9927  014F06  B4D8               	btfsc	status,2,c
  9928  014F08  D02F               	goto	u10040
  9929                           
  9930                           ;stkvar	_n @ sp[(-14)+0]
  9931  014F0A  0EF2               	movlw	-14
  9932  014F0C  50E3               	movf	plusw1,w,c
  9933  014F0E  E115               	bnz	u10011
  9934  014F10  0EF3               	movlw	-13
  9935  014F12  50E3               	movf	plusw1,w,c
  9936  014F14  E112               	bnz	u10011
  9937  014F16  0EF4               	movlw	-12
  9938  014F18  50E3               	movf	plusw1,w,c
  9939  014F1A  E10F               	bnz	u10011
  9940  014F1C  0EF5               	movlw	-11
  9941  014F1E  50E3               	movf	plusw1,w,c
  9942  014F20  E10C               	bnz	u10011
  9943  014F22  0EF6               	movlw	-10
  9944  014F24  50E3               	movf	plusw1,w,c
  9945  014F26  E109               	bnz	u10011
  9946  014F28  0EF7               	movlw	-9
  9947  014F2A  50E3               	movf	plusw1,w,c
  9948  014F2C  E106               	bnz	u10011
  9949  014F2E  0EF8               	movlw	-8
  9950  014F30  50E3               	movf	plusw1,w,c
  9951  014F32  E103               	bnz	u10011
  9952  014F34  0EF9               	movlw	-7
  9953  014F36  50E3               	movf	plusw1,w,c
  9954  014F38  A4D8               	btfss	status,2,c
  9955  014F3A                     u10011:
  9956  014F3A  D6E3               	goto	l9746
  9957                           
  9958                           ;stkvar	_p @ sp[(-14)+12]
  9959  014F3C  0EFF               	movlw	-1
  9960  014F3E  BEE3               	btfsc	plusw1,7,c
  9961  014F40  D007               	goto	u10020
  9962  014F42  0EFF               	movlw	-1
  9963  014F44  50E3               	movf	plusw1,w,c
  9964  014F46  E103               	bnz	u10021
  9965  014F48  0EFE               	movlw	-2
  9966  014F4A  04E3               	decf	plusw1,w,c
  9967  014F4C  B0D8               	btfsc	status,0,c
  9968  014F4E                     u10021:
  9969  014F4E  D6D9               	goto	l9746
  9970  014F50                     u10020:
  9971                           
  9972                           ;stkvar	_w @ sp[(-14)+10]
  9973  014F50  0EFD               	movlw	-3
  9974  014F52  BEE3               	btfsc	plusw1,7,c
  9975  014F54  D009               	goto	u10040
  9976  014F56  0EFD               	movlw	-3
  9977  014F58  50E3               	movf	plusw1,w,c
  9978  014F5A  E104               	bnz	u10030
  9979  014F5C  0EFC               	movlw	-4
  9980  014F5E  04E3               	decf	plusw1,w,c
  9981  014F60  A0D8               	btfss	status,0,c
  9982  014F62  D002               	goto	u10040
  9983  014F64                     u10030:
  9984  014F64  B223               	btfsc	_flags^0,1,c
  9985  014F66  D6CD               	goto	l9746
  9986  014F68                     u10040:
  9987                           
  9988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  9989                           ;stkvar	_w @ sp[(-14)+10]
  9990  014F68  0EFC               	movlw	-4
  9991  014F6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9992  014F70  006F FF8F FFE6     	movff	plusw1,postinc1
  9993                           
  9994                           ;stkvar	_i @ sp[(-16)+8]
  9995  014F76  0EAC               	movlw	low _dbuf
  9996  014F78  6E40               	movwf	(btemp+10)^0,c
  9997  014F7A  0E02               	movlw	high _dbuf
  9998  014F7C  6E41               	movwf	(btemp+11)^0,c
  9999  014F7E  0EF8               	movlw	-8
 10000  014F80  50E3               	movf	plusw1,w,c
 10001  014F82  2640               	addwf	(btemp+10)^0,f,c
 10002  014F84  0EF9               	movlw	-7
 10003  014F86  50E3               	movf	plusw1,w,c
 10004  014F88  2241               	addwfc	(btemp+11)^0,f,c
 10005  014F8A  0060  F103  FFE6   	movff	btemp+10,postinc1
 10006  014F90  0060  F107  FFE6   	movff	btemp+11,postinc1
 10007                           
 10008                           ;stkvar	_fp @ sp[(-18)+-2]
 10009  014F96  0EEC               	movlw	-20
 10010  014F98  006F FF8F FFE6     	movff	plusw1,postinc1
 10011  014F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10012  014FA4  EC34  F0B8         	call	_pad	;wreg free
 10013                           
 10014                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10015  014FA8  0EE8               	movlw	232
 10016  014FAA  26E1               	addwf	fsr1l,f,c
 10017  014FAC  0EFF               	movlw	255
 10018  014FAE  22E2               	addwfc	fsr1h,f,c
 10019  014FB0  0012               	return		;funcret
 10020  014FB2                     __end_of_utoa:
 10021                           	opt callstack 0
 10022                           
 10023 ;; *************** function ___lomod *****************
 10024 ;; Defined at:
 10025 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  dividend        8  [STACK] unsigned long long 
 10028 ;;  divisor         8  [STACK] unsigned long long 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  counter         1  [STACK] unsigned char 
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  8  [STACK] unsigned long long 
 10033 ;; Registers used:
 10034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/2
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;Total ram usage:        0 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:    6
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_utoa
 10051 ;; This function uses a reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text42
 10055  016BBE                     __ptext42:
 10056                           	opt callstack 0
 10057  016BBE                     ___lomod:
 10058                           	opt callstack 0
 10059                           
 10060                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10061  016BBE  52E6               	movf	postinc1,f,c
 10062                           
 10063                           ;stkvar	_divisor @ sp[(-1)+-16]
 10064                           
 10065                           ;incstack = 0
 10066  016BC0  0EEF               	movlw	-17
 10067  016BC2  50E3               	movf	plusw1,w,c
 10068  016BC4  E116               	bnz	u6520
 10069  016BC6  0EF0               	movlw	-16
 10070  016BC8  50E3               	movf	plusw1,w,c
 10071  016BCA  E113               	bnz	u6520
 10072  016BCC  0EF1               	movlw	-15
 10073  016BCE  50E3               	movf	plusw1,w,c
 10074  016BD0  E110               	bnz	u6520
 10075  016BD2  0EF2               	movlw	-14
 10076  016BD4  50E3               	movf	plusw1,w,c
 10077  016BD6  E10D               	bnz	u6520
 10078  016BD8  0EF3               	movlw	-13
 10079  016BDA  50E3               	movf	plusw1,w,c
 10080  016BDC  E10A               	bnz	u6520
 10081  016BDE  0EF4               	movlw	-12
 10082  016BE0  50E3               	movf	plusw1,w,c
 10083  016BE2  E107               	bnz	u6520
 10084  016BE4  0EF5               	movlw	-11
 10085  016BE6  50E3               	movf	plusw1,w,c
 10086  016BE8  E104               	bnz	u6520
 10087  016BEA  0EF6               	movlw	-10
 10088  016BEC  50E3               	movf	plusw1,w,c
 10089  016BEE  B4D8               	btfsc	status,2,c
 10090  016BF0  D075               	goto	u6550
 10091  016BF2                     u6520:
 10092                           
 10093                           ;stkvar	_counter @ sp[(-1)+0]
 10094  016BF2  0EFF               	movlw	-1
 10095  016BF4  6AE3               	clrf	plusw1,c
 10096  016BF6  D012               	goto	L9
 10097  016BF8                     l7090:
 10098                           
 10099                           ;stkvar	_divisor @ sp[(-1)+-16]
 10100  016BF8  90D8               	bcf	status,0,c
 10101  016BFA  0EEF               	movlw	-17
 10102  016BFC  36E3               	rlcf	plusw1,f,c
 10103  016BFE  0EF0               	movlw	-16
 10104  016C00  36E3               	rlcf	plusw1,f,c
 10105  016C02  0EF1               	movlw	-15
 10106  016C04  36E3               	rlcf	plusw1,f,c
 10107  016C06  0EF2               	movlw	-14
 10108  016C08  36E3               	rlcf	plusw1,f,c
 10109  016C0A  0EF3               	movlw	-13
 10110  016C0C  36E3               	rlcf	plusw1,f,c
 10111  016C0E  0EF4               	movlw	-12
 10112  016C10  36E3               	rlcf	plusw1,f,c
 10113  016C12  0EF5               	movlw	-11
 10114  016C14  36E3               	rlcf	plusw1,f,c
 10115  016C16  0EF6               	movlw	-10
 10116  016C18  36E3               	rlcf	plusw1,f,c
 10117                           
 10118                           ;stkvar	_counter @ sp[(-1)+0]
 10119  016C1A  0EFF               	movlw	-1
 10120  016C1C                     L9:
 10121  016C1C  2AE3               	incf	plusw1,f,c
 10122                           
 10123                           ;stkvar	_divisor @ sp[(-1)+-16]
 10124  016C1E  0EF6               	movlw	-10
 10125  016C20  AEE3               	btfss	plusw1,7,c
 10126  016C22  D7EA               	goto	l7090
 10127  016C24                     u6530:
 10128                           
 10129                           ;stkvar	_divisor @ sp[(-1)+-16]
 10130                           ;stkvar	_dividend @ sp[(-1)+-8]
 10131  016C24  50E1               	movf	fsr1l,w,c
 10132  016C26  0FF7               	addlw	-9
 10133  016C28  6ED9               	movwf	fsr2l,c
 10134  016C2A  50E2               	movf	fsr1h,w,c
 10135  016C2C  6EDA               	movwf	fsr2h,c
 10136  016C2E  0EFF               	movlw	255
 10137  016C30  22DA               	addwfc	fsr2h,f,c
 10138  016C32  0EEF               	movlw	-17
 10139  016C34  50E3               	movf	plusw1,w,c
 10140  016C36  5CDE               	subwf	postinc2,w,c
 10141  016C38  0EF0               	movlw	-16
 10142  016C3A  50E3               	movf	plusw1,w,c
 10143  016C3C  58DE               	subwfb	postinc2,w,c
 10144  016C3E  0EF1               	movlw	-15
 10145  016C40  50E3               	movf	plusw1,w,c
 10146  016C42  58DE               	subwfb	postinc2,w,c
 10147  016C44  0EF2               	movlw	-14
 10148  016C46  50E3               	movf	plusw1,w,c
 10149  016C48  58DE               	subwfb	postinc2,w,c
 10150  016C4A  0EF3               	movlw	-13
 10151  016C4C  50E3               	movf	plusw1,w,c
 10152  016C4E  58DE               	subwfb	postinc2,w,c
 10153  016C50  0EF4               	movlw	-12
 10154  016C52  50E3               	movf	plusw1,w,c
 10155  016C54  58DE               	subwfb	postinc2,w,c
 10156  016C56  0EF5               	movlw	-11
 10157  016C58  50E3               	movf	plusw1,w,c
 10158  016C5A  58DE               	subwfb	postinc2,w,c
 10159  016C5C  0EF6               	movlw	-10
 10160  016C5E  50E3               	movf	plusw1,w,c
 10161  016C60  58DE               	subwfb	postinc2,w,c
 10162  016C62  A0D8               	btfss	status,0,c
 10163  016C64  D01F               	goto	l7098
 10164                           
 10165                           ;stkvar	_divisor @ sp[(-1)+-16]
 10166                           ;stkvar	_dividend @ sp[(-1)+-8]
 10167  016C66  50E1               	movf	fsr1l,w,c
 10168  016C68  0FF7               	addlw	-9
 10169  016C6A  6ED9               	movwf	fsr2l,c
 10170  016C6C  50E2               	movf	fsr1h,w,c
 10171  016C6E  6EDA               	movwf	fsr2h,c
 10172  016C70  0EFF               	movlw	255
 10173  016C72  22DA               	addwfc	fsr2h,f,c
 10174  016C74  0EEF               	movlw	-17
 10175  016C76  50E3               	movf	plusw1,w,c
 10176  016C78  5EDE               	subwf	postinc2,f,c
 10177  016C7A  0EF0               	movlw	-16
 10178  016C7C  50E3               	movf	plusw1,w,c
 10179  016C7E  5ADE               	subwfb	postinc2,f,c
 10180  016C80  0EF1               	movlw	-15
 10181  016C82  50E3               	movf	plusw1,w,c
 10182  016C84  5ADE               	subwfb	postinc2,f,c
 10183  016C86  0EF2               	movlw	-14
 10184  016C88  50E3               	movf	plusw1,w,c
 10185  016C8A  5ADE               	subwfb	postinc2,f,c
 10186  016C8C  0EF3               	movlw	-13
 10187  016C8E  50E3               	movf	plusw1,w,c
 10188  016C90  5ADE               	subwfb	postinc2,f,c
 10189  016C92  0EF4               	movlw	-12
 10190  016C94  50E3               	movf	plusw1,w,c
 10191  016C96  5ADE               	subwfb	postinc2,f,c
 10192  016C98  0EF5               	movlw	-11
 10193  016C9A  50E3               	movf	plusw1,w,c
 10194  016C9C  5ADE               	subwfb	postinc2,f,c
 10195  016C9E  0EF6               	movlw	-10
 10196  016CA0  50E3               	movf	plusw1,w,c
 10197  016CA2  5ADE               	subwfb	postinc2,f,c
 10198  016CA4                     l7098:
 10199                           
 10200                           ;stkvar	_divisor @ sp[(-1)+-16]
 10201  016CA4  90D8               	bcf	status,0,c
 10202  016CA6  0EF6               	movlw	-10
 10203  016CA8  32E3               	rrcf	plusw1,f,c
 10204  016CAA  0EF5               	movlw	-11
 10205  016CAC  32E3               	rrcf	plusw1,f,c
 10206  016CAE  0EF4               	movlw	-12
 10207  016CB0  32E3               	rrcf	plusw1,f,c
 10208  016CB2  0EF3               	movlw	-13
 10209  016CB4  32E3               	rrcf	plusw1,f,c
 10210  016CB6  0EF2               	movlw	-14
 10211  016CB8  32E3               	rrcf	plusw1,f,c
 10212  016CBA  0EF1               	movlw	-15
 10213  016CBC  32E3               	rrcf	plusw1,f,c
 10214  016CBE  0EF0               	movlw	-16
 10215  016CC0  32E3               	rrcf	plusw1,f,c
 10216  016CC2  0EEF               	movlw	-17
 10217  016CC4  32E3               	rrcf	plusw1,f,c
 10218                           
 10219                           ;stkvar	_counter @ sp[(-1)+0]
 10220  016CC6  0EFF               	movlw	-1
 10221  016CC8  50E3               	movf	plusw1,w,c
 10222  016CCA  6E36               	movwf	btemp^0,c
 10223  016CCC  0E01               	movlw	1
 10224  016CCE  5E36               	subwf	btemp^0,f,c
 10225  016CD0  0EFF               	movlw	-1
 10226  016CD2  0060  F0DB  FFE3   	movff	btemp,plusw1
 10227  016CD8  A4D8               	btfss	status,2,c
 10228  016CDA  D7A4               	goto	u6530
 10229  016CDC                     u6550:
 10230                           
 10231                           ;stkvar	_dividend @ sp[(-1)+-8]
 10232  016CDC  0EF7               	movlw	247
 10233  016CDE  24E1               	addwf	fsr1l,w,c
 10234  016CE0  6ED9               	movwf	fsr2l,c
 10235  016CE2  0EFF               	movlw	255
 10236  016CE4  20E2               	addwfc	fsr1h,w,c
 10237  016CE6  6EDA               	movwf	fsr2h,c
 10238                           
 10239                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10240  016CE8  0E08               	movlw	8
 10241  016CEA  6E36               	movwf	btemp^0,c
 10242  016CEC  0EF7               	movlw	-9
 10243  016CEE                     us656999:
 10244  016CEE  006F FF7B FFE3     	movff	postinc2,plusw1
 10245  016CF4  28E8               	incf	wreg,w,c
 10246  016CF6  2E36               	decfsz	btemp^0,f,c
 10247  016CF8  D7FA               	bra	us656999
 10248                           
 10249                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10250  016CFA  52E5               	movf	postdec1,f,c
 10251  016CFC  0012               	return		;funcret
 10252  016CFE                     __end_of___lomod:
 10253                           	opt callstack 0
 10254                           
 10255 ;; *************** function ___lodiv *****************
 10256 ;; Defined at:
 10257 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  dividend        8  [STACK] unsigned long long 
 10260 ;;  divisor         8  [STACK] unsigned long long 
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;  quotient        8  [STACK] unsigned long long 
 10263 ;;  counter         1  [STACK] unsigned char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  8  [STACK] unsigned long long 
 10266 ;; Registers used:
 10267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/2
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10277 ;;Total ram usage:        0 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    6
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_utoa
 10284 ;; This function uses a reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text43
 10288  01661C                     __ptext43:
 10289                           	opt callstack 0
 10290  01661C                     ___lodiv:
 10291                           	opt callstack 0
 10292                           
 10293                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10294  01661C  0E09               	movlw	9
 10295  01661E  26E1               	addwf	fsr1l,f,c
 10296  016620  0E00               	movlw	0
 10297  016622  22E2               	addwfc	fsr1h,f,c
 10298                           
 10299                           ;stkvar	_quotient @ sp[(-9)+0]
 10300                           
 10301                           ;incstack = 0
 10302  016624  0E07               	movlw	7
 10303  016626  6E36               	movwf	btemp^0,c
 10304  016628  0EF7               	movlw	-9
 10305  01662A                     u6461:
 10306  01662A  6AE3               	clrf	plusw1,c
 10307  01662C  2AE8               	incf	wreg,f,c
 10308  01662E  0636               	decf	btemp^0,f,c
 10309  016630  E2FC               	bc	u6461
 10310                           
 10311                           ;stkvar	_divisor @ sp[(-9)+-16]
 10312  016632  0EE7               	movlw	-25
 10313  016634  50E3               	movf	plusw1,w,c
 10314  016636  E116               	bnz	u6470
 10315  016638  0EE8               	movlw	-24
 10316  01663A  50E3               	movf	plusw1,w,c
 10317  01663C  E113               	bnz	u6470
 10318  01663E  0EE9               	movlw	-23
 10319  016640  50E3               	movf	plusw1,w,c
 10320  016642  E110               	bnz	u6470
 10321  016644  0EEA               	movlw	-22
 10322  016646  50E3               	movf	plusw1,w,c
 10323  016648  E10D               	bnz	u6470
 10324  01664A  0EEB               	movlw	-21
 10325  01664C  50E3               	movf	plusw1,w,c
 10326  01664E  E10A               	bnz	u6470
 10327  016650  0EEC               	movlw	-20
 10328  016652  50E3               	movf	plusw1,w,c
 10329  016654  E107               	bnz	u6470
 10330  016656  0EED               	movlw	-19
 10331  016658  50E3               	movf	plusw1,w,c
 10332  01665A  E104               	bnz	u6470
 10333  01665C  0EEE               	movlw	-18
 10334  01665E  50E3               	movf	plusw1,w,c
 10335  016660  B4D8               	btfsc	status,2,c
 10336  016662  D088               	goto	u6500
 10337  016664                     u6470:
 10338                           
 10339                           ;stkvar	_counter @ sp[(-9)+8]
 10340  016664  0EFF               	movlw	-1
 10341  016666  6AE3               	clrf	plusw1,c
 10342  016668  D012               	goto	L10
 10343  01666A                     l7066:
 10344                           
 10345                           ;stkvar	_divisor @ sp[(-9)+-16]
 10346  01666A  90D8               	bcf	status,0,c
 10347  01666C  0EE7               	movlw	-25
 10348  01666E  36E3               	rlcf	plusw1,f,c
 10349  016670  0EE8               	movlw	-24
 10350  016672  36E3               	rlcf	plusw1,f,c
 10351  016674  0EE9               	movlw	-23
 10352  016676  36E3               	rlcf	plusw1,f,c
 10353  016678  0EEA               	movlw	-22
 10354  01667A  36E3               	rlcf	plusw1,f,c
 10355  01667C  0EEB               	movlw	-21
 10356  01667E  36E3               	rlcf	plusw1,f,c
 10357  016680  0EEC               	movlw	-20
 10358  016682  36E3               	rlcf	plusw1,f,c
 10359  016684  0EED               	movlw	-19
 10360  016686  36E3               	rlcf	plusw1,f,c
 10361  016688  0EEE               	movlw	-18
 10362  01668A  36E3               	rlcf	plusw1,f,c
 10363                           
 10364                           ;stkvar	_counter @ sp[(-9)+8]
 10365  01668C  0EFF               	movlw	-1
 10366  01668E                     L10:
 10367  01668E  2AE3               	incf	plusw1,f,c
 10368                           
 10369                           ;stkvar	_divisor @ sp[(-9)+-16]
 10370  016690  0EEE               	movlw	-18
 10371  016692  AEE3               	btfss	plusw1,7,c
 10372  016694  D7EA               	goto	l7066
 10373  016696                     u6480:
 10374                           
 10375                           ;stkvar	_quotient @ sp[(-9)+0]
 10376  016696  90D8               	bcf	status,0,c
 10377  016698  0EF7               	movlw	-9
 10378  01669A  36E3               	rlcf	plusw1,f,c
 10379  01669C  0EF8               	movlw	-8
 10380  01669E  36E3               	rlcf	plusw1,f,c
 10381  0166A0  0EF9               	movlw	-7
 10382  0166A2  36E3               	rlcf	plusw1,f,c
 10383  0166A4  0EFA               	movlw	-6
 10384  0166A6  36E3               	rlcf	plusw1,f,c
 10385  0166A8  0EFB               	movlw	-5
 10386  0166AA  36E3               	rlcf	plusw1,f,c
 10387  0166AC  0EFC               	movlw	-4
 10388  0166AE  36E3               	rlcf	plusw1,f,c
 10389  0166B0  0EFD               	movlw	-3
 10390  0166B2  36E3               	rlcf	plusw1,f,c
 10391  0166B4  0EFE               	movlw	-2
 10392  0166B6  36E3               	rlcf	plusw1,f,c
 10393                           
 10394                           ;stkvar	_divisor @ sp[(-9)+-16]
 10395                           ;stkvar	_dividend @ sp[(-9)+-8]
 10396  0166B8  50E1               	movf	fsr1l,w,c
 10397  0166BA  0FEF               	addlw	-17
 10398  0166BC  6ED9               	movwf	fsr2l,c
 10399  0166BE  50E2               	movf	fsr1h,w,c
 10400  0166C0  6EDA               	movwf	fsr2h,c
 10401  0166C2  0EFF               	movlw	255
 10402  0166C4  22DA               	addwfc	fsr2h,f,c
 10403  0166C6  0EE7               	movlw	-25
 10404  0166C8  50E3               	movf	plusw1,w,c
 10405  0166CA  5CDE               	subwf	postinc2,w,c
 10406  0166CC  0EE8               	movlw	-24
 10407  0166CE  50E3               	movf	plusw1,w,c
 10408  0166D0  58DE               	subwfb	postinc2,w,c
 10409  0166D2  0EE9               	movlw	-23
 10410  0166D4  50E3               	movf	plusw1,w,c
 10411  0166D6  58DE               	subwfb	postinc2,w,c
 10412  0166D8  0EEA               	movlw	-22
 10413  0166DA  50E3               	movf	plusw1,w,c
 10414  0166DC  58DE               	subwfb	postinc2,w,c
 10415  0166DE  0EEB               	movlw	-21
 10416  0166E0  50E3               	movf	plusw1,w,c
 10417  0166E2  58DE               	subwfb	postinc2,w,c
 10418  0166E4  0EEC               	movlw	-20
 10419  0166E6  50E3               	movf	plusw1,w,c
 10420  0166E8  58DE               	subwfb	postinc2,w,c
 10421  0166EA  0EED               	movlw	-19
 10422  0166EC  50E3               	movf	plusw1,w,c
 10423  0166EE  58DE               	subwfb	postinc2,w,c
 10424  0166F0  0EEE               	movlw	-18
 10425  0166F2  50E3               	movf	plusw1,w,c
 10426  0166F4  58DE               	subwfb	postinc2,w,c
 10427  0166F6  A0D8               	btfss	status,0,c
 10428  0166F8  D021               	goto	l7078
 10429                           
 10430                           ;stkvar	_divisor @ sp[(-9)+-16]
 10431                           ;stkvar	_dividend @ sp[(-9)+-8]
 10432  0166FA  50E1               	movf	fsr1l,w,c
 10433  0166FC  0FEF               	addlw	-17
 10434  0166FE  6ED9               	movwf	fsr2l,c
 10435  016700  50E2               	movf	fsr1h,w,c
 10436  016702  6EDA               	movwf	fsr2h,c
 10437  016704  0EFF               	movlw	255
 10438  016706  22DA               	addwfc	fsr2h,f,c
 10439  016708  0EE7               	movlw	-25
 10440  01670A  50E3               	movf	plusw1,w,c
 10441  01670C  5EDE               	subwf	postinc2,f,c
 10442  01670E  0EE8               	movlw	-24
 10443  016710  50E3               	movf	plusw1,w,c
 10444  016712  5ADE               	subwfb	postinc2,f,c
 10445  016714  0EE9               	movlw	-23
 10446  016716  50E3               	movf	plusw1,w,c
 10447  016718  5ADE               	subwfb	postinc2,f,c
 10448  01671A  0EEA               	movlw	-22
 10449  01671C  50E3               	movf	plusw1,w,c
 10450  01671E  5ADE               	subwfb	postinc2,f,c
 10451  016720  0EEB               	movlw	-21
 10452  016722  50E3               	movf	plusw1,w,c
 10453  016724  5ADE               	subwfb	postinc2,f,c
 10454  016726  0EEC               	movlw	-20
 10455  016728  50E3               	movf	plusw1,w,c
 10456  01672A  5ADE               	subwfb	postinc2,f,c
 10457  01672C  0EED               	movlw	-19
 10458  01672E  50E3               	movf	plusw1,w,c
 10459  016730  5ADE               	subwfb	postinc2,f,c
 10460  016732  0EEE               	movlw	-18
 10461  016734  50E3               	movf	plusw1,w,c
 10462  016736  5ADE               	subwfb	postinc2,f,c
 10463                           
 10464                           ;stkvar	_quotient @ sp[(-9)+0]
 10465  016738  0EF7               	movlw	-9
 10466  01673A  80E3               	bsf	plusw1,0,c
 10467  01673C                     l7078:
 10468                           
 10469                           ;stkvar	_divisor @ sp[(-9)+-16]
 10470  01673C  90D8               	bcf	status,0,c
 10471  01673E  0EEE               	movlw	-18
 10472  016740  32E3               	rrcf	plusw1,f,c
 10473  016742  0EED               	movlw	-19
 10474  016744  32E3               	rrcf	plusw1,f,c
 10475  016746  0EEC               	movlw	-20
 10476  016748  32E3               	rrcf	plusw1,f,c
 10477  01674A  0EEB               	movlw	-21
 10478  01674C  32E3               	rrcf	plusw1,f,c
 10479  01674E  0EEA               	movlw	-22
 10480  016750  32E3               	rrcf	plusw1,f,c
 10481  016752  0EE9               	movlw	-23
 10482  016754  32E3               	rrcf	plusw1,f,c
 10483  016756  0EE8               	movlw	-24
 10484  016758  32E3               	rrcf	plusw1,f,c
 10485  01675A  0EE7               	movlw	-25
 10486  01675C  32E3               	rrcf	plusw1,f,c
 10487                           
 10488                           ;stkvar	_counter @ sp[(-9)+8]
 10489  01675E  0EFF               	movlw	-1
 10490  016760  50E3               	movf	plusw1,w,c
 10491  016762  6E36               	movwf	btemp^0,c
 10492  016764  0E01               	movlw	1
 10493  016766  5E36               	subwf	btemp^0,f,c
 10494  016768  0EFF               	movlw	-1
 10495  01676A  0060  F0DB  FFE3   	movff	btemp,plusw1
 10496  016770  A4D8               	btfss	status,2,c
 10497  016772  D791               	goto	u6480
 10498  016774                     u6500:
 10499                           
 10500                           ;stkvar	_quotient @ sp[(-9)+0]
 10501  016774  0EF7               	movlw	247
 10502  016776  24E1               	addwf	fsr1l,w,c
 10503  016778  6ED9               	movwf	fsr2l,c
 10504  01677A  0EFF               	movlw	255
 10505  01677C  20E2               	addwfc	fsr1h,w,c
 10506  01677E  6EDA               	movwf	fsr2h,c
 10507                           
 10508                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10509  016780  0E08               	movlw	8
 10510  016782  6E36               	movwf	btemp^0,c
 10511  016784  0EEF               	movlw	-17
 10512  016786                     us651999:
 10513  016786  006F FF7B FFE3     	movff	postinc2,plusw1
 10514  01678C  28E8               	incf	wreg,w,c
 10515  01678E  2E36               	decfsz	btemp^0,f,c
 10516  016790  D7FA               	bra	us651999
 10517                           
 10518                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10519  016792  0EF7               	movlw	247
 10520  016794  26E1               	addwf	fsr1l,f,c
 10521  016796  0EFF               	movlw	255
 10522  016798  22E2               	addwfc	fsr1h,f,c
 10523  01679A  0012               	return		;funcret
 10524  01679C                     __end_of___lodiv:
 10525                           	opt callstack 0
 10526                           
 10527 ;; *************** function _strncmp *****************
 10528 ;; Defined at:
 10529 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  _l              2  [STACK] PTR const unsigned char 
 10532 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10533 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10534 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10535 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10536 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10537 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10538 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10539 ;;		 -> STR_1(17), 
 10540 ;;  _r              2  [STACK] PTR const unsigned char 
 10541 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10542 ;;		 -> STR_48(3), STR_44(3), 
 10543 ;;  n               2  [STACK] unsigned int 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  r               2  [STACK] PTR const unsigned char 
 10546 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10547 ;;		 -> STR_48(3), STR_44(3), 
 10548 ;;  l               2  [STACK] PTR const unsigned char 
 10549 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10550 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10551 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10552 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10553 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10554 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10555 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10556 ;;		 -> STR_1(17), 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  2  [STACK] int 
 10559 ;; Registers used:
 10560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;Total ram usage:        0 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    6
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_vfpfcnvrt
 10577 ;; This function uses a reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text44
 10581  015C90                     __ptext44:
 10582                           	opt callstack 0
 10583  015C90                     _strncmp:
 10584                           	opt callstack 0
 10585                           
 10586                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10587  015C90  52E6               	movf	postinc1,f,c
 10588  015C92  52E6               	movf	postinc1,f,c
 10589  015C94  52E6               	movf	postinc1,f,c
 10590  015C96  52E6               	movf	postinc1,f,c
 10591                           
 10592                           ;stkvar	__l @ sp[(-4)+-2]
 10593                           
 10594                           ;incstack = 0
 10595  015C98  0EFA               	movlw	-6
 10596  015C9A  006F FF8C  F040    	movff	plusw1,btemp+10
 10597  015CA0  0EFB               	movlw	-5
 10598  015CA2  006F FF8C  F041    	movff	plusw1,btemp+11
 10599                           
 10600                           ;stkvar	_l @ sp[(-4)+2]
 10601  015CA8  0EFF               	movlw	-1
 10602  015CAA  0060  F107  FFE3   	movff	btemp+11,plusw1
 10603  015CB0  0EFE               	movlw	-2
 10604  015CB2  0060  F103  FFE3   	movff	btemp+10,plusw1
 10605                           
 10606                           ;stkvar	__r @ sp[(-4)+-4]
 10607  015CB8  0EF8               	movlw	-8
 10608  015CBA  006F FF8C  F040    	movff	plusw1,btemp+10
 10609  015CC0  0EF9               	movlw	-7
 10610  015CC2  006F FF8C  F041    	movff	plusw1,btemp+11
 10611                           
 10612                           ;stkvar	_r @ sp[(-4)+0]
 10613  015CC8  0EFD               	movlw	-3
 10614  015CCA  0060  F107  FFE3   	movff	btemp+11,plusw1
 10615  015CD0  0EFC               	movlw	-4
 10616  015CD2  0060  F103  FFE3   	movff	btemp+10,plusw1
 10617                           
 10618                           ;stkvar	_n @ sp[(-4)+-6]
 10619  015CD8  0EF6               	movlw	-10
 10620  015CDA  006F FF8C  F036    	movff	plusw1,btemp
 10621  015CE0  0E01               	movlw	1
 10622  015CE2  5E36               	subwf	btemp^0,f,c
 10623  015CE4  0EF6               	movlw	-10
 10624  015CE6  0060  F0DB  FFE3   	movff	btemp,plusw1
 10625  015CEC  0EF7               	movlw	-9
 10626  015CEE  006F FF8C  F036    	movff	plusw1,btemp
 10627  015CF4  0E00               	movlw	0
 10628  015CF6  5A36               	subwfb	btemp^0,f,c
 10629  015CF8  0EF7               	movlw	-9
 10630  015CFA  0060  F0DB  FFE3   	movff	btemp,plusw1
 10631  015D00  0EF6               	movlw	-10
 10632  015D02  28E3               	incf	plusw1,w,c
 10633  015D04  E13F               	bnz	l7722
 10634  015D06  0EF7               	movlw	-9
 10635  015D08  28E3               	incf	plusw1,w,c
 10636  015D0A  A4D8               	btfss	status,2,c
 10637  015D0C  D03B               	goto	l7722
 10638  015D0E  0E00               	movlw	0
 10639  015D10  6E36               	movwf	btemp^0,c
 10640  015D12  0E00               	movlw	0
 10641  015D14  6E37               	movwf	(btemp+1)^0,c
 10642  015D16  D0C7               	goto	l2843
 10643  015D18                     l7720:
 10644                           
 10645                           ;stkvar	_l @ sp[(-4)+2]
 10646  015D18  0EFE               	movlw	-2
 10647  015D1A  50E3               	movf	plusw1,w,c
 10648  015D1C  0F01               	addlw	1
 10649  015D1E  6E36               	movwf	btemp^0,c
 10650  015D20  0EFE               	movlw	-2
 10651  015D22  0060  F0DB  FFE3   	movff	btemp,plusw1
 10652  015D28  6A36               	clrf	btemp^0,c
 10653  015D2A  0EFF               	movlw	-1
 10654  015D2C  50E3               	movf	plusw1,w,c
 10655  015D2E  2036               	addwfc	btemp^0,w,c
 10656  015D30  6E36               	movwf	btemp^0,c
 10657  015D32  0EFF               	movlw	-1
 10658  015D34  0060  F0DB  FFE3   	movff	btemp,plusw1
 10659                           
 10660                           ;stkvar	_r @ sp[(-4)+0]
 10661  015D3A  0EFC               	movlw	-4
 10662  015D3C  50E3               	movf	plusw1,w,c
 10663  015D3E  0F01               	addlw	1
 10664  015D40  6E36               	movwf	btemp^0,c
 10665  015D42  0EFC               	movlw	-4
 10666  015D44  0060  F0DB  FFE3   	movff	btemp,plusw1
 10667  015D4A  6A36               	clrf	btemp^0,c
 10668  015D4C  0EFD               	movlw	-3
 10669  015D4E  50E3               	movf	plusw1,w,c
 10670  015D50  2036               	addwfc	btemp^0,w,c
 10671  015D52  6E36               	movwf	btemp^0,c
 10672  015D54  0EFD               	movlw	-3
 10673  015D56  0060  F0DB  FFE3   	movff	btemp,plusw1
 10674                           
 10675                           ;stkvar	_n @ sp[(-4)+-6]
 10676  015D5C  0EF6               	movlw	-10
 10677  015D5E  006F FF8C  F036    	movff	plusw1,btemp
 10678  015D64  0E01               	movlw	1
 10679  015D66  5E36               	subwf	btemp^0,f,c
 10680  015D68  0EF6               	movlw	-10
 10681  015D6A  0060  F0DB  FFE3   	movff	btemp,plusw1
 10682  015D70  0EF7               	movlw	-9
 10683  015D72  006F FF8C  F036    	movff	plusw1,btemp
 10684  015D78  0E00               	movlw	0
 10685  015D7A  5A36               	subwfb	btemp^0,f,c
 10686  015D7C  0EF7               	movlw	-9
 10687  015D7E  0060  F0DB  FFE3   	movff	btemp,plusw1
 10688  015D84                     l7722:
 10689                           
 10690                           ;stkvar	_l @ sp[(-4)+2]
 10691  015D84  0EFE               	movlw	-2
 10692  015D86  006F FF8F FFF6     	movff	plusw1,tblptrl
 10693  015D8C  0EFF               	movlw	-1
 10694  015D8E  006F FF8F FFF7     	movff	plusw1,tblptrh
 10695  015D94  0E00               	movlw	low (__mediumconst shr (0+16))
 10696  015D96  6EF8               	movwf	tblptru,c
 10697  015D98  0E1F               	movlw	(high __ramtop+-1)
 10698  015D9A  64F7               	cpfsgt	tblptrh,c
 10699  015D9C  D003               	bra	u7737
 10700  015D9E  0008               	tblrd		*
 10701  015DA0  50F5               	movf	tablat,w,c
 10702  015DA2  D007               	bra	u7730
 10703  015DA4                     u7737:
 10704  015DA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10705  015DAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10706  015DB0  50EF               	movf	indf0,w,c
 10707  015DB2                     u7730:
 10708  015DB2  0900               	iorlw	0
 10709  015DB4  B4D8               	btfsc	status,2,c
 10710  015DB6  D04A               	goto	u7770
 10711                           
 10712                           ;stkvar	_r @ sp[(-4)+0]
 10713  015DB8  50E1               	movf	fsr1l,w,c
 10714  015DBA  0FFC               	addlw	-4
 10715  015DBC  6ED9               	movwf	fsr2l,c
 10716  015DBE  50E2               	movf	fsr1h,w,c
 10717  015DC0  6EDA               	movwf	fsr2h,c
 10718  015DC2  0EFF               	movlw	255
 10719  015DC4  22DA               	addwfc	fsr2h,f,c
 10720  015DC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10721  015DCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10722  015DD2                     	if	0	;tblptru may be non-zero
 10723  015DD2                     	endif
 10724  015DD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10725  015DD2  0E00               	movlw	low (__mediumconst shr (0+16))
 10726  015DD4  6EF8               	movwf	tblptru,c
 10727  015DD6                     	endif
 10728  015DD6  0008               	tblrd		*
 10729  015DD8  50F5               	movf	tablat,w,c
 10730  015DDA  0900               	iorlw	0
 10731  015DDC  B4D8               	btfsc	status,2,c
 10732  015DDE  D036               	goto	u7770
 10733                           
 10734                           ;stkvar	_n @ sp[(-4)+-6]
 10735  015DE0  0EF6               	movlw	-10
 10736  015DE2  006F FF8C  F036    	movff	plusw1,btemp
 10737  015DE8  0EF7               	movlw	-9
 10738  015DEA  50E3               	movf	plusw1,w,c
 10739  015DEC  1036               	iorwf	btemp^0,w,c
 10740  015DEE  B4D8               	btfsc	status,2,c
 10741  015DF0  D02D               	goto	u7770
 10742                           
 10743                           ;stkvar	_r @ sp[(-4)+0]
 10744  015DF2  50E1               	movf	fsr1l,w,c
 10745  015DF4  0FFC               	addlw	-4
 10746  015DF6  6ED9               	movwf	fsr2l,c
 10747  015DF8  50E2               	movf	fsr1h,w,c
 10748  015DFA  6EDA               	movwf	fsr2h,c
 10749  015DFC  0EFF               	movlw	255
 10750  015DFE  22DA               	addwfc	fsr2h,f,c
 10751  015E00  006F FF7B FFF6     	movff	postinc2,tblptrl
 10752  015E06  006F FF77 FFF7     	movff	postdec2,tblptrh
 10753  015E0C                     	if	0	;tblptru may be non-zero
 10754  015E0C                     	endif
 10755  015E0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10756  015E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 10757  015E0E  6EF8               	movwf	tblptru,c
 10758  015E10                     	endif
 10759  015E10  0008               	tblrd		*
 10760  015E12  006F FFD4  F041    	movff	tablat,btemp+11
 10761                           
 10762                           ;stkvar	_l @ sp[(-4)+2]
 10763  015E18  0EFE               	movlw	-2
 10764  015E1A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10765  015E20  0EFF               	movlw	-1
 10766  015E22  006F FF8F FFF7     	movff	plusw1,tblptrh
 10767  015E28  0E00               	movlw	low (__mediumconst shr (0+16))
 10768  015E2A  6EF8               	movwf	tblptru,c
 10769  015E2C  0E1F               	movlw	(high __ramtop+-1)
 10770  015E2E  64F7               	cpfsgt	tblptrh,c
 10771  015E30  D003               	bra	u7777
 10772  015E32  0008               	tblrd		*
 10773  015E34  50F5               	movf	tablat,w,c
 10774  015E36  D007               	bra	u7775
 10775  015E38                     u7777:
 10776  015E38  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10777  015E3E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10778  015E44  50EF               	movf	indf0,w,c
 10779  015E46                     u7775:
 10780  015E46  1841               	xorwf	(btemp+11)^0,w,c
 10781  015E48  B4D8               	btfsc	status,2,c
 10782  015E4A  D766               	goto	l7720
 10783  015E4C                     u7770:
 10784                           
 10785                           ;stkvar	_l @ sp[(-4)+2]
 10786  015E4C  0EFE               	movlw	-2
 10787  015E4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10788  015E54  0EFF               	movlw	-1
 10789  015E56  006F FF8F FFF7     	movff	plusw1,tblptrh
 10790  015E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 10791  015E5E  6EF8               	movwf	tblptru,c
 10792  015E60  0E1F               	movlw	(high __ramtop+-1)
 10793  015E62  64F7               	cpfsgt	tblptrh,c
 10794  015E64  D003               	bra	u7787
 10795  015E66  0008               	tblrd		*
 10796  015E68  50F5               	movf	tablat,w,c
 10797  015E6A  D007               	bra	u7780
 10798  015E6C                     u7787:
 10799  015E6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10800  015E72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10801  015E78  50EF               	movf	indf0,w,c
 10802  015E7A                     u7780:
 10803  015E7A  6E36               	movwf	btemp^0,c
 10804  015E7C  6A37               	clrf	(btemp+1)^0,c
 10805                           
 10806                           ;stkvar	_r @ sp[(-4)+0]
 10807  015E7E  50E1               	movf	fsr1l,w,c
 10808  015E80  0FFC               	addlw	-4
 10809  015E82  6ED9               	movwf	fsr2l,c
 10810  015E84  50E2               	movf	fsr1h,w,c
 10811  015E86  6EDA               	movwf	fsr2h,c
 10812  015E88  0EFF               	movlw	255
 10813  015E8A  22DA               	addwfc	fsr2h,f,c
 10814  015E8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10815  015E92  006F FF77 FFF7     	movff	postdec2,tblptrh
 10816  015E98                     	if	0	;tblptru may be non-zero
 10817  015E98                     	endif
 10818  015E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10819  015E98  0E00               	movlw	low (__mediumconst shr (0+16))
 10820  015E9A  6EF8               	movwf	tblptru,c
 10821  015E9C                     	endif
 10822  015E9C  0008               	tblrd		*
 10823  015E9E  50F5               	movf	tablat,w,c
 10824  015EA0  5E36               	subwf	btemp^0,f,c
 10825  015EA2  0E00               	movlw	0
 10826  015EA4  5A37               	subwfb	(btemp+1)^0,f,c
 10827  015EA6                     l2843:
 10828                           
 10829                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10830  015EA6  0EF6               	movlw	246
 10831  015EA8  26E1               	addwf	fsr1l,f,c
 10832  015EAA  0EFF               	movlw	255
 10833  015EAC  22E2               	addwfc	fsr1h,f,c
 10834  015EAE  0012               	return		;funcret
 10835  015EB0                     __end_of_strncmp:
 10836                           	opt callstack 0
 10837                           
 10838 ;; *************** function _stoa *****************
 10839 ;; Defined at:
 10840 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10843 ;;		 -> f(6), NULL(0), 
 10844 ;;  s               2  [STACK] PTR unsigned char 
 10845 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10846 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10847 ;;		 -> STR_3(5), V(187), 
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;  nuls            7  [STACK] unsigned char [7]
 10850 ;;  l               2  [STACK] int 
 10851 ;;  p               2  [STACK] int 
 10852 ;;  cp              2  [STACK] PTR unsigned char 
 10853 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10854 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10855 ;;		 -> STR_7(5), STR_3(5), V(187), 
 10856 ;;  w               2  [STACK] int 
 10857 ;;  i               2  [STACK] int 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  2  [STACK] int 
 10860 ;; Registers used:
 10861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10871 ;;Total ram usage:        0 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    9
 10874 ;; This function calls:
 10875 ;;		_fputc
 10876 ;;		_strlen
 10877 ;; This function is called by:
 10878 ;;		_vfpfcnvrt
 10879 ;; This function uses a reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text45
 10883  01529E                     __ptext45:
 10884                           	opt callstack 0
 10885  01529E                     _stoa:
 10886                           	opt callstack 0
 10887                           
 10888                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10889  01529E  0E11               	movlw	17
 10890  0152A0  26E1               	addwf	fsr1l,f,c
 10891  0152A2  0E00               	movlw	0
 10892  0152A4  22E2               	addwfc	fsr1h,f,c
 10893                           
 10894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10895                           
 10896                           ;incstack = 0
 10897  0152A6  EE20  F0CA         	lfsr	2,stoa@F1166
 10898                           
 10899                           ;stkvar	_nuls @ sp[(-17)+0]
 10900  0152AA  0E07               	movlw	7
 10901  0152AC  6E36               	movwf	btemp^0,c
 10902  0152AE  0EEF               	movlw	-17
 10903  0152B0                     us987999:
 10904  0152B0  006F FF7B FFE3     	movff	postinc2,plusw1
 10905  0152B6  28E8               	incf	wreg,w,c
 10906  0152B8  2E36               	decfsz	btemp^0,f,c
 10907  0152BA  D7FA               	bra	us987999
 10908                           
 10909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10910                           ;stkvar	_s @ sp[(-17)+-4]
 10911  0152BC  0EEB               	movlw	-21
 10912  0152BE  006F FF8C  F040    	movff	plusw1,btemp+10
 10913  0152C4  0EEC               	movlw	-20
 10914  0152C6  006F FF8C  F041    	movff	plusw1,btemp+11
 10915                           
 10916                           ;stkvar	_cp @ sp[(-17)+11]
 10917  0152CC  0EFB               	movlw	-5
 10918  0152CE  0060  F107  FFE3   	movff	btemp+11,plusw1
 10919  0152D4  0EFA               	movlw	-6
 10920  0152D6  0060  F103  FFE3   	movff	btemp+10,plusw1
 10921                           
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10923                           ;stkvar	_cp @ sp[(-17)+11]
 10924  0152DC  0EFA               	movlw	-6
 10925  0152DE  006F FF8C  F036    	movff	plusw1,btemp
 10926  0152E4  0EFB               	movlw	-5
 10927  0152E6  50E3               	movf	plusw1,w,c
 10928  0152E8  1036               	iorwf	btemp^0,w,c
 10929  0152EA  A4D8               	btfss	status,2,c
 10930  0152EC  D00E               	goto	l9686
 10931                           
 10932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10933                           ;stkvar	_nuls @ sp[(-17)+0]
 10934  0152EE  0EEF               	movlw	239
 10935  0152F0  24E1               	addwf	fsr1l,w,c
 10936  0152F2  6E40               	movwf	(btemp+10)^0,c
 10937  0152F4  0EFF               	movlw	255
 10938  0152F6  20E2               	addwfc	fsr1h,w,c
 10939  0152F8  6E41               	movwf	(btemp+11)^0,c
 10940                           
 10941                           ;stkvar	_cp @ sp[(-17)+11]
 10942  0152FA  0EFB               	movlw	-5
 10943  0152FC  0060  F107  FFE3   	movff	btemp+11,plusw1
 10944  015302  0EFA               	movlw	-6
 10945  015304  0060  F103  FFE3   	movff	btemp+10,plusw1
 10946  01530A                     l9686:
 10947                           
 10948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10949                           ;stkvar	_cp @ sp[(-17)+11]
 10950  01530A  0EFA               	movlw	-6
 10951  01530C  006F FF8F FFE6     	movff	plusw1,postinc1
 10952  015312  006F FF8F FFE6     	movff	plusw1,postinc1
 10953  015318  ECCA  F0BC         	call	_strlen	;wreg free
 10954                           
 10955                           ;stkvar	_l @ sp[(-17)+7]
 10956  01531C  0EF6               	movlw	-10
 10957  01531E  0060  F0DB  FFE3   	movff	btemp,plusw1
 10958  015324  0EF7               	movlw	-9
 10959  015326  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 10960                           
 10961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10962                           ;stkvar	_p @ sp[(-17)+9]
 10963  01532C  0EF8               	movlw	-8
 10964  01532E  0060  F087  FFE3   	movff	_prec,plusw1
 10965  015334  0EF9               	movlw	-7
 10966  015336  0060  F08B  FFE3   	movff	_prec+1,plusw1
 10967                           
 10968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10969                           ;stkvar	_p @ sp[(-17)+9]
 10970  01533C  0EF9               	movlw	-7
 10971  01533E  BEE3               	btfsc	plusw1,7,c
 10972  015340  D023               	goto	l1894
 10973                           
 10974                           ;stkvar	_l @ sp[(-17)+7]
 10975                           ;stkvar	_p @ sp[(-17)+9]
 10976  015342  50E1               	movf	fsr1l,w,c
 10977  015344  0FF8               	addlw	-8
 10978  015346  6ED9               	movwf	fsr2l,c
 10979  015348  50E2               	movf	fsr1h,w,c
 10980  01534A  6EDA               	movwf	fsr2h,c
 10981  01534C  0EFF               	movlw	255
 10982  01534E  22DA               	addwfc	fsr2h,f,c
 10983  015350  0EF6               	movlw	-10
 10984  015352  50E3               	movf	plusw1,w,c
 10985  015354  5CDE               	subwf	postinc2,w,c
 10986  015356  50DE               	movf	postinc2,w,c
 10987  015358  0A80               	xorlw	128
 10988  01535A  6E36               	movwf	btemp^0,c
 10989  01535C  0EF7               	movlw	-9
 10990  01535E  50E3               	movf	plusw1,w,c
 10991  015360  0A80               	xorlw	128
 10992  015362  5836               	subwfb	btemp^0,w,c
 10993  015364  B0D8               	btfsc	status,0,c
 10994  015366  D010               	goto	l1894
 10995                           
 10996                           ;stkvar	_p @ sp[(-17)+9]
 10997                           ;stkvar	_l @ sp[(-17)+7]
 10998  015368  0EF8               	movlw	-8
 10999  01536A  006F FF8C  F036    	movff	plusw1,btemp
 11000  015370  0EF6               	movlw	-10
 11001  015372  0060  F0DB  FFE3   	movff	btemp,plusw1
 11002  015378  0EF9               	movlw	-7
 11003  01537A  006F FF8C  F036    	movff	plusw1,btemp
 11004  015380  0EF7               	movlw	-9
 11005  015382  0060  F0DB  FFE3   	movff	btemp,plusw1
 11006  015388                     l1894:
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11009                           ;stkvar	_l @ sp[(-17)+7]
 11010                           ;stkvar	_p @ sp[(-17)+9]
 11011  015388  0EF6               	movlw	-10
 11012  01538A  006F FF8C  F036    	movff	plusw1,btemp
 11013  015390  0EF8               	movlw	-8
 11014  015392  0060  F0DB  FFE3   	movff	btemp,plusw1
 11015  015398  0EF7               	movlw	-9
 11016  01539A  006F FF8C  F036    	movff	plusw1,btemp
 11017  0153A0  0EF9               	movlw	-7
 11018  0153A2  0060  F0DB  FFE3   	movff	btemp,plusw1
 11019                           
 11020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11021                           ;stkvar	_w @ sp[(-17)+13]
 11022  0153A8  0EFC               	movlw	-4
 11023  0153AA  0060  F07F  FFE3   	movff	_width,plusw1
 11024  0153B0  0EFD               	movlw	-3
 11025  0153B2  0060  F083  FFE3   	movff	_width+1,plusw1
 11026                           
 11027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11028  0153B8  A023               	btfss	_flags^0,0,c
 11029  0153BA  D01F               	goto	l9706
 11030  0153BC  D031               	goto	u9920
 11031  0153BE                     l9702:
 11032                           
 11033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11034                           ;stkvar	_fp @ sp[(-17)+-2]
 11035  0153BE  0EED               	movlw	-19
 11036  0153C0  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  0153C6  006F FF8F FFE6     	movff	plusw1,postinc1
 11038  0153CC  0E20               	movlw	32
 11039  0153CE  6EE6               	movwf	postinc1,c
 11040  0153D0  0E00               	movlw	0
 11041  0153D2  6EE6               	movwf	postinc1,c
 11042  0153D4  EC16  F0B7         	call	_fputc	;wreg free
 11043                           
 11044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11045                           ;stkvar	_l @ sp[(-17)+7]
 11046  0153D8  0EF6               	movlw	-10
 11047  0153DA  50E3               	movf	plusw1,w,c
 11048  0153DC  0F01               	addlw	1
 11049  0153DE  6E36               	movwf	btemp^0,c
 11050  0153E0  0EF6               	movlw	-10
 11051  0153E2  0060  F0DB  FFE3   	movff	btemp,plusw1
 11052  0153E8  6A36               	clrf	btemp^0,c
 11053  0153EA  0EF7               	movlw	-9
 11054  0153EC  50E3               	movf	plusw1,w,c
 11055  0153EE  2036               	addwfc	btemp^0,w,c
 11056  0153F0  6E36               	movwf	btemp^0,c
 11057  0153F2  0EF7               	movlw	-9
 11058  0153F4  0060  F0DB  FFE3   	movff	btemp,plusw1
 11059  0153FA                     l9706:
 11060                           
 11061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11062                           ;stkvar	_w @ sp[(-17)+13]
 11063                           ;stkvar	_l @ sp[(-17)+7]
 11064  0153FA  50E1               	movf	fsr1l,w,c
 11065  0153FC  0FF6               	addlw	-10
 11066  0153FE  6ED9               	movwf	fsr2l,c
 11067  015400  50E2               	movf	fsr1h,w,c
 11068  015402  6EDA               	movwf	fsr2h,c
 11069  015404  0EFF               	movlw	255
 11070  015406  22DA               	addwfc	fsr2h,f,c
 11071  015408  0EFC               	movlw	-4
 11072  01540A  50E3               	movf	plusw1,w,c
 11073  01540C  5CDE               	subwf	postinc2,w,c
 11074  01540E  50DE               	movf	postinc2,w,c
 11075  015410  0A80               	xorlw	128
 11076  015412  6E36               	movwf	btemp^0,c
 11077  015414  0EFD               	movlw	-3
 11078  015416  50E3               	movf	plusw1,w,c
 11079  015418  0A80               	xorlw	128
 11080  01541A  5836               	subwfb	btemp^0,w,c
 11081  01541C  A0D8               	btfss	status,0,c
 11082  01541E  D7CF               	goto	l9702
 11083  015420                     u9920:
 11084                           
 11085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11086                           ;stkvar	_i @ sp[(-17)+15]
 11087  015420  0EFE               	movlw	-2
 11088  015422  6AE3               	clrf	plusw1,c
 11089  015424  0EFF               	movlw	-1
 11090  015426  6AE3               	clrf	plusw1,c
 11091                           
 11092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11093  015428  D045               	goto	l9716
 11094  01542A                     l9710:
 11095                           
 11096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11097                           ;stkvar	_fp @ sp[(-17)+-2]
 11098  01542A  0EED               	movlw	-19
 11099  01542C  006F FF8F FFE6     	movff	plusw1,postinc1
 11100  015432  006F FF8F FFE6     	movff	plusw1,postinc1
 11101                           
 11102                           ;stkvar	_cp @ sp[(-19)+11]
 11103  015438  0EF8               	movlw	-8
 11104  01543A  006F FF8F FFF6     	movff	plusw1,tblptrl
 11105  015440  0EF9               	movlw	-7
 11106  015442  006F FF8F FFF7     	movff	plusw1,tblptrh
 11107  015448  0E00               	movlw	low (__mediumconst shr (0+16))
 11108  01544A  6EF8               	movwf	tblptru,c
 11109  01544C  0E1F               	movlw	(high __ramtop+-1)
 11110  01544E  64F7               	cpfsgt	tblptrh,c
 11111  015450  D003               	bra	u9937
 11112  015452  0008               	tblrd		*
 11113  015454  50F5               	movf	tablat,w,c
 11114  015456  D007               	bra	u9930
 11115  015458                     u9937:
 11116  015458  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11117  01545E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11118  015464  50EF               	movf	indf0,w,c
 11119  015466                     u9930:
 11120  015466  6EE6               	movwf	postinc1,c
 11121  015468  0E00               	movlw	0
 11122  01546A  6EE6               	movwf	postinc1,c
 11123  01546C  EC16  F0B7         	call	_fputc	;wreg free
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11126                           ;stkvar	_cp @ sp[(-17)+11]
 11127  015470  0EFA               	movlw	-6
 11128  015472  50E3               	movf	plusw1,w,c
 11129  015474  0F01               	addlw	1
 11130  015476  6E36               	movwf	btemp^0,c
 11131  015478  0EFA               	movlw	-6
 11132  01547A  0060  F0DB  FFE3   	movff	btemp,plusw1
 11133  015480  6A36               	clrf	btemp^0,c
 11134  015482  0EFB               	movlw	-5
 11135  015484  50E3               	movf	plusw1,w,c
 11136  015486  2036               	addwfc	btemp^0,w,c
 11137  015488  6E36               	movwf	btemp^0,c
 11138  01548A  0EFB               	movlw	-5
 11139  01548C  0060  F0DB  FFE3   	movff	btemp,plusw1
 11140                           
 11141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11142                           ;stkvar	_i @ sp[(-17)+15]
 11143  015492  0EFE               	movlw	-2
 11144  015494  50E3               	movf	plusw1,w,c
 11145  015496  0F01               	addlw	1
 11146  015498  6E36               	movwf	btemp^0,c
 11147  01549A  0EFE               	movlw	-2
 11148  01549C  0060  F0DB  FFE3   	movff	btemp,plusw1
 11149  0154A2  6A36               	clrf	btemp^0,c
 11150  0154A4  0EFF               	movlw	-1
 11151  0154A6  50E3               	movf	plusw1,w,c
 11152  0154A8  2036               	addwfc	btemp^0,w,c
 11153  0154AA  6E36               	movwf	btemp^0,c
 11154  0154AC  0EFF               	movlw	-1
 11155  0154AE  0060  F0DB  FFE3   	movff	btemp,plusw1
 11156  0154B4                     l9716:
 11157                           
 11158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11159                           ;stkvar	_p @ sp[(-17)+9]
 11160                           ;stkvar	_i @ sp[(-17)+15]
 11161  0154B4  50E1               	movf	fsr1l,w,c
 11162  0154B6  0FFE               	addlw	-2
 11163  0154B8  6ED9               	movwf	fsr2l,c
 11164  0154BA  50E2               	movf	fsr1h,w,c
 11165  0154BC  6EDA               	movwf	fsr2h,c
 11166  0154BE  0EFF               	movlw	255
 11167  0154C0  22DA               	addwfc	fsr2h,f,c
 11168  0154C2  0EF8               	movlw	-8
 11169  0154C4  50E3               	movf	plusw1,w,c
 11170  0154C6  5CDE               	subwf	postinc2,w,c
 11171  0154C8  50DE               	movf	postinc2,w,c
 11172  0154CA  0A80               	xorlw	128
 11173  0154CC  6E36               	movwf	btemp^0,c
 11174  0154CE  0EF9               	movlw	-7
 11175  0154D0  50E3               	movf	plusw1,w,c
 11176  0154D2  0A80               	xorlw	128
 11177  0154D4  5836               	subwfb	btemp^0,w,c
 11178  0154D6  A0D8               	btfss	status,0,c
 11179  0154D8  D7A8               	goto	l9710
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11182  0154DA  B023               	btfsc	_flags^0,0,c
 11183  0154DC  D01F               	goto	l9724
 11184  0154DE  D031               	goto	u9960
 11185  0154E0                     l9720:
 11186                           
 11187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11188                           ;stkvar	_fp @ sp[(-17)+-2]
 11189  0154E0  0EED               	movlw	-19
 11190  0154E2  006F FF8F FFE6     	movff	plusw1,postinc1
 11191  0154E8  006F FF8F FFE6     	movff	plusw1,postinc1
 11192  0154EE  0E20               	movlw	32
 11193  0154F0  6EE6               	movwf	postinc1,c
 11194  0154F2  0E00               	movlw	0
 11195  0154F4  6EE6               	movwf	postinc1,c
 11196  0154F6  EC16  F0B7         	call	_fputc	;wreg free
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11199                           ;stkvar	_l @ sp[(-17)+7]
 11200  0154FA  0EF6               	movlw	-10
 11201  0154FC  50E3               	movf	plusw1,w,c
 11202  0154FE  0F01               	addlw	1
 11203  015500  6E36               	movwf	btemp^0,c
 11204  015502  0EF6               	movlw	-10
 11205  015504  0060  F0DB  FFE3   	movff	btemp,plusw1
 11206  01550A  6A36               	clrf	btemp^0,c
 11207  01550C  0EF7               	movlw	-9
 11208  01550E  50E3               	movf	plusw1,w,c
 11209  015510  2036               	addwfc	btemp^0,w,c
 11210  015512  6E36               	movwf	btemp^0,c
 11211  015514  0EF7               	movlw	-9
 11212  015516  0060  F0DB  FFE3   	movff	btemp,plusw1
 11213  01551C                     l9724:
 11214                           
 11215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11216                           ;stkvar	_w @ sp[(-17)+13]
 11217                           ;stkvar	_l @ sp[(-17)+7]
 11218  01551C  50E1               	movf	fsr1l,w,c
 11219  01551E  0FF6               	addlw	-10
 11220  015520  6ED9               	movwf	fsr2l,c
 11221  015522  50E2               	movf	fsr1h,w,c
 11222  015524  6EDA               	movwf	fsr2h,c
 11223  015526  0EFF               	movlw	255
 11224  015528  22DA               	addwfc	fsr2h,f,c
 11225  01552A  0EFC               	movlw	-4
 11226  01552C  50E3               	movf	plusw1,w,c
 11227  01552E  5CDE               	subwf	postinc2,w,c
 11228  015530  50DE               	movf	postinc2,w,c
 11229  015532  0A80               	xorlw	128
 11230  015534  6E36               	movwf	btemp^0,c
 11231  015536  0EFD               	movlw	-3
 11232  015538  50E3               	movf	plusw1,w,c
 11233  01553A  0A80               	xorlw	128
 11234  01553C  5836               	subwfb	btemp^0,w,c
 11235  01553E  A0D8               	btfss	status,0,c
 11236  015540  D7CF               	goto	l9720
 11237  015542                     u9960:
 11238                           
 11239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11240                           ;stkvar	_l @ sp[(-17)+7]
 11241  015542  0EF6               	movlw	-10
 11242  015544  006F FF8C  F036    	movff	plusw1,btemp
 11243  01554A  0EF7               	movlw	-9
 11244  01554C  006F FF8C  F037    	movff	plusw1,btemp+1
 11245                           
 11246                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11247  015552  0EEB               	movlw	235
 11248  015554  26E1               	addwf	fsr1l,f,c
 11249  015556  0EFF               	movlw	255
 11250  015558  22E2               	addwfc	fsr1h,f,c
 11251  01555A  0012               	return		;funcret
 11252  01555C                     __end_of_stoa:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _efgtoa *****************
 11256 ;; Defined at:
 11257 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11260 ;;		 -> f(6), NULL(0), 
 11261 ;;  f               4  [STACK] PTR struct _IO_FILE
 11262 ;;  c               1  [STACK] unsigned char 
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;  u               4  [STACK] unsigned char 
 11265 ;;  g               4  [STACK] unsigned char 
 11266 ;;  l               4  [STACK] unsigned char 
 11267 ;;  h               4  [STACK] unsigned char 
 11268 ;;  ou              4  [STACK] unsigned char 
 11269 ;;  n               2  [STACK] int 
 11270 ;;  e               2  [STACK] int 
 11271 ;;  i               2  [STACK] int 
 11272 ;;  w               2  [STACK] int 
 11273 ;;  p               2  [STACK] int 
 11274 ;;  sign            2  [STACK] int 
 11275 ;;  d               2  [STACK] int 
 11276 ;;  ne              2  [STACK] int 
 11277 ;;  m               2  [STACK] int 
 11278 ;;  pp              2  [STACK] int 
 11279 ;;  t               2  [STACK] int 
 11280 ;;  mode            1  [STACK] unsigned char 
 11281 ;;  nmode           1  [STACK] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  2  [STACK] int 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11295 ;;Total ram usage:        0 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   11
 11298 ;; This function calls:
 11299 ;;		___awdiv
 11300 ;;		___awmod
 11301 ;;		___fladd
 11302 ;;		___fldiv
 11303 ;;		___fleq
 11304 ;;		___flge
 11305 ;;		___flmul
 11306 ;;		___flneg
 11307 ;;		___flsub
 11308 ;;		___fltol
 11309 ;;		___fpclassifyf
 11310 ;;		_floorf
 11311 ;;		_isupper
 11312 ;;		_pad
 11313 ;;		_strcpy
 11314 ;;		_tolower
 11315 ;; This function is called by:
 11316 ;;		_vfpfcnvrt
 11317 ;; This function uses a reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text46
 11321  010000                     __ptext46:
 11322                           	opt callstack 0
 11323  010000                     _efgtoa:
 11324                           	opt callstack 0
 11325                           
 11326                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11327  010000  0E38               	movlw	56
 11328  010002  26E1               	addwf	fsr1l,f,c
 11329  010004  0E00               	movlw	0
 11330  010006  22E2               	addwfc	fsr1h,f,c
 11331                           
 11332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11333                           ;stkvar	_sign @ sp[(-56)+42]
 11334                           
 11335                           ;incstack = 0
 11336  010008  0EF2               	movlw	-14
 11337  01000A  6AE3               	clrf	plusw1,c
 11338  01000C  0EF3               	movlw	-13
 11339  01000E  6AE3               	clrf	plusw1,c
 11340                           
 11341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11342                           ;stkvar	_f @ sp[(-56)+-6]
 11343  010010  0EC2               	movlw	-62
 11344  010012  006F FF8C  F03E    	movff	plusw1,btemp+8
 11345  010018  0EC3               	movlw	-61
 11346  01001A  006F FF8C  F03F    	movff	plusw1,btemp+9
 11347  010020  0EC4               	movlw	-60
 11348  010022  006F FF8C  F040    	movff	plusw1,btemp+10
 11349  010028  0EC5               	movlw	-59
 11350  01002A  006F FF8C  F041    	movff	plusw1,btemp+11
 11351                           
 11352                           ;stkvar	_g @ sp[(-56)+16]
 11353  010030  0ED8               	movlw	-40
 11354  010032  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 11355  010038  0ED9               	movlw	-39
 11356  01003A  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 11357  010040  0EDA               	movlw	-38
 11358  010042  0060  F103  FFE3   	movff	btemp+10,plusw1
 11359  010048  0EDB               	movlw	-37
 11360  01004A  0060  F107  FFE3   	movff	btemp+11,plusw1
 11361                           
 11362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11363                           ;stkvar	_g @ sp[(-56)+16]
 11364  010050  0EDB               	movlw	-37
 11365  010052  AEE3               	btfss	plusw1,7,c
 11366  010054  D02B               	goto	l9384
 11367                           
 11368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11369  010056  0E01               	movlw	1
 11370  010058  6E40               	movwf	(btemp+10)^0,c
 11371  01005A  0E00               	movlw	0
 11372  01005C  6E41               	movwf	(btemp+11)^0,c
 11373                           
 11374                           ;stkvar	_sign @ sp[(-56)+42]
 11375  01005E  0EF2               	movlw	-14
 11376  010060  0060  F103  FFE3   	movff	btemp+10,plusw1
 11377  010066  0EF3               	movlw	-13
 11378  010068  0060  F107  FFE3   	movff	btemp+11,plusw1
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11381                           ;stkvar	_g @ sp[(-56)+16]
 11382  01006E  0ED8               	movlw	-40
 11383  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11384  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11385  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11386  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11387  010088  ECDC  F0C1         	call	___flneg	;wreg free
 11388                           
 11389                           ;stkvar	_g @ sp[(-56)+16]
 11390  01008C  0ED8               	movlw	-40
 11391  01008E  0060  F0DB  FFE3   	movff	btemp,plusw1
 11392  010094  0ED9               	movlw	-39
 11393  010096  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 11394  01009C  0EDA               	movlw	-38
 11395  01009E  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 11396  0100A4  0EDB               	movlw	-37
 11397  0100A6  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 11398  0100AC                     l9384:
 11399                           
 11400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11401                           ;stkvar	_n @ sp[(-56)+32]
 11402  0100AC  0EE8               	movlw	-24
 11403  0100AE  6AE3               	clrf	plusw1,c
 11404  0100B0  0EE9               	movlw	-23
 11405  0100B2  6AE3               	clrf	plusw1,c
 11406                           
 11407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11408                           ;stkvar	_w @ sp[(-56)+38]
 11409  0100B4  0EEE               	movlw	-18
 11410  0100B6  0060  F07F  FFE3   	movff	_width,plusw1
 11411  0100BC  0EEF               	movlw	-17
 11412  0100BE  0060  F083  FFE3   	movff	_width+1,plusw1
 11413                           
 11414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11415                           ;stkvar	_sign @ sp[(-56)+42]
 11416  0100C4  0EF2               	movlw	-14
 11417  0100C6  006F FF8C  F036    	movff	plusw1,btemp
 11418  0100CC  0EF3               	movlw	-13
 11419  0100CE  50E3               	movf	plusw1,w,c
 11420  0100D0  1036               	iorwf	btemp^0,w,c
 11421  0100D2  A4D8               	btfss	status,2,c
 11422  0100D4  D002               	goto	u9370
 11423  0100D6  A423               	btfss	_flags^0,2,c
 11424  0100D8  D036               	goto	l9404
 11425  0100DA                     u9370:
 11426                           
 11427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11428                           ;stkvar	_sign @ sp[(-56)+42]
 11429  0100DA  0EF2               	movlw	-14
 11430  0100DC  006F FF8C  F036    	movff	plusw1,btemp
 11431  0100E2  0EF3               	movlw	-13
 11432  0100E4  50E3               	movf	plusw1,w,c
 11433  0100E6  1036               	iorwf	btemp^0,w,c
 11434  0100E8  A4D8               	btfss	status,2,c
 11435  0100EA  D002               	goto	l9396
 11436  0100EC  0E2B               	movlw	43
 11437  0100EE  D001               	goto	L11
 11438  0100F0                     l9396:
 11439  0100F0  0E2D               	movlw	45
 11440  0100F2                     L11:
 11441  0100F2  6E40               	movwf	(btemp+10)^0,c
 11442  0100F4  0E00               	movlw	0
 11443  0100F6  6E41               	movwf	(btemp+11)^0,c
 11444                           
 11445                           ;stkvar	_efgtoa$4204 @ sp[(-56)+10]
 11446  0100F8  0ED2               	movlw	-46
 11447  0100FA  0060  F103  FFE3   	movff	btemp+10,plusw1
 11448  010100  0ED3               	movlw	-45
 11449  010102  0060  F107  FFE3   	movff	btemp+11,plusw1
 11450                           
 11451                           ;stkvar	_efgtoa$4204 @ sp[(-56)+10]
 11452  010108  0ED2               	movlw	-46
 11453  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11454                           
 11455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11456                           ;stkvar	_n @ sp[(-56)+32]
 11457  010110  0EE8               	movlw	-24
 11458  010112  50E3               	movf	plusw1,w,c
 11459  010114  0F01               	addlw	1
 11460  010116  6E36               	movwf	btemp^0,c
 11461  010118  0EE8               	movlw	-24
 11462  01011A  0060  F0DB  FFE3   	movff	btemp,plusw1
 11463  010120  6A36               	clrf	btemp^0,c
 11464  010122  0EE9               	movlw	-23
 11465  010124  50E3               	movf	plusw1,w,c
 11466  010126  2036               	addwfc	btemp^0,w,c
 11467  010128  6E36               	movwf	btemp^0,c
 11468  01012A  0EE9               	movlw	-23
 11469  01012C  0060  F0DB  FFE3   	movff	btemp,plusw1
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11472                           ;stkvar	_w @ sp[(-56)+38]
 11473  010132  50E1               	movf	fsr1l,w,c
 11474  010134  0FEE               	addlw	-18
 11475  010136  6ED9               	movwf	fsr2l,c
 11476  010138  50E2               	movf	fsr1h,w,c
 11477  01013A  6EDA               	movwf	fsr2h,c
 11478  01013C  0EFF               	movlw	255
 11479  01013E  22DA               	addwfc	fsr2h,f,c
 11480  010140  06DE               	decf	postinc2,f,c
 11481  010142  0E00               	movlw	0
 11482  010144  5ADD               	subwfb	postdec2,f,c
 11483  010146                     l9404:
 11484                           
 11485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11486                           ;stkvar	_g @ sp[(-56)+16]
 11487  010146  0ED8               	movlw	-40
 11488  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11489  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11490  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11491  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11492  010160  EC43  F0B2         	call	___fpclassifyf	;wreg free
 11493  010164  0436               	decf	btemp^0,w,c
 11494  010166  1037               	iorwf	(btemp+1)^0,w,c
 11495  010168  A4D8               	btfss	status,2,c
 11496  01016A  D076               	goto	l9422
 11497  01016C  0EBF               	movlw	191
 11498  01016E  6E40               	movwf	(btemp+10)^0,c
 11499  010170  0EFF               	movlw	255
 11500  010172  6E41               	movwf	(btemp+11)^0,c
 11501                           
 11502                           ;stkvar	_c @ sp[(-56)+-7]
 11503  010174  0EC1               	movlw	-63
 11504  010176  50E3               	movf	plusw1,w,c
 11505  010178  6E3E               	movwf	(btemp+8)^0,c
 11506  01017A  6A3F               	clrf	(btemp+9)^0,c
 11507  01017C  5040               	movf	(btemp+10)^0,w,c
 11508  01017E  263E               	addwf	(btemp+8)^0,f,c
 11509  010180  5041               	movf	(btemp+11)^0,w,c
 11510  010182  223F               	addwfc	(btemp+9)^0,f,c
 11511  010184  503F               	movf	(btemp+9)^0,w,c
 11512  010186  E106               	bnz	u9400
 11513  010188  0E1A               	movlw	26
 11514  01018A  5C3E               	subwf	(btemp+8)^0,w,c
 11515  01018C  B0D8               	btfsc	status,0,c
 11516  01018E  D002               	goto	u9400
 11517  010190  0E01               	movlw	1
 11518  010192  D001               	goto	u9410
 11519  010194                     u9400:
 11520  010194  0E00               	movlw	0
 11521  010196                     u9410:
 11522  010196  6E40               	movwf	(btemp+10)^0,c
 11523  010198  6A41               	clrf	(btemp+11)^0,c
 11524                           
 11525                           ;stkvar	_efgtoa$4205 @ sp[(-56)+8]
 11526  01019A  0ED0               	movlw	-48
 11527  01019C  0060  F103  FFE3   	movff	btemp+10,plusw1
 11528  0101A2  0ED1               	movlw	-47
 11529  0101A4  0060  F107  FFE3   	movff	btemp+11,plusw1
 11530                           
 11531                           ;stkvar	_efgtoa$4205 @ sp[(-56)+8]
 11532  0101AA  0ED0               	movlw	-48
 11533  0101AC  006F FF8C  F036    	movff	plusw1,btemp
 11534  0101B2  0ED1               	movlw	-47
 11535  0101B4  50E3               	movf	plusw1,w,c
 11536  0101B6  1036               	iorwf	btemp^0,w,c
 11537  0101B8  B4D8               	btfsc	status,2,c
 11538  0101BA  D017               	goto	l9414
 11539                           
 11540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11541  0101BC  0ED7               	movlw	low STR_34
 11542  0101BE  6EE6               	movwf	postinc1,c
 11543  0101C0  0EFF               	movlw	high STR_34
 11544  0101C2  6EE6               	movwf	postinc1,c
 11545                           
 11546                           ;stkvar	_n @ sp[(-58)+32]
 11547  0101C4  0EAC               	movlw	low _dbuf
 11548  0101C6  6E40               	movwf	(btemp+10)^0,c
 11549  0101C8  0E02               	movlw	high _dbuf
 11550  0101CA  6E41               	movwf	(btemp+11)^0,c
 11551  0101CC  0EE6               	movlw	-26
 11552  0101CE  50E3               	movf	plusw1,w,c
 11553  0101D0  2640               	addwf	(btemp+10)^0,f,c
 11554  0101D2  0EE7               	movlw	-25
 11555  0101D4  50E3               	movf	plusw1,w,c
 11556  0101D6  2241               	addwfc	(btemp+11)^0,f,c
 11557  0101D8  0060  F103  FFE6   	movff	btemp+10,postinc1
 11558  0101DE  0060  F107  FFE6   	movff	btemp+11,postinc1
 11559  0101E4  EC3F  F0BA         	call	_strcpy	;wreg free
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11562  0101E8  D016               	goto	l9416
 11563  0101EA                     l9414:
 11564                           
 11565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11566  0101EA  0EDF               	movlw	low STR_35
 11567  0101EC  6EE6               	movwf	postinc1,c
 11568  0101EE  0EFF               	movlw	high STR_35
 11569  0101F0  6EE6               	movwf	postinc1,c
 11570                           
 11571                           ;stkvar	_n @ sp[(-58)+32]
 11572  0101F2  0EAC               	movlw	low _dbuf
 11573  0101F4  6E40               	movwf	(btemp+10)^0,c
 11574  0101F6  0E02               	movlw	high _dbuf
 11575  0101F8  6E41               	movwf	(btemp+11)^0,c
 11576  0101FA  0EE6               	movlw	-26
 11577  0101FC  50E3               	movf	plusw1,w,c
 11578  0101FE  2640               	addwf	(btemp+10)^0,f,c
 11579  010200  0EE7               	movlw	-25
 11580  010202  50E3               	movf	plusw1,w,c
 11581  010204  2241               	addwfc	(btemp+11)^0,f,c
 11582  010206  0060  F103  FFE6   	movff	btemp+10,postinc1
 11583  01020C  0060  F107  FFE6   	movff	btemp+11,postinc1
 11584  010212  EC3F  F0BA         	call	_strcpy	;wreg free
 11585  010216                     l9416:
 11586                           
 11587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11588                           ;stkvar	_w @ sp[(-56)+38]
 11589  010216  50E1               	movf	fsr1l,w,c
 11590  010218  0FEE               	addlw	-18
 11591  01021A  6ED9               	movwf	fsr2l,c
 11592  01021C  50E2               	movf	fsr1h,w,c
 11593  01021E  6EDA               	movwf	fsr2h,c
 11594  010220  0EFF               	movlw	255
 11595  010222  22DA               	addwfc	fsr2h,f,c
 11596  010224  0EFD               	movlw	253
 11597  010226  26DE               	addwf	postinc2,f,c
 11598  010228  0EFF               	movlw	255
 11599  01022A  22DD               	addwfc	postdec2,f,c
 11600  01022C                     l9418:
 11601                           
 11602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11603                           ;stkvar	_w @ sp[(-56)+38]
 11604  01022C  0EEE               	movlw	-18
 11605  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11606  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11607  01023A  0EAC               	movlw	low _dbuf
 11608  01023C  6EE6               	movwf	postinc1,c
 11609  01023E  0E02               	movlw	high _dbuf
 11610  010240  6EE6               	movwf	postinc1,c
 11611                           
 11612                           ;stkvar	_fp @ sp[(-60)+-2]
 11613  010242  0EC2               	movlw	-62
 11614  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11615  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11616  010250  EC34  F0B8         	call	_pad	;wreg free
 11617  010254  EF1D  F089         	goto	l1812
 11618  010258                     l9422:
 11619                           
 11620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11621                           ;stkvar	_g @ sp[(-56)+16]
 11622  010258  0ED8               	movlw	-40
 11623  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11624  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11625  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11626  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11627  010272  EC43  F0B2         	call	___fpclassifyf	;wreg free
 11628  010276  5036               	movf	btemp^0,w,c
 11629  010278  1037               	iorwf	(btemp+1)^0,w,c
 11630  01027A  A4D8               	btfss	status,2,c
 11631  01027C  D056               	goto	l9440
 11632  01027E  0EBF               	movlw	191
 11633  010280  6E40               	movwf	(btemp+10)^0,c
 11634  010282  0EFF               	movlw	255
 11635  010284  6E41               	movwf	(btemp+11)^0,c
 11636                           
 11637                           ;stkvar	_c @ sp[(-56)+-7]
 11638  010286  0EC1               	movlw	-63
 11639  010288  50E3               	movf	plusw1,w,c
 11640  01028A  6E3E               	movwf	(btemp+8)^0,c
 11641  01028C  6A3F               	clrf	(btemp+9)^0,c
 11642  01028E  5040               	movf	(btemp+10)^0,w,c
 11643  010290  263E               	addwf	(btemp+8)^0,f,c
 11644  010292  5041               	movf	(btemp+11)^0,w,c
 11645  010294  223F               	addwfc	(btemp+9)^0,f,c
 11646  010296  503F               	movf	(btemp+9)^0,w,c
 11647  010298  E106               	bnz	u9440
 11648  01029A  0E1A               	movlw	26
 11649  01029C  5C3E               	subwf	(btemp+8)^0,w,c
 11650  01029E  B0D8               	btfsc	status,0,c
 11651  0102A0  D002               	goto	u9440
 11652  0102A2  0E01               	movlw	1
 11653  0102A4  D001               	goto	u9450
 11654  0102A6                     u9440:
 11655  0102A6  0E00               	movlw	0
 11656  0102A8                     u9450:
 11657  0102A8  6E40               	movwf	(btemp+10)^0,c
 11658  0102AA  6A41               	clrf	(btemp+11)^0,c
 11659                           
 11660                           ;stkvar	_efgtoa$4209 @ sp[(-56)+6]
 11661  0102AC  0ECE               	movlw	-50
 11662  0102AE  0060  F103  FFE3   	movff	btemp+10,plusw1
 11663  0102B4  0ECF               	movlw	-49
 11664  0102B6  0060  F107  FFE3   	movff	btemp+11,plusw1
 11665                           
 11666                           ;stkvar	_efgtoa$4209 @ sp[(-56)+6]
 11667  0102BC  0ECE               	movlw	-50
 11668  0102BE  006F FF8C  F036    	movff	plusw1,btemp
 11669  0102C4  0ECF               	movlw	-49
 11670  0102C6  50E3               	movf	plusw1,w,c
 11671  0102C8  1036               	iorwf	btemp^0,w,c
 11672  0102CA  B4D8               	btfsc	status,2,c
 11673  0102CC  D017               	goto	l9432
 11674                           
 11675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11676  0102CE  0EDB               	movlw	low STR_38
 11677  0102D0  6EE6               	movwf	postinc1,c
 11678  0102D2  0EFF               	movlw	high STR_38
 11679  0102D4  6EE6               	movwf	postinc1,c
 11680                           
 11681                           ;stkvar	_n @ sp[(-58)+32]
 11682  0102D6  0EAC               	movlw	low _dbuf
 11683  0102D8  6E40               	movwf	(btemp+10)^0,c
 11684  0102DA  0E02               	movlw	high _dbuf
 11685  0102DC  6E41               	movwf	(btemp+11)^0,c
 11686  0102DE  0EE6               	movlw	-26
 11687  0102E0  50E3               	movf	plusw1,w,c
 11688  0102E2  2640               	addwf	(btemp+10)^0,f,c
 11689  0102E4  0EE7               	movlw	-25
 11690  0102E6  50E3               	movf	plusw1,w,c
 11691  0102E8  2241               	addwfc	(btemp+11)^0,f,c
 11692  0102EA  0060  F103  FFE6   	movff	btemp+10,postinc1
 11693  0102F0  0060  F107  FFE6   	movff	btemp+11,postinc1
 11694  0102F6  EC3F  F0BA         	call	_strcpy	;wreg free
 11695                           
 11696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11697  0102FA  D78D               	goto	l9416
 11698  0102FC                     l9432:
 11699                           
 11700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11701  0102FC  0EE3               	movlw	low STR_39
 11702  0102FE  6EE6               	movwf	postinc1,c
 11703  010300  0EFF               	movlw	high STR_39
 11704  010302  6EE6               	movwf	postinc1,c
 11705                           
 11706                           ;stkvar	_n @ sp[(-58)+32]
 11707  010304  0EAC               	movlw	low _dbuf
 11708  010306  6E40               	movwf	(btemp+10)^0,c
 11709  010308  0E02               	movlw	high _dbuf
 11710  01030A  6E41               	movwf	(btemp+11)^0,c
 11711  01030C  0EE6               	movlw	-26
 11712  01030E  50E3               	movf	plusw1,w,c
 11713  010310  2640               	addwf	(btemp+10)^0,f,c
 11714  010312  0EE7               	movlw	-25
 11715  010314  50E3               	movf	plusw1,w,c
 11716  010316  2241               	addwfc	(btemp+11)^0,f,c
 11717  010318  0060  F103  FFE6   	movff	btemp+10,postinc1
 11718  01031E  0060  F107  FFE6   	movff	btemp+11,postinc1
 11719  010324  EC3F  F0BA         	call	_strcpy	;wreg free
 11720  010328  D776               	goto	l9416
 11721  01032A                     l9440:
 11722                           
 11723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11724  01032A  0E00               	movlw	0
 11725  01032C  6E3E               	movwf	(btemp+8)^0,c
 11726  01032E  0E00               	movlw	0
 11727  010330  6E3F               	movwf	(btemp+9)^0,c
 11728  010332  0E80               	movlw	128
 11729  010334  6E40               	movwf	(btemp+10)^0,c
 11730  010336  0E3F               	movlw	63
 11731  010338  6E41               	movwf	(btemp+11)^0,c
 11732                           
 11733                           ;stkvar	_u @ sp[(-56)+12]
 11734  01033A  0ED4               	movlw	-44
 11735  01033C  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 11736  010342  0ED5               	movlw	-43
 11737  010344  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 11738  01034A  0ED6               	movlw	-42
 11739  01034C  0060  F103  FFE3   	movff	btemp+10,plusw1
 11740  010352  0ED7               	movlw	-41
 11741  010354  0060  F107  FFE3   	movff	btemp+11,plusw1
 11742                           
 11743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11744                           ;stkvar	_e @ sp[(-56)+34]
 11745  01035A  0EEA               	movlw	-22
 11746  01035C  6AE3               	clrf	plusw1,c
 11747  01035E  0EEB               	movlw	-21
 11748  010360  6AE3               	clrf	plusw1,c
 11749                           
 11750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11751  010362  0E00               	movlw	0
 11752  010364  6EE6               	movwf	postinc1,c
 11753  010366  0E00               	movlw	0
 11754  010368  6EE6               	movwf	postinc1,c
 11755  01036A  0E00               	movlw	0
 11756  01036C  6EE6               	movwf	postinc1,c
 11757  01036E  0E00               	movlw	0
 11758  010370  6EE6               	movwf	postinc1,c
 11759                           
 11760                           ;stkvar	_g @ sp[(-60)+16]
 11761  010372  0ED4               	movlw	-44
 11762  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11763  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11764  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11765  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11766  01038C  EC0C  F0BB         	call	___fleq	;wreg free
 11767  010390  A036               	btfss	btemp& (0+255),0,c
 11768  010392  D039               	goto	l9452
 11769  010394  D0BC               	goto	u9490
 11770  010396                     l9448:
 11771                           
 11772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11773  010396  0E00               	movlw	0
 11774  010398  6EE6               	movwf	postinc1,c
 11775  01039A  0E00               	movlw	0
 11776  01039C  6EE6               	movwf	postinc1,c
 11777  01039E  0E20               	movlw	32
 11778  0103A0  6EE6               	movwf	postinc1,c
 11779  0103A2  0E41               	movlw	65
 11780  0103A4  6EE6               	movwf	postinc1,c
 11781                           
 11782                           ;stkvar	_u @ sp[(-60)+12]
 11783  0103A6  0ED0               	movlw	-48
 11784  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11785  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11786  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11789                           
 11790                           ;stkvar	_u @ sp[(-56)+12]
 11791  0103C4  0ED4               	movlw	-44
 11792  0103C6  0060  F0DB  FFE3   	movff	btemp,plusw1
 11793  0103CC  0ED5               	movlw	-43
 11794  0103CE  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 11795  0103D4  0ED6               	movlw	-42
 11796  0103D6  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 11797  0103DC  0ED7               	movlw	-41
 11798  0103DE  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 11799                           
 11800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11801                           ;stkvar	_e @ sp[(-56)+34]
 11802  0103E4  0EEA               	movlw	-22
 11803  0103E6  50E3               	movf	plusw1,w,c
 11804  0103E8  0F01               	addlw	1
 11805  0103EA  6E36               	movwf	btemp^0,c
 11806  0103EC  0EEA               	movlw	-22
 11807  0103EE  0060  F0DB  FFE3   	movff	btemp,plusw1
 11808  0103F4  6A36               	clrf	btemp^0,c
 11809  0103F6  0EEB               	movlw	-21
 11810  0103F8  50E3               	movf	plusw1,w,c
 11811  0103FA  2036               	addwfc	btemp^0,w,c
 11812  0103FC  6E36               	movwf	btemp^0,c
 11813  0103FE  0EEB               	movlw	-21
 11814  010400  0060  F0DB  FFE3   	movff	btemp,plusw1
 11815  010406                     l9452:
 11816                           
 11817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11818  010406  0E00               	movlw	0
 11819  010408  6EE6               	movwf	postinc1,c
 11820  01040A  0E00               	movlw	0
 11821  01040C  6EE6               	movwf	postinc1,c
 11822  01040E  0E20               	movlw	32
 11823  010410  6EE6               	movwf	postinc1,c
 11824  010412  0E41               	movlw	65
 11825  010414  6EE6               	movwf	postinc1,c
 11826                           
 11827                           ;stkvar	_u @ sp[(-60)+12]
 11828  010416  0ED0               	movlw	-48
 11829  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11830  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11831  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11832  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11833  010430  ECF8  F090         	call	___flmul	;wreg free
 11834  010434  0060  F0DB  FFE6   	movff	btemp,postinc1
 11835  01043A  0060  F0DF  FFE6   	movff	btemp+1,postinc1
 11836  010440  0060  F0E3  FFE6   	movff	btemp+2,postinc1
 11837  010446  0060  F0E7  FFE6   	movff	btemp+3,postinc1
 11838                           
 11839                           ;stkvar	_g @ sp[(-60)+16]
 11840  01044C  0ED4               	movlw	-44
 11841  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11843  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11844  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11845  010466  EC87  F0B4         	call	___flge	;wreg free
 11846  01046A  A036               	btfss	btemp& (0+255),0,c
 11847  01046C  D032               	goto	l9458
 11848  01046E  D793               	goto	l9448
 11849  010470                     l9454:
 11850                           
 11851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11852  010470  0E00               	movlw	0
 11853  010472  6EE6               	movwf	postinc1,c
 11854  010474  0E00               	movlw	0
 11855  010476  6EE6               	movwf	postinc1,c
 11856  010478  0E20               	movlw	32
 11857  01047A  6EE6               	movwf	postinc1,c
 11858  01047C  0E41               	movlw	65
 11859  01047E  6EE6               	movwf	postinc1,c
 11860                           
 11861                           ;stkvar	_u @ sp[(-60)+12]
 11862  010480  0ED0               	movlw	-48
 11863  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11864  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11865  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11866  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11867  01049A  ECAE  F09B         	call	___fldiv	;wreg free
 11868                           
 11869                           ;stkvar	_u @ sp[(-56)+12]
 11870  01049E  0ED4               	movlw	-44
 11871  0104A0  0060  F0DB  FFE3   	movff	btemp,plusw1
 11872  0104A6  0ED5               	movlw	-43
 11873  0104A8  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 11874  0104AE  0ED6               	movlw	-42
 11875  0104B0  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 11876  0104B6  0ED7               	movlw	-41
 11877  0104B8  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 11878                           
 11879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11880                           ;stkvar	_e @ sp[(-56)+34]
 11881  0104BE  50E1               	movf	fsr1l,w,c
 11882  0104C0  0FEA               	addlw	-22
 11883  0104C2  6ED9               	movwf	fsr2l,c
 11884  0104C4  50E2               	movf	fsr1h,w,c
 11885  0104C6  6EDA               	movwf	fsr2h,c
 11886  0104C8  0EFF               	movlw	255
 11887  0104CA  22DA               	addwfc	fsr2h,f,c
 11888  0104CC  06DE               	decf	postinc2,f,c
 11889  0104CE  0E00               	movlw	0
 11890  0104D0  5ADD               	subwfb	postdec2,f,c
 11891  0104D2                     l9458:
 11892                           
 11893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11894                           ;stkvar	_u @ sp[(-56)+12]
 11895  0104D2  0ED4               	movlw	-44
 11896  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11897  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11898  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11899  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11900                           
 11901                           ;stkvar	_g @ sp[(-60)+16]
 11902  0104EC  0ED4               	movlw	-44
 11903  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11904  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  010506  EC87  F0B4         	call	___flge	;wreg free
 11908  01050A  A036               	btfss	btemp& (0+255),0,c
 11909  01050C  D7B1               	goto	l9454
 11910  01050E                     u9490:
 11911                           
 11912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11913                           ;stkvar	_c @ sp[(-56)+-7]
 11914  01050E  0EC1               	movlw	-63
 11915  010510  50E3               	movf	plusw1,w,c
 11916  010512  6EE6               	movwf	postinc1,c
 11917  010514  0E00               	movlw	0
 11918  010516  6EE6               	movwf	postinc1,c
 11919  010518  EC7E  F0BE         	call	_tolower	;wreg free
 11920                           
 11921                           ;stkvar	_mode @ sp[(-56)+54]
 11922  01051C  0EFE               	movlw	-2
 11923  01051E  0060  F0DB  FFE3   	movff	btemp,plusw1
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11926                           ;stkvar	_mode @ sp[(-56)+54]
 11927                           ;stkvar	_nmode @ sp[(-56)+55]
 11928  010524  0EFE               	movlw	-2
 11929  010526  006F FF8C  F036    	movff	plusw1,btemp
 11930  01052C  0EFF               	movlw	-1
 11931  01052E  0060  F0DB  FFE3   	movff	btemp,plusw1
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11934                           ;stkvar	_mode @ sp[(-56)+54]
 11935  010534  0EFE               	movlw	-2
 11936  010536  006F FF8C  F036    	movff	plusw1,btemp
 11937  01053C  0E67               	movlw	103
 11938  01053E  1836               	xorwf	btemp^0,w,c
 11939  010540  A4D8               	btfss	status,2,c
 11940  010542  D025               	goto	l9476
 11941                           
 11942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11943  010544  5021               	movf	_prec^0,w,c
 11944  010546  1022               	iorwf	(_prec+1)^0,w,c
 11945  010548  A4D8               	btfss	status,2,c
 11946  01054A  D004               	goto	l9470
 11947                           
 11948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11949  01054C  0E00               	movlw	0
 11950  01054E  6E22               	movwf	(_prec+1)^0,c
 11951  010550  0E01               	movlw	1
 11952  010552  6E21               	movwf	_prec^0,c
 11953  010554                     l9470:
 11954                           
 11955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11956  010554  BE22               	btfsc	(_prec+1)^0,7,c
 11957  010556  D005               	goto	u9520
 11958  010558  5022               	movf	(_prec+1)^0,w,c
 11959  01055A  E110               	bnz	l9474
 11960  01055C  0421               	decf	_prec^0,w,c
 11961  01055E  B0D8               	btfsc	status,0,c
 11962  010560  D00D               	goto	l9474
 11963  010562                     u9520:
 11964  010562  0E06               	movlw	6
 11965  010564  6E40               	movwf	(btemp+10)^0,c
 11966  010566  0E00               	movlw	0
 11967  010568  6E41               	movwf	(btemp+11)^0,c
 11968                           
 11969                           ;stkvar	_p @ sp[(-56)+40]
 11970  01056A  0EF0               	movlw	-16
 11971  01056C  0060  F103  FFE3   	movff	btemp+10,plusw1
 11972  010572  0EF1               	movlw	-15
 11973  010574  0060  F107  FFE3   	movff	btemp+11,plusw1
 11974  01057A  D00C               	goto	l9482
 11975  01057C                     l9474:
 11976                           
 11977                           ;stkvar	_p @ sp[(-56)+40]
 11978  01057C  0EF0               	movlw	-16
 11979  01057E  0060  F087  FFE3   	movff	_prec,plusw1
 11980  010584  0EF1               	movlw	-15
 11981  010586  0060  F08B  FFE3   	movff	_prec+1,plusw1
 11982  01058C  D003               	goto	l9482
 11983  01058E                     l9476:
 11984                           
 11985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11986  01058E  AE22               	btfss	(_prec+1)^0,7,c
 11987  010590  D7F5               	goto	l9474
 11988  010592  D7E7               	goto	u9520
 11989  010594                     l9482:
 11990                           
 11991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11992                           ;stkvar	_mode @ sp[(-56)+54]
 11993  010594  0EFE               	movlw	-2
 11994  010596  006F FF8C  F036    	movff	plusw1,btemp
 11995  01059C  0E67               	movlw	103
 11996  01059E  1836               	xorwf	btemp^0,w,c
 11997  0105A0  A4D8               	btfss	status,2,c
 11998  0105A2  D02F               	goto	l9492
 11999                           
 12000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12001                           ;stkvar	_e @ sp[(-56)+34]
 12002  0105A4  0EEB               	movlw	-21
 12003  0105A6  AEE3               	btfss	plusw1,7,c
 12004  0105A8  D00E               	goto	u9550
 12005  0105AA  0EEA               	movlw	-22
 12006  0105AC  006F FF8C  F036    	movff	plusw1,btemp
 12007  0105B2  0EFC               	movlw	252
 12008  0105B4  5E36               	subwf	btemp^0,f,c
 12009  0105B6  0EEB               	movlw	-21
 12010  0105B8  006F FF8C  F036    	movff	plusw1,btemp
 12011  0105BE  0EFF               	movlw	255
 12012  0105C0  5A36               	subwfb	btemp^0,f,c
 12013  0105C2  A0D8               	btfss	status,0,c
 12014  0105C4  D018               	goto	l9490
 12015  0105C6                     u9550:
 12016                           
 12017                           ;stkvar	_e @ sp[(-56)+34]
 12018                           ;stkvar	_p @ sp[(-56)+40]
 12019  0105C6  0EF0               	movlw	-16
 12020  0105C8  50E3               	movf	plusw1,w,c
 12021  0105CA  0FFF               	addlw	255
 12022  0105CC  6E40               	movwf	(btemp+10)^0,c
 12023  0105CE  0EF1               	movlw	-15
 12024  0105D0  006F FF8C  F041    	movff	plusw1,btemp+11
 12025  0105D6  0EFF               	movlw	255
 12026  0105D8  2241               	addwfc	(btemp+11)^0,f,c
 12027  0105DA  0EEA               	movlw	-22
 12028  0105DC  50E3               	movf	plusw1,w,c
 12029  0105DE  5C40               	subwf	(btemp+10)^0,w,c
 12030  0105E0  5041               	movf	(btemp+11)^0,w,c
 12031  0105E2  0A80               	xorlw	128
 12032  0105E4  6E36               	movwf	btemp^0,c
 12033  0105E6  0EEB               	movlw	-21
 12034  0105E8  50E3               	movf	plusw1,w,c
 12035  0105EA  0A80               	xorlw	128
 12036  0105EC  5836               	subwfb	btemp^0,w,c
 12037  0105EE  A0D8               	btfss	status,0,c
 12038  0105F0  D002               	goto	l9490
 12039                           
 12040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12041  0105F2  0E66               	movlw	102
 12042  0105F4  D001               	goto	L12
 12043  0105F6                     l9490:
 12044                           
 12045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12046  0105F6  0E65               	movlw	101
 12047  0105F8                     L12:
 12048  0105F8  6E41               	movwf	(btemp+11)^0,c
 12049                           
 12050                           ;stkvar	_nmode @ sp[(-56)+55]
 12051  0105FA  0EFF               	movlw	-1
 12052  0105FC  0060  F107  FFE3   	movff	btemp+11,plusw1
 12053  010602                     l9492:
 12054                           
 12055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12056                           ;stkvar	_p @ sp[(-56)+40]
 12057                           ;stkvar	_m @ sp[(-56)+48]
 12058  010602  0EF0               	movlw	-16
 12059  010604  006F FF8C  F036    	movff	plusw1,btemp
 12060  01060A  0EF8               	movlw	-8
 12061  01060C  0060  F0DB  FFE3   	movff	btemp,plusw1
 12062  010612  0EF1               	movlw	-15
 12063  010614  006F FF8C  F036    	movff	plusw1,btemp
 12064  01061A  0EF9               	movlw	-7
 12065  01061C  0060  F0DB  FFE3   	movff	btemp,plusw1
 12066                           
 12067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12068                           ;stkvar	_mode @ sp[(-56)+54]
 12069  010622  0EFE               	movlw	-2
 12070  010624  006F FF8C  F036    	movff	plusw1,btemp
 12071  01062A  0E67               	movlw	103
 12072  01062C  1836               	xorwf	btemp^0,w,c
 12073  01062E  A4D8               	btfss	status,2,c
 12074  010630  D00B               	goto	u9590
 12075                           
 12076                           ;stkvar	_nmode @ sp[(-56)+55]
 12077  010632  0EFF               	movlw	-1
 12078  010634  006F FF8C  F036    	movff	plusw1,btemp
 12079  01063A  0E66               	movlw	102
 12080  01063C  1836               	xorwf	btemp^0,w,c
 12081  01063E  A4D8               	btfss	status,2,c
 12082  010640  D014               	goto	l1841
 12083                           
 12084                           ;stkvar	_e @ sp[(-56)+34]
 12085  010642  0EEB               	movlw	-21
 12086  010644  AEE3               	btfss	plusw1,7,c
 12087  010646  D011               	goto	l1841
 12088  010648                     u9590:
 12089                           
 12090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12091                           ;stkvar	_m @ sp[(-56)+48]
 12092  010648  0EF8               	movlw	-8
 12093  01064A  50E3               	movf	plusw1,w,c
 12094  01064C  0F01               	addlw	1
 12095  01064E  6E36               	movwf	btemp^0,c
 12096  010650  0EF8               	movlw	-8
 12097  010652  0060  F0DB  FFE3   	movff	btemp,plusw1
 12098  010658  6A36               	clrf	btemp^0,c
 12099  01065A  0EF9               	movlw	-7
 12100  01065C  50E3               	movf	plusw1,w,c
 12101  01065E  2036               	addwfc	btemp^0,w,c
 12102  010660  6E36               	movwf	btemp^0,c
 12103  010662  0EF9               	movlw	-7
 12104  010664  0060  F0DB  FFE3   	movff	btemp,plusw1
 12105  01066A                     l1841:
 12106                           
 12107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12108                           ;stkvar	_nmode @ sp[(-56)+55]
 12109  01066A  0EFF               	movlw	-1
 12110  01066C  006F FF8C  F036    	movff	plusw1,btemp
 12111  010672  0E66               	movlw	102
 12112  010674  1836               	xorwf	btemp^0,w,c
 12113  010676  A4D8               	btfss	status,2,c
 12114  010678  D03B               	goto	l9512
 12115                           
 12116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12117                           ;stkvar	_e @ sp[(-56)+34]
 12118  01067A  0EEB               	movlw	-21
 12119  01067C  AEE3               	btfss	plusw1,7,c
 12120  01067E  D01C               	goto	l9508
 12121                           
 12122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12123  010680  0E00               	movlw	0
 12124  010682  6E3E               	movwf	(btemp+8)^0,c
 12125  010684  0E00               	movlw	0
 12126  010686  6E3F               	movwf	(btemp+9)^0,c
 12127  010688  0E80               	movlw	128
 12128  01068A  6E40               	movwf	(btemp+10)^0,c
 12129  01068C  0E3F               	movlw	63
 12130  01068E  6E41               	movwf	(btemp+11)^0,c
 12131                           
 12132                           ;stkvar	_u @ sp[(-56)+12]
 12133  010690  0ED4               	movlw	-44
 12134  010692  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 12135  010698  0ED5               	movlw	-43
 12136  01069A  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 12137  0106A0  0ED6               	movlw	-42
 12138  0106A2  0060  F103  FFE3   	movff	btemp+10,plusw1
 12139  0106A8  0ED7               	movlw	-41
 12140  0106AA  0060  F107  FFE3   	movff	btemp+11,plusw1
 12141                           
 12142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12143                           ;stkvar	_e @ sp[(-56)+34]
 12144  0106B0  0EEA               	movlw	-22
 12145  0106B2  6AE3               	clrf	plusw1,c
 12146  0106B4  0EEB               	movlw	-21
 12147  0106B6  6AE3               	clrf	plusw1,c
 12148  0106B8                     l9508:
 12149                           
 12150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12151                           ;stkvar	_mode @ sp[(-56)+54]
 12152  0106B8  0EFE               	movlw	-2
 12153  0106BA  006F FF8C  F036    	movff	plusw1,btemp
 12154  0106C0  0E67               	movlw	103
 12155  0106C2  1836               	xorwf	btemp^0,w,c
 12156  0106C4  B4D8               	btfsc	status,2,c
 12157  0106C6  D014               	goto	l9512
 12158                           
 12159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12160                           ;stkvar	_e @ sp[(-56)+34]
 12161                           ;stkvar	_m @ sp[(-56)+48]
 12162  0106C8  0EF8               	movlw	-8
 12163  0106CA  50E3               	movf	plusw1,w,c
 12164  0106CC  6E36               	movwf	btemp^0,c
 12165  0106CE  0EEA               	movlw	-22
 12166  0106D0  50E3               	movf	plusw1,w,c
 12167  0106D2  2636               	addwf	btemp^0,f,c
 12168  0106D4  0EF8               	movlw	-8
 12169  0106D6  0060  F0DB  FFE3   	movff	btemp,plusw1
 12170  0106DC  0EF9               	movlw	-7
 12171  0106DE  50E3               	movf	plusw1,w,c
 12172  0106E0  6E36               	movwf	btemp^0,c
 12173  0106E2  0EEB               	movlw	-21
 12174  0106E4  50E3               	movf	plusw1,w,c
 12175  0106E6  2236               	addwfc	btemp^0,f,c
 12176  0106E8  0EF9               	movlw	-7
 12177  0106EA  0060  F0DB  FFE3   	movff	btemp,plusw1
 12178  0106F0                     l9512:
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12181                           ;stkvar	_i @ sp[(-56)+36]
 12182  0106F0  0EEC               	movlw	-20
 12183  0106F2  6AE3               	clrf	plusw1,c
 12184  0106F4  0EED               	movlw	-19
 12185  0106F6  6AE3               	clrf	plusw1,c
 12186                           
 12187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12188                           ;stkvar	_g @ sp[(-56)+16]
 12189  0106F8  0ED8               	movlw	-40
 12190  0106FA  006F FF8C  F03E    	movff	plusw1,btemp+8
 12191  010700  0ED9               	movlw	-39
 12192  010702  006F FF8C  F03F    	movff	plusw1,btemp+9
 12193  010708  0EDA               	movlw	-38
 12194  01070A  006F FF8C  F040    	movff	plusw1,btemp+10
 12195  010710  0EDB               	movlw	-37
 12196  010712  006F FF8C  F041    	movff	plusw1,btemp+11
 12197                           
 12198                           ;stkvar	_h @ sp[(-56)+24]
 12199  010718  0EE0               	movlw	-32
 12200  01071A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 12201  010720  0EE1               	movlw	-31
 12202  010722  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 12203  010728  0EE2               	movlw	-30
 12204  01072A  0060  F103  FFE3   	movff	btemp+10,plusw1
 12205  010730  0EE3               	movlw	-29
 12206  010732  0060  F107  FFE3   	movff	btemp+11,plusw1
 12207                           
 12208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12209                           ;stkvar	_u @ sp[(-56)+12]
 12210  010738  0ED4               	movlw	-44
 12211  01073A  006F FF8C  F03E    	movff	plusw1,btemp+8
 12212  010740  0ED5               	movlw	-43
 12213  010742  006F FF8C  F03F    	movff	plusw1,btemp+9
 12214  010748  0ED6               	movlw	-42
 12215  01074A  006F FF8C  F040    	movff	plusw1,btemp+10
 12216  010750  0ED7               	movlw	-41
 12217  010752  006F FF8C  F041    	movff	plusw1,btemp+11
 12218                           
 12219                           ;stkvar	_ou @ sp[(-56)+28]
 12220  010758  0EE4               	movlw	-28
 12221  01075A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 12222  010760  0EE5               	movlw	-27
 12223  010762  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 12224  010768  0EE6               	movlw	-26
 12225  01076A  0060  F103  FFE3   	movff	btemp+10,plusw1
 12226  010770  0EE7               	movlw	-25
 12227  010772  0060  F107  FFE3   	movff	btemp+11,plusw1
 12228                           
 12229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12230  010778  D0D6               	goto	l9528
 12231  01077A                     l9518:
 12232                           
 12233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12234                           ;stkvar	_u @ sp[(-56)+12]
 12235  01077A  0ED4               	movlw	-44
 12236  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12237  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12238  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12239  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12240                           
 12241                           ;stkvar	_h @ sp[(-60)+24]
 12242  010794  0EDC               	movlw	-36
 12243  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12244  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12245  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12246  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12247  0107AE  ECAE  F09B         	call	___fldiv	;wreg free
 12248  0107B2  0060  F0DB  FFE6   	movff	btemp,postinc1
 12249  0107B8  0060  F0DF  FFE6   	movff	btemp+1,postinc1
 12250  0107BE  0060  F0E3  FFE6   	movff	btemp+2,postinc1
 12251  0107C4  0060  F0E7  FFE6   	movff	btemp+3,postinc1
 12252  0107CA  EC83  F0A4         	call	_floorf	;wreg free
 12253                           
 12254                           ;stkvar	_l @ sp[(-56)+20]
 12255  0107CE  0EDC               	movlw	-36
 12256  0107D0  0060  F0DB  FFE3   	movff	btemp,plusw1
 12257  0107D6  0EDD               	movlw	-35
 12258  0107D8  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12259  0107DE  0EDE               	movlw	-34
 12260  0107E0  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12261  0107E6  0EDF               	movlw	-33
 12262  0107E8  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12263                           
 12264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12265                           ;stkvar	_l @ sp[(-56)+20]
 12266  0107EE  0EDC               	movlw	-36
 12267  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12268  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12269  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  010808  ECCE  F0B3         	call	___fltol	;wreg free
 12272  01080C  0060  F0D8  F040   	movff	btemp,btemp+10
 12273  010812  0060  F0DC  F041   	movff	btemp+1,btemp+11
 12274                           
 12275                           ;stkvar	_d @ sp[(-56)+44]
 12276  010818  0EF4               	movlw	-12
 12277  01081A  0060  F103  FFE3   	movff	btemp+10,plusw1
 12278  010820  0EF5               	movlw	-11
 12279  010822  0060  F107  FFE3   	movff	btemp+11,plusw1
 12280                           
 12281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12282                           ;stkvar	_u @ sp[(-56)+12]
 12283  010828  0ED4               	movlw	-44
 12284  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12285  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12286  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12288                           
 12289                           ;stkvar	_l @ sp[(-60)+20]
 12290  010842  0ED8               	movlw	-40
 12291  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12293  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12294  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12295  01085C  ECF8  F090         	call	___flmul	;wreg free
 12296  010860  0060  F0DB  FFE6   	movff	btemp,postinc1
 12297  010866  0060  F0DF  FFE6   	movff	btemp+1,postinc1
 12298  01086C  0060  F0E3  FFE6   	movff	btemp+2,postinc1
 12299  010872  0060  F0E7  FFE6   	movff	btemp+3,postinc1
 12300                           
 12301                           ;stkvar	_h @ sp[(-60)+24]
 12302  010878  0EDC               	movlw	-36
 12303  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12304  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12305  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12306  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12307  010892  EC00  F0C2         	call	___flsub	;wreg free
 12308                           
 12309                           ;stkvar	_h @ sp[(-56)+24]
 12310  010896  0EE0               	movlw	-32
 12311  010898  0060  F0DB  FFE3   	movff	btemp,plusw1
 12312  01089E  0EE1               	movlw	-31
 12313  0108A0  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12314  0108A6  0EE2               	movlw	-30
 12315  0108A8  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12316  0108AE  0EE3               	movlw	-29
 12317  0108B0  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12318                           
 12319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12320  0108B6  0E00               	movlw	0
 12321  0108B8  6EE6               	movwf	postinc1,c
 12322  0108BA  0E00               	movlw	0
 12323  0108BC  6EE6               	movwf	postinc1,c
 12324  0108BE  0E20               	movlw	32
 12325  0108C0  6EE6               	movwf	postinc1,c
 12326  0108C2  0E41               	movlw	65
 12327  0108C4  6EE6               	movwf	postinc1,c
 12328                           
 12329                           ;stkvar	_u @ sp[(-60)+12]
 12330  0108C6  0ED0               	movlw	-48
 12331  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12334  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12335  0108E0  ECAE  F09B         	call	___fldiv	;wreg free
 12336                           
 12337                           ;stkvar	_u @ sp[(-56)+12]
 12338  0108E4  0ED4               	movlw	-44
 12339  0108E6  0060  F0DB  FFE3   	movff	btemp,plusw1
 12340  0108EC  0ED5               	movlw	-43
 12341  0108EE  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12342  0108F4  0ED6               	movlw	-42
 12343  0108F6  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12344  0108FC  0ED7               	movlw	-41
 12345  0108FE  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12346                           
 12347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12348                           ;stkvar	_i @ sp[(-56)+36]
 12349  010904  0EEC               	movlw	-20
 12350  010906  50E3               	movf	plusw1,w,c
 12351  010908  0F01               	addlw	1
 12352  01090A  6E36               	movwf	btemp^0,c
 12353  01090C  0EEC               	movlw	-20
 12354  01090E  0060  F0DB  FFE3   	movff	btemp,plusw1
 12355  010914  6A36               	clrf	btemp^0,c
 12356  010916  0EED               	movlw	-19
 12357  010918  50E3               	movf	plusw1,w,c
 12358  01091A  2036               	addwfc	btemp^0,w,c
 12359  01091C  6E36               	movwf	btemp^0,c
 12360  01091E  0EED               	movlw	-19
 12361  010920  0060  F0DB  FFE3   	movff	btemp,plusw1
 12362  010926                     l9528:
 12363                           
 12364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12365                           ;stkvar	_m @ sp[(-56)+48]
 12366                           ;stkvar	_i @ sp[(-56)+36]
 12367  010926  50E1               	movf	fsr1l,w,c
 12368  010928  0FEC               	addlw	-20
 12369  01092A  6ED9               	movwf	fsr2l,c
 12370  01092C  50E2               	movf	fsr1h,w,c
 12371  01092E  6EDA               	movwf	fsr2h,c
 12372  010930  0EFF               	movlw	255
 12373  010932  22DA               	addwfc	fsr2h,f,c
 12374  010934  0EF8               	movlw	-8
 12375  010936  50E3               	movf	plusw1,w,c
 12376  010938  5CDE               	subwf	postinc2,w,c
 12377  01093A  50DE               	movf	postinc2,w,c
 12378  01093C  0A80               	xorlw	128
 12379  01093E  6E36               	movwf	btemp^0,c
 12380  010940  0EF9               	movlw	-7
 12381  010942  50E3               	movf	plusw1,w,c
 12382  010944  0A80               	xorlw	128
 12383  010946  5836               	subwfb	btemp^0,w,c
 12384  010948  A0D8               	btfss	status,0,c
 12385  01094A  D717               	goto	l9518
 12386                           
 12387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12388  01094C  0E00               	movlw	0
 12389  01094E  6EE6               	movwf	postinc1,c
 12390  010950  0E00               	movlw	0
 12391  010952  6EE6               	movwf	postinc1,c
 12392  010954  0EA0               	movlw	160
 12393  010956  6EE6               	movwf	postinc1,c
 12394  010958  0E40               	movlw	64
 12395  01095A  6EE6               	movwf	postinc1,c
 12396                           
 12397                           ;stkvar	_u @ sp[(-60)+12]
 12398  01095C  0ED0               	movlw	-48
 12399  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12400  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12401  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12402  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12403  010976  ECF8  F090         	call	___flmul	;wreg free
 12404                           
 12405                           ;stkvar	_l @ sp[(-56)+20]
 12406  01097A  0EDC               	movlw	-36
 12407  01097C  0060  F0DB  FFE3   	movff	btemp,plusw1
 12408  010982  0EDD               	movlw	-35
 12409  010984  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12410  01098A  0EDE               	movlw	-34
 12411  01098C  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12412  010992  0EDF               	movlw	-33
 12413  010994  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12414                           
 12415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12416                           ;stkvar	_l @ sp[(-56)+20]
 12417  01099A  0EDC               	movlw	-36
 12418  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12419  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12420  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12421  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12422                           
 12423                           ;stkvar	_h @ sp[(-60)+24]
 12424  0109B4  0EDC               	movlw	-36
 12425  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12426  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12427  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12428  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12429  0109CE  EC87  F0B4         	call	___flge	;wreg free
 12430  0109D2  A036               	btfss	btemp& (0+255),0,c
 12431  0109D4  D021               	goto	u9660
 12432                           
 12433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12434                           ;stkvar	_l @ sp[(-56)+20]
 12435                           
 12436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12437                           
 12438                           ;stkvar	_l @ sp[(-56)+20]
 12439                           
 12440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12441  0109D6  0EDC               	movlw	-36
 12442  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12443  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12444  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12445  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12446                           
 12447                           ;stkvar	_h @ sp[(-60)+24]
 12448  0109F0  0EDC               	movlw	-36
 12449  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12450  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12451  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12452  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12453  010A0A  EC0C  F0BB         	call	___fleq	;wreg free
 12454  010A0E  A036               	btfss	btemp& (0+255),0,c
 12455  010A10  D01B               	goto	l9542
 12456                           
 12457                           ;stkvar	_d @ sp[(-56)+44]
 12458  010A12  0EF4               	movlw	-12
 12459  010A14  B0E3               	btfsc	plusw1,0,c
 12460  010A16  D018               	goto	l9542
 12461  010A18                     u9660:
 12462                           
 12463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12464  010A18  0E00               	movlw	0
 12465  010A1A  6E3E               	movwf	(btemp+8)^0,c
 12466  010A1C  0E00               	movlw	0
 12467  010A1E  6E3F               	movwf	(btemp+9)^0,c
 12468  010A20  0E00               	movlw	0
 12469  010A22  6E40               	movwf	(btemp+10)^0,c
 12470  010A24  0E00               	movlw	0
 12471  010A26  6E41               	movwf	(btemp+11)^0,c
 12472                           
 12473                           ;stkvar	_l @ sp[(-56)+20]
 12474  010A28  0EDC               	movlw	-36
 12475  010A2A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 12476  010A30  0EDD               	movlw	-35
 12477  010A32  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 12478  010A38  0EDE               	movlw	-34
 12479  010A3A  0060  F103  FFE3   	movff	btemp+10,plusw1
 12480  010A40  0EDF               	movlw	-33
 12481  010A42  0060  F107  FFE3   	movff	btemp+11,plusw1
 12482  010A48                     l9542:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12485                           ;stkvar	_l @ sp[(-56)+20]
 12486  010A48  0EDC               	movlw	-36
 12487  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12488  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12489  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12491                           
 12492                           ;stkvar	_g @ sp[(-60)+16]
 12493  010A62  0ED4               	movlw	-44
 12494  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12495  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12496  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12497  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12499                           
 12500                           ;stkvar	_h @ sp[(-56)+24]
 12501  010A80  0EE0               	movlw	-32
 12502  010A82  0060  F0DB  FFE3   	movff	btemp,plusw1
 12503  010A88  0EE1               	movlw	-31
 12504  010A8A  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12505  010A90  0EE2               	movlw	-30
 12506  010A92  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12507  010A98  0EE3               	movlw	-29
 12508  010A9A  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12509                           
 12510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12511                           ;stkvar	_ou @ sp[(-56)+28]
 12512  010AA0  0EE4               	movlw	-28
 12513  010AA2  006F FF8C  F03E    	movff	plusw1,btemp+8
 12514  010AA8  0EE5               	movlw	-27
 12515  010AAA  006F FF8C  F03F    	movff	plusw1,btemp+9
 12516  010AB0  0EE6               	movlw	-26
 12517  010AB2  006F FF8C  F040    	movff	plusw1,btemp+10
 12518  010AB8  0EE7               	movlw	-25
 12519  010ABA  006F FF8C  F041    	movff	plusw1,btemp+11
 12520                           
 12521                           ;stkvar	_u @ sp[(-56)+12]
 12522  010AC0  0ED4               	movlw	-44
 12523  010AC2  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 12524  010AC8  0ED5               	movlw	-43
 12525  010ACA  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 12526  010AD0  0ED6               	movlw	-42
 12527  010AD2  0060  F103  FFE3   	movff	btemp+10,plusw1
 12528  010AD8  0ED7               	movlw	-41
 12529  010ADA  0060  F107  FFE3   	movff	btemp+11,plusw1
 12530                           
 12531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12532                           ;stkvar	_nmode @ sp[(-56)+55]
 12533  010AE0  0EFF               	movlw	-1
 12534  010AE2  006F FF8C  F036    	movff	plusw1,btemp
 12535  010AE8  0E65               	movlw	101
 12536  010AEA  1836               	xorwf	btemp^0,w,c
 12537  010AEC  B4D8               	btfsc	status,2,c
 12538  010AEE  D011               	goto	l9550
 12539                           
 12540                           ;stkvar	_e @ sp[(-56)+34]
 12541                           ;stkvar	_ne @ sp[(-56)+46]
 12542  010AF0  0EEA               	movlw	-22
 12543  010AF2  006F FF8C  F036    	movff	plusw1,btemp
 12544  010AF8  0EF6               	movlw	-10
 12545  010AFA  0060  F0DB  FFE3   	movff	btemp,plusw1
 12546  010B00  0EEB               	movlw	-21
 12547  010B02  006F FF8C  F036    	movff	plusw1,btemp
 12548  010B08  0EF7               	movlw	-9
 12549  010B0A  0060  F0DB  FFE3   	movff	btemp,plusw1
 12550  010B10  D004               	goto	l1856
 12551  010B12                     l9550:
 12552                           
 12553                           ;stkvar	_ne @ sp[(-56)+46]
 12554  010B12  0EF6               	movlw	-10
 12555  010B14  6AE3               	clrf	plusw1,c
 12556  010B16  0EF7               	movlw	-9
 12557  010B18  6AE3               	clrf	plusw1,c
 12558  010B1A                     l1856:
 12559                           
 12560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12561                           ;stkvar	_pp @ sp[(-56)+50]
 12562  010B1A  0EFA               	movlw	-6
 12563  010B1C  6AE3               	clrf	plusw1,c
 12564  010B1E  0EFB               	movlw	-5
 12565  010B20  6AE3               	clrf	plusw1,c
 12566                           
 12567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12568                           ;stkvar	_t @ sp[(-56)+52]
 12569  010B22  0EFC               	movlw	-4
 12570  010B24  6AE3               	clrf	plusw1,c
 12571  010B26  0EFD               	movlw	-3
 12572  010B28  6AE3               	clrf	plusw1,c
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12575                           ;stkvar	_i @ sp[(-56)+36]
 12576  010B2A  0EEC               	movlw	-20
 12577  010B2C  6AE3               	clrf	plusw1,c
 12578  010B2E  0EED               	movlw	-19
 12579  010B30  6AE3               	clrf	plusw1,c
 12580                           
 12581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12582  010B32  D1B7               	goto	l9602
 12583  010B34                     l9552:
 12584                           
 12585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12586                           ;stkvar	_u @ sp[(-56)+12]
 12587  010B34  0ED4               	movlw	-44
 12588  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12589  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12590  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12591  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12592                           
 12593                           ;stkvar	_h @ sp[(-60)+24]
 12594  010B4E  0EDC               	movlw	-36
 12595  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12596  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12597  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12598  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12599  010B68  ECAE  F09B         	call	___fldiv	;wreg free
 12600  010B6C  0060  F0DB  FFE6   	movff	btemp,postinc1
 12601  010B72  0060  F0DF  FFE6   	movff	btemp+1,postinc1
 12602  010B78  0060  F0E3  FFE6   	movff	btemp+2,postinc1
 12603  010B7E  0060  F0E7  FFE6   	movff	btemp+3,postinc1
 12604  010B84  EC83  F0A4         	call	_floorf	;wreg free
 12605                           
 12606                           ;stkvar	_l @ sp[(-56)+20]
 12607  010B88  0EDC               	movlw	-36
 12608  010B8A  0060  F0DB  FFE3   	movff	btemp,plusw1
 12609  010B90  0EDD               	movlw	-35
 12610  010B92  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12611  010B98  0EDE               	movlw	-34
 12612  010B9A  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12613  010BA0  0EDF               	movlw	-33
 12614  010BA2  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12615                           
 12616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12617                           ;stkvar	_l @ sp[(-56)+20]
 12618  010BA8  0EDC               	movlw	-36
 12619  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12620  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12621  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12623  010BC2  ECCE  F0B3         	call	___fltol	;wreg free
 12624  010BC6  0060  F0D8  F040   	movff	btemp,btemp+10
 12625  010BCC  0060  F0DC  F041   	movff	btemp+1,btemp+11
 12626                           
 12627                           ;stkvar	_d @ sp[(-56)+44]
 12628  010BD2  0EF4               	movlw	-12
 12629  010BD4  0060  F103  FFE3   	movff	btemp+10,plusw1
 12630  010BDA  0EF5               	movlw	-11
 12631  010BDC  0060  F107  FFE3   	movff	btemp+11,plusw1
 12632                           
 12633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12634  010BE2  B823               	btfsc	_flags^0,4,c
 12635  010BE4  D026               	goto	l9566
 12636                           
 12637                           ;stkvar	_d @ sp[(-56)+44]
 12638  010BE6  0EF4               	movlw	-12
 12639  010BE8  006F FF8C  F036    	movff	plusw1,btemp
 12640  010BEE  0EF5               	movlw	-11
 12641  010BF0  50E3               	movf	plusw1,w,c
 12642  010BF2  1036               	iorwf	btemp^0,w,c
 12643  010BF4  A4D8               	btfss	status,2,c
 12644  010BF6  D01D               	goto	l9566
 12645                           
 12646                           ;stkvar	_mode @ sp[(-56)+54]
 12647  010BF8  0EFE               	movlw	-2
 12648  010BFA  006F FF8C  F036    	movff	plusw1,btemp
 12649  010C00  0E67               	movlw	103
 12650  010C02  1836               	xorwf	btemp^0,w,c
 12651  010C04  A4D8               	btfss	status,2,c
 12652  010C06  D015               	goto	l9566
 12653                           
 12654                           ;stkvar	_ne @ sp[(-56)+46]
 12655  010C08  0EF7               	movlw	-9
 12656  010C0A  AEE3               	btfss	plusw1,7,c
 12657  010C0C  D012               	goto	l9566
 12658                           
 12659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12660                           ;stkvar	_t @ sp[(-56)+52]
 12661  010C0E  0EFC               	movlw	-4
 12662  010C10  50E3               	movf	plusw1,w,c
 12663  010C12  0F01               	addlw	1
 12664  010C14  6E36               	movwf	btemp^0,c
 12665  010C16  0EFC               	movlw	-4
 12666  010C18  0060  F0DB  FFE3   	movff	btemp,plusw1
 12667  010C1E  6A36               	clrf	btemp^0,c
 12668  010C20  0EFD               	movlw	-3
 12669  010C22  50E3               	movf	plusw1,w,c
 12670  010C24  2036               	addwfc	btemp^0,w,c
 12671  010C26  6E36               	movwf	btemp^0,c
 12672  010C28  0EFD               	movlw	-3
 12673  010C2A  0060  F0DB  FFE3   	movff	btemp,plusw1
 12674                           
 12675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12676  010C30  D0AF               	goto	l9594
 12677  010C32                     l9566:
 12678                           
 12679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12680                           ;stkvar	_pp @ sp[(-56)+50]
 12681  010C32  0EFA               	movlw	-6
 12682  010C34  006F FF8C  F036    	movff	plusw1,btemp
 12683  010C3A  0EFB               	movlw	-5
 12684  010C3C  50E3               	movf	plusw1,w,c
 12685  010C3E  1036               	iorwf	btemp^0,w,c
 12686  010C40  A4D8               	btfss	status,2,c
 12687  010C42  D070               	goto	l9586
 12688                           
 12689                           ;stkvar	_ne @ sp[(-56)+46]
 12690  010C44  0EF7               	movlw	-9
 12691  010C46  AEE3               	btfss	plusw1,7,c
 12692  010C48  D06D               	goto	l9586
 12693                           
 12694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12695                           ;stkvar	_n @ sp[(-56)+32]
 12696  010C4A  0EE8               	movlw	-24
 12697  010C4C  006F FF8C  F040    	movff	plusw1,btemp+10
 12698  010C52  0EE9               	movlw	-23
 12699  010C54  006F FF8C  F041    	movff	plusw1,btemp+11
 12700  010C5A  0EAC               	movlw	low _dbuf
 12701  010C5C  2440               	addwf	(btemp+10)^0,w,c
 12702  010C5E  6ED9               	movwf	fsr2l,c
 12703  010C60  0E02               	movlw	high _dbuf
 12704  010C62  2041               	addwfc	(btemp+11)^0,w,c
 12705  010C64  6EDA               	movwf	fsr2h,c
 12706  010C66  0E2E               	movlw	46
 12707  010C68  6EDF               	movwf	indf2,c
 12708                           
 12709                           ;stkvar	_n @ sp[(-56)+32]
 12710  010C6A  0EE8               	movlw	-24
 12711  010C6C  50E3               	movf	plusw1,w,c
 12712  010C6E  0F01               	addlw	1
 12713  010C70  6E36               	movwf	btemp^0,c
 12714  010C72  0EE8               	movlw	-24
 12715  010C74  0060  F0DB  FFE3   	movff	btemp,plusw1
 12716  010C7A  6A36               	clrf	btemp^0,c
 12717  010C7C  0EE9               	movlw	-23
 12718  010C7E  50E3               	movf	plusw1,w,c
 12719  010C80  2036               	addwfc	btemp^0,w,c
 12720  010C82  6E36               	movwf	btemp^0,c
 12721  010C84  0EE9               	movlw	-23
 12722  010C86  0060  F0DB  FFE3   	movff	btemp,plusw1
 12723                           
 12724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12725                           ;stkvar	_w @ sp[(-56)+38]
 12726  010C8C  50E1               	movf	fsr1l,w,c
 12727  010C8E  0FEE               	addlw	-18
 12728  010C90  6ED9               	movwf	fsr2l,c
 12729  010C92  50E2               	movf	fsr1h,w,c
 12730  010C94  6EDA               	movwf	fsr2h,c
 12731  010C96  0EFF               	movlw	255
 12732  010C98  22DA               	addwfc	fsr2h,f,c
 12733  010C9A  06DE               	decf	postinc2,f,c
 12734  010C9C  0E00               	movlw	0
 12735  010C9E  5ADD               	subwfb	postdec2,f,c
 12736                           
 12737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12738  010CA0  0E01               	movlw	1
 12739  010CA2  6E40               	movwf	(btemp+10)^0,c
 12740  010CA4  0E00               	movlw	0
 12741  010CA6  6E41               	movwf	(btemp+11)^0,c
 12742                           
 12743                           ;stkvar	_pp @ sp[(-56)+50]
 12744  010CA8  0EFA               	movlw	-6
 12745  010CAA  0060  F103  FFE3   	movff	btemp+10,plusw1
 12746  010CB0  0EFB               	movlw	-5
 12747  010CB2  0060  F107  FFE3   	movff	btemp+11,plusw1
 12748  010CB8  D035               	goto	l9586
 12749  010CBA                     l9578:
 12750                           
 12751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12752                           ;stkvar	_n @ sp[(-56)+32]
 12753  010CBA  0EE8               	movlw	-24
 12754  010CBC  006F FF8C  F040    	movff	plusw1,btemp+10
 12755  010CC2  0EE9               	movlw	-23
 12756  010CC4  006F FF8C  F041    	movff	plusw1,btemp+11
 12757  010CCA  0EAC               	movlw	low _dbuf
 12758  010CCC  2440               	addwf	(btemp+10)^0,w,c
 12759  010CCE  6ED9               	movwf	fsr2l,c
 12760  010CD0  0E02               	movlw	high _dbuf
 12761  010CD2  2041               	addwfc	(btemp+11)^0,w,c
 12762  010CD4  6EDA               	movwf	fsr2h,c
 12763  010CD6  0E30               	movlw	48
 12764  010CD8  6EDF               	movwf	indf2,c
 12765                           
 12766                           ;stkvar	_n @ sp[(-56)+32]
 12767  010CDA  0EE8               	movlw	-24
 12768  010CDC  50E3               	movf	plusw1,w,c
 12769  010CDE  0F01               	addlw	1
 12770  010CE0  6E36               	movwf	btemp^0,c
 12771  010CE2  0EE8               	movlw	-24
 12772  010CE4  0060  F0DB  FFE3   	movff	btemp,plusw1
 12773  010CEA  6A36               	clrf	btemp^0,c
 12774  010CEC  0EE9               	movlw	-23
 12775  010CEE  50E3               	movf	plusw1,w,c
 12776  010CF0  2036               	addwfc	btemp^0,w,c
 12777  010CF2  6E36               	movwf	btemp^0,c
 12778  010CF4  0EE9               	movlw	-23
 12779  010CF6  0060  F0DB  FFE3   	movff	btemp,plusw1
 12780                           
 12781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12782                           ;stkvar	_w @ sp[(-56)+38]
 12783  010CFC  50E1               	movf	fsr1l,w,c
 12784  010CFE  0FEE               	addlw	-18
 12785  010D00  6ED9               	movwf	fsr2l,c
 12786  010D02  50E2               	movf	fsr1h,w,c
 12787  010D04  6EDA               	movwf	fsr2h,c
 12788  010D06  0EFF               	movlw	255
 12789  010D08  22DA               	addwfc	fsr2h,f,c
 12790  010D0A  06DE               	decf	postinc2,f,c
 12791  010D0C  0E00               	movlw	0
 12792  010D0E  5ADD               	subwfb	postdec2,f,c
 12793                           
 12794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12795                           ;stkvar	_t @ sp[(-56)+52]
 12796  010D10  50E1               	movf	fsr1l,w,c
 12797  010D12  0FFC               	addlw	-4
 12798  010D14  6ED9               	movwf	fsr2l,c
 12799  010D16  50E2               	movf	fsr1h,w,c
 12800  010D18  6EDA               	movwf	fsr2h,c
 12801  010D1A  0EFF               	movlw	255
 12802  010D1C  22DA               	addwfc	fsr2h,f,c
 12803  010D1E  06DE               	decf	postinc2,f,c
 12804  010D20  0E00               	movlw	0
 12805  010D22  5ADD               	subwfb	postdec2,f,c
 12806  010D24                     l9586:
 12807                           
 12808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12809                           ;stkvar	_t @ sp[(-56)+52]
 12810  010D24  0EFC               	movlw	-4
 12811  010D26  006F FF8C  F036    	movff	plusw1,btemp
 12812  010D2C  0EFD               	movlw	-3
 12813  010D2E  50E3               	movf	plusw1,w,c
 12814  010D30  1036               	iorwf	btemp^0,w,c
 12815  010D32  A4D8               	btfss	status,2,c
 12816  010D34  D7C2               	goto	l9578
 12817                           
 12818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12819                           ;stkvar	_n @ sp[(-56)+32]
 12820  010D36  0EE8               	movlw	-24
 12821  010D38  006F FF8C  F040    	movff	plusw1,btemp+10
 12822  010D3E  0EE9               	movlw	-23
 12823  010D40  006F FF8C  F041    	movff	plusw1,btemp+11
 12824  010D46  0EAC               	movlw	low _dbuf
 12825  010D48  2440               	addwf	(btemp+10)^0,w,c
 12826  010D4A  6ED9               	movwf	fsr2l,c
 12827  010D4C  0E02               	movlw	high _dbuf
 12828  010D4E  2041               	addwfc	(btemp+11)^0,w,c
 12829  010D50  6EDA               	movwf	fsr2h,c
 12830                           
 12831                           ;stkvar	_d @ sp[(-56)+44]
 12832  010D52  0EF4               	movlw	-12
 12833  010D54  50E3               	movf	plusw1,w,c
 12834  010D56  0F30               	addlw	48
 12835  010D58  6EDF               	movwf	indf2,c
 12836                           
 12837                           ;stkvar	_n @ sp[(-56)+32]
 12838  010D5A  0EE8               	movlw	-24
 12839  010D5C  50E3               	movf	plusw1,w,c
 12840  010D5E  0F01               	addlw	1
 12841  010D60  6E36               	movwf	btemp^0,c
 12842  010D62  0EE8               	movlw	-24
 12843  010D64  0060  F0DB  FFE3   	movff	btemp,plusw1
 12844  010D6A  6A36               	clrf	btemp^0,c
 12845  010D6C  0EE9               	movlw	-23
 12846  010D6E  50E3               	movf	plusw1,w,c
 12847  010D70  2036               	addwfc	btemp^0,w,c
 12848  010D72  6E36               	movwf	btemp^0,c
 12849  010D74  0EE9               	movlw	-23
 12850  010D76  0060  F0DB  FFE3   	movff	btemp,plusw1
 12851                           
 12852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12853                           ;stkvar	_w @ sp[(-56)+38]
 12854  010D7C  50E1               	movf	fsr1l,w,c
 12855  010D7E  0FEE               	addlw	-18
 12856  010D80  6ED9               	movwf	fsr2l,c
 12857  010D82  50E2               	movf	fsr1h,w,c
 12858  010D84  6EDA               	movwf	fsr2h,c
 12859  010D86  0EFF               	movlw	255
 12860  010D88  22DA               	addwfc	fsr2h,f,c
 12861  010D8A  06DE               	decf	postinc2,f,c
 12862  010D8C  0E00               	movlw	0
 12863  010D8E  5ADD               	subwfb	postdec2,f,c
 12864  010D90                     l9594:
 12865                           
 12866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12867                           ;stkvar	_u @ sp[(-56)+12]
 12868  010D90  0ED4               	movlw	-44
 12869  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12870  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12871  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12872  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12873                           
 12874                           ;stkvar	_l @ sp[(-60)+20]
 12875  010DAA  0ED8               	movlw	-40
 12876  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12877  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12878  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12879  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12880  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12881  010DC8  0060  F0DB  FFE6   	movff	btemp,postinc1
 12882  010DCE  0060  F0DF  FFE6   	movff	btemp+1,postinc1
 12883  010DD4  0060  F0E3  FFE6   	movff	btemp+2,postinc1
 12884  010DDA  0060  F0E7  FFE6   	movff	btemp+3,postinc1
 12885                           
 12886                           ;stkvar	_h @ sp[(-60)+24]
 12887  010DE0  0EDC               	movlw	-36
 12888  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12889  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12890  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12891  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12892  010DFA  EC00  F0C2         	call	___flsub	;wreg free
 12893                           
 12894                           ;stkvar	_h @ sp[(-56)+24]
 12895  010DFE  0EE0               	movlw	-32
 12896  010E00  0060  F0DB  FFE3   	movff	btemp,plusw1
 12897  010E06  0EE1               	movlw	-31
 12898  010E08  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12899  010E0E  0EE2               	movlw	-30
 12900  010E10  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12901  010E16  0EE3               	movlw	-29
 12902  010E18  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12903                           
 12904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12905  010E1E  0E00               	movlw	0
 12906  010E20  6EE6               	movwf	postinc1,c
 12907  010E22  0E00               	movlw	0
 12908  010E24  6EE6               	movwf	postinc1,c
 12909  010E26  0E20               	movlw	32
 12910  010E28  6EE6               	movwf	postinc1,c
 12911  010E2A  0E41               	movlw	65
 12912  010E2C  6EE6               	movwf	postinc1,c
 12913                           
 12914                           ;stkvar	_u @ sp[(-60)+12]
 12915  010E2E  0ED0               	movlw	-48
 12916  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12917  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12918  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12919  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12920  010E48  ECAE  F09B         	call	___fldiv	;wreg free
 12921                           
 12922                           ;stkvar	_u @ sp[(-56)+12]
 12923  010E4C  0ED4               	movlw	-44
 12924  010E4E  0060  F0DB  FFE3   	movff	btemp,plusw1
 12925  010E54  0ED5               	movlw	-43
 12926  010E56  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 12927  010E5C  0ED6               	movlw	-42
 12928  010E5E  0060  F0E3  FFE3   	movff	btemp+2,plusw1
 12929  010E64  0ED7               	movlw	-41
 12930  010E66  0060  F0E7  FFE3   	movff	btemp+3,plusw1
 12931                           
 12932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12933                           ;stkvar	_ne @ sp[(-56)+46]
 12934  010E6C  50E1               	movf	fsr1l,w,c
 12935  010E6E  0FF6               	addlw	-10
 12936  010E70  6ED9               	movwf	fsr2l,c
 12937  010E72  50E2               	movf	fsr1h,w,c
 12938  010E74  6EDA               	movwf	fsr2h,c
 12939  010E76  0EFF               	movlw	255
 12940  010E78  22DA               	addwfc	fsr2h,f,c
 12941  010E7A  06DE               	decf	postinc2,f,c
 12942  010E7C  0E00               	movlw	0
 12943  010E7E  5ADD               	subwfb	postdec2,f,c
 12944                           
 12945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12946                           ;stkvar	_i @ sp[(-56)+36]
 12947  010E80  0EEC               	movlw	-20
 12948  010E82  50E3               	movf	plusw1,w,c
 12949  010E84  0F01               	addlw	1
 12950  010E86  6E36               	movwf	btemp^0,c
 12951  010E88  0EEC               	movlw	-20
 12952  010E8A  0060  F0DB  FFE3   	movff	btemp,plusw1
 12953  010E90  6A36               	clrf	btemp^0,c
 12954  010E92  0EED               	movlw	-19
 12955  010E94  50E3               	movf	plusw1,w,c
 12956  010E96  2036               	addwfc	btemp^0,w,c
 12957  010E98  6E36               	movwf	btemp^0,c
 12958  010E9A  0EED               	movlw	-19
 12959  010E9C  0060  F0DB  FFE3   	movff	btemp,plusw1
 12960  010EA2                     l9602:
 12961                           
 12962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12963                           ;stkvar	_m @ sp[(-56)+48]
 12964                           ;stkvar	_i @ sp[(-56)+36]
 12965  010EA2  50E1               	movf	fsr1l,w,c
 12966  010EA4  0FEC               	addlw	-20
 12967  010EA6  6ED9               	movwf	fsr2l,c
 12968  010EA8  50E2               	movf	fsr1h,w,c
 12969  010EAA  6EDA               	movwf	fsr2h,c
 12970  010EAC  0EFF               	movlw	255
 12971  010EAE  22DA               	addwfc	fsr2h,f,c
 12972  010EB0  0EF8               	movlw	-8
 12973  010EB2  50E3               	movf	plusw1,w,c
 12974  010EB4  5CDE               	subwf	postinc2,w,c
 12975  010EB6  50DE               	movf	postinc2,w,c
 12976  010EB8  0A80               	xorlw	128
 12977  010EBA  6E36               	movwf	btemp^0,c
 12978  010EBC  0EF9               	movlw	-7
 12979  010EBE  50E3               	movf	plusw1,w,c
 12980  010EC0  0A80               	xorlw	128
 12981  010EC2  5836               	subwfb	btemp^0,w,c
 12982  010EC4  B0D8               	btfsc	status,0,c
 12983  010EC6  D00E               	goto	u9760
 12984                           
 12985                           ;stkvar	_n @ sp[(-56)+32]
 12986  010EC8  0EE9               	movlw	-23
 12987  010ECA  BEE3               	btfsc	plusw1,7,c
 12988  010ECC  D633               	goto	l9552
 12989  010ECE  0EE9               	movlw	-23
 12990  010ED0  50E3               	movf	plusw1,w,c
 12991  010ED2  E108               	bnz	u9760
 12992  010ED4  0EE8               	movlw	-24
 12993  010ED6  006F FF8C  F036    	movff	plusw1,btemp
 12994  010EDC  0E4B               	movlw	75
 12995  010EDE  5E36               	subwf	btemp^0,f,c
 12996  010EE0  A0D8               	btfss	status,0,c
 12997  010EE2  D628               	goto	l9552
 12998  010EE4                     u9760:
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13001                           ;stkvar	_pp @ sp[(-56)+50]
 13002  010EE4  0EFA               	movlw	-6
 13003  010EE6  006F FF8C  F036    	movff	plusw1,btemp
 13004  010EEC  0EFB               	movlw	-5
 13005  010EEE  50E3               	movf	plusw1,w,c
 13006  010EF0  1036               	iorwf	btemp^0,w,c
 13007  010EF2  B4D8               	btfsc	status,2,c
 13008  010EF4  A823               	btfss	_flags^0,4,c
 13009  010EF6  D021               	goto	l9614
 13010                           
 13011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13012                           ;stkvar	_n @ sp[(-56)+32]
 13013  010EF8  0EE8               	movlw	-24
 13014  010EFA  006F FF8C  F040    	movff	plusw1,btemp+10
 13015  010F00  0EE9               	movlw	-23
 13016  010F02  006F FF8C  F041    	movff	plusw1,btemp+11
 13017  010F08  0EAC               	movlw	low _dbuf
 13018  010F0A  2440               	addwf	(btemp+10)^0,w,c
 13019  010F0C  6ED9               	movwf	fsr2l,c
 13020  010F0E  0E02               	movlw	high _dbuf
 13021  010F10  2041               	addwfc	(btemp+11)^0,w,c
 13022  010F12  6EDA               	movwf	fsr2h,c
 13023  010F14  0E2E               	movlw	46
 13024  010F16  6EDF               	movwf	indf2,c
 13025                           
 13026                           ;stkvar	_n @ sp[(-56)+32]
 13027  010F18  0EE8               	movlw	-24
 13028  010F1A  50E3               	movf	plusw1,w,c
 13029  010F1C  0F01               	addlw	1
 13030  010F1E  6E36               	movwf	btemp^0,c
 13031  010F20  0EE8               	movlw	-24
 13032  010F22  0060  F0DB  FFE3   	movff	btemp,plusw1
 13033  010F28  6A36               	clrf	btemp^0,c
 13034  010F2A  0EE9               	movlw	-23
 13035  010F2C  50E3               	movf	plusw1,w,c
 13036  010F2E  2036               	addwfc	btemp^0,w,c
 13037  010F30  6E36               	movwf	btemp^0,c
 13038  010F32  0EE9               	movlw	-23
 13039  010F34  0060  F0DB  FFE3   	movff	btemp,plusw1
 13040  010F3A                     l9614:
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13043                           ;stkvar	_n @ sp[(-56)+32]
 13044  010F3A  0EE8               	movlw	-24
 13045  010F3C  006F FF8C  F040    	movff	plusw1,btemp+10
 13046  010F42  0EE9               	movlw	-23
 13047  010F44  006F FF8C  F041    	movff	plusw1,btemp+11
 13048  010F4A  0EAC               	movlw	low _dbuf
 13049  010F4C  2440               	addwf	(btemp+10)^0,w,c
 13050  010F4E  6ED9               	movwf	fsr2l,c
 13051  010F50  0E02               	movlw	high _dbuf
 13052  010F52  2041               	addwfc	(btemp+11)^0,w,c
 13053  010F54  6EDA               	movwf	fsr2h,c
 13054  010F56  0E00               	movlw	0
 13055  010F58  6EDF               	movwf	indf2,c
 13056                           
 13057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13058                           ;stkvar	_nmode @ sp[(-56)+55]
 13059  010F5A  0EFF               	movlw	-1
 13060  010F5C  006F FF8C  F036    	movff	plusw1,btemp
 13061  010F62  0E65               	movlw	101
 13062  010F64  1836               	xorwf	btemp^0,w,c
 13063  010F66  A4D8               	btfss	status,2,c
 13064  010F68  EF16  F081         	goto	l9418
 13065                           
 13066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13067  010F6C  0E4F               	movlw	79
 13068  010F6E  6E40               	movwf	(btemp+10)^0,c
 13069  010F70  0E00               	movlw	0
 13070  010F72  6E41               	movwf	(btemp+11)^0,c
 13071                           
 13072                           ;stkvar	_i @ sp[(-56)+36]
 13073  010F74  0EEC               	movlw	-20
 13074  010F76  0060  F103  FFE3   	movff	btemp+10,plusw1
 13075  010F7C  0EED               	movlw	-19
 13076  010F7E  0060  F107  FFE3   	movff	btemp+11,plusw1
 13077                           
 13078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13079                           ;stkvar	_i @ sp[(-56)+36]
 13080  010F84  0EEC               	movlw	-20
 13081  010F86  006F FF8C  F040    	movff	plusw1,btemp+10
 13082  010F8C  0EED               	movlw	-19
 13083  010F8E  006F FF8C  F041    	movff	plusw1,btemp+11
 13084  010F94  0EAC               	movlw	low _dbuf
 13085  010F96  2440               	addwf	(btemp+10)^0,w,c
 13086  010F98  6ED9               	movwf	fsr2l,c
 13087  010F9A  0E02               	movlw	high _dbuf
 13088  010F9C  2041               	addwfc	(btemp+11)^0,w,c
 13089  010F9E  6EDA               	movwf	fsr2h,c
 13090  010FA0  0E00               	movlw	0
 13091  010FA2  6EDF               	movwf	indf2,c
 13092                           
 13093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13094                           ;stkvar	_sign @ sp[(-56)+42]
 13095  010FA4  0EF2               	movlw	-14
 13096  010FA6  6AE3               	clrf	plusw1,c
 13097  010FA8  0EF3               	movlw	-13
 13098  010FAA  6AE3               	clrf	plusw1,c
 13099                           
 13100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13101                           ;stkvar	_e @ sp[(-56)+34]
 13102  010FAC  0EEB               	movlw	-21
 13103  010FAE  AEE3               	btfss	plusw1,7,c
 13104  010FB0  D012               	goto	l9628
 13105                           
 13106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13107  010FB2  0E01               	movlw	1
 13108  010FB4  6E40               	movwf	(btemp+10)^0,c
 13109  010FB6  0E00               	movlw	0
 13110  010FB8  6E41               	movwf	(btemp+11)^0,c
 13111                           
 13112                           ;stkvar	_sign @ sp[(-56)+42]
 13113  010FBA  0EF2               	movlw	-14
 13114  010FBC  0060  F103  FFE3   	movff	btemp+10,plusw1
 13115  010FC2  0EF3               	movlw	-13
 13116  010FC4  0060  F107  FFE3   	movff	btemp+11,plusw1
 13117                           
 13118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13119                           ;stkvar	_e @ sp[(-56)+34]
 13120                           ;stkvar	_e @ sp[(-56)+34]
 13121  010FCA  0EEA               	movlw	-22
 13122  010FCC  6CE3               	negf	plusw1,c
 13123  010FCE  0EEB               	movlw	-21
 13124  010FD0  1EE3               	comf	plusw1,f,c
 13125  010FD2  B0D8               	btfsc	status,0,c
 13126  010FD4  2AE3               	incf	plusw1,f,c
 13127  010FD6                     l9628:
 13128                           
 13129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13130  010FD6  0E02               	movlw	2
 13131  010FD8  6E40               	movwf	(btemp+10)^0,c
 13132  010FDA  0E00               	movlw	0
 13133  010FDC  6E41               	movwf	(btemp+11)^0,c
 13134                           
 13135                           ;stkvar	_p @ sp[(-56)+40]
 13136  010FDE  0EF0               	movlw	-16
 13137  010FE0  0060  F103  FFE3   	movff	btemp+10,plusw1
 13138  010FE6  0EF1               	movlw	-15
 13139  010FE8  0060  F107  FFE3   	movff	btemp+11,plusw1
 13140                           
 13141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13142  010FEE  D051               	goto	l9640
 13143  010FF0                     l9630:
 13144                           
 13145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13146                           ;stkvar	_i @ sp[(-56)+36]
 13147  010FF0  50E1               	movf	fsr1l,w,c
 13148  010FF2  0FEC               	addlw	-20
 13149  010FF4  6ED9               	movwf	fsr2l,c
 13150  010FF6  50E2               	movf	fsr1h,w,c
 13151  010FF8  6EDA               	movwf	fsr2h,c
 13152  010FFA  0EFF               	movlw	255
 13153  010FFC  22DA               	addwfc	fsr2h,f,c
 13154  010FFE  06DE               	decf	postinc2,f,c
 13155  011000  0E00               	movlw	0
 13156  011002  5ADD               	subwfb	postdec2,f,c
 13157                           
 13158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13159                           ;stkvar	_i @ sp[(-56)+36]
 13160  011004  0EEC               	movlw	-20
 13161  011006  006F FF8C  F040    	movff	plusw1,btemp+10
 13162  01100C  0EED               	movlw	-19
 13163  01100E  006F FF8C  F041    	movff	plusw1,btemp+11
 13164  011014  0EAC               	movlw	low _dbuf
 13165  011016  2440               	addwf	(btemp+10)^0,w,c
 13166  011018  6ED9               	movwf	fsr2l,c
 13167  01101A  0E02               	movlw	high _dbuf
 13168  01101C  2041               	addwfc	(btemp+11)^0,w,c
 13169  01101E  6EDA               	movwf	fsr2h,c
 13170  011020  0E0A               	movlw	10
 13171  011022  6EE6               	movwf	postinc1,c
 13172  011024  0E00               	movlw	0
 13173  011026  6EE6               	movwf	postinc1,c
 13174                           
 13175                           ;stkvar	_e @ sp[(-58)+34]
 13176  011028  0EE8               	movlw	-24
 13177  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13178  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13179  011036  ECA8  F0B7         	call	___awmod	;wreg free
 13180  01103A  5036               	movf	btemp^0,w,c
 13181  01103C  0F30               	addlw	48
 13182  01103E  6EDF               	movwf	indf2,c
 13183                           
 13184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13185  011040  0E0A               	movlw	10
 13186  011042  6EE6               	movwf	postinc1,c
 13187  011044  0E00               	movlw	0
 13188  011046  6EE6               	movwf	postinc1,c
 13189                           
 13190                           ;stkvar	_e @ sp[(-58)+34]
 13191  011048  0EE8               	movlw	-24
 13192  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13193  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13194  011056  EC38  F0B5         	call	___awdiv	;wreg free
 13195                           
 13196                           ;stkvar	_e @ sp[(-56)+34]
 13197  01105A  0EEA               	movlw	-22
 13198  01105C  0060  F0DB  FFE3   	movff	btemp,plusw1
 13199  011062  0EEB               	movlw	-21
 13200  011064  0060  F0DF  FFE3   	movff	btemp+1,plusw1
 13201                           
 13202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13203                           ;stkvar	_p @ sp[(-56)+40]
 13204  01106A  50E1               	movf	fsr1l,w,c
 13205  01106C  0FF0               	addlw	-16
 13206  01106E  6ED9               	movwf	fsr2l,c
 13207  011070  50E2               	movf	fsr1h,w,c
 13208  011072  6EDA               	movwf	fsr2h,c
 13209  011074  0EFF               	movlw	255
 13210  011076  22DA               	addwfc	fsr2h,f,c
 13211  011078  06DE               	decf	postinc2,f,c
 13212  01107A  0E00               	movlw	0
 13213  01107C  5ADD               	subwfb	postdec2,f,c
 13214                           
 13215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13216                           ;stkvar	_w @ sp[(-56)+38]
 13217  01107E  50E1               	movf	fsr1l,w,c
 13218  011080  0FEE               	addlw	-18
 13219  011082  6ED9               	movwf	fsr2l,c
 13220  011084  50E2               	movf	fsr1h,w,c
 13221  011086  6EDA               	movwf	fsr2h,c
 13222  011088  0EFF               	movlw	255
 13223  01108A  22DA               	addwfc	fsr2h,f,c
 13224  01108C  06DE               	decf	postinc2,f,c
 13225  01108E  0E00               	movlw	0
 13226  011090  5ADD               	subwfb	postdec2,f,c
 13227  011092                     l9640:
 13228                           
 13229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13230                           ;stkvar	_e @ sp[(-56)+34]
 13231  011092  0EEA               	movlw	-22
 13232  011094  006F FF8C  F036    	movff	plusw1,btemp
 13233  01109A  0EEB               	movlw	-21
 13234  01109C  50E3               	movf	plusw1,w,c
 13235  01109E  1036               	iorwf	btemp^0,w,c
 13236  0110A0  A4D8               	btfss	status,2,c
 13237  0110A2  D7A6               	goto	l9630
 13238                           
 13239                           ;stkvar	_p @ sp[(-56)+40]
 13240  0110A4  0EF1               	movlw	-15
 13241  0110A6  BEE3               	btfsc	plusw1,7,c
 13242  0110A8  D007               	goto	u9820
 13243  0110AA  0EF1               	movlw	-15
 13244  0110AC  50E3               	movf	plusw1,w,c
 13245  0110AE  E1A0               	bnz	l9630
 13246  0110B0  0EF0               	movlw	-16
 13247  0110B2  04E3               	decf	plusw1,w,c
 13248  0110B4  B0D8               	btfsc	status,0,c
 13249  0110B6  D79C               	goto	l9630
 13250  0110B8                     u9820:
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13253                           ;stkvar	_i @ sp[(-56)+36]
 13254  0110B8  50E1               	movf	fsr1l,w,c
 13255  0110BA  0FEC               	addlw	-20
 13256  0110BC  6ED9               	movwf	fsr2l,c
 13257  0110BE  50E2               	movf	fsr1h,w,c
 13258  0110C0  6EDA               	movwf	fsr2h,c
 13259  0110C2  0EFF               	movlw	255
 13260  0110C4  22DA               	addwfc	fsr2h,f,c
 13261  0110C6  06DE               	decf	postinc2,f,c
 13262  0110C8  0E00               	movlw	0
 13263  0110CA  5ADD               	subwfb	postdec2,f,c
 13264                           
 13265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13266                           ;stkvar	_sign @ sp[(-56)+42]
 13267  0110CC  0EF2               	movlw	-14
 13268  0110CE  006F FF8C  F036    	movff	plusw1,btemp
 13269  0110D4  0EF3               	movlw	-13
 13270  0110D6  50E3               	movf	plusw1,w,c
 13271  0110D8  1036               	iorwf	btemp^0,w,c
 13272  0110DA  A4D8               	btfss	status,2,c
 13273  0110DC  D002               	goto	l9650
 13274  0110DE  0E2B               	movlw	43
 13275  0110E0  D001               	goto	L13
 13276  0110E2                     l9650:
 13277  0110E2  0E2D               	movlw	45
 13278  0110E4                     L13:
 13279  0110E4  6E40               	movwf	(btemp+10)^0,c
 13280  0110E6  0E00               	movlw	0
 13281  0110E8  6E41               	movwf	(btemp+11)^0,c
 13282                           
 13283                           ;stkvar	_efgtoa$4213 @ sp[(-56)+4]
 13284  0110EA  0ECC               	movlw	-52
 13285  0110EC  0060  F103  FFE3   	movff	btemp+10,plusw1
 13286  0110F2  0ECD               	movlw	-51
 13287  0110F4  0060  F107  FFE3   	movff	btemp+11,plusw1
 13288                           
 13289                           ;stkvar	_efgtoa$4213 @ sp[(-56)+4]
 13290                           ;stkvar	_i @ sp[(-56)+36]
 13291  0110FA  0EEC               	movlw	-20
 13292  0110FC  006F FF8C  F040    	movff	plusw1,btemp+10
 13293  011102  0EED               	movlw	-19
 13294  011104  006F FF8C  F041    	movff	plusw1,btemp+11
 13295  01110A  0EAC               	movlw	low _dbuf
 13296  01110C  2440               	addwf	(btemp+10)^0,w,c
 13297  01110E  6ED9               	movwf	fsr2l,c
 13298  011110  0E02               	movlw	high _dbuf
 13299  011112  2041               	addwfc	(btemp+11)^0,w,c
 13300  011114  6EDA               	movwf	fsr2h,c
 13301  011116  0ECC               	movlw	-52
 13302  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13303                           
 13304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13305                           ;stkvar	_w @ sp[(-56)+38]
 13306  01111E  50E1               	movf	fsr1l,w,c
 13307  011120  0FEE               	addlw	-18
 13308  011122  6ED9               	movwf	fsr2l,c
 13309  011124  50E2               	movf	fsr1h,w,c
 13310  011126  6EDA               	movwf	fsr2h,c
 13311  011128  0EFF               	movlw	255
 13312  01112A  22DA               	addwfc	fsr2h,f,c
 13313  01112C  06DE               	decf	postinc2,f,c
 13314  01112E  0E00               	movlw	0
 13315  011130  5ADD               	subwfb	postdec2,f,c
 13316                           
 13317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13318                           ;stkvar	_i @ sp[(-56)+36]
 13319  011132  50E1               	movf	fsr1l,w,c
 13320  011134  0FEC               	addlw	-20
 13321  011136  6ED9               	movwf	fsr2l,c
 13322  011138  50E2               	movf	fsr1h,w,c
 13323  01113A  6EDA               	movwf	fsr2h,c
 13324  01113C  0EFF               	movlw	255
 13325  01113E  22DA               	addwfc	fsr2h,f,c
 13326  011140  06DE               	decf	postinc2,f,c
 13327  011142  0E00               	movlw	0
 13328  011144  5ADD               	subwfb	postdec2,f,c
 13329  011146  0EBF               	movlw	191
 13330  011148  6E40               	movwf	(btemp+10)^0,c
 13331  01114A  0EFF               	movlw	255
 13332  01114C  6E41               	movwf	(btemp+11)^0,c
 13333                           
 13334                           ;stkvar	_c @ sp[(-56)+-7]
 13335  01114E  0EC1               	movlw	-63
 13336  011150  50E3               	movf	plusw1,w,c
 13337  011152  6E3E               	movwf	(btemp+8)^0,c
 13338  011154  6A3F               	clrf	(btemp+9)^0,c
 13339  011156  5040               	movf	(btemp+10)^0,w,c
 13340  011158  263E               	addwf	(btemp+8)^0,f,c
 13341  01115A  5041               	movf	(btemp+11)^0,w,c
 13342  01115C  223F               	addwfc	(btemp+9)^0,f,c
 13343  01115E  503F               	movf	(btemp+9)^0,w,c
 13344  011160  E106               	bnz	u9840
 13345  011162  0E1A               	movlw	26
 13346  011164  5C3E               	subwf	(btemp+8)^0,w,c
 13347  011166  B0D8               	btfsc	status,0,c
 13348  011168  D002               	goto	u9840
 13349  01116A  0E01               	movlw	1
 13350  01116C  D001               	goto	u9850
 13351  01116E                     u9840:
 13352  01116E  0E00               	movlw	0
 13353  011170                     u9850:
 13354  011170  6E40               	movwf	(btemp+10)^0,c
 13355  011172  6A41               	clrf	(btemp+11)^0,c
 13356                           
 13357                           ;stkvar	_efgtoa$4215 @ sp[(-56)+0]
 13358  011174  0EC8               	movlw	-56
 13359  011176  0060  F103  FFE3   	movff	btemp+10,plusw1
 13360  01117C  0EC9               	movlw	-55
 13361  01117E  0060  F107  FFE3   	movff	btemp+11,plusw1
 13362                           
 13363                           ;stkvar	_efgtoa$4215 @ sp[(-56)+0]
 13364  011184  0EC8               	movlw	-56
 13365  011186  006F FF8C  F036    	movff	plusw1,btemp
 13366  01118C  0EC9               	movlw	-55
 13367  01118E  50E3               	movf	plusw1,w,c
 13368  011190  1036               	iorwf	btemp^0,w,c
 13369  011192  A4D8               	btfss	status,2,c
 13370  011194  D002               	goto	l9666
 13371  011196  0E65               	movlw	101
 13372  011198  D001               	goto	L14
 13373  01119A                     l9666:
 13374  01119A  0E45               	movlw	69
 13375  01119C                     L14:
 13376  01119C  6E40               	movwf	(btemp+10)^0,c
 13377  01119E  0E00               	movlw	0
 13378  0111A0  6E41               	movwf	(btemp+11)^0,c
 13379                           
 13380                           ;stkvar	_efgtoa$4214 @ sp[(-56)+2]
 13381  0111A2  0ECA               	movlw	-54
 13382  0111A4  0060  F103  FFE3   	movff	btemp+10,plusw1
 13383  0111AA  0ECB               	movlw	-53
 13384  0111AC  0060  F107  FFE3   	movff	btemp+11,plusw1
 13385                           
 13386                           ;stkvar	_efgtoa$4214 @ sp[(-56)+2]
 13387                           ;stkvar	_i @ sp[(-56)+36]
 13388  0111B2  0EEC               	movlw	-20
 13389  0111B4  006F FF8C  F040    	movff	plusw1,btemp+10
 13390  0111BA  0EED               	movlw	-19
 13391  0111BC  006F FF8C  F041    	movff	plusw1,btemp+11
 13392  0111C2  0EAC               	movlw	low _dbuf
 13393  0111C4  2440               	addwf	(btemp+10)^0,w,c
 13394  0111C6  6ED9               	movwf	fsr2l,c
 13395  0111C8  0E02               	movlw	high _dbuf
 13396  0111CA  2041               	addwfc	(btemp+11)^0,w,c
 13397  0111CC  6EDA               	movwf	fsr2h,c
 13398  0111CE  0ECA               	movlw	-54
 13399  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13400                           
 13401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13402                           ;stkvar	_w @ sp[(-56)+38]
 13403  0111D6  50E1               	movf	fsr1l,w,c
 13404  0111D8  0FEE               	addlw	-18
 13405  0111DA  6ED9               	movwf	fsr2l,c
 13406  0111DC  50E2               	movf	fsr1h,w,c
 13407  0111DE  6EDA               	movwf	fsr2h,c
 13408  0111E0  0EFF               	movlw	255
 13409  0111E2  22DA               	addwfc	fsr2h,f,c
 13410  0111E4  06DE               	decf	postinc2,f,c
 13411  0111E6  0E00               	movlw	0
 13412  0111E8  5ADD               	subwfb	postdec2,f,c
 13413                           
 13414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13415                           ;stkvar	_i @ sp[(-56)+36]
 13416  0111EA  0EEC               	movlw	-20
 13417  0111EC  006F FF8C  F040    	movff	plusw1,btemp+10
 13418  0111F2  0EED               	movlw	-19
 13419  0111F4  006F FF8C  F041    	movff	plusw1,btemp+11
 13420  0111FA  0EAC               	movlw	low _dbuf
 13421  0111FC  2440               	addwf	(btemp+10)^0,w,c
 13422  0111FE  6E3E               	movwf	(btemp+8)^0,c
 13423  011200  0E02               	movlw	high _dbuf
 13424  011202  2041               	addwfc	(btemp+11)^0,w,c
 13425  011204  6E3F               	movwf	(btemp+9)^0,c
 13426  011206  0060  F0FB  FFE6   	movff	btemp+8,postinc1
 13427  01120C  0060  F0FF  FFE6   	movff	btemp+9,postinc1
 13428                           
 13429                           ;stkvar	_n @ sp[(-58)+32]
 13430  011212  0EAC               	movlw	low _dbuf
 13431  011214  6E40               	movwf	(btemp+10)^0,c
 13432  011216  0E02               	movlw	high _dbuf
 13433  011218  6E41               	movwf	(btemp+11)^0,c
 13434  01121A  0EE6               	movlw	-26
 13435  01121C  50E3               	movf	plusw1,w,c
 13436  01121E  2640               	addwf	(btemp+10)^0,f,c
 13437  011220  0EE7               	movlw	-25
 13438  011222  50E3               	movf	plusw1,w,c
 13439  011224  2241               	addwfc	(btemp+11)^0,f,c
 13440  011226  0060  F103  FFE6   	movff	btemp+10,postinc1
 13441  01122C  0060  F107  FFE6   	movff	btemp+11,postinc1
 13442  011232  EC3F  F0BA         	call	_strcpy	;wreg free
 13443  011236  EF16  F081         	goto	l9418
 13444  01123A                     l1812:
 13445                           
 13446                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13447  01123A  0EC1               	movlw	193
 13448  01123C  26E1               	addwf	fsr1l,f,c
 13449  01123E  0EFF               	movlw	255
 13450  011240  22E2               	addwfc	fsr1h,f,c
 13451  011242  0012               	return		;funcret
 13452  011244                     __end_of_efgtoa:
 13453                           	opt callstack 0
 13454                           
 13455 ;; *************** function _tolower *****************
 13456 ;; Defined at:
 13457 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  c               2  [STACK] int 
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;		None
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  2  [STACK] int 
 13464 ;; Registers used:
 13465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13475 ;;Total ram usage:        0 bytes
 13476 ;; Hardware stack levels used:    1
 13477 ;; Hardware stack levels required when called:    7
 13478 ;; This function calls:
 13479 ;;		_isupper
 13480 ;; This function is called by:
 13481 ;;		_efgtoa
 13482 ;;		_vfpfcnvrt
 13483 ;; This function uses a reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text47
 13487  017CFC                     __ptext47:
 13488                           	opt callstack 0
 13489  017CFC                     _tolower:
 13490                           	opt callstack 0
 13491                           
 13492                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13493  017CFC  52E6               	movf	postinc1,f,c
 13494  017CFE  52E6               	movf	postinc1,f,c
 13495                           
 13496                           ;stkvar	_c @ sp[(-2)+-2]
 13497                           
 13498                           ;incstack = 0
 13499  017D00  0EFC               	movlw	-4
 13500  017D02  50E3               	movf	plusw1,w,c
 13501  017D04  0FBF               	addlw	191
 13502  017D06  6E40               	movwf	(btemp+10)^0,c
 13503  017D08  0EFD               	movlw	-3
 13504  017D0A  006F FF8C  F041    	movff	plusw1,btemp+11
 13505  017D10  0EFF               	movlw	255
 13506  017D12  2241               	addwfc	(btemp+11)^0,f,c
 13507  017D14  5041               	movf	(btemp+11)^0,w,c
 13508  017D16  E106               	bnz	u5240
 13509  017D18  0E1A               	movlw	26
 13510  017D1A  5C40               	subwf	(btemp+10)^0,w,c
 13511  017D1C  B0D8               	btfsc	status,0,c
 13512  017D1E  D002               	goto	u5240
 13513  017D20  0E01               	movlw	1
 13514  017D22  D001               	goto	u5250
 13515  017D24                     u5240:
 13516  017D24  0E00               	movlw	0
 13517  017D26                     u5250:
 13518  017D26  6E40               	movwf	(btemp+10)^0,c
 13519  017D28  6A41               	clrf	(btemp+11)^0,c
 13520                           
 13521                           ;stkvar	_tolower$4912 @ sp[(-2)+0]
 13522  017D2A  0EFE               	movlw	-2
 13523  017D2C  0060  F103  FFE3   	movff	btemp+10,plusw1
 13524  017D32  0EFF               	movlw	-1
 13525  017D34  0060  F107  FFE3   	movff	btemp+11,plusw1
 13526                           
 13527                           ;stkvar	_tolower$4912 @ sp[(-2)+0]
 13528  017D3A  0EFE               	movlw	-2
 13529  017D3C  006F FF8C  F036    	movff	plusw1,btemp
 13530  017D42  0EFF               	movlw	-1
 13531  017D44  50E3               	movf	plusw1,w,c
 13532  017D46  1036               	iorwf	btemp^0,w,c
 13533  017D48  B4D8               	btfsc	status,2,c
 13534  017D4A  D00D               	goto	l6424
 13535                           
 13536                           ;stkvar	_c @ sp[(-2)+-2]
 13537  017D4C  0EFC               	movlw	-4
 13538  017D4E  006F FF8C  F036    	movff	plusw1,btemp
 13539  017D54  0EFD               	movlw	-3
 13540  017D56  006F FF8C  F037    	movff	plusw1,btemp+1
 13541  017D5C  0E20               	movlw	32
 13542  017D5E  1236               	iorwf	btemp^0,f,c
 13543  017D60  0E00               	movlw	0
 13544  017D62  1237               	iorwf	(btemp+1)^0,f,c
 13545  017D64  D008               	goto	l2858
 13546  017D66                     l6424:
 13547                           
 13548                           ;stkvar	_c @ sp[(-2)+-2]
 13549  017D66  0EFC               	movlw	-4
 13550  017D68  006F FF8C  F036    	movff	plusw1,btemp
 13551  017D6E  0EFD               	movlw	-3
 13552  017D70  006F FF8C  F037    	movff	plusw1,btemp+1
 13553  017D76                     l2858:
 13554                           
 13555                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13556  017D76  52E5               	movf	postdec1,f,c
 13557  017D78  52E5               	movf	postdec1,f,c
 13558  017D7A  52E5               	movf	postdec1,f,c
 13559  017D7C  52E5               	movf	postdec1,f,c
 13560  017D7E  0012               	return		;funcret
 13561  017D80                     __end_of_tolower:
 13562                           	opt callstack 0
 13563                           
 13564 ;; *************** function _isupper *****************
 13565 ;; Defined at:
 13566 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;  c               2  [STACK] int 
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;		None
 13571 ;; Return value:  Size  Location     Type
 13572 ;;                  2  [STACK] int 
 13573 ;; Registers used:
 13574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13584 ;;Total ram usage:        0 bytes
 13585 ;; Hardware stack levels used:    1
 13586 ;; Hardware stack levels required when called:    6
 13587 ;; This function calls:
 13588 ;;		Nothing
 13589 ;; This function is called by:
 13590 ;;		_efgtoa
 13591 ;;		_xtoa
 13592 ;;		_vfpfcnvrt
 13593 ;;		_tolower
 13594 ;; This function uses a reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text48
 13598  0187DC                     __ptext48:
 13599                           	opt callstack 0
 13600  0187DC                     _isupper:
 13601                           	opt callstack 17
 13602                           
 13603                           ;stkvar	_c @ sp[(0)+-2]
 13604                           
 13605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13606                           ;incstack = 0
 13607  0187DC  0EFE               	movlw	-2
 13608  0187DE  50E3               	movf	plusw1,w,c
 13609  0187E0  0FBF               	addlw	191
 13610  0187E2  6E40               	movwf	(btemp+10)^0,c
 13611  0187E4  0EFF               	movlw	-1
 13612  0187E6  006F FF8C  F041    	movff	plusw1,btemp+11
 13613  0187EC  0EFF               	movlw	255
 13614  0187EE  2241               	addwfc	(btemp+11)^0,f,c
 13615  0187F0  5041               	movf	(btemp+11)^0,w,c
 13616  0187F2  E106               	bnz	u4640
 13617  0187F4  0E1A               	movlw	26
 13618  0187F6  5C40               	subwf	(btemp+10)^0,w,c
 13619  0187F8  B0D8               	btfsc	status,0,c
 13620  0187FA  D002               	goto	u4640
 13621  0187FC  0E01               	movlw	1
 13622  0187FE  D001               	goto	u4650
 13623  018800                     u4640:
 13624  018800  0E00               	movlw	0
 13625  018802                     u4650:
 13626  018802  6E36               	movwf	btemp^0,c
 13627  018804  6A37               	clrf	(btemp+1)^0,c
 13628                           
 13629                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13630  018806  52E5               	movf	postdec1,f,c
 13631  018808  52E5               	movf	postdec1,f,c
 13632  01880A  0012               	return		;funcret
 13633  01880C                     __end_of_isupper:
 13634                           	opt callstack 0
 13635                           
 13636 ;; *************** function _strcpy *****************
 13637 ;; Defined at:
 13638 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  dest            2  [STACK] PTR unsigned char 
 13641 ;;		 -> dbuf(80), 
 13642 ;;  src             2  [STACK] PTR const unsigned char 
 13643 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13644 ;;		 -> dbuf(80), 
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;  d               2  [STACK] PTR unsigned char 
 13647 ;;		 -> dbuf(80), 
 13648 ;;  s               2  [STACK] PTR const unsigned char 
 13649 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13650 ;;		 -> dbuf(80), 
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  2  [STACK] PTR unsigned char 
 13653 ;; Registers used:
 13654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13664 ;;Total ram usage:        0 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    6
 13667 ;; This function calls:
 13668 ;;		Nothing
 13669 ;; This function is called by:
 13670 ;;		_efgtoa
 13671 ;; This function uses a reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text49
 13675  01747E                     __ptext49:
 13676                           	opt callstack 0
 13677  01747E                     _strcpy:
 13678                           	opt callstack 0
 13679                           
 13680                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13681  01747E  52E6               	movf	postinc1,f,c
 13682  017480  52E6               	movf	postinc1,f,c
 13683  017482  52E6               	movf	postinc1,f,c
 13684  017484  52E6               	movf	postinc1,f,c
 13685                           
 13686                           ;stkvar	_src @ sp[(-4)+-4]
 13687                           
 13688                           ;incstack = 0
 13689  017486  0EF8               	movlw	-8
 13690  017488  006F FF8C  F040    	movff	plusw1,btemp+10
 13691  01748E  0EF9               	movlw	-7
 13692  017490  006F FF8C  F041    	movff	plusw1,btemp+11
 13693                           
 13694                           ;stkvar	_s @ sp[(-4)+2]
 13695  017496  0EFF               	movlw	-1
 13696  017498  0060  F107  FFE3   	movff	btemp+11,plusw1
 13697  01749E  0EFE               	movlw	-2
 13698  0174A0  0060  F103  FFE3   	movff	btemp+10,plusw1
 13699                           
 13700                           ;stkvar	_dest @ sp[(-4)+-2]
 13701  0174A6  0EFA               	movlw	-6
 13702  0174A8  006F FF8C  F040    	movff	plusw1,btemp+10
 13703  0174AE  0EFB               	movlw	-5
 13704  0174B0  006F FF8C  F041    	movff	plusw1,btemp+11
 13705                           
 13706                           ;stkvar	_d @ sp[(-4)+0]
 13707  0174B6  0EFD               	movlw	-3
 13708  0174B8  0060  F107  FFE3   	movff	btemp+11,plusw1
 13709  0174BE  0EFC               	movlw	-4
 13710  0174C0  0060  F103  FFE3   	movff	btemp+10,plusw1
 13711  0174C6                     l9292:
 13712                           
 13713                           ;stkvar	_s @ sp[(-4)+2]
 13714  0174C6  50E1               	movf	fsr1l,w,c
 13715  0174C8  0FFE               	addlw	-2
 13716  0174CA  6ED9               	movwf	fsr2l,c
 13717  0174CC  50E2               	movf	fsr1h,w,c
 13718  0174CE  6EDA               	movwf	fsr2h,c
 13719  0174D0  0EFF               	movlw	255
 13720  0174D2  22DA               	addwfc	fsr2h,f,c
 13721  0174D4  006F FF7C  F040    	movff	indf2,btemp+10
 13722  0174DA  0E01               	movlw	1
 13723  0174DC  26DE               	addwf	postinc2,f,c
 13724  0174DE  006F FF7C  F041    	movff	indf2,btemp+11
 13725  0174E4  0E00               	movlw	0
 13726  0174E6  22DD               	addwfc	postdec2,f,c
 13727  0174E8  0060  F103  FFF6   	movff	btemp+10,tblptrl
 13728  0174EE  0060  F107  FFF7   	movff	btemp+11,tblptrh
 13729  0174F4  0E00               	movlw	low (__mediumconst shr (0+16))
 13730  0174F6  6EF8               	movwf	tblptru,c
 13731                           
 13732                           ;stkvar	_d @ sp[(-4)+0]
 13733  0174F8  50E1               	movf	fsr1l,w,c
 13734  0174FA  0FFC               	addlw	-4
 13735  0174FC  6ED9               	movwf	fsr2l,c
 13736  0174FE  50E2               	movf	fsr1h,w,c
 13737  017500  6EDA               	movwf	fsr2h,c
 13738  017502  0EFF               	movlw	255
 13739  017504  22DA               	addwfc	fsr2h,f,c
 13740  017506  006F FF7C  F040    	movff	indf2,btemp+10
 13741  01750C  0E01               	movlw	1
 13742  01750E  26DE               	addwf	postinc2,f,c
 13743  017510  006F FF7C  F041    	movff	indf2,btemp+11
 13744  017516  0E00               	movlw	0
 13745  017518  22DD               	addwfc	postdec2,f,c
 13746  01751A  0060  F103  FFD9   	movff	btemp+10,fsr2l
 13747  017520  0060  F107  FFDA   	movff	btemp+11,fsr2h
 13748  017526  0E1F               	movlw	(high __ramtop+-1)
 13749  017528  64F7               	cpfsgt	tblptrh,c
 13750  01752A  D003               	bra	u9157
 13751  01752C  0008               	tblrd		*
 13752  01752E  50F5               	movf	tablat,w,c
 13753  017530  D007               	bra	u9150
 13754  017532                     u9157:
 13755  017532  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13756  017538  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13757  01753E  50EF               	movf	indf0,w,c
 13758  017540                     u9150:
 13759  017540  6EDF               	movwf	indf2,c
 13760  017542  50DF               	movf	indf2,w,c
 13761  017544  A4D8               	btfss	status,2,c
 13762  017546  D7BF               	goto	l9292
 13763                           
 13764                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13765  017548  0EF8               	movlw	248
 13766  01754A  26E1               	addwf	fsr1l,f,c
 13767  01754C  0EFF               	movlw	255
 13768  01754E  22E2               	addwfc	fsr1h,f,c
 13769  017550  0012               	return		;funcret
 13770  017552                     __end_of_strcpy:
 13771                           	opt callstack 0
 13772                           
 13773 ;; *************** function _floorf *****************
 13774 ;; Defined at:
 13775 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;  x               4  [STACK] float 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  u               4  [STACK] struct .
 13780 ;;  m               4  [STACK] unsigned long 
 13781 ;;  e               2  [STACK] int 
 13782 ;; Return value:  Size  Location     Type
 13783 ;;                  4  [STACK] float 
 13784 ;; Registers used:
 13785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13795 ;;Total ram usage:        0 bytes
 13796 ;; Hardware stack levels used:    1
 13797 ;; Hardware stack levels required when called:    6
 13798 ;; This function calls:
 13799 ;;		Nothing
 13800 ;; This function is called by:
 13801 ;;		_efgtoa
 13802 ;; This function uses a reentrant model
 13803 ;;
 13804                           
 13805                           	psect	text50
 13806  014906                     __ptext50:
 13807                           	opt callstack 0
 13808  014906                     _floorf:
 13809                           	opt callstack 0
 13810                           
 13811                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13812  014906  0E0A               	movlw	10
 13813  014908  26E1               	addwf	fsr1l,f,c
 13814  01490A  0E00               	movlw	0
 13815  01490C  22E2               	addwfc	fsr1h,f,c
 13816                           
 13817                           ;incstack = 0
 13818  01490E  0060  F210  F03E   	movff	floorf@F524,btemp+8
 13819  014914  0060  F214  F03F   	movff	floorf@F524+1,btemp+9
 13820  01491A  0060  F218  F040   	movff	floorf@F524+2,btemp+10
 13821  014920  0060  F21C  F041   	movff	floorf@F524+3,btemp+11
 13822                           
 13823                           ;stkvar	_u @ sp[(-10)+0]
 13824  014926  0EF6               	movlw	-10
 13825  014928  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 13826  01492E  0EF7               	movlw	-9
 13827  014930  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 13828  014936  0EF8               	movlw	-8
 13829  014938  0060  F103  FFE3   	movff	btemp+10,plusw1
 13830  01493E  0EF9               	movlw	-7
 13831  014940  0060  F107  FFE3   	movff	btemp+11,plusw1
 13832                           
 13833                           ;stkvar	_x @ sp[(-10)+-4]
 13834  014946  0EF2               	movlw	-14
 13835  014948  006F FF8C  F03E    	movff	plusw1,btemp+8
 13836  01494E  0EF3               	movlw	-13
 13837  014950  006F FF8C  F03F    	movff	plusw1,btemp+9
 13838  014956  0EF4               	movlw	-12
 13839  014958  006F FF8C  F040    	movff	plusw1,btemp+10
 13840  01495E  0EF5               	movlw	-11
 13841  014960  006F FF8C  F041    	movff	plusw1,btemp+11
 13842                           
 13843                           ;stkvar	_u @ sp[(-10)+0]
 13844  014966  0EF6               	movlw	-10
 13845  014968  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 13846  01496E  0EF7               	movlw	-9
 13847  014970  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 13848  014976  0EF8               	movlw	-8
 13849  014978  0060  F103  FFE3   	movff	btemp+10,plusw1
 13850  01497E  0EF9               	movlw	-7
 13851  014980  0060  F107  FFE3   	movff	btemp+11,plusw1
 13852  014986  0E81               	movlw	129
 13853  014988  6E40               	movwf	(btemp+10)^0,c
 13854  01498A  0EFF               	movlw	255
 13855  01498C  6E41               	movwf	(btemp+11)^0,c
 13856                           
 13857                           ;stkvar	_u @ sp[(-10)+0]
 13858  01498E  0EF6               	movlw	-10
 13859  014990  006F FF8C  F03A    	movff	plusw1,btemp+4
 13860  014996  0EF7               	movlw	-9
 13861  014998  006F FF8C  F03B    	movff	plusw1,btemp+5
 13862  01499E  0EF8               	movlw	-8
 13863  0149A0  006F FF8C  F03C    	movff	plusw1,btemp+6
 13864  0149A6  0EF9               	movlw	-7
 13865  0149A8  006F FF8C  F03D    	movff	plusw1,btemp+7
 13866  0149AE  0E18               	movlw	24
 13867  0149B0  D005               	goto	u5270
 13868  0149B2                     u5275:
 13869  0149B2  90D8               	bcf	status,0,c
 13870  0149B4  323D               	rrcf	(btemp+7)^0,f,c
 13871  0149B6  323C               	rrcf	(btemp+6)^0,f,c
 13872  0149B8  323B               	rrcf	(btemp+5)^0,f,c
 13873  0149BA  323A               	rrcf	(btemp+4)^0,f,c
 13874  0149BC                     u5270:
 13875  0149BC  2EE8               	decfsz	wreg,f,c
 13876  0149BE  D7F9               	goto	u5275
 13877  0149C0  0060  F0E8  F03E   	movff	btemp+4,btemp+8
 13878  0149C6  0060  F0EC  F03F   	movff	btemp+5,btemp+9
 13879  0149CC  0EFF               	movlw	255
 13880  0149CE  163E               	andwf	(btemp+8)^0,f,c
 13881  0149D0  0E00               	movlw	0
 13882  0149D2  163F               	andwf	(btemp+9)^0,f,c
 13883  0149D4  5040               	movf	(btemp+10)^0,w,c
 13884  0149D6  263E               	addwf	(btemp+8)^0,f,c
 13885  0149D8  5041               	movf	(btemp+11)^0,w,c
 13886  0149DA  223F               	addwfc	(btemp+9)^0,f,c
 13887                           
 13888                           ;stkvar	_e @ sp[(-10)+8]
 13889  0149DC  0EFE               	movlw	-2
 13890  0149DE  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 13891  0149E4  0EFF               	movlw	-1
 13892  0149E6  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 13893                           
 13894                           ;stkvar	_e @ sp[(-10)+8]
 13895  0149EC  0EFF               	movlw	-1
 13896  0149EE  BEE3               	btfsc	plusw1,7,c
 13897  0149F0  D019               	goto	l6438
 13898  0149F2  0EFF               	movlw	-1
 13899  0149F4  50E3               	movf	plusw1,w,c
 13900  0149F6  E108               	bnz	u5280
 13901  0149F8  0EFE               	movlw	-2
 13902  0149FA  006F FF8C  F036    	movff	plusw1,btemp
 13903  014A00  0E17               	movlw	23
 13904  014A02  5E36               	subwf	btemp^0,f,c
 13905  014A04  A0D8               	btfss	status,0,c
 13906  014A06  D00E               	goto	l6438
 13907  014A08                     u5280:
 13908                           
 13909                           ;stkvar	_x @ sp[(-10)+-4]
 13910  014A08  0EF2               	movlw	-14
 13911  014A0A  006F FF8C  F036    	movff	plusw1,btemp
 13912  014A10  0EF3               	movlw	-13
 13913  014A12  006F FF8C  F037    	movff	plusw1,btemp+1
 13914  014A18  0EF4               	movlw	-12
 13915  014A1A  006F FF8C  F038    	movff	plusw1,btemp+2
 13916  014A20  0EF5               	movlw	-11
 13917  014A22  D11F               	goto	L15
 13918  014A24                     l6438:
 13919                           
 13920                           ;stkvar	_e @ sp[(-10)+8]
 13921  014A24  0EFF               	movlw	-1
 13922  014A26  BEE3               	btfsc	plusw1,7,c
 13923  014A28  D0B4               	goto	l6454
 13924                           
 13925                           ;stkvar	_e @ sp[(-10)+8]
 13926  014A2A  0EFE               	movlw	-2
 13927  014A2C  006F FF8C  F041    	movff	plusw1,btemp+11
 13928  014A32  0EFF               	movlw	255
 13929  014A34  6E3A               	movwf	(btemp+4)^0,c
 13930  014A36  0EFF               	movlw	255
 13931  014A38  6E3B               	movwf	(btemp+5)^0,c
 13932  014A3A  0E7F               	movlw	127
 13933  014A3C  6E3C               	movwf	(btemp+6)^0,c
 13934  014A3E  0E00               	movlw	0
 13935  014A40  6E3D               	movwf	(btemp+7)^0,c
 13936  014A42                     u5305:
 13937  014A42  6641               	tstfsz	(btemp+11)^0,c
 13938  014A44  D001               	goto	u5306
 13939  014A46  D007               	goto	u5307
 13940  014A48                     u5306:
 13941  014A48  343D               	rlcf	(btemp+7)^0,w,c
 13942  014A4A  323D               	rrcf	(btemp+7)^0,f,c
 13943  014A4C  323C               	rrcf	(btemp+6)^0,f,c
 13944  014A4E  323B               	rrcf	(btemp+5)^0,f,c
 13945  014A50  323A               	rrcf	(btemp+4)^0,f,c
 13946  014A52  2E41               	decfsz	(btemp+11)^0,f,c
 13947  014A54  D7F6               	goto	u5305
 13948  014A56                     u5307:
 13949                           
 13950                           ;stkvar	_m @ sp[(-10)+4]
 13951  014A56  0EFA               	movlw	-6
 13952  014A58  0060  F0EB  FFE3   	movff	btemp+4,plusw1
 13953  014A5E  0EFB               	movlw	-5
 13954  014A60  0060  F0EF  FFE3   	movff	btemp+5,plusw1
 13955  014A66  0EFC               	movlw	-4
 13956  014A68  0060  F0F3  FFE3   	movff	btemp+6,plusw1
 13957  014A6E  0EFD               	movlw	-3
 13958  014A70  0060  F0F7  FFE3   	movff	btemp+7,plusw1
 13959                           
 13960                           ;stkvar	_m @ sp[(-10)+4]
 13961                           ;stkvar	_u @ sp[(-10)+0]
 13962  014A76  0EF6               	movlw	-10
 13963  014A78  006F FF8C  F03E    	movff	plusw1,btemp+8
 13964  014A7E  0EF7               	movlw	-9
 13965  014A80  006F FF8C  F03F    	movff	plusw1,btemp+9
 13966  014A86  0EF8               	movlw	-8
 13967  014A88  006F FF8C  F040    	movff	plusw1,btemp+10
 13968  014A8E  0EF9               	movlw	-7
 13969  014A90  006F FF8C  F041    	movff	plusw1,btemp+11
 13970  014A96  0EFA               	movlw	-6
 13971  014A98  50E3               	movf	plusw1,w,c
 13972  014A9A  163E               	andwf	(btemp+8)^0,f,c
 13973  014A9C  0EFB               	movlw	-5
 13974  014A9E  50E3               	movf	plusw1,w,c
 13975  014AA0  163F               	andwf	(btemp+9)^0,f,c
 13976  014AA2  0EFC               	movlw	-4
 13977  014AA4  50E3               	movf	plusw1,w,c
 13978  014AA6  1640               	andwf	(btemp+10)^0,f,c
 13979  014AA8  0EFD               	movlw	-3
 13980  014AAA  50E3               	movf	plusw1,w,c
 13981  014AAC  1641               	andwf	(btemp+11)^0,f,c
 13982  014AAE  503E               	movf	(btemp+8)^0,w,c
 13983  014AB0  103F               	iorwf	(btemp+9)^0,w,c
 13984  014AB2  1040               	iorwf	(btemp+10)^0,w,c
 13985  014AB4  1041               	iorwf	(btemp+11)^0,w,c
 13986  014AB6  B4D8               	btfsc	status,2,c
 13987  014AB8  D7A7               	goto	u5280
 13988                           
 13989                           ;stkvar	_u @ sp[(-10)+0]
 13990  014ABA  0EF6               	movlw	-10
 13991  014ABC  006F FF8C  F03E    	movff	plusw1,btemp+8
 13992  014AC2  0EF7               	movlw	-9
 13993  014AC4  006F FF8C  F03F    	movff	plusw1,btemp+9
 13994  014ACA  0EF8               	movlw	-8
 13995  014ACC  006F FF8C  F040    	movff	plusw1,btemp+10
 13996  014AD2  0EF9               	movlw	-7
 13997  014AD4  006F FF8C  F041    	movff	plusw1,btemp+11
 13998  014ADA  0E20               	movlw	32
 13999  014ADC  D005               	goto	u5320
 14000  014ADE                     u5325:
 14001  014ADE  90D8               	bcf	status,0,c
 14002  014AE0  3241               	rrcf	(btemp+11)^0,f,c
 14003  014AE2  3240               	rrcf	(btemp+10)^0,f,c
 14004  014AE4  323F               	rrcf	(btemp+9)^0,f,c
 14005  014AE6  323E               	rrcf	(btemp+8)^0,f,c
 14006  014AE8                     u5320:
 14007  014AE8  2EE8               	decfsz	wreg,f,c
 14008  014AEA  D7F9               	goto	u5325
 14009  014AEC  503E               	movf	(btemp+8)^0,w,c
 14010  014AEE  B4D8               	btfsc	status,2,c
 14011  014AF0  D028               	goto	l6452
 14012                           
 14013                           ;stkvar	_m @ sp[(-10)+4]
 14014                           ;stkvar	_u @ sp[(-10)+0]
 14015  014AF2  0EF6               	movlw	-10
 14016  014AF4  50E3               	movf	plusw1,w,c
 14017  014AF6  6E36               	movwf	btemp^0,c
 14018  014AF8  0EFA               	movlw	-6
 14019  014AFA  50E3               	movf	plusw1,w,c
 14020  014AFC  2636               	addwf	btemp^0,f,c
 14021  014AFE  0EF6               	movlw	-10
 14022  014B00  0060  F0DB  FFE3   	movff	btemp,plusw1
 14023  014B06  0EF7               	movlw	-9
 14024  014B08  50E3               	movf	plusw1,w,c
 14025  014B0A  6E36               	movwf	btemp^0,c
 14026  014B0C  0EFB               	movlw	-5
 14027  014B0E  50E3               	movf	plusw1,w,c
 14028  014B10  2236               	addwfc	btemp^0,f,c
 14029  014B12  0EF7               	movlw	-9
 14030  014B14  0060  F0DB  FFE3   	movff	btemp,plusw1
 14031  014B1A  0EF8               	movlw	-8
 14032  014B1C  50E3               	movf	plusw1,w,c
 14033  014B1E  6E36               	movwf	btemp^0,c
 14034  014B20  0EFC               	movlw	-4
 14035  014B22  50E3               	movf	plusw1,w,c
 14036  014B24  2236               	addwfc	btemp^0,f,c
 14037  014B26  0EF8               	movlw	-8
 14038  014B28  0060  F0DB  FFE3   	movff	btemp,plusw1
 14039  014B2E  0EF9               	movlw	-7
 14040  014B30  50E3               	movf	plusw1,w,c
 14041  014B32  6E36               	movwf	btemp^0,c
 14042  014B34  0EFD               	movlw	-3
 14043  014B36  50E3               	movf	plusw1,w,c
 14044  014B38  2236               	addwfc	btemp^0,f,c
 14045  014B3A  0EF9               	movlw	-7
 14046  014B3C  0060  F0DB  FFE3   	movff	btemp,plusw1
 14047  014B42                     l6452:
 14048                           
 14049                           ;stkvar	_m @ sp[(-10)+4]
 14050  014B42  0EFA               	movlw	-6
 14051  014B44  006F FF8C  F03E    	movff	plusw1,btemp+8
 14052  014B4A  0EFB               	movlw	-5
 14053  014B4C  006F FF8C  F03F    	movff	plusw1,btemp+9
 14054  014B52  0EFC               	movlw	-4
 14055  014B54  006F FF8C  F040    	movff	plusw1,btemp+10
 14056  014B5A  0EFD               	movlw	-3
 14057  014B5C  006F FF8C  F041    	movff	plusw1,btemp+11
 14058  014B62  1C3E               	comf	(btemp+8)^0,w,c
 14059  014B64  6E3A               	movwf	(btemp+4)^0,c
 14060  014B66  1C3F               	comf	(btemp+9)^0,w,c
 14061  014B68  6E3B               	movwf	(btemp+5)^0,c
 14062  014B6A  1C40               	comf	(btemp+10)^0,w,c
 14063  014B6C  6E3C               	movwf	(btemp+6)^0,c
 14064  014B6E  1C41               	comf	(btemp+11)^0,w,c
 14065  014B70  6E3D               	movwf	(btemp+7)^0,c
 14066                           
 14067                           ;stkvar	_u @ sp[(-10)+0]
 14068  014B72  50E1               	movf	fsr1l,w,c
 14069  014B74  0FF6               	addlw	-10
 14070  014B76  6ED9               	movwf	fsr2l,c
 14071  014B78  50E2               	movf	fsr1h,w,c
 14072  014B7A  6EDA               	movwf	fsr2h,c
 14073  014B7C  0EFF               	movlw	255
 14074  014B7E  22DA               	addwfc	fsr2h,f,c
 14075  014B80  503A               	movf	(btemp+4)^0,w,c
 14076  014B82  16DE               	andwf	postinc2,f,c
 14077  014B84  503B               	movf	(btemp+5)^0,w,c
 14078  014B86  16DE               	andwf	postinc2,f,c
 14079  014B88  503C               	movf	(btemp+6)^0,w,c
 14080  014B8A  16DE               	andwf	postinc2,f,c
 14081  014B8C  503D               	movf	(btemp+7)^0,w,c
 14082  014B8E  16DE               	andwf	postinc2,f,c
 14083  014B90  D05B               	goto	l6462
 14084  014B92                     l6454:
 14085                           
 14086                           ;stkvar	_u @ sp[(-10)+0]
 14087  014B92  0EF6               	movlw	-10
 14088  014B94  006F FF8C  F03E    	movff	plusw1,btemp+8
 14089  014B9A  0EF7               	movlw	-9
 14090  014B9C  006F FF8C  F03F    	movff	plusw1,btemp+9
 14091  014BA2  0EF8               	movlw	-8
 14092  014BA4  006F FF8C  F040    	movff	plusw1,btemp+10
 14093  014BAA  0EF9               	movlw	-7
 14094  014BAC  006F FF8C  F041    	movff	plusw1,btemp+11
 14095  014BB2  0E20               	movlw	32
 14096  014BB4  D005               	goto	u5340
 14097  014BB6                     u5345:
 14098  014BB6  90D8               	bcf	status,0,c
 14099  014BB8  3241               	rrcf	(btemp+11)^0,f,c
 14100  014BBA  3240               	rrcf	(btemp+10)^0,f,c
 14101  014BBC  323F               	rrcf	(btemp+9)^0,f,c
 14102  014BBE  323E               	rrcf	(btemp+8)^0,f,c
 14103  014BC0                     u5340:
 14104  014BC0  2EE8               	decfsz	wreg,f,c
 14105  014BC2  D7F9               	goto	u5345
 14106  014BC4  663E               	tstfsz	(btemp+8)^0,c
 14107  014BC6  D009               	goto	l6458
 14108                           
 14109                           ;stkvar	_u @ sp[(-10)+0]
 14110  014BC8  0EF6               	movlw	-10
 14111  014BCA  6AE3               	clrf	plusw1,c
 14112  014BCC  0EF7               	movlw	-9
 14113  014BCE  6AE3               	clrf	plusw1,c
 14114  014BD0  0EF8               	movlw	-8
 14115  014BD2  6AE3               	clrf	plusw1,c
 14116  014BD4  0EF9               	movlw	-7
 14117  014BD6  6AE3               	clrf	plusw1,c
 14118  014BD8  D037               	goto	l6462
 14119  014BDA                     l6458:
 14120                           
 14121                           ;stkvar	_u @ sp[(-10)+0]
 14122  014BDA  0EF6               	movlw	-10
 14123  014BDC  006F FF8C  F03E    	movff	plusw1,btemp+8
 14124  014BE2  0EF7               	movlw	-9
 14125  014BE4  006F FF8C  F03F    	movff	plusw1,btemp+9
 14126  014BEA  0EF8               	movlw	-8
 14127  014BEC  006F FF8C  F040    	movff	plusw1,btemp+10
 14128  014BF2  0EF9               	movlw	-7
 14129  014BF4  006F FF8C  F041    	movff	plusw1,btemp+11
 14130  014BFA  90D8               	bcf	status,0,c
 14131  014BFC  343E               	rlcf	(btemp+8)^0,w,c
 14132  014BFE  6E3A               	movwf	(btemp+4)^0,c
 14133  014C00  343F               	rlcf	(btemp+9)^0,w,c
 14134  014C02  6E3B               	movwf	(btemp+5)^0,c
 14135  014C04  3440               	rlcf	(btemp+10)^0,w,c
 14136  014C06  6E3C               	movwf	(btemp+6)^0,c
 14137  014C08  3441               	rlcf	(btemp+11)^0,w,c
 14138  014C0A  6E3D               	movwf	(btemp+7)^0,c
 14139  014C0C  503A               	movf	(btemp+4)^0,w,c
 14140  014C0E  103B               	iorwf	(btemp+5)^0,w,c
 14141  014C10  103C               	iorwf	(btemp+6)^0,w,c
 14142  014C12  103D               	iorwf	(btemp+7)^0,w,c
 14143  014C14  B4D8               	btfsc	status,2,c
 14144  014C16  D018               	goto	l6462
 14145  014C18  0E00               	movlw	0
 14146  014C1A  6E3E               	movwf	(btemp+8)^0,c
 14147  014C1C  0E00               	movlw	0
 14148  014C1E  6E3F               	movwf	(btemp+9)^0,c
 14149  014C20  0E80               	movlw	128
 14150  014C22  6E40               	movwf	(btemp+10)^0,c
 14151  014C24  0EBF               	movlw	191
 14152  014C26  6E41               	movwf	(btemp+11)^0,c
 14153                           
 14154                           ;stkvar	_u @ sp[(-10)+0]
 14155  014C28  0EF6               	movlw	-10
 14156  014C2A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14157  014C30  0EF7               	movlw	-9
 14158  014C32  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14159  014C38  0EF8               	movlw	-8
 14160  014C3A  0060  F103  FFE3   	movff	btemp+10,plusw1
 14161  014C40  0EF9               	movlw	-7
 14162  014C42  0060  F107  FFE3   	movff	btemp+11,plusw1
 14163  014C48                     l6462:
 14164                           
 14165                           ;stkvar	_u @ sp[(-10)+0]
 14166  014C48  0EF6               	movlw	-10
 14167  014C4A  006F FF8C  F036    	movff	plusw1,btemp
 14168  014C50  0EF7               	movlw	-9
 14169  014C52  006F FF8C  F037    	movff	plusw1,btemp+1
 14170  014C58  0EF8               	movlw	-8
 14171  014C5A  006F FF8C  F038    	movff	plusw1,btemp+2
 14172  014C60  0EF9               	movlw	-7
 14173  014C62                     L15:
 14174  014C62  006F FF8C  F039    	movff	plusw1,btemp+3
 14175                           
 14176                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14177  014C68  0EF2               	movlw	242
 14178  014C6A  26E1               	addwf	fsr1l,f,c
 14179  014C6C  0EFF               	movlw	255
 14180  014C6E  22E2               	addwfc	fsr1h,f,c
 14181  014C70  0012               	return		;funcret
 14182  014C72                     __end_of_floorf:
 14183                           	opt callstack 0
 14184                           
 14185 ;; *************** function ___fpclassifyf *****************
 14186 ;; Defined at:
 14187 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;  x               4  [STACK] float 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;  u               4  [STACK] struct .
 14192 ;;  e               2  [STACK] int 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  2  [STACK] int 
 14195 ;; Registers used:
 14196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14197 ;; Tracked objects:
 14198 ;;		On entry : 0/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14206 ;;Total ram usage:        0 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    6
 14209 ;; This function calls:
 14210 ;;		Nothing
 14211 ;; This function is called by:
 14212 ;;		_efgtoa
 14213 ;; This function uses a reentrant model
 14214 ;;
 14215                           
 14216                           	psect	text51
 14217  016486                     __ptext51:
 14218                           	opt callstack 0
 14219  016486                     ___fpclassifyf:
 14220                           	opt callstack 0
 14221                           
 14222                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14223  016486  0E06               	movlw	6
 14224  016488  26E1               	addwf	fsr1l,f,c
 14225  01648A  0E00               	movlw	0
 14226  01648C  22E2               	addwfc	fsr1h,f,c
 14227                           
 14228                           ;incstack = 0
 14229  01648E  0060  F220  F03E   	movff	___fpclassifyf@F463,btemp+8
 14230  016494  0060  F224  F03F   	movff	___fpclassifyf@F463+1,btemp+9
 14231  01649A  0060  F228  F040   	movff	___fpclassifyf@F463+2,btemp+10
 14232  0164A0  0060  F22C  F041   	movff	___fpclassifyf@F463+3,btemp+11
 14233                           
 14234                           ;stkvar	_u @ sp[(-6)+0]
 14235  0164A6  0EFA               	movlw	-6
 14236  0164A8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14237  0164AE  0EFB               	movlw	-5
 14238  0164B0  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14239  0164B6  0EFC               	movlw	-4
 14240  0164B8  0060  F103  FFE3   	movff	btemp+10,plusw1
 14241  0164BE  0EFD               	movlw	-3
 14242  0164C0  0060  F107  FFE3   	movff	btemp+11,plusw1
 14243                           
 14244                           ;stkvar	_x @ sp[(-6)+-4]
 14245  0164C6  0EF6               	movlw	-10
 14246  0164C8  006F FF8C  F03E    	movff	plusw1,btemp+8
 14247  0164CE  0EF7               	movlw	-9
 14248  0164D0  006F FF8C  F03F    	movff	plusw1,btemp+9
 14249  0164D6  0EF8               	movlw	-8
 14250  0164D8  006F FF8C  F040    	movff	plusw1,btemp+10
 14251  0164DE  0EF9               	movlw	-7
 14252  0164E0  006F FF8C  F041    	movff	plusw1,btemp+11
 14253                           
 14254                           ;stkvar	_u @ sp[(-6)+0]
 14255  0164E6  0EFA               	movlw	-6
 14256  0164E8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14257  0164EE  0EFB               	movlw	-5
 14258  0164F0  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14259  0164F6  0EFC               	movlw	-4
 14260  0164F8  0060  F103  FFE3   	movff	btemp+10,plusw1
 14261  0164FE  0EFD               	movlw	-3
 14262  016500  0060  F107  FFE3   	movff	btemp+11,plusw1
 14263                           
 14264                           ;stkvar	_u @ sp[(-6)+0]
 14265  016506  0EFA               	movlw	-6
 14266  016508  006F FF8C  F03E    	movff	plusw1,btemp+8
 14267  01650E  0EFB               	movlw	-5
 14268  016510  006F FF8C  F03F    	movff	plusw1,btemp+9
 14269  016516  0EFC               	movlw	-4
 14270  016518  006F FF8C  F040    	movff	plusw1,btemp+10
 14271  01651E  0EFD               	movlw	-3
 14272  016520  006F FF8C  F041    	movff	plusw1,btemp+11
 14273  016526  0E18               	movlw	24
 14274  016528  D005               	goto	u5150
 14275  01652A                     u5155:
 14276  01652A  90D8               	bcf	status,0,c
 14277  01652C  3241               	rrcf	(btemp+11)^0,f,c
 14278  01652E  3240               	rrcf	(btemp+10)^0,f,c
 14279  016530  323F               	rrcf	(btemp+9)^0,f,c
 14280  016532  323E               	rrcf	(btemp+8)^0,f,c
 14281  016534                     u5150:
 14282  016534  2EE8               	decfsz	wreg,f,c
 14283  016536  D7F9               	goto	u5155
 14284  016538  0060  F0F8  F03C   	movff	btemp+8,btemp+6
 14285  01653E  0060  F0FC  F03D   	movff	btemp+9,btemp+7
 14286  016544  0EFF               	movlw	255
 14287  016546  163C               	andwf	(btemp+6)^0,f,c
 14288  016548  0E00               	movlw	0
 14289  01654A  163D               	andwf	(btemp+7)^0,f,c
 14290                           
 14291                           ;stkvar	_e @ sp[(-6)+4]
 14292  01654C  0EFE               	movlw	-2
 14293  01654E  0060  F0F3  FFE3   	movff	btemp+6,plusw1
 14294  016554  0EFF               	movlw	-1
 14295  016556  0060  F0F7  FFE3   	movff	btemp+7,plusw1
 14296                           
 14297                           ;stkvar	_e @ sp[(-6)+4]
 14298  01655C  0EFE               	movlw	-2
 14299  01655E  006F FF8C  F036    	movff	plusw1,btemp
 14300  016564  0EFF               	movlw	-1
 14301  016566  50E3               	movf	plusw1,w,c
 14302  016568  1036               	iorwf	btemp^0,w,c
 14303  01656A  A4D8               	btfss	status,2,c
 14304  01656C  D023               	goto	l6400
 14305                           
 14306                           ;stkvar	_u @ sp[(-6)+0]
 14307  01656E  0EFA               	movlw	-6
 14308  016570  006F FF8C  F03E    	movff	plusw1,btemp+8
 14309  016576  0EFB               	movlw	-5
 14310  016578  006F FF8C  F03F    	movff	plusw1,btemp+9
 14311  01657E  0EFC               	movlw	-4
 14312  016580  006F FF8C  F040    	movff	plusw1,btemp+10
 14313  016586  0EFD               	movlw	-3
 14314  016588  006F FF8C  F041    	movff	plusw1,btemp+11
 14315  01658E  90D8               	bcf	status,0,c
 14316  016590  343E               	rlcf	(btemp+8)^0,w,c
 14317  016592  6E3A               	movwf	(btemp+4)^0,c
 14318  016594  343F               	rlcf	(btemp+9)^0,w,c
 14319  016596  6E3B               	movwf	(btemp+5)^0,c
 14320  016598  3440               	rlcf	(btemp+10)^0,w,c
 14321  01659A  6E3C               	movwf	(btemp+6)^0,c
 14322  01659C  3441               	rlcf	(btemp+11)^0,w,c
 14323  01659E  6E3D               	movwf	(btemp+7)^0,c
 14324  0165A0  503A               	movf	(btemp+4)^0,w,c
 14325  0165A2  103B               	iorwf	(btemp+5)^0,w,c
 14326  0165A4  103C               	iorwf	(btemp+6)^0,w,c
 14327  0165A6  103D               	iorwf	(btemp+7)^0,w,c
 14328  0165A8  A4D8               	btfss	status,2,c
 14329  0165AA  D002               	goto	l6396
 14330  0165AC  0E02               	movlw	2
 14331  0165AE  D02E               	goto	L16
 14332  0165B0                     l6396:
 14333  0165B0  0E03               	movlw	3
 14334  0165B2  D02C               	goto	L16
 14335  0165B4                     l6400:
 14336                           
 14337                           ;stkvar	_e @ sp[(-6)+4]
 14338  0165B4  0EFE               	movlw	-2
 14339  0165B6  28E3               	incf	plusw1,w,c
 14340  0165B8  E128               	bnz	l6406
 14341  0165BA  0EFF               	movlw	-1
 14342  0165BC  50E3               	movf	plusw1,w,c
 14343  0165BE  A4D8               	btfss	status,2,c
 14344  0165C0  D024               	goto	l6406
 14345                           
 14346                           ;stkvar	_u @ sp[(-6)+0]
 14347  0165C2  0EFA               	movlw	-6
 14348  0165C4  006F FF8C  F03E    	movff	plusw1,btemp+8
 14349  0165CA  0EFB               	movlw	-5
 14350  0165CC  006F FF8C  F03F    	movff	plusw1,btemp+9
 14351  0165D2  0EFC               	movlw	-4
 14352  0165D4  006F FF8C  F040    	movff	plusw1,btemp+10
 14353  0165DA  0EFD               	movlw	-3
 14354  0165DC  006F FF8C  F041    	movff	plusw1,btemp+11
 14355  0165E2  0E09               	movlw	9
 14356  0165E4                     u5195:
 14357  0165E4  90D8               	bcf	status,0,c
 14358  0165E6  363E               	rlcf	(btemp+8)^0,f,c
 14359  0165E8  363F               	rlcf	(btemp+9)^0,f,c
 14360  0165EA  3640               	rlcf	(btemp+10)^0,f,c
 14361  0165EC  3641               	rlcf	(btemp+11)^0,f,c
 14362  0165EE  2EE8               	decfsz	wreg,f,c
 14363  0165F0  D7F9               	goto	u5195
 14364  0165F2  503E               	movf	(btemp+8)^0,w,c
 14365  0165F4  103F               	iorwf	(btemp+9)^0,w,c
 14366  0165F6  1040               	iorwf	(btemp+10)^0,w,c
 14367  0165F8  1041               	iorwf	(btemp+11)^0,w,c
 14368  0165FA  A4D8               	btfss	status,2,c
 14369  0165FC  D002               	goto	u5200
 14370  0165FE  0E01               	movlw	1
 14371  016600  D001               	goto	u5210
 14372  016602                     u5200:
 14373  016602  0E00               	movlw	0
 14374  016604                     u5210:
 14375  016604  6E36               	movwf	btemp^0,c
 14376  016606  6A37               	clrf	(btemp+1)^0,c
 14377  016608  D004               	goto	l2694
 14378  01660A                     l6406:
 14379  01660A  0E04               	movlw	4
 14380  01660C                     L16:
 14381  01660C  6E36               	movwf	btemp^0,c
 14382  01660E  0E00               	movlw	0
 14383  016610  6E37               	movwf	(btemp+1)^0,c
 14384  016612                     l2694:
 14385                           
 14386                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14387  016612  0EF6               	movlw	246
 14388  016614  26E1               	addwf	fsr1l,f,c
 14389  016616  0EFF               	movlw	255
 14390  016618  22E2               	addwfc	fsr1h,f,c
 14391  01661A  0012               	return		;funcret
 14392  01661C                     __end_of___fpclassifyf:
 14393                           	opt callstack 0
 14394                           
 14395 ;; *************** function ___fltol *****************
 14396 ;; Defined at:
 14397 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  f1              4  [STACK] int 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  exp1            1  [STACK] unsigned char 
 14402 ;;  sign1           1  [STACK] unsigned char 
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  4  [STACK] long 
 14405 ;; Registers used:
 14406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14416 ;;Total ram usage:        0 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; Hardware stack levels required when called:    6
 14419 ;; This function calls:
 14420 ;;		Nothing
 14421 ;; This function is called by:
 14422 ;;		_efgtoa
 14423 ;; This function uses a reentrant model
 14424 ;;
 14425                           
 14426                           	psect	text52
 14427  01679C                     __ptext52:
 14428                           	opt callstack 0
 14429  01679C                     ___fltol:
 14430                           	opt callstack 0
 14431                           
 14432                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14433  01679C  52E6               	movf	postinc1,f,c
 14434  01679E  52E6               	movf	postinc1,f,c
 14435                           
 14436                           ;stkvar	_f1 @ sp[(-2)+-4]
 14437                           
 14438                           ;incstack = 0
 14439  0167A0  0EFA               	movlw	-6
 14440  0167A2  006F FF8C  F03E    	movff	plusw1,btemp+8
 14441  0167A8  0EFB               	movlw	-5
 14442  0167AA  006F FF8C  F03F    	movff	plusw1,btemp+9
 14443  0167B0  0EFC               	movlw	-4
 14444  0167B2  006F FF8C  F040    	movff	plusw1,btemp+10
 14445  0167B8  0EFD               	movlw	-3
 14446  0167BA  006F FF8C  F041    	movff	plusw1,btemp+11
 14447  0167C0  0E18               	movlw	24
 14448  0167C2  D005               	goto	u6360
 14449  0167C4                     u6365:
 14450  0167C4  90D8               	bcf	status,0,c
 14451  0167C6  3241               	rrcf	(btemp+11)^0,f,c
 14452  0167C8  3240               	rrcf	(btemp+10)^0,f,c
 14453  0167CA  323F               	rrcf	(btemp+9)^0,f,c
 14454  0167CC  323E               	rrcf	(btemp+8)^0,f,c
 14455  0167CE                     u6360:
 14456  0167CE  2EE8               	decfsz	wreg,f,c
 14457  0167D0  D7F9               	goto	u6365
 14458                           
 14459                           ;stkvar	_exp1 @ sp[(-2)+0]
 14460  0167D2  0EFE               	movlw	-2
 14461  0167D4  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14462  0167DA  0EFE               	movlw	-2
 14463  0167DC  50E3               	movf	plusw1,w,c
 14464  0167DE  A4D8               	btfss	status,2,c
 14465  0167E0  D006               	goto	l7026
 14466  0167E2                     u6370:
 14467  0167E2  0E00               	movlw	0
 14468  0167E4  6E36               	movwf	btemp^0,c
 14469  0167E6  6A37               	clrf	(btemp+1)^0,c
 14470  0167E8  6A38               	clrf	(btemp+2)^0,c
 14471  0167EA  6A39               	clrf	(btemp+3)^0,c
 14472  0167EC  D08B               	goto	l2310
 14473  0167EE                     l7026:
 14474                           
 14475                           ;stkvar	_f1 @ sp[(-2)+-4]
 14476  0167EE  0EFA               	movlw	-6
 14477  0167F0  006F FF8C  F03E    	movff	plusw1,btemp+8
 14478  0167F6  0EFB               	movlw	-5
 14479  0167F8  006F FF8C  F03F    	movff	plusw1,btemp+9
 14480  0167FE  0EFC               	movlw	-4
 14481  016800  006F FF8C  F040    	movff	plusw1,btemp+10
 14482  016806  0EFD               	movlw	-3
 14483  016808  006F FF8C  F041    	movff	plusw1,btemp+11
 14484  01680E  0E20               	movlw	32
 14485  016810  D005               	goto	u6380
 14486  016812                     u6385:
 14487  016812  90D8               	bcf	status,0,c
 14488  016814  3241               	rrcf	(btemp+11)^0,f,c
 14489  016816  3240               	rrcf	(btemp+10)^0,f,c
 14490  016818  323F               	rrcf	(btemp+9)^0,f,c
 14491  01681A  323E               	rrcf	(btemp+8)^0,f,c
 14492  01681C                     u6380:
 14493  01681C  2EE8               	decfsz	wreg,f,c
 14494  01681E  D7F9               	goto	u6385
 14495                           
 14496                           ;stkvar	_sign1 @ sp[(-2)+1]
 14497  016820  0EFF               	movlw	-1
 14498  016822  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14499                           
 14500                           ;stkvar	_f1 @ sp[(-2)+-4]
 14501  016828  0EFC               	movlw	-4
 14502  01682A  8EE3               	bsf	plusw1,7,c
 14503                           
 14504                           ;stkvar	_f1 @ sp[(-2)+-4]
 14505  01682C  50E1               	movf	fsr1l,w,c
 14506  01682E  0FFA               	addlw	-6
 14507  016830  6ED9               	movwf	fsr2l,c
 14508  016832  50E2               	movf	fsr1h,w,c
 14509  016834  6EDA               	movwf	fsr2h,c
 14510  016836  0EFF               	movlw	255
 14511  016838  22DA               	addwfc	fsr2h,f,c
 14512  01683A  0EFF               	movlw	255
 14513  01683C  16DE               	andwf	postinc2,f,c
 14514  01683E  0EFF               	movlw	255
 14515  016840  16DE               	andwf	postinc2,f,c
 14516  016842  0EFF               	movlw	255
 14517  016844  16DE               	andwf	postinc2,f,c
 14518  016846  0E00               	movlw	0
 14519  016848  16DE               	andwf	postinc2,f,c
 14520                           
 14521                           ;stkvar	_exp1 @ sp[(-2)+0]
 14522  01684A  0EFE               	movlw	-2
 14523  01684C  006F FF8C  F036    	movff	plusw1,btemp
 14524  016852  0E96               	movlw	150
 14525  016854  5E36               	subwf	btemp^0,f,c
 14526  016856  0EFE               	movlw	-2
 14527  016858  0060  F0DB  FFE3   	movff	btemp,plusw1
 14528                           
 14529                           ;stkvar	_exp1 @ sp[(-2)+0]
 14530  01685E  0EFE               	movlw	-2
 14531  016860  AEE3               	btfss	plusw1,7,c
 14532  016862  D014               	goto	l7044
 14533                           
 14534                           ;stkvar	_exp1 @ sp[(-2)+0]
 14535  016864  0EFE               	movlw	-2
 14536  016866  50E3               	movf	plusw1,w,c
 14537  016868  0A80               	xorlw	128
 14538  01686A  0F97               	addlw	151
 14539  01686C  A0D8               	btfss	status,0,c
 14540  01686E  D7B9               	goto	u6370
 14541  016870                     l7042:
 14542                           
 14543                           ;stkvar	_f1 @ sp[(-2)+-4]
 14544  016870  90D8               	bcf	status,0,c
 14545  016872  0EFD               	movlw	-3
 14546  016874  32E3               	rrcf	plusw1,f,c
 14547  016876  0EFC               	movlw	-4
 14548  016878  32E3               	rrcf	plusw1,f,c
 14549  01687A  0EFB               	movlw	-5
 14550  01687C  32E3               	rrcf	plusw1,f,c
 14551  01687E  0EFA               	movlw	-6
 14552  016880  32E3               	rrcf	plusw1,f,c
 14553                           
 14554                           ;stkvar	_exp1 @ sp[(-2)+0]
 14555  016882  0EFE               	movlw	-2
 14556  016884  2AE3               	incf	plusw1,f,c
 14557  016886  B4D8               	btfsc	status,2,c
 14558  016888  D018               	goto	u6430
 14559  01688A  D7F2               	goto	l7042
 14560  01688C                     l7044:
 14561                           
 14562                           ;stkvar	_exp1 @ sp[(-2)+0]
 14563  01688C  0EFE               	movlw	-2
 14564  01688E  006F FF8C  F036    	movff	plusw1,btemp
 14565  016894  0E1F               	movlw	31
 14566  016896  6436               	cpfsgt	btemp^0,c
 14567  016898  D00C               	goto	l7052
 14568  01689A  D7A3               	goto	u6370
 14569  01689C                     l7050:
 14570                           
 14571                           ;stkvar	_f1 @ sp[(-2)+-4]
 14572  01689C  90D8               	bcf	status,0,c
 14573  01689E  0EFA               	movlw	-6
 14574  0168A0  36E3               	rlcf	plusw1,f,c
 14575  0168A2  0EFB               	movlw	-5
 14576  0168A4  36E3               	rlcf	plusw1,f,c
 14577  0168A6  0EFC               	movlw	-4
 14578  0168A8  36E3               	rlcf	plusw1,f,c
 14579  0168AA  0EFD               	movlw	-3
 14580  0168AC  36E3               	rlcf	plusw1,f,c
 14581                           
 14582                           ;stkvar	_exp1 @ sp[(-2)+0]
 14583  0168AE  0EFE               	movlw	-2
 14584  0168B0  06E3               	decf	plusw1,f,c
 14585  0168B2                     l7052:
 14586                           
 14587                           ;stkvar	_exp1 @ sp[(-2)+0]
 14588  0168B2  0EFE               	movlw	-2
 14589  0168B4  50E3               	movf	plusw1,w,c
 14590  0168B6  A4D8               	btfss	status,2,c
 14591  0168B8  D7F1               	goto	l7050
 14592  0168BA                     u6430:
 14593                           
 14594                           ;stkvar	_sign1 @ sp[(-2)+1]
 14595  0168BA  0EFF               	movlw	-1
 14596  0168BC  50E3               	movf	plusw1,w,c
 14597  0168BE  B4D8               	btfsc	status,2,c
 14598  0168C0  D011               	goto	u6450
 14599                           
 14600                           ;stkvar	_f1 @ sp[(-2)+-4]
 14601                           ;stkvar	_f1 @ sp[(-2)+-4]
 14602  0168C2  0EFA               	movlw	-6
 14603  0168C4  6CE3               	negf	plusw1,c
 14604  0168C6  0EFB               	movlw	-5
 14605  0168C8  1EE3               	comf	plusw1,f,c
 14606  0168CA  0EFC               	movlw	-4
 14607  0168CC  1EE3               	comf	plusw1,f,c
 14608  0168CE  0EFD               	movlw	-3
 14609  0168D0  1EE3               	comf	plusw1,f,c
 14610  0168D2  E308               	bnc	u6450
 14611  0168D4  0EFB               	movlw	-5
 14612  0168D6  2AE3               	incf	plusw1,f,c
 14613  0168D8  E305               	bnc	u6450
 14614  0168DA  0EFC               	movlw	-4
 14615  0168DC  2AE3               	incf	plusw1,f,c
 14616  0168DE  E302               	bnc	u6450
 14617  0168E0  0EFD               	movlw	-3
 14618  0168E2  2AE3               	incf	plusw1,f,c
 14619  0168E4                     u6450:
 14620                           
 14621                           ;stkvar	_f1 @ sp[(-2)+-4]
 14622  0168E4  0EFA               	movlw	-6
 14623  0168E6  006F FF8C  F036    	movff	plusw1,btemp
 14624  0168EC  0EFB               	movlw	-5
 14625  0168EE  006F FF8C  F037    	movff	plusw1,btemp+1
 14626  0168F4  0EFC               	movlw	-4
 14627  0168F6  006F FF8C  F038    	movff	plusw1,btemp+2
 14628  0168FC  0EFD               	movlw	-3
 14629  0168FE  006F FF8C  F039    	movff	plusw1,btemp+3
 14630  016904                     l2310:
 14631                           
 14632                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14633  016904  0EFA               	movlw	250
 14634  016906  26E1               	addwf	fsr1l,f,c
 14635  016908  0EFF               	movlw	255
 14636  01690A  22E2               	addwfc	fsr1h,f,c
 14637  01690C  0012               	return		;funcret
 14638  01690E                     __end_of___fltol:
 14639                           	opt callstack 0
 14640                           
 14641 ;; *************** function ___flsub *****************
 14642 ;; Defined at:
 14643 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;  b               4  [STACK] long 
 14646 ;;  a               4  [STACK] long 
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;		None
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  4  [STACK] long 
 14651 ;; Registers used:
 14652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14662 ;;Total ram usage:        0 bytes
 14663 ;; Hardware stack levels used:    1
 14664 ;; Hardware stack levels required when called:    7
 14665 ;; This function calls:
 14666 ;;		___fladd
 14667 ;; This function is called by:
 14668 ;;		_conv_raw_result
 14669 ;;		_lp_filter
 14670 ;;		_efgtoa
 14671 ;; This function uses a reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text53
 14675  018400                     __ptext53:
 14676                           	opt callstack 0
 14677  018400                     ___flsub:
 14678                           	opt callstack 16
 14679                           
 14680                           ;stkvar	_a @ sp[(0)+-8]
 14681                           
 14682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14683                           ;incstack = 0
 14684  018400  0EFB               	movlw	-5
 14685  018402  7EE3               	btg	plusw1,7,c
 14686                           
 14687                           ;stkvar	_a @ sp[(0)+-8]
 14688  018404  0EF8               	movlw	-8
 14689  018406  006F FF8F FFE6     	movff	plusw1,postinc1
 14690  01840C  006F FF8F FFE6     	movff	plusw1,postinc1
 14691  018412  006F FF8F FFE6     	movff	plusw1,postinc1
 14692  018418  006F FF8F FFE6     	movff	plusw1,postinc1
 14693                           
 14694                           ;stkvar	_b @ sp[(-4)+-4]
 14695  01841E  0EF8               	movlw	-8
 14696  018420  006F FF8F FFE6     	movff	plusw1,postinc1
 14697  018426  006F FF8F FFE6     	movff	plusw1,postinc1
 14698  01842C  006F FF8F FFE6     	movff	plusw1,postinc1
 14699  018432  006F FF8F FFE6     	movff	plusw1,postinc1
 14700  018438  EC0D  F095         	call	___fladd	;wreg free
 14701                           
 14702                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14703  01843C  0EF8               	movlw	248
 14704  01843E  26E1               	addwf	fsr1l,f,c
 14705  018440  0EFF               	movlw	255
 14706  018442  22E2               	addwfc	fsr1h,f,c
 14707  018444  0012               	return		;funcret
 14708  018446                     __end_of___flsub:
 14709                           	opt callstack 0
 14710                           
 14711 ;; *************** function ___fladd *****************
 14712 ;; Defined at:
 14713 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  b               4  [STACK] long 
 14716 ;;  a               4  [STACK] long 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;  grs             1  [STACK] unsigned char 
 14719 ;;  bexp            1  [STACK] unsigned char 
 14720 ;;  aexp            1  [STACK] unsigned char 
 14721 ;;  signs           1  [STACK] unsigned char 
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  4  [STACK] unsigned char 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;Total ram usage:        0 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    6
 14738 ;; This function calls:
 14739 ;;		Nothing
 14740 ;; This function is called by:
 14741 ;;		_lp_filter
 14742 ;;		_efgtoa
 14743 ;;		___flsub
 14744 ;; This function uses a reentrant model
 14745 ;;
 14746                           
 14747                           	psect	text54
 14748  012A1A                     __ptext54:
 14749                           	opt callstack 0
 14750  012A1A                     ___fladd:
 14751                           	opt callstack 0
 14752                           
 14753                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14754  012A1A  52E6               	movf	postinc1,f,c
 14755  012A1C  52E6               	movf	postinc1,f,c
 14756  012A1E  52E6               	movf	postinc1,f,c
 14757  012A20  52E6               	movf	postinc1,f,c
 14758                           
 14759                           ;stkvar	_b @ sp[(-4)+-4]
 14760                           
 14761                           ;incstack = 0
 14762  012A22  0EFB               	movlw	251
 14763  012A24  24E1               	addwf	fsr1l,w,c
 14764  012A26  6ED9               	movwf	fsr2l,c
 14765  012A28  0EFF               	movlw	255
 14766  012A2A  20E2               	addwfc	fsr1h,w,c
 14767  012A2C  6EDA               	movwf	fsr2h,c
 14768  012A2E  50DF               	movf	indf2,w,c
 14769  012A30  6E41               	movwf	(btemp+11)^0,c
 14770  012A32  0E80               	movlw	128
 14771  012A34  1641               	andwf	(btemp+11)^0,f,c
 14772                           
 14773                           ;stkvar	_signs @ sp[(-4)+3]
 14774  012A36  0EFF               	movlw	-1
 14775  012A38  0060  F107  FFE3   	movff	btemp+11,plusw1
 14776                           
 14777                           ;stkvar	_b @ sp[(-4)+-4]
 14778  012A3E  0EFB               	movlw	251
 14779  012A40  24E1               	addwf	fsr1l,w,c
 14780  012A42  6ED9               	movwf	fsr2l,c
 14781  012A44  0EFF               	movlw	255
 14782  012A46  20E2               	addwfc	fsr1h,w,c
 14783  012A48  6EDA               	movwf	fsr2h,c
 14784  012A4A  50DF               	movf	indf2,w,c
 14785  012A4C  6E41               	movwf	(btemp+11)^0,c
 14786  012A4E  90D8               	bcf	status,0,c
 14787  012A50  3441               	rlcf	(btemp+11)^0,w,c
 14788  012A52  6E40               	movwf	(btemp+10)^0,c
 14789                           
 14790                           ;stkvar	_bexp @ sp[(-4)+1]
 14791  012A54  0EFD               	movlw	-3
 14792  012A56  0060  F103  FFE3   	movff	btemp+10,plusw1
 14793                           
 14794                           ;stkvar	_b @ sp[(-4)+-4]
 14795  012A5C  0EFA               	movlw	250
 14796  012A5E  24E1               	addwf	fsr1l,w,c
 14797  012A60  6ED9               	movwf	fsr2l,c
 14798  012A62  0EFF               	movlw	255
 14799  012A64  20E2               	addwfc	fsr1h,w,c
 14800  012A66  6EDA               	movwf	fsr2h,c
 14801  012A68  AEDF               	btfss	indf2,7,c
 14802  012A6A  D002               	goto	l6140
 14803                           
 14804                           ;stkvar	_bexp @ sp[(-4)+1]
 14805  012A6C  0EFD               	movlw	-3
 14806  012A6E  80E3               	bsf	plusw1,0,c
 14807  012A70                     l6140:
 14808                           
 14809                           ;stkvar	_bexp @ sp[(-4)+1]
 14810  012A70  0EFD               	movlw	-3
 14811  012A72  50E3               	movf	plusw1,w,c
 14812  012A74  B4D8               	btfsc	status,2,c
 14813  012A76  D027               	goto	l6150
 14814                           
 14815                           ;stkvar	_bexp @ sp[(-4)+1]
 14816  012A78  0EFD               	movlw	-3
 14817  012A7A  28E3               	incf	plusw1,w,c
 14818  012A7C  A4D8               	btfss	status,2,c
 14819  012A7E  D018               	goto	l6146
 14820  012A80  0E00               	movlw	0
 14821  012A82  6E3E               	movwf	(btemp+8)^0,c
 14822  012A84  0E00               	movlw	0
 14823  012A86  6E3F               	movwf	(btemp+9)^0,c
 14824  012A88  0E00               	movlw	0
 14825  012A8A  6E40               	movwf	(btemp+10)^0,c
 14826  012A8C  0E00               	movlw	0
 14827  012A8E  6E41               	movwf	(btemp+11)^0,c
 14828                           
 14829                           ;stkvar	_b @ sp[(-4)+-4]
 14830  012A90  0EF8               	movlw	-8
 14831  012A92  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14832  012A98  0EF9               	movlw	-7
 14833  012A9A  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14834  012AA0  0EFA               	movlw	-6
 14835  012AA2  0060  F103  FFE3   	movff	btemp+10,plusw1
 14836  012AA8  0EFB               	movlw	-5
 14837  012AAA  0060  F107  FFE3   	movff	btemp+11,plusw1
 14838  012AB0                     l6146:
 14839                           
 14840                           ;stkvar	_b @ sp[(-4)+-4]
 14841  012AB0  0EFA               	movlw	-6
 14842  012AB2  8EE3               	bsf	plusw1,7,c
 14843                           
 14844                           ;stkvar	_b @ sp[(-4)+-4]
 14845  012AB4  0EFB               	movlw	251
 14846  012AB6  24E1               	addwf	fsr1l,w,c
 14847  012AB8  6ED9               	movwf	fsr2l,c
 14848  012ABA  0EFF               	movlw	255
 14849  012ABC  20E2               	addwfc	fsr1h,w,c
 14850  012ABE  6EDA               	movwf	fsr2h,c
 14851  012AC0  0E00               	movlw	0
 14852  012AC2  6EDF               	movwf	indf2,c
 14853  012AC4  D018               	goto	l6152
 14854  012AC6                     l6150:
 14855  012AC6  0E00               	movlw	0
 14856  012AC8  6E3E               	movwf	(btemp+8)^0,c
 14857  012ACA  0E00               	movlw	0
 14858  012ACC  6E3F               	movwf	(btemp+9)^0,c
 14859  012ACE  0E00               	movlw	0
 14860  012AD0  6E40               	movwf	(btemp+10)^0,c
 14861  012AD2  0E00               	movlw	0
 14862  012AD4  6E41               	movwf	(btemp+11)^0,c
 14863                           
 14864                           ;stkvar	_b @ sp[(-4)+-4]
 14865  012AD6  0EF8               	movlw	-8
 14866  012AD8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14867  012ADE  0EF9               	movlw	-7
 14868  012AE0  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14869  012AE6  0EFA               	movlw	-6
 14870  012AE8  0060  F103  FFE3   	movff	btemp+10,plusw1
 14871  012AEE  0EFB               	movlw	-5
 14872  012AF0  0060  F107  FFE3   	movff	btemp+11,plusw1
 14873  012AF6                     l6152:
 14874                           
 14875                           ;stkvar	_a @ sp[(-4)+-8]
 14876  012AF6  0EF7               	movlw	247
 14877  012AF8  24E1               	addwf	fsr1l,w,c
 14878  012AFA  6ED9               	movwf	fsr2l,c
 14879  012AFC  0EFF               	movlw	255
 14880  012AFE  20E2               	addwfc	fsr1h,w,c
 14881  012B00  6EDA               	movwf	fsr2h,c
 14882  012B02  50DF               	movf	indf2,w,c
 14883  012B04  6E41               	movwf	(btemp+11)^0,c
 14884  012B06  0E80               	movlw	128
 14885  012B08  1641               	andwf	(btemp+11)^0,f,c
 14886                           
 14887                           ;stkvar	_aexp @ sp[(-4)+2]
 14888  012B0A  0EFE               	movlw	-2
 14889  012B0C  0060  F107  FFE3   	movff	btemp+11,plusw1
 14890                           
 14891                           ;stkvar	_signs @ sp[(-4)+3]
 14892                           ;stkvar	_aexp @ sp[(-4)+2]
 14893  012B12  50E1               	movf	fsr1l,w,c
 14894  012B14  0FFE               	addlw	-2
 14895  012B16  6ED9               	movwf	fsr2l,c
 14896  012B18  50E2               	movf	fsr1h,w,c
 14897  012B1A  6EDA               	movwf	fsr2h,c
 14898  012B1C  0EFF               	movlw	255
 14899  012B1E  22DA               	addwfc	fsr2h,f,c
 14900  012B20  0EFF               	movlw	-1
 14901  012B22  50E3               	movf	plusw1,w,c
 14902  012B24  18DE               	xorwf	postinc2,w,c
 14903  012B26  B4D8               	btfsc	status,2,c
 14904  012B28  D002               	goto	l6158
 14905                           
 14906                           ;stkvar	_signs @ sp[(-4)+3]
 14907  012B2A  0EFF               	movlw	-1
 14908  012B2C  8CE3               	bsf	plusw1,6,c
 14909  012B2E                     l6158:
 14910                           
 14911                           ;stkvar	_a @ sp[(-4)+-8]
 14912  012B2E  0EF7               	movlw	247
 14913  012B30  24E1               	addwf	fsr1l,w,c
 14914  012B32  6ED9               	movwf	fsr2l,c
 14915  012B34  0EFF               	movlw	255
 14916  012B36  20E2               	addwfc	fsr1h,w,c
 14917  012B38  6EDA               	movwf	fsr2h,c
 14918  012B3A  50DF               	movf	indf2,w,c
 14919  012B3C  6E41               	movwf	(btemp+11)^0,c
 14920  012B3E  90D8               	bcf	status,0,c
 14921  012B40  3441               	rlcf	(btemp+11)^0,w,c
 14922  012B42  6E40               	movwf	(btemp+10)^0,c
 14923                           
 14924                           ;stkvar	_aexp @ sp[(-4)+2]
 14925  012B44  0EFE               	movlw	-2
 14926  012B46  0060  F103  FFE3   	movff	btemp+10,plusw1
 14927                           
 14928                           ;stkvar	_a @ sp[(-4)+-8]
 14929  012B4C  0EF6               	movlw	246
 14930  012B4E  24E1               	addwf	fsr1l,w,c
 14931  012B50  6ED9               	movwf	fsr2l,c
 14932  012B52  0EFF               	movlw	255
 14933  012B54  20E2               	addwfc	fsr1h,w,c
 14934  012B56  6EDA               	movwf	fsr2h,c
 14935  012B58  AEDF               	btfss	indf2,7,c
 14936  012B5A  D002               	goto	l6164
 14937                           
 14938                           ;stkvar	_aexp @ sp[(-4)+2]
 14939  012B5C  0EFE               	movlw	-2
 14940  012B5E  80E3               	bsf	plusw1,0,c
 14941  012B60                     l6164:
 14942                           
 14943                           ;stkvar	_aexp @ sp[(-4)+2]
 14944  012B60  0EFE               	movlw	-2
 14945  012B62  50E3               	movf	plusw1,w,c
 14946  012B64  B4D8               	btfsc	status,2,c
 14947  012B66  D027               	goto	l6174
 14948                           
 14949                           ;stkvar	_aexp @ sp[(-4)+2]
 14950  012B68  0EFE               	movlw	-2
 14951  012B6A  28E3               	incf	plusw1,w,c
 14952  012B6C  A4D8               	btfss	status,2,c
 14953  012B6E  D018               	goto	l6170
 14954  012B70  0E00               	movlw	0
 14955  012B72  6E3E               	movwf	(btemp+8)^0,c
 14956  012B74  0E00               	movlw	0
 14957  012B76  6E3F               	movwf	(btemp+9)^0,c
 14958  012B78  0E00               	movlw	0
 14959  012B7A  6E40               	movwf	(btemp+10)^0,c
 14960  012B7C  0E00               	movlw	0
 14961  012B7E  6E41               	movwf	(btemp+11)^0,c
 14962                           
 14963                           ;stkvar	_a @ sp[(-4)+-8]
 14964  012B80  0EF4               	movlw	-12
 14965  012B82  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 14966  012B88  0EF5               	movlw	-11
 14967  012B8A  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 14968  012B90  0EF6               	movlw	-10
 14969  012B92  0060  F103  FFE3   	movff	btemp+10,plusw1
 14970  012B98  0EF7               	movlw	-9
 14971  012B9A  0060  F107  FFE3   	movff	btemp+11,plusw1
 14972  012BA0                     l6170:
 14973                           
 14974                           ;stkvar	_a @ sp[(-4)+-8]
 14975  012BA0  0EF6               	movlw	-10
 14976  012BA2  8EE3               	bsf	plusw1,7,c
 14977                           
 14978                           ;stkvar	_a @ sp[(-4)+-8]
 14979  012BA4  0EF7               	movlw	247
 14980  012BA6  24E1               	addwf	fsr1l,w,c
 14981  012BA8  6ED9               	movwf	fsr2l,c
 14982  012BAA  0EFF               	movlw	255
 14983  012BAC  20E2               	addwfc	fsr1h,w,c
 14984  012BAE  6EDA               	movwf	fsr2h,c
 14985  012BB0  0E00               	movlw	0
 14986  012BB2  6EDF               	movwf	indf2,c
 14987  012BB4  D018               	goto	l6176
 14988  012BB6                     l6174:
 14989  012BB6  0E00               	movlw	0
 14990  012BB8  6E3E               	movwf	(btemp+8)^0,c
 14991  012BBA  0E00               	movlw	0
 14992  012BBC  6E3F               	movwf	(btemp+9)^0,c
 14993  012BBE  0E00               	movlw	0
 14994  012BC0  6E40               	movwf	(btemp+10)^0,c
 14995  012BC2  0E00               	movlw	0
 14996  012BC4  6E41               	movwf	(btemp+11)^0,c
 14997                           
 14998                           ;stkvar	_a @ sp[(-4)+-8]
 14999  012BC6  0EF4               	movlw	-12
 15000  012BC8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 15001  012BCE  0EF5               	movlw	-11
 15002  012BD0  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 15003  012BD6  0EF6               	movlw	-10
 15004  012BD8  0060  F103  FFE3   	movff	btemp+10,plusw1
 15005  012BDE  0EF7               	movlw	-9
 15006  012BE0  0060  F107  FFE3   	movff	btemp+11,plusw1
 15007  012BE6                     l6176:
 15008                           
 15009                           ;stkvar	_bexp @ sp[(-4)+1]
 15010                           ;stkvar	_aexp @ sp[(-4)+2]
 15011  012BE6  50E1               	movf	fsr1l,w,c
 15012  012BE8  0FFE               	addlw	-2
 15013  012BEA  6ED9               	movwf	fsr2l,c
 15014  012BEC  50E2               	movf	fsr1h,w,c
 15015  012BEE  6EDA               	movwf	fsr2h,c
 15016  012BF0  0EFF               	movlw	255
 15017  012BF2  22DA               	addwfc	fsr2h,f,c
 15018  012BF4  0EFD               	movlw	-3
 15019  012BF6  50E3               	movf	plusw1,w,c
 15020  012BF8  5CDE               	subwf	postinc2,w,c
 15021  012BFA  B0D8               	btfsc	status,0,c
 15022  012BFC  D0A4               	goto	l6212
 15023                           
 15024                           ;stkvar	_signs @ sp[(-4)+3]
 15025  012BFE  0EFF               	movlw	-1
 15026  012C00  ACE3               	btfss	plusw1,6,c
 15027  012C02  D002               	goto	l6182
 15028                           
 15029                           ;stkvar	_signs @ sp[(-4)+3]
 15030  012C04  0EFF               	movlw	-1
 15031  012C06  7EE3               	btg	plusw1,7,c
 15032  012C08                     l6182:
 15033                           
 15034                           ;stkvar	_bexp @ sp[(-4)+1]
 15035                           ;stkvar	_grs @ sp[(-4)+0]
 15036  012C08  0EFD               	movlw	-3
 15037  012C0A  006F FF8C  F036    	movff	plusw1,btemp
 15038  012C10  0EFC               	movlw	-4
 15039  012C12  0060  F0DB  FFE3   	movff	btemp,plusw1
 15040                           
 15041                           ;stkvar	_aexp @ sp[(-4)+2]
 15042                           ;stkvar	_bexp @ sp[(-4)+1]
 15043  012C18  0EFE               	movlw	-2
 15044  012C1A  006F FF8C  F036    	movff	plusw1,btemp
 15045  012C20  0EFD               	movlw	-3
 15046  012C22  0060  F0DB  FFE3   	movff	btemp,plusw1
 15047                           
 15048                           ;stkvar	_grs @ sp[(-4)+0]
 15049                           ;stkvar	_aexp @ sp[(-4)+2]
 15050  012C28  0EFC               	movlw	-4
 15051  012C2A  006F FF8C  F036    	movff	plusw1,btemp
 15052  012C30  0EFE               	movlw	-2
 15053  012C32  0060  F0DB  FFE3   	movff	btemp,plusw1
 15054                           
 15055                           ;stkvar	_b @ sp[(-4)+-4]
 15056                           ;stkvar	_grs @ sp[(-4)+0]
 15057  012C38  0EF8               	movlw	-8
 15058  012C3A  006F FF8C  F036    	movff	plusw1,btemp
 15059  012C40  0EFC               	movlw	-4
 15060  012C42  0060  F0DB  FFE3   	movff	btemp,plusw1
 15061                           
 15062                           ;stkvar	_a @ sp[(-4)+-8]
 15063                           ;stkvar	_b @ sp[(-4)+-4]
 15064  012C48  0EF4               	movlw	-12
 15065  012C4A  006F FF8C  F036    	movff	plusw1,btemp
 15066  012C50  0EF8               	movlw	-8
 15067  012C52  0060  F0DB  FFE3   	movff	btemp,plusw1
 15068                           
 15069                           ;stkvar	_grs @ sp[(-4)+0]
 15070                           ;stkvar	_a @ sp[(-4)+-8]
 15071  012C58  0EFC               	movlw	-4
 15072  012C5A  006F FF8C  F036    	movff	plusw1,btemp
 15073  012C60  0EF4               	movlw	-12
 15074  012C62  0060  F0DB  FFE3   	movff	btemp,plusw1
 15075                           
 15076                           ;stkvar	_b @ sp[(-4)+-4]
 15077  012C68  0EF9               	movlw	249
 15078  012C6A  24E1               	addwf	fsr1l,w,c
 15079  012C6C  6ED9               	movwf	fsr2l,c
 15080  012C6E  0EFF               	movlw	255
 15081  012C70  20E2               	addwfc	fsr1h,w,c
 15082  012C72  6EDA               	movwf	fsr2h,c
 15083  012C74  50DF               	movf	indf2,w,c
 15084  012C76  6E41               	movwf	(btemp+11)^0,c
 15085                           
 15086                           ;stkvar	_grs @ sp[(-4)+0]
 15087  012C78  0EFC               	movlw	-4
 15088  012C7A  0060  F107  FFE3   	movff	btemp+11,plusw1
 15089                           
 15090                           ;stkvar	_a @ sp[(-4)+-8]
 15091  012C80  0EF5               	movlw	245
 15092  012C82  24E1               	addwf	fsr1l,w,c
 15093  012C84  6ED9               	movwf	fsr2l,c
 15094  012C86  0EFF               	movlw	255
 15095  012C88  20E2               	addwfc	fsr1h,w,c
 15096  012C8A  6EDA               	movwf	fsr2h,c
 15097                           
 15098                           ;stkvar	_b @ sp[(-4)+-4]
 15099  012C8C  0EF9               	movlw	249
 15100  012C8E  24E1               	addwf	fsr1l,w,c
 15101  012C90  6EE9               	movwf	fsr0l,c
 15102  012C92  0EFF               	movlw	255
 15103  012C94  20E2               	addwfc	fsr1h,w,c
 15104  012C96  6EEA               	movwf	fsr0h,c
 15105  012C98  006F FF7F FFEF     	movff	indf2,indf0
 15106                           
 15107                           ;stkvar	_grs @ sp[(-4)+0]
 15108                           ;stkvar	_a @ sp[(-4)+-8]
 15109  012C9E  0EF5               	movlw	245
 15110  012CA0  24E1               	addwf	fsr1l,w,c
 15111  012CA2  6ED9               	movwf	fsr2l,c
 15112  012CA4  0EFF               	movlw	255
 15113  012CA6  20E2               	addwfc	fsr1h,w,c
 15114  012CA8  6EDA               	movwf	fsr2h,c
 15115  012CAA  0EFC               	movlw	-4
 15116  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 15117                           
 15118                           ;stkvar	_b @ sp[(-4)+-4]
 15119  012CB2  0EFA               	movlw	250
 15120  012CB4  24E1               	addwf	fsr1l,w,c
 15121  012CB6  6ED9               	movwf	fsr2l,c
 15122  012CB8  0EFF               	movlw	255
 15123  012CBA  20E2               	addwfc	fsr1h,w,c
 15124  012CBC  6EDA               	movwf	fsr2h,c
 15125  012CBE  50DF               	movf	indf2,w,c
 15126  012CC0  6E41               	movwf	(btemp+11)^0,c
 15127                           
 15128                           ;stkvar	_grs @ sp[(-4)+0]
 15129  012CC2  0EFC               	movlw	-4
 15130  012CC4  0060  F107  FFE3   	movff	btemp+11,plusw1
 15131                           
 15132                           ;stkvar	_a @ sp[(-4)+-8]
 15133  012CCA  0EF6               	movlw	246
 15134  012CCC  24E1               	addwf	fsr1l,w,c
 15135  012CCE  6ED9               	movwf	fsr2l,c
 15136  012CD0  0EFF               	movlw	255
 15137  012CD2  20E2               	addwfc	fsr1h,w,c
 15138  012CD4  6EDA               	movwf	fsr2h,c
 15139                           
 15140                           ;stkvar	_b @ sp[(-4)+-4]
 15141  012CD6  0EFA               	movlw	250
 15142  012CD8  24E1               	addwf	fsr1l,w,c
 15143  012CDA  6EE9               	movwf	fsr0l,c
 15144  012CDC  0EFF               	movlw	255
 15145  012CDE  20E2               	addwfc	fsr1h,w,c
 15146  012CE0  6EEA               	movwf	fsr0h,c
 15147  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 15148                           
 15149                           ;stkvar	_grs @ sp[(-4)+0]
 15150                           ;stkvar	_a @ sp[(-4)+-8]
 15151  012CE8  0EF6               	movlw	246
 15152  012CEA  24E1               	addwf	fsr1l,w,c
 15153  012CEC  6ED9               	movwf	fsr2l,c
 15154  012CEE  0EFF               	movlw	255
 15155  012CF0  20E2               	addwfc	fsr1h,w,c
 15156  012CF2  6EDA               	movwf	fsr2h,c
 15157  012CF4  0EFC               	movlw	-4
 15158  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15159                           
 15160                           ;stkvar	_b @ sp[(-4)+-4]
 15161  012CFC  0EFB               	movlw	251
 15162  012CFE  24E1               	addwf	fsr1l,w,c
 15163  012D00  6ED9               	movwf	fsr2l,c
 15164  012D02  0EFF               	movlw	255
 15165  012D04  20E2               	addwfc	fsr1h,w,c
 15166  012D06  6EDA               	movwf	fsr2h,c
 15167  012D08  50DF               	movf	indf2,w,c
 15168  012D0A  6E41               	movwf	(btemp+11)^0,c
 15169                           
 15170                           ;stkvar	_grs @ sp[(-4)+0]
 15171  012D0C  0EFC               	movlw	-4
 15172  012D0E  0060  F107  FFE3   	movff	btemp+11,plusw1
 15173                           
 15174                           ;stkvar	_a @ sp[(-4)+-8]
 15175  012D14  0EF7               	movlw	247
 15176  012D16  24E1               	addwf	fsr1l,w,c
 15177  012D18  6ED9               	movwf	fsr2l,c
 15178  012D1A  0EFF               	movlw	255
 15179  012D1C  20E2               	addwfc	fsr1h,w,c
 15180  012D1E  6EDA               	movwf	fsr2h,c
 15181                           
 15182                           ;stkvar	_b @ sp[(-4)+-4]
 15183  012D20  0EFB               	movlw	251
 15184  012D22  24E1               	addwf	fsr1l,w,c
 15185  012D24  6EE9               	movwf	fsr0l,c
 15186  012D26  0EFF               	movlw	255
 15187  012D28  20E2               	addwfc	fsr1h,w,c
 15188  012D2A  6EEA               	movwf	fsr0h,c
 15189  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15190                           
 15191                           ;stkvar	_grs @ sp[(-4)+0]
 15192                           ;stkvar	_a @ sp[(-4)+-8]
 15193  012D32  0EF7               	movlw	247
 15194  012D34  24E1               	addwf	fsr1l,w,c
 15195  012D36  6ED9               	movwf	fsr2l,c
 15196  012D38  0EFF               	movlw	255
 15197  012D3A  20E2               	addwfc	fsr1h,w,c
 15198  012D3C  6EDA               	movwf	fsr2h,c
 15199  012D3E  0EFC               	movlw	-4
 15200  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15201  012D46                     l6212:
 15202                           
 15203                           ;stkvar	_grs @ sp[(-4)+0]
 15204  012D46  0EFC               	movlw	-4
 15205  012D48  6AE3               	clrf	plusw1,c
 15206                           
 15207                           ;stkvar	_aexp @ sp[(-4)+2]
 15208  012D4A  0EFE               	movlw	-2
 15209  012D4C  50E3               	movf	plusw1,w,c
 15210  012D4E  6E40               	movwf	(btemp+10)^0,c
 15211  012D50  6A41               	clrf	(btemp+11)^0,c
 15212                           
 15213                           ;stkvar	_bexp @ sp[(-4)+1]
 15214  012D52  0EFD               	movlw	-3
 15215  012D54  50E3               	movf	plusw1,w,c
 15216  012D56  5E40               	subwf	(btemp+10)^0,f,c
 15217  012D58  0E00               	movlw	0
 15218  012D5A  5A41               	subwfb	(btemp+11)^0,f,c
 15219  012D5C  BE41               	btfsc	(btemp+11)^0,7,c
 15220  012D5E  D062               	goto	l6236
 15221  012D60  5041               	movf	(btemp+11)^0,w,c
 15222  012D62  E104               	bnz	u4750
 15223  012D64  0E1A               	movlw	26
 15224  012D66  5C40               	subwf	(btemp+10)^0,w,c
 15225  012D68  A0D8               	btfss	status,0,c
 15226  012D6A  D05C               	goto	l6236
 15227  012D6C                     u4750:
 15228                           
 15229                           ;stkvar	_b @ sp[(-4)+-4]
 15230  012D6C  0EF8               	movlw	-8
 15231  012D6E  50E3               	movf	plusw1,w,c
 15232  012D70  E10A               	bnz	u4761
 15233  012D72  0EF9               	movlw	-7
 15234  012D74  50E3               	movf	plusw1,w,c
 15235  012D76  E107               	bnz	u4761
 15236  012D78  0EFA               	movlw	-6
 15237  012D7A  50E3               	movf	plusw1,w,c
 15238  012D7C  E104               	bnz	u4761
 15239  012D7E  0EFB               	movlw	-5
 15240  012D80  50E3               	movf	plusw1,w,c
 15241  012D82  B4D8               	btfsc	status,2,c
 15242  012D84  D003               	goto	u4760
 15243  012D86                     u4761:
 15244  012D86  6A41               	clrf	(btemp+11)^0,c
 15245  012D88  2A41               	incf	(btemp+11)^0,f,c
 15246  012D8A  D001               	goto	u4778
 15247  012D8C                     u4760:
 15248  012D8C  6A41               	clrf	(btemp+11)^0,c
 15249  012D8E                     u4778:
 15250                           
 15251                           ;stkvar	_grs @ sp[(-4)+0]
 15252  012D8E  0EFC               	movlw	-4
 15253  012D90  0060  F107  FFE3   	movff	btemp+11,plusw1
 15254                           
 15255                           ;stkvar	_b @ sp[(-4)+-4]
 15256  012D96  0EF8               	movlw	-8
 15257  012D98  6AE3               	clrf	plusw1,c
 15258  012D9A  0EF9               	movlw	-7
 15259  012D9C  6AE3               	clrf	plusw1,c
 15260  012D9E  0EFA               	movlw	-6
 15261  012DA0  6AE3               	clrf	plusw1,c
 15262  012DA2  0EFB               	movlw	-5
 15263  012DA4  6AE3               	clrf	plusw1,c
 15264                           
 15265                           ;stkvar	_aexp @ sp[(-4)+2]
 15266                           ;stkvar	_bexp @ sp[(-4)+1]
 15267  012DA6  0EFE               	movlw	-2
 15268  012DA8  006F FF8C  F036    	movff	plusw1,btemp
 15269  012DAE  0EFD               	movlw	-3
 15270  012DB0  0060  F0DB  FFE3   	movff	btemp,plusw1
 15271  012DB6  D042               	goto	u4810
 15272  012DB8                     l6222:
 15273                           
 15274                           ;stkvar	_grs @ sp[(-4)+0]
 15275  012DB8  0EFC               	movlw	-4
 15276  012DBA  A0E3               	btfss	plusw1,0,c
 15277  012DBC  D00D               	goto	l6226
 15278                           
 15279                           ;stkvar	_grs @ sp[(-4)+0]
 15280  012DBE  0EFC               	movlw	-4
 15281  012DC0  006F FF8C  F041    	movff	plusw1,btemp+11
 15282  012DC6  90D8               	bcf	status,0,c
 15283  012DC8  3241               	rrcf	(btemp+11)^0,f,c
 15284  012DCA  0E01               	movlw	1
 15285  012DCC  1241               	iorwf	(btemp+11)^0,f,c
 15286                           
 15287                           ;stkvar	_grs @ sp[(-4)+0]
 15288  012DCE  0EFC               	movlw	-4
 15289  012DD0  0060  F107  FFE3   	movff	btemp+11,plusw1
 15290  012DD6  D009               	goto	l6228
 15291  012DD8                     l6226:
 15292                           
 15293                           ;stkvar	_grs @ sp[(-4)+0]
 15294  012DD8  50E1               	movf	fsr1l,w,c
 15295  012DDA  0FFC               	addlw	-4
 15296  012DDC  6ED9               	movwf	fsr2l,c
 15297  012DDE  50E2               	movf	fsr1h,w,c
 15298  012DE0  6EDA               	movwf	fsr2h,c
 15299  012DE2  0EFF               	movlw	255
 15300  012DE4  22DA               	addwfc	fsr2h,f,c
 15301  012DE6  90D8               	bcf	status,0,c
 15302  012DE8  32DF               	rrcf	indf2,f,c
 15303  012DEA                     l6228:
 15304                           
 15305                           ;stkvar	_b @ sp[(-4)+-4]
 15306  012DEA  0EF8               	movlw	-8
 15307  012DEC  A0E3               	btfss	plusw1,0,c
 15308  012DEE  D002               	goto	l6232
 15309                           
 15310                           ;stkvar	_grs @ sp[(-4)+0]
 15311  012DF0  0EFC               	movlw	-4
 15312  012DF2  8EE3               	bsf	plusw1,7,c
 15313  012DF4                     l6232:
 15314  012DF4  0E01               	movlw	1
 15315  012DF6  6E41               	movwf	(btemp+11)^0,c
 15316                           
 15317                           ;stkvar	_b @ sp[(-4)+-4]
 15318  012DF8  50E1               	movf	fsr1l,w,c
 15319  012DFA  0FF8               	addlw	-8
 15320  012DFC  6ED9               	movwf	fsr2l,c
 15321  012DFE  50E2               	movf	fsr1h,w,c
 15322  012E00  6EDA               	movwf	fsr2h,c
 15323  012E02  0EFF               	movlw	255
 15324  012E04  22DA               	addwfc	fsr2h,f,c
 15325  012E06  2841               	incf	(btemp+11)^0,w,c
 15326  012E08  52DE               	movf	postinc2,f,c
 15327  012E0A  D008               	goto	u4800
 15328  012E0C                     u4805:
 15329  012E0C  52DE               	movf	postinc2,f,c
 15330  012E0E  90D8               	bcf	status,0,c
 15331  012E10  BEDC               	btfsc	preinc2,7,c
 15332  012E12  80D8               	bsf	status,0,c
 15333  012E14  32DD               	rrcf	postdec2,f,c
 15334  012E16  32DD               	rrcf	postdec2,f,c
 15335  012E18  32DD               	rrcf	postdec2,f,c
 15336  012E1A  32DE               	rrcf	postinc2,f,c
 15337  012E1C                     u4800:
 15338  012E1C  2EE8               	decfsz	wreg,f,c
 15339  012E1E  D7F6               	goto	u4805
 15340                           
 15341                           ;stkvar	_bexp @ sp[(-4)+1]
 15342  012E20  0EFD               	movlw	-3
 15343  012E22  2AE3               	incf	plusw1,f,c
 15344  012E24                     l6236:
 15345                           
 15346                           ;stkvar	_aexp @ sp[(-4)+2]
 15347                           ;stkvar	_bexp @ sp[(-4)+1]
 15348  012E24  50E1               	movf	fsr1l,w,c
 15349  012E26  0FFD               	addlw	-3
 15350  012E28  6ED9               	movwf	fsr2l,c
 15351  012E2A  50E2               	movf	fsr1h,w,c
 15352  012E2C  6EDA               	movwf	fsr2h,c
 15353  012E2E  0EFF               	movlw	255
 15354  012E30  22DA               	addwfc	fsr2h,f,c
 15355  012E32  0EFE               	movlw	-2
 15356  012E34  50E3               	movf	plusw1,w,c
 15357  012E36  5CDE               	subwf	postinc2,w,c
 15358  012E38  A0D8               	btfss	status,0,c
 15359  012E3A  D7BE               	goto	l6222
 15360  012E3C                     u4810:
 15361                           
 15362                           ;stkvar	_signs @ sp[(-4)+3]
 15363  012E3C  0EFF               	movlw	-1
 15364  012E3E  BCE3               	btfsc	plusw1,6,c
 15365  012E40  D066               	goto	l6264
 15366                           
 15367                           ;stkvar	_bexp @ sp[(-4)+1]
 15368  012E42  0EFD               	movlw	-3
 15369  012E44  50E3               	movf	plusw1,w,c
 15370  012E46  B4D8               	btfsc	status,2,c
 15371  012E48  D0F2               	goto	u4910
 15372                           
 15373                           ;stkvar	_a @ sp[(-4)+-8]
 15374                           ;stkvar	_b @ sp[(-4)+-4]
 15375  012E4A  0EF8               	movlw	-8
 15376  012E4C  50E3               	movf	plusw1,w,c
 15377  012E4E  6E36               	movwf	btemp^0,c
 15378  012E50  0EF4               	movlw	-12
 15379  012E52  50E3               	movf	plusw1,w,c
 15380  012E54  2636               	addwf	btemp^0,f,c
 15381  012E56  0EF8               	movlw	-8
 15382  012E58  0060  F0DB  FFE3   	movff	btemp,plusw1
 15383  012E5E  0EF9               	movlw	-7
 15384  012E60  50E3               	movf	plusw1,w,c
 15385  012E62  6E36               	movwf	btemp^0,c
 15386  012E64  0EF5               	movlw	-11
 15387  012E66  50E3               	movf	plusw1,w,c
 15388  012E68  2236               	addwfc	btemp^0,f,c
 15389  012E6A  0EF9               	movlw	-7
 15390  012E6C  0060  F0DB  FFE3   	movff	btemp,plusw1
 15391  012E72  0EFA               	movlw	-6
 15392  012E74  50E3               	movf	plusw1,w,c
 15393  012E76  6E36               	movwf	btemp^0,c
 15394  012E78  0EF6               	movlw	-10
 15395  012E7A  50E3               	movf	plusw1,w,c
 15396  012E7C  2236               	addwfc	btemp^0,f,c
 15397  012E7E  0EFA               	movlw	-6
 15398  012E80  0060  F0DB  FFE3   	movff	btemp,plusw1
 15399  012E86  0EFB               	movlw	-5
 15400  012E88  50E3               	movf	plusw1,w,c
 15401  012E8A  6E36               	movwf	btemp^0,c
 15402  012E8C  0EF7               	movlw	-9
 15403  012E8E  50E3               	movf	plusw1,w,c
 15404  012E90  2236               	addwfc	btemp^0,f,c
 15405  012E92  0EFB               	movlw	-5
 15406  012E94  0060  F0DB  FFE3   	movff	btemp,plusw1
 15407                           
 15408                           ;stkvar	_b @ sp[(-4)+-4]
 15409  012E9A  0EFB               	movlw	-5
 15410  012E9C  A0E3               	btfss	plusw1,0,c
 15411  012E9E  D101               	goto	u4950
 15412                           
 15413                           ;stkvar	_grs @ sp[(-4)+0]
 15414  012EA0  0EFC               	movlw	-4
 15415  012EA2  A0E3               	btfss	plusw1,0,c
 15416  012EA4  D00D               	goto	l6254
 15417                           
 15418                           ;stkvar	_grs @ sp[(-4)+0]
 15419  012EA6  0EFC               	movlw	-4
 15420  012EA8  006F FF8C  F041    	movff	plusw1,btemp+11
 15421  012EAE  90D8               	bcf	status,0,c
 15422  012EB0  3241               	rrcf	(btemp+11)^0,f,c
 15423  012EB2  0E01               	movlw	1
 15424  012EB4  1241               	iorwf	(btemp+11)^0,f,c
 15425                           
 15426                           ;stkvar	_grs @ sp[(-4)+0]
 15427  012EB6  0EFC               	movlw	-4
 15428  012EB8  0060  F107  FFE3   	movff	btemp+11,plusw1
 15429  012EBE  D009               	goto	l6256
 15430  012EC0                     l6254:
 15431                           
 15432                           ;stkvar	_grs @ sp[(-4)+0]
 15433  012EC0  50E1               	movf	fsr1l,w,c
 15434  012EC2  0FFC               	addlw	-4
 15435  012EC4  6ED9               	movwf	fsr2l,c
 15436  012EC6  50E2               	movf	fsr1h,w,c
 15437  012EC8  6EDA               	movwf	fsr2h,c
 15438  012ECA  0EFF               	movlw	255
 15439  012ECC  22DA               	addwfc	fsr2h,f,c
 15440  012ECE  90D8               	bcf	status,0,c
 15441  012ED0  32DF               	rrcf	indf2,f,c
 15442  012ED2                     l6256:
 15443                           
 15444                           ;stkvar	_b @ sp[(-4)+-4]
 15445  012ED2  0EF8               	movlw	-8
 15446  012ED4  A0E3               	btfss	plusw1,0,c
 15447  012ED6  D002               	goto	l6260
 15448                           
 15449                           ;stkvar	_grs @ sp[(-4)+0]
 15450  012ED8  0EFC               	movlw	-4
 15451  012EDA  8EE3               	bsf	plusw1,7,c
 15452  012EDC                     l6260:
 15453  012EDC  0E01               	movlw	1
 15454  012EDE  6E41               	movwf	(btemp+11)^0,c
 15455                           
 15456                           ;stkvar	_b @ sp[(-4)+-4]
 15457  012EE0  50E1               	movf	fsr1l,w,c
 15458  012EE2  0FF8               	addlw	-8
 15459  012EE4  6ED9               	movwf	fsr2l,c
 15460  012EE6  50E2               	movf	fsr1h,w,c
 15461  012EE8  6EDA               	movwf	fsr2h,c
 15462  012EEA  0EFF               	movlw	255
 15463  012EEC  22DA               	addwfc	fsr2h,f,c
 15464  012EEE  2841               	incf	(btemp+11)^0,w,c
 15465  012EF0  52DE               	movf	postinc2,f,c
 15466  012EF2  D008               	goto	u4870
 15467  012EF4                     u4875:
 15468  012EF4  52DE               	movf	postinc2,f,c
 15469  012EF6  90D8               	bcf	status,0,c
 15470  012EF8  BEDC               	btfsc	preinc2,7,c
 15471  012EFA  80D8               	bsf	status,0,c
 15472  012EFC  32DD               	rrcf	postdec2,f,c
 15473  012EFE  32DD               	rrcf	postdec2,f,c
 15474  012F00  32DD               	rrcf	postdec2,f,c
 15475  012F02  32DE               	rrcf	postinc2,f,c
 15476  012F04                     u4870:
 15477  012F04  2EE8               	decfsz	wreg,f,c
 15478  012F06  D7F6               	goto	u4875
 15479                           
 15480                           ;stkvar	_bexp @ sp[(-4)+1]
 15481  012F08  0EFD               	movlw	-3
 15482  012F0A  2AE3               	incf	plusw1,f,c
 15483  012F0C  D0CA               	goto	u4950
 15484  012F0E                     l6264:
 15485                           
 15486                           ;stkvar	_a @ sp[(-4)+-8]
 15487                           ;stkvar	_b @ sp[(-4)+-4]
 15488  012F0E  50E1               	movf	fsr1l,w,c
 15489  012F10  0FF8               	addlw	-8
 15490  012F12  6ED9               	movwf	fsr2l,c
 15491  012F14  50E2               	movf	fsr1h,w,c
 15492  012F16  6EDA               	movwf	fsr2h,c
 15493  012F18  0EFF               	movlw	255
 15494  012F1A  22DA               	addwfc	fsr2h,f,c
 15495  012F1C  0EF4               	movlw	-12
 15496  012F1E  50E3               	movf	plusw1,w,c
 15497  012F20  5CDE               	subwf	postinc2,w,c
 15498  012F22  0EF5               	movlw	-11
 15499  012F24  50E3               	movf	plusw1,w,c
 15500  012F26  58DE               	subwfb	postinc2,w,c
 15501  012F28  0EF6               	movlw	-10
 15502  012F2A  50E3               	movf	plusw1,w,c
 15503  012F2C  58DE               	subwfb	postinc2,w,c
 15504  012F2E  50DE               	movf	postinc2,w,c
 15505  012F30  0A80               	xorlw	128
 15506  012F32  6E36               	movwf	btemp^0,c
 15507  012F34  0EF7               	movlw	-9
 15508  012F36  50E3               	movf	plusw1,w,c
 15509  012F38  0A80               	xorlw	128
 15510  012F3A  5836               	subwfb	btemp^0,w,c
 15511  012F3C  B0D8               	btfsc	status,0,c
 15512  012F3E  D053               	goto	l6276
 15513                           
 15514                           ;stkvar	_b @ sp[(-4)+-4]
 15515                           ;stkvar	_a @ sp[(-4)+-8]
 15516  012F40  0EF4               	movlw	-12
 15517  012F42  006F FF8C  F03E    	movff	plusw1,btemp+8
 15518  012F48  0EF5               	movlw	-11
 15519  012F4A  006F FF8C  F03F    	movff	plusw1,btemp+9
 15520  012F50  0EF6               	movlw	-10
 15521  012F52  006F FF8C  F040    	movff	plusw1,btemp+10
 15522  012F58  0EF7               	movlw	-9
 15523  012F5A  006F FF8C  F041    	movff	plusw1,btemp+11
 15524  012F60  0EF8               	movlw	-8
 15525  012F62  50E3               	movf	plusw1,w,c
 15526  012F64  5E3E               	subwf	(btemp+8)^0,f,c
 15527  012F66  0EF9               	movlw	-7
 15528  012F68  50E3               	movf	plusw1,w,c
 15529  012F6A  5A3F               	subwfb	(btemp+9)^0,f,c
 15530  012F6C  0EFA               	movlw	-6
 15531  012F6E  50E3               	movf	plusw1,w,c
 15532  012F70  5A40               	subwfb	(btemp+10)^0,f,c
 15533  012F72  0EFB               	movlw	-5
 15534  012F74  50E3               	movf	plusw1,w,c
 15535  012F76  5A41               	subwfb	(btemp+11)^0,f,c
 15536  012F78  0EFF               	movlw	255
 15537  012F7A  243E               	addwf	(btemp+8)^0,w,c
 15538  012F7C  6E3A               	movwf	(btemp+4)^0,c
 15539  012F7E  0EFF               	movlw	255
 15540  012F80  203F               	addwfc	(btemp+9)^0,w,c
 15541  012F82  6E3B               	movwf	(btemp+5)^0,c
 15542  012F84  0EFF               	movlw	255
 15543  012F86  2040               	addwfc	(btemp+10)^0,w,c
 15544  012F88  6E3C               	movwf	(btemp+6)^0,c
 15545  012F8A  0EFF               	movlw	255
 15546  012F8C  2041               	addwfc	(btemp+11)^0,w,c
 15547  012F8E  6E3D               	movwf	(btemp+7)^0,c
 15548                           
 15549                           ;stkvar	_b @ sp[(-4)+-4]
 15550  012F90  0EF8               	movlw	-8
 15551  012F92  0060  F0EB  FFE3   	movff	btemp+4,plusw1
 15552  012F98  0EF9               	movlw	-7
 15553  012F9A  0060  F0EF  FFE3   	movff	btemp+5,plusw1
 15554  012FA0  0EFA               	movlw	-6
 15555  012FA2  0060  F0F3  FFE3   	movff	btemp+6,plusw1
 15556  012FA8  0EFB               	movlw	-5
 15557  012FAA  0060  F0F7  FFE3   	movff	btemp+7,plusw1
 15558                           
 15559                           ;stkvar	_signs @ sp[(-4)+3]
 15560  012FB0  0EFF               	movlw	-1
 15561  012FB2  7EE3               	btg	plusw1,7,c
 15562                           
 15563                           ;stkvar	_grs @ sp[(-4)+0]
 15564  012FB4  0EFC               	movlw	-4
 15565  012FB6  50E3               	movf	plusw1,w,c
 15566  012FB8  0800               	sublw	0
 15567  012FBA  6E41               	movwf	(btemp+11)^0,c
 15568                           
 15569                           ;stkvar	_grs @ sp[(-4)+0]
 15570  012FBC  0EFC               	movlw	-4
 15571  012FBE  0060  F107  FFE3   	movff	btemp+11,plusw1
 15572                           
 15573                           ;stkvar	_grs @ sp[(-4)+0]
 15574  012FC4  0EFC               	movlw	-4
 15575  012FC6  50E3               	movf	plusw1,w,c
 15576  012FC8  A4D8               	btfss	status,2,c
 15577  012FCA  D020               	goto	l6278
 15578                           
 15579                           ;stkvar	_b @ sp[(-4)+-4]
 15580  012FCC  50E1               	movf	fsr1l,w,c
 15581  012FCE  0FF8               	addlw	-8
 15582  012FD0  6ED9               	movwf	fsr2l,c
 15583  012FD2  50E2               	movf	fsr1h,w,c
 15584  012FD4  6EDA               	movwf	fsr2h,c
 15585  012FD6  0EFF               	movlw	255
 15586  012FD8  22DA               	addwfc	fsr2h,f,c
 15587  012FDA  2ADE               	incf	postinc2,f,c
 15588  012FDC  0E00               	movlw	0
 15589  012FDE  22DE               	addwfc	postinc2,f,c
 15590  012FE0  22DE               	addwfc	postinc2,f,c
 15591  012FE2  22DE               	addwfc	postinc2,f,c
 15592  012FE4  D013               	goto	l6278
 15593  012FE6                     l6276:
 15594                           
 15595                           ;stkvar	_a @ sp[(-4)+-8]
 15596                           ;stkvar	_b @ sp[(-4)+-4]
 15597  012FE6  50E1               	movf	fsr1l,w,c
 15598  012FE8  0FF8               	addlw	-8
 15599  012FEA  6ED9               	movwf	fsr2l,c
 15600  012FEC  50E2               	movf	fsr1h,w,c
 15601  012FEE  6EDA               	movwf	fsr2h,c
 15602  012FF0  0EFF               	movlw	255
 15603  012FF2  22DA               	addwfc	fsr2h,f,c
 15604  012FF4  0EF4               	movlw	-12
 15605  012FF6  50E3               	movf	plusw1,w,c
 15606  012FF8  5EDE               	subwf	postinc2,f,c
 15607  012FFA  0EF5               	movlw	-11
 15608  012FFC  50E3               	movf	plusw1,w,c
 15609  012FFE  5ADE               	subwfb	postinc2,f,c
 15610  013000  0EF6               	movlw	-10
 15611  013002  50E3               	movf	plusw1,w,c
 15612  013004  5ADE               	subwfb	postinc2,f,c
 15613  013006  0EF7               	movlw	-9
 15614  013008  50E3               	movf	plusw1,w,c
 15615  01300A  5ADE               	subwfb	postinc2,f,c
 15616  01300C                     l6278:
 15617                           
 15618                           ;stkvar	_b @ sp[(-4)+-4]
 15619  01300C  0EF8               	movlw	-8
 15620  01300E  50E3               	movf	plusw1,w,c
 15621  013010  E145               	bnz	l6300
 15622  013012  0EF9               	movlw	-7
 15623  013014  50E3               	movf	plusw1,w,c
 15624  013016  E142               	bnz	l6300
 15625  013018  0EFA               	movlw	-6
 15626  01301A  50E3               	movf	plusw1,w,c
 15627  01301C  E13F               	bnz	l6300
 15628  01301E  0EFB               	movlw	-5
 15629  013020  50E3               	movf	plusw1,w,c
 15630  013022  A4D8               	btfss	status,2,c
 15631  013024  D03B               	goto	l6300
 15632                           
 15633                           ;stkvar	_grs @ sp[(-4)+0]
 15634  013026  0EFC               	movlw	-4
 15635  013028  50E3               	movf	plusw1,w,c
 15636  01302A  A4D8               	btfss	status,2,c
 15637  01302C  D037               	goto	l6300
 15638  01302E                     u4910:
 15639  01302E  0E00               	movlw	0
 15640  013030  6E36               	movwf	btemp^0,c
 15641  013032  0E00               	movlw	0
 15642  013034  6E37               	movwf	(btemp+1)^0,c
 15643  013036  0E00               	movlw	0
 15644  013038  6E38               	movwf	(btemp+2)^0,c
 15645  01303A  0E00               	movlw	0
 15646  01303C  6E39               	movwf	(btemp+3)^0,c
 15647  01303E  D0C6               	goto	l2550
 15648  013040                     l6286:
 15649                           
 15650                           ;stkvar	_b @ sp[(-4)+-4]
 15651  013040  90D8               	bcf	status,0,c
 15652  013042  0EF8               	movlw	-8
 15653  013044  36E3               	rlcf	plusw1,f,c
 15654  013046  0EF9               	movlw	-7
 15655  013048  36E3               	rlcf	plusw1,f,c
 15656  01304A  0EFA               	movlw	-6
 15657  01304C  36E3               	rlcf	plusw1,f,c
 15658  01304E  0EFB               	movlw	-5
 15659  013050  36E3               	rlcf	plusw1,f,c
 15660                           
 15661                           ;stkvar	_grs @ sp[(-4)+0]
 15662  013052  0EFC               	movlw	-4
 15663  013054  AEE3               	btfss	plusw1,7,c
 15664  013056  D002               	goto	l2562
 15665                           
 15666                           ;stkvar	_b @ sp[(-4)+-4]
 15667  013058  0EF8               	movlw	-8
 15668  01305A  80E3               	bsf	plusw1,0,c
 15669  01305C                     l2562:
 15670                           
 15671                           ;stkvar	_grs @ sp[(-4)+0]
 15672  01305C  0EFC               	movlw	-4
 15673  01305E  A0E3               	btfss	plusw1,0,c
 15674  013060  D00E               	goto	l6294
 15675                           
 15676                           ;stkvar	_grs @ sp[(-4)+0]
 15677  013062  0EFC               	movlw	-4
 15678  013064  006F FF8C  F041    	movff	plusw1,btemp+11
 15679  01306A  90D8               	bcf	status,0,c
 15680  01306C  3441               	rlcf	(btemp+11)^0,w,c
 15681  01306E  6E40               	movwf	(btemp+10)^0,c
 15682  013070  0E01               	movlw	1
 15683  013072  1240               	iorwf	(btemp+10)^0,f,c
 15684                           
 15685                           ;stkvar	_grs @ sp[(-4)+0]
 15686  013074  0EFC               	movlw	-4
 15687  013076  0060  F103  FFE3   	movff	btemp+10,plusw1
 15688  01307C  D009               	goto	l6296
 15689  01307E                     l6294:
 15690                           
 15691                           ;stkvar	_grs @ sp[(-4)+0]
 15692  01307E  50E1               	movf	fsr1l,w,c
 15693  013080  0FFC               	addlw	-4
 15694  013082  6ED9               	movwf	fsr2l,c
 15695  013084  50E2               	movf	fsr1h,w,c
 15696  013086  6EDA               	movwf	fsr2h,c
 15697  013088  0EFF               	movlw	255
 15698  01308A  22DA               	addwfc	fsr2h,f,c
 15699  01308C  90D8               	bcf	status,0,c
 15700  01308E  36DF               	rlcf	indf2,f,c
 15701  013090                     l6296:
 15702                           
 15703                           ;stkvar	_bexp @ sp[(-4)+1]
 15704  013090  0EFD               	movlw	-3
 15705  013092  50E3               	movf	plusw1,w,c
 15706  013094  B4D8               	btfsc	status,2,c
 15707  013096  D002               	goto	l6300
 15708                           
 15709                           ;stkvar	_bexp @ sp[(-4)+1]
 15710  013098  0EFD               	movlw	-3
 15711  01309A  06E3               	decf	plusw1,f,c
 15712  01309C                     l6300:
 15713                           
 15714                           ;stkvar	_b @ sp[(-4)+-4]
 15715  01309C  0EFA               	movlw	-6
 15716  01309E  AEE3               	btfss	plusw1,7,c
 15717  0130A0  D7CF               	goto	l6286
 15718  0130A2                     u4950:
 15719                           
 15720                           ;stkvar	_aexp @ sp[(-4)+2]
 15721  0130A2  0EFE               	movlw	-2
 15722  0130A4  6AE3               	clrf	plusw1,c
 15723                           
 15724                           ;stkvar	_grs @ sp[(-4)+0]
 15725  0130A6  0EFC               	movlw	-4
 15726  0130A8  AEE3               	btfss	plusw1,7,c
 15727  0130AA  D00F               	goto	l6314
 15728                           
 15729                           ;stkvar	_grs @ sp[(-4)+0]
 15730  0130AC  0EFC               	movlw	-4
 15731  0130AE  006F FF8C  F041    	movff	plusw1,btemp+11
 15732  0130B4  0E7F               	movlw	127
 15733  0130B6  1641               	andwf	(btemp+11)^0,f,c
 15734  0130B8  B4D8               	btfsc	status,2,c
 15735  0130BA  D004               	goto	l6310
 15736  0130BC                     u4970:
 15737                           
 15738                           ;stkvar	_aexp @ sp[(-4)+2]
 15739  0130BC  0EFE               	movlw	-2
 15740  0130BE  6AE3               	clrf	plusw1,c
 15741  0130C0  2AE3               	incf	plusw1,f,c
 15742  0130C2  D003               	goto	l6314
 15743  0130C4                     l6310:
 15744                           
 15745                           ;stkvar	_b @ sp[(-4)+-4]
 15746  0130C4  0EF8               	movlw	-8
 15747  0130C6  B0E3               	btfsc	plusw1,0,c
 15748  0130C8  D7F9               	goto	u4970
 15749  0130CA                     l6314:
 15750                           
 15751                           ;stkvar	_aexp @ sp[(-4)+2]
 15752  0130CA  0EFE               	movlw	-2
 15753  0130CC  50E3               	movf	plusw1,w,c
 15754  0130CE  B4D8               	btfsc	status,2,c
 15755  0130D0  D02B               	goto	l6326
 15756                           
 15757                           ;stkvar	_b @ sp[(-4)+-4]
 15758  0130D2  50E1               	movf	fsr1l,w,c
 15759  0130D4  0FF8               	addlw	-8
 15760  0130D6  6ED9               	movwf	fsr2l,c
 15761  0130D8  50E2               	movf	fsr1h,w,c
 15762  0130DA  6EDA               	movwf	fsr2h,c
 15763  0130DC  0EFF               	movlw	255
 15764  0130DE  22DA               	addwfc	fsr2h,f,c
 15765  0130E0  2ADE               	incf	postinc2,f,c
 15766  0130E2  0E00               	movlw	0
 15767  0130E4  22DE               	addwfc	postinc2,f,c
 15768  0130E6  22DE               	addwfc	postinc2,f,c
 15769  0130E8  22DE               	addwfc	postinc2,f,c
 15770                           
 15771                           ;stkvar	_b @ sp[(-4)+-4]
 15772  0130EA  0EFB               	movlw	-5
 15773  0130EC  A0E3               	btfss	plusw1,0,c
 15774  0130EE  D01C               	goto	l6326
 15775  0130F0  0E01               	movlw	1
 15776  0130F2  6E41               	movwf	(btemp+11)^0,c
 15777                           
 15778                           ;stkvar	_b @ sp[(-4)+-4]
 15779  0130F4  50E1               	movf	fsr1l,w,c
 15780  0130F6  0FF8               	addlw	-8
 15781  0130F8  6ED9               	movwf	fsr2l,c
 15782  0130FA  50E2               	movf	fsr1h,w,c
 15783  0130FC  6EDA               	movwf	fsr2h,c
 15784  0130FE  0EFF               	movlw	255
 15785  013100  22DA               	addwfc	fsr2h,f,c
 15786  013102  2841               	incf	(btemp+11)^0,w,c
 15787  013104  52DE               	movf	postinc2,f,c
 15788  013106  D008               	goto	u5010
 15789  013108                     u5015:
 15790  013108  52DE               	movf	postinc2,f,c
 15791  01310A  90D8               	bcf	status,0,c
 15792  01310C  BEDC               	btfsc	preinc2,7,c
 15793  01310E  80D8               	bsf	status,0,c
 15794  013110  32DD               	rrcf	postdec2,f,c
 15795  013112  32DD               	rrcf	postdec2,f,c
 15796  013114  32DD               	rrcf	postdec2,f,c
 15797  013116  32DE               	rrcf	postinc2,f,c
 15798  013118                     u5010:
 15799  013118  2EE8               	decfsz	wreg,f,c
 15800  01311A  D7F6               	goto	u5015
 15801                           
 15802                           ;stkvar	_bexp @ sp[(-4)+1]
 15803  01311C  0EFD               	movlw	-3
 15804  01311E  28E3               	incf	plusw1,w,c
 15805  013120  B4D8               	btfsc	status,2,c
 15806  013122  D002               	goto	l6326
 15807                           
 15808                           ;stkvar	_bexp @ sp[(-4)+1]
 15809  013124  0EFD               	movlw	-3
 15810  013126  2AE3               	incf	plusw1,f,c
 15811  013128                     l6326:
 15812                           
 15813                           ;stkvar	_bexp @ sp[(-4)+1]
 15814  013128  0EFD               	movlw	-3
 15815  01312A  28E3               	incf	plusw1,w,c
 15816  01312C  B4D8               	btfsc	status,2,c
 15817  01312E  D004               	goto	u5040
 15818                           
 15819                           ;stkvar	_bexp @ sp[(-4)+1]
 15820  013130  0EFD               	movlw	-3
 15821  013132  50E3               	movf	plusw1,w,c
 15822  013134  A4D8               	btfss	status,2,c
 15823  013136  D00E               	goto	l6336
 15824  013138                     u5040:
 15825                           
 15826                           ;stkvar	_b @ sp[(-4)+-4]
 15827  013138  0EF8               	movlw	-8
 15828  01313A  6AE3               	clrf	plusw1,c
 15829  01313C  0EF9               	movlw	-7
 15830  01313E  6AE3               	clrf	plusw1,c
 15831  013140  0EFA               	movlw	-6
 15832  013142  6AE3               	clrf	plusw1,c
 15833  013144  0EFB               	movlw	-5
 15834  013146  6AE3               	clrf	plusw1,c
 15835                           
 15836                           ;stkvar	_bexp @ sp[(-4)+1]
 15837  013148  0EFD               	movlw	-3
 15838  01314A  50E3               	movf	plusw1,w,c
 15839  01314C  A4D8               	btfss	status,2,c
 15840  01314E  D002               	goto	l6336
 15841                           
 15842                           ;stkvar	_signs @ sp[(-4)+3]
 15843  013150  0EFF               	movlw	-1
 15844  013152  6AE3               	clrf	plusw1,c
 15845  013154                     l6336:
 15846                           
 15847                           ;stkvar	_bexp @ sp[(-4)+1]
 15848  013154  0EFD               	movlw	-3
 15849  013156  A0E3               	btfss	plusw1,0,c
 15850  013158  D009               	goto	l6340
 15851                           
 15852                           ;stkvar	_b @ sp[(-4)+-4]
 15853  01315A  0EFA               	movlw	250
 15854  01315C  24E1               	addwf	fsr1l,w,c
 15855  01315E  6ED9               	movwf	fsr2l,c
 15856  013160  0EFF               	movlw	255
 15857  013162  20E2               	addwfc	fsr1h,w,c
 15858  013164  6EDA               	movwf	fsr2h,c
 15859  013166  0E00               	movlw	0
 15860  013168  8EDB               	bsf	plusw2,7,c
 15861  01316A  D008               	goto	l6342
 15862  01316C                     l6340:
 15863                           
 15864                           ;stkvar	_b @ sp[(-4)+-4]
 15865  01316C  0EFA               	movlw	250
 15866  01316E  24E1               	addwf	fsr1l,w,c
 15867  013170  6ED9               	movwf	fsr2l,c
 15868  013172  0EFF               	movlw	255
 15869  013174  20E2               	addwfc	fsr1h,w,c
 15870  013176  6EDA               	movwf	fsr2h,c
 15871  013178  0E7F               	movlw	127
 15872  01317A  16DF               	andwf	indf2,f,c
 15873  01317C                     l6342:
 15874                           
 15875                           ;stkvar	_b @ sp[(-4)+-4]
 15876  01317C  0EFB               	movlw	251
 15877  01317E  24E1               	addwf	fsr1l,w,c
 15878  013180  6ED9               	movwf	fsr2l,c
 15879  013182  0EFF               	movlw	255
 15880  013184  20E2               	addwfc	fsr1h,w,c
 15881  013186  6EDA               	movwf	fsr2h,c
 15882                           
 15883                           ;stkvar	_bexp @ sp[(-4)+1]
 15884  013188  0EFD               	movlw	-3
 15885  01318A  006F FF8C  F041    	movff	plusw1,btemp+11
 15886  013190  90D8               	bcf	status,0,c
 15887  013192  3041               	rrcf	(btemp+11)^0,w,c
 15888  013194  6EDF               	movwf	indf2,c
 15889                           
 15890                           ;stkvar	_signs @ sp[(-4)+3]
 15891  013196  0EFF               	movlw	-1
 15892  013198  AEE3               	btfss	plusw1,7,c
 15893  01319A  D008               	goto	l6348
 15894                           
 15895                           ;stkvar	_b @ sp[(-4)+-4]
 15896  01319C  0EFB               	movlw	251
 15897  01319E  24E1               	addwf	fsr1l,w,c
 15898  0131A0  6ED9               	movwf	fsr2l,c
 15899  0131A2  0EFF               	movlw	255
 15900  0131A4  20E2               	addwfc	fsr1h,w,c
 15901  0131A6  6EDA               	movwf	fsr2h,c
 15902  0131A8  0E00               	movlw	0
 15903  0131AA  8EDB               	bsf	plusw2,7,c
 15904  0131AC                     l6348:
 15905                           
 15906                           ;stkvar	_b @ sp[(-4)+-4]
 15907  0131AC  0EF8               	movlw	-8
 15908  0131AE  006F FF8C  F036    	movff	plusw1,btemp
 15909  0131B4  0EF9               	movlw	-7
 15910  0131B6  006F FF8C  F037    	movff	plusw1,btemp+1
 15911  0131BC  0EFA               	movlw	-6
 15912  0131BE  006F FF8C  F038    	movff	plusw1,btemp+2
 15913  0131C4  0EFB               	movlw	-5
 15914  0131C6  006F FF8C  F039    	movff	plusw1,btemp+3
 15915  0131CC                     l2550:
 15916                           
 15917                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15918  0131CC  0EF4               	movlw	244
 15919  0131CE  26E1               	addwf	fsr1l,f,c
 15920  0131D0  0EFF               	movlw	255
 15921  0131D2  22E2               	addwfc	fsr1h,f,c
 15922  0131D4  0012               	return		;funcret
 15923  0131D6                     __end_of___fladd:
 15924                           	opt callstack 0
 15925                           
 15926 ;; *************** function ___flneg *****************
 15927 ;; Defined at:
 15928 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;  f1              4  [STACK] unsigned char 
 15931 ;; Auto vars:     Size  Location     Type
 15932 ;;		None
 15933 ;; Return value:  Size  Location     Type
 15934 ;;                  4  [STACK] unsigned char 
 15935 ;; Registers used:
 15936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15937 ;; Tracked objects:
 15938 ;;		On entry : 0/0
 15939 ;;		On exit  : 0/0
 15940 ;;		Unchanged: 0/0
 15941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15946 ;;Total ram usage:        0 bytes
 15947 ;; Hardware stack levels used:    1
 15948 ;; Hardware stack levels required when called:    6
 15949 ;; This function calls:
 15950 ;;		Nothing
 15951 ;; This function is called by:
 15952 ;;		_efgtoa
 15953 ;; This function uses a reentrant model
 15954 ;;
 15955                           
 15956                           	psect	text55
 15957  0183B8                     __ptext55:
 15958                           	opt callstack 0
 15959  0183B8                     ___flneg:
 15960                           	opt callstack 17
 15961                           
 15962                           ;stkvar	_f1 @ sp[(0)+-4]
 15963                           
 15964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15965                           ;incstack = 0
 15966  0183B8  0EFC               	movlw	-4
 15967  0183BA  50E3               	movf	plusw1,w,c
 15968  0183BC  E10A               	bnz	u6350
 15969  0183BE  0EFD               	movlw	-3
 15970  0183C0  50E3               	movf	plusw1,w,c
 15971  0183C2  E107               	bnz	u6350
 15972  0183C4  0EFE               	movlw	-2
 15973  0183C6  50E3               	movf	plusw1,w,c
 15974  0183C8  E104               	bnz	u6350
 15975  0183CA  0EFF               	movlw	-1
 15976  0183CC  50E3               	movf	plusw1,w,c
 15977  0183CE  B4D8               	btfsc	status,2,c
 15978  0183D0  D002               	goto	l7016
 15979  0183D2                     u6350:
 15980                           
 15981                           ;stkvar	_f1 @ sp[(0)+-4]
 15982  0183D2  0EFF               	movlw	-1
 15983  0183D4  7EE3               	btg	plusw1,7,c
 15984  0183D6                     l7016:
 15985                           
 15986                           ;stkvar	_f1 @ sp[(0)+-4]
 15987  0183D6  0EFC               	movlw	-4
 15988  0183D8  006F FF8C  F036    	movff	plusw1,btemp
 15989  0183DE  0EFD               	movlw	-3
 15990  0183E0  006F FF8C  F037    	movff	plusw1,btemp+1
 15991  0183E6  0EFE               	movlw	-2
 15992  0183E8  006F FF8C  F038    	movff	plusw1,btemp+2
 15993  0183EE  0EFF               	movlw	-1
 15994  0183F0  006F FF8C  F039    	movff	plusw1,btemp+3
 15995                           
 15996                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15997  0183F6  52E5               	movf	postdec1,f,c
 15998  0183F8  52E5               	movf	postdec1,f,c
 15999  0183FA  52E5               	movf	postdec1,f,c
 16000  0183FC  52E5               	movf	postdec1,f,c
 16001  0183FE  0012               	return		;funcret
 16002  018400                     __end_of___flneg:
 16003                           	opt callstack 0
 16004                           
 16005 ;; *************** function ___flmul *****************
 16006 ;; Defined at:
 16007 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;  b               4  [STACK] unsigned char 
 16010 ;;  a               4  [STACK] unsigned char 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;  prod            4  [STACK] struct .
 16013 ;;  grs             4  [STACK] unsigned long 
 16014 ;;  temp            2  [STACK] struct .
 16015 ;;  bexp            1  [STACK] unsigned char 
 16016 ;;  aexp            1  [STACK] unsigned char 
 16017 ;;  sign            1  [STACK] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  4  [STACK] unsigned char 
 16020 ;; Registers used:
 16021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 16022 ;; Tracked objects:
 16023 ;;		On entry : 0/0
 16024 ;;		On exit  : 0/0
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16031 ;;Total ram usage:        0 bytes
 16032 ;; Hardware stack levels used:    1
 16033 ;; Hardware stack levels required when called:    6
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_conv_raw_result
 16038 ;;		_lp_filter
 16039 ;;		_efgtoa
 16040 ;; This function uses a reentrant model
 16041 ;;
 16042                           
 16043                           	psect	text56
 16044  0121F0                     __ptext56:
 16045                           	opt callstack 0
 16046  0121F0                     ___flmul:
 16047                           	opt callstack 0
 16048                           
 16049                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16050  0121F0  0E0D               	movlw	13
 16051  0121F2  26E1               	addwf	fsr1l,f,c
 16052  0121F4  0E00               	movlw	0
 16053  0121F6  22E2               	addwfc	fsr1h,f,c
 16054                           
 16055                           ;stkvar	_b @ sp[(-13)+-4]
 16056                           
 16057                           ;incstack = 0
 16058  0121F8  0EF2               	movlw	242
 16059  0121FA  24E1               	addwf	fsr1l,w,c
 16060  0121FC  6ED9               	movwf	fsr2l,c
 16061  0121FE  0EFF               	movlw	255
 16062  012200  20E2               	addwfc	fsr1h,w,c
 16063  012202  6EDA               	movwf	fsr2h,c
 16064  012204  50DF               	movf	indf2,w,c
 16065  012206  6E41               	movwf	(btemp+11)^0,c
 16066  012208  0E80               	movlw	128
 16067  01220A  1641               	andwf	(btemp+11)^0,f,c
 16068                           
 16069                           ;stkvar	_sign @ sp[(-13)+12]
 16070  01220C  0EFF               	movlw	-1
 16071  01220E  0060  F107  FFE3   	movff	btemp+11,plusw1
 16072                           
 16073                           ;stkvar	_b @ sp[(-13)+-4]
 16074  012214  0EF2               	movlw	242
 16075  012216  24E1               	addwf	fsr1l,w,c
 16076  012218  6ED9               	movwf	fsr2l,c
 16077  01221A  0EFF               	movlw	255
 16078  01221C  20E2               	addwfc	fsr1h,w,c
 16079  01221E  6EDA               	movwf	fsr2h,c
 16080  012220  50DF               	movf	indf2,w,c
 16081  012222  6E41               	movwf	(btemp+11)^0,c
 16082  012224  90D8               	bcf	status,0,c
 16083  012226  3441               	rlcf	(btemp+11)^0,w,c
 16084  012228  6E40               	movwf	(btemp+10)^0,c
 16085                           
 16086                           ;stkvar	_bexp @ sp[(-13)+10]
 16087  01222A  0EFD               	movlw	-3
 16088  01222C  0060  F103  FFE3   	movff	btemp+10,plusw1
 16089                           
 16090                           ;stkvar	_b @ sp[(-13)+-4]
 16091  012232  0EF1               	movlw	241
 16092  012234  24E1               	addwf	fsr1l,w,c
 16093  012236  6ED9               	movwf	fsr2l,c
 16094  012238  0EFF               	movlw	255
 16095  01223A  20E2               	addwfc	fsr1h,w,c
 16096  01223C  6EDA               	movwf	fsr2h,c
 16097  01223E  AEDF               	btfss	indf2,7,c
 16098  012240  D002               	goto	l6732
 16099                           
 16100                           ;stkvar	_bexp @ sp[(-13)+10]
 16101  012242  0EFD               	movlw	-3
 16102  012244  80E3               	bsf	plusw1,0,c
 16103  012246                     l6732:
 16104                           
 16105                           ;stkvar	_bexp @ sp[(-13)+10]
 16106  012246  0EFD               	movlw	-3
 16107  012248  50E3               	movf	plusw1,w,c
 16108  01224A  B4D8               	btfsc	status,2,c
 16109  01224C  D01F               	goto	l6740
 16110                           
 16111                           ;stkvar	_bexp @ sp[(-13)+10]
 16112  01224E  0EFD               	movlw	-3
 16113  012250  28E3               	incf	plusw1,w,c
 16114  012252  A4D8               	btfss	status,2,c
 16115  012254  D018               	goto	l6738
 16116  012256  0E00               	movlw	0
 16117  012258  6E3E               	movwf	(btemp+8)^0,c
 16118  01225A  0E00               	movlw	0
 16119  01225C  6E3F               	movwf	(btemp+9)^0,c
 16120  01225E  0E00               	movlw	0
 16121  012260  6E40               	movwf	(btemp+10)^0,c
 16122  012262  0E00               	movlw	0
 16123  012264  6E41               	movwf	(btemp+11)^0,c
 16124                           
 16125                           ;stkvar	_b @ sp[(-13)+-4]
 16126  012266  0EEF               	movlw	-17
 16127  012268  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 16128  01226E  0EF0               	movlw	-16
 16129  012270  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 16130  012276  0EF1               	movlw	-15
 16131  012278  0060  F103  FFE3   	movff	btemp+10,plusw1
 16132  01227E  0EF2               	movlw	-14
 16133  012280  0060  F107  FFE3   	movff	btemp+11,plusw1
 16134  012286                     l6738:
 16135                           
 16136                           ;stkvar	_b @ sp[(-13)+-4]
 16137  012286  0EF1               	movlw	-15
 16138  012288  8EE3               	bsf	plusw1,7,c
 16139  01228A  D018               	goto	l6742
 16140  01228C                     l6740:
 16141  01228C  0E00               	movlw	0
 16142  01228E  6E3E               	movwf	(btemp+8)^0,c
 16143  012290  0E00               	movlw	0
 16144  012292  6E3F               	movwf	(btemp+9)^0,c
 16145  012294  0E00               	movlw	0
 16146  012296  6E40               	movwf	(btemp+10)^0,c
 16147  012298  0E00               	movlw	0
 16148  01229A  6E41               	movwf	(btemp+11)^0,c
 16149                           
 16150                           ;stkvar	_b @ sp[(-13)+-4]
 16151  01229C  0EEF               	movlw	-17
 16152  01229E  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 16153  0122A4  0EF0               	movlw	-16
 16154  0122A6  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 16155  0122AC  0EF1               	movlw	-15
 16156  0122AE  0060  F103  FFE3   	movff	btemp+10,plusw1
 16157  0122B4  0EF2               	movlw	-14
 16158  0122B6  0060  F107  FFE3   	movff	btemp+11,plusw1
 16159  0122BC                     l6742:
 16160                           
 16161                           ;stkvar	_a @ sp[(-13)+-8]
 16162  0122BC  0EEE               	movlw	238
 16163  0122BE  24E1               	addwf	fsr1l,w,c
 16164  0122C0  6ED9               	movwf	fsr2l,c
 16165  0122C2  0EFF               	movlw	255
 16166  0122C4  20E2               	addwfc	fsr1h,w,c
 16167  0122C6  6EDA               	movwf	fsr2h,c
 16168  0122C8  50DF               	movf	indf2,w,c
 16169  0122CA  6E41               	movwf	(btemp+11)^0,c
 16170  0122CC  0E80               	movlw	128
 16171  0122CE  1641               	andwf	(btemp+11)^0,f,c
 16172                           
 16173                           ;stkvar	_sign @ sp[(-13)+12]
 16174  0122D0  50E1               	movf	fsr1l,w,c
 16175  0122D2  0FFF               	addlw	-1
 16176  0122D4  6ED9               	movwf	fsr2l,c
 16177  0122D6  50E2               	movf	fsr1h,w,c
 16178  0122D8  6EDA               	movwf	fsr2h,c
 16179  0122DA  0EFF               	movlw	255
 16180  0122DC  22DA               	addwfc	fsr2h,f,c
 16181  0122DE  5041               	movf	(btemp+11)^0,w,c
 16182  0122E0  1ADF               	xorwf	indf2,f,c
 16183                           
 16184                           ;stkvar	_a @ sp[(-13)+-8]
 16185  0122E2  0EEE               	movlw	238
 16186  0122E4  24E1               	addwf	fsr1l,w,c
 16187  0122E6  6ED9               	movwf	fsr2l,c
 16188  0122E8  0EFF               	movlw	255
 16189  0122EA  20E2               	addwfc	fsr1h,w,c
 16190  0122EC  6EDA               	movwf	fsr2h,c
 16191  0122EE  50DF               	movf	indf2,w,c
 16192  0122F0  6E41               	movwf	(btemp+11)^0,c
 16193  0122F2  90D8               	bcf	status,0,c
 16194  0122F4  3441               	rlcf	(btemp+11)^0,w,c
 16195  0122F6  6E40               	movwf	(btemp+10)^0,c
 16196                           
 16197                           ;stkvar	_aexp @ sp[(-13)+11]
 16198  0122F8  0EFE               	movlw	-2
 16199  0122FA  0060  F103  FFE3   	movff	btemp+10,plusw1
 16200                           
 16201                           ;stkvar	_a @ sp[(-13)+-8]
 16202  012300  0EED               	movlw	237
 16203  012302  24E1               	addwf	fsr1l,w,c
 16204  012304  6ED9               	movwf	fsr2l,c
 16205  012306  0EFF               	movlw	255
 16206  012308  20E2               	addwfc	fsr1h,w,c
 16207  01230A  6EDA               	movwf	fsr2h,c
 16208  01230C  AEDF               	btfss	indf2,7,c
 16209  01230E  D002               	goto	l6750
 16210                           
 16211                           ;stkvar	_aexp @ sp[(-13)+11]
 16212  012310  0EFE               	movlw	-2
 16213  012312  80E3               	bsf	plusw1,0,c
 16214  012314                     l6750:
 16215                           
 16216                           ;stkvar	_aexp @ sp[(-13)+11]
 16217  012314  0EFE               	movlw	-2
 16218  012316  50E3               	movf	plusw1,w,c
 16219  012318  B4D8               	btfsc	status,2,c
 16220  01231A  D01F               	goto	l6758
 16221                           
 16222                           ;stkvar	_aexp @ sp[(-13)+11]
 16223  01231C  0EFE               	movlw	-2
 16224  01231E  28E3               	incf	plusw1,w,c
 16225  012320  A4D8               	btfss	status,2,c
 16226  012322  D018               	goto	l6756
 16227  012324  0E00               	movlw	0
 16228  012326  6E3E               	movwf	(btemp+8)^0,c
 16229  012328  0E00               	movlw	0
 16230  01232A  6E3F               	movwf	(btemp+9)^0,c
 16231  01232C  0E00               	movlw	0
 16232  01232E  6E40               	movwf	(btemp+10)^0,c
 16233  012330  0E00               	movlw	0
 16234  012332  6E41               	movwf	(btemp+11)^0,c
 16235                           
 16236                           ;stkvar	_a @ sp[(-13)+-8]
 16237  012334  0EEB               	movlw	-21
 16238  012336  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 16239  01233C  0EEC               	movlw	-20
 16240  01233E  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 16241  012344  0EED               	movlw	-19
 16242  012346  0060  F103  FFE3   	movff	btemp+10,plusw1
 16243  01234C  0EEE               	movlw	-18
 16244  01234E  0060  F107  FFE3   	movff	btemp+11,plusw1
 16245  012354                     l6756:
 16246                           
 16247                           ;stkvar	_a @ sp[(-13)+-8]
 16248  012354  0EED               	movlw	-19
 16249  012356  8EE3               	bsf	plusw1,7,c
 16250  012358  D018               	goto	l6760
 16251  01235A                     l6758:
 16252  01235A  0E00               	movlw	0
 16253  01235C  6E3E               	movwf	(btemp+8)^0,c
 16254  01235E  0E00               	movlw	0
 16255  012360  6E3F               	movwf	(btemp+9)^0,c
 16256  012362  0E00               	movlw	0
 16257  012364  6E40               	movwf	(btemp+10)^0,c
 16258  012366  0E00               	movlw	0
 16259  012368  6E41               	movwf	(btemp+11)^0,c
 16260                           
 16261                           ;stkvar	_a @ sp[(-13)+-8]
 16262  01236A  0EEB               	movlw	-21
 16263  01236C  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 16264  012372  0EEC               	movlw	-20
 16265  012374  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 16266  01237A  0EED               	movlw	-19
 16267  01237C  0060  F103  FFE3   	movff	btemp+10,plusw1
 16268  012382  0EEE               	movlw	-18
 16269  012384  0060  F107  FFE3   	movff	btemp+11,plusw1
 16270  01238A                     l6760:
 16271                           
 16272                           ;stkvar	_aexp @ sp[(-13)+11]
 16273  01238A  0EFE               	movlw	-2
 16274  01238C  50E3               	movf	plusw1,w,c
 16275  01238E  B4D8               	btfsc	status,2,c
 16276  012390  D004               	goto	u5980
 16277                           
 16278                           ;stkvar	_bexp @ sp[(-13)+10]
 16279  012392  0EFD               	movlw	-3
 16280  012394  50E3               	movf	plusw1,w,c
 16281  012396  A4D8               	btfss	status,2,c
 16282  012398  D009               	goto	l6768
 16283  01239A                     u5980:
 16284  01239A  0E00               	movlw	0
 16285  01239C  6E36               	movwf	btemp^0,c
 16286  01239E  0E00               	movlw	0
 16287  0123A0  6E37               	movwf	(btemp+1)^0,c
 16288  0123A2  0E00               	movlw	0
 16289  0123A4  6E38               	movwf	(btemp+2)^0,c
 16290  0123A6  0E00               	movlw	0
 16291  0123A8  6E39               	movwf	(btemp+3)^0,c
 16292  0123AA  D332               	goto	l2631
 16293  0123AC                     l6768:
 16294                           
 16295                           ;stkvar	_b @ sp[(-13)+-4]
 16296  0123AC  0EEF               	movlw	-17
 16297  0123AE  006F FF8C  F041    	movff	plusw1,btemp+11
 16298                           
 16299                           ;stkvar	_a @ sp[(-13)+-8]
 16300  0123B4  0EED               	movlw	237
 16301  0123B6  24E1               	addwf	fsr1l,w,c
 16302  0123B8  6ED9               	movwf	fsr2l,c
 16303  0123BA  0EFF               	movlw	255
 16304  0123BC  20E2               	addwfc	fsr1h,w,c
 16305  0123BE  6EDA               	movwf	fsr2h,c
 16306  0123C0  50DF               	movf	indf2,w,c
 16307  0123C2  0241               	mulwf	(btemp+11)^0,c
 16308                           
 16309                           ;stkvar	_temp @ sp[(-13)+8]
 16310  0123C4  0EFB               	movlw	-5
 16311  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16312  0123CC  0EFC               	movlw	-4
 16313  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16314                           
 16315                           ;stkvar	_temp @ sp[(-13)+8]
 16316  0123D4  0EFB               	movlw	-5
 16317  0123D6  006F FF8C  F041    	movff	plusw1,btemp+11
 16318  0123DC  0060  F104  F03A   	movff	btemp+11,btemp+4
 16319  0123E2  6A3B               	clrf	(btemp+5)^0,c
 16320  0123E4  6A3C               	clrf	(btemp+6)^0,c
 16321  0123E6  6A3D               	clrf	(btemp+7)^0,c
 16322                           
 16323                           ;stkvar	_grs @ sp[(-13)+4]
 16324  0123E8  0EF7               	movlw	-9
 16325  0123EA  0060  F0EB  FFE3   	movff	btemp+4,plusw1
 16326  0123F0  0EF8               	movlw	-8
 16327  0123F2  0060  F0EF  FFE3   	movff	btemp+5,plusw1
 16328  0123F8  0EF9               	movlw	-7
 16329  0123FA  0060  F0F3  FFE3   	movff	btemp+6,plusw1
 16330  012400  0EFA               	movlw	-6
 16331  012402  0060  F0F7  FFE3   	movff	btemp+7,plusw1
 16332                           
 16333                           ;stkvar	_temp @ sp[(-13)+8]
 16334  012408  0EFC               	movlw	252
 16335  01240A  24E1               	addwf	fsr1l,w,c
 16336  01240C  6ED9               	movwf	fsr2l,c
 16337  01240E  0EFF               	movlw	255
 16338  012410  20E2               	addwfc	fsr1h,w,c
 16339  012412  6EDA               	movwf	fsr2h,c
 16340  012414  50DF               	movf	indf2,w,c
 16341  012416  6E41               	movwf	(btemp+11)^0,c
 16342  012418  0060  F104  F03A   	movff	btemp+11,btemp+4
 16343  01241E  6A3B               	clrf	(btemp+5)^0,c
 16344  012420  6A3C               	clrf	(btemp+6)^0,c
 16345  012422  6A3D               	clrf	(btemp+7)^0,c
 16346                           
 16347                           ;stkvar	_prod @ sp[(-13)+0]
 16348  012424  0EF3               	movlw	-13
 16349  012426  0060  F0EB  FFE3   	movff	btemp+4,plusw1
 16350  01242C  0EF4               	movlw	-12
 16351  01242E  0060  F0EF  FFE3   	movff	btemp+5,plusw1
 16352  012434  0EF5               	movlw	-11
 16353  012436  0060  F0F3  FFE3   	movff	btemp+6,plusw1
 16354  01243C  0EF6               	movlw	-10
 16355  01243E  0060  F0F7  FFE3   	movff	btemp+7,plusw1
 16356                           
 16357                           ;stkvar	_b @ sp[(-13)+-4]
 16358  012444  0EF0               	movlw	240
 16359  012446  24E1               	addwf	fsr1l,w,c
 16360  012448  6ED9               	movwf	fsr2l,c
 16361  01244A  0EFF               	movlw	255
 16362  01244C  20E2               	addwfc	fsr1h,w,c
 16363  01244E  6EDA               	movwf	fsr2h,c
 16364  012450  50DF               	movf	indf2,w,c
 16365  012452  6E41               	movwf	(btemp+11)^0,c
 16366                           
 16367                           ;stkvar	_a @ sp[(-13)+-8]
 16368  012454  0EEC               	movlw	236
 16369  012456  24E1               	addwf	fsr1l,w,c
 16370  012458  6ED9               	movwf	fsr2l,c
 16371  01245A  0EFF               	movlw	255
 16372  01245C  20E2               	addwfc	fsr1h,w,c
 16373  01245E  6EDA               	movwf	fsr2h,c
 16374  012460  50DF               	movf	indf2,w,c
 16375  012462  0241               	mulwf	(btemp+11)^0,c
 16376                           
 16377                           ;stkvar	_temp @ sp[(-13)+8]
 16378  012464  0EFB               	movlw	-5
 16379  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16380  01246C  0EFC               	movlw	-4
 16381  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16382                           
 16383                           ;stkvar	_grs @ sp[(-13)+4]
 16384  012474  50E1               	movf	fsr1l,w,c
 16385  012476  0FF7               	addlw	-9
 16386  012478  6ED9               	movwf	fsr2l,c
 16387  01247A  50E2               	movf	fsr1h,w,c
 16388  01247C  6EDA               	movwf	fsr2h,c
 16389  01247E  0EFF               	movlw	255
 16390  012480  22DA               	addwfc	fsr2h,f,c
 16391                           
 16392                           ;stkvar	_temp @ sp[(-13)+8]
 16393  012482  0EFB               	movlw	-5
 16394  012484  50E3               	movf	plusw1,w,c
 16395  012486  26DE               	addwf	postinc2,f,c
 16396  012488  0E00               	movlw	0
 16397  01248A  22DE               	addwfc	postinc2,f,c
 16398  01248C  22DE               	addwfc	postinc2,f,c
 16399  01248E  22DE               	addwfc	postinc2,f,c
 16400                           
 16401                           ;stkvar	_prod @ sp[(-13)+0]
 16402  012490  50E1               	movf	fsr1l,w,c
 16403  012492  0FF3               	addlw	-13
 16404  012494  6ED9               	movwf	fsr2l,c
 16405  012496  50E2               	movf	fsr1h,w,c
 16406  012498  6EDA               	movwf	fsr2h,c
 16407  01249A  0EFF               	movlw	255
 16408  01249C  22DA               	addwfc	fsr2h,f,c
 16409                           
 16410                           ;stkvar	_temp @ sp[(-13)+8]
 16411  01249E  0EFC               	movlw	252
 16412  0124A0  24E1               	addwf	fsr1l,w,c
 16413  0124A2  6EE9               	movwf	fsr0l,c
 16414  0124A4  0EFF               	movlw	255
 16415  0124A6  20E2               	addwfc	fsr1h,w,c
 16416  0124A8  6EEA               	movwf	fsr0h,c
 16417  0124AA  50EF               	movf	indf0,w,c
 16418  0124AC  26DE               	addwf	postinc2,f,c
 16419  0124AE  0E00               	movlw	0
 16420  0124B0  22DE               	addwfc	postinc2,f,c
 16421  0124B2  22DE               	addwfc	postinc2,f,c
 16422  0124B4  22DE               	addwfc	postinc2,f,c
 16423                           
 16424                           ;stkvar	_b @ sp[(-13)+-4]
 16425  0124B6  0EF1               	movlw	241
 16426  0124B8  24E1               	addwf	fsr1l,w,c
 16427  0124BA  6ED9               	movwf	fsr2l,c
 16428  0124BC  0EFF               	movlw	255
 16429  0124BE  20E2               	addwfc	fsr1h,w,c
 16430  0124C0  6EDA               	movwf	fsr2h,c
 16431  0124C2  50DF               	movf	indf2,w,c
 16432  0124C4  6E41               	movwf	(btemp+11)^0,c
 16433                           
 16434                           ;stkvar	_a @ sp[(-13)+-8]
 16435  0124C6  0EEB               	movlw	-21
 16436  0124C8  50E3               	movf	plusw1,w,c
 16437  0124CA  0241               	mulwf	(btemp+11)^0,c
 16438                           
 16439                           ;stkvar	_temp @ sp[(-13)+8]
 16440  0124CC  0EFB               	movlw	-5
 16441  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16442  0124D4  0EFC               	movlw	-4
 16443  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16444                           
 16445                           ;stkvar	_grs @ sp[(-13)+4]
 16446  0124DC  50E1               	movf	fsr1l,w,c
 16447  0124DE  0FF7               	addlw	-9
 16448  0124E0  6ED9               	movwf	fsr2l,c
 16449  0124E2  50E2               	movf	fsr1h,w,c
 16450  0124E4  6EDA               	movwf	fsr2h,c
 16451  0124E6  0EFF               	movlw	255
 16452  0124E8  22DA               	addwfc	fsr2h,f,c
 16453                           
 16454                           ;stkvar	_temp @ sp[(-13)+8]
 16455  0124EA  0EFB               	movlw	-5
 16456  0124EC  50E3               	movf	plusw1,w,c
 16457  0124EE  26DE               	addwf	postinc2,f,c
 16458  0124F0  0E00               	movlw	0
 16459  0124F2  22DE               	addwfc	postinc2,f,c
 16460  0124F4  22DE               	addwfc	postinc2,f,c
 16461  0124F6  22DE               	addwfc	postinc2,f,c
 16462                           
 16463                           ;stkvar	_prod @ sp[(-13)+0]
 16464  0124F8  50E1               	movf	fsr1l,w,c
 16465  0124FA  0FF3               	addlw	-13
 16466  0124FC  6ED9               	movwf	fsr2l,c
 16467  0124FE  50E2               	movf	fsr1h,w,c
 16468  012500  6EDA               	movwf	fsr2h,c
 16469  012502  0EFF               	movlw	255
 16470  012504  22DA               	addwfc	fsr2h,f,c
 16471                           
 16472                           ;stkvar	_temp @ sp[(-13)+8]
 16473  012506  0EFC               	movlw	252
 16474  012508  24E1               	addwf	fsr1l,w,c
 16475  01250A  6EE9               	movwf	fsr0l,c
 16476  01250C  0EFF               	movlw	255
 16477  01250E  20E2               	addwfc	fsr1h,w,c
 16478  012510  6EEA               	movwf	fsr0h,c
 16479  012512  50EF               	movf	indf0,w,c
 16480  012514  26DE               	addwf	postinc2,f,c
 16481  012516  0E00               	movlw	0
 16482  012518  22DE               	addwfc	postinc2,f,c
 16483  01251A  22DE               	addwfc	postinc2,f,c
 16484  01251C  22DE               	addwfc	postinc2,f,c
 16485                           
 16486                           ;stkvar	_grs @ sp[(-13)+4]
 16487  01251E  50E1               	movf	fsr1l,w,c
 16488  012520  0FF7               	addlw	-9
 16489  012522  6ED9               	movwf	fsr2l,c
 16490  012524  50E2               	movf	fsr1h,w,c
 16491  012526  6EDA               	movwf	fsr2h,c
 16492  012528  0EFF               	movlw	255
 16493  01252A  22DA               	addwfc	fsr2h,f,c
 16494  01252C  0E08               	movlw	8
 16495  01252E                     u5995:
 16496  01252E  90D8               	bcf	status,0,c
 16497  012530  36DE               	rlcf	postinc2,f,c
 16498  012532  36DE               	rlcf	postinc2,f,c
 16499  012534  36DE               	rlcf	postinc2,f,c
 16500  012536  36DD               	rlcf	postdec2,f,c
 16501  012538  52DD               	movf	postdec2,f,c
 16502  01253A  52DD               	movf	postdec2,f,c
 16503  01253C  2EE8               	decfsz	wreg,f,c
 16504  01253E  D7F7               	goto	u5995
 16505                           
 16506                           ;stkvar	_b @ sp[(-13)+-4]
 16507  012540  0EF0               	movlw	240
 16508  012542  24E1               	addwf	fsr1l,w,c
 16509  012544  6ED9               	movwf	fsr2l,c
 16510  012546  0EFF               	movlw	255
 16511  012548  20E2               	addwfc	fsr1h,w,c
 16512  01254A  6EDA               	movwf	fsr2h,c
 16513  01254C  50DF               	movf	indf2,w,c
 16514  01254E  6E41               	movwf	(btemp+11)^0,c
 16515                           
 16516                           ;stkvar	_a @ sp[(-13)+-8]
 16517  012550  0EEB               	movlw	-21
 16518  012552  50E3               	movf	plusw1,w,c
 16519  012554  0241               	mulwf	(btemp+11)^0,c
 16520                           
 16521                           ;stkvar	_temp @ sp[(-13)+8]
 16522  012556  0EFB               	movlw	-5
 16523  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16524  01255E  0EFC               	movlw	-4
 16525  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16526                           
 16527                           ;stkvar	_temp @ sp[(-13)+8]
 16528  012566  0EFB               	movlw	-5
 16529  012568  006F FF8C  F040    	movff	plusw1,btemp+10
 16530  01256E  0EFC               	movlw	-4
 16531  012570  006F FF8C  F041    	movff	plusw1,btemp+11
 16532                           
 16533                           ;stkvar	_grs @ sp[(-13)+4]
 16534  012576  50E1               	movf	fsr1l,w,c
 16535  012578  0FF7               	addlw	-9
 16536  01257A  6ED9               	movwf	fsr2l,c
 16537  01257C  50E2               	movf	fsr1h,w,c
 16538  01257E  6EDA               	movwf	fsr2h,c
 16539  012580  0EFF               	movlw	255
 16540  012582  22DA               	addwfc	fsr2h,f,c
 16541  012584  5040               	movf	(btemp+10)^0,w,c
 16542  012586  26DE               	addwf	postinc2,f,c
 16543  012588  5041               	movf	(btemp+11)^0,w,c
 16544  01258A  22DE               	addwfc	postinc2,f,c
 16545  01258C  0E00               	movlw	0
 16546  01258E  22DE               	addwfc	postinc2,f,c
 16547  012590  22DE               	addwfc	postinc2,f,c
 16548                           
 16549                           ;stkvar	_b @ sp[(-13)+-4]
 16550  012592  0EEF               	movlw	-17
 16551  012594  006F FF8C  F041    	movff	plusw1,btemp+11
 16552                           
 16553                           ;stkvar	_a @ sp[(-13)+-8]
 16554  01259A  0EEC               	movlw	236
 16555  01259C  24E1               	addwf	fsr1l,w,c
 16556  01259E  6ED9               	movwf	fsr2l,c
 16557  0125A0  0EFF               	movlw	255
 16558  0125A2  20E2               	addwfc	fsr1h,w,c
 16559  0125A4  6EDA               	movwf	fsr2h,c
 16560  0125A6  50DF               	movf	indf2,w,c
 16561  0125A8  0241               	mulwf	(btemp+11)^0,c
 16562                           
 16563                           ;stkvar	_temp @ sp[(-13)+8]
 16564  0125AA  0EFB               	movlw	-5
 16565  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16566  0125B2  0EFC               	movlw	-4
 16567  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16568                           
 16569                           ;stkvar	_temp @ sp[(-13)+8]
 16570  0125BA  0EFB               	movlw	-5
 16571  0125BC  006F FF8C  F040    	movff	plusw1,btemp+10
 16572  0125C2  0EFC               	movlw	-4
 16573  0125C4  006F FF8C  F041    	movff	plusw1,btemp+11
 16574                           
 16575                           ;stkvar	_grs @ sp[(-13)+4]
 16576  0125CA  50E1               	movf	fsr1l,w,c
 16577  0125CC  0FF7               	addlw	-9
 16578  0125CE  6ED9               	movwf	fsr2l,c
 16579  0125D0  50E2               	movf	fsr1h,w,c
 16580  0125D2  6EDA               	movwf	fsr2h,c
 16581  0125D4  0EFF               	movlw	255
 16582  0125D6  22DA               	addwfc	fsr2h,f,c
 16583  0125D8  5040               	movf	(btemp+10)^0,w,c
 16584  0125DA  26DE               	addwf	postinc2,f,c
 16585  0125DC  5041               	movf	(btemp+11)^0,w,c
 16586  0125DE  22DE               	addwfc	postinc2,f,c
 16587  0125E0  0E00               	movlw	0
 16588  0125E2  22DE               	addwfc	postinc2,f,c
 16589  0125E4  22DE               	addwfc	postinc2,f,c
 16590                           
 16591                           ;stkvar	_grs @ sp[(-13)+4]
 16592  0125E6  50E1               	movf	fsr1l,w,c
 16593  0125E8  0FF7               	addlw	-9
 16594  0125EA  6ED9               	movwf	fsr2l,c
 16595  0125EC  50E2               	movf	fsr1h,w,c
 16596  0125EE  6EDA               	movwf	fsr2h,c
 16597  0125F0  0EFF               	movlw	255
 16598  0125F2  22DA               	addwfc	fsr2h,f,c
 16599  0125F4  0E08               	movlw	8
 16600  0125F6                     u6005:
 16601  0125F6  90D8               	bcf	status,0,c
 16602  0125F8  36DE               	rlcf	postinc2,f,c
 16603  0125FA  36DE               	rlcf	postinc2,f,c
 16604  0125FC  36DE               	rlcf	postinc2,f,c
 16605  0125FE  36DD               	rlcf	postdec2,f,c
 16606  012600  52DD               	movf	postdec2,f,c
 16607  012602  52DD               	movf	postdec2,f,c
 16608  012604  2EE8               	decfsz	wreg,f,c
 16609  012606  D7F7               	goto	u6005
 16610                           
 16611                           ;stkvar	_b @ sp[(-13)+-4]
 16612  012608  0EEF               	movlw	-17
 16613  01260A  006F FF8C  F041    	movff	plusw1,btemp+11
 16614                           
 16615                           ;stkvar	_a @ sp[(-13)+-8]
 16616  012610  0EEB               	movlw	-21
 16617  012612  50E3               	movf	plusw1,w,c
 16618  012614  0241               	mulwf	(btemp+11)^0,c
 16619                           
 16620                           ;stkvar	_temp @ sp[(-13)+8]
 16621  012616  0EFB               	movlw	-5
 16622  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16623  01261E  0EFC               	movlw	-4
 16624  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16625                           
 16626                           ;stkvar	_temp @ sp[(-13)+8]
 16627  012626  0EFB               	movlw	-5
 16628  012628  006F FF8C  F040    	movff	plusw1,btemp+10
 16629  01262E  0EFC               	movlw	-4
 16630  012630  006F FF8C  F041    	movff	plusw1,btemp+11
 16631                           
 16632                           ;stkvar	_grs @ sp[(-13)+4]
 16633  012636  50E1               	movf	fsr1l,w,c
 16634  012638  0FF7               	addlw	-9
 16635  01263A  6ED9               	movwf	fsr2l,c
 16636  01263C  50E2               	movf	fsr1h,w,c
 16637  01263E  6EDA               	movwf	fsr2h,c
 16638  012640  0EFF               	movlw	255
 16639  012642  22DA               	addwfc	fsr2h,f,c
 16640  012644  5040               	movf	(btemp+10)^0,w,c
 16641  012646  26DE               	addwf	postinc2,f,c
 16642  012648  5041               	movf	(btemp+11)^0,w,c
 16643  01264A  22DE               	addwfc	postinc2,f,c
 16644  01264C  0E00               	movlw	0
 16645  01264E  22DE               	addwfc	postinc2,f,c
 16646  012650  22DE               	addwfc	postinc2,f,c
 16647                           
 16648                           ;stkvar	_b @ sp[(-13)+-4]
 16649  012652  0EF0               	movlw	240
 16650  012654  24E1               	addwf	fsr1l,w,c
 16651  012656  6ED9               	movwf	fsr2l,c
 16652  012658  0EFF               	movlw	255
 16653  01265A  20E2               	addwfc	fsr1h,w,c
 16654  01265C  6EDA               	movwf	fsr2h,c
 16655  01265E  50DF               	movf	indf2,w,c
 16656  012660  6E41               	movwf	(btemp+11)^0,c
 16657                           
 16658                           ;stkvar	_a @ sp[(-13)+-8]
 16659  012662  0EED               	movlw	237
 16660  012664  24E1               	addwf	fsr1l,w,c
 16661  012666  6ED9               	movwf	fsr2l,c
 16662  012668  0EFF               	movlw	255
 16663  01266A  20E2               	addwfc	fsr1h,w,c
 16664  01266C  6EDA               	movwf	fsr2h,c
 16665  01266E  50DF               	movf	indf2,w,c
 16666  012670  0241               	mulwf	(btemp+11)^0,c
 16667                           
 16668                           ;stkvar	_temp @ sp[(-13)+8]
 16669  012672  0EFB               	movlw	-5
 16670  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16671  01267A  0EFC               	movlw	-4
 16672  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16673                           
 16674                           ;stkvar	_temp @ sp[(-13)+8]
 16675  012682  0EFB               	movlw	-5
 16676  012684  006F FF8C  F040    	movff	plusw1,btemp+10
 16677  01268A  0EFC               	movlw	-4
 16678  01268C  006F FF8C  F041    	movff	plusw1,btemp+11
 16679                           
 16680                           ;stkvar	_prod @ sp[(-13)+0]
 16681  012692  50E1               	movf	fsr1l,w,c
 16682  012694  0FF3               	addlw	-13
 16683  012696  6ED9               	movwf	fsr2l,c
 16684  012698  50E2               	movf	fsr1h,w,c
 16685  01269A  6EDA               	movwf	fsr2h,c
 16686  01269C  0EFF               	movlw	255
 16687  01269E  22DA               	addwfc	fsr2h,f,c
 16688  0126A0  5040               	movf	(btemp+10)^0,w,c
 16689  0126A2  26DE               	addwf	postinc2,f,c
 16690  0126A4  5041               	movf	(btemp+11)^0,w,c
 16691  0126A6  22DE               	addwfc	postinc2,f,c
 16692  0126A8  0E00               	movlw	0
 16693  0126AA  22DE               	addwfc	postinc2,f,c
 16694  0126AC  22DE               	addwfc	postinc2,f,c
 16695                           
 16696                           ;stkvar	_b @ sp[(-13)+-4]
 16697  0126AE  0EF1               	movlw	241
 16698  0126B0  24E1               	addwf	fsr1l,w,c
 16699  0126B2  6ED9               	movwf	fsr2l,c
 16700  0126B4  0EFF               	movlw	255
 16701  0126B6  20E2               	addwfc	fsr1h,w,c
 16702  0126B8  6EDA               	movwf	fsr2h,c
 16703  0126BA  50DF               	movf	indf2,w,c
 16704  0126BC  6E41               	movwf	(btemp+11)^0,c
 16705                           
 16706                           ;stkvar	_a @ sp[(-13)+-8]
 16707  0126BE  0EEC               	movlw	236
 16708  0126C0  24E1               	addwf	fsr1l,w,c
 16709  0126C2  6ED9               	movwf	fsr2l,c
 16710  0126C4  0EFF               	movlw	255
 16711  0126C6  20E2               	addwfc	fsr1h,w,c
 16712  0126C8  6EDA               	movwf	fsr2h,c
 16713  0126CA  50DF               	movf	indf2,w,c
 16714  0126CC  0241               	mulwf	(btemp+11)^0,c
 16715                           
 16716                           ;stkvar	_temp @ sp[(-13)+8]
 16717  0126CE  0EFB               	movlw	-5
 16718  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16719  0126D6  0EFC               	movlw	-4
 16720  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16721                           
 16722                           ;stkvar	_temp @ sp[(-13)+8]
 16723  0126DE  0EFB               	movlw	-5
 16724  0126E0  006F FF8C  F040    	movff	plusw1,btemp+10
 16725  0126E6  0EFC               	movlw	-4
 16726  0126E8  006F FF8C  F041    	movff	plusw1,btemp+11
 16727                           
 16728                           ;stkvar	_prod @ sp[(-13)+0]
 16729  0126EE  50E1               	movf	fsr1l,w,c
 16730  0126F0  0FF3               	addlw	-13
 16731  0126F2  6ED9               	movwf	fsr2l,c
 16732  0126F4  50E2               	movf	fsr1h,w,c
 16733  0126F6  6EDA               	movwf	fsr2h,c
 16734  0126F8  0EFF               	movlw	255
 16735  0126FA  22DA               	addwfc	fsr2h,f,c
 16736  0126FC  5040               	movf	(btemp+10)^0,w,c
 16737  0126FE  26DE               	addwf	postinc2,f,c
 16738  012700  5041               	movf	(btemp+11)^0,w,c
 16739  012702  22DE               	addwfc	postinc2,f,c
 16740  012704  0E00               	movlw	0
 16741  012706  22DE               	addwfc	postinc2,f,c
 16742  012708  22DE               	addwfc	postinc2,f,c
 16743                           
 16744                           ;stkvar	_b @ sp[(-13)+-4]
 16745  01270A  0EF1               	movlw	241
 16746  01270C  24E1               	addwf	fsr1l,w,c
 16747  01270E  6ED9               	movwf	fsr2l,c
 16748  012710  0EFF               	movlw	255
 16749  012712  20E2               	addwfc	fsr1h,w,c
 16750  012714  6EDA               	movwf	fsr2h,c
 16751  012716  50DF               	movf	indf2,w,c
 16752  012718  6E41               	movwf	(btemp+11)^0,c
 16753                           
 16754                           ;stkvar	_a @ sp[(-13)+-8]
 16755  01271A  0EED               	movlw	237
 16756  01271C  24E1               	addwf	fsr1l,w,c
 16757  01271E  6ED9               	movwf	fsr2l,c
 16758  012720  0EFF               	movlw	255
 16759  012722  20E2               	addwfc	fsr1h,w,c
 16760  012724  6EDA               	movwf	fsr2h,c
 16761  012726  50DF               	movf	indf2,w,c
 16762  012728  0241               	mulwf	(btemp+11)^0,c
 16763                           
 16764                           ;stkvar	_temp @ sp[(-13)+8]
 16765  01272A  0EFB               	movlw	-5
 16766  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16767  012732  0EFC               	movlw	-4
 16768  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16769                           
 16770                           ;stkvar	_temp @ sp[(-13)+8]
 16771  01273A  0EFB               	movlw	-5
 16772  01273C  006F FF8C  F040    	movff	plusw1,btemp+10
 16773  012742  0EFC               	movlw	-4
 16774  012744  006F FF8C  F041    	movff	plusw1,btemp+11
 16775  01274A  5040               	movf	(btemp+10)^0,w,c
 16776  01274C  6E3A               	movwf	(btemp+4)^0,c
 16777  01274E  5041               	movf	(btemp+11)^0,w,c
 16778  012750  6E3B               	movwf	(btemp+5)^0,c
 16779  012752  6A3C               	clrf	(btemp+6)^0,c
 16780  012754  6A3D               	clrf	(btemp+7)^0,c
 16781  012756  0060  F0F0  F03D   	movff	btemp+6,btemp+7
 16782  01275C  0060  F0EC  F03C   	movff	btemp+5,btemp+6
 16783  012762  0060  F0E8  F03B   	movff	btemp+4,btemp+5
 16784  012768  6A3A               	clrf	(btemp+4)^0,c
 16785                           
 16786                           ;stkvar	_prod @ sp[(-13)+0]
 16787  01276A  50E1               	movf	fsr1l,w,c
 16788  01276C  0FF3               	addlw	-13
 16789  01276E  6ED9               	movwf	fsr2l,c
 16790  012770  50E2               	movf	fsr1h,w,c
 16791  012772  6EDA               	movwf	fsr2h,c
 16792  012774  0EFF               	movlw	255
 16793  012776  22DA               	addwfc	fsr2h,f,c
 16794  012778  503A               	movf	(btemp+4)^0,w,c
 16795  01277A  26DE               	addwf	postinc2,f,c
 16796  01277C  503B               	movf	(btemp+5)^0,w,c
 16797  01277E  22DE               	addwfc	postinc2,f,c
 16798  012780  503C               	movf	(btemp+6)^0,w,c
 16799  012782  22DE               	addwfc	postinc2,f,c
 16800  012784  503D               	movf	(btemp+7)^0,w,c
 16801  012786  22DE               	addwfc	postinc2,f,c
 16802                           
 16803                           ;stkvar	_prod @ sp[(-13)+0]
 16804  012788  50E1               	movf	fsr1l,w,c
 16805  01278A  0FF3               	addlw	-13
 16806  01278C  6ED9               	movwf	fsr2l,c
 16807  01278E  50E2               	movf	fsr1h,w,c
 16808  012790  6EDA               	movwf	fsr2h,c
 16809  012792  0EFF               	movlw	255
 16810  012794  22DA               	addwfc	fsr2h,f,c
 16811                           
 16812                           ;stkvar	_grs @ sp[(-13)+4]
 16813  012796  0EFA               	movlw	250
 16814  012798  24E1               	addwf	fsr1l,w,c
 16815  01279A  6EE9               	movwf	fsr0l,c
 16816  01279C  0EFF               	movlw	255
 16817  01279E  20E2               	addwfc	fsr1h,w,c
 16818  0127A0  6EEA               	movwf	fsr0h,c
 16819  0127A2  50EF               	movf	indf0,w,c
 16820  0127A4  26DE               	addwf	postinc2,f,c
 16821  0127A6  0E00               	movlw	0
 16822  0127A8  22DE               	addwfc	postinc2,f,c
 16823  0127AA  22DE               	addwfc	postinc2,f,c
 16824  0127AC  22DE               	addwfc	postinc2,f,c
 16825                           
 16826                           ;stkvar	_grs @ sp[(-13)+4]
 16827  0127AE  50E1               	movf	fsr1l,w,c
 16828  0127B0  0FF7               	addlw	-9
 16829  0127B2  6ED9               	movwf	fsr2l,c
 16830  0127B4  50E2               	movf	fsr1h,w,c
 16831  0127B6  6EDA               	movwf	fsr2h,c
 16832  0127B8  0EFF               	movlw	255
 16833  0127BA  22DA               	addwfc	fsr2h,f,c
 16834  0127BC  0E08               	movlw	8
 16835  0127BE                     u6015:
 16836  0127BE  90D8               	bcf	status,0,c
 16837  0127C0  36DE               	rlcf	postinc2,f,c
 16838  0127C2  36DE               	rlcf	postinc2,f,c
 16839  0127C4  36DE               	rlcf	postinc2,f,c
 16840  0127C6  36DD               	rlcf	postdec2,f,c
 16841  0127C8  52DD               	movf	postdec2,f,c
 16842  0127CA  52DD               	movf	postdec2,f,c
 16843  0127CC  2EE8               	decfsz	wreg,f,c
 16844  0127CE  D7F7               	goto	u6015
 16845  0127D0  0E82               	movlw	130
 16846  0127D2  6E40               	movwf	(btemp+10)^0,c
 16847  0127D4  0EFF               	movlw	255
 16848  0127D6  6E41               	movwf	(btemp+11)^0,c
 16849                           
 16850                           ;stkvar	_bexp @ sp[(-13)+10]
 16851  0127D8  0EFD               	movlw	-3
 16852  0127DA  50E3               	movf	plusw1,w,c
 16853  0127DC  6E3E               	movwf	(btemp+8)^0,c
 16854  0127DE  6A3F               	clrf	(btemp+9)^0,c
 16855                           
 16856                           ;stkvar	_aexp @ sp[(-13)+11]
 16857  0127E0  0EFE               	movlw	-2
 16858  0127E2  50E3               	movf	plusw1,w,c
 16859  0127E4  263E               	addwf	(btemp+8)^0,f,c
 16860  0127E6  0E00               	movlw	0
 16861  0127E8  223F               	addwfc	(btemp+9)^0,f,c
 16862  0127EA  5040               	movf	(btemp+10)^0,w,c
 16863  0127EC  263E               	addwf	(btemp+8)^0,f,c
 16864  0127EE  5041               	movf	(btemp+11)^0,w,c
 16865  0127F0  223F               	addwfc	(btemp+9)^0,f,c
 16866                           
 16867                           ;stkvar	_temp @ sp[(-13)+8]
 16868  0127F2  0EFB               	movlw	-5
 16869  0127F4  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 16870  0127FA  0EFC               	movlw	-4
 16871  0127FC  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 16872  012802  D021               	goto	l6830
 16873  012804                     l6820:
 16874                           
 16875                           ;stkvar	_prod @ sp[(-13)+0]
 16876  012804  90D8               	bcf	status,0,c
 16877  012806  0EF3               	movlw	-13
 16878  012808  36E3               	rlcf	plusw1,f,c
 16879  01280A  0EF4               	movlw	-12
 16880  01280C  36E3               	rlcf	plusw1,f,c
 16881  01280E  0EF5               	movlw	-11
 16882  012810  36E3               	rlcf	plusw1,f,c
 16883  012812  0EF6               	movlw	-10
 16884  012814  36E3               	rlcf	plusw1,f,c
 16885                           
 16886                           ;stkvar	_grs @ sp[(-13)+4]
 16887  012816  0EFA               	movlw	-6
 16888  012818  AEE3               	btfss	plusw1,7,c
 16889  01281A  D002               	goto	l6826
 16890                           
 16891                           ;stkvar	_prod @ sp[(-13)+0]
 16892  01281C  0EF3               	movlw	-13
 16893  01281E  80E3               	bsf	plusw1,0,c
 16894  012820                     l6826:
 16895                           
 16896                           ;stkvar	_grs @ sp[(-13)+4]
 16897  012820  90D8               	bcf	status,0,c
 16898  012822  0EF7               	movlw	-9
 16899  012824  36E3               	rlcf	plusw1,f,c
 16900  012826  0EF8               	movlw	-8
 16901  012828  36E3               	rlcf	plusw1,f,c
 16902  01282A  0EF9               	movlw	-7
 16903  01282C  36E3               	rlcf	plusw1,f,c
 16904  01282E  0EFA               	movlw	-6
 16905  012830  36E3               	rlcf	plusw1,f,c
 16906                           
 16907                           ;stkvar	_temp @ sp[(-13)+8]
 16908  012832  50E1               	movf	fsr1l,w,c
 16909  012834  0FFB               	addlw	-5
 16910  012836  6ED9               	movwf	fsr2l,c
 16911  012838  50E2               	movf	fsr1h,w,c
 16912  01283A  6EDA               	movwf	fsr2h,c
 16913  01283C  0EFF               	movlw	255
 16914  01283E  22DA               	addwfc	fsr2h,f,c
 16915  012840  06DE               	decf	postinc2,f,c
 16916  012842  0E00               	movlw	0
 16917  012844  5ADD               	subwfb	postdec2,f,c
 16918  012846                     l6830:
 16919                           
 16920                           ;stkvar	_prod @ sp[(-13)+0]
 16921  012846  0EF5               	movlw	-11
 16922  012848  AEE3               	btfss	plusw1,7,c
 16923  01284A  D7DC               	goto	l6820
 16924                           
 16925                           ;stkvar	_aexp @ sp[(-13)+11]
 16926  01284C  0EFE               	movlw	-2
 16927  01284E  6AE3               	clrf	plusw1,c
 16928                           
 16929                           ;stkvar	_grs @ sp[(-13)+4]
 16930  012850  0EFA               	movlw	-6
 16931  012852  AEE3               	btfss	plusw1,7,c
 16932  012854  D020               	goto	l6844
 16933                           
 16934                           ;stkvar	_grs @ sp[(-13)+4]
 16935  012856  50E1               	movf	fsr1l,w,c
 16936  012858  0FF7               	addlw	-9
 16937  01285A  6ED9               	movwf	fsr2l,c
 16938  01285C  50E2               	movf	fsr1h,w,c
 16939  01285E  6EDA               	movwf	fsr2h,c
 16940  012860  0EFF               	movlw	255
 16941  012862  22DA               	addwfc	fsr2h,f,c
 16942  012864  0EFF               	movlw	255
 16943  012866  14DE               	andwf	postinc2,w,c
 16944  012868  6E3E               	movwf	(btemp+8)^0,c
 16945  01286A  0EFF               	movlw	255
 16946  01286C  14DE               	andwf	postinc2,w,c
 16947  01286E  6E3F               	movwf	(btemp+9)^0,c
 16948  012870  0EFF               	movlw	255
 16949  012872  14DE               	andwf	postinc2,w,c
 16950  012874  6E40               	movwf	(btemp+10)^0,c
 16951  012876  0E7F               	movlw	127
 16952  012878  14DE               	andwf	postinc2,w,c
 16953  01287A  6E41               	movwf	(btemp+11)^0,c
 16954  01287C  503E               	movf	(btemp+8)^0,w,c
 16955  01287E  103F               	iorwf	(btemp+9)^0,w,c
 16956  012880  1040               	iorwf	(btemp+10)^0,w,c
 16957  012882  1041               	iorwf	(btemp+11)^0,w,c
 16958  012884  B4D8               	btfsc	status,2,c
 16959  012886  D004               	goto	l6840
 16960  012888                     u6050:
 16961                           
 16962                           ;stkvar	_aexp @ sp[(-13)+11]
 16963  012888  0EFE               	movlw	-2
 16964  01288A  6AE3               	clrf	plusw1,c
 16965  01288C  2AE3               	incf	plusw1,f,c
 16966  01288E  D003               	goto	l6844
 16967  012890                     l6840:
 16968                           
 16969                           ;stkvar	_prod @ sp[(-13)+0]
 16970  012890  0EF3               	movlw	-13
 16971  012892  B0E3               	btfsc	plusw1,0,c
 16972  012894  D7F9               	goto	u6050
 16973  012896                     l6844:
 16974                           
 16975                           ;stkvar	_aexp @ sp[(-13)+11]
 16976  012896  0EFE               	movlw	-2
 16977  012898  50E3               	movf	plusw1,w,c
 16978  01289A  B4D8               	btfsc	status,2,c
 16979  01289C  D036               	goto	l6854
 16980                           
 16981                           ;stkvar	_prod @ sp[(-13)+0]
 16982  01289E  50E1               	movf	fsr1l,w,c
 16983  0128A0  0FF3               	addlw	-13
 16984  0128A2  6ED9               	movwf	fsr2l,c
 16985  0128A4  50E2               	movf	fsr1h,w,c
 16986  0128A6  6EDA               	movwf	fsr2h,c
 16987  0128A8  0EFF               	movlw	255
 16988  0128AA  22DA               	addwfc	fsr2h,f,c
 16989  0128AC  2ADE               	incf	postinc2,f,c
 16990  0128AE  0E00               	movlw	0
 16991  0128B0  22DE               	addwfc	postinc2,f,c
 16992  0128B2  22DE               	addwfc	postinc2,f,c
 16993  0128B4  22DE               	addwfc	postinc2,f,c
 16994                           
 16995                           ;stkvar	_prod @ sp[(-13)+0]
 16996  0128B6  0EF6               	movlw	-10
 16997  0128B8  A0E3               	btfss	plusw1,0,c
 16998  0128BA  D027               	goto	l6854
 16999  0128BC  0E01               	movlw	1
 17000  0128BE  6E41               	movwf	(btemp+11)^0,c
 17001                           
 17002                           ;stkvar	_prod @ sp[(-13)+0]
 17003  0128C0  50E1               	movf	fsr1l,w,c
 17004  0128C2  0FF3               	addlw	-13
 17005  0128C4  6ED9               	movwf	fsr2l,c
 17006  0128C6  50E2               	movf	fsr1h,w,c
 17007  0128C8  6EDA               	movwf	fsr2h,c
 17008  0128CA  0EFF               	movlw	255
 17009  0128CC  22DA               	addwfc	fsr2h,f,c
 17010  0128CE  2841               	incf	(btemp+11)^0,w,c
 17011  0128D0  52DE               	movf	postinc2,f,c
 17012  0128D2  D008               	goto	u6090
 17013  0128D4                     u6095:
 17014  0128D4  52DE               	movf	postinc2,f,c
 17015  0128D6  90D8               	bcf	status,0,c
 17016  0128D8  BEDC               	btfsc	preinc2,7,c
 17017  0128DA  80D8               	bsf	status,0,c
 17018  0128DC  32DD               	rrcf	postdec2,f,c
 17019  0128DE  32DD               	rrcf	postdec2,f,c
 17020  0128E0  32DD               	rrcf	postdec2,f,c
 17021  0128E2  32DE               	rrcf	postinc2,f,c
 17022  0128E4                     u6090:
 17023  0128E4  2EE8               	decfsz	wreg,f,c
 17024  0128E6  D7F6               	goto	u6095
 17025                           
 17026                           ;stkvar	_temp @ sp[(-13)+8]
 17027  0128E8  0EFB               	movlw	-5
 17028  0128EA  50E3               	movf	plusw1,w,c
 17029  0128EC  0F01               	addlw	1
 17030  0128EE  6E36               	movwf	btemp^0,c
 17031  0128F0  0EFB               	movlw	-5
 17032  0128F2  0060  F0DB  FFE3   	movff	btemp,plusw1
 17033  0128F8  6A36               	clrf	btemp^0,c
 17034  0128FA  0EFC               	movlw	-4
 17035  0128FC  50E3               	movf	plusw1,w,c
 17036  0128FE  2036               	addwfc	btemp^0,w,c
 17037  012900  6E36               	movwf	btemp^0,c
 17038  012902  0EFC               	movlw	-4
 17039  012904  0060  F0DB  FFE3   	movff	btemp,plusw1
 17040  01290A                     l6854:
 17041                           
 17042                           ;stkvar	_temp @ sp[(-13)+8]
 17043  01290A  0EFC               	movlw	-4
 17044  01290C  BEE3               	btfsc	plusw1,7,c
 17045  01290E  D020               	goto	l6858
 17046  012910  0EFC               	movlw	-4
 17047  012912  50E3               	movf	plusw1,w,c
 17048  012914  E104               	bnz	u6100
 17049  012916  0EFB               	movlw	-5
 17050  012918  28E3               	incf	plusw1,w,c
 17051  01291A  A0D8               	btfss	status,0,c
 17052  01291C  D019               	goto	l6858
 17053  01291E                     u6100:
 17054  01291E  0E00               	movlw	0
 17055  012920  6E3E               	movwf	(btemp+8)^0,c
 17056  012922  0E00               	movlw	0
 17057  012924  6E3F               	movwf	(btemp+9)^0,c
 17058  012926  0E80               	movlw	128
 17059  012928  6E40               	movwf	(btemp+10)^0,c
 17060  01292A  0E7F               	movlw	127
 17061  01292C  6E41               	movwf	(btemp+11)^0,c
 17062                           
 17063                           ;stkvar	_prod @ sp[(-13)+0]
 17064  01292E  0EF3               	movlw	-13
 17065  012930  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17066  012936  0EF4               	movlw	-12
 17067  012938  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17068  01293E  0EF5               	movlw	-11
 17069  012940  0060  F103  FFE3   	movff	btemp+10,plusw1
 17070  012946  0EF6               	movlw	-10
 17071  012948  0060  F107  FFE3   	movff	btemp+11,plusw1
 17072  01294E  D044               	goto	l6874
 17073  012950                     l6858:
 17074                           
 17075                           ;stkvar	_temp @ sp[(-13)+8]
 17076  012950  0EFC               	movlw	-4
 17077  012952  BEE3               	btfsc	plusw1,7,c
 17078  012954  D007               	goto	u6110
 17079  012956  0EFC               	movlw	-4
 17080  012958  50E3               	movf	plusw1,w,c
 17081  01295A  E10F               	bnz	l6864
 17082  01295C  0EFB               	movlw	-5
 17083  01295E  04E3               	decf	plusw1,w,c
 17084  012960  B0D8               	btfsc	status,0,c
 17085  012962  D00B               	goto	l6864
 17086  012964                     u6110:
 17087                           
 17088                           ;stkvar	_prod @ sp[(-13)+0]
 17089  012964  0EF3               	movlw	-13
 17090  012966  6AE3               	clrf	plusw1,c
 17091  012968  0EF4               	movlw	-12
 17092  01296A  6AE3               	clrf	plusw1,c
 17093  01296C  0EF5               	movlw	-11
 17094  01296E  6AE3               	clrf	plusw1,c
 17095  012970  0EF6               	movlw	-10
 17096  012972  6AE3               	clrf	plusw1,c
 17097                           
 17098                           ;stkvar	_sign @ sp[(-13)+12]
 17099  012974  0EFF               	movlw	-1
 17100  012976  6AE3               	clrf	plusw1,c
 17101  012978  D02F               	goto	l6874
 17102  01297A                     l6864:
 17103                           
 17104                           ;stkvar	_temp @ sp[(-13)+8]
 17105                           ;stkvar	_bexp @ sp[(-13)+10]
 17106  01297A  0EFB               	movlw	-5
 17107  01297C  006F FF8C  F036    	movff	plusw1,btemp
 17108  012982  0EFD               	movlw	-3
 17109  012984  0060  F0DB  FFE3   	movff	btemp,plusw1
 17110                           
 17111                           ;stkvar	_prod @ sp[(-13)+0]
 17112  01298A  50E1               	movf	fsr1l,w,c
 17113  01298C  0FF3               	addlw	-13
 17114  01298E  6ED9               	movwf	fsr2l,c
 17115  012990  50E2               	movf	fsr1h,w,c
 17116  012992  6EDA               	movwf	fsr2h,c
 17117  012994  0EFF               	movlw	255
 17118  012996  22DA               	addwfc	fsr2h,f,c
 17119  012998  0EFF               	movlw	255
 17120  01299A  16DE               	andwf	postinc2,f,c
 17121  01299C  0EFF               	movlw	255
 17122  01299E  16DE               	andwf	postinc2,f,c
 17123  0129A0  0E7F               	movlw	127
 17124  0129A2  16DE               	andwf	postinc2,f,c
 17125  0129A4  0E00               	movlw	0
 17126  0129A6  16DE               	andwf	postinc2,f,c
 17127                           
 17128                           ;stkvar	_bexp @ sp[(-13)+10]
 17129  0129A8  0EFD               	movlw	-3
 17130  0129AA  A0E3               	btfss	plusw1,0,c
 17131  0129AC  D008               	goto	l6872
 17132                           
 17133                           ;stkvar	_prod @ sp[(-13)+0]
 17134  0129AE  0EF5               	movlw	245
 17135  0129B0  24E1               	addwf	fsr1l,w,c
 17136  0129B2  6ED9               	movwf	fsr2l,c
 17137  0129B4  0EFF               	movlw	255
 17138  0129B6  20E2               	addwfc	fsr1h,w,c
 17139  0129B8  6EDA               	movwf	fsr2h,c
 17140  0129BA  0E00               	movlw	0
 17141  0129BC  8EDB               	bsf	plusw2,7,c
 17142  0129BE                     l6872:
 17143                           
 17144                           ;stkvar	_prod @ sp[(-13)+0]
 17145  0129BE  0EF6               	movlw	246
 17146  0129C0  24E1               	addwf	fsr1l,w,c
 17147  0129C2  6ED9               	movwf	fsr2l,c
 17148  0129C4  0EFF               	movlw	255
 17149  0129C6  20E2               	addwfc	fsr1h,w,c
 17150  0129C8  6EDA               	movwf	fsr2h,c
 17151                           
 17152                           ;stkvar	_bexp @ sp[(-13)+10]
 17153  0129CA  0EFD               	movlw	-3
 17154  0129CC  006F FF8C  F041    	movff	plusw1,btemp+11
 17155  0129D2  90D8               	bcf	status,0,c
 17156  0129D4  3041               	rrcf	(btemp+11)^0,w,c
 17157  0129D6  6EDF               	movwf	indf2,c
 17158  0129D8                     l6874:
 17159                           
 17160                           ;stkvar	_sign @ sp[(-13)+12]
 17161  0129D8  0EFF               	movlw	-1
 17162  0129DA  006F FF8C  F041    	movff	plusw1,btemp+11
 17163                           
 17164                           ;stkvar	_prod @ sp[(-13)+0]
 17165  0129E0  0EF6               	movlw	246
 17166  0129E2  24E1               	addwf	fsr1l,w,c
 17167  0129E4  6ED9               	movwf	fsr2l,c
 17168  0129E6  0EFF               	movlw	255
 17169  0129E8  20E2               	addwfc	fsr1h,w,c
 17170  0129EA  6EDA               	movwf	fsr2h,c
 17171  0129EC  5041               	movf	(btemp+11)^0,w,c
 17172  0129EE  12DF               	iorwf	indf2,f,c
 17173                           
 17174                           ;stkvar	_prod @ sp[(-13)+0]
 17175  0129F0  0EF3               	movlw	-13
 17176  0129F2  006F FF8C  F036    	movff	plusw1,btemp
 17177  0129F8  0EF4               	movlw	-12
 17178  0129FA  006F FF8C  F037    	movff	plusw1,btemp+1
 17179  012A00  0EF5               	movlw	-11
 17180  012A02  006F FF8C  F038    	movff	plusw1,btemp+2
 17181  012A08  0EF6               	movlw	-10
 17182  012A0A  006F FF8C  F039    	movff	plusw1,btemp+3
 17183  012A10                     l2631:
 17184                           
 17185                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17186  012A10  0EEB               	movlw	235
 17187  012A12  26E1               	addwf	fsr1l,f,c
 17188  012A14  0EFF               	movlw	255
 17189  012A16  22E2               	addwfc	fsr1h,f,c
 17190  012A18  0012               	return		;funcret
 17191  012A1A                     __end_of___flmul:
 17192                           	opt callstack 0
 17193                           
 17194 ;; *************** function ___flge *****************
 17195 ;; Defined at:
 17196 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;  ff1             4  [STACK] unsigned char 
 17199 ;;  ff2             4  [STACK] unsigned char 
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;		None
 17202 ;; Return value:  Size  Location     Type
 17203 ;;		None               void
 17204 ;; Registers used:
 17205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17215 ;;Total ram usage:        0 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:    6
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_efgtoa
 17222 ;; This function uses a reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text57
 17226  01690E                     __ptext57:
 17227                           	opt callstack 0
 17228  01690E                     ___flge:
 17229                           	opt callstack 17
 17230                           
 17231                           ;stkvar	_ff1 @ sp[(0)+-4]
 17232                           
 17233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17234                           ;incstack = 0
 17235  01690E  50E1               	movf	fsr1l,w,c
 17236  016910  0FFC               	addlw	-4
 17237  016912  6ED9               	movwf	fsr2l,c
 17238  016914  50E2               	movf	fsr1h,w,c
 17239  016916  6EDA               	movwf	fsr2h,c
 17240  016918  0EFF               	movlw	255
 17241  01691A  22DA               	addwfc	fsr2h,f,c
 17242  01691C  0E00               	movlw	0
 17243  01691E  14DE               	andwf	postinc2,w,c
 17244  016920  6E3E               	movwf	(btemp+8)^0,c
 17245  016922  0E00               	movlw	0
 17246  016924  14DE               	andwf	postinc2,w,c
 17247  016926  6E3F               	movwf	(btemp+9)^0,c
 17248  016928  0E80               	movlw	128
 17249  01692A  14DE               	andwf	postinc2,w,c
 17250  01692C  6E40               	movwf	(btemp+10)^0,c
 17251  01692E  0E7F               	movlw	127
 17252  016930  14DE               	andwf	postinc2,w,c
 17253  016932  6E41               	movwf	(btemp+11)^0,c
 17254  016934  503E               	movf	(btemp+8)^0,w,c
 17255  016936  103F               	iorwf	(btemp+9)^0,w,c
 17256  016938  1040               	iorwf	(btemp+10)^0,w,c
 17257  01693A  1041               	iorwf	(btemp+11)^0,w,c
 17258  01693C  A4D8               	btfss	status,2,c
 17259  01693E  D008               	goto	l6990
 17260                           
 17261                           ;stkvar	_ff1 @ sp[(0)+-4]
 17262  016940  0EFC               	movlw	-4
 17263  016942  6AE3               	clrf	plusw1,c
 17264  016944  0EFD               	movlw	-3
 17265  016946  6AE3               	clrf	plusw1,c
 17266  016948  0EFE               	movlw	-2
 17267  01694A  6AE3               	clrf	plusw1,c
 17268  01694C  0EFF               	movlw	-1
 17269  01694E  6AE3               	clrf	plusw1,c
 17270  016950                     l6990:
 17271                           
 17272                           ;stkvar	_ff2 @ sp[(0)+-8]
 17273  016950  50E1               	movf	fsr1l,w,c
 17274  016952  0FF8               	addlw	-8
 17275  016954  6ED9               	movwf	fsr2l,c
 17276  016956  50E2               	movf	fsr1h,w,c
 17277  016958  6EDA               	movwf	fsr2h,c
 17278  01695A  0EFF               	movlw	255
 17279  01695C  22DA               	addwfc	fsr2h,f,c
 17280  01695E  0E00               	movlw	0
 17281  016960  14DE               	andwf	postinc2,w,c
 17282  016962  6E3E               	movwf	(btemp+8)^0,c
 17283  016964  0E00               	movlw	0
 17284  016966  14DE               	andwf	postinc2,w,c
 17285  016968  6E3F               	movwf	(btemp+9)^0,c
 17286  01696A  0E80               	movlw	128
 17287  01696C  14DE               	andwf	postinc2,w,c
 17288  01696E  6E40               	movwf	(btemp+10)^0,c
 17289  016970  0E7F               	movlw	127
 17290  016972  14DE               	andwf	postinc2,w,c
 17291  016974  6E41               	movwf	(btemp+11)^0,c
 17292  016976  503E               	movf	(btemp+8)^0,w,c
 17293  016978  103F               	iorwf	(btemp+9)^0,w,c
 17294  01697A  1040               	iorwf	(btemp+10)^0,w,c
 17295  01697C  1041               	iorwf	(btemp+11)^0,w,c
 17296  01697E  A4D8               	btfss	status,2,c
 17297  016980  D008               	goto	l2276
 17298                           
 17299                           ;stkvar	_ff2 @ sp[(0)+-8]
 17300  016982  0EF8               	movlw	-8
 17301  016984  6AE3               	clrf	plusw1,c
 17302  016986  0EF9               	movlw	-7
 17303  016988  6AE3               	clrf	plusw1,c
 17304  01698A  0EFA               	movlw	-6
 17305  01698C  6AE3               	clrf	plusw1,c
 17306  01698E  0EFB               	movlw	-5
 17307  016990  6AE3               	clrf	plusw1,c
 17308  016992                     l2276:
 17309                           
 17310                           ;stkvar	_ff1 @ sp[(0)+-4]
 17311  016992  0EFF               	movlw	-1
 17312  016994  AEE3               	btfss	plusw1,7,c
 17313  016996  D024               	goto	l6996
 17314                           
 17315                           ;stkvar	_ff1 @ sp[(0)+-4]
 17316  016998  0E00               	movlw	0
 17317  01699A  6E3E               	movwf	(btemp+8)^0,c
 17318  01699C  0E00               	movlw	0
 17319  01699E  6E3F               	movwf	(btemp+9)^0,c
 17320  0169A0  0E00               	movlw	0
 17321  0169A2  6E40               	movwf	(btemp+10)^0,c
 17322  0169A4  0E80               	movlw	128
 17323  0169A6  6E41               	movwf	(btemp+11)^0,c
 17324  0169A8  0EFC               	movlw	-4
 17325  0169AA  50E3               	movf	plusw1,w,c
 17326  0169AC  5E3E               	subwf	(btemp+8)^0,f,c
 17327  0169AE  0EFD               	movlw	-3
 17328  0169B0  50E3               	movf	plusw1,w,c
 17329  0169B2  5A3F               	subwfb	(btemp+9)^0,f,c
 17330  0169B4  0EFE               	movlw	-2
 17331  0169B6  50E3               	movf	plusw1,w,c
 17332  0169B8  5A40               	subwfb	(btemp+10)^0,f,c
 17333  0169BA  0EFF               	movlw	-1
 17334  0169BC  50E3               	movf	plusw1,w,c
 17335  0169BE  5A41               	subwfb	(btemp+11)^0,f,c
 17336                           
 17337                           ;stkvar	_ff1 @ sp[(0)+-4]
 17338  0169C0  0EFC               	movlw	-4
 17339  0169C2  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17340  0169C8  0EFD               	movlw	-3
 17341  0169CA  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17342  0169D0  0EFE               	movlw	-2
 17343  0169D2  0060  F103  FFE3   	movff	btemp+10,plusw1
 17344  0169D8  0EFF               	movlw	-1
 17345  0169DA  0060  F107  FFE3   	movff	btemp+11,plusw1
 17346  0169E0                     l6996:
 17347                           
 17348                           ;stkvar	_ff2 @ sp[(0)+-8]
 17349  0169E0  0EFB               	movlw	-5
 17350  0169E2  AEE3               	btfss	plusw1,7,c
 17351  0169E4  D024               	goto	l7000
 17352                           
 17353                           ;stkvar	_ff2 @ sp[(0)+-8]
 17354  0169E6  0E00               	movlw	0
 17355  0169E8  6E3E               	movwf	(btemp+8)^0,c
 17356  0169EA  0E00               	movlw	0
 17357  0169EC  6E3F               	movwf	(btemp+9)^0,c
 17358  0169EE  0E00               	movlw	0
 17359  0169F0  6E40               	movwf	(btemp+10)^0,c
 17360  0169F2  0E80               	movlw	128
 17361  0169F4  6E41               	movwf	(btemp+11)^0,c
 17362  0169F6  0EF8               	movlw	-8
 17363  0169F8  50E3               	movf	plusw1,w,c
 17364  0169FA  5E3E               	subwf	(btemp+8)^0,f,c
 17365  0169FC  0EF9               	movlw	-7
 17366  0169FE  50E3               	movf	plusw1,w,c
 17367  016A00  5A3F               	subwfb	(btemp+9)^0,f,c
 17368  016A02  0EFA               	movlw	-6
 17369  016A04  50E3               	movf	plusw1,w,c
 17370  016A06  5A40               	subwfb	(btemp+10)^0,f,c
 17371  016A08  0EFB               	movlw	-5
 17372  016A0A  50E3               	movf	plusw1,w,c
 17373  016A0C  5A41               	subwfb	(btemp+11)^0,f,c
 17374                           
 17375                           ;stkvar	_ff2 @ sp[(0)+-8]
 17376  016A0E  0EF8               	movlw	-8
 17377  016A10  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17378  016A16  0EF9               	movlw	-7
 17379  016A18  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17380  016A1E  0EFA               	movlw	-6
 17381  016A20  0060  F103  FFE3   	movff	btemp+10,plusw1
 17382  016A26  0EFB               	movlw	-5
 17383  016A28  0060  F107  FFE3   	movff	btemp+11,plusw1
 17384  016A2E                     l7000:
 17385                           
 17386                           ;stkvar	_ff1 @ sp[(0)+-4]
 17387  016A2E  0EFF               	movlw	-1
 17388  016A30  7EE3               	btg	plusw1,7,c
 17389                           
 17390                           ;stkvar	_ff2 @ sp[(0)+-8]
 17391  016A32  0EFB               	movlw	-5
 17392  016A34  7EE3               	btg	plusw1,7,c
 17393                           
 17394                           ;stkvar	_ff2 @ sp[(0)+-8]
 17395                           ;stkvar	_ff1 @ sp[(0)+-4]
 17396  016A36  50E1               	movf	fsr1l,w,c
 17397  016A38  0FFC               	addlw	-4
 17398  016A3A  6ED9               	movwf	fsr2l,c
 17399  016A3C  50E2               	movf	fsr1h,w,c
 17400  016A3E  6EDA               	movwf	fsr2h,c
 17401  016A40  0EFF               	movlw	255
 17402  016A42  22DA               	addwfc	fsr2h,f,c
 17403  016A44  0EF8               	movlw	-8
 17404  016A46  50E3               	movf	plusw1,w,c
 17405  016A48  5CDE               	subwf	postinc2,w,c
 17406  016A4A  0EF9               	movlw	-7
 17407  016A4C  50E3               	movf	plusw1,w,c
 17408  016A4E  58DE               	subwfb	postinc2,w,c
 17409  016A50  0EFA               	movlw	-6
 17410  016A52  50E3               	movf	plusw1,w,c
 17411  016A54  58DE               	subwfb	postinc2,w,c
 17412  016A56  0EFB               	movlw	-5
 17413  016A58  50E3               	movf	plusw1,w,c
 17414  016A5A  58DE               	subwfb	postinc2,w,c
 17415  016A5C  B0D8               	btfsc	status,0,c
 17416  016A5E  D002               	goto	l7008
 17417  016A60  9036               	bcf	btemp& (0+255),0,c
 17418  016A62  D001               	goto	l2283
 17419  016A64                     l7008:
 17420  016A64  8036               	bsf	btemp& (0+255),0,c
 17421  016A66                     l2283:
 17422                           
 17423                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17424  016A66  0EF8               	movlw	248
 17425  016A68  26E1               	addwf	fsr1l,f,c
 17426  016A6A  0EFF               	movlw	255
 17427  016A6C  22E2               	addwfc	fsr1h,f,c
 17428  016A6E  0012               	return		;funcret
 17429  016A70                     __end_of___flge:
 17430                           	opt callstack 0
 17431                           
 17432 ;; *************** function ___fleq *****************
 17433 ;; Defined at:
 17434 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;  ff1             4  [STACK] unsigned char 
 17437 ;;  ff2             4  [STACK] unsigned char 
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;		None
 17440 ;; Return value:  Size  Location     Type
 17441 ;;		None               void
 17442 ;; Registers used:
 17443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17453 ;;Total ram usage:        0 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    6
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_efgtoa
 17460 ;; This function uses a reentrant model
 17461 ;;
 17462                           
 17463                           	psect	text58
 17464  017618                     __ptext58:
 17465                           	opt callstack 0
 17466  017618                     ___fleq:
 17467                           	opt callstack 17
 17468                           
 17469                           ;stkvar	_ff1 @ sp[(0)+-4]
 17470                           
 17471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17472                           ;incstack = 0
 17473  017618  50E1               	movf	fsr1l,w,c
 17474  01761A  0FFC               	addlw	-4
 17475  01761C  6ED9               	movwf	fsr2l,c
 17476  01761E  50E2               	movf	fsr1h,w,c
 17477  017620  6EDA               	movwf	fsr2h,c
 17478  017622  0EFF               	movlw	255
 17479  017624  22DA               	addwfc	fsr2h,f,c
 17480  017626  0E00               	movlw	0
 17481  017628  14DE               	andwf	postinc2,w,c
 17482  01762A  6E3E               	movwf	(btemp+8)^0,c
 17483  01762C  0E00               	movlw	0
 17484  01762E  14DE               	andwf	postinc2,w,c
 17485  017630  6E3F               	movwf	(btemp+9)^0,c
 17486  017632  0E80               	movlw	128
 17487  017634  14DE               	andwf	postinc2,w,c
 17488  017636  6E40               	movwf	(btemp+10)^0,c
 17489  017638  0E7F               	movlw	127
 17490  01763A  14DE               	andwf	postinc2,w,c
 17491  01763C  6E41               	movwf	(btemp+11)^0,c
 17492  01763E  503E               	movf	(btemp+8)^0,w,c
 17493  017640  103F               	iorwf	(btemp+9)^0,w,c
 17494  017642  1040               	iorwf	(btemp+10)^0,w,c
 17495  017644  1041               	iorwf	(btemp+11)^0,w,c
 17496  017646  A4D8               	btfss	status,2,c
 17497  017648  D008               	goto	l6974
 17498                           
 17499                           ;stkvar	_ff1 @ sp[(0)+-4]
 17500  01764A  0EFC               	movlw	-4
 17501  01764C  6AE3               	clrf	plusw1,c
 17502  01764E  0EFD               	movlw	-3
 17503  017650  6AE3               	clrf	plusw1,c
 17504  017652  0EFE               	movlw	-2
 17505  017654  6AE3               	clrf	plusw1,c
 17506  017656  0EFF               	movlw	-1
 17507  017658  6AE3               	clrf	plusw1,c
 17508  01765A                     l6974:
 17509                           
 17510                           ;stkvar	_ff2 @ sp[(0)+-8]
 17511  01765A  50E1               	movf	fsr1l,w,c
 17512  01765C  0FF8               	addlw	-8
 17513  01765E  6ED9               	movwf	fsr2l,c
 17514  017660  50E2               	movf	fsr1h,w,c
 17515  017662  6EDA               	movwf	fsr2h,c
 17516  017664  0EFF               	movlw	255
 17517  017666  22DA               	addwfc	fsr2h,f,c
 17518  017668  0E00               	movlw	0
 17519  01766A  14DE               	andwf	postinc2,w,c
 17520  01766C  6E3E               	movwf	(btemp+8)^0,c
 17521  01766E  0E00               	movlw	0
 17522  017670  14DE               	andwf	postinc2,w,c
 17523  017672  6E3F               	movwf	(btemp+9)^0,c
 17524  017674  0E80               	movlw	128
 17525  017676  14DE               	andwf	postinc2,w,c
 17526  017678  6E40               	movwf	(btemp+10)^0,c
 17527  01767A  0E7F               	movlw	127
 17528  01767C  14DE               	andwf	postinc2,w,c
 17529  01767E  6E41               	movwf	(btemp+11)^0,c
 17530  017680  503E               	movf	(btemp+8)^0,w,c
 17531  017682  103F               	iorwf	(btemp+9)^0,w,c
 17532  017684  1040               	iorwf	(btemp+10)^0,w,c
 17533  017686  1041               	iorwf	(btemp+11)^0,w,c
 17534  017688  A4D8               	btfss	status,2,c
 17535  01768A  D008               	goto	l6978
 17536                           
 17537                           ;stkvar	_ff2 @ sp[(0)+-8]
 17538  01768C  0EF8               	movlw	-8
 17539  01768E  6AE3               	clrf	plusw1,c
 17540  017690  0EF9               	movlw	-7
 17541  017692  6AE3               	clrf	plusw1,c
 17542  017694  0EFA               	movlw	-6
 17543  017696  6AE3               	clrf	plusw1,c
 17544  017698  0EFB               	movlw	-5
 17545  01769A  6AE3               	clrf	plusw1,c
 17546  01769C                     l6978:
 17547                           
 17548                           ;stkvar	_ff2 @ sp[(0)+-8]
 17549                           ;stkvar	_ff1 @ sp[(0)+-4]
 17550  01769C  50E1               	movf	fsr1l,w,c
 17551  01769E  0FFC               	addlw	-4
 17552  0176A0  6ED9               	movwf	fsr2l,c
 17553  0176A2  50E2               	movf	fsr1h,w,c
 17554  0176A4  6EDA               	movwf	fsr2h,c
 17555  0176A6  0EFF               	movlw	255
 17556  0176A8  22DA               	addwfc	fsr2h,f,c
 17557  0176AA  0EF8               	movlw	-8
 17558  0176AC  50E3               	movf	plusw1,w,c
 17559  0176AE  18DE               	xorwf	postinc2,w,c
 17560  0176B0  E10D               	bnz	u6290
 17561  0176B2  0EF9               	movlw	-7
 17562  0176B4  50E3               	movf	plusw1,w,c
 17563  0176B6  18DE               	xorwf	postinc2,w,c
 17564  0176B8  E109               	bnz	u6290
 17565  0176BA  0EFA               	movlw	-6
 17566  0176BC  50E3               	movf	plusw1,w,c
 17567  0176BE  18DE               	xorwf	postinc2,w,c
 17568  0176C0  E105               	bnz	u6290
 17569  0176C2  0EFB               	movlw	-5
 17570  0176C4  50E3               	movf	plusw1,w,c
 17571  0176C6  18DE               	xorwf	postinc2,w,c
 17572  0176C8  B4D8               	btfsc	status,2,c
 17573  0176CA  D002               	goto	l6982
 17574  0176CC                     u6290:
 17575  0176CC  9036               	bcf	btemp& (0+255),0,c
 17576  0176CE  D001               	goto	l2272
 17577  0176D0                     l6982:
 17578  0176D0  8036               	bsf	btemp& (0+255),0,c
 17579  0176D2                     l2272:
 17580                           
 17581                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17582  0176D2  0EF8               	movlw	248
 17583  0176D4  26E1               	addwf	fsr1l,f,c
 17584  0176D6  0EFF               	movlw	255
 17585  0176D8  22E2               	addwfc	fsr1h,f,c
 17586  0176DA  0012               	return		;funcret
 17587  0176DC                     __end_of___fleq:
 17588                           	opt callstack 0
 17589                           
 17590 ;; *************** function ___fldiv *****************
 17591 ;; Defined at:
 17592 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  b               4  [STACK] unsigned char 
 17595 ;;  a               4  [STACK] unsigned char 
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;  grs             4  [STACK] unsigned long 
 17598 ;;  rem             4  [STACK] unsigned long 
 17599 ;;  new_exp         2  [STACK] short 
 17600 ;;  aexp            1  [STACK] unsigned char 
 17601 ;;  bexp            1  [STACK] unsigned char 
 17602 ;;  sign            1  [STACK] unsigned char 
 17603 ;; Return value:  Size  Location     Type
 17604 ;;                  4  [STACK] unsigned char 
 17605 ;; Registers used:
 17606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17607 ;; Tracked objects:
 17608 ;;		On entry : 0/0
 17609 ;;		On exit  : 0/0
 17610 ;;		Unchanged: 0/0
 17611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17616 ;;Total ram usage:        0 bytes
 17617 ;; Hardware stack levels used:    1
 17618 ;; Hardware stack levels required when called:    6
 17619 ;; This function calls:
 17620 ;;		Nothing
 17621 ;; This function is called by:
 17622 ;;		_conv_raw_result
 17623 ;;		_efgtoa
 17624 ;; This function uses a reentrant model
 17625 ;;
 17626                           
 17627                           	psect	text59
 17628  01375C                     __ptext59:
 17629                           	opt callstack 0
 17630  01375C                     ___fldiv:
 17631                           	opt callstack 0
 17632                           
 17633                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17634  01375C  0E0D               	movlw	13
 17635  01375E  26E1               	addwf	fsr1l,f,c
 17636  013760  0E00               	movlw	0
 17637  013762  22E2               	addwfc	fsr1h,f,c
 17638                           
 17639                           ;stkvar	_b @ sp[(-13)+-4]
 17640                           
 17641                           ;incstack = 0
 17642  013764  0EF2               	movlw	242
 17643  013766  24E1               	addwf	fsr1l,w,c
 17644  013768  6ED9               	movwf	fsr2l,c
 17645  01376A  0EFF               	movlw	255
 17646  01376C  20E2               	addwfc	fsr1h,w,c
 17647  01376E  6EDA               	movwf	fsr2h,c
 17648  013770  50DF               	movf	indf2,w,c
 17649  013772  6E41               	movwf	(btemp+11)^0,c
 17650  013774  0E80               	movlw	128
 17651  013776  1641               	andwf	(btemp+11)^0,f,c
 17652                           
 17653                           ;stkvar	_sign @ sp[(-13)+12]
 17654  013778  0EFF               	movlw	-1
 17655  01377A  0060  F107  FFE3   	movff	btemp+11,plusw1
 17656                           
 17657                           ;stkvar	_b @ sp[(-13)+-4]
 17658  013780  0EF2               	movlw	242
 17659  013782  24E1               	addwf	fsr1l,w,c
 17660  013784  6ED9               	movwf	fsr2l,c
 17661  013786  0EFF               	movlw	255
 17662  013788  20E2               	addwfc	fsr1h,w,c
 17663  01378A  6EDA               	movwf	fsr2h,c
 17664  01378C  50DF               	movf	indf2,w,c
 17665  01378E  6E41               	movwf	(btemp+11)^0,c
 17666  013790  90D8               	bcf	status,0,c
 17667  013792  3441               	rlcf	(btemp+11)^0,w,c
 17668  013794  6E40               	movwf	(btemp+10)^0,c
 17669                           
 17670                           ;stkvar	_bexp @ sp[(-13)+11]
 17671  013796  0EFE               	movlw	-2
 17672  013798  0060  F103  FFE3   	movff	btemp+10,plusw1
 17673                           
 17674                           ;stkvar	_b @ sp[(-13)+-4]
 17675  01379E  0EF1               	movlw	241
 17676  0137A0  24E1               	addwf	fsr1l,w,c
 17677  0137A2  6ED9               	movwf	fsr2l,c
 17678  0137A4  0EFF               	movlw	255
 17679  0137A6  20E2               	addwfc	fsr1h,w,c
 17680  0137A8  6EDA               	movwf	fsr2h,c
 17681  0137AA  AEDF               	btfss	indf2,7,c
 17682  0137AC  D002               	goto	l6576
 17683                           
 17684                           ;stkvar	_bexp @ sp[(-13)+11]
 17685  0137AE  0EFE               	movlw	-2
 17686  0137B0  80E3               	bsf	plusw1,0,c
 17687  0137B2                     l6576:
 17688                           
 17689                           ;stkvar	_bexp @ sp[(-13)+11]
 17690  0137B2  0EFE               	movlw	-2
 17691  0137B4  50E3               	movf	plusw1,w,c
 17692  0137B6  B4D8               	btfsc	status,2,c
 17693  0137B8  D027               	goto	l6586
 17694                           
 17695                           ;stkvar	_bexp @ sp[(-13)+11]
 17696  0137BA  0EFE               	movlw	-2
 17697  0137BC  28E3               	incf	plusw1,w,c
 17698  0137BE  A4D8               	btfss	status,2,c
 17699  0137C0  D018               	goto	l6582
 17700  0137C2  0E00               	movlw	0
 17701  0137C4  6E3E               	movwf	(btemp+8)^0,c
 17702  0137C6  0E00               	movlw	0
 17703  0137C8  6E3F               	movwf	(btemp+9)^0,c
 17704  0137CA  0E00               	movlw	0
 17705  0137CC  6E40               	movwf	(btemp+10)^0,c
 17706  0137CE  0E00               	movlw	0
 17707  0137D0  6E41               	movwf	(btemp+11)^0,c
 17708                           
 17709                           ;stkvar	_b @ sp[(-13)+-4]
 17710  0137D2  0EEF               	movlw	-17
 17711  0137D4  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17712  0137DA  0EF0               	movlw	-16
 17713  0137DC  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17714  0137E2  0EF1               	movlw	-15
 17715  0137E4  0060  F103  FFE3   	movff	btemp+10,plusw1
 17716  0137EA  0EF2               	movlw	-14
 17717  0137EC  0060  F107  FFE3   	movff	btemp+11,plusw1
 17718  0137F2                     l6582:
 17719                           
 17720                           ;stkvar	_b @ sp[(-13)+-4]
 17721  0137F2  0EF1               	movlw	-15
 17722  0137F4  8EE3               	bsf	plusw1,7,c
 17723                           
 17724                           ;stkvar	_b @ sp[(-13)+-4]
 17725  0137F6  0EF2               	movlw	242
 17726  0137F8  24E1               	addwf	fsr1l,w,c
 17727  0137FA  6ED9               	movwf	fsr2l,c
 17728  0137FC  0EFF               	movlw	255
 17729  0137FE  20E2               	addwfc	fsr1h,w,c
 17730  013800  6EDA               	movwf	fsr2h,c
 17731  013802  0E00               	movlw	0
 17732  013804  6EDF               	movwf	indf2,c
 17733  013806  D018               	goto	l6588
 17734  013808                     l6586:
 17735  013808  0E00               	movlw	0
 17736  01380A  6E3E               	movwf	(btemp+8)^0,c
 17737  01380C  0E00               	movlw	0
 17738  01380E  6E3F               	movwf	(btemp+9)^0,c
 17739  013810  0E00               	movlw	0
 17740  013812  6E40               	movwf	(btemp+10)^0,c
 17741  013814  0E00               	movlw	0
 17742  013816  6E41               	movwf	(btemp+11)^0,c
 17743                           
 17744                           ;stkvar	_b @ sp[(-13)+-4]
 17745  013818  0EEF               	movlw	-17
 17746  01381A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17747  013820  0EF0               	movlw	-16
 17748  013822  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17749  013828  0EF1               	movlw	-15
 17750  01382A  0060  F103  FFE3   	movff	btemp+10,plusw1
 17751  013830  0EF2               	movlw	-14
 17752  013832  0060  F107  FFE3   	movff	btemp+11,plusw1
 17753  013838                     l6588:
 17754                           
 17755                           ;stkvar	_a @ sp[(-13)+-8]
 17756  013838  0EEE               	movlw	238
 17757  01383A  24E1               	addwf	fsr1l,w,c
 17758  01383C  6ED9               	movwf	fsr2l,c
 17759  01383E  0EFF               	movlw	255
 17760  013840  20E2               	addwfc	fsr1h,w,c
 17761  013842  6EDA               	movwf	fsr2h,c
 17762  013844  50DF               	movf	indf2,w,c
 17763  013846  6E41               	movwf	(btemp+11)^0,c
 17764  013848  0E80               	movlw	128
 17765  01384A  1641               	andwf	(btemp+11)^0,f,c
 17766                           
 17767                           ;stkvar	_sign @ sp[(-13)+12]
 17768  01384C  50E1               	movf	fsr1l,w,c
 17769  01384E  0FFF               	addlw	-1
 17770  013850  6ED9               	movwf	fsr2l,c
 17771  013852  50E2               	movf	fsr1h,w,c
 17772  013854  6EDA               	movwf	fsr2h,c
 17773  013856  0EFF               	movlw	255
 17774  013858  22DA               	addwfc	fsr2h,f,c
 17775  01385A  5041               	movf	(btemp+11)^0,w,c
 17776  01385C  1ADF               	xorwf	indf2,f,c
 17777                           
 17778                           ;stkvar	_a @ sp[(-13)+-8]
 17779  01385E  0EEE               	movlw	238
 17780  013860  24E1               	addwf	fsr1l,w,c
 17781  013862  6ED9               	movwf	fsr2l,c
 17782  013864  0EFF               	movlw	255
 17783  013866  20E2               	addwfc	fsr1h,w,c
 17784  013868  6EDA               	movwf	fsr2h,c
 17785  01386A  50DF               	movf	indf2,w,c
 17786  01386C  6E41               	movwf	(btemp+11)^0,c
 17787  01386E  90D8               	bcf	status,0,c
 17788  013870  3441               	rlcf	(btemp+11)^0,w,c
 17789  013872  6E40               	movwf	(btemp+10)^0,c
 17790                           
 17791                           ;stkvar	_aexp @ sp[(-13)+10]
 17792  013874  0EFD               	movlw	-3
 17793  013876  0060  F103  FFE3   	movff	btemp+10,plusw1
 17794                           
 17795                           ;stkvar	_a @ sp[(-13)+-8]
 17796  01387C  0EED               	movlw	237
 17797  01387E  24E1               	addwf	fsr1l,w,c
 17798  013880  6ED9               	movwf	fsr2l,c
 17799  013882  0EFF               	movlw	255
 17800  013884  20E2               	addwfc	fsr1h,w,c
 17801  013886  6EDA               	movwf	fsr2h,c
 17802  013888  AEDF               	btfss	indf2,7,c
 17803  01388A  D002               	goto	l6596
 17804                           
 17805                           ;stkvar	_aexp @ sp[(-13)+10]
 17806  01388C  0EFD               	movlw	-3
 17807  01388E  80E3               	bsf	plusw1,0,c
 17808  013890                     l6596:
 17809                           
 17810                           ;stkvar	_aexp @ sp[(-13)+10]
 17811  013890  0EFD               	movlw	-3
 17812  013892  50E3               	movf	plusw1,w,c
 17813  013894  B4D8               	btfsc	status,2,c
 17814  013896  D027               	goto	l6606
 17815                           
 17816                           ;stkvar	_aexp @ sp[(-13)+10]
 17817  013898  0EFD               	movlw	-3
 17818  01389A  28E3               	incf	plusw1,w,c
 17819  01389C  A4D8               	btfss	status,2,c
 17820  01389E  D018               	goto	l6602
 17821  0138A0  0E00               	movlw	0
 17822  0138A2  6E3E               	movwf	(btemp+8)^0,c
 17823  0138A4  0E00               	movlw	0
 17824  0138A6  6E3F               	movwf	(btemp+9)^0,c
 17825  0138A8  0E00               	movlw	0
 17826  0138AA  6E40               	movwf	(btemp+10)^0,c
 17827  0138AC  0E00               	movlw	0
 17828  0138AE  6E41               	movwf	(btemp+11)^0,c
 17829                           
 17830                           ;stkvar	_a @ sp[(-13)+-8]
 17831  0138B0  0EEB               	movlw	-21
 17832  0138B2  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17833  0138B8  0EEC               	movlw	-20
 17834  0138BA  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17835  0138C0  0EED               	movlw	-19
 17836  0138C2  0060  F103  FFE3   	movff	btemp+10,plusw1
 17837  0138C8  0EEE               	movlw	-18
 17838  0138CA  0060  F107  FFE3   	movff	btemp+11,plusw1
 17839  0138D0                     l6602:
 17840                           
 17841                           ;stkvar	_a @ sp[(-13)+-8]
 17842  0138D0  0EED               	movlw	-19
 17843  0138D2  8EE3               	bsf	plusw1,7,c
 17844                           
 17845                           ;stkvar	_a @ sp[(-13)+-8]
 17846  0138D4  0EEE               	movlw	238
 17847  0138D6  24E1               	addwf	fsr1l,w,c
 17848  0138D8  6ED9               	movwf	fsr2l,c
 17849  0138DA  0EFF               	movlw	255
 17850  0138DC  20E2               	addwfc	fsr1h,w,c
 17851  0138DE  6EDA               	movwf	fsr2h,c
 17852  0138E0  0E00               	movlw	0
 17853  0138E2  6EDF               	movwf	indf2,c
 17854  0138E4  D018               	goto	l6608
 17855  0138E6                     l6606:
 17856  0138E6  0E00               	movlw	0
 17857  0138E8  6E3E               	movwf	(btemp+8)^0,c
 17858  0138EA  0E00               	movlw	0
 17859  0138EC  6E3F               	movwf	(btemp+9)^0,c
 17860  0138EE  0E00               	movlw	0
 17861  0138F0  6E40               	movwf	(btemp+10)^0,c
 17862  0138F2  0E00               	movlw	0
 17863  0138F4  6E41               	movwf	(btemp+11)^0,c
 17864                           
 17865                           ;stkvar	_a @ sp[(-13)+-8]
 17866  0138F6  0EEB               	movlw	-21
 17867  0138F8  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17868  0138FE  0EEC               	movlw	-20
 17869  013900  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17870  013906  0EED               	movlw	-19
 17871  013908  0060  F103  FFE3   	movff	btemp+10,plusw1
 17872  01390E  0EEE               	movlw	-18
 17873  013910  0060  F107  FFE3   	movff	btemp+11,plusw1
 17874  013916                     l6608:
 17875                           
 17876                           ;stkvar	_a @ sp[(-13)+-8]
 17877  013916  0EEB               	movlw	-21
 17878  013918  50E3               	movf	plusw1,w,c
 17879  01391A  E139               	bnz	l6620
 17880  01391C  0EEC               	movlw	-20
 17881  01391E  50E3               	movf	plusw1,w,c
 17882  013920  E136               	bnz	l6620
 17883  013922  0EED               	movlw	-19
 17884  013924  50E3               	movf	plusw1,w,c
 17885  013926  E133               	bnz	l6620
 17886  013928  0EEE               	movlw	-18
 17887  01392A  50E3               	movf	plusw1,w,c
 17888  01392C  A4D8               	btfss	status,2,c
 17889  01392E  D02F               	goto	l6620
 17890                           
 17891                           ;stkvar	_b @ sp[(-13)+-4]
 17892  013930  0EEF               	movlw	-17
 17893  013932  6AE3               	clrf	plusw1,c
 17894  013934  0EF0               	movlw	-16
 17895  013936  6AE3               	clrf	plusw1,c
 17896  013938  0EF1               	movlw	-15
 17897  01393A  6AE3               	clrf	plusw1,c
 17898  01393C  0EF2               	movlw	-14
 17899  01393E  6AE3               	clrf	plusw1,c
 17900                           
 17901                           ;stkvar	_b @ sp[(-13)+-4]
 17902  013940  0EF1               	movlw	241
 17903  013942  24E1               	addwf	fsr1l,w,c
 17904  013944  6ED9               	movwf	fsr2l,c
 17905  013946  0EFF               	movlw	255
 17906  013948  20E2               	addwfc	fsr1h,w,c
 17907  01394A  6EDA               	movwf	fsr2h,c
 17908  01394C  0E80               	movlw	128
 17909  01394E  12DE               	iorwf	postinc2,f,c
 17910  013950  0E7F               	movlw	127
 17911  013952  12DD               	iorwf	postdec2,f,c
 17912  013954                     l6614:
 17913                           
 17914                           ;stkvar	_sign @ sp[(-13)+12]
 17915  013954  0EFF               	movlw	-1
 17916  013956  006F FF8C  F041    	movff	plusw1,btemp+11
 17917                           
 17918                           ;stkvar	_b @ sp[(-13)+-4]
 17919  01395C  0EF2               	movlw	242
 17920  01395E  24E1               	addwf	fsr1l,w,c
 17921  013960  6ED9               	movwf	fsr2l,c
 17922  013962  0EFF               	movlw	255
 17923  013964  20E2               	addwfc	fsr1h,w,c
 17924  013966  6EDA               	movwf	fsr2h,c
 17925  013968  5041               	movf	(btemp+11)^0,w,c
 17926  01396A  12DF               	iorwf	indf2,f,c
 17927                           
 17928                           ;stkvar	_b @ sp[(-13)+-4]
 17929  01396C  0EEF               	movlw	-17
 17930  01396E  006F FF8C  F036    	movff	plusw1,btemp
 17931  013974  0EF0               	movlw	-16
 17932  013976  006F FF8C  F037    	movff	plusw1,btemp+1
 17933  01397C  0EF1               	movlw	-15
 17934  01397E  006F FF8C  F038    	movff	plusw1,btemp+2
 17935  013984  0EF2               	movlw	-14
 17936  013986  006F FF8C  F039    	movff	plusw1,btemp+3
 17937  01398C  D19F               	goto	l2595
 17938  01398E                     l6620:
 17939                           
 17940                           ;stkvar	_bexp @ sp[(-13)+11]
 17941  01398E  0EFE               	movlw	-2
 17942  013990  50E3               	movf	plusw1,w,c
 17943  013992  A4D8               	btfss	status,2,c
 17944  013994  D009               	goto	l6628
 17945  013996  0E00               	movlw	0
 17946  013998  6E36               	movwf	btemp^0,c
 17947  01399A  0E00               	movlw	0
 17948  01399C  6E37               	movwf	(btemp+1)^0,c
 17949  01399E  0E00               	movlw	0
 17950  0139A0  6E38               	movwf	(btemp+2)^0,c
 17951  0139A2  0E00               	movlw	0
 17952  0139A4  6E39               	movwf	(btemp+3)^0,c
 17953  0139A6  D192               	goto	l2595
 17954  0139A8                     l6628:
 17955                           
 17956                           ;stkvar	_bexp @ sp[(-13)+11]
 17957  0139A8  0EFE               	movlw	-2
 17958  0139AA  50E3               	movf	plusw1,w,c
 17959  0139AC  6E40               	movwf	(btemp+10)^0,c
 17960  0139AE  6A41               	clrf	(btemp+11)^0,c
 17961                           
 17962                           ;stkvar	_aexp @ sp[(-13)+10]
 17963  0139B0  0EFD               	movlw	-3
 17964  0139B2  50E3               	movf	plusw1,w,c
 17965  0139B4  5E40               	subwf	(btemp+10)^0,f,c
 17966  0139B6  0E00               	movlw	0
 17967  0139B8  5A41               	subwfb	(btemp+11)^0,f,c
 17968  0139BA  0E7F               	movlw	127
 17969  0139BC  2640               	addwf	(btemp+10)^0,f,c
 17970  0139BE  0E00               	movlw	0
 17971  0139C0  2241               	addwfc	(btemp+11)^0,f,c
 17972                           
 17973                           ;stkvar	_new_exp @ sp[(-13)+8]
 17974  0139C2  0EFB               	movlw	-5
 17975  0139C4  0060  F103  FFE3   	movff	btemp+10,plusw1
 17976  0139CA  0EFC               	movlw	-4
 17977  0139CC  0060  F107  FFE3   	movff	btemp+11,plusw1
 17978                           
 17979                           ;stkvar	_b @ sp[(-13)+-4]
 17980  0139D2  0EEF               	movlw	-17
 17981  0139D4  006F FF8C  F03E    	movff	plusw1,btemp+8
 17982  0139DA  0EF0               	movlw	-16
 17983  0139DC  006F FF8C  F03F    	movff	plusw1,btemp+9
 17984  0139E2  0EF1               	movlw	-15
 17985  0139E4  006F FF8C  F040    	movff	plusw1,btemp+10
 17986  0139EA  0EF2               	movlw	-14
 17987  0139EC  006F FF8C  F041    	movff	plusw1,btemp+11
 17988                           
 17989                           ;stkvar	_rem @ sp[(-13)+4]
 17990  0139F2  0EF7               	movlw	-9
 17991  0139F4  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 17992  0139FA  0EF8               	movlw	-8
 17993  0139FC  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 17994  013A02  0EF9               	movlw	-7
 17995  013A04  0060  F103  FFE3   	movff	btemp+10,plusw1
 17996  013A0A  0EFA               	movlw	-6
 17997  013A0C  0060  F107  FFE3   	movff	btemp+11,plusw1
 17998                           
 17999                           ;stkvar	_b @ sp[(-13)+-4]
 18000  013A12  0EEF               	movlw	-17
 18001  013A14  6AE3               	clrf	plusw1,c
 18002  013A16  0EF0               	movlw	-16
 18003  013A18  6AE3               	clrf	plusw1,c
 18004  013A1A  0EF1               	movlw	-15
 18005  013A1C  6AE3               	clrf	plusw1,c
 18006  013A1E  0EF2               	movlw	-14
 18007  013A20  6AE3               	clrf	plusw1,c
 18008                           
 18009                           ;stkvar	_grs @ sp[(-13)+0]
 18010  013A22  0EF3               	movlw	-13
 18011  013A24  6AE3               	clrf	plusw1,c
 18012  013A26  0EF4               	movlw	-12
 18013  013A28  6AE3               	clrf	plusw1,c
 18014  013A2A  0EF5               	movlw	-11
 18015  013A2C  6AE3               	clrf	plusw1,c
 18016  013A2E  0EF6               	movlw	-10
 18017  013A30  6AE3               	clrf	plusw1,c
 18018                           
 18019                           ;stkvar	_aexp @ sp[(-13)+10]
 18020  013A32  0EFD               	movlw	-3
 18021  013A34  6AE3               	clrf	plusw1,c
 18022  013A36  D050               	goto	l6656
 18023  013A38                     l6638:
 18024                           
 18025                           ;stkvar	_aexp @ sp[(-13)+10]
 18026  013A38  0EFD               	movlw	-3
 18027  013A3A  50E3               	movf	plusw1,w,c
 18028  013A3C  B4D8               	btfsc	status,2,c
 18029  013A3E  D020               	goto	l6648
 18030                           
 18031                           ;stkvar	_rem @ sp[(-13)+4]
 18032  013A40  90D8               	bcf	status,0,c
 18033  013A42  0EF7               	movlw	-9
 18034  013A44  36E3               	rlcf	plusw1,f,c
 18035  013A46  0EF8               	movlw	-8
 18036  013A48  36E3               	rlcf	plusw1,f,c
 18037  013A4A  0EF9               	movlw	-7
 18038  013A4C  36E3               	rlcf	plusw1,f,c
 18039  013A4E  0EFA               	movlw	-6
 18040  013A50  36E3               	rlcf	plusw1,f,c
 18041                           
 18042                           ;stkvar	_b @ sp[(-13)+-4]
 18043  013A52  90D8               	bcf	status,0,c
 18044  013A54  0EEF               	movlw	-17
 18045  013A56  36E3               	rlcf	plusw1,f,c
 18046  013A58  0EF0               	movlw	-16
 18047  013A5A  36E3               	rlcf	plusw1,f,c
 18048  013A5C  0EF1               	movlw	-15
 18049  013A5E  36E3               	rlcf	plusw1,f,c
 18050  013A60  0EF2               	movlw	-14
 18051  013A62  36E3               	rlcf	plusw1,f,c
 18052                           
 18053                           ;stkvar	_grs @ sp[(-13)+0]
 18054  013A64  0EF6               	movlw	-10
 18055  013A66  AEE3               	btfss	plusw1,7,c
 18056  013A68  D002               	goto	l6646
 18057                           
 18058                           ;stkvar	_b @ sp[(-13)+-4]
 18059  013A6A  0EEF               	movlw	-17
 18060  013A6C  80E3               	bsf	plusw1,0,c
 18061  013A6E                     l6646:
 18062                           
 18063                           ;stkvar	_grs @ sp[(-13)+0]
 18064  013A6E  90D8               	bcf	status,0,c
 18065  013A70  0EF3               	movlw	-13
 18066  013A72  36E3               	rlcf	plusw1,f,c
 18067  013A74  0EF4               	movlw	-12
 18068  013A76  36E3               	rlcf	plusw1,f,c
 18069  013A78  0EF5               	movlw	-11
 18070  013A7A  36E3               	rlcf	plusw1,f,c
 18071  013A7C  0EF6               	movlw	-10
 18072  013A7E  36E3               	rlcf	plusw1,f,c
 18073  013A80                     l6648:
 18074                           
 18075                           ;stkvar	_a @ sp[(-13)+-8]
 18076                           ;stkvar	_rem @ sp[(-13)+4]
 18077  013A80  50E1               	movf	fsr1l,w,c
 18078  013A82  0FF7               	addlw	-9
 18079  013A84  6ED9               	movwf	fsr2l,c
 18080  013A86  50E2               	movf	fsr1h,w,c
 18081  013A88  6EDA               	movwf	fsr2h,c
 18082  013A8A  0EFF               	movlw	255
 18083  013A8C  22DA               	addwfc	fsr2h,f,c
 18084  013A8E  0EEB               	movlw	-21
 18085  013A90  50E3               	movf	plusw1,w,c
 18086  013A92  5CDE               	subwf	postinc2,w,c
 18087  013A94  0EEC               	movlw	-20
 18088  013A96  50E3               	movf	plusw1,w,c
 18089  013A98  58DE               	subwfb	postinc2,w,c
 18090  013A9A  0EED               	movlw	-19
 18091  013A9C  50E3               	movf	plusw1,w,c
 18092  013A9E  58DE               	subwfb	postinc2,w,c
 18093  013AA0  0EEE               	movlw	-18
 18094  013AA2  50E3               	movf	plusw1,w,c
 18095  013AA4  58DE               	subwfb	postinc2,w,c
 18096  013AA6  A0D8               	btfss	status,0,c
 18097  013AA8  D015               	goto	l6654
 18098                           
 18099                           ;stkvar	_grs @ sp[(-13)+0]
 18100  013AAA  0EF6               	movlw	-10
 18101  013AAC  8CE3               	bsf	plusw1,6,c
 18102                           
 18103                           ;stkvar	_a @ sp[(-13)+-8]
 18104                           ;stkvar	_rem @ sp[(-13)+4]
 18105  013AAE  50E1               	movf	fsr1l,w,c
 18106  013AB0  0FF7               	addlw	-9
 18107  013AB2  6ED9               	movwf	fsr2l,c
 18108  013AB4  50E2               	movf	fsr1h,w,c
 18109  013AB6  6EDA               	movwf	fsr2h,c
 18110  013AB8  0EFF               	movlw	255
 18111  013ABA  22DA               	addwfc	fsr2h,f,c
 18112  013ABC  0EEB               	movlw	-21
 18113  013ABE  50E3               	movf	plusw1,w,c
 18114  013AC0  5EDE               	subwf	postinc2,f,c
 18115  013AC2  0EEC               	movlw	-20
 18116  013AC4  50E3               	movf	plusw1,w,c
 18117  013AC6  5ADE               	subwfb	postinc2,f,c
 18118  013AC8  0EED               	movlw	-19
 18119  013ACA  50E3               	movf	plusw1,w,c
 18120  013ACC  5ADE               	subwfb	postinc2,f,c
 18121  013ACE  0EEE               	movlw	-18
 18122  013AD0  50E3               	movf	plusw1,w,c
 18123  013AD2  5ADE               	subwfb	postinc2,f,c
 18124  013AD4                     l6654:
 18125                           
 18126                           ;stkvar	_aexp @ sp[(-13)+10]
 18127  013AD4  0EFD               	movlw	-3
 18128  013AD6  2AE3               	incf	plusw1,f,c
 18129  013AD8                     l6656:
 18130                           
 18131                           ;stkvar	_aexp @ sp[(-13)+10]
 18132  013AD8  0EFD               	movlw	-3
 18133  013ADA  006F FF8C  F036    	movff	plusw1,btemp
 18134  013AE0  0E19               	movlw	25
 18135  013AE2  6436               	cpfsgt	btemp^0,c
 18136  013AE4  D7A9               	goto	l6638
 18137                           
 18138                           ;stkvar	_rem @ sp[(-13)+4]
 18139  013AE6  0EF7               	movlw	-9
 18140  013AE8  50E3               	movf	plusw1,w,c
 18141  013AEA  E10A               	bnz	u5790
 18142  013AEC  0EF8               	movlw	-8
 18143  013AEE  50E3               	movf	plusw1,w,c
 18144  013AF0  E107               	bnz	u5790
 18145  013AF2  0EF9               	movlw	-7
 18146  013AF4  50E3               	movf	plusw1,w,c
 18147  013AF6  E104               	bnz	u5790
 18148  013AF8  0EFA               	movlw	-6
 18149  013AFA  50E3               	movf	plusw1,w,c
 18150  013AFC  B4D8               	btfsc	status,2,c
 18151  013AFE  D024               	goto	l6672
 18152  013B00                     u5790:
 18153                           
 18154                           ;stkvar	_grs @ sp[(-13)+0]
 18155  013B00  0EF3               	movlw	-13
 18156  013B02  80E3               	bsf	plusw1,0,c
 18157  013B04  D021               	goto	l6672
 18158  013B06                     l6662:
 18159                           
 18160                           ;stkvar	_b @ sp[(-13)+-4]
 18161  013B06  90D8               	bcf	status,0,c
 18162  013B08  0EEF               	movlw	-17
 18163  013B0A  36E3               	rlcf	plusw1,f,c
 18164  013B0C  0EF0               	movlw	-16
 18165  013B0E  36E3               	rlcf	plusw1,f,c
 18166  013B10  0EF1               	movlw	-15
 18167  013B12  36E3               	rlcf	plusw1,f,c
 18168  013B14  0EF2               	movlw	-14
 18169  013B16  36E3               	rlcf	plusw1,f,c
 18170                           
 18171                           ;stkvar	_grs @ sp[(-13)+0]
 18172  013B18  0EF6               	movlw	-10
 18173  013B1A  AEE3               	btfss	plusw1,7,c
 18174  013B1C  D002               	goto	l6668
 18175                           
 18176                           ;stkvar	_b @ sp[(-13)+-4]
 18177  013B1E  0EEF               	movlw	-17
 18178  013B20  80E3               	bsf	plusw1,0,c
 18179  013B22                     l6668:
 18180                           
 18181                           ;stkvar	_grs @ sp[(-13)+0]
 18182  013B22  90D8               	bcf	status,0,c
 18183  013B24  0EF3               	movlw	-13
 18184  013B26  36E3               	rlcf	plusw1,f,c
 18185  013B28  0EF4               	movlw	-12
 18186  013B2A  36E3               	rlcf	plusw1,f,c
 18187  013B2C  0EF5               	movlw	-11
 18188  013B2E  36E3               	rlcf	plusw1,f,c
 18189  013B30  0EF6               	movlw	-10
 18190  013B32  36E3               	rlcf	plusw1,f,c
 18191                           
 18192                           ;stkvar	_new_exp @ sp[(-13)+8]
 18193  013B34  50E1               	movf	fsr1l,w,c
 18194  013B36  0FFB               	addlw	-5
 18195  013B38  6ED9               	movwf	fsr2l,c
 18196  013B3A  50E2               	movf	fsr1h,w,c
 18197  013B3C  6EDA               	movwf	fsr2h,c
 18198  013B3E  0EFF               	movlw	255
 18199  013B40  22DA               	addwfc	fsr2h,f,c
 18200  013B42  06DE               	decf	postinc2,f,c
 18201  013B44  0E00               	movlw	0
 18202  013B46  5ADD               	subwfb	postdec2,f,c
 18203  013B48                     l6672:
 18204                           
 18205                           ;stkvar	_b @ sp[(-13)+-4]
 18206  013B48  0EF1               	movlw	-15
 18207  013B4A  AEE3               	btfss	plusw1,7,c
 18208  013B4C  D7DC               	goto	l6662
 18209                           
 18210                           ;stkvar	_aexp @ sp[(-13)+10]
 18211  013B4E  0EFD               	movlw	-3
 18212  013B50  6AE3               	clrf	plusw1,c
 18213                           
 18214                           ;stkvar	_grs @ sp[(-13)+0]
 18215  013B52  0EF6               	movlw	-10
 18216  013B54  AEE3               	btfss	plusw1,7,c
 18217  013B56  D020               	goto	l6686
 18218                           
 18219                           ;stkvar	_grs @ sp[(-13)+0]
 18220  013B58  50E1               	movf	fsr1l,w,c
 18221  013B5A  0FF3               	addlw	-13
 18222  013B5C  6ED9               	movwf	fsr2l,c
 18223  013B5E  50E2               	movf	fsr1h,w,c
 18224  013B60  6EDA               	movwf	fsr2h,c
 18225  013B62  0EFF               	movlw	255
 18226  013B64  22DA               	addwfc	fsr2h,f,c
 18227  013B66  0EFF               	movlw	255
 18228  013B68  14DE               	andwf	postinc2,w,c
 18229  013B6A  6E3E               	movwf	(btemp+8)^0,c
 18230  013B6C  0EFF               	movlw	255
 18231  013B6E  14DE               	andwf	postinc2,w,c
 18232  013B70  6E3F               	movwf	(btemp+9)^0,c
 18233  013B72  0EFF               	movlw	255
 18234  013B74  14DE               	andwf	postinc2,w,c
 18235  013B76  6E40               	movwf	(btemp+10)^0,c
 18236  013B78  0E7F               	movlw	127
 18237  013B7A  14DE               	andwf	postinc2,w,c
 18238  013B7C  6E41               	movwf	(btemp+11)^0,c
 18239  013B7E  503E               	movf	(btemp+8)^0,w,c
 18240  013B80  103F               	iorwf	(btemp+9)^0,w,c
 18241  013B82  1040               	iorwf	(btemp+10)^0,w,c
 18242  013B84  1041               	iorwf	(btemp+11)^0,w,c
 18243  013B86  B4D8               	btfsc	status,2,c
 18244  013B88  D004               	goto	l6682
 18245  013B8A                     u5830:
 18246                           
 18247                           ;stkvar	_aexp @ sp[(-13)+10]
 18248  013B8A  0EFD               	movlw	-3
 18249  013B8C  6AE3               	clrf	plusw1,c
 18250  013B8E  2AE3               	incf	plusw1,f,c
 18251  013B90  D003               	goto	l6686
 18252  013B92                     l6682:
 18253                           
 18254                           ;stkvar	_b @ sp[(-13)+-4]
 18255  013B92  0EEF               	movlw	-17
 18256  013B94  B0E3               	btfsc	plusw1,0,c
 18257  013B96  D7F9               	goto	u5830
 18258  013B98                     l6686:
 18259                           
 18260                           ;stkvar	_aexp @ sp[(-13)+10]
 18261  013B98  0EFD               	movlw	-3
 18262  013B9A  50E3               	movf	plusw1,w,c
 18263  013B9C  B4D8               	btfsc	status,2,c
 18264  013B9E  D036               	goto	l6696
 18265                           
 18266                           ;stkvar	_b @ sp[(-13)+-4]
 18267  013BA0  50E1               	movf	fsr1l,w,c
 18268  013BA2  0FEF               	addlw	-17
 18269  013BA4  6ED9               	movwf	fsr2l,c
 18270  013BA6  50E2               	movf	fsr1h,w,c
 18271  013BA8  6EDA               	movwf	fsr2h,c
 18272  013BAA  0EFF               	movlw	255
 18273  013BAC  22DA               	addwfc	fsr2h,f,c
 18274  013BAE  2ADE               	incf	postinc2,f,c
 18275  013BB0  0E00               	movlw	0
 18276  013BB2  22DE               	addwfc	postinc2,f,c
 18277  013BB4  22DE               	addwfc	postinc2,f,c
 18278  013BB6  22DE               	addwfc	postinc2,f,c
 18279                           
 18280                           ;stkvar	_b @ sp[(-13)+-4]
 18281  013BB8  0EF2               	movlw	-14
 18282  013BBA  A0E3               	btfss	plusw1,0,c
 18283  013BBC  D027               	goto	l6696
 18284  013BBE  0E01               	movlw	1
 18285  013BC0  6E41               	movwf	(btemp+11)^0,c
 18286                           
 18287                           ;stkvar	_b @ sp[(-13)+-4]
 18288  013BC2  50E1               	movf	fsr1l,w,c
 18289  013BC4  0FEF               	addlw	-17
 18290  013BC6  6ED9               	movwf	fsr2l,c
 18291  013BC8  50E2               	movf	fsr1h,w,c
 18292  013BCA  6EDA               	movwf	fsr2h,c
 18293  013BCC  0EFF               	movlw	255
 18294  013BCE  22DA               	addwfc	fsr2h,f,c
 18295  013BD0  2841               	incf	(btemp+11)^0,w,c
 18296  013BD2  52DE               	movf	postinc2,f,c
 18297  013BD4  D008               	goto	u5870
 18298  013BD6                     u5875:
 18299  013BD6  52DE               	movf	postinc2,f,c
 18300  013BD8  90D8               	bcf	status,0,c
 18301  013BDA  BEDC               	btfsc	preinc2,7,c
 18302  013BDC  80D8               	bsf	status,0,c
 18303  013BDE  32DD               	rrcf	postdec2,f,c
 18304  013BE0  32DD               	rrcf	postdec2,f,c
 18305  013BE2  32DD               	rrcf	postdec2,f,c
 18306  013BE4  32DE               	rrcf	postinc2,f,c
 18307  013BE6                     u5870:
 18308  013BE6  2EE8               	decfsz	wreg,f,c
 18309  013BE8  D7F6               	goto	u5875
 18310                           
 18311                           ;stkvar	_new_exp @ sp[(-13)+8]
 18312  013BEA  0EFB               	movlw	-5
 18313  013BEC  50E3               	movf	plusw1,w,c
 18314  013BEE  0F01               	addlw	1
 18315  013BF0  6E36               	movwf	btemp^0,c
 18316  013BF2  0EFB               	movlw	-5
 18317  013BF4  0060  F0DB  FFE3   	movff	btemp,plusw1
 18318  013BFA  6A36               	clrf	btemp^0,c
 18319  013BFC  0EFC               	movlw	-4
 18320  013BFE  50E3               	movf	plusw1,w,c
 18321  013C00  2036               	addwfc	btemp^0,w,c
 18322  013C02  6E36               	movwf	btemp^0,c
 18323  013C04  0EFC               	movlw	-4
 18324  013C06  0060  F0DB  FFE3   	movff	btemp,plusw1
 18325  013C0C                     l6696:
 18326                           
 18327                           ;stkvar	_new_exp @ sp[(-13)+8]
 18328  013C0C  0EFC               	movlw	-4
 18329  013C0E  BEE3               	btfsc	plusw1,7,c
 18330  013C10  D01B               	goto	l6702
 18331  013C12  0EFC               	movlw	-4
 18332  013C14  50E3               	movf	plusw1,w,c
 18333  013C16  E104               	bnz	u5880
 18334  013C18  0EFB               	movlw	-5
 18335  013C1A  28E3               	incf	plusw1,w,c
 18336  013C1C  A0D8               	btfss	status,0,c
 18337  013C1E  D014               	goto	l6702
 18338  013C20                     u5880:
 18339  013C20  0EFF               	movlw	255
 18340  013C22  6E40               	movwf	(btemp+10)^0,c
 18341  013C24  0E00               	movlw	0
 18342  013C26  6E41               	movwf	(btemp+11)^0,c
 18343                           
 18344                           ;stkvar	_new_exp @ sp[(-13)+8]
 18345  013C28  0EFB               	movlw	-5
 18346  013C2A  0060  F103  FFE3   	movff	btemp+10,plusw1
 18347  013C30  0EFC               	movlw	-4
 18348  013C32  0060  F107  FFE3   	movff	btemp+11,plusw1
 18349                           
 18350                           ;stkvar	_b @ sp[(-13)+-4]
 18351  013C38  0EEF               	movlw	-17
 18352  013C3A  6AE3               	clrf	plusw1,c
 18353  013C3C  0EF0               	movlw	-16
 18354  013C3E  6AE3               	clrf	plusw1,c
 18355  013C40  0EF1               	movlw	-15
 18356  013C42  6AE3               	clrf	plusw1,c
 18357  013C44  0EF2               	movlw	-14
 18358  013C46  6AE3               	clrf	plusw1,c
 18359  013C48                     l6702:
 18360                           
 18361                           ;stkvar	_new_exp @ sp[(-13)+8]
 18362  013C48  0EFC               	movlw	-4
 18363  013C4A  BEE3               	btfsc	plusw1,7,c
 18364  013C4C  D007               	goto	u5890
 18365  013C4E  0EFC               	movlw	-4
 18366  013C50  50E3               	movf	plusw1,w,c
 18367  013C52  E112               	bnz	l6708
 18368  013C54  0EFB               	movlw	-5
 18369  013C56  04E3               	decf	plusw1,w,c
 18370  013C58  B0D8               	btfsc	status,0,c
 18371  013C5A  D00E               	goto	l6708
 18372  013C5C                     u5890:
 18373                           
 18374                           ;stkvar	_new_exp @ sp[(-13)+8]
 18375  013C5C  0EFB               	movlw	-5
 18376  013C5E  6AE3               	clrf	plusw1,c
 18377  013C60  0EFC               	movlw	-4
 18378  013C62  6AE3               	clrf	plusw1,c
 18379                           
 18380                           ;stkvar	_b @ sp[(-13)+-4]
 18381  013C64  0EEF               	movlw	-17
 18382  013C66  6AE3               	clrf	plusw1,c
 18383  013C68  0EF0               	movlw	-16
 18384  013C6A  6AE3               	clrf	plusw1,c
 18385  013C6C  0EF1               	movlw	-15
 18386  013C6E  6AE3               	clrf	plusw1,c
 18387  013C70  0EF2               	movlw	-14
 18388  013C72  6AE3               	clrf	plusw1,c
 18389                           
 18390                           ;stkvar	_sign @ sp[(-13)+12]
 18391  013C74  0EFF               	movlw	-1
 18392  013C76  6AE3               	clrf	plusw1,c
 18393  013C78                     l6708:
 18394                           
 18395                           ;stkvar	_new_exp @ sp[(-13)+8]
 18396                           ;stkvar	_bexp @ sp[(-13)+11]
 18397  013C78  0EFB               	movlw	-5
 18398  013C7A  006F FF8C  F036    	movff	plusw1,btemp
 18399  013C80  0EFE               	movlw	-2
 18400  013C82  0060  F0DB  FFE3   	movff	btemp,plusw1
 18401                           
 18402                           ;stkvar	_bexp @ sp[(-13)+11]
 18403  013C88  0EFE               	movlw	-2
 18404  013C8A  A0E3               	btfss	plusw1,0,c
 18405  013C8C  D009               	goto	l6714
 18406                           
 18407                           ;stkvar	_b @ sp[(-13)+-4]
 18408  013C8E  0EF1               	movlw	241
 18409  013C90  24E1               	addwf	fsr1l,w,c
 18410  013C92  6ED9               	movwf	fsr2l,c
 18411  013C94  0EFF               	movlw	255
 18412  013C96  20E2               	addwfc	fsr1h,w,c
 18413  013C98  6EDA               	movwf	fsr2h,c
 18414  013C9A  0E00               	movlw	0
 18415  013C9C  8EDB               	bsf	plusw2,7,c
 18416  013C9E  D008               	goto	l6716
 18417  013CA0                     l6714:
 18418                           
 18419                           ;stkvar	_b @ sp[(-13)+-4]
 18420  013CA0  0EF1               	movlw	241
 18421  013CA2  24E1               	addwf	fsr1l,w,c
 18422  013CA4  6ED9               	movwf	fsr2l,c
 18423  013CA6  0EFF               	movlw	255
 18424  013CA8  20E2               	addwfc	fsr1h,w,c
 18425  013CAA  6EDA               	movwf	fsr2h,c
 18426  013CAC  0E7F               	movlw	127
 18427  013CAE  16DF               	andwf	indf2,f,c
 18428  013CB0                     l6716:
 18429                           
 18430                           ;stkvar	_b @ sp[(-13)+-4]
 18431  013CB0  0EF2               	movlw	242
 18432  013CB2  24E1               	addwf	fsr1l,w,c
 18433  013CB4  6ED9               	movwf	fsr2l,c
 18434  013CB6  0EFF               	movlw	255
 18435  013CB8  20E2               	addwfc	fsr1h,w,c
 18436  013CBA  6EDA               	movwf	fsr2h,c
 18437                           
 18438                           ;stkvar	_bexp @ sp[(-13)+11]
 18439  013CBC  0EFE               	movlw	-2
 18440  013CBE  006F FF8C  F041    	movff	plusw1,btemp+11
 18441  013CC4  90D8               	bcf	status,0,c
 18442  013CC6  3041               	rrcf	(btemp+11)^0,w,c
 18443  013CC8  6EDF               	movwf	indf2,c
 18444  013CCA  D644               	goto	l6614
 18445  013CCC                     l2595:
 18446                           
 18447                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18448  013CCC  0EEB               	movlw	235
 18449  013CCE  26E1               	addwf	fsr1l,f,c
 18450  013CD0  0EFF               	movlw	255
 18451  013CD2  22E2               	addwfc	fsr1h,f,c
 18452  013CD4  0012               	return		;funcret
 18453  013CD6                     __end_of___fldiv:
 18454                           	opt callstack 0
 18455                           
 18456 ;; *************** function ___awmod *****************
 18457 ;; Defined at:
 18458 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  dividend        2  [STACK] int 
 18461 ;;  divisor         2  [STACK] int 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  sign            1  [STACK] unsigned char 
 18464 ;;  counter         1  [STACK] unsigned char 
 18465 ;; Return value:  Size  Location     Type
 18466 ;;                  2  [STACK] int 
 18467 ;; Registers used:
 18468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18469 ;; Tracked objects:
 18470 ;;		On entry : 0/0
 18471 ;;		On exit  : 0/0
 18472 ;;		Unchanged: 0/0
 18473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18478 ;;Total ram usage:        0 bytes
 18479 ;; Hardware stack levels used:    1
 18480 ;; Hardware stack levels required when called:    6
 18481 ;; This function calls:
 18482 ;;		Nothing
 18483 ;; This function is called by:
 18484 ;;		_efgtoa
 18485 ;; This function uses a reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text60
 18489  016F50                     __ptext60:
 18490                           	opt callstack 0
 18491  016F50                     ___awmod:
 18492                           	opt callstack 0
 18493                           
 18494                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18495  016F50  52E6               	movf	postinc1,f,c
 18496  016F52  52E6               	movf	postinc1,f,c
 18497                           
 18498                           ;stkvar	_sign @ sp[(-2)+0]
 18499                           
 18500                           ;incstack = 0
 18501  016F54  0EFE               	movlw	-2
 18502  016F56  6AE3               	clrf	plusw1,c
 18503                           
 18504                           ;stkvar	_dividend @ sp[(-2)+-2]
 18505  016F58  0EFD               	movlw	-3
 18506  016F5A  AEE3               	btfss	plusw1,7,c
 18507  016F5C  D009               	goto	l6940
 18508                           
 18509                           ;stkvar	_dividend @ sp[(-2)+-2]
 18510                           ;stkvar	_dividend @ sp[(-2)+-2]
 18511  016F5E  0EFC               	movlw	-4
 18512  016F60  6CE3               	negf	plusw1,c
 18513  016F62  0EFD               	movlw	-3
 18514  016F64  1EE3               	comf	plusw1,f,c
 18515  016F66  B0D8               	btfsc	status,0,c
 18516  016F68  2AE3               	incf	plusw1,f,c
 18517                           
 18518                           ;stkvar	_sign @ sp[(-2)+0]
 18519  016F6A  0EFE               	movlw	-2
 18520  016F6C  6AE3               	clrf	plusw1,c
 18521  016F6E  2AE3               	incf	plusw1,f,c
 18522  016F70                     l6940:
 18523                           
 18524                           ;stkvar	_divisor @ sp[(-2)+-4]
 18525  016F70  0EFB               	movlw	-5
 18526  016F72  AEE3               	btfss	plusw1,7,c
 18527  016F74  D006               	goto	l6944
 18528                           
 18529                           ;stkvar	_divisor @ sp[(-2)+-4]
 18530                           ;stkvar	_divisor @ sp[(-2)+-4]
 18531  016F76  0EFA               	movlw	-6
 18532  016F78  6CE3               	negf	plusw1,c
 18533  016F7A  0EFB               	movlw	-5
 18534  016F7C  1EE3               	comf	plusw1,f,c
 18535  016F7E  B0D8               	btfsc	status,0,c
 18536  016F80  2AE3               	incf	plusw1,f,c
 18537  016F82                     l6944:
 18538                           
 18539                           ;stkvar	_divisor @ sp[(-2)+-4]
 18540  016F82  0EFA               	movlw	-6
 18541  016F84  006F FF8C  F036    	movff	plusw1,btemp
 18542  016F8A  0EFB               	movlw	-5
 18543  016F8C  50E3               	movf	plusw1,w,c
 18544  016F8E  1036               	iorwf	btemp^0,w,c
 18545  016F90  B4D8               	btfsc	status,2,c
 18546  016F92  D053               	goto	u6250
 18547                           
 18548                           ;stkvar	_counter @ sp[(-2)+1]
 18549  016F94  0EFF               	movlw	-1
 18550  016F96  6AE3               	clrf	plusw1,c
 18551  016F98  D012               	goto	L17
 18552  016F9A                     l6948:
 18553                           
 18554                           ;stkvar	_divisor @ sp[(-2)+-4]
 18555  016F9A  0EFA               	movlw	-6
 18556  016F9C  50E3               	movf	plusw1,w,c
 18557  016F9E  90D8               	bcf	status,0,c
 18558  016FA0  34E8               	rlcf	wreg,w,c
 18559  016FA2  6E36               	movwf	btemp^0,c
 18560  016FA4  0EFA               	movlw	-6
 18561  016FA6  0060  F0DB  FFE3   	movff	btemp,plusw1
 18562  016FAC  0EFB               	movlw	-5
 18563  016FAE  50E3               	movf	plusw1,w,c
 18564  016FB0  34E8               	rlcf	wreg,w,c
 18565  016FB2  6E36               	movwf	btemp^0,c
 18566  016FB4  0EFB               	movlw	-5
 18567  016FB6  0060  F0DB  FFE3   	movff	btemp,plusw1
 18568                           
 18569                           ;stkvar	_counter @ sp[(-2)+1]
 18570  016FBC  0EFF               	movlw	-1
 18571  016FBE                     L17:
 18572  016FBE  2AE3               	incf	plusw1,f,c
 18573                           
 18574                           ;stkvar	_divisor @ sp[(-2)+-4]
 18575  016FC0  0EFB               	movlw	-5
 18576  016FC2  AEE3               	btfss	plusw1,7,c
 18577  016FC4  D7EA               	goto	l6948
 18578  016FC6                     u6230:
 18579                           
 18580                           ;stkvar	_divisor @ sp[(-2)+-4]
 18581  016FC6  0EFA               	movlw	-6
 18582  016FC8  006F FF8C  F040    	movff	plusw1,btemp+10
 18583  016FCE  0EFB               	movlw	-5
 18584  016FD0  006F FF8C  F041    	movff	plusw1,btemp+11
 18585                           
 18586                           ;stkvar	_dividend @ sp[(-2)+-2]
 18587  016FD6  0EFC               	movlw	-4
 18588  016FD8  006F FF8C  F03E    	movff	plusw1,btemp+8
 18589  016FDE  0EFD               	movlw	-3
 18590  016FE0  006F FF8C  F03F    	movff	plusw1,btemp+9
 18591  016FE6  5040               	movf	(btemp+10)^0,w,c
 18592  016FE8  5C3E               	subwf	(btemp+8)^0,w,c
 18593  016FEA  5041               	movf	(btemp+11)^0,w,c
 18594  016FEC  583F               	subwfb	(btemp+9)^0,w,c
 18595  016FEE  A0D8               	btfss	status,0,c
 18596  016FF0  D014               	goto	l6958
 18597                           
 18598                           ;stkvar	_divisor @ sp[(-2)+-4]
 18599                           ;stkvar	_dividend @ sp[(-2)+-2]
 18600  016FF2  0EFC               	movlw	-4
 18601  016FF4  50E3               	movf	plusw1,w,c
 18602  016FF6  6E36               	movwf	btemp^0,c
 18603  016FF8  0EFA               	movlw	-6
 18604  016FFA  50E3               	movf	plusw1,w,c
 18605  016FFC  5E36               	subwf	btemp^0,f,c
 18606  016FFE  0EFC               	movlw	-4
 18607  017000  0060  F0DB  FFE3   	movff	btemp,plusw1
 18608  017006  0EFD               	movlw	-3
 18609  017008  50E3               	movf	plusw1,w,c
 18610  01700A  6E36               	movwf	btemp^0,c
 18611  01700C  0EFB               	movlw	-5
 18612  01700E  50E3               	movf	plusw1,w,c
 18613  017010  5A36               	subwfb	btemp^0,f,c
 18614  017012  0EFD               	movlw	-3
 18615  017014  0060  F0DB  FFE3   	movff	btemp,plusw1
 18616  01701A                     l6958:
 18617                           
 18618                           ;stkvar	_divisor @ sp[(-2)+-4]
 18619  01701A  90D8               	bcf	status,0,c
 18620  01701C  0EFB               	movlw	-5
 18621  01701E  32E3               	rrcf	plusw1,f,c
 18622  017020  0EFA               	movlw	-6
 18623  017022  32E3               	rrcf	plusw1,f,c
 18624                           
 18625                           ;stkvar	_counter @ sp[(-2)+1]
 18626  017024  0EFF               	movlw	-1
 18627  017026  50E3               	movf	plusw1,w,c
 18628  017028  6E36               	movwf	btemp^0,c
 18629  01702A  0E01               	movlw	1
 18630  01702C  5E36               	subwf	btemp^0,f,c
 18631  01702E  0EFF               	movlw	-1
 18632  017030  0060  F0DB  FFE3   	movff	btemp,plusw1
 18633  017036  A4D8               	btfss	status,2,c
 18634  017038  D7C6               	goto	u6230
 18635  01703A                     u6250:
 18636                           
 18637                           ;stkvar	_sign @ sp[(-2)+0]
 18638  01703A  0EFE               	movlw	-2
 18639  01703C  50E3               	movf	plusw1,w,c
 18640  01703E  B4D8               	btfsc	status,2,c
 18641  017040  D006               	goto	l6966
 18642                           
 18643                           ;stkvar	_dividend @ sp[(-2)+-2]
 18644                           ;stkvar	_dividend @ sp[(-2)+-2]
 18645  017042  0EFC               	movlw	-4
 18646  017044  6CE3               	negf	plusw1,c
 18647  017046  0EFD               	movlw	-3
 18648  017048  1EE3               	comf	plusw1,f,c
 18649  01704A  B0D8               	btfsc	status,0,c
 18650  01704C  2AE3               	incf	plusw1,f,c
 18651  01704E                     l6966:
 18652                           
 18653                           ;stkvar	_dividend @ sp[(-2)+-2]
 18654  01704E  0EFC               	movlw	-4
 18655  017050  006F FF8C  F036    	movff	plusw1,btemp
 18656  017056  0EFD               	movlw	-3
 18657  017058  006F FF8C  F037    	movff	plusw1,btemp+1
 18658                           
 18659                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18660  01705E  0EFA               	movlw	250
 18661  017060  26E1               	addwf	fsr1l,f,c
 18662  017062  0EFF               	movlw	255
 18663  017064  22E2               	addwfc	fsr1h,f,c
 18664  017066  0012               	return		;funcret
 18665  017068                     __end_of___awmod:
 18666                           	opt callstack 0
 18667                           
 18668 ;; *************** function ___awdiv *****************
 18669 ;; Defined at:
 18670 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;  dividend        2  [STACK] int 
 18673 ;;  divisor         2  [STACK] int 
 18674 ;; Auto vars:     Size  Location     Type
 18675 ;;  quotient        2  [STACK] int 
 18676 ;;  sign            1  [STACK] unsigned char 
 18677 ;;  counter         1  [STACK] unsigned char 
 18678 ;; Return value:  Size  Location     Type
 18679 ;;                  2  [STACK] int 
 18680 ;; Registers used:
 18681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18682 ;; Tracked objects:
 18683 ;;		On entry : 0/0
 18684 ;;		On exit  : 0/0
 18685 ;;		Unchanged: 0/0
 18686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18691 ;;Total ram usage:        0 bytes
 18692 ;; Hardware stack levels used:    1
 18693 ;; Hardware stack levels required when called:    6
 18694 ;; This function calls:
 18695 ;;		Nothing
 18696 ;; This function is called by:
 18697 ;;		_efgtoa
 18698 ;; This function uses a reentrant model
 18699 ;;
 18700                           
 18701                           	psect	text61
 18702  016A70                     __ptext61:
 18703                           	opt callstack 0
 18704  016A70                     ___awdiv:
 18705                           	opt callstack 0
 18706                           
 18707                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18708  016A70  52E6               	movf	postinc1,f,c
 18709  016A72  52E6               	movf	postinc1,f,c
 18710  016A74  52E6               	movf	postinc1,f,c
 18711  016A76  52E6               	movf	postinc1,f,c
 18712                           
 18713                           ;stkvar	_sign @ sp[(-4)+2]
 18714                           
 18715                           ;incstack = 0
 18716  016A78  0EFE               	movlw	-2
 18717  016A7A  6AE3               	clrf	plusw1,c
 18718                           
 18719                           ;stkvar	_divisor @ sp[(-4)+-4]
 18720  016A7C  0EF9               	movlw	-7
 18721  016A7E  AEE3               	btfss	plusw1,7,c
 18722  016A80  D009               	goto	l6894
 18723                           
 18724                           ;stkvar	_divisor @ sp[(-4)+-4]
 18725                           ;stkvar	_divisor @ sp[(-4)+-4]
 18726  016A82  0EF8               	movlw	-8
 18727  016A84  6CE3               	negf	plusw1,c
 18728  016A86  0EF9               	movlw	-7
 18729  016A88  1EE3               	comf	plusw1,f,c
 18730  016A8A  B0D8               	btfsc	status,0,c
 18731  016A8C  2AE3               	incf	plusw1,f,c
 18732                           
 18733                           ;stkvar	_sign @ sp[(-4)+2]
 18734  016A8E  0EFE               	movlw	-2
 18735  016A90  6AE3               	clrf	plusw1,c
 18736  016A92  2AE3               	incf	plusw1,f,c
 18737  016A94                     l6894:
 18738                           
 18739                           ;stkvar	_dividend @ sp[(-4)+-2]
 18740  016A94  0EFB               	movlw	-5
 18741  016A96  AEE3               	btfss	plusw1,7,c
 18742  016A98  D008               	goto	l6900
 18743                           
 18744                           ;stkvar	_dividend @ sp[(-4)+-2]
 18745                           ;stkvar	_dividend @ sp[(-4)+-2]
 18746  016A9A  0EFA               	movlw	-6
 18747  016A9C  6CE3               	negf	plusw1,c
 18748  016A9E  0EFB               	movlw	-5
 18749  016AA0  1EE3               	comf	plusw1,f,c
 18750  016AA2  B0D8               	btfsc	status,0,c
 18751  016AA4  2AE3               	incf	plusw1,f,c
 18752                           
 18753                           ;stkvar	_sign @ sp[(-4)+2]
 18754  016AA6  0EFE               	movlw	-2
 18755  016AA8  70E3               	btg	plusw1,0,c
 18756  016AAA                     l6900:
 18757                           
 18758                           ;stkvar	_quotient @ sp[(-4)+0]
 18759  016AAA  0EFC               	movlw	-4
 18760  016AAC  6AE3               	clrf	plusw1,c
 18761  016AAE  0EFD               	movlw	-3
 18762  016AB0  6AE3               	clrf	plusw1,c
 18763                           
 18764                           ;stkvar	_divisor @ sp[(-4)+-4]
 18765  016AB2  0EF8               	movlw	-8
 18766  016AB4  006F FF8C  F036    	movff	plusw1,btemp
 18767  016ABA  0EF9               	movlw	-7
 18768  016ABC  50E3               	movf	plusw1,w,c
 18769  016ABE  1036               	iorwf	btemp^0,w,c
 18770  016AC0  B4D8               	btfsc	status,2,c
 18771  016AC2  D066               	goto	u6180
 18772                           
 18773                           ;stkvar	_counter @ sp[(-4)+3]
 18774  016AC4  0EFF               	movlw	-1
 18775  016AC6  6AE3               	clrf	plusw1,c
 18776  016AC8  D012               	goto	L18
 18777  016ACA                     l6906:
 18778                           
 18779                           ;stkvar	_divisor @ sp[(-4)+-4]
 18780  016ACA  0EF8               	movlw	-8
 18781  016ACC  50E3               	movf	plusw1,w,c
 18782  016ACE  90D8               	bcf	status,0,c
 18783  016AD0  34E8               	rlcf	wreg,w,c
 18784  016AD2  6E36               	movwf	btemp^0,c
 18785  016AD4  0EF8               	movlw	-8
 18786  016AD6  0060  F0DB  FFE3   	movff	btemp,plusw1
 18787  016ADC  0EF9               	movlw	-7
 18788  016ADE  50E3               	movf	plusw1,w,c
 18789  016AE0  34E8               	rlcf	wreg,w,c
 18790  016AE2  6E36               	movwf	btemp^0,c
 18791  016AE4  0EF9               	movlw	-7
 18792  016AE6  0060  F0DB  FFE3   	movff	btemp,plusw1
 18793                           
 18794                           ;stkvar	_counter @ sp[(-4)+3]
 18795  016AEC  0EFF               	movlw	-1
 18796  016AEE                     L18:
 18797  016AEE  2AE3               	incf	plusw1,f,c
 18798                           
 18799                           ;stkvar	_divisor @ sp[(-4)+-4]
 18800  016AF0  0EF9               	movlw	-7
 18801  016AF2  AEE3               	btfss	plusw1,7,c
 18802  016AF4  D7EA               	goto	l6906
 18803  016AF6                     u6160:
 18804                           
 18805                           ;stkvar	_quotient @ sp[(-4)+0]
 18806  016AF6  0EFC               	movlw	-4
 18807  016AF8  50E3               	movf	plusw1,w,c
 18808  016AFA  90D8               	bcf	status,0,c
 18809  016AFC  34E8               	rlcf	wreg,w,c
 18810  016AFE  6E36               	movwf	btemp^0,c
 18811  016B00  0EFC               	movlw	-4
 18812  016B02  0060  F0DB  FFE3   	movff	btemp,plusw1
 18813  016B08  0EFD               	movlw	-3
 18814  016B0A  50E3               	movf	plusw1,w,c
 18815  016B0C  34E8               	rlcf	wreg,w,c
 18816  016B0E  6E36               	movwf	btemp^0,c
 18817  016B10  0EFD               	movlw	-3
 18818  016B12  0060  F0DB  FFE3   	movff	btemp,plusw1
 18819                           
 18820                           ;stkvar	_divisor @ sp[(-4)+-4]
 18821  016B18  0EF8               	movlw	-8
 18822  016B1A  006F FF8C  F040    	movff	plusw1,btemp+10
 18823  016B20  0EF9               	movlw	-7
 18824  016B22  006F FF8C  F041    	movff	plusw1,btemp+11
 18825                           
 18826                           ;stkvar	_dividend @ sp[(-4)+-2]
 18827  016B28  0EFA               	movlw	-6
 18828  016B2A  006F FF8C  F03E    	movff	plusw1,btemp+8
 18829  016B30  0EFB               	movlw	-5
 18830  016B32  006F FF8C  F03F    	movff	plusw1,btemp+9
 18831  016B38  5040               	movf	(btemp+10)^0,w,c
 18832  016B3A  5C3E               	subwf	(btemp+8)^0,w,c
 18833  016B3C  5041               	movf	(btemp+11)^0,w,c
 18834  016B3E  583F               	subwfb	(btemp+9)^0,w,c
 18835  016B40  A0D8               	btfss	status,0,c
 18836  016B42  D016               	goto	l6920
 18837                           
 18838                           ;stkvar	_divisor @ sp[(-4)+-4]
 18839                           ;stkvar	_dividend @ sp[(-4)+-2]
 18840  016B44  0EFA               	movlw	-6
 18841  016B46  50E3               	movf	plusw1,w,c
 18842  016B48  6E36               	movwf	btemp^0,c
 18843  016B4A  0EF8               	movlw	-8
 18844  016B4C  50E3               	movf	plusw1,w,c
 18845  016B4E  5E36               	subwf	btemp^0,f,c
 18846  016B50  0EFA               	movlw	-6
 18847  016B52  0060  F0DB  FFE3   	movff	btemp,plusw1
 18848  016B58  0EFB               	movlw	-5
 18849  016B5A  50E3               	movf	plusw1,w,c
 18850  016B5C  6E36               	movwf	btemp^0,c
 18851  016B5E  0EF9               	movlw	-7
 18852  016B60  50E3               	movf	plusw1,w,c
 18853  016B62  5A36               	subwfb	btemp^0,f,c
 18854  016B64  0EFB               	movlw	-5
 18855  016B66  0060  F0DB  FFE3   	movff	btemp,plusw1
 18856                           
 18857                           ;stkvar	_quotient @ sp[(-4)+0]
 18858  016B6C  0EFC               	movlw	-4
 18859  016B6E  80E3               	bsf	plusw1,0,c
 18860  016B70                     l6920:
 18861                           
 18862                           ;stkvar	_divisor @ sp[(-4)+-4]
 18863  016B70  90D8               	bcf	status,0,c
 18864  016B72  0EF9               	movlw	-7
 18865  016B74  32E3               	rrcf	plusw1,f,c
 18866  016B76  0EF8               	movlw	-8
 18867  016B78  32E3               	rrcf	plusw1,f,c
 18868                           
 18869                           ;stkvar	_counter @ sp[(-4)+3]
 18870  016B7A  0EFF               	movlw	-1
 18871  016B7C  50E3               	movf	plusw1,w,c
 18872  016B7E  6E36               	movwf	btemp^0,c
 18873  016B80  0E01               	movlw	1
 18874  016B82  5E36               	subwf	btemp^0,f,c
 18875  016B84  0EFF               	movlw	-1
 18876  016B86  0060  F0DB  FFE3   	movff	btemp,plusw1
 18877  016B8C  A4D8               	btfss	status,2,c
 18878  016B8E  D7B3               	goto	u6160
 18879  016B90                     u6180:
 18880                           
 18881                           ;stkvar	_sign @ sp[(-4)+2]
 18882  016B90  0EFE               	movlw	-2
 18883  016B92  50E3               	movf	plusw1,w,c
 18884  016B94  B4D8               	btfsc	status,2,c
 18885  016B96  D006               	goto	l6928
 18886                           
 18887                           ;stkvar	_quotient @ sp[(-4)+0]
 18888                           ;stkvar	_quotient @ sp[(-4)+0]
 18889  016B98  0EFC               	movlw	-4
 18890  016B9A  6CE3               	negf	plusw1,c
 18891  016B9C  0EFD               	movlw	-3
 18892  016B9E  1EE3               	comf	plusw1,f,c
 18893  016BA0  B0D8               	btfsc	status,0,c
 18894  016BA2  2AE3               	incf	plusw1,f,c
 18895  016BA4                     l6928:
 18896                           
 18897                           ;stkvar	_quotient @ sp[(-4)+0]
 18898  016BA4  0EFC               	movlw	-4
 18899  016BA6  006F FF8C  F036    	movff	plusw1,btemp
 18900  016BAC  0EFD               	movlw	-3
 18901  016BAE  006F FF8C  F037    	movff	plusw1,btemp+1
 18902                           
 18903                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18904  016BB4  0EF8               	movlw	248
 18905  016BB6  26E1               	addwf	fsr1l,f,c
 18906  016BB8  0EFF               	movlw	255
 18907  016BBA  22E2               	addwfc	fsr1h,f,c
 18908  016BBC  0012               	return		;funcret
 18909  016BBE                     __end_of___awdiv:
 18910                           	opt callstack 0
 18911                           
 18912 ;; *************** function _dtoa *****************
 18913 ;; Defined at:
 18914 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18917 ;;		 -> f(6), NULL(0), 
 18918 ;;  d               8  [STACK] long long 
 18919 ;; Auto vars:     Size  Location     Type
 18920 ;;  n               8  [STACK] long long 
 18921 ;;  i               2  [STACK] int 
 18922 ;;  s               2  [STACK] int 
 18923 ;;  w               2  [STACK] int 
 18924 ;;  p               2  [STACK] int 
 18925 ;; Return value:  Size  Location     Type
 18926 ;;                  2  [STACK] int 
 18927 ;; Registers used:
 18928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18929 ;; Tracked objects:
 18930 ;;		On entry : 0/0
 18931 ;;		On exit  : 0/0
 18932 ;;		Unchanged: 0/0
 18933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18938 ;;Total ram usage:        0 bytes
 18939 ;; Hardware stack levels used:    1
 18940 ;; Hardware stack levels required when called:   11
 18941 ;; This function calls:
 18942 ;;		___aodiv
 18943 ;;		___aomod
 18944 ;;		_abs
 18945 ;;		_pad
 18946 ;; This function is called by:
 18947 ;;		_vfpfcnvrt
 18948 ;; This function uses a reentrant model
 18949 ;;
 18950                           
 18951                           	psect	text62
 18952  013CD6                     __ptext62:
 18953                           	opt callstack 0
 18954  013CD6                     _dtoa:
 18955                           	opt callstack 0
 18956                           
 18957                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18958  013CD6  0E12               	movlw	18
 18959  013CD8  26E1               	addwf	fsr1l,f,c
 18960  013CDA  0E00               	movlw	0
 18961  013CDC  22E2               	addwfc	fsr1h,f,c
 18962                           
 18963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18964                           ;stkvar	_d @ sp[(-18)+-10]
 18965                           
 18966                           ;incstack = 0
 18967  013CDE  0EE4               	movlw	228
 18968  013CE0  24E1               	addwf	fsr1l,w,c
 18969  013CE2  6ED9               	movwf	fsr2l,c
 18970  013CE4  0EFF               	movlw	255
 18971  013CE6  20E2               	addwfc	fsr1h,w,c
 18972  013CE8  6EDA               	movwf	fsr2h,c
 18973                           
 18974                           ;stkvar	_n @ sp[(-18)+2]
 18975  013CEA  0E08               	movlw	8
 18976  013CEC  6E36               	movwf	btemp^0,c
 18977  013CEE  0EF0               	movlw	-16
 18978  013CF0                     us918999:
 18979  013CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 18980  013CF6  28E8               	incf	wreg,w,c
 18981  013CF8  2E36               	decfsz	btemp^0,f,c
 18982  013CFA  D7FA               	bra	us918999
 18983                           
 18984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18985                           ;stkvar	_n @ sp[(-18)+2]
 18986  013CFC  0EF7               	movlw	-9
 18987  013CFE  AEE3               	btfss	plusw1,7,c
 18988  013D00  D002               	goto	u9190
 18989  013D02  0E01               	movlw	1
 18990  013D04  D001               	goto	u9200
 18991  013D06                     u9190:
 18992  013D06  0E00               	movlw	0
 18993  013D08                     u9200:
 18994  013D08  6E40               	movwf	(btemp+10)^0,c
 18995  013D0A  6A41               	clrf	(btemp+11)^0,c
 18996                           
 18997                           ;stkvar	_s @ sp[(-18)+12]
 18998  013D0C  0EFA               	movlw	-6
 18999  013D0E  0060  F103  FFE3   	movff	btemp+10,plusw1
 19000  013D14  0EFB               	movlw	-5
 19001  013D16  0060  F107  FFE3   	movff	btemp+11,plusw1
 19002                           
 19003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19004                           ;stkvar	_s @ sp[(-18)+12]
 19005  013D1C  0EFA               	movlw	-6
 19006  013D1E  006F FF8C  F036    	movff	plusw1,btemp
 19007  013D24  0EFB               	movlw	-5
 19008  013D26  50E3               	movf	plusw1,w,c
 19009  013D28  1036               	iorwf	btemp^0,w,c
 19010  013D2A  B4D8               	btfsc	status,2,c
 19011  013D2C  D025               	goto	u9220
 19012                           
 19013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19014                           ;stkvar	_n @ sp[(-18)+2]
 19015                           ;stkvar	_n @ sp[(-18)+2]
 19016  013D2E  0EF0               	movlw	-16
 19017  013D30  6CE3               	negf	plusw1,c
 19018  013D32  0EF1               	movlw	-15
 19019  013D34  1EE3               	comf	plusw1,f,c
 19020  013D36  0EF2               	movlw	-14
 19021  013D38  1EE3               	comf	plusw1,f,c
 19022  013D3A  0EF3               	movlw	-13
 19023  013D3C  1EE3               	comf	plusw1,f,c
 19024  013D3E  0EF4               	movlw	-12
 19025  013D40  1EE3               	comf	plusw1,f,c
 19026  013D42  0EF5               	movlw	-11
 19027  013D44  1EE3               	comf	plusw1,f,c
 19028  013D46  0EF6               	movlw	-10
 19029  013D48  1EE3               	comf	plusw1,f,c
 19030  013D4A  0EF7               	movlw	-9
 19031  013D4C  1EE3               	comf	plusw1,f,c
 19032  013D4E  E314               	bnc	u9220
 19033  013D50  0EF1               	movlw	-15
 19034  013D52  2AE3               	incf	plusw1,f,c
 19035  013D54  E311               	bnc	u9220
 19036  013D56  0EF2               	movlw	-14
 19037  013D58  2AE3               	incf	plusw1,f,c
 19038  013D5A  E30E               	bnc	u9220
 19039  013D5C  0EF3               	movlw	-13
 19040  013D5E  2AE3               	incf	plusw1,f,c
 19041  013D60  E30B               	bnc	u9220
 19042  013D62  0EF4               	movlw	-12
 19043  013D64  2AE3               	incf	plusw1,f,c
 19044  013D66  E308               	bnc	u9220
 19045  013D68  0EF5               	movlw	-11
 19046  013D6A  2AE3               	incf	plusw1,f,c
 19047  013D6C  E305               	bnc	u9220
 19048  013D6E  0EF6               	movlw	-10
 19049  013D70  2AE3               	incf	plusw1,f,c
 19050  013D72  E302               	bnc	u9220
 19051  013D74  0EF7               	movlw	-9
 19052  013D76  2AE3               	incf	plusw1,f,c
 19053  013D78                     u9220:
 19054                           
 19055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19056  013D78  AE22               	btfss	(_prec+1)^0,7,c
 19057                           
 19058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19059  013D7A  9223               	bcf	_flags^0,1,c
 19060                           
 19061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19062  013D7C  BE22               	btfsc	(_prec+1)^0,7,c
 19063  013D7E  D005               	goto	u9240
 19064  013D80  5022               	movf	(_prec+1)^0,w,c
 19065  013D82  E110               	bnz	l9324
 19066  013D84  0421               	decf	_prec^0,w,c
 19067  013D86  B0D8               	btfsc	status,0,c
 19068  013D88  D00D               	goto	l9324
 19069  013D8A                     u9240:
 19070  013D8A  0E01               	movlw	1
 19071  013D8C  6E40               	movwf	(btemp+10)^0,c
 19072  013D8E  0E00               	movlw	0
 19073  013D90  6E41               	movwf	(btemp+11)^0,c
 19074                           
 19075                           ;stkvar	_p @ sp[(-18)+16]
 19076  013D92  0EFE               	movlw	-2
 19077  013D94  0060  F103  FFE3   	movff	btemp+10,plusw1
 19078  013D9A  0EFF               	movlw	-1
 19079  013D9C  0060  F107  FFE3   	movff	btemp+11,plusw1
 19080  013DA2  D008               	goto	l1776
 19081  013DA4                     l9324:
 19082                           
 19083                           ;stkvar	_p @ sp[(-18)+16]
 19084  013DA4  0EFE               	movlw	-2
 19085  013DA6  0060  F087  FFE3   	movff	_prec,plusw1
 19086  013DAC  0EFF               	movlw	-1
 19087  013DAE  0060  F08B  FFE3   	movff	_prec+1,plusw1
 19088  013DB4                     l1776:
 19089                           
 19090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19091                           ;stkvar	_w @ sp[(-18)+14]
 19092  013DB4  0EFC               	movlw	-4
 19093  013DB6  0060  F07F  FFE3   	movff	_width,plusw1
 19094  013DBC  0EFD               	movlw	-3
 19095  013DBE  0060  F083  FFE3   	movff	_width+1,plusw1
 19096                           
 19097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19098                           ;stkvar	_s @ sp[(-18)+12]
 19099  013DC4  0EFA               	movlw	-6
 19100  013DC6  006F FF8C  F036    	movff	plusw1,btemp
 19101  013DCC  0EFB               	movlw	-5
 19102  013DCE  50E3               	movf	plusw1,w,c
 19103  013DD0  1036               	iorwf	btemp^0,w,c
 19104  013DD2  A4D8               	btfss	status,2,c
 19105  013DD4  D002               	goto	u9260
 19106  013DD6  A423               	btfss	_flags^0,2,c
 19107  013DD8  D00A               	goto	l9332
 19108  013DDA                     u9260:
 19109                           
 19110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19111                           ;stkvar	_w @ sp[(-18)+14]
 19112  013DDA  50E1               	movf	fsr1l,w,c
 19113  013DDC  0FFC               	addlw	-4
 19114  013DDE  6ED9               	movwf	fsr2l,c
 19115  013DE0  50E2               	movf	fsr1h,w,c
 19116  013DE2  6EDA               	movwf	fsr2h,c
 19117  013DE4  0EFF               	movlw	255
 19118  013DE6  22DA               	addwfc	fsr2h,f,c
 19119  013DE8  06DE               	decf	postinc2,f,c
 19120  013DEA  0E00               	movlw	0
 19121  013DEC  5ADD               	subwfb	postdec2,f,c
 19122  013DEE                     l9332:
 19123                           
 19124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19125  013DEE  0E4F               	movlw	79
 19126  013DF0  6E40               	movwf	(btemp+10)^0,c
 19127  013DF2  0E00               	movlw	0
 19128  013DF4  6E41               	movwf	(btemp+11)^0,c
 19129                           
 19130                           ;stkvar	_i @ sp[(-18)+10]
 19131  013DF6  0EF8               	movlw	-8
 19132  013DF8  0060  F103  FFE3   	movff	btemp+10,plusw1
 19133  013DFE  0EF9               	movlw	-7
 19134  013E00  0060  F107  FFE3   	movff	btemp+11,plusw1
 19135                           
 19136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19137  013E06  0102               	movlb	2	; () banked
 19138  013E08  6BFB               	clrf	(_dbuf+79)& (0+255),b
 19139                           
 19140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19141  013E0A  D109               	goto	l9346
 19142  013E0C                     l9336:
 19143                           
 19144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19145                           ;stkvar	_i @ sp[(-18)+10]
 19146  013E0C  50E1               	movf	fsr1l,w,c
 19147  013E0E  0FF8               	addlw	-8
 19148  013E10  6ED9               	movwf	fsr2l,c
 19149  013E12  50E2               	movf	fsr1h,w,c
 19150  013E14  6EDA               	movwf	fsr2h,c
 19151  013E16  0EFF               	movlw	255
 19152  013E18  22DA               	addwfc	fsr2h,f,c
 19153  013E1A  06DE               	decf	postinc2,f,c
 19154  013E1C  0E00               	movlw	0
 19155  013E1E  5ADD               	subwfb	postdec2,f,c
 19156                           
 19157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19158  013E20  0E0A               	movlw	10
 19159  013E22  6EE6               	movwf	postinc1,c
 19160  013E24  0E00               	movlw	0
 19161  013E26  6EE6               	movwf	postinc1,c
 19162  013E28  0E00               	movlw	0
 19163  013E2A  6EE6               	movwf	postinc1,c
 19164  013E2C  0E00               	movlw	0
 19165  013E2E  6EE6               	movwf	postinc1,c
 19166  013E30  0E00               	movlw	0
 19167  013E32  6EE6               	movwf	postinc1,c
 19168  013E34  0E00               	movlw	0
 19169  013E36  6EE6               	movwf	postinc1,c
 19170  013E38  0E00               	movlw	0
 19171  013E3A  6EE6               	movwf	postinc1,c
 19172  013E3C  0E00               	movlw	0
 19173  013E3E  6EE6               	movwf	postinc1,c
 19174                           
 19175                           ;stkvar	_n @ sp[(-26)+2]
 19176  013E40  50E1               	movf	fsr1l,w,c
 19177  013E42  0FE8               	addlw	-24
 19178  013E44  6ED9               	movwf	fsr2l,c
 19179  013E46  50E2               	movf	fsr1h,w,c
 19180  013E48  6EDA               	movwf	fsr2h,c
 19181  013E4A  0EFF               	movlw	255
 19182  013E4C  22DA               	addwfc	fsr2h,f,c
 19183  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 19184  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 19185  013E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 19186  013E60  006F FF7B FFE6     	movff	postinc2,postinc1
 19187  013E66  006F FF7B FFE6     	movff	postinc2,postinc1
 19188  013E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 19189  013E72  006F FF7B FFE6     	movff	postinc2,postinc1
 19190  013E78  006F FF7B FFE6     	movff	postinc2,postinc1
 19191  013E7E  EC28  F0AD         	call	___aomod	;wreg free
 19192  013E82  52E5               	movf	postdec1,f,c
 19193  013E84  006F FF9C  F04D    	movff	indf1,btemp+23
 19194  013E8A  52E5               	movf	postdec1,f,c
 19195  013E8C  006F FF9C  F04C    	movff	indf1,btemp+22
 19196  013E92  52E5               	movf	postdec1,f,c
 19197  013E94  006F FF9C  F04B    	movff	indf1,btemp+21
 19198  013E9A  52E5               	movf	postdec1,f,c
 19199  013E9C  006F FF9C  F04A    	movff	indf1,btemp+20
 19200  013EA2  52E5               	movf	postdec1,f,c
 19201  013EA4  006F FF9C  F049    	movff	indf1,btemp+19
 19202  013EAA  52E5               	movf	postdec1,f,c
 19203  013EAC  006F FF9C  F048    	movff	indf1,btemp+18
 19204  013EB2  52E5               	movf	postdec1,f,c
 19205  013EB4  006F FF9C  F047    	movff	indf1,btemp+17
 19206  013EBA  52E5               	movf	postdec1,f,c
 19207  013EBC  006F FF9C  F046    	movff	indf1,btemp+16
 19208  013EC2  0EF8               	movlw	248
 19209  013EC4  26E1               	addwf	fsr1l,f,c
 19210  013EC6  0EFF               	movlw	255
 19211  013EC8  22E2               	addwfc	fsr1h,f,c
 19212  013ECA  0060  F118  F040   	movff	btemp+16,btemp+10
 19213  013ED0  0060  F11C  F041   	movff	btemp+17,btemp+11
 19214  013ED6  0060  F103  FFE6   	movff	btemp+10,postinc1
 19215  013EDC  0060  F107  FFE6   	movff	btemp+11,postinc1
 19216  013EE2  EC23  F0C2         	call	_abs	;wreg free
 19217  013EE6  0E30               	movlw	48
 19218  013EE8  2636               	addwf	btemp^0,f,c
 19219                           
 19220                           ;stkvar	_i @ sp[(-18)+10]
 19221  013EEA  0EF8               	movlw	-8
 19222  013EEC  006F FF8C  F040    	movff	plusw1,btemp+10
 19223  013EF2  0EF9               	movlw	-7
 19224  013EF4  006F FF8C  F041    	movff	plusw1,btemp+11
 19225  013EFA  0EAC               	movlw	low _dbuf
 19226  013EFC  2440               	addwf	(btemp+10)^0,w,c
 19227  013EFE  6ED9               	movwf	fsr2l,c
 19228  013F00  0E02               	movlw	high _dbuf
 19229  013F02  2041               	addwfc	(btemp+11)^0,w,c
 19230  013F04  6EDA               	movwf	fsr2h,c
 19231  013F06  0060  F0DB  FFDF   	movff	btemp,indf2
 19232                           
 19233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19234                           ;stkvar	_p @ sp[(-18)+16]
 19235  013F0C  50E1               	movf	fsr1l,w,c
 19236  013F0E  0FFE               	addlw	-2
 19237  013F10  6ED9               	movwf	fsr2l,c
 19238  013F12  50E2               	movf	fsr1h,w,c
 19239  013F14  6EDA               	movwf	fsr2h,c
 19240  013F16  0EFF               	movlw	255
 19241  013F18  22DA               	addwfc	fsr2h,f,c
 19242  013F1A  06DE               	decf	postinc2,f,c
 19243  013F1C  0E00               	movlw	0
 19244  013F1E  5ADD               	subwfb	postdec2,f,c
 19245                           
 19246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19247                           ;stkvar	_w @ sp[(-18)+14]
 19248  013F20  50E1               	movf	fsr1l,w,c
 19249  013F22  0FFC               	addlw	-4
 19250  013F24  6ED9               	movwf	fsr2l,c
 19251  013F26  50E2               	movf	fsr1h,w,c
 19252  013F28  6EDA               	movwf	fsr2h,c
 19253  013F2A  0EFF               	movlw	255
 19254  013F2C  22DA               	addwfc	fsr2h,f,c
 19255  013F2E  06DE               	decf	postinc2,f,c
 19256  013F30  0E00               	movlw	0
 19257  013F32  5ADD               	subwfb	postdec2,f,c
 19258                           
 19259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19260  013F34  0E0A               	movlw	10
 19261  013F36  6EE6               	movwf	postinc1,c
 19262  013F38  0E00               	movlw	0
 19263  013F3A  6EE6               	movwf	postinc1,c
 19264  013F3C  0E00               	movlw	0
 19265  013F3E  6EE6               	movwf	postinc1,c
 19266  013F40  0E00               	movlw	0
 19267  013F42  6EE6               	movwf	postinc1,c
 19268  013F44  0E00               	movlw	0
 19269  013F46  6EE6               	movwf	postinc1,c
 19270  013F48  0E00               	movlw	0
 19271  013F4A  6EE6               	movwf	postinc1,c
 19272  013F4C  0E00               	movlw	0
 19273  013F4E  6EE6               	movwf	postinc1,c
 19274  013F50  0E00               	movlw	0
 19275  013F52  6EE6               	movwf	postinc1,c
 19276                           
 19277                           ;stkvar	_n @ sp[(-26)+2]
 19278  013F54  50E1               	movf	fsr1l,w,c
 19279  013F56  0FE8               	addlw	-24
 19280  013F58  6ED9               	movwf	fsr2l,c
 19281  013F5A  50E2               	movf	fsr1h,w,c
 19282  013F5C  6EDA               	movwf	fsr2h,c
 19283  013F5E  0EFF               	movlw	255
 19284  013F60  22DA               	addwfc	fsr2h,f,c
 19285  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 19286  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 19287  013F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 19288  013F74  006F FF7B FFE6     	movff	postinc2,postinc1
 19289  013F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 19290  013F80  006F FF7B FFE6     	movff	postinc2,postinc1
 19291  013F86  006F FF7B FFE6     	movff	postinc2,postinc1
 19292  013F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19293  013F92  ECAE  F0AA         	call	___aodiv	;wreg free
 19294  013F96  52E5               	movf	postdec1,f,c
 19295  013F98  006F FF9C  F04D    	movff	indf1,btemp+23
 19296  013F9E  52E5               	movf	postdec1,f,c
 19297  013FA0  006F FF9C  F04C    	movff	indf1,btemp+22
 19298  013FA6  52E5               	movf	postdec1,f,c
 19299  013FA8  006F FF9C  F04B    	movff	indf1,btemp+21
 19300  013FAE  52E5               	movf	postdec1,f,c
 19301  013FB0  006F FF9C  F04A    	movff	indf1,btemp+20
 19302  013FB6  52E5               	movf	postdec1,f,c
 19303  013FB8  006F FF9C  F049    	movff	indf1,btemp+19
 19304  013FBE  52E5               	movf	postdec1,f,c
 19305  013FC0  006F FF9C  F048    	movff	indf1,btemp+18
 19306  013FC6  52E5               	movf	postdec1,f,c
 19307  013FC8  006F FF9C  F047    	movff	indf1,btemp+17
 19308  013FCE  52E5               	movf	postdec1,f,c
 19309  013FD0  006F FF9C  F046    	movff	indf1,btemp+16
 19310  013FD6  0EF8               	movlw	248
 19311  013FD8  26E1               	addwf	fsr1l,f,c
 19312  013FDA  0EFF               	movlw	255
 19313  013FDC  22E2               	addwfc	fsr1h,f,c
 19314                           
 19315                           ;stkvar	_n @ sp[(-18)+2]
 19316  013FDE  0EF0               	movlw	-16
 19317  013FE0  0060  F11B  FFE3   	movff	btemp+16,plusw1
 19318  013FE6  0EF1               	movlw	-15
 19319  013FE8  0060  F11F  FFE3   	movff	btemp+17,plusw1
 19320  013FEE  0EF2               	movlw	-14
 19321  013FF0  0060  F123  FFE3   	movff	btemp+18,plusw1
 19322  013FF6  0EF3               	movlw	-13
 19323  013FF8  0060  F127  FFE3   	movff	btemp+19,plusw1
 19324  013FFE  0EF4               	movlw	-12
 19325  014000  0060  F12B  FFE3   	movff	btemp+20,plusw1
 19326  014006  0EF5               	movlw	-11
 19327  014008  0060  F12F  FFE3   	movff	btemp+21,plusw1
 19328  01400E  0EF6               	movlw	-10
 19329  014010  0060  F133  FFE3   	movff	btemp+22,plusw1
 19330  014016  0EF7               	movlw	-9
 19331  014018  0060  F137  FFE3   	movff	btemp+23,plusw1
 19332  01401E                     l9346:
 19333                           
 19334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19335                           ;stkvar	_i @ sp[(-18)+10]
 19336  01401E  0EF9               	movlw	-7
 19337  014020  BEE3               	btfsc	plusw1,7,c
 19338  014022  D036               	goto	u9310
 19339  014024  0EF9               	movlw	-7
 19340  014026  50E3               	movf	plusw1,w,c
 19341  014028  E104               	bnz	u9270
 19342  01402A  0EF8               	movlw	-8
 19343  01402C  04E3               	decf	plusw1,w,c
 19344  01402E  A0D8               	btfss	status,0,c
 19345  014030  D02F               	goto	u9310
 19346  014032                     u9270:
 19347                           
 19348                           ;stkvar	_n @ sp[(-18)+2]
 19349  014032  0EF0               	movlw	-16
 19350  014034  50E3               	movf	plusw1,w,c
 19351  014036  E115               	bnz	u9281
 19352  014038  0EF1               	movlw	-15
 19353  01403A  50E3               	movf	plusw1,w,c
 19354  01403C  E112               	bnz	u9281
 19355  01403E  0EF2               	movlw	-14
 19356  014040  50E3               	movf	plusw1,w,c
 19357  014042  E10F               	bnz	u9281
 19358  014044  0EF3               	movlw	-13
 19359  014046  50E3               	movf	plusw1,w,c
 19360  014048  E10C               	bnz	u9281
 19361  01404A  0EF4               	movlw	-12
 19362  01404C  50E3               	movf	plusw1,w,c
 19363  01404E  E109               	bnz	u9281
 19364  014050  0EF5               	movlw	-11
 19365  014052  50E3               	movf	plusw1,w,c
 19366  014054  E106               	bnz	u9281
 19367  014056  0EF6               	movlw	-10
 19368  014058  50E3               	movf	plusw1,w,c
 19369  01405A  E103               	bnz	u9281
 19370  01405C  0EF7               	movlw	-9
 19371  01405E  50E3               	movf	plusw1,w,c
 19372  014060  A4D8               	btfss	status,2,c
 19373  014062                     u9281:
 19374  014062  D6D4               	goto	l9336
 19375                           
 19376                           ;stkvar	_p @ sp[(-18)+16]
 19377  014064  0EFF               	movlw	-1
 19378  014066  BEE3               	btfsc	plusw1,7,c
 19379  014068  D007               	goto	u9290
 19380  01406A  0EFF               	movlw	-1
 19381  01406C  50E3               	movf	plusw1,w,c
 19382  01406E  E103               	bnz	u9291
 19383  014070  0EFE               	movlw	-2
 19384  014072  04E3               	decf	plusw1,w,c
 19385  014074  B0D8               	btfsc	status,0,c
 19386  014076                     u9291:
 19387  014076  D6CA               	goto	l9336
 19388  014078                     u9290:
 19389                           
 19390                           ;stkvar	_w @ sp[(-18)+14]
 19391  014078  0EFD               	movlw	-3
 19392  01407A  BEE3               	btfsc	plusw1,7,c
 19393  01407C  D009               	goto	u9310
 19394  01407E  0EFD               	movlw	-3
 19395  014080  50E3               	movf	plusw1,w,c
 19396  014082  E104               	bnz	u9300
 19397  014084  0EFC               	movlw	-4
 19398  014086  04E3               	decf	plusw1,w,c
 19399  014088  A0D8               	btfss	status,0,c
 19400  01408A  D002               	goto	u9310
 19401  01408C                     u9300:
 19402  01408C  B223               	btfsc	_flags^0,1,c
 19403  01408E  D6BE               	goto	l9336
 19404  014090                     u9310:
 19405                           
 19406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19407                           ;stkvar	_s @ sp[(-18)+12]
 19408  014090  0EFA               	movlw	-6
 19409  014092  006F FF8C  F036    	movff	plusw1,btemp
 19410  014098  0EFB               	movlw	-5
 19411  01409A  50E3               	movf	plusw1,w,c
 19412  01409C  1036               	iorwf	btemp^0,w,c
 19413  01409E  A4D8               	btfss	status,2,c
 19414  0140A0  D002               	goto	u9330
 19415  0140A2  A423               	btfss	_flags^0,2,c
 19416  0140A4  D033               	goto	l9370
 19417  0140A6                     u9330:
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19420                           ;stkvar	_i @ sp[(-18)+10]
 19421  0140A6  50E1               	movf	fsr1l,w,c
 19422  0140A8  0FF8               	addlw	-8
 19423  0140AA  6ED9               	movwf	fsr2l,c
 19424  0140AC  50E2               	movf	fsr1h,w,c
 19425  0140AE  6EDA               	movwf	fsr2h,c
 19426  0140B0  0EFF               	movlw	255
 19427  0140B2  22DA               	addwfc	fsr2h,f,c
 19428  0140B4  06DE               	decf	postinc2,f,c
 19429  0140B6  0E00               	movlw	0
 19430  0140B8  5ADD               	subwfb	postdec2,f,c
 19431                           
 19432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19433                           ;stkvar	_s @ sp[(-18)+12]
 19434  0140BA  0EFA               	movlw	-6
 19435  0140BC  006F FF8C  F036    	movff	plusw1,btemp
 19436  0140C2  0EFB               	movlw	-5
 19437  0140C4  50E3               	movf	plusw1,w,c
 19438  0140C6  1036               	iorwf	btemp^0,w,c
 19439  0140C8  A4D8               	btfss	status,2,c
 19440  0140CA  D002               	goto	l9366
 19441  0140CC  0E2B               	movlw	43
 19442  0140CE  D001               	goto	L19
 19443  0140D0                     l9366:
 19444  0140D0  0E2D               	movlw	45
 19445  0140D2                     L19:
 19446  0140D2  6E40               	movwf	(btemp+10)^0,c
 19447  0140D4  0E00               	movlw	0
 19448  0140D6  6E41               	movwf	(btemp+11)^0,c
 19449                           
 19450                           ;stkvar	_dtoa$4181 @ sp[(-18)+0]
 19451  0140D8  0EEE               	movlw	-18
 19452  0140DA  0060  F103  FFE3   	movff	btemp+10,plusw1
 19453  0140E0  0EEF               	movlw	-17
 19454  0140E2  0060  F107  FFE3   	movff	btemp+11,plusw1
 19455                           
 19456                           ;stkvar	_dtoa$4181 @ sp[(-18)+0]
 19457                           ;stkvar	_i @ sp[(-18)+10]
 19458  0140E8  0EF8               	movlw	-8
 19459  0140EA  006F FF8C  F040    	movff	plusw1,btemp+10
 19460  0140F0  0EF9               	movlw	-7
 19461  0140F2  006F FF8C  F041    	movff	plusw1,btemp+11
 19462  0140F8  0EAC               	movlw	low _dbuf
 19463  0140FA  2440               	addwf	(btemp+10)^0,w,c
 19464  0140FC  6ED9               	movwf	fsr2l,c
 19465  0140FE  0E02               	movlw	high _dbuf
 19466  014100  2041               	addwfc	(btemp+11)^0,w,c
 19467  014102  6EDA               	movwf	fsr2h,c
 19468  014104  0EEE               	movlw	-18
 19469  014106  006F FF8F FFDF     	movff	plusw1,indf2
 19470  01410C                     l9370:
 19471                           
 19472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19473                           ;stkvar	_w @ sp[(-18)+14]
 19474  01410C  0EFC               	movlw	-4
 19475  01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 19476  014114  006F FF8F FFE6     	movff	plusw1,postinc1
 19477                           
 19478                           ;stkvar	_i @ sp[(-20)+10]
 19479  01411A  0EAC               	movlw	low _dbuf
 19480  01411C  6E40               	movwf	(btemp+10)^0,c
 19481  01411E  0E02               	movlw	high _dbuf
 19482  014120  6E41               	movwf	(btemp+11)^0,c
 19483  014122  0EF6               	movlw	-10
 19484  014124  50E3               	movf	plusw1,w,c
 19485  014126  2640               	addwf	(btemp+10)^0,f,c
 19486  014128  0EF7               	movlw	-9
 19487  01412A  50E3               	movf	plusw1,w,c
 19488  01412C  2241               	addwfc	(btemp+11)^0,f,c
 19489  01412E  0060  F103  FFE6   	movff	btemp+10,postinc1
 19490  014134  0060  F107  FFE6   	movff	btemp+11,postinc1
 19491                           
 19492                           ;stkvar	_fp @ sp[(-22)+-2]
 19493  01413A  0EE8               	movlw	-24
 19494  01413C  006F FF8F FFE6     	movff	plusw1,postinc1
 19495  014142  006F FF8F FFE6     	movff	plusw1,postinc1
 19496  014148  EC34  F0B8         	call	_pad	;wreg free
 19497                           
 19498                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19499  01414C  0EE4               	movlw	228
 19500  01414E  26E1               	addwf	fsr1l,f,c
 19501  014150  0EFF               	movlw	255
 19502  014152  22E2               	addwfc	fsr1h,f,c
 19503  014154  0012               	return		;funcret
 19504  014156                     __end_of_dtoa:
 19505                           	opt callstack 0
 19506                           
 19507 ;; *************** function _abs *****************
 19508 ;; Defined at:
 19509 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19510 ;; Parameters:    Size  Location     Type
 19511 ;;  a               2  [STACK] int 
 19512 ;; Auto vars:     Size  Location     Type
 19513 ;;		None
 19514 ;; Return value:  Size  Location     Type
 19515 ;;                  2  [STACK] int 
 19516 ;; Registers used:
 19517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19518 ;; Tracked objects:
 19519 ;;		On entry : 0/2
 19520 ;;		On exit  : 0/0
 19521 ;;		Unchanged: 0/0
 19522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;Total ram usage:        0 bytes
 19528 ;; Hardware stack levels used:    1
 19529 ;; Hardware stack levels required when called:    6
 19530 ;; This function calls:
 19531 ;;		Nothing
 19532 ;; This function is called by:
 19533 ;;		_dtoa
 19534 ;; This function uses a reentrant model
 19535 ;;
 19536                           
 19537                           	psect	text63
 19538  018446                     __ptext63:
 19539                           	opt callstack 0
 19540  018446                     _abs:
 19541                           	opt callstack 17
 19542                           
 19543                           ;stkvar	_a @ sp[(0)+-2]
 19544                           
 19545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19546                           ;incstack = 0
 19547  018446  0EFF               	movlw	-1
 19548  018448  BEE3               	btfsc	plusw1,7,c
 19549  01844A  D007               	goto	u5140
 19550  01844C  0EFF               	movlw	-1
 19551  01844E  50E3               	movf	plusw1,w,c
 19552  018450  E112               	bnz	l6382
 19553  018452  0EFE               	movlw	-2
 19554  018454  04E3               	decf	plusw1,w,c
 19555  018456  B0D8               	btfsc	status,0,c
 19556  018458  D00E               	goto	l6382
 19557  01845A                     u5140:
 19558                           
 19559                           ;stkvar	_a @ sp[(0)+-2]
 19560  01845A  0EFE               	movlw	-2
 19561  01845C  006F FF8C  F036    	movff	plusw1,btemp
 19562  018462  1E36               	comf	btemp^0,f,c
 19563  018464  0EFF               	movlw	-1
 19564  018466  006F FF8C  F037    	movff	plusw1,btemp+1
 19565  01846C  1E37               	comf	(btemp+1)^0,f,c
 19566  01846E  2A36               	incf	btemp^0,f,c
 19567  018470  B4D8               	btfsc	status,2,c
 19568  018472  2A37               	incf	(btemp+1)^0,f,c
 19569  018474  D008               	goto	l2702
 19570  018476                     l6382:
 19571                           
 19572                           ;stkvar	_a @ sp[(0)+-2]
 19573  018476  0EFE               	movlw	-2
 19574  018478  006F FF8C  F036    	movff	plusw1,btemp
 19575  01847E  0EFF               	movlw	-1
 19576  018480  006F FF8C  F037    	movff	plusw1,btemp+1
 19577  018486                     l2702:
 19578                           
 19579                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19580  018486  52E5               	movf	postdec1,f,c
 19581  018488  52E5               	movf	postdec1,f,c
 19582  01848A  0012               	return		;funcret
 19583  01848C                     __end_of_abs:
 19584                           	opt callstack 0
 19585                           
 19586 ;; *************** function ___aomod *****************
 19587 ;; Defined at:
 19588 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19589 ;; Parameters:    Size  Location     Type
 19590 ;;  dividend        8  [STACK] long long 
 19591 ;;  divisor         8  [STACK] long long 
 19592 ;; Auto vars:     Size  Location     Type
 19593 ;;  sign            1  [STACK] unsigned char 
 19594 ;;  counter         1  [STACK] unsigned char 
 19595 ;; Return value:  Size  Location     Type
 19596 ;;                  8  [STACK] long long 
 19597 ;; Registers used:
 19598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19599 ;; Tracked objects:
 19600 ;;		On entry : 0/2
 19601 ;;		On exit  : 0/0
 19602 ;;		Unchanged: 0/0
 19603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19608 ;;Total ram usage:        0 bytes
 19609 ;; Hardware stack levels used:    1
 19610 ;; Hardware stack levels required when called:    6
 19611 ;; This function calls:
 19612 ;;		Nothing
 19613 ;; This function is called by:
 19614 ;;		_dtoa
 19615 ;; This function uses a reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text64
 19619  015A50                     __ptext64:
 19620                           	opt callstack 0
 19621  015A50                     ___aomod:
 19622                           	opt callstack 0
 19623                           
 19624                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19625  015A50  52E6               	movf	postinc1,f,c
 19626  015A52  52E6               	movf	postinc1,f,c
 19627                           
 19628                           ;stkvar	_sign @ sp[(-2)+0]
 19629                           
 19630                           ;incstack = 0
 19631  015A54  0EFE               	movlw	-2
 19632  015A56  6AE3               	clrf	plusw1,c
 19633                           
 19634                           ;stkvar	_dividend @ sp[(-2)+-8]
 19635  015A58  0EFD               	movlw	-3
 19636  015A5A  AEE3               	btfss	plusw1,7,c
 19637  015A5C  D028               	goto	l6540
 19638                           
 19639                           ;stkvar	_dividend @ sp[(-2)+-8]
 19640                           ;stkvar	_dividend @ sp[(-2)+-8]
 19641  015A5E  0EF6               	movlw	-10
 19642  015A60  6CE3               	negf	plusw1,c
 19643  015A62  0EF7               	movlw	-9
 19644  015A64  1EE3               	comf	plusw1,f,c
 19645  015A66  0EF8               	movlw	-8
 19646  015A68  1EE3               	comf	plusw1,f,c
 19647  015A6A  0EF9               	movlw	-7
 19648  015A6C  1EE3               	comf	plusw1,f,c
 19649  015A6E  0EFA               	movlw	-6
 19650  015A70  1EE3               	comf	plusw1,f,c
 19651  015A72  0EFB               	movlw	-5
 19652  015A74  1EE3               	comf	plusw1,f,c
 19653  015A76  0EFC               	movlw	-4
 19654  015A78  1EE3               	comf	plusw1,f,c
 19655  015A7A  0EFD               	movlw	-3
 19656  015A7C  1EE3               	comf	plusw1,f,c
 19657  015A7E  E314               	bnc	u5570
 19658  015A80  0EF7               	movlw	-9
 19659  015A82  2AE3               	incf	plusw1,f,c
 19660  015A84  E311               	bnc	u5570
 19661  015A86  0EF8               	movlw	-8
 19662  015A88  2AE3               	incf	plusw1,f,c
 19663  015A8A  E30E               	bnc	u5570
 19664  015A8C  0EF9               	movlw	-7
 19665  015A8E  2AE3               	incf	plusw1,f,c
 19666  015A90  E30B               	bnc	u5570
 19667  015A92  0EFA               	movlw	-6
 19668  015A94  2AE3               	incf	plusw1,f,c
 19669  015A96  E308               	bnc	u5570
 19670  015A98  0EFB               	movlw	-5
 19671  015A9A  2AE3               	incf	plusw1,f,c
 19672  015A9C  E305               	bnc	u5570
 19673  015A9E  0EFC               	movlw	-4
 19674  015AA0  2AE3               	incf	plusw1,f,c
 19675  015AA2  E302               	bnc	u5570
 19676  015AA4  0EFD               	movlw	-3
 19677  015AA6  2AE3               	incf	plusw1,f,c
 19678  015AA8                     u5570:
 19679                           
 19680                           ;stkvar	_sign @ sp[(-2)+0]
 19681  015AA8  0EFE               	movlw	-2
 19682  015AAA  6AE3               	clrf	plusw1,c
 19683  015AAC  2AE3               	incf	plusw1,f,c
 19684  015AAE                     l6540:
 19685                           
 19686                           ;stkvar	_divisor @ sp[(-2)+-16]
 19687  015AAE  0EF5               	movlw	-11
 19688  015AB0  AEE3               	btfss	plusw1,7,c
 19689  015AB2  D025               	goto	u5590
 19690                           
 19691                           ;stkvar	_divisor @ sp[(-2)+-16]
 19692                           ;stkvar	_divisor @ sp[(-2)+-16]
 19693  015AB4  0EEE               	movlw	-18
 19694  015AB6  6CE3               	negf	plusw1,c
 19695  015AB8  0EEF               	movlw	-17
 19696  015ABA  1EE3               	comf	plusw1,f,c
 19697  015ABC  0EF0               	movlw	-16
 19698  015ABE  1EE3               	comf	plusw1,f,c
 19699  015AC0  0EF1               	movlw	-15
 19700  015AC2  1EE3               	comf	plusw1,f,c
 19701  015AC4  0EF2               	movlw	-14
 19702  015AC6  1EE3               	comf	plusw1,f,c
 19703  015AC8  0EF3               	movlw	-13
 19704  015ACA  1EE3               	comf	plusw1,f,c
 19705  015ACC  0EF4               	movlw	-12
 19706  015ACE  1EE3               	comf	plusw1,f,c
 19707  015AD0  0EF5               	movlw	-11
 19708  015AD2  1EE3               	comf	plusw1,f,c
 19709  015AD4  E314               	bnc	u5590
 19710  015AD6  0EEF               	movlw	-17
 19711  015AD8  2AE3               	incf	plusw1,f,c
 19712  015ADA  E311               	bnc	u5590
 19713  015ADC  0EF0               	movlw	-16
 19714  015ADE  2AE3               	incf	plusw1,f,c
 19715  015AE0  E30E               	bnc	u5590
 19716  015AE2  0EF1               	movlw	-15
 19717  015AE4  2AE3               	incf	plusw1,f,c
 19718  015AE6  E30B               	bnc	u5590
 19719  015AE8  0EF2               	movlw	-14
 19720  015AEA  2AE3               	incf	plusw1,f,c
 19721  015AEC  E308               	bnc	u5590
 19722  015AEE  0EF3               	movlw	-13
 19723  015AF0  2AE3               	incf	plusw1,f,c
 19724  015AF2  E305               	bnc	u5590
 19725  015AF4  0EF4               	movlw	-12
 19726  015AF6  2AE3               	incf	plusw1,f,c
 19727  015AF8  E302               	bnc	u5590
 19728  015AFA  0EF5               	movlw	-11
 19729  015AFC  2AE3               	incf	plusw1,f,c
 19730  015AFE                     u5590:
 19731                           
 19732                           ;stkvar	_divisor @ sp[(-2)+-16]
 19733  015AFE  0EEE               	movlw	-18
 19734  015B00  50E3               	movf	plusw1,w,c
 19735  015B02  E116               	bnz	u5600
 19736  015B04  0EEF               	movlw	-17
 19737  015B06  50E3               	movf	plusw1,w,c
 19738  015B08  E113               	bnz	u5600
 19739  015B0A  0EF0               	movlw	-16
 19740  015B0C  50E3               	movf	plusw1,w,c
 19741  015B0E  E110               	bnz	u5600
 19742  015B10  0EF1               	movlw	-15
 19743  015B12  50E3               	movf	plusw1,w,c
 19744  015B14  E10D               	bnz	u5600
 19745  015B16  0EF2               	movlw	-14
 19746  015B18  50E3               	movf	plusw1,w,c
 19747  015B1A  E10A               	bnz	u5600
 19748  015B1C  0EF3               	movlw	-13
 19749  015B1E  50E3               	movf	plusw1,w,c
 19750  015B20  E107               	bnz	u5600
 19751  015B22  0EF4               	movlw	-12
 19752  015B24  50E3               	movf	plusw1,w,c
 19753  015B26  E104               	bnz	u5600
 19754  015B28  0EF5               	movlw	-11
 19755  015B2A  50E3               	movf	plusw1,w,c
 19756  015B2C  B4D8               	btfsc	status,2,c
 19757  015B2E  D075               	goto	u5630
 19758  015B30                     u5600:
 19759                           
 19760                           ;stkvar	_counter @ sp[(-2)+1]
 19761  015B30  0EFF               	movlw	-1
 19762  015B32  6AE3               	clrf	plusw1,c
 19763  015B34  D012               	goto	L20
 19764  015B36                     l6548:
 19765                           
 19766                           ;stkvar	_divisor @ sp[(-2)+-16]
 19767  015B36  90D8               	bcf	status,0,c
 19768  015B38  0EEE               	movlw	-18
 19769  015B3A  36E3               	rlcf	plusw1,f,c
 19770  015B3C  0EEF               	movlw	-17
 19771  015B3E  36E3               	rlcf	plusw1,f,c
 19772  015B40  0EF0               	movlw	-16
 19773  015B42  36E3               	rlcf	plusw1,f,c
 19774  015B44  0EF1               	movlw	-15
 19775  015B46  36E3               	rlcf	plusw1,f,c
 19776  015B48  0EF2               	movlw	-14
 19777  015B4A  36E3               	rlcf	plusw1,f,c
 19778  015B4C  0EF3               	movlw	-13
 19779  015B4E  36E3               	rlcf	plusw1,f,c
 19780  015B50  0EF4               	movlw	-12
 19781  015B52  36E3               	rlcf	plusw1,f,c
 19782  015B54  0EF5               	movlw	-11
 19783  015B56  36E3               	rlcf	plusw1,f,c
 19784                           
 19785                           ;stkvar	_counter @ sp[(-2)+1]
 19786  015B58  0EFF               	movlw	-1
 19787  015B5A                     L20:
 19788  015B5A  2AE3               	incf	plusw1,f,c
 19789                           
 19790                           ;stkvar	_divisor @ sp[(-2)+-16]
 19791  015B5C  0EF5               	movlw	-11
 19792  015B5E  AEE3               	btfss	plusw1,7,c
 19793  015B60  D7EA               	goto	l6548
 19794  015B62                     u5610:
 19795                           
 19796                           ;stkvar	_divisor @ sp[(-2)+-16]
 19797                           ;stkvar	_dividend @ sp[(-2)+-8]
 19798  015B62  50E1               	movf	fsr1l,w,c
 19799  015B64  0FF6               	addlw	-10
 19800  015B66  6ED9               	movwf	fsr2l,c
 19801  015B68  50E2               	movf	fsr1h,w,c
 19802  015B6A  6EDA               	movwf	fsr2h,c
 19803  015B6C  0EFF               	movlw	255
 19804  015B6E  22DA               	addwfc	fsr2h,f,c
 19805  015B70  0EEE               	movlw	-18
 19806  015B72  50E3               	movf	plusw1,w,c
 19807  015B74  5CDE               	subwf	postinc2,w,c
 19808  015B76  0EEF               	movlw	-17
 19809  015B78  50E3               	movf	plusw1,w,c
 19810  015B7A  58DE               	subwfb	postinc2,w,c
 19811  015B7C  0EF0               	movlw	-16
 19812  015B7E  50E3               	movf	plusw1,w,c
 19813  015B80  58DE               	subwfb	postinc2,w,c
 19814  015B82  0EF1               	movlw	-15
 19815  015B84  50E3               	movf	plusw1,w,c
 19816  015B86  58DE               	subwfb	postinc2,w,c
 19817  015B88  0EF2               	movlw	-14
 19818  015B8A  50E3               	movf	plusw1,w,c
 19819  015B8C  58DE               	subwfb	postinc2,w,c
 19820  015B8E  0EF3               	movlw	-13
 19821  015B90  50E3               	movf	plusw1,w,c
 19822  015B92  58DE               	subwfb	postinc2,w,c
 19823  015B94  0EF4               	movlw	-12
 19824  015B96  50E3               	movf	plusw1,w,c
 19825  015B98  58DE               	subwfb	postinc2,w,c
 19826  015B9A  0EF5               	movlw	-11
 19827  015B9C  50E3               	movf	plusw1,w,c
 19828  015B9E  58DE               	subwfb	postinc2,w,c
 19829  015BA0  A0D8               	btfss	status,0,c
 19830  015BA2  D01F               	goto	l6556
 19831                           
 19832                           ;stkvar	_divisor @ sp[(-2)+-16]
 19833                           ;stkvar	_dividend @ sp[(-2)+-8]
 19834  015BA4  50E1               	movf	fsr1l,w,c
 19835  015BA6  0FF6               	addlw	-10
 19836  015BA8  6ED9               	movwf	fsr2l,c
 19837  015BAA  50E2               	movf	fsr1h,w,c
 19838  015BAC  6EDA               	movwf	fsr2h,c
 19839  015BAE  0EFF               	movlw	255
 19840  015BB0  22DA               	addwfc	fsr2h,f,c
 19841  015BB2  0EEE               	movlw	-18
 19842  015BB4  50E3               	movf	plusw1,w,c
 19843  015BB6  5EDE               	subwf	postinc2,f,c
 19844  015BB8  0EEF               	movlw	-17
 19845  015BBA  50E3               	movf	plusw1,w,c
 19846  015BBC  5ADE               	subwfb	postinc2,f,c
 19847  015BBE  0EF0               	movlw	-16
 19848  015BC0  50E3               	movf	plusw1,w,c
 19849  015BC2  5ADE               	subwfb	postinc2,f,c
 19850  015BC4  0EF1               	movlw	-15
 19851  015BC6  50E3               	movf	plusw1,w,c
 19852  015BC8  5ADE               	subwfb	postinc2,f,c
 19853  015BCA  0EF2               	movlw	-14
 19854  015BCC  50E3               	movf	plusw1,w,c
 19855  015BCE  5ADE               	subwfb	postinc2,f,c
 19856  015BD0  0EF3               	movlw	-13
 19857  015BD2  50E3               	movf	plusw1,w,c
 19858  015BD4  5ADE               	subwfb	postinc2,f,c
 19859  015BD6  0EF4               	movlw	-12
 19860  015BD8  50E3               	movf	plusw1,w,c
 19861  015BDA  5ADE               	subwfb	postinc2,f,c
 19862  015BDC  0EF5               	movlw	-11
 19863  015BDE  50E3               	movf	plusw1,w,c
 19864  015BE0  5ADE               	subwfb	postinc2,f,c
 19865  015BE2                     l6556:
 19866                           
 19867                           ;stkvar	_divisor @ sp[(-2)+-16]
 19868  015BE2  90D8               	bcf	status,0,c
 19869  015BE4  0EF5               	movlw	-11
 19870  015BE6  32E3               	rrcf	plusw1,f,c
 19871  015BE8  0EF4               	movlw	-12
 19872  015BEA  32E3               	rrcf	plusw1,f,c
 19873  015BEC  0EF3               	movlw	-13
 19874  015BEE  32E3               	rrcf	plusw1,f,c
 19875  015BF0  0EF2               	movlw	-14
 19876  015BF2  32E3               	rrcf	plusw1,f,c
 19877  015BF4  0EF1               	movlw	-15
 19878  015BF6  32E3               	rrcf	plusw1,f,c
 19879  015BF8  0EF0               	movlw	-16
 19880  015BFA  32E3               	rrcf	plusw1,f,c
 19881  015BFC  0EEF               	movlw	-17
 19882  015BFE  32E3               	rrcf	plusw1,f,c
 19883  015C00  0EEE               	movlw	-18
 19884  015C02  32E3               	rrcf	plusw1,f,c
 19885                           
 19886                           ;stkvar	_counter @ sp[(-2)+1]
 19887  015C04  0EFF               	movlw	-1
 19888  015C06  50E3               	movf	plusw1,w,c
 19889  015C08  6E36               	movwf	btemp^0,c
 19890  015C0A  0E01               	movlw	1
 19891  015C0C  5E36               	subwf	btemp^0,f,c
 19892  015C0E  0EFF               	movlw	-1
 19893  015C10  0060  F0DB  FFE3   	movff	btemp,plusw1
 19894  015C16  A4D8               	btfss	status,2,c
 19895  015C18  D7A4               	goto	u5610
 19896  015C1A                     u5630:
 19897                           
 19898                           ;stkvar	_sign @ sp[(-2)+0]
 19899  015C1A  0EFE               	movlw	-2
 19900  015C1C  50E3               	movf	plusw1,w,c
 19901  015C1E  B4D8               	btfsc	status,2,c
 19902  015C20  D025               	goto	u5650
 19903                           
 19904                           ;stkvar	_dividend @ sp[(-2)+-8]
 19905                           ;stkvar	_dividend @ sp[(-2)+-8]
 19906  015C22  0EF6               	movlw	-10
 19907  015C24  6CE3               	negf	plusw1,c
 19908  015C26  0EF7               	movlw	-9
 19909  015C28  1EE3               	comf	plusw1,f,c
 19910  015C2A  0EF8               	movlw	-8
 19911  015C2C  1EE3               	comf	plusw1,f,c
 19912  015C2E  0EF9               	movlw	-7
 19913  015C30  1EE3               	comf	plusw1,f,c
 19914  015C32  0EFA               	movlw	-6
 19915  015C34  1EE3               	comf	plusw1,f,c
 19916  015C36  0EFB               	movlw	-5
 19917  015C38  1EE3               	comf	plusw1,f,c
 19918  015C3A  0EFC               	movlw	-4
 19919  015C3C  1EE3               	comf	plusw1,f,c
 19920  015C3E  0EFD               	movlw	-3
 19921  015C40  1EE3               	comf	plusw1,f,c
 19922  015C42  E314               	bnc	u5650
 19923  015C44  0EF7               	movlw	-9
 19924  015C46  2AE3               	incf	plusw1,f,c
 19925  015C48  E311               	bnc	u5650
 19926  015C4A  0EF8               	movlw	-8
 19927  015C4C  2AE3               	incf	plusw1,f,c
 19928  015C4E  E30E               	bnc	u5650
 19929  015C50  0EF9               	movlw	-7
 19930  015C52  2AE3               	incf	plusw1,f,c
 19931  015C54  E30B               	bnc	u5650
 19932  015C56  0EFA               	movlw	-6
 19933  015C58  2AE3               	incf	plusw1,f,c
 19934  015C5A  E308               	bnc	u5650
 19935  015C5C  0EFB               	movlw	-5
 19936  015C5E  2AE3               	incf	plusw1,f,c
 19937  015C60  E305               	bnc	u5650
 19938  015C62  0EFC               	movlw	-4
 19939  015C64  2AE3               	incf	plusw1,f,c
 19940  015C66  E302               	bnc	u5650
 19941  015C68  0EFD               	movlw	-3
 19942  015C6A  2AE3               	incf	plusw1,f,c
 19943  015C6C                     u5650:
 19944                           
 19945                           ;stkvar	_dividend @ sp[(-2)+-8]
 19946  015C6C  0EF6               	movlw	246
 19947  015C6E  24E1               	addwf	fsr1l,w,c
 19948  015C70  6ED9               	movwf	fsr2l,c
 19949  015C72  0EFF               	movlw	255
 19950  015C74  20E2               	addwfc	fsr1h,w,c
 19951  015C76  6EDA               	movwf	fsr2h,c
 19952                           
 19953                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19954  015C78  0E08               	movlw	8
 19955  015C7A  6E36               	movwf	btemp^0,c
 19956  015C7C  0EF6               	movlw	-10
 19957  015C7E                     us566999:
 19958  015C7E  006F FF7B FFE3     	movff	postinc2,plusw1
 19959  015C84  28E8               	incf	wreg,w,c
 19960  015C86  2E36               	decfsz	btemp^0,f,c
 19961  015C88  D7FA               	bra	us566999
 19962                           
 19963                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19964  015C8A  52E5               	movf	postdec1,f,c
 19965  015C8C  52E5               	movf	postdec1,f,c
 19966  015C8E  0012               	return		;funcret
 19967  015C90                     __end_of___aomod:
 19968                           	opt callstack 0
 19969                           
 19970 ;; *************** function ___aodiv *****************
 19971 ;; Defined at:
 19972 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19973 ;; Parameters:    Size  Location     Type
 19974 ;;  dividend        8  [STACK] long long 
 19975 ;;  divisor         8  [STACK] long long 
 19976 ;; Auto vars:     Size  Location     Type
 19977 ;;  quotient        8  [STACK] long long 
 19978 ;;  sign            1  [STACK] unsigned char 
 19979 ;;  counter         1  [STACK] unsigned char 
 19980 ;; Return value:  Size  Location     Type
 19981 ;;                  8  [STACK] long long 
 19982 ;; Registers used:
 19983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19984 ;; Tracked objects:
 19985 ;;		On entry : 0/2
 19986 ;;		On exit  : 0/0
 19987 ;;		Unchanged: 0/0
 19988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19993 ;;Total ram usage:        0 bytes
 19994 ;; Hardware stack levels used:    1
 19995 ;; Hardware stack levels required when called:    6
 19996 ;; This function calls:
 19997 ;;		Nothing
 19998 ;; This function is called by:
 19999 ;;		_dtoa
 20000 ;; This function uses a reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text65
 20004  01555C                     __ptext65:
 20005                           	opt callstack 0
 20006  01555C                     ___aodiv:
 20007                           	opt callstack 0
 20008                           
 20009                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20010  01555C  0E0A               	movlw	10
 20011  01555E  26E1               	addwf	fsr1l,f,c
 20012  015560  0E00               	movlw	0
 20013  015562  22E2               	addwfc	fsr1h,f,c
 20014                           
 20015                           ;stkvar	_sign @ sp[(-10)+8]
 20016                           
 20017                           ;incstack = 0
 20018  015564  0EFE               	movlw	-2
 20019  015566  6AE3               	clrf	plusw1,c
 20020                           
 20021                           ;stkvar	_divisor @ sp[(-10)+-16]
 20022  015568  0EED               	movlw	-19
 20023  01556A  AEE3               	btfss	plusw1,7,c
 20024  01556C  D028               	goto	l6496
 20025                           
 20026                           ;stkvar	_divisor @ sp[(-10)+-16]
 20027                           ;stkvar	_divisor @ sp[(-10)+-16]
 20028  01556E  0EE6               	movlw	-26
 20029  015570  6CE3               	negf	plusw1,c
 20030  015572  0EE7               	movlw	-25
 20031  015574  1EE3               	comf	plusw1,f,c
 20032  015576  0EE8               	movlw	-24
 20033  015578  1EE3               	comf	plusw1,f,c
 20034  01557A  0EE9               	movlw	-23
 20035  01557C  1EE3               	comf	plusw1,f,c
 20036  01557E  0EEA               	movlw	-22
 20037  015580  1EE3               	comf	plusw1,f,c
 20038  015582  0EEB               	movlw	-21
 20039  015584  1EE3               	comf	plusw1,f,c
 20040  015586  0EEC               	movlw	-20
 20041  015588  1EE3               	comf	plusw1,f,c
 20042  01558A  0EED               	movlw	-19
 20043  01558C  1EE3               	comf	plusw1,f,c
 20044  01558E  E314               	bnc	u5450
 20045  015590  0EE7               	movlw	-25
 20046  015592  2AE3               	incf	plusw1,f,c
 20047  015594  E311               	bnc	u5450
 20048  015596  0EE8               	movlw	-24
 20049  015598  2AE3               	incf	plusw1,f,c
 20050  01559A  E30E               	bnc	u5450
 20051  01559C  0EE9               	movlw	-23
 20052  01559E  2AE3               	incf	plusw1,f,c
 20053  0155A0  E30B               	bnc	u5450
 20054  0155A2  0EEA               	movlw	-22
 20055  0155A4  2AE3               	incf	plusw1,f,c
 20056  0155A6  E308               	bnc	u5450
 20057  0155A8  0EEB               	movlw	-21
 20058  0155AA  2AE3               	incf	plusw1,f,c
 20059  0155AC  E305               	bnc	u5450
 20060  0155AE  0EEC               	movlw	-20
 20061  0155B0  2AE3               	incf	plusw1,f,c
 20062  0155B2  E302               	bnc	u5450
 20063  0155B4  0EED               	movlw	-19
 20064  0155B6  2AE3               	incf	plusw1,f,c
 20065  0155B8                     u5450:
 20066                           
 20067                           ;stkvar	_sign @ sp[(-10)+8]
 20068  0155B8  0EFE               	movlw	-2
 20069  0155BA  6AE3               	clrf	plusw1,c
 20070  0155BC  2AE3               	incf	plusw1,f,c
 20071  0155BE                     l6496:
 20072                           
 20073                           ;stkvar	_dividend @ sp[(-10)+-8]
 20074  0155BE  0EF5               	movlw	-11
 20075  0155C0  AEE3               	btfss	plusw1,7,c
 20076  0155C2  D027               	goto	l6502
 20077                           
 20078                           ;stkvar	_dividend @ sp[(-10)+-8]
 20079                           ;stkvar	_dividend @ sp[(-10)+-8]
 20080  0155C4  0EEE               	movlw	-18
 20081  0155C6  6CE3               	negf	plusw1,c
 20082  0155C8  0EEF               	movlw	-17
 20083  0155CA  1EE3               	comf	plusw1,f,c
 20084  0155CC  0EF0               	movlw	-16
 20085  0155CE  1EE3               	comf	plusw1,f,c
 20086  0155D0  0EF1               	movlw	-15
 20087  0155D2  1EE3               	comf	plusw1,f,c
 20088  0155D4  0EF2               	movlw	-14
 20089  0155D6  1EE3               	comf	plusw1,f,c
 20090  0155D8  0EF3               	movlw	-13
 20091  0155DA  1EE3               	comf	plusw1,f,c
 20092  0155DC  0EF4               	movlw	-12
 20093  0155DE  1EE3               	comf	plusw1,f,c
 20094  0155E0  0EF5               	movlw	-11
 20095  0155E2  1EE3               	comf	plusw1,f,c
 20096  0155E4  E314               	bnc	u5470
 20097  0155E6  0EEF               	movlw	-17
 20098  0155E8  2AE3               	incf	plusw1,f,c
 20099  0155EA  E311               	bnc	u5470
 20100  0155EC  0EF0               	movlw	-16
 20101  0155EE  2AE3               	incf	plusw1,f,c
 20102  0155F0  E30E               	bnc	u5470
 20103  0155F2  0EF1               	movlw	-15
 20104  0155F4  2AE3               	incf	plusw1,f,c
 20105  0155F6  E30B               	bnc	u5470
 20106  0155F8  0EF2               	movlw	-14
 20107  0155FA  2AE3               	incf	plusw1,f,c
 20108  0155FC  E308               	bnc	u5470
 20109  0155FE  0EF3               	movlw	-13
 20110  015600  2AE3               	incf	plusw1,f,c
 20111  015602  E305               	bnc	u5470
 20112  015604  0EF4               	movlw	-12
 20113  015606  2AE3               	incf	plusw1,f,c
 20114  015608  E302               	bnc	u5470
 20115  01560A  0EF5               	movlw	-11
 20116  01560C  2AE3               	incf	plusw1,f,c
 20117  01560E                     u5470:
 20118                           
 20119                           ;stkvar	_sign @ sp[(-10)+8]
 20120  01560E  0EFE               	movlw	-2
 20121  015610  70E3               	btg	plusw1,0,c
 20122  015612                     l6502:
 20123                           
 20124                           ;stkvar	_quotient @ sp[(-10)+0]
 20125  015612  0E07               	movlw	7
 20126  015614  6E36               	movwf	btemp^0,c
 20127  015616  0EF6               	movlw	-10
 20128  015618                     u5481:
 20129  015618  6AE3               	clrf	plusw1,c
 20130  01561A  2AE8               	incf	wreg,f,c
 20131  01561C  0636               	decf	btemp^0,f,c
 20132  01561E  E2FC               	bc	u5481
 20133                           
 20134                           ;stkvar	_divisor @ sp[(-10)+-16]
 20135  015620  0EE6               	movlw	-26
 20136  015622  50E3               	movf	plusw1,w,c
 20137  015624  E116               	bnz	u5490
 20138  015626  0EE7               	movlw	-25
 20139  015628  50E3               	movf	plusw1,w,c
 20140  01562A  E113               	bnz	u5490
 20141  01562C  0EE8               	movlw	-24
 20142  01562E  50E3               	movf	plusw1,w,c
 20143  015630  E110               	bnz	u5490
 20144  015632  0EE9               	movlw	-23
 20145  015634  50E3               	movf	plusw1,w,c
 20146  015636  E10D               	bnz	u5490
 20147  015638  0EEA               	movlw	-22
 20148  01563A  50E3               	movf	plusw1,w,c
 20149  01563C  E10A               	bnz	u5490
 20150  01563E  0EEB               	movlw	-21
 20151  015640  50E3               	movf	plusw1,w,c
 20152  015642  E107               	bnz	u5490
 20153  015644  0EEC               	movlw	-20
 20154  015646  50E3               	movf	plusw1,w,c
 20155  015648  E104               	bnz	u5490
 20156  01564A  0EED               	movlw	-19
 20157  01564C  50E3               	movf	plusw1,w,c
 20158  01564E  B4D8               	btfsc	status,2,c
 20159  015650  D088               	goto	u5520
 20160  015652                     u5490:
 20161                           
 20162                           ;stkvar	_counter @ sp[(-10)+9]
 20163  015652  0EFF               	movlw	-1
 20164  015654  6AE3               	clrf	plusw1,c
 20165  015656  D012               	goto	L21
 20166  015658                     l6508:
 20167                           
 20168                           ;stkvar	_divisor @ sp[(-10)+-16]
 20169  015658  90D8               	bcf	status,0,c
 20170  01565A  0EE6               	movlw	-26
 20171  01565C  36E3               	rlcf	plusw1,f,c
 20172  01565E  0EE7               	movlw	-25
 20173  015660  36E3               	rlcf	plusw1,f,c
 20174  015662  0EE8               	movlw	-24
 20175  015664  36E3               	rlcf	plusw1,f,c
 20176  015666  0EE9               	movlw	-23
 20177  015668  36E3               	rlcf	plusw1,f,c
 20178  01566A  0EEA               	movlw	-22
 20179  01566C  36E3               	rlcf	plusw1,f,c
 20180  01566E  0EEB               	movlw	-21
 20181  015670  36E3               	rlcf	plusw1,f,c
 20182  015672  0EEC               	movlw	-20
 20183  015674  36E3               	rlcf	plusw1,f,c
 20184  015676  0EED               	movlw	-19
 20185  015678  36E3               	rlcf	plusw1,f,c
 20186                           
 20187                           ;stkvar	_counter @ sp[(-10)+9]
 20188  01567A  0EFF               	movlw	-1
 20189  01567C                     L21:
 20190  01567C  2AE3               	incf	plusw1,f,c
 20191                           
 20192                           ;stkvar	_divisor @ sp[(-10)+-16]
 20193  01567E  0EED               	movlw	-19
 20194  015680  AEE3               	btfss	plusw1,7,c
 20195  015682  D7EA               	goto	l6508
 20196  015684                     u5500:
 20197                           
 20198                           ;stkvar	_quotient @ sp[(-10)+0]
 20199  015684  90D8               	bcf	status,0,c
 20200  015686  0EF6               	movlw	-10
 20201  015688  36E3               	rlcf	plusw1,f,c
 20202  01568A  0EF7               	movlw	-9
 20203  01568C  36E3               	rlcf	plusw1,f,c
 20204  01568E  0EF8               	movlw	-8
 20205  015690  36E3               	rlcf	plusw1,f,c
 20206  015692  0EF9               	movlw	-7
 20207  015694  36E3               	rlcf	plusw1,f,c
 20208  015696  0EFA               	movlw	-6
 20209  015698  36E3               	rlcf	plusw1,f,c
 20210  01569A  0EFB               	movlw	-5
 20211  01569C  36E3               	rlcf	plusw1,f,c
 20212  01569E  0EFC               	movlw	-4
 20213  0156A0  36E3               	rlcf	plusw1,f,c
 20214  0156A2  0EFD               	movlw	-3
 20215  0156A4  36E3               	rlcf	plusw1,f,c
 20216                           
 20217                           ;stkvar	_divisor @ sp[(-10)+-16]
 20218                           ;stkvar	_dividend @ sp[(-10)+-8]
 20219  0156A6  50E1               	movf	fsr1l,w,c
 20220  0156A8  0FEE               	addlw	-18
 20221  0156AA  6ED9               	movwf	fsr2l,c
 20222  0156AC  50E2               	movf	fsr1h,w,c
 20223  0156AE  6EDA               	movwf	fsr2h,c
 20224  0156B0  0EFF               	movlw	255
 20225  0156B2  22DA               	addwfc	fsr2h,f,c
 20226  0156B4  0EE6               	movlw	-26
 20227  0156B6  50E3               	movf	plusw1,w,c
 20228  0156B8  5CDE               	subwf	postinc2,w,c
 20229  0156BA  0EE7               	movlw	-25
 20230  0156BC  50E3               	movf	plusw1,w,c
 20231  0156BE  58DE               	subwfb	postinc2,w,c
 20232  0156C0  0EE8               	movlw	-24
 20233  0156C2  50E3               	movf	plusw1,w,c
 20234  0156C4  58DE               	subwfb	postinc2,w,c
 20235  0156C6  0EE9               	movlw	-23
 20236  0156C8  50E3               	movf	plusw1,w,c
 20237  0156CA  58DE               	subwfb	postinc2,w,c
 20238  0156CC  0EEA               	movlw	-22
 20239  0156CE  50E3               	movf	plusw1,w,c
 20240  0156D0  58DE               	subwfb	postinc2,w,c
 20241  0156D2  0EEB               	movlw	-21
 20242  0156D4  50E3               	movf	plusw1,w,c
 20243  0156D6  58DE               	subwfb	postinc2,w,c
 20244  0156D8  0EEC               	movlw	-20
 20245  0156DA  50E3               	movf	plusw1,w,c
 20246  0156DC  58DE               	subwfb	postinc2,w,c
 20247  0156DE  0EED               	movlw	-19
 20248  0156E0  50E3               	movf	plusw1,w,c
 20249  0156E2  58DE               	subwfb	postinc2,w,c
 20250  0156E4  A0D8               	btfss	status,0,c
 20251  0156E6  D021               	goto	l6520
 20252                           
 20253                           ;stkvar	_divisor @ sp[(-10)+-16]
 20254                           ;stkvar	_dividend @ sp[(-10)+-8]
 20255  0156E8  50E1               	movf	fsr1l,w,c
 20256  0156EA  0FEE               	addlw	-18
 20257  0156EC  6ED9               	movwf	fsr2l,c
 20258  0156EE  50E2               	movf	fsr1h,w,c
 20259  0156F0  6EDA               	movwf	fsr2h,c
 20260  0156F2  0EFF               	movlw	255
 20261  0156F4  22DA               	addwfc	fsr2h,f,c
 20262  0156F6  0EE6               	movlw	-26
 20263  0156F8  50E3               	movf	plusw1,w,c
 20264  0156FA  5EDE               	subwf	postinc2,f,c
 20265  0156FC  0EE7               	movlw	-25
 20266  0156FE  50E3               	movf	plusw1,w,c
 20267  015700  5ADE               	subwfb	postinc2,f,c
 20268  015702  0EE8               	movlw	-24
 20269  015704  50E3               	movf	plusw1,w,c
 20270  015706  5ADE               	subwfb	postinc2,f,c
 20271  015708  0EE9               	movlw	-23
 20272  01570A  50E3               	movf	plusw1,w,c
 20273  01570C  5ADE               	subwfb	postinc2,f,c
 20274  01570E  0EEA               	movlw	-22
 20275  015710  50E3               	movf	plusw1,w,c
 20276  015712  5ADE               	subwfb	postinc2,f,c
 20277  015714  0EEB               	movlw	-21
 20278  015716  50E3               	movf	plusw1,w,c
 20279  015718  5ADE               	subwfb	postinc2,f,c
 20280  01571A  0EEC               	movlw	-20
 20281  01571C  50E3               	movf	plusw1,w,c
 20282  01571E  5ADE               	subwfb	postinc2,f,c
 20283  015720  0EED               	movlw	-19
 20284  015722  50E3               	movf	plusw1,w,c
 20285  015724  5ADE               	subwfb	postinc2,f,c
 20286                           
 20287                           ;stkvar	_quotient @ sp[(-10)+0]
 20288  015726  0EF6               	movlw	-10
 20289  015728  80E3               	bsf	plusw1,0,c
 20290  01572A                     l6520:
 20291                           
 20292                           ;stkvar	_divisor @ sp[(-10)+-16]
 20293  01572A  90D8               	bcf	status,0,c
 20294  01572C  0EED               	movlw	-19
 20295  01572E  32E3               	rrcf	plusw1,f,c
 20296  015730  0EEC               	movlw	-20
 20297  015732  32E3               	rrcf	plusw1,f,c
 20298  015734  0EEB               	movlw	-21
 20299  015736  32E3               	rrcf	plusw1,f,c
 20300  015738  0EEA               	movlw	-22
 20301  01573A  32E3               	rrcf	plusw1,f,c
 20302  01573C  0EE9               	movlw	-23
 20303  01573E  32E3               	rrcf	plusw1,f,c
 20304  015740  0EE8               	movlw	-24
 20305  015742  32E3               	rrcf	plusw1,f,c
 20306  015744  0EE7               	movlw	-25
 20307  015746  32E3               	rrcf	plusw1,f,c
 20308  015748  0EE6               	movlw	-26
 20309  01574A  32E3               	rrcf	plusw1,f,c
 20310                           
 20311                           ;stkvar	_counter @ sp[(-10)+9]
 20312  01574C  0EFF               	movlw	-1
 20313  01574E  50E3               	movf	plusw1,w,c
 20314  015750  6E36               	movwf	btemp^0,c
 20315  015752  0E01               	movlw	1
 20316  015754  5E36               	subwf	btemp^0,f,c
 20317  015756  0EFF               	movlw	-1
 20318  015758  0060  F0DB  FFE3   	movff	btemp,plusw1
 20319  01575E  A4D8               	btfss	status,2,c
 20320  015760  D791               	goto	u5500
 20321  015762                     u5520:
 20322                           
 20323                           ;stkvar	_sign @ sp[(-10)+8]
 20324  015762  0EFE               	movlw	-2
 20325  015764  50E3               	movf	plusw1,w,c
 20326  015766  B4D8               	btfsc	status,2,c
 20327  015768  D025               	goto	u5540
 20328                           
 20329                           ;stkvar	_quotient @ sp[(-10)+0]
 20330                           ;stkvar	_quotient @ sp[(-10)+0]
 20331  01576A  0EF6               	movlw	-10
 20332  01576C  6CE3               	negf	plusw1,c
 20333  01576E  0EF7               	movlw	-9
 20334  015770  1EE3               	comf	plusw1,f,c
 20335  015772  0EF8               	movlw	-8
 20336  015774  1EE3               	comf	plusw1,f,c
 20337  015776  0EF9               	movlw	-7
 20338  015778  1EE3               	comf	plusw1,f,c
 20339  01577A  0EFA               	movlw	-6
 20340  01577C  1EE3               	comf	plusw1,f,c
 20341  01577E  0EFB               	movlw	-5
 20342  015780  1EE3               	comf	plusw1,f,c
 20343  015782  0EFC               	movlw	-4
 20344  015784  1EE3               	comf	plusw1,f,c
 20345  015786  0EFD               	movlw	-3
 20346  015788  1EE3               	comf	plusw1,f,c
 20347  01578A  E314               	bnc	u5540
 20348  01578C  0EF7               	movlw	-9
 20349  01578E  2AE3               	incf	plusw1,f,c
 20350  015790  E311               	bnc	u5540
 20351  015792  0EF8               	movlw	-8
 20352  015794  2AE3               	incf	plusw1,f,c
 20353  015796  E30E               	bnc	u5540
 20354  015798  0EF9               	movlw	-7
 20355  01579A  2AE3               	incf	plusw1,f,c
 20356  01579C  E30B               	bnc	u5540
 20357  01579E  0EFA               	movlw	-6
 20358  0157A0  2AE3               	incf	plusw1,f,c
 20359  0157A2  E308               	bnc	u5540
 20360  0157A4  0EFB               	movlw	-5
 20361  0157A6  2AE3               	incf	plusw1,f,c
 20362  0157A8  E305               	bnc	u5540
 20363  0157AA  0EFC               	movlw	-4
 20364  0157AC  2AE3               	incf	plusw1,f,c
 20365  0157AE  E302               	bnc	u5540
 20366  0157B0  0EFD               	movlw	-3
 20367  0157B2  2AE3               	incf	plusw1,f,c
 20368  0157B4                     u5540:
 20369                           
 20370                           ;stkvar	_quotient @ sp[(-10)+0]
 20371  0157B4  0EF6               	movlw	246
 20372  0157B6  24E1               	addwf	fsr1l,w,c
 20373  0157B8  6ED9               	movwf	fsr2l,c
 20374  0157BA  0EFF               	movlw	255
 20375  0157BC  20E2               	addwfc	fsr1h,w,c
 20376  0157BE  6EDA               	movwf	fsr2h,c
 20377                           
 20378                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20379  0157C0  0E08               	movlw	8
 20380  0157C2  6E36               	movwf	btemp^0,c
 20381  0157C4  0EEE               	movlw	-18
 20382  0157C6                     us555999:
 20383  0157C6  006F FF7B FFE3     	movff	postinc2,plusw1
 20384  0157CC  28E8               	incf	wreg,w,c
 20385  0157CE  2E36               	decfsz	btemp^0,f,c
 20386  0157D0  D7FA               	bra	us555999
 20387                           
 20388                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20389  0157D2  0EF6               	movlw	246
 20390  0157D4  26E1               	addwf	fsr1l,f,c
 20391  0157D6  0EFF               	movlw	255
 20392  0157D8  22E2               	addwfc	fsr1h,f,c
 20393  0157DA  0012               	return		;funcret
 20394  0157DC                     __end_of___aodiv:
 20395                           	opt callstack 0
 20396                           
 20397 ;; *************** function _ctoa *****************
 20398 ;; Defined at:
 20399 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20402 ;;		 -> f(6), NULL(0), 
 20403 ;;  c               1  [STACK] unsigned char 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;  w               2  [STACK] int 
 20406 ;;  l               2    0        int 
 20407 ;; Return value:  Size  Location     Type
 20408 ;;                  2  [STACK] int 
 20409 ;; Registers used:
 20410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20411 ;; Tracked objects:
 20412 ;;		On entry : 0/0
 20413 ;;		On exit  : 0/0
 20414 ;;		Unchanged: 0/0
 20415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20420 ;;Total ram usage:        0 bytes
 20421 ;; Hardware stack levels used:    1
 20422 ;; Hardware stack levels required when called:   11
 20423 ;; This function calls:
 20424 ;;		_pad
 20425 ;; This function is called by:
 20426 ;;		_vfpfcnvrt
 20427 ;; This function uses a reentrant model
 20428 ;;
 20429                           
 20430                           	psect	text66
 20431  017BF0                     __ptext66:
 20432                           	opt callstack 0
 20433  017BF0                     _ctoa:
 20434                           	opt callstack 0
 20435                           
 20436                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20437  017BF0  52E6               	movf	postinc1,f,c
 20438  017BF2  52E6               	movf	postinc1,f,c
 20439                           
 20440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20441                           
 20442                           ;incstack = 0
 20443  017BF4  501F               	movf	_width^0,w,c
 20444  017BF6  1020               	iorwf	(_width+1)^0,w,c
 20445  017BF8  A4D8               	btfss	status,2,c
 20446  017BFA  D009               	goto	l9298
 20447                           
 20448                           ;stkvar	_w @ sp[(-2)+0]
 20449  017BFC  0EFE               	movlw	-2
 20450  017BFE  0060  F07F  FFE3   	movff	_width,plusw1
 20451  017C04  0EFF               	movlw	-1
 20452  017C06  0060  F083  FFE3   	movff	_width+1,plusw1
 20453  017C0C  D016               	goto	l9300
 20454  017C0E                     l9298:
 20455  017C0E  0EFF               	movlw	255
 20456  017C10  6E40               	movwf	(btemp+10)^0,c
 20457  017C12  0EFF               	movlw	255
 20458  017C14  6E41               	movwf	(btemp+11)^0,c
 20459  017C16  0060  F07C  F03E   	movff	_width,btemp+8
 20460  017C1C  0060  F080  F03F   	movff	_width+1,btemp+9
 20461  017C22  5040               	movf	(btemp+10)^0,w,c
 20462  017C24  263E               	addwf	(btemp+8)^0,f,c
 20463  017C26  5041               	movf	(btemp+11)^0,w,c
 20464  017C28  223F               	addwfc	(btemp+9)^0,f,c
 20465                           
 20466                           ;stkvar	_w @ sp[(-2)+0]
 20467  017C2A  0EFE               	movlw	-2
 20468  017C2C  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 20469  017C32  0EFF               	movlw	-1
 20470  017C34  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 20471  017C3A                     l9300:
 20472                           
 20473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20474                           ;stkvar	_c @ sp[(-2)+-3]
 20475  017C3A  0EFB               	movlw	-5
 20476  017C3C  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20477                           
 20478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20479  017C42  0102               	movlb	2	; () banked
 20480  017C44  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20481                           
 20482                           ; BSR set to: 2
 20483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20484                           ;stkvar	_w @ sp[(-2)+0]
 20485  017C46  0EFE               	movlw	-2
 20486  017C48  006F FF8F FFE6     	movff	plusw1,postinc1
 20487  017C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 20488  017C54  0EAC               	movlw	low _dbuf
 20489  017C56  6EE6               	movwf	postinc1,c
 20490  017C58  0E02               	movlw	high _dbuf
 20491  017C5A  6EE6               	movwf	postinc1,c
 20492                           
 20493                           ;stkvar	_fp @ sp[(-6)+-2]
 20494  017C5C  0EF8               	movlw	-8
 20495  017C5E  006F FF8F FFE6     	movff	plusw1,postinc1
 20496  017C64  006F FF8F FFE6     	movff	plusw1,postinc1
 20497  017C6A  EC34  F0B8         	call	_pad	;wreg free
 20498                           
 20499                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20500  017C6E  0EFB               	movlw	251
 20501  017C70  26E1               	addwf	fsr1l,f,c
 20502  017C72  0EFF               	movlw	255
 20503  017C74  22E2               	addwfc	fsr1h,f,c
 20504  017C76  0012               	return		;funcret
 20505  017C78                     __end_of_ctoa:
 20506                           	opt callstack 0
 20507                           
 20508 ;; *************** function _pad *****************
 20509 ;; Defined at:
 20510 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20511 ;; Parameters:    Size  Location     Type
 20512 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20513 ;;		 -> f(6), NULL(0), 
 20514 ;;  buf             2  [STACK] PTR unsigned char 
 20515 ;;		 -> dbuf(80), 
 20516 ;;  p               2  [STACK] int 
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;  w               2  [STACK] int 
 20519 ;;  i               2  [STACK] int 
 20520 ;; Return value:  Size  Location     Type
 20521 ;;                  2  [STACK] int 
 20522 ;; Registers used:
 20523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20524 ;; Tracked objects:
 20525 ;;		On entry : 0/2
 20526 ;;		On exit  : 0/0
 20527 ;;		Unchanged: 0/0
 20528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20533 ;;Total ram usage:        0 bytes
 20534 ;; Hardware stack levels used:    1
 20535 ;; Hardware stack levels required when called:   10
 20536 ;; This function calls:
 20537 ;;		_fputc
 20538 ;;		_fputs
 20539 ;;		_strlen
 20540 ;; This function is called by:
 20541 ;;		_ctoa
 20542 ;;		_dtoa
 20543 ;;		_efgtoa
 20544 ;;		_utoa
 20545 ;;		_xtoa
 20546 ;; This function uses a reentrant model
 20547 ;;
 20548                           
 20549                           	psect	text67
 20550  017068                     __ptext67:
 20551                           	opt callstack 0
 20552  017068                     _pad:
 20553                           	opt callstack 0
 20554                           
 20555                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20556  017068  52E6               	movf	postinc1,f,c
 20557  01706A  52E6               	movf	postinc1,f,c
 20558  01706C  52E6               	movf	postinc1,f,c
 20559  01706E  52E6               	movf	postinc1,f,c
 20560                           
 20561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20562                           
 20563                           ;incstack = 0
 20564  017070  A023               	btfss	_flags^0,0,c
 20565  017072  D010               	goto	l9272
 20566                           
 20567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20568                           ;stkvar	_fp @ sp[(-4)+-2]
 20569  017074  0EFA               	movlw	-6
 20570  017076  006F FF8F FFE6     	movff	plusw1,postinc1
 20571  01707C  006F FF8F FFE6     	movff	plusw1,postinc1
 20572                           
 20573                           ;stkvar	_buf @ sp[(-6)+-4]
 20574  017082  0EF6               	movlw	-10
 20575  017084  006F FF8F FFE6     	movff	plusw1,postinc1
 20576  01708A  006F FF8F FFE6     	movff	plusw1,postinc1
 20577  017090  EC1B  F0BD         	call	_fputs	;wreg free
 20578  017094                     l9272:
 20579                           
 20580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20581                           ;stkvar	_p @ sp[(-4)+-6]
 20582  017094  0EF7               	movlw	-9
 20583  017096  BEE3               	btfsc	plusw1,7,c
 20584  017098  D011               	goto	l9276
 20585                           
 20586                           ;stkvar	_p @ sp[(-4)+-6]
 20587                           ;stkvar	_w @ sp[(-4)+0]
 20588  01709A  0EF6               	movlw	-10
 20589  01709C  006F FF8C  F036    	movff	plusw1,btemp
 20590  0170A2  0EFC               	movlw	-4
 20591  0170A4  0060  F0DB  FFE3   	movff	btemp,plusw1
 20592  0170AA  0EF7               	movlw	-9
 20593  0170AC  006F FF8C  F036    	movff	plusw1,btemp
 20594  0170B2  0EFD               	movlw	-3
 20595  0170B4  0060  F0DB  FFE3   	movff	btemp,plusw1
 20596  0170BA  D004               	goto	l1756
 20597  0170BC                     l9276:
 20598                           
 20599                           ;stkvar	_w @ sp[(-4)+0]
 20600  0170BC  0EFC               	movlw	-4
 20601  0170BE  6AE3               	clrf	plusw1,c
 20602  0170C0  0EFD               	movlw	-3
 20603  0170C2  6AE3               	clrf	plusw1,c
 20604  0170C4                     l1756:
 20605                           
 20606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20607                           ;stkvar	_i @ sp[(-4)+2]
 20608  0170C4  0EFE               	movlw	-2
 20609  0170C6  6AE3               	clrf	plusw1,c
 20610  0170C8  0EFF               	movlw	-1
 20611  0170CA  6AE3               	clrf	plusw1,c
 20612                           
 20613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20614  0170CC  D01E               	goto	l9282
 20615  0170CE                     l9278:
 20616                           
 20617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20618                           ;stkvar	_fp @ sp[(-4)+-2]
 20619  0170CE  0EFA               	movlw	-6
 20620  0170D0  006F FF8F FFE6     	movff	plusw1,postinc1
 20621  0170D6  006F FF8F FFE6     	movff	plusw1,postinc1
 20622  0170DC  0E20               	movlw	32
 20623  0170DE  6EE6               	movwf	postinc1,c
 20624  0170E0  0E00               	movlw	0
 20625  0170E2  6EE6               	movwf	postinc1,c
 20626  0170E4  EC16  F0B7         	call	_fputc	;wreg free
 20627                           
 20628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20629                           ;stkvar	_i @ sp[(-4)+2]
 20630  0170E8  0EFE               	movlw	-2
 20631  0170EA  50E3               	movf	plusw1,w,c
 20632  0170EC  0F01               	addlw	1
 20633  0170EE  6E36               	movwf	btemp^0,c
 20634  0170F0  0EFE               	movlw	-2
 20635  0170F2  0060  F0DB  FFE3   	movff	btemp,plusw1
 20636  0170F8  6A36               	clrf	btemp^0,c
 20637  0170FA  0EFF               	movlw	-1
 20638  0170FC  50E3               	movf	plusw1,w,c
 20639  0170FE  2036               	addwfc	btemp^0,w,c
 20640  017100  6E36               	movwf	btemp^0,c
 20641  017102  0EFF               	movlw	-1
 20642  017104  0060  F0DB  FFE3   	movff	btemp,plusw1
 20643  01710A                     l9282:
 20644                           
 20645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20646                           ;stkvar	_w @ sp[(-4)+0]
 20647                           ;stkvar	_i @ sp[(-4)+2]
 20648  01710A  50E1               	movf	fsr1l,w,c
 20649  01710C  0FFE               	addlw	-2
 20650  01710E  6ED9               	movwf	fsr2l,c
 20651  017110  50E2               	movf	fsr1h,w,c
 20652  017112  6EDA               	movwf	fsr2h,c
 20653  017114  0EFF               	movlw	255
 20654  017116  22DA               	addwfc	fsr2h,f,c
 20655  017118  0EFC               	movlw	-4
 20656  01711A  50E3               	movf	plusw1,w,c
 20657  01711C  5CDE               	subwf	postinc2,w,c
 20658  01711E  50DE               	movf	postinc2,w,c
 20659  017120  0A80               	xorlw	128
 20660  017122  6E36               	movwf	btemp^0,c
 20661  017124  0EFD               	movlw	-3
 20662  017126  50E3               	movf	plusw1,w,c
 20663  017128  0A80               	xorlw	128
 20664  01712A  5836               	subwfb	btemp^0,w,c
 20665  01712C  A0D8               	btfss	status,0,c
 20666  01712E  D7CF               	goto	l9278
 20667                           
 20668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20669  017130  B023               	btfsc	_flags^0,0,c
 20670  017132  D010               	goto	l9286
 20671                           
 20672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20673                           ;stkvar	_fp @ sp[(-4)+-2]
 20674  017134  0EFA               	movlw	-6
 20675  017136  006F FF8F FFE6     	movff	plusw1,postinc1
 20676  01713C  006F FF8F FFE6     	movff	plusw1,postinc1
 20677                           
 20678                           ;stkvar	_buf @ sp[(-6)+-4]
 20679  017142  0EF6               	movlw	-10
 20680  017144  006F FF8F FFE6     	movff	plusw1,postinc1
 20681  01714A  006F FF8F FFE6     	movff	plusw1,postinc1
 20682  017150  EC1B  F0BD         	call	_fputs	;wreg free
 20683  017154                     l9286:
 20684                           
 20685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20686                           ;stkvar	_w @ sp[(-4)+0]
 20687                           ;stkvar	_buf @ sp[(-4)+-4]
 20688  017154  0EF8               	movlw	-8
 20689  017156  006F FF8F FFE6     	movff	plusw1,postinc1
 20690  01715C  006F FF8F FFE6     	movff	plusw1,postinc1
 20691  017162  ECCA  F0BC         	call	_strlen	;wreg free
 20692  017166  0EFC               	movlw	-4
 20693  017168  50E3               	movf	plusw1,w,c
 20694  01716A  2636               	addwf	btemp^0,f,c
 20695  01716C  0EFD               	movlw	-3
 20696  01716E  50E3               	movf	plusw1,w,c
 20697  017170  2237               	addwfc	(btemp+1)^0,f,c
 20698                           
 20699                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20700  017172  0EF6               	movlw	246
 20701  017174  26E1               	addwf	fsr1l,f,c
 20702  017176  0EFF               	movlw	255
 20703  017178  22E2               	addwfc	fsr1h,f,c
 20704  01717A  0012               	return		;funcret
 20705  01717C                     __end_of_pad:
 20706                           	opt callstack 0
 20707                           
 20708 ;; *************** function _strlen *****************
 20709 ;; Defined at:
 20710 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;  s               2  [STACK] PTR const unsigned char 
 20713 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20714 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20715 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20716 ;; Auto vars:     Size  Location     Type
 20717 ;;  a               2  [STACK] PTR const unsigned char 
 20718 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20719 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20720 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20721 ;; Return value:  Size  Location     Type
 20722 ;;                  2  [STACK] unsigned int 
 20723 ;; Registers used:
 20724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;Total ram usage:        0 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:    6
 20737 ;; This function calls:
 20738 ;;		Nothing
 20739 ;; This function is called by:
 20740 ;;		_eaDogM_WriteString
 20741 ;;		_pad
 20742 ;;		_stoa
 20743 ;; This function uses a reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text68
 20747  017994                     __ptext68:
 20748                           	opt callstack 0
 20749  017994                     _strlen:
 20750                           	opt callstack 0
 20751                           
 20752                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20753  017994  52E6               	movf	postinc1,f,c
 20754  017996  52E6               	movf	postinc1,f,c
 20755                           
 20756                           ;stkvar	_s @ sp[(-2)+-2]
 20757                           
 20758                           ;incstack = 0
 20759  017998  0EFC               	movlw	-4
 20760  01799A  006F FF8C  F040    	movff	plusw1,btemp+10
 20761  0179A0  0EFD               	movlw	-3
 20762  0179A2  006F FF8C  F041    	movff	plusw1,btemp+11
 20763                           
 20764                           ;stkvar	_a @ sp[(-2)+0]
 20765  0179A8  0EFF               	movlw	-1
 20766  0179AA  0060  F107  FFE3   	movff	btemp+11,plusw1
 20767  0179B0  0EFE               	movlw	-2
 20768  0179B2  0060  F103  FFE3   	movff	btemp+10,plusw1
 20769  0179B8  D011               	goto	l6114
 20770  0179BA                     l6112:
 20771                           
 20772                           ;stkvar	_s @ sp[(-2)+-2]
 20773  0179BA  0EFC               	movlw	-4
 20774  0179BC  50E3               	movf	plusw1,w,c
 20775  0179BE  0F01               	addlw	1
 20776  0179C0  6E36               	movwf	btemp^0,c
 20777  0179C2  0EFC               	movlw	-4
 20778  0179C4  0060  F0DB  FFE3   	movff	btemp,plusw1
 20779  0179CA  6A36               	clrf	btemp^0,c
 20780  0179CC  0EFD               	movlw	-3
 20781  0179CE  50E3               	movf	plusw1,w,c
 20782  0179D0  2036               	addwfc	btemp^0,w,c
 20783  0179D2  6E36               	movwf	btemp^0,c
 20784  0179D4  0EFD               	movlw	-3
 20785  0179D6  0060  F0DB  FFE3   	movff	btemp,plusw1
 20786  0179DC                     l6114:
 20787                           
 20788                           ;stkvar	_s @ sp[(-2)+-2]
 20789  0179DC  0EFC               	movlw	-4
 20790  0179DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 20791  0179E4  0EFD               	movlw	-3
 20792  0179E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 20793  0179EC  0E00               	movlw	low (__mediumconst shr (0+16))
 20794  0179EE  6EF8               	movwf	tblptru,c
 20795  0179F0  0E1F               	movlw	(high __ramtop+-1)
 20796  0179F2  64F7               	cpfsgt	tblptrh,c
 20797  0179F4  D003               	bra	u4617
 20798  0179F6  0008               	tblrd		*
 20799  0179F8  50F5               	movf	tablat,w,c
 20800  0179FA  D007               	bra	u4610
 20801  0179FC                     u4617:
 20802  0179FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20803  017A02  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20804  017A08  50EF               	movf	indf0,w,c
 20805  017A0A                     u4610:
 20806  017A0A  0900               	iorlw	0
 20807  017A0C  A4D8               	btfss	status,2,c
 20808  017A0E  D7D5               	goto	l6112
 20809                           
 20810                           ;stkvar	_a @ sp[(-2)+0]
 20811                           ;stkvar	_s @ sp[(-2)+-2]
 20812  017A10  0EFC               	movlw	-4
 20813  017A12  006F FF8C  F036    	movff	plusw1,btemp
 20814  017A18  0EFD               	movlw	-3
 20815  017A1A  006F FF8C  F037    	movff	plusw1,btemp+1
 20816  017A20  0EFE               	movlw	-2
 20817  017A22  50E3               	movf	plusw1,w,c
 20818  017A24  5E36               	subwf	btemp^0,f,c
 20819  017A26  0EFF               	movlw	-1
 20820  017A28  50E3               	movf	plusw1,w,c
 20821  017A2A  5A37               	subwfb	(btemp+1)^0,f,c
 20822                           
 20823                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20824  017A2C  52E5               	movf	postdec1,f,c
 20825  017A2E  52E5               	movf	postdec1,f,c
 20826  017A30  52E5               	movf	postdec1,f,c
 20827  017A32  52E5               	movf	postdec1,f,c
 20828  017A34  0012               	return		;funcret
 20829  017A36                     __end_of_strlen:
 20830                           	opt callstack 0
 20831                           
 20832 ;; *************** function _fputs *****************
 20833 ;; Defined at:
 20834 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;  s               2  [STACK] PTR const unsigned char 
 20837 ;;		 -> dbuf(80), 
 20838 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20839 ;;		 -> f(6), NULL(0), 
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;  i               2  [STACK] int 
 20842 ;;  c               1  [STACK] unsigned char 
 20843 ;; Return value:  Size  Location     Type
 20844 ;;                  2  [STACK] int 
 20845 ;; Registers used:
 20846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20847 ;; Tracked objects:
 20848 ;;		On entry : 0/2
 20849 ;;		On exit  : 0/0
 20850 ;;		Unchanged: 0/0
 20851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20856 ;;Total ram usage:        0 bytes
 20857 ;; Hardware stack levels used:    1
 20858 ;; Hardware stack levels required when called:    9
 20859 ;; This function calls:
 20860 ;;		_fputc
 20861 ;; This function is called by:
 20862 ;;		_pad
 20863 ;; This function uses a reentrant model
 20864 ;;
 20865                           
 20866                           	psect	text69
 20867  017A36                     __ptext69:
 20868                           	opt callstack 0
 20869  017A36                     _fputs:
 20870                           	opt callstack 0
 20871                           
 20872                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20873  017A36  52E6               	movf	postinc1,f,c
 20874  017A38  52E6               	movf	postinc1,f,c
 20875  017A3A  52E6               	movf	postinc1,f,c
 20876                           
 20877                           ;stkvar	_i @ sp[(-3)+0]
 20878                           
 20879                           ;incstack = 0
 20880  017A3C  0EFD               	movlw	-3
 20881  017A3E  6AE3               	clrf	plusw1,c
 20882  017A40  0EFE               	movlw	-2
 20883  017A42  6AE3               	clrf	plusw1,c
 20884  017A44  D01F               	goto	l9266
 20885  017A46                     l9262:
 20886                           
 20887                           ;stkvar	_fp @ sp[(-3)+-4]
 20888  017A46  0EF9               	movlw	-7
 20889  017A48  006F FF8F FFE6     	movff	plusw1,postinc1
 20890  017A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 20891                           
 20892                           ;stkvar	_c @ sp[(-5)+2]
 20893  017A54  0EFD               	movlw	-3
 20894  017A56  50E3               	movf	plusw1,w,c
 20895  017A58  6EE6               	movwf	postinc1,c
 20896  017A5A  0E00               	movlw	0
 20897  017A5C  6EE6               	movwf	postinc1,c
 20898  017A5E  EC16  F0B7         	call	_fputc	;wreg free
 20899                           
 20900                           ;stkvar	_i @ sp[(-3)+0]
 20901  017A62  0EFD               	movlw	-3
 20902  017A64  50E3               	movf	plusw1,w,c
 20903  017A66  0F01               	addlw	1
 20904  017A68  6E36               	movwf	btemp^0,c
 20905  017A6A  0EFD               	movlw	-3
 20906  017A6C  0060  F0DB  FFE3   	movff	btemp,plusw1
 20907  017A72  6A36               	clrf	btemp^0,c
 20908  017A74  0EFE               	movlw	-2
 20909  017A76  50E3               	movf	plusw1,w,c
 20910  017A78  2036               	addwfc	btemp^0,w,c
 20911  017A7A  6E36               	movwf	btemp^0,c
 20912  017A7C  0EFE               	movlw	-2
 20913  017A7E  0060  F0DB  FFE3   	movff	btemp,plusw1
 20914  017A84                     l9266:
 20915                           
 20916                           ;stkvar	_i @ sp[(-3)+0]
 20917  017A84  0EFD               	movlw	-3
 20918  017A86  006F FF8C  F040    	movff	plusw1,btemp+10
 20919  017A8C  0EFE               	movlw	-2
 20920  017A8E  006F FF8C  F041    	movff	plusw1,btemp+11
 20921                           
 20922                           ;stkvar	_s @ sp[(-3)+-2]
 20923  017A94  0EFB               	movlw	-5
 20924  017A96  006F FF8C  F03E    	movff	plusw1,btemp+8
 20925  017A9C  0EFC               	movlw	-4
 20926  017A9E  006F FF8C  F03F    	movff	plusw1,btemp+9
 20927  017AA4  5040               	movf	(btemp+10)^0,w,c
 20928  017AA6  243E               	addwf	(btemp+8)^0,w,c
 20929  017AA8  6ED9               	movwf	fsr2l,c
 20930  017AAA  5041               	movf	(btemp+11)^0,w,c
 20931  017AAC  203F               	addwfc	(btemp+9)^0,w,c
 20932  017AAE  6EDA               	movwf	fsr2h,c
 20933  017AB0  50DF               	movf	indf2,w,c
 20934  017AB2  6E41               	movwf	(btemp+11)^0,c
 20935                           
 20936                           ;stkvar	_c @ sp[(-3)+2]
 20937  017AB4  0EFF               	movlw	-1
 20938  017AB6  0060  F107  FFE3   	movff	btemp+11,plusw1
 20939  017ABC  0EFF               	movlw	-1
 20940  017ABE  50E3               	movf	plusw1,w,c
 20941  017AC0  A4D8               	btfss	status,2,c
 20942  017AC2  D7C1               	goto	l9262
 20943                           
 20944                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20945  017AC4  0EF9               	movlw	249
 20946  017AC6  26E1               	addwf	fsr1l,f,c
 20947  017AC8  0EFF               	movlw	255
 20948  017ACA  22E2               	addwfc	fsr1h,f,c
 20949  017ACC  0012               	return		;funcret
 20950  017ACE                     __end_of_fputs:
 20951                           	opt callstack 0
 20952                           
 20953 ;; *************** function _fputc *****************
 20954 ;; Defined at:
 20955 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20956 ;; Parameters:    Size  Location     Type
 20957 ;;  c               2  [STACK] int 
 20958 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20959 ;;		 -> f(6), NULL(0), 
 20960 ;; Auto vars:     Size  Location     Type
 20961 ;;		None
 20962 ;; Return value:  Size  Location     Type
 20963 ;;                  2  [STACK] int 
 20964 ;; Registers used:
 20965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20966 ;; Tracked objects:
 20967 ;;		On entry : 0/0
 20968 ;;		On exit  : 0/0
 20969 ;;		Unchanged: 0/0
 20970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20975 ;;Total ram usage:        0 bytes
 20976 ;; Hardware stack levels used:    1
 20977 ;; Hardware stack levels required when called:    8
 20978 ;; This function calls:
 20979 ;;		_putch
 20980 ;; This function is called by:
 20981 ;;		_pad
 20982 ;;		_stoa
 20983 ;;		_vfpfcnvrt
 20984 ;;		_fputs
 20985 ;; This function uses a reentrant model
 20986 ;;
 20987                           
 20988                           	psect	text70
 20989  016E2C                     __ptext70:
 20990                           	opt callstack 0
 20991  016E2C                     _fputc:
 20992                           	opt callstack 13
 20993                           
 20994                           ;stkvar	_fp @ sp[(0)+-4]
 20995                           
 20996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20997                           ;incstack = 0
 20998  016E2C  0EFC               	movlw	-4
 20999  016E2E  006F FF8C  F036    	movff	plusw1,btemp
 21000  016E34  0EFD               	movlw	-3
 21001  016E36  50E3               	movf	plusw1,w,c
 21002  016E38  1036               	iorwf	btemp^0,w,c
 21003  016E3A  B4D8               	btfsc	status,2,c
 21004  016E3C  D009               	goto	u9070
 21005                           
 21006                           ;stkvar	_fp @ sp[(0)+-4]
 21007  016E3E  0EFC               	movlw	-4
 21008  016E40  006F FF8C  F036    	movff	plusw1,btemp
 21009  016E46  0EFD               	movlw	-3
 21010  016E48  50E3               	movf	plusw1,w,c
 21011  016E4A  1036               	iorwf	btemp^0,w,c
 21012  016E4C  A4D8               	btfss	status,2,c
 21013  016E4E  D006               	goto	l9250
 21014  016E50                     u9070:
 21015                           
 21016                           ;stkvar	_c @ sp[(0)+-2]
 21017  016E50  0EFE               	movlw	-2
 21018  016E52  50E3               	movf	plusw1,w,c
 21019  016E54  6EE6               	movwf	postinc1,c
 21020  016E56  ECB0  F0C6         	call	_putch	;wreg free
 21021  016E5A  D075               	goto	l2797
 21022  016E5C                     l9250:
 21023                           
 21024                           ;stkvar	_fp @ sp[(0)+-4]
 21025  016E5C  0EFC               	movlw	-4
 21026  016E5E  006F FF8C  F040    	movff	plusw1,btemp+10
 21027  016E64  0EFD               	movlw	-3
 21028  016E66  006F FF8C  F041    	movff	plusw1,btemp+11
 21029  016E6C  0E04               	movlw	4
 21030  016E6E  2440               	addwf	(btemp+10)^0,w,c
 21031  016E70  6ED9               	movwf	fsr2l,c
 21032  016E72  0E00               	movlw	0
 21033  016E74  2041               	addwfc	(btemp+11)^0,w,c
 21034  016E76  6EDA               	movwf	fsr2h,c
 21035  016E78  50DE               	movf	postinc2,w,c
 21036  016E7A  10DE               	iorwf	postinc2,w,c
 21037  016E7C  B4D8               	btfsc	status,2,c
 21038  016E7E  D026               	goto	u9090
 21039                           
 21040                           ;stkvar	_fp @ sp[(0)+-4]
 21041  016E80  0EFC               	movlw	-4
 21042  016E82  006F FF8C  F040    	movff	plusw1,btemp+10
 21043  016E88  0EFD               	movlw	-3
 21044  016E8A  006F FF8C  F041    	movff	plusw1,btemp+11
 21045  016E90  0E04               	movlw	4
 21046  016E92  2440               	addwf	(btemp+10)^0,w,c
 21047  016E94  6ED9               	movwf	fsr2l,c
 21048  016E96  0E00               	movlw	0
 21049  016E98  2041               	addwfc	(btemp+11)^0,w,c
 21050  016E9A  6EDA               	movwf	fsr2h,c
 21051                           
 21052                           ;stkvar	_fp @ sp[(0)+-4]
 21053  016E9C  0EFC               	movlw	-4
 21054  016E9E  006F FF8C  F040    	movff	plusw1,btemp+10
 21055  016EA4  0EFD               	movlw	-3
 21056  016EA6  006F FF8C  F041    	movff	plusw1,btemp+11
 21057  016EAC  0E02               	movlw	2
 21058  016EAE  2440               	addwf	(btemp+10)^0,w,c
 21059  016EB0  6EE9               	movwf	fsr0l,c
 21060  016EB2  0E00               	movlw	0
 21061  016EB4  2041               	addwfc	(btemp+11)^0,w,c
 21062  016EB6  6EEA               	movwf	fsr0h,c
 21063  016EB8  50DE               	movf	postinc2,w,c
 21064  016EBA  5CEE               	subwf	postinc0,w,c
 21065  016EBC  50EE               	movf	postinc0,w,c
 21066  016EBE  0A80               	xorlw	128
 21067  016EC0  6E36               	movwf	btemp^0,c
 21068  016EC2  50DE               	movf	postinc2,w,c
 21069  016EC4  0A80               	xorlw	128
 21070  016EC6  5836               	subwfb	btemp^0,w,c
 21071  016EC8  B0D8               	btfsc	status,0,c
 21072  016ECA  D03D               	goto	l2797
 21073  016ECC                     u9090:
 21074                           
 21075                           ;stkvar	_c @ sp[(0)+-2]
 21076                           ;stkvar	_fp @ sp[(0)+-4]
 21077  016ECC  0EFC               	movlw	-4
 21078  016ECE  006F FF8C  F040    	movff	plusw1,btemp+10
 21079  016ED4  0EFD               	movlw	-3
 21080  016ED6  006F FF8C  F041    	movff	plusw1,btemp+11
 21081  016EDC  0E02               	movlw	2
 21082  016EDE  2440               	addwf	(btemp+10)^0,w,c
 21083  016EE0  6ED9               	movwf	fsr2l,c
 21084  016EE2  0E00               	movlw	0
 21085  016EE4  2041               	addwfc	(btemp+11)^0,w,c
 21086  016EE6  6EDA               	movwf	fsr2h,c
 21087  016EE8  006F FF78  F040    	movff	postinc2,btemp+10
 21088  016EEE  006F FF74  F041    	movff	postdec2,btemp+11
 21089                           
 21090                           ;stkvar	_fp @ sp[(0)+-4]
 21091  016EF4  0EFC               	movlw	-4
 21092  016EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 21093  016EFC  0EFD               	movlw	-3
 21094  016EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 21095  016F04  006F FF78  F03E    	movff	postinc2,btemp+8
 21096  016F0A  006F FF74  F03F    	movff	postdec2,btemp+9
 21097  016F10  5040               	movf	(btemp+10)^0,w,c
 21098  016F12  243E               	addwf	(btemp+8)^0,w,c
 21099  016F14  6ED9               	movwf	fsr2l,c
 21100  016F16  5041               	movf	(btemp+11)^0,w,c
 21101  016F18  203F               	addwfc	(btemp+9)^0,w,c
 21102  016F1A  6EDA               	movwf	fsr2h,c
 21103  016F1C  0EFE               	movlw	-2
 21104  016F1E  006F FF8F FFDF     	movff	plusw1,indf2
 21105                           
 21106                           ;stkvar	_fp @ sp[(0)+-4]
 21107  016F24  0EFC               	movlw	-4
 21108  016F26  006F FF8C  F040    	movff	plusw1,btemp+10
 21109  016F2C  0EFD               	movlw	-3
 21110  016F2E  006F FF8C  F041    	movff	plusw1,btemp+11
 21111  016F34  0E02               	movlw	2
 21112  016F36  2440               	addwf	(btemp+10)^0,w,c
 21113  016F38  6ED9               	movwf	fsr2l,c
 21114  016F3A  0E00               	movlw	0
 21115  016F3C  2041               	addwfc	(btemp+11)^0,w,c
 21116  016F3E  6EDA               	movwf	fsr2h,c
 21117  016F40  2ADE               	incf	postinc2,f,c
 21118  016F42  0E00               	movlw	0
 21119  016F44  22DD               	addwfc	postdec2,f,c
 21120  016F46                     l2797:
 21121                           
 21122                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21123  016F46  52E5               	movf	postdec1,f,c
 21124  016F48  52E5               	movf	postdec1,f,c
 21125  016F4A  52E5               	movf	postdec1,f,c
 21126  016F4C  52E5               	movf	postdec1,f,c
 21127  016F4E  0012               	return		;funcret
 21128  016F50                     __end_of_fputc:
 21129                           	opt callstack 0
 21130                           
 21131 ;; *************** function _putch *****************
 21132 ;; Defined at:
 21133 ;;		line 155 in file "eadog.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;  c               1  [STACK] unsigned char 
 21136 ;; Auto vars:     Size  Location     Type
 21137 ;;		None
 21138 ;; Return value:  Size  Location     Type
 21139 ;;                  1  [STACK] void 
 21140 ;; Registers used:
 21141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21142 ;; Tracked objects:
 21143 ;;		On entry : 0/0
 21144 ;;		On exit  : 0/0
 21145 ;;		Unchanged: 0/0
 21146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;Total ram usage:        0 bytes
 21152 ;; Hardware stack levels used:    1
 21153 ;; Hardware stack levels required when called:    7
 21154 ;; This function calls:
 21155 ;;		_ringBufS_put_dma
 21156 ;; This function is called by:
 21157 ;;		_fputc
 21158 ;; This function uses a reentrant model
 21159 ;;
 21160                           
 21161                           	psect	text71
 21162  018D60                     __ptext71:
 21163                           	opt callstack 0
 21164  018D60                     _putch:
 21165                           	opt callstack 13
 21166                           
 21167                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21168                           ;stkvar	_c @ sp[(0)+-1]
 21169                           
 21170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21171                           ;incstack = 0
 21172  018D60  0EFF               	movlw	-1
 21173  018D62  50E3               	movf	plusw1,w,c
 21174  018D64  6EE6               	movwf	postinc1,c
 21175  018D66  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21176  018D6C  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21177  018D72  EC22  F0BC         	call	_ringBufS_put_dma	;wreg free
 21178                           
 21179                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21180  018D76  52E5               	movf	postdec1,f,c
 21181  018D78  0012               	return		;funcret
 21182  018D7A                     __end_of_putch:
 21183                           	opt callstack 0
 21184                           
 21185 ;; *************** function _ringBufS_put_dma *****************
 21186 ;; Defined at:
 21187 ;;		line 67 in file "ringbufs.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21190 ;;		 -> ring_buf1(67), 
 21191 ;;  c               1  [STACK] const unsigned char 
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1  [STACK] void 
 21196 ;; Registers used:
 21197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21207 ;;Total ram usage:        0 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:    6
 21210 ;; This function calls:
 21211 ;;		Nothing
 21212 ;; This function is called by:
 21213 ;;		_putch
 21214 ;; This function uses a reentrant model
 21215 ;;
 21216                           
 21217                           	psect	text72
 21218  017844                     __ptext72:
 21219                           	opt callstack 0
 21220  017844                     _ringBufS_put_dma:
 21221                           	opt callstack 13
 21222                           
 21223                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21224                           ;stkvar	__this @ sp[(0)+-2]
 21225                           
 21226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21227                           ;incstack = 0
 21228  017844  0EFE               	movlw	-2
 21229  017846  006F FF8C  F040    	movff	plusw1,btemp+10
 21230  01784C  0EFF               	movlw	-1
 21231  01784E  006F FF8C  F041    	movff	plusw1,btemp+11
 21232  017854  0E42               	movlw	66
 21233  017856  2440               	addwf	(btemp+10)^0,w,c
 21234  017858  6ED9               	movwf	fsr2l,c
 21235  01785A  0E00               	movlw	0
 21236  01785C  2041               	addwfc	(btemp+11)^0,w,c
 21237  01785E  6EDA               	movwf	fsr2h,c
 21238  017860  0E40               	movlw	64
 21239  017862  60DF               	cpfslt	indf2,c
 21240  017864  D040               	goto	l1467
 21241                           
 21242                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21243                           ;stkvar	_c @ sp[(0)+-3]
 21244                           ;stkvar	__this @ sp[(0)+-2]
 21245  017866  0EFE               	movlw	-2
 21246  017868  006F FF8C  F040    	movff	plusw1,btemp+10
 21247  01786E  0EFF               	movlw	-1
 21248  017870  006F FF8C  F041    	movff	plusw1,btemp+11
 21249  017876  0E40               	movlw	64
 21250  017878  2440               	addwf	(btemp+10)^0,w,c
 21251  01787A  6ED9               	movwf	fsr2l,c
 21252  01787C  0E00               	movlw	0
 21253  01787E  2041               	addwfc	(btemp+11)^0,w,c
 21254  017880  6EDA               	movwf	fsr2h,c
 21255  017882  50DF               	movf	indf2,w,c
 21256  017884  6E41               	movwf	(btemp+11)^0,c
 21257                           
 21258                           ;stkvar	__this @ sp[(0)+-2]
 21259  017886  0EFE               	movlw	-2
 21260  017888  006F FF8C  F03E    	movff	plusw1,btemp+8
 21261  01788E  0EFF               	movlw	-1
 21262  017890  006F FF8C  F03F    	movff	plusw1,btemp+9
 21263  017896  5041               	movf	(btemp+11)^0,w,c
 21264  017898  243E               	addwf	(btemp+8)^0,w,c
 21265  01789A  6ED9               	movwf	fsr2l,c
 21266  01789C  0E00               	movlw	0
 21267  01789E  203F               	addwfc	(btemp+9)^0,w,c
 21268  0178A0  6EDA               	movwf	fsr2h,c
 21269  0178A2  0EFD               	movlw	-3
 21270  0178A4  006F FF8F FFDF     	movff	plusw1,indf2
 21271                           
 21272                           ;ringbufs.c: 71:   ++_this->head;
 21273                           ;stkvar	__this @ sp[(0)+-2]
 21274  0178AA  0EFE               	movlw	-2
 21275  0178AC  006F FF8C  F040    	movff	plusw1,btemp+10
 21276  0178B2  0EFF               	movlw	-1
 21277  0178B4  006F FF8C  F041    	movff	plusw1,btemp+11
 21278  0178BA  0E40               	movlw	64
 21279  0178BC  2440               	addwf	(btemp+10)^0,w,c
 21280  0178BE  6ED9               	movwf	fsr2l,c
 21281  0178C0  0E00               	movlw	0
 21282  0178C2  2041               	addwfc	(btemp+11)^0,w,c
 21283  0178C4  6EDA               	movwf	fsr2h,c
 21284  0178C6  2ADF               	incf	indf2,f,c
 21285                           
 21286                           ;ringbufs.c: 72:   ++_this->count;
 21287                           ;stkvar	__this @ sp[(0)+-2]
 21288  0178C8  0EFE               	movlw	-2
 21289  0178CA  006F FF8C  F040    	movff	plusw1,btemp+10
 21290  0178D0  0EFF               	movlw	-1
 21291  0178D2  006F FF8C  F041    	movff	plusw1,btemp+11
 21292  0178D8  0E42               	movlw	66
 21293  0178DA  2440               	addwf	(btemp+10)^0,w,c
 21294  0178DC  6ED9               	movwf	fsr2l,c
 21295  0178DE  0E00               	movlw	0
 21296  0178E0  2041               	addwfc	(btemp+11)^0,w,c
 21297  0178E2  6EDA               	movwf	fsr2h,c
 21298  0178E4  2ADF               	incf	indf2,f,c
 21299  0178E6                     l1467:
 21300                           
 21301                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21302  0178E6  52E5               	movf	postdec1,f,c
 21303  0178E8  52E5               	movf	postdec1,f,c
 21304  0178EA  52E5               	movf	postdec1,f,c
 21305  0178EC  0012               	return		;funcret
 21306  0178EE                     __end_of_ringBufS_put_dma:
 21307                           	opt callstack 0
 21308                           
 21309 ;; *************** function _atoi *****************
 21310 ;; Defined at:
 21311 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21312 ;; Parameters:    Size  Location     Type
 21313 ;;  s               2  [STACK] PTR const unsigned char 
 21314 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21315 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21316 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21317 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21318 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21319 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21320 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21321 ;; Auto vars:     Size  Location     Type
 21322 ;;  n               2  [STACK] int 
 21323 ;;  neg             2  [STACK] int 
 21324 ;; Return value:  Size  Location     Type
 21325 ;;                  2  [STACK] int 
 21326 ;; Registers used:
 21327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21328 ;; Tracked objects:
 21329 ;;		On entry : 0/0
 21330 ;;		On exit  : 0/0
 21331 ;;		Unchanged: 0/0
 21332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21337 ;;Total ram usage:        0 bytes
 21338 ;; Hardware stack levels used:    1
 21339 ;; Hardware stack levels required when called:    7
 21340 ;; This function calls:
 21341 ;;		_isdigit
 21342 ;;		_isspace
 21343 ;; This function is called by:
 21344 ;;		_vfpfcnvrt
 21345 ;; This function uses a reentrant model
 21346 ;;
 21347                           
 21348                           	psect	text73
 21349  0157DC                     __ptext73:
 21350                           	opt callstack 0
 21351  0157DC                     _atoi:
 21352                           	opt callstack 0
 21353                           
 21354                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21355  0157DC  0E09               	movlw	9
 21356  0157DE  26E1               	addwf	fsr1l,f,c
 21357  0157E0  0E00               	movlw	0
 21358  0157E2  22E2               	addwfc	fsr1h,f,c
 21359                           
 21360                           ;stkvar	_n @ sp[(-9)+5]
 21361                           
 21362                           ;incstack = 0
 21363  0157E4  0EFC               	movlw	-4
 21364  0157E6  6AE3               	clrf	plusw1,c
 21365  0157E8  0EFD               	movlw	-3
 21366  0157EA  6AE3               	clrf	plusw1,c
 21367                           
 21368                           ;stkvar	_neg @ sp[(-9)+7]
 21369  0157EC  0EFE               	movlw	-2
 21370  0157EE  6AE3               	clrf	plusw1,c
 21371  0157F0  0EFF               	movlw	-1
 21372  0157F2  6AE3               	clrf	plusw1,c
 21373  0157F4  D011               	goto	l7670
 21374  0157F6                     l7668:
 21375                           
 21376                           ;stkvar	_s @ sp[(-9)+-2]
 21377  0157F6  0EF5               	movlw	-11
 21378  0157F8  50E3               	movf	plusw1,w,c
 21379  0157FA  0F01               	addlw	1
 21380  0157FC  6E36               	movwf	btemp^0,c
 21381  0157FE  0EF5               	movlw	-11
 21382  015800  0060  F0DB  FFE3   	movff	btemp,plusw1
 21383  015806  6A36               	clrf	btemp^0,c
 21384  015808  0EF6               	movlw	-10
 21385  01580A  50E3               	movf	plusw1,w,c
 21386  01580C  2036               	addwfc	btemp^0,w,c
 21387  01580E  6E36               	movwf	btemp^0,c
 21388  015810  0EF6               	movlw	-10
 21389  015812  0060  F0DB  FFE3   	movff	btemp,plusw1
 21390  015818                     l7670:
 21391                           
 21392                           ;stkvar	_atoi$4764 @ sp[(-9)+4]
 21393  015818  0EFB               	movlw	-5
 21394  01581A  6AE3               	clrf	plusw1,c
 21395  01581C  2AE3               	incf	plusw1,f,c
 21396                           
 21397                           ;stkvar	_s @ sp[(-9)+-2]
 21398  01581E  50E1               	movf	fsr1l,w,c
 21399  015820  0FF5               	addlw	-11
 21400  015822  6ED9               	movwf	fsr2l,c
 21401  015824  50E2               	movf	fsr1h,w,c
 21402  015826  6EDA               	movwf	fsr2h,c
 21403  015828  0EFF               	movlw	255
 21404  01582A  22DA               	addwfc	fsr2h,f,c
 21405  01582C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21406  015832  006F FF77 FFF7     	movff	postdec2,tblptrh
 21407  015838                     	if	0	;tblptru may be non-zero
 21408  015838                     	endif
 21409  015838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21410  015838  0E00               	movlw	low (__mediumconst shr (0+16))
 21411  01583A  6EF8               	movwf	tblptru,c
 21412  01583C                     	endif
 21413  01583C  0008               	tblrd		*
 21414  01583E  50F5               	movf	tablat,w,c
 21415  015840  0A20               	xorlw	32
 21416  015842  B4D8               	btfsc	status,2,c
 21417  015844  D023               	goto	l7678
 21418  015846  0EF7               	movlw	247
 21419  015848  6E40               	movwf	(btemp+10)^0,c
 21420  01584A  0EFF               	movlw	255
 21421  01584C  6E41               	movwf	(btemp+11)^0,c
 21422                           
 21423                           ;stkvar	_s @ sp[(-9)+-2]
 21424  01584E  50E1               	movf	fsr1l,w,c
 21425  015850  0FF5               	addlw	-11
 21426  015852  6ED9               	movwf	fsr2l,c
 21427  015854  50E2               	movf	fsr1h,w,c
 21428  015856  6EDA               	movwf	fsr2h,c
 21429  015858  0EFF               	movlw	255
 21430  01585A  22DA               	addwfc	fsr2h,f,c
 21431  01585C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21432  015862  006F FF77 FFF7     	movff	postdec2,tblptrh
 21433  015868                     	if	0	;tblptru may be non-zero
 21434  015868                     	endif
 21435  015868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21436  015868  0E00               	movlw	low (__mediumconst shr (0+16))
 21437  01586A  6EF8               	movwf	tblptru,c
 21438  01586C                     	endif
 21439  01586C  0008               	tblrd		*
 21440  01586E  50F5               	movf	tablat,w,c
 21441  015870  6E3E               	movwf	(btemp+8)^0,c
 21442  015872  6A3F               	clrf	(btemp+9)^0,c
 21443  015874  5040               	movf	(btemp+10)^0,w,c
 21444  015876  263E               	addwf	(btemp+8)^0,f,c
 21445  015878  5041               	movf	(btemp+11)^0,w,c
 21446  01587A  223F               	addwfc	(btemp+9)^0,f,c
 21447  01587C  503F               	movf	(btemp+9)^0,w,c
 21448  01587E  E104               	bnz	u7660
 21449  015880  0E05               	movlw	5
 21450  015882  5C3E               	subwf	(btemp+8)^0,w,c
 21451  015884  A0D8               	btfss	status,0,c
 21452  015886  D002               	goto	l7678
 21453  015888                     u7660:
 21454                           
 21455                           ;stkvar	_atoi$4764 @ sp[(-9)+4]
 21456  015888  0EFB               	movlw	-5
 21457  01588A  6AE3               	clrf	plusw1,c
 21458  01588C                     l7678:
 21459                           
 21460                           ;stkvar	_atoi$4764 @ sp[(-9)+4]
 21461  01588C  0EFB               	movlw	-5
 21462  01588E  50E3               	movf	plusw1,w,c
 21463  015890  6E40               	movwf	(btemp+10)^0,c
 21464  015892  6A41               	clrf	(btemp+11)^0,c
 21465                           
 21466                           ;stkvar	_atoi$4763 @ sp[(-9)+2]
 21467  015894  0EF9               	movlw	-7
 21468  015896  0060  F103  FFE3   	movff	btemp+10,plusw1
 21469  01589C  0EFA               	movlw	-6
 21470  01589E  0060  F107  FFE3   	movff	btemp+11,plusw1
 21471                           
 21472                           ;stkvar	_atoi$4763 @ sp[(-9)+2]
 21473  0158A4  0EF9               	movlw	-7
 21474  0158A6  006F FF8C  F036    	movff	plusw1,btemp
 21475  0158AC  0EFA               	movlw	-6
 21476  0158AE  50E3               	movf	plusw1,w,c
 21477  0158B0  1036               	iorwf	btemp^0,w,c
 21478  0158B2  B4D8               	btfsc	status,2,c
 21479  0158B4  D01F               	goto	l7688
 21480  0158B6  D79F               	goto	l7668
 21481  0158B8                     l7684:
 21482  0158B8  0E01               	movlw	1
 21483  0158BA  6E40               	movwf	(btemp+10)^0,c
 21484  0158BC  0E00               	movlw	0
 21485  0158BE  6E41               	movwf	(btemp+11)^0,c
 21486                           
 21487                           ;stkvar	_neg @ sp[(-9)+7]
 21488  0158C0  0EFE               	movlw	-2
 21489  0158C2  0060  F103  FFE3   	movff	btemp+10,plusw1
 21490  0158C8  0EFF               	movlw	-1
 21491  0158CA  0060  F107  FFE3   	movff	btemp+11,plusw1
 21492  0158D0                     l7686:
 21493                           
 21494                           ;stkvar	_s @ sp[(-9)+-2]
 21495  0158D0  0EF5               	movlw	-11
 21496  0158D2  50E3               	movf	plusw1,w,c
 21497  0158D4  0F01               	addlw	1
 21498  0158D6  6E36               	movwf	btemp^0,c
 21499  0158D8  0EF5               	movlw	-11
 21500  0158DA  0060  F0DB  FFE3   	movff	btemp,plusw1
 21501  0158E0  6A36               	clrf	btemp^0,c
 21502  0158E2  0EF6               	movlw	-10
 21503  0158E4  50E3               	movf	plusw1,w,c
 21504  0158E6  2036               	addwfc	btemp^0,w,c
 21505  0158E8  6E36               	movwf	btemp^0,c
 21506  0158EA  0EF6               	movlw	-10
 21507  0158EC  0060  F0DB  FFE3   	movff	btemp,plusw1
 21508  0158F2  D053               	goto	l7694
 21509  0158F4                     l7688:
 21510                           
 21511                           ;stkvar	_s @ sp[(-9)+-2]
 21512  0158F4  50E1               	movf	fsr1l,w,c
 21513  0158F6  0FF5               	addlw	-11
 21514  0158F8  6ED9               	movwf	fsr2l,c
 21515  0158FA  50E2               	movf	fsr1h,w,c
 21516  0158FC  6EDA               	movwf	fsr2h,c
 21517  0158FE  0EFF               	movlw	255
 21518  015900  22DA               	addwfc	fsr2h,f,c
 21519  015902  006F FF7B FFF6     	movff	postinc2,tblptrl
 21520  015908  006F FF77 FFF7     	movff	postdec2,tblptrh
 21521  01590E                     	if	0	;tblptru may be non-zero
 21522  01590E                     	endif
 21523  01590E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21524  01590E  0E00               	movlw	low (__mediumconst shr (0+16))
 21525  015910  6EF8               	movwf	tblptru,c
 21526  015912                     	endif
 21527  015912  0008               	tblrd		*
 21528  015914  50F5               	movf	tablat,w,c
 21529  015916  6E40               	movwf	(btemp+10)^0,c
 21530  015918  6A41               	clrf	(btemp+11)^0,c
 21531                           
 21532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21533                           ; Switch size 1, requested type "simple"
 21534                           ; Number of cases is 1, Range of values is 0 to 0
 21535                           ; switch strategies available:
 21536                           ; Name         Instructions Cycles
 21537                           ; simple_byte            4     3 (average)
 21538                           ;	Chosen strategy is simple_byte
 21539  01591A  5041               	movf	(btemp+11)^0,w,c
 21540  01591C  0A00               	xorlw	0	; case 0
 21541  01591E  A4D8               	btfss	status,2,c
 21542  015920  D03C               	goto	l7694
 21543                           
 21544                           ; Switch size 1, requested type "simple"
 21545                           ; Number of cases is 2, Range of values is 43 to 45
 21546                           ; switch strategies available:
 21547                           ; Name         Instructions Cycles
 21548                           ; simple_byte            7     4 (average)
 21549                           ;	Chosen strategy is simple_byte
 21550  015922  5040               	movf	(btemp+10)^0,w,c
 21551  015924  0A2B               	xorlw	43	; case 43
 21552  015926  B4D8               	btfsc	status,2,c
 21553  015928  D7D3               	goto	l7686
 21554  01592A  0A06               	xorlw	6	; case 45
 21555  01592C  B4D8               	btfsc	status,2,c
 21556  01592E  D7C4               	goto	l7684
 21557  015930  D034               	goto	l7694
 21558  015932                     l7690:
 21559                           
 21560                           ;stkvar	_n @ sp[(-9)+5]
 21561  015932  0EFC               	movlw	-4
 21562  015934  006F FF8C  F040    	movff	plusw1,btemp+10
 21563  01593A  0EFD               	movlw	-3
 21564  01593C  006F FF8C  F041    	movff	plusw1,btemp+11
 21565  015942  0E0A               	movlw	10
 21566  015944  0240               	mulwf	(btemp+10)^0,c
 21567  015946  006F FFCC  F03E    	movff	prodl,btemp+8
 21568  01594C  006F FFD0  F03F    	movff	prodh,btemp+9
 21569  015952  0241               	mulwf	(btemp+11)^0,c
 21570  015954  50F3               	movf	prodl,w,c
 21571  015956  263F               	addwf	(btemp+9)^0,f,c
 21572                           
 21573                           ;stkvar	_s @ sp[(-9)+-2]
 21574  015958  50E1               	movf	fsr1l,w,c
 21575  01595A  0FF5               	addlw	-11
 21576  01595C  6ED9               	movwf	fsr2l,c
 21577  01595E  50E2               	movf	fsr1h,w,c
 21578  015960  6EDA               	movwf	fsr2h,c
 21579  015962  0EFF               	movlw	255
 21580  015964  22DA               	addwfc	fsr2h,f,c
 21581  015966  006F FF7B FFF6     	movff	postinc2,tblptrl
 21582  01596C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21583  015972                     	if	0	;tblptru may be non-zero
 21584  015972                     	endif
 21585  015972                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21586  015972  0E00               	movlw	low (__mediumconst shr (0+16))
 21587  015974  6EF8               	movwf	tblptru,c
 21588  015976                     	endif
 21589  015976  0008               	tblrd		*
 21590  015978  50F5               	movf	tablat,w,c
 21591  01597A  5E3E               	subwf	(btemp+8)^0,f,c
 21592  01597C  0E00               	movlw	0
 21593  01597E  5A3F               	subwfb	(btemp+9)^0,f,c
 21594  015980  0E30               	movlw	48
 21595  015982  263E               	addwf	(btemp+8)^0,f,c
 21596  015984  0E00               	movlw	0
 21597  015986  223F               	addwfc	(btemp+9)^0,f,c
 21598                           
 21599                           ;stkvar	_n @ sp[(-9)+5]
 21600  015988  0EFC               	movlw	-4
 21601  01598A  0060  F0FB  FFE3   	movff	btemp+8,plusw1
 21602  015990  0EFD               	movlw	-3
 21603  015992  0060  F0FF  FFE3   	movff	btemp+9,plusw1
 21604  015998  D79B               	goto	l7686
 21605  01599A                     l7694:
 21606  01599A  0ED0               	movlw	208
 21607  01599C  6E40               	movwf	(btemp+10)^0,c
 21608  01599E  0EFF               	movlw	255
 21609  0159A0  6E41               	movwf	(btemp+11)^0,c
 21610                           
 21611                           ;stkvar	_s @ sp[(-9)+-2]
 21612  0159A2  50E1               	movf	fsr1l,w,c
 21613  0159A4  0FF5               	addlw	-11
 21614  0159A6  6ED9               	movwf	fsr2l,c
 21615  0159A8  50E2               	movf	fsr1h,w,c
 21616  0159AA  6EDA               	movwf	fsr2h,c
 21617  0159AC  0EFF               	movlw	255
 21618  0159AE  22DA               	addwfc	fsr2h,f,c
 21619  0159B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21620  0159B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21621  0159BC                     	if	0	;tblptru may be non-zero
 21622  0159BC                     	endif
 21623  0159BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21624  0159BC  0E00               	movlw	low (__mediumconst shr (0+16))
 21625  0159BE  6EF8               	movwf	tblptru,c
 21626  0159C0                     	endif
 21627  0159C0  0008               	tblrd		*
 21628  0159C2  50F5               	movf	tablat,w,c
 21629  0159C4  6E3E               	movwf	(btemp+8)^0,c
 21630  0159C6  6A3F               	clrf	(btemp+9)^0,c
 21631  0159C8  5040               	movf	(btemp+10)^0,w,c
 21632  0159CA  263E               	addwf	(btemp+8)^0,f,c
 21633  0159CC  5041               	movf	(btemp+11)^0,w,c
 21634  0159CE  223F               	addwfc	(btemp+9)^0,f,c
 21635  0159D0  503F               	movf	(btemp+9)^0,w,c
 21636  0159D2  E106               	bnz	u7680
 21637  0159D4  0E0A               	movlw	10
 21638  0159D6  5C3E               	subwf	(btemp+8)^0,w,c
 21639  0159D8  B0D8               	btfsc	status,0,c
 21640  0159DA  D002               	goto	u7680
 21641  0159DC  0E01               	movlw	1
 21642  0159DE  D001               	goto	u7690
 21643  0159E0                     u7680:
 21644  0159E0  0E00               	movlw	0
 21645  0159E2                     u7690:
 21646  0159E2  6E40               	movwf	(btemp+10)^0,c
 21647  0159E4  6A41               	clrf	(btemp+11)^0,c
 21648                           
 21649                           ;stkvar	_atoi$4765 @ sp[(-9)+0]
 21650  0159E6  0EF7               	movlw	-9
 21651  0159E8  0060  F103  FFE3   	movff	btemp+10,plusw1
 21652  0159EE  0EF8               	movlw	-8
 21653  0159F0  0060  F107  FFE3   	movff	btemp+11,plusw1
 21654                           
 21655                           ;stkvar	_atoi$4765 @ sp[(-9)+0]
 21656  0159F6  0EF7               	movlw	-9
 21657  0159F8  006F FF8C  F036    	movff	plusw1,btemp
 21658  0159FE  0EF8               	movlw	-8
 21659  015A00  50E3               	movf	plusw1,w,c
 21660  015A02  1036               	iorwf	btemp^0,w,c
 21661  015A04  A4D8               	btfss	status,2,c
 21662  015A06  D795               	goto	l7690
 21663                           
 21664                           ;stkvar	_neg @ sp[(-9)+7]
 21665  015A08  0EFE               	movlw	-2
 21666  015A0A  006F FF8C  F036    	movff	plusw1,btemp
 21667  015A10  0EFF               	movlw	-1
 21668  015A12  50E3               	movf	plusw1,w,c
 21669  015A14  1036               	iorwf	btemp^0,w,c
 21670  015A16  A4D8               	btfss	status,2,c
 21671  015A18  D00E               	goto	l7704
 21672                           
 21673                           ;stkvar	_n @ sp[(-9)+5]
 21674  015A1A  0EFC               	movlw	-4
 21675  015A1C  006F FF8C  F036    	movff	plusw1,btemp
 21676  015A22  1E36               	comf	btemp^0,f,c
 21677  015A24  0EFD               	movlw	-3
 21678  015A26  006F FF8C  F037    	movff	plusw1,btemp+1
 21679  015A2C  1E37               	comf	(btemp+1)^0,f,c
 21680  015A2E  2A36               	incf	btemp^0,f,c
 21681  015A30  B4D8               	btfsc	status,2,c
 21682  015A32  2A37               	incf	(btemp+1)^0,f,c
 21683  015A34  D008               	goto	l2733
 21684  015A36                     l7704:
 21685                           
 21686                           ;stkvar	_n @ sp[(-9)+5]
 21687  015A36  0EFC               	movlw	-4
 21688  015A38  006F FF8C  F036    	movff	plusw1,btemp
 21689  015A3E  0EFD               	movlw	-3
 21690  015A40  006F FF8C  F037    	movff	plusw1,btemp+1
 21691  015A46                     l2733:
 21692                           
 21693                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21694  015A46  0EF5               	movlw	245
 21695  015A48  26E1               	addwf	fsr1l,f,c
 21696  015A4A  0EFF               	movlw	255
 21697  015A4C  22E2               	addwfc	fsr1h,f,c
 21698  015A4E  0012               	return		;funcret
 21699  015A50                     __end_of_atoi:
 21700                           	opt callstack 0
 21701                           
 21702 ;; *************** function _isspace *****************
 21703 ;; Defined at:
 21704 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21705 ;; Parameters:    Size  Location     Type
 21706 ;;  c               2  [STACK] int 
 21707 ;; Auto vars:     Size  Location     Type
 21708 ;;		None
 21709 ;; Return value:  Size  Location     Type
 21710 ;;                  2  [STACK] int 
 21711 ;; Registers used:
 21712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21713 ;; Tracked objects:
 21714 ;;		On entry : 0/0
 21715 ;;		On exit  : 0/0
 21716 ;;		Unchanged: 0/0
 21717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21722 ;;Total ram usage:        0 bytes
 21723 ;; Hardware stack levels used:    1
 21724 ;; Hardware stack levels required when called:    6
 21725 ;; This function calls:
 21726 ;;		Nothing
 21727 ;; This function is called by:
 21728 ;;		_atoi
 21729 ;; This function uses a reentrant model
 21730 ;;
 21731                           
 21732                           	psect	text74
 21733  018366                     __ptext74:
 21734                           	opt callstack 0
 21735  018366                     _isspace:
 21736                           	opt callstack 0
 21737                           
 21738                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21739  018366  52E6               	movf	postinc1,f,c
 21740                           
 21741                           ;stkvar	_isspace$4803 @ sp[(-1)+0]
 21742                           
 21743                           ;incstack = 0
 21744  018368  0EFF               	movlw	-1
 21745  01836A  6AE3               	clrf	plusw1,c
 21746  01836C  2AE3               	incf	plusw1,f,c
 21747                           
 21748                           ;stkvar	_c @ sp[(-1)+-2]
 21749  01836E  0EFD               	movlw	-3
 21750  018370  006F FF8C  F036    	movff	plusw1,btemp
 21751  018376  0E20               	movlw	32
 21752  018378  1836               	xorwf	btemp^0,w,c
 21753  01837A  E104               	bnz	u6570
 21754  01837C  0EFE               	movlw	-2
 21755  01837E  50E3               	movf	plusw1,w,c
 21756  018380  B4D8               	btfsc	status,2,c
 21757  018382  D012               	goto	l7114
 21758  018384                     u6570:
 21759                           
 21760                           ;stkvar	_c @ sp[(-1)+-2]
 21761  018384  0EFD               	movlw	-3
 21762  018386  50E3               	movf	plusw1,w,c
 21763  018388  0FF7               	addlw	247
 21764  01838A  6E40               	movwf	(btemp+10)^0,c
 21765  01838C  0EFE               	movlw	-2
 21766  01838E  006F FF8C  F041    	movff	plusw1,btemp+11
 21767  018394  0EFF               	movlw	255
 21768  018396  2241               	addwfc	(btemp+11)^0,f,c
 21769  018398  5041               	movf	(btemp+11)^0,w,c
 21770  01839A  E104               	bnz	u6580
 21771  01839C  0E05               	movlw	5
 21772  01839E  5C40               	subwf	(btemp+10)^0,w,c
 21773  0183A0  A0D8               	btfss	status,0,c
 21774  0183A2  D002               	goto	l7114
 21775  0183A4                     u6580:
 21776                           
 21777                           ;stkvar	_isspace$4803 @ sp[(-1)+0]
 21778  0183A4  0EFF               	movlw	-1
 21779  0183A6  6AE3               	clrf	plusw1,c
 21780  0183A8                     l7114:
 21781                           
 21782                           ;stkvar	_isspace$4803 @ sp[(-1)+0]
 21783  0183A8  0EFF               	movlw	-1
 21784  0183AA  50E3               	movf	plusw1,w,c
 21785  0183AC  6E36               	movwf	btemp^0,c
 21786  0183AE  6A37               	clrf	(btemp+1)^0,c
 21787                           
 21788                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21789  0183B0  52E5               	movf	postdec1,f,c
 21790  0183B2  52E5               	movf	postdec1,f,c
 21791  0183B4  52E5               	movf	postdec1,f,c
 21792  0183B6  0012               	return		;funcret
 21793  0183B8                     __end_of_isspace:
 21794                           	opt callstack 0
 21795                           
 21796 ;; *************** function _isdigit *****************
 21797 ;; Defined at:
 21798 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21799 ;; Parameters:    Size  Location     Type
 21800 ;;  c               2  [STACK] int 
 21801 ;; Auto vars:     Size  Location     Type
 21802 ;;		None
 21803 ;; Return value:  Size  Location     Type
 21804 ;;                  2  [STACK] int 
 21805 ;; Registers used:
 21806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21807 ;; Tracked objects:
 21808 ;;		On entry : 0/0
 21809 ;;		On exit  : 0/0
 21810 ;;		Unchanged: 0/0
 21811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21816 ;;Total ram usage:        0 bytes
 21817 ;; Hardware stack levels used:    1
 21818 ;; Hardware stack levels required when called:    6
 21819 ;; This function calls:
 21820 ;;		Nothing
 21821 ;; This function is called by:
 21822 ;;		_vfpfcnvrt
 21823 ;;		_atoi
 21824 ;; This function uses a reentrant model
 21825 ;;
 21826                           
 21827                           	psect	text75
 21828  01880C                     __ptext75:
 21829                           	opt callstack 0
 21830  01880C                     _isdigit:
 21831                           	opt callstack 18
 21832                           
 21833                           ;stkvar	_c @ sp[(0)+-2]
 21834                           
 21835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21836                           ;incstack = 0
 21837  01880C  0EFE               	movlw	-2
 21838  01880E  50E3               	movf	plusw1,w,c
 21839  018810  0FD0               	addlw	208
 21840  018812  6E40               	movwf	(btemp+10)^0,c
 21841  018814  0EFF               	movlw	-1
 21842  018816  006F FF8C  F041    	movff	plusw1,btemp+11
 21843  01881C  0EFF               	movlw	255
 21844  01881E  2241               	addwfc	(btemp+11)^0,f,c
 21845  018820  5041               	movf	(btemp+11)^0,w,c
 21846  018822  E106               	bnz	u5420
 21847  018824  0E0A               	movlw	10
 21848  018826  5C40               	subwf	(btemp+10)^0,w,c
 21849  018828  B0D8               	btfsc	status,0,c
 21850  01882A  D002               	goto	u5420
 21851  01882C  0E01               	movlw	1
 21852  01882E  D001               	goto	u5430
 21853  018830                     u5420:
 21854  018830  0E00               	movlw	0
 21855  018832                     u5430:
 21856  018832  6E36               	movwf	btemp^0,c
 21857  018834  6A37               	clrf	(btemp+1)^0,c
 21858                           
 21859                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21860  018836  52E5               	movf	postdec1,f,c
 21861  018838  52E5               	movf	postdec1,f,c
 21862  01883A  0012               	return		;funcret
 21863  01883C                     __end_of_isdigit:
 21864                           	opt callstack 0
 21865                           
 21866 ;; *************** function _set_vterm *****************
 21867 ;; Defined at:
 21868 ;;		line 104 in file "mconfig.c"
 21869 ;; Parameters:    Size  Location     Type
 21870 ;;  vterm           1  [STACK] const unsigned char 
 21871 ;; Auto vars:     Size  Location     Type
 21872 ;;		None
 21873 ;; Return value:  Size  Location     Type
 21874 ;;                  1  [STACK] unsigned char 
 21875 ;; Registers used:
 21876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/0
 21879 ;;		On exit  : 3F/4
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;Total ram usage:        0 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; Hardware stack levels required when called:    6
 21889 ;; This function calls:
 21890 ;;		Nothing
 21891 ;; This function is called by:
 21892 ;;		_main
 21893 ;;		_check_help
 21894 ;; This function uses a reentrant model
 21895 ;;
 21896                           
 21897                           	psect	text76
 21898  018D44                     __ptext76:
 21899                           	opt callstack 0
 21900  018D44                     _set_vterm:
 21901                           	opt callstack 24
 21902                           
 21903                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 21904                           ;stkvar	_vterm @ sp[(0)+-1]
 21905                           
 21906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21907                           ;incstack = 0
 21908  018D44  0EFF               	movlw	-1
 21909  018D46  006F FF8C  F041    	movff	plusw1,btemp+11
 21910  018D4C  0E03               	movlw	3
 21911  018D4E  1641               	andwf	(btemp+11)^0,f,c
 21912  018D50  0104               	movlb	4	; () banked
 21913  018D52  51D8               	movf	(_D+216)& (0+255),w,b
 21914  018D54  1841               	xorwf	(btemp+11)^0,w,c
 21915  018D56  0BFE               	andlw	-2
 21916  018D58  1841               	xorwf	(btemp+11)^0,w,c
 21917  018D5A  6FD8               	movwf	(_D+216)& (0+255),b
 21918                           
 21919                           ; BSR set to: 4
 21920                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21921  018D5C  52E5               	movf	postdec1,f,c
 21922  018D5E  0012               	return		;funcret
 21923  018D60                     __end_of_set_vterm:
 21924                           	opt callstack 0
 21925                           
 21926 ;; *************** function _set_temp_display_help *****************
 21927 ;; Defined at:
 21928 ;;		line 208 in file "mconfig.c"
 21929 ;; Parameters:    Size  Location     Type
 21930 ;;  new_response    1  [STACK] const enum E16501
 21931 ;; Auto vars:     Size  Location     Type
 21932 ;;		None
 21933 ;; Return value:  Size  Location     Type
 21934 ;;                  1  [STACK] enum E16501
 21935 ;; Registers used:
 21936 ;;		wreg, fsr1l, fsr1h
 21937 ;; Tracked objects:
 21938 ;;		On entry : 0/4
 21939 ;;		On exit  : 3F/1
 21940 ;;		Unchanged: 0/0
 21941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21946 ;;Total ram usage:        0 bytes
 21947 ;; Hardware stack levels used:    1
 21948 ;; Hardware stack levels required when called:    6
 21949 ;; This function calls:
 21950 ;;		Nothing
 21951 ;; This function is called by:
 21952 ;;		_check_help
 21953 ;; This function uses a reentrant model
 21954 ;;
 21955                           
 21956                           	psect	text77
 21957  018E40                     __ptext77:
 21958                           	opt callstack 0
 21959  018E40                     _set_temp_display_help:
 21960                           	opt callstack 23
 21961                           
 21962                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21963                           
 21964                           ; BSR set to: 4
 21965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21966                           ;incstack = 0
 21967  018E40  0101               	movlb	1	; () banked
 21968  018E42  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 21972                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21973  018E44  0EFF               	movlw	-1
 21974  018E46  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 21975                           
 21976                           ; BSR set to: 1
 21977                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21978  018E4C  52E5               	movf	postdec1,f,c
 21979  018E4E  0012               	return		;funcret
 21980  018E50                     __end_of_set_temp_display_help:
 21981                           	opt callstack 0
 21982                           
 21983 ;; *************** function _set_display_info *****************
 21984 ;; Defined at:
 21985 ;;		line 197 in file "mconfig.c"
 21986 ;; Parameters:    Size  Location     Type
 21987 ;;  new_response    1  [STACK] const enum E16501
 21988 ;; Auto vars:     Size  Location     Type
 21989 ;;		None
 21990 ;; Return value:  Size  Location     Type
 21991 ;;                  1  [STACK] enum E16986
 21992 ;; Registers used:
 21993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21994 ;; Tracked objects:
 21995 ;;		On entry : 0/0
 21996 ;;		On exit  : 0/0
 21997 ;;		Unchanged: 0/0
 21998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22003 ;;Total ram usage:        0 bytes
 22004 ;; Hardware stack levels used:    1
 22005 ;; Hardware stack levels required when called:    7
 22006 ;; This function calls:
 22007 ;;		_TimerDone
 22008 ;; This function is called by:
 22009 ;;		_main
 22010 ;;		_check_help
 22011 ;; This function uses a reentrant model
 22012 ;;
 22013                           
 22014                           	psect	text78
 22015  018CCE                     __ptext78:
 22016                           	opt callstack 0
 22017  018CCE                     _set_display_info:
 22018                           	opt callstack 23
 22019                           
 22020                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 22021                           
 22022                           ; BSR set to: 1
 22023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22024                           ;incstack = 0
 22025  018CCE  0E07               	movlw	7
 22026  018CD0  6EE6               	movwf	postinc1,c
 22027  018CD2  ECF3  F0C5         	call	_TimerDone	;wreg free
 22028  018CD6  5036               	movf	btemp^0,w,c
 22029  018CD8  B4D8               	btfsc	status,2,c
 22030  018CDA  D006               	goto	l1604
 22031                           
 22032                           ;mconfig.c: 202:   old_info = V.response.info;
 22033  018CDC  0101               	movlb	1	; () banked
 22034  018CDE  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22035                           
 22036                           ; BSR set to: 1
 22037                           ;mconfig.c: 203:   V.response.info = new_response_info;
 22038                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22039  018CE0  0EFF               	movlw	-1
 22040  018CE2  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 22041  018CE8                     l1604:
 22042                           
 22043                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22044  018CE8  52E5               	movf	postdec1,f,c
 22045  018CEA  0012               	return		;funcret
 22046  018CEC                     __end_of_set_display_info:
 22047                           	opt callstack 0
 22048                           
 22049 ;; *************** function _mode_lamp_dim *****************
 22050 ;; Defined at:
 22051 ;;		line 13 in file "mconfig.c"
 22052 ;; Parameters:    Size  Location     Type
 22053 ;;  level           2  [STACK] const unsigned short 
 22054 ;; Auto vars:     Size  Location     Type
 22055 ;;		None
 22056 ;; Return value:  Size  Location     Type
 22057 ;;                  1  [STACK] void 
 22058 ;; Registers used:
 22059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22060 ;; Tracked objects:
 22061 ;;		On entry : 0/1
 22062 ;;		On exit  : 0/0
 22063 ;;		Unchanged: 0/0
 22064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22069 ;;Total ram usage:        0 bytes
 22070 ;; Hardware stack levels used:    1
 22071 ;; Hardware stack levels required when called:    7
 22072 ;; This function calls:
 22073 ;;		_PWM8_LoadDutyValue
 22074 ;; This function is called by:
 22075 ;;		_main
 22076 ;;		_check_help
 22077 ;; This function uses a reentrant model
 22078 ;;
 22079                           
 22080                           	psect	text79
 22081  018D96                     __ptext79:
 22082                           	opt callstack 0
 22083  018D96                     _mode_lamp_dim:
 22084                           	opt callstack 23
 22085                           
 22086                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22087                           ;stkvar	_level @ sp[(0)+-2]
 22088                           
 22089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22090                           ;incstack = 0
 22091  018D96  0EFE               	movlw	-2
 22092  018D98  006F FF8F FFE6     	movff	plusw1,postinc1
 22093  018D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 22094  018DA4  ECD1  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22095                           
 22096                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22097  018DA8  52E5               	movf	postdec1,f,c
 22098  018DAA  52E5               	movf	postdec1,f,c
 22099  018DAC  0012               	return		;funcret
 22100  018DAE                     __end_of_mode_lamp_dim:
 22101                           	opt callstack 0
 22102                           
 22103 ;; *************** function _mode_lamp_bright *****************
 22104 ;; Defined at:
 22105 ;;		line 18 in file "mconfig.c"
 22106 ;; Parameters:    Size  Location     Type
 22107 ;;		None
 22108 ;; Auto vars:     Size  Location     Type
 22109 ;;		None
 22110 ;; Return value:  Size  Location     Type
 22111 ;;                  1  [STACK] void 
 22112 ;; Registers used:
 22113 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22114 ;; Tracked objects:
 22115 ;;		On entry : 0/0
 22116 ;;		On exit  : 0/0
 22117 ;;		Unchanged: 0/0
 22118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22123 ;;Total ram usage:        0 bytes
 22124 ;; Hardware stack levels used:    1
 22125 ;; Hardware stack levels required when called:    7
 22126 ;; This function calls:
 22127 ;;		_PWM8_LoadDutyValue
 22128 ;; This function is called by:
 22129 ;;		_check_help
 22130 ;; This function uses a reentrant model
 22131 ;;
 22132                           
 22133                           	psect	text80
 22134  018E5E                     __ptext80:
 22135                           	opt callstack 0
 22136  018E5E                     _mode_lamp_bright:
 22137                           	opt callstack 22
 22138                           
 22139                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22140                           
 22141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22142                           ;incstack = 0
 22143  018E5E  0E2C               	movlw	44
 22144  018E60  6EE6               	movwf	postinc1,c
 22145  018E62  0E01               	movlw	1
 22146  018E64  6EE6               	movwf	postinc1,c
 22147  018E66  ECD1  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 22148                           
 22149                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22150  018E6A  0012               	return		;funcret
 22151  018E6C                     __end_of_mode_lamp_bright:
 22152                           	opt callstack 0
 22153                           
 22154 ;; *************** function _PWM8_LoadDutyValue *****************
 22155 ;; Defined at:
 22156 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22157 ;; Parameters:    Size  Location     Type
 22158 ;;  dutyValue       2  [STACK] unsigned short 
 22159 ;; Auto vars:     Size  Location     Type
 22160 ;;		None
 22161 ;; Return value:  Size  Location     Type
 22162 ;;                  1  [STACK] void 
 22163 ;; Registers used:
 22164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22165 ;; Tracked objects:
 22166 ;;		On entry : 0/1
 22167 ;;		On exit  : 0/0
 22168 ;;		Unchanged: 0/0
 22169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22174 ;;Total ram usage:        0 bytes
 22175 ;; Hardware stack levels used:    1
 22176 ;; Hardware stack levels required when called:    6
 22177 ;; This function calls:
 22178 ;;		Nothing
 22179 ;; This function is called by:
 22180 ;;		_mode_lamp_dim
 22181 ;;		_mode_lamp_bright
 22182 ;; This function uses a reentrant model
 22183 ;;
 22184                           
 22185                           	psect	text81
 22186  0185A2                     __ptext81:
 22187                           	opt callstack 0
 22188  0185A2                     _PWM8_LoadDutyValue:
 22189                           	opt callstack 23
 22190                           
 22191                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22192                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22193                           
 22194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22195                           ;incstack = 0
 22196  0185A2  0EFE               	movlw	-2
 22197  0185A4  006F FF8C  F040    	movff	plusw1,btemp+10
 22198  0185AA  0EFF               	movlw	-1
 22199  0185AC  006F FF8C  F041    	movff	plusw1,btemp+11
 22200  0185B2  90D8               	bcf	status,0,c
 22201  0185B4  3241               	rrcf	(btemp+11)^0,f,c
 22202  0185B6  3240               	rrcf	(btemp+10)^0,f,c
 22203  0185B8  90D8               	bcf	status,0,c
 22204  0185BA  3241               	rrcf	(btemp+11)^0,f,c
 22205  0185BC  3240               	rrcf	(btemp+10)^0,f,c
 22206  0185BE  5040               	movf	(btemp+10)^0,w,c
 22207  0185C0  6E61               	movwf	97,c	;volatile
 22208                           
 22209                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22210                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22211  0185C2  0EFE               	movlw	-2
 22212  0185C4  006F FF8C  F041    	movff	plusw1,btemp+11
 22213  0185CA  0E03               	movlw	3
 22214  0185CC  1641               	andwf	(btemp+11)^0,f,c
 22215  0185CE  0E06               	movlw	6
 22216  0185D0  6E36               	movwf	btemp^0,c
 22217  0185D2                     u8225:
 22218  0185D2  90D8               	bcf	status,0,c
 22219  0185D4  3641               	rlcf	(btemp+11)^0,f,c
 22220  0185D6  2E36               	decfsz	btemp^0,f,c
 22221  0185D8  D7FC               	goto	u8225
 22222  0185DA  5041               	movf	(btemp+11)^0,w,c
 22223  0185DC  6E60               	movwf	96,c	;volatile
 22224                           
 22225                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22226  0185DE  52E5               	movf	postdec1,f,c
 22227  0185E0  52E5               	movf	postdec1,f,c
 22228  0185E2  0012               	return		;funcret
 22229  0185E4                     __end_of_PWM8_LoadDutyValue:
 22230                           	opt callstack 0
 22231                           
 22232 ;; *************** function _help_button *****************
 22233 ;; Defined at:
 22234 ;;		line 26 in file "mconfig.c"
 22235 ;; Parameters:    Size  Location     Type
 22236 ;;		None
 22237 ;; Auto vars:     Size  Location     Type
 22238 ;;		None
 22239 ;; Return value:  Size  Location     Type
 22240 ;;                  1  [STACK] _Bool 
 22241 ;; Registers used:
 22242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22243 ;; Tracked objects:
 22244 ;;		On entry : 0/1
 22245 ;;		On exit  : 0/0
 22246 ;;		Unchanged: 0/0
 22247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22252 ;;Total ram usage:        0 bytes
 22253 ;; Hardware stack levels used:    1
 22254 ;; Hardware stack levels required when called:    7
 22255 ;; This function calls:
 22256 ;;		_StartTimer
 22257 ;;		_TimerDone
 22258 ;; This function is called by:
 22259 ;;		_check_help
 22260 ;; This function uses a reentrant model
 22261 ;;
 22262                           
 22263                           	psect	text82
 22264  0186A0                     __ptext82:
 22265                           	opt callstack 0
 22266  0186A0                     _help_button:
 22267                           	opt callstack 22
 22268                           
 22269                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22270                           
 22271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22272                           ;incstack = 0
 22273  0186A0  B0CB               	btfsc	203,0,c	;volatile
 22274  0186A2  D00C               	goto	l1547
 22275                           
 22276                           ;mconfig.c: 29:   V.help = 1;
 22277  0186A4  0101               	movlb	1	; () banked
 22278  0186A6  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22282  0186A8  0E08               	movlw	8
 22283  0186AA  6EE6               	movwf	postinc1,c
 22284  0186AC  ECF3  F0C5         	call	_TimerDone	;wreg free
 22285  0186B0  5036               	movf	btemp^0,w,c
 22286  0186B2  B4D8               	btfsc	status,2,c
 22287  0186B4  D003               	goto	l1547
 22288                           
 22289                           ;mconfig.c: 31:    return 1;
 22290  0186B6  0E01               	movlw	1
 22291  0186B8  6E36               	movwf	btemp^0,c
 22292  0186BA  0012               	return	
 22293  0186BC                     l1547:
 22294                           
 22295                           ;mconfig.c: 34:  if (!V.help)
 22296  0186BC  0101               	movlb	1	; () banked
 22297  0186BE  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22298  0186C0  D008               	goto	l8642
 22299                           
 22300                           ; BSR set to: 1
 22301                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22302  0186C2  0E2C               	movlw	44
 22303  0186C4  6EE6               	movwf	postinc1,c
 22304  0186C6  0E01               	movlw	1
 22305  0186C8  6EE6               	movwf	postinc1,c
 22306  0186CA  0E08               	movlw	8
 22307  0186CC  6EE6               	movwf	postinc1,c
 22308  0186CE  EC32  F0C3         	call	_StartTimer	;wreg free
 22309  0186D2                     l8642:
 22310                           
 22311                           ;mconfig.c: 37:  return 0;
 22312  0186D2  0E00               	movlw	0
 22313  0186D4  6E36               	movwf	btemp^0,c
 22314                           
 22315                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22316  0186D6  0012               	return		;funcret
 22317  0186D8                     __end_of_help_button:
 22318                           	opt callstack 0
 22319                           
 22320 ;; *************** function _TimerDone *****************
 22321 ;; Defined at:
 22322 ;;		line 20 in file "timers.c"
 22323 ;; Parameters:    Size  Location     Type
 22324 ;;  timer           1  [STACK] const unsigned char 
 22325 ;; Auto vars:     Size  Location     Type
 22326 ;;		None
 22327 ;; Return value:  Size  Location     Type
 22328 ;;                  1  [STACK] _Bool 
 22329 ;; Registers used:
 22330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22331 ;; Tracked objects:
 22332 ;;		On entry : 0/0
 22333 ;;		On exit  : 0/0
 22334 ;;		Unchanged: 0/0
 22335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22340 ;;Total ram usage:        0 bytes
 22341 ;; Hardware stack levels used:    1
 22342 ;; Hardware stack levels required when called:    6
 22343 ;; This function calls:
 22344 ;;		Nothing
 22345 ;; This function is called by:
 22346 ;;		_main
 22347 ;;		_WaitMs
 22348 ;;		_help_button
 22349 ;;		_check_help
 22350 ;;		_set_display_info
 22351 ;; This function uses a reentrant model
 22352 ;;
 22353                           
 22354                           	psect	text83
 22355  018BE6                     __ptext83:
 22356                           	opt callstack 0
 22357  018BE6                     _TimerDone:
 22358                           	opt callstack 23
 22359                           
 22360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22361                           ;incstack = 0
 22362  018BE6  0004               	clrwdt		;# 
 22363                           
 22364                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22365                           ;stkvar	_timer @ sp[(0)+-1]
 22366  018BE8  0EFF               	movlw	-1
 22367  018BEA  50E3               	movf	plusw1,w,c
 22368  018BEC  0D02               	mullw	2
 22369  018BEE  50F3               	movf	243,w,c
 22370  018BF0  0F60               	addlw	low _tickCount
 22371  018BF2  6ED9               	movwf	fsr2l,c
 22372  018BF4  6ADA               	clrf	fsr2h,c
 22373  018BF6  50DE               	movf	postinc2,w,c
 22374  018BF8  10DE               	iorwf	postinc2,w,c
 22375  018BFA  A4D8               	btfss	status,2,c
 22376  018BFC  D002               	goto	l8036
 22377                           
 22378                           ;timers.c: 24:   return 1;
 22379  018BFE  0E01               	movlw	1
 22380  018C00  D001               	goto	L22
 22381  018C02                     l8036:
 22382                           
 22383                           ;timers.c: 26:  return 0;
 22384  018C02  0E00               	movlw	0
 22385  018C04                     L22:
 22386  018C04  6E36               	movwf	btemp^0,c
 22387                           
 22388                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22389  018C06  52E5               	movf	postdec1,f,c
 22390  018C08  0012               	return		;funcret
 22391  018C0A                     __end_of_TimerDone:
 22392                           	opt callstack 0
 22393                           
 22394 ;; *************** function _StartTimer *****************
 22395 ;; Defined at:
 22396 ;;		line 12 in file "timers.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;  timer           1  [STACK] const unsigned char 
 22399 ;;  count           2  [STACK] const unsigned short 
 22400 ;; Auto vars:     Size  Location     Type
 22401 ;;		None
 22402 ;; Return value:  Size  Location     Type
 22403 ;;                  1  [STACK] void 
 22404 ;; Registers used:
 22405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22406 ;; Tracked objects:
 22407 ;;		On entry : 0/0
 22408 ;;		On exit  : 0/0
 22409 ;;		Unchanged: 0/0
 22410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22415 ;;Total ram usage:        0 bytes
 22416 ;; Hardware stack levels used:    1
 22417 ;; Hardware stack levels required when called:    6
 22418 ;; This function calls:
 22419 ;;		Nothing
 22420 ;; This function is called by:
 22421 ;;		_main
 22422 ;;		_WaitMs
 22423 ;;		_help_button
 22424 ;;		_check_help
 22425 ;; This function uses a reentrant model
 22426 ;;
 22427                           
 22428                           	psect	text84
 22429  018664                     __ptext84:
 22430                           	opt callstack 0
 22431  018664                     _StartTimer:
 22432                           	opt callstack 21
 22433                           
 22434                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22435                           ;stkvar	_count @ sp[(0)+-3]
 22436                           
 22437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22438                           ;incstack = 0
 22439  018664  0EFD               	movlw	-3
 22440  018666  006F FF8C  F040    	movff	plusw1,btemp+10
 22441  01866C  0EFE               	movlw	-2
 22442  01866E  006F FF8C  F041    	movff	plusw1,btemp+11
 22443  018674  90D8               	bcf	status,0,c
 22444  018676  3440               	rlcf	(btemp+10)^0,w,c
 22445  018678  6E3E               	movwf	(btemp+8)^0,c
 22446  01867A  3441               	rlcf	(btemp+11)^0,w,c
 22447  01867C  6E3F               	movwf	(btemp+9)^0,c
 22448                           
 22449                           ;stkvar	_timer @ sp[(0)+-1]
 22450  01867E  0EFF               	movlw	-1
 22451  018680  50E3               	movf	plusw1,w,c
 22452  018682  0D02               	mullw	2
 22453  018684  50F3               	movf	243,w,c
 22454  018686  0F60               	addlw	low _tickCount
 22455  018688  6ED9               	movwf	fsr2l,c
 22456  01868A  6ADA               	clrf	fsr2h,c
 22457  01868C  0060  F0FB  FFDE   	movff	btemp+8,postinc2
 22458  018692  0060  F0FF  FFDD   	movff	btemp+9,postdec2
 22459                           
 22460                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22461  018698  52E5               	movf	postdec1,f,c
 22462  01869A  52E5               	movf	postdec1,f,c
 22463  01869C  52E5               	movf	postdec1,f,c
 22464  01869E  0012               	return		;funcret
 22465  0186A0                     __end_of_StartTimer:
 22466                           	opt callstack 0
 22467                           
 22468 ;; *************** function _display_info *****************
 22469 ;; Defined at:
 22470 ;;		line 187 in file "mconfig.c"
 22471 ;; Parameters:    Size  Location     Type
 22472 ;;		None
 22473 ;; Auto vars:     Size  Location     Type
 22474 ;;		None
 22475 ;; Return value:  Size  Location     Type
 22476 ;;                  1  [STACK] enum E16501
 22477 ;; Registers used:
 22478 ;;		btemp
 22479 ;; Tracked objects:
 22480 ;;		On entry : 0/1
 22481 ;;		On exit  : 0/0
 22482 ;;		Unchanged: 0/0
 22483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22488 ;;Total ram usage:        0 bytes
 22489 ;; Hardware stack levels used:    1
 22490 ;; Hardware stack levels required when called:    6
 22491 ;; This function calls:
 22492 ;;		Nothing
 22493 ;; This function is called by:
 22494 ;;		_check_help
 22495 ;; This function uses a reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text85
 22499  018ECE                     __ptext85:
 22500                           	opt callstack 0
 22501  018ECE                     _display_info:
 22502                           	opt callstack 23
 22503                           
 22504                           ;mconfig.c: 189:  return V.response.info;
 22505                           
 22506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22507                           ;incstack = 0
 22508  018ECE  0060  F68C  F036   	movff	_V+163,btemp	;volatile
 22509                           
 22510                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22511  018ED4  0012               	return		;funcret
 22512  018ED6                     __end_of_display_info:
 22513                           	opt callstack 0
 22514                           
 22515 ;; *************** function _display_help *****************
 22516 ;; Defined at:
 22517 ;;		line 192 in file "mconfig.c"
 22518 ;; Parameters:    Size  Location     Type
 22519 ;;		None
 22520 ;; Auto vars:     Size  Location     Type
 22521 ;;		None
 22522 ;; Return value:  Size  Location     Type
 22523 ;;                  1  [STACK] enum E16501
 22524 ;; Registers used:
 22525 ;;		btemp
 22526 ;; Tracked objects:
 22527 ;;		On entry : 3F/1
 22528 ;;		On exit  : 0/0
 22529 ;;		Unchanged: 0/0
 22530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;Total ram usage:        0 bytes
 22536 ;; Hardware stack levels used:    1
 22537 ;; Hardware stack levels required when called:    6
 22538 ;; This function calls:
 22539 ;;		Nothing
 22540 ;; This function is called by:
 22541 ;;		_check_help
 22542 ;; This function uses a reentrant model
 22543 ;;
 22544                           
 22545                           	psect	text86
 22546  018ED6                     __ptext86:
 22547                           	opt callstack 0
 22548  018ED6                     _display_help:
 22549                           	opt callstack 23
 22550                           
 22551                           ;mconfig.c: 194:  return V.response.help_temp;
 22552                           
 22553                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22554                           ;incstack = 0
 22555  018ED6  0060  F690  F036   	movff	_V+164,btemp	;volatile
 22556                           
 22557                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22558  018EDC  0012               	return		;funcret
 22559  018EDE                     __end_of_display_help:
 22560                           	opt callstack 0
 22561                           
 22562 ;; *************** function _check_adc_scan *****************
 22563 ;; Defined at:
 22564 ;;		line 56 in file "daq.c"
 22565 ;; Parameters:    Size  Location     Type
 22566 ;;		None
 22567 ;; Auto vars:     Size  Location     Type
 22568 ;;		None
 22569 ;; Return value:  Size  Location     Type
 22570 ;;                  1  [STACK] _Bool 
 22571 ;; Registers used:
 22572 ;;		btemp
 22573 ;; Tracked objects:
 22574 ;;		On entry : 0/0
 22575 ;;		On exit  : 0/0
 22576 ;;		Unchanged: 0/0
 22577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22582 ;;Total ram usage:        0 bytes
 22583 ;; Hardware stack levels used:    1
 22584 ;; Hardware stack levels required when called:    6
 22585 ;; This function calls:
 22586 ;;		Nothing
 22587 ;; This function is called by:
 22588 ;;		_main
 22589 ;; This function uses a reentrant model
 22590 ;;
 22591                           
 22592                           	psect	text87
 22593  018EDE                     __ptext87:
 22594                           	opt callstack 0
 22595  018EDE                     _check_adc_scan:
 22596                           	opt callstack 24
 22597                           
 22598                           ;daq.c: 58:  return R.done;
 22599                           
 22600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22601                           ;incstack = 0
 22602  018EDE  0060  F324  F036   	movff	_R+39,btemp	;volatile
 22603                           
 22604                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22605  018EE4  0012               	return		;funcret
 22606  018EE6                     __end_of_check_adc_scan:
 22607                           	opt callstack 0
 22608                           
 22609 ;; *************** function _SYSTEM_Initialize *****************
 22610 ;; Defined at:
 22611 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22612 ;; Parameters:    Size  Location     Type
 22613 ;;		None
 22614 ;; Auto vars:     Size  Location     Type
 22615 ;;		None
 22616 ;; Return value:  Size  Location     Type
 22617 ;;                  1  [STACK] void 
 22618 ;; Registers used:
 22619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22620 ;; Tracked objects:
 22621 ;;		On entry : 0/0
 22622 ;;		On exit  : 3F/3C
 22623 ;;		Unchanged: 0/0
 22624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22629 ;;Total ram usage:        0 bytes
 22630 ;; Hardware stack levels used:    1
 22631 ;; Hardware stack levels required when called:    8
 22632 ;; This function calls:
 22633 ;;		_ADCC_Initialize
 22634 ;;		_CLKREF_Initialize
 22635 ;;		_DMA1_Initialize
 22636 ;;		_DMA2_Initialize
 22637 ;;		_EXT_INT_Initialize
 22638 ;;		_FVR_Initialize
 22639 ;;		_INTERRUPT_Initialize
 22640 ;;		_OSCILLATOR_Initialize
 22641 ;;		_PIN_MANAGER_Initialize
 22642 ;;		_PMD_Initialize
 22643 ;;		_PWM8_Initialize
 22644 ;;		_SPI1_Initialize
 22645 ;;		_TMR2_Initialize
 22646 ;;		_TMR5_Initialize
 22647 ;;		_TMR6_Initialize
 22648 ;;		_UART1_Initialize
 22649 ;;		_UART2_Initialize
 22650 ;; This function is called by:
 22651 ;;		_main
 22652 ;; This function uses a reentrant model
 22653 ;;
 22654                           
 22655                           	psect	text88
 22656  01848C                     __ptext88:
 22657                           	opt callstack 0
 22658  01848C                     _SYSTEM_Initialize:
 22659                           	opt callstack 22
 22660                           
 22661                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22662                           
 22663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22664                           ;incstack = 0
 22665  01848C  ECDA  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22666                           
 22667                           ; BSR set to: 57
 22668                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22669  018490  EC04  F0C7         	call	_PMD_Initialize	;wreg free
 22670                           
 22671                           ; BSR set to: 57
 22672                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22673  018494  ECB0  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22674                           
 22675                           ; BSR set to: 58
 22676                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22677  018498  ECF9  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22678                           
 22679                           ; BSR set to: 57
 22680                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22681  01849C  EC73  F0C7         	call	_FVR_Initialize	;wreg free
 22682                           
 22683                           ; BSR set to: 62
 22684                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22685  0184A0  EC71  F0BF         	call	_ADCC_Initialize	;wreg free
 22686                           
 22687                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 22688  0184A4  ECEE  F0C6         	call	_PWM8_Initialize	;wreg free
 22689                           
 22690                           ; BSR set to: 63
 22691                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 22692  0184A8  ECD7  F0C6         	call	_TMR2_Initialize	;wreg free
 22693                           
 22694                           ; BSR set to: 57
 22695                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22696  0184AC  ECBC  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22697                           
 22698                           ; BSR set to: 57
 22699                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22700  0184B0  EC61  F0C4         	call	_TMR6_Initialize	;wreg free
 22701                           
 22702                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22703  0184B4  EC69  F0C2         	call	_TMR5_Initialize	;wreg free
 22704                           
 22705                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22706  0184B8  EC3F  F0C0         	call	_UART1_Initialize	;wreg free
 22707                           
 22708                           ; BSR set to: 57
 22709                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22710  0184BC  ECD3  F0C0         	call	_UART2_Initialize	;wreg free
 22711                           
 22712                           ; BSR set to: 57
 22713                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22714  0184C0  ECE3  F0C6         	call	_SPI1_Initialize	;wreg free
 22715                           
 22716                           ; BSR set to: 61
 22717                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22718  0184C4  EC5D  F0C1         	call	_DMA2_Initialize	;wreg free
 22719                           
 22720                           ; BSR set to: 59
 22721                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22722  0184C8  EC3C  F0BF         	call	_DMA1_Initialize	;wreg free
 22723                           
 22724                           ; BSR set to: 59
 22725                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22726  0184CC  EC4D  F0C7         	call	_CLKREF_Initialize	;wreg free
 22727                           
 22728                           ; BSR set to: 60
 22729                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22730  0184D0  0012               	return		;funcret
 22731  0184D2                     __end_of_SYSTEM_Initialize:
 22732                           	opt callstack 0
 22733                           
 22734 ;; *************** function _UART2_Initialize *****************
 22735 ;; Defined at:
 22736 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;		None
 22739 ;; Auto vars:     Size  Location     Type
 22740 ;;		None
 22741 ;; Return value:  Size  Location     Type
 22742 ;;                  1  [STACK] void 
 22743 ;; Registers used:
 22744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22745 ;; Tracked objects:
 22746 ;;		On entry : 3F/39
 22747 ;;		On exit  : 3F/39
 22748 ;;		Unchanged: 0/0
 22749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22754 ;;Total ram usage:        0 bytes
 22755 ;; Hardware stack levels used:    1
 22756 ;; Hardware stack levels required when called:    7
 22757 ;; This function calls:
 22758 ;;		_UART2_SetRxInterruptHandler
 22759 ;;		_UART2_SetTxInterruptHandler
 22760 ;; This function is called by:
 22761 ;;		_SYSTEM_Initialize
 22762 ;; This function uses a reentrant model
 22763 ;;
 22764                           
 22765                           	psect	text89
 22766  0181A6                     __ptext89:
 22767                           	opt callstack 0
 22768  0181A6                     _UART2_Initialize:
 22769                           	opt callstack 22
 22770                           
 22771                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22772                           
 22773                           ; BSR set to: 60
 22774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22775                           ;incstack = 0
 22776  0181A6  0139               	movlb	57	; () banked
 22777  0181A8  9596               	bcf	150,2,b	;volatile
 22778                           
 22779                           ; BSR set to: 57
 22780                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22781  0181AA  0E0A               	movlw	low _UART2_Receive_ISR
 22782  0181AC  6EE6               	movwf	postinc1,c
 22783  0181AE  0E8D               	movlw	high _UART2_Receive_ISR
 22784  0181B0  6EE6               	movwf	postinc1,c
 22785  0181B2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22786  0181B4  6EE6               	movwf	postinc1,c
 22787  0181B6  ECDB  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22788                           
 22789                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22790  0181BA  0139               	movlb	57	; () banked
 22791  0181BC  9796               	bcf	150,3,b	;volatile
 22792                           
 22793                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22794  0181BE  0E96               	movlw	low _UART2_Transmit_ISR
 22795  0181C0  6EE6               	movwf	postinc1,c
 22796  0181C2  0E88               	movlw	high _UART2_Transmit_ISR
 22797  0181C4  6EE6               	movwf	postinc1,c
 22798  0181C6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22799  0181C8  6EE6               	movwf	postinc1,c
 22800  0181CA  ECC7  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22801                           
 22802                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22803  0181CE  013D               	movlb	61	; () banked
 22804  0181D0  6BD4               	clrf	212,b	;volatile
 22805                           
 22806                           ; BSR set to: 61
 22807                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22808  0181D2  6BD6               	clrf	214,b	;volatile
 22809                           
 22810                           ; BSR set to: 61
 22811                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22812  0181D4  6BD8               	clrf	216,b	;volatile
 22813                           
 22814                           ; BSR set to: 61
 22815                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22816  0181D6  0EB0               	movlw	176
 22817  0181D8  6FDA               	movwf	218,b	;volatile
 22818                           
 22819                           ; BSR set to: 61
 22820                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22821  0181DA  0E80               	movlw	128
 22822  0181DC  6FDB               	movwf	219,b	;volatile
 22823                           
 22824                           ; BSR set to: 61
 22825                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22826  0181DE  6BDC               	clrf	220,b	;volatile
 22827                           
 22828                           ; BSR set to: 61
 22829                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22830  0181E0  0E82               	movlw	130
 22831  0181E2  6FDD               	movwf	221,b	;volatile
 22832                           
 22833                           ; BSR set to: 61
 22834                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22835  0181E4  0E06               	movlw	6
 22836  0181E6  6FDE               	movwf	222,b	;volatile
 22837                           
 22838                           ; BSR set to: 61
 22839                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22840  0181E8  6BDF               	clrf	223,b	;volatile
 22841                           
 22842                           ; BSR set to: 61
 22843                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22844  0181EA  6BE0               	clrf	224,b	;volatile
 22845                           
 22846                           ; BSR set to: 61
 22847                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22848  0181EC  6BE1               	clrf	225,b	;volatile
 22849                           
 22850                           ; BSR set to: 61
 22851                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22852  0181EE  6BE2               	clrf	226,b	;volatile
 22853                           
 22854                           ; BSR set to: 61
 22855                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22856  0181F0  6A2F               	clrf	_uart2TxHead^0,c	;volatile
 22857                           
 22858                           ; BSR set to: 61
 22859                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22860  0181F2  6A2E               	clrf	_uart2TxTail^0,c	;volatile
 22861                           
 22862                           ; BSR set to: 61
 22863                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22864  0181F4  0E40               	movlw	64
 22865  0181F6  6E2D               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22866                           
 22867                           ; BSR set to: 61
 22868                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22869  0181F8  6A2C               	clrf	_uart2RxHead^0,c	;volatile
 22870                           
 22871                           ; BSR set to: 61
 22872                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22873  0181FA  6A2B               	clrf	_uart2RxTail^0,c	;volatile
 22874                           
 22875                           ; BSR set to: 61
 22876                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22877  0181FC  6A2A               	clrf	_uart2RxCount^0,c	;volatile
 22878                           
 22879                           ; BSR set to: 61
 22880                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22881  0181FE  0139               	movlb	57	; () banked
 22882  018200  8596               	bsf	150,2,b	;volatile
 22883                           
 22884                           ; BSR set to: 57
 22885                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22886  018202  0012               	return		;funcret
 22887  018204                     __end_of_UART2_Initialize:
 22888                           	opt callstack 0
 22889                           
 22890 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22891 ;; Defined at:
 22892 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22893 ;; Parameters:    Size  Location     Type
 22894 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22895 ;;		 -> UART2_Transmit_ISR(1), 
 22896 ;; Auto vars:     Size  Location     Type
 22897 ;;		None
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1  [STACK] void 
 22900 ;; Registers used:
 22901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22902 ;; Tracked objects:
 22903 ;;		On entry : 3F/39
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22911 ;;Total ram usage:        0 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:    6
 22914 ;; This function calls:
 22915 ;;		Nothing
 22916 ;; This function is called by:
 22917 ;;		_UART2_Initialize
 22918 ;; This function uses a reentrant model
 22919 ;;
 22920                           
 22921                           	psect	text90
 22922  01898E                     __ptext90:
 22923                           	opt callstack 0
 22924  01898E                     _UART2_SetTxInterruptHandler:
 22925                           	opt callstack 22
 22926                           
 22927                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22928                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22929                           
 22930                           ; BSR set to: 57
 22931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22932                           ;incstack = 0
 22933  01898E  50E1               	movf	fsr1l,w,c
 22934  018990  0FFD               	addlw	-3
 22935  018992  6ED9               	movwf	fsr2l,c
 22936  018994  50E2               	movf	fsr1h,w,c
 22937  018996  6EDA               	movwf	fsr2h,c
 22938  018998  0EFF               	movlw	255
 22939  01899A  22DA               	addwfc	fsr2h,f,c
 22940  01899C  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 22941  0189A2  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 22942  0189A8  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 22943                           
 22944                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22945  0189AE  52E5               	movf	postdec1,f,c
 22946  0189B0  52E5               	movf	postdec1,f,c
 22947  0189B2  52E5               	movf	postdec1,f,c
 22948  0189B4  0012               	return		;funcret
 22949  0189B6                     __end_of_UART2_SetTxInterruptHandler:
 22950                           	opt callstack 0
 22951                           
 22952 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22953 ;; Defined at:
 22954 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22955 ;; Parameters:    Size  Location     Type
 22956 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22957 ;;		 -> UART2_Receive_ISR(1), 
 22958 ;; Auto vars:     Size  Location     Type
 22959 ;;		None
 22960 ;; Return value:  Size  Location     Type
 22961 ;;                  1  [STACK] void 
 22962 ;; Registers used:
 22963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22964 ;; Tracked objects:
 22965 ;;		On entry : 3F/39
 22966 ;;		On exit  : 0/0
 22967 ;;		Unchanged: 0/0
 22968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;Total ram usage:        0 bytes
 22974 ;; Hardware stack levels used:    1
 22975 ;; Hardware stack levels required when called:    6
 22976 ;; This function calls:
 22977 ;;		Nothing
 22978 ;; This function is called by:
 22979 ;;		_UART2_Initialize
 22980 ;; This function uses a reentrant model
 22981 ;;
 22982                           
 22983                           	psect	text91
 22984  0189B6                     __ptext91:
 22985                           	opt callstack 0
 22986  0189B6                     _UART2_SetRxInterruptHandler:
 22987                           	opt callstack 22
 22988                           
 22989                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22990                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22991                           
 22992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22993                           ;incstack = 0
 22994  0189B6  50E1               	movf	fsr1l,w,c
 22995  0189B8  0FFD               	addlw	-3
 22996  0189BA  6ED9               	movwf	fsr2l,c
 22997  0189BC  50E2               	movf	fsr1h,w,c
 22998  0189BE  6EDA               	movwf	fsr2h,c
 22999  0189C0  0EFF               	movlw	255
 23000  0189C2  22DA               	addwfc	fsr2h,f,c
 23001  0189C4  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 23002  0189CA  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 23003  0189D0  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 23004                           
 23005                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23006  0189D6  52E5               	movf	postdec1,f,c
 23007  0189D8  52E5               	movf	postdec1,f,c
 23008  0189DA  52E5               	movf	postdec1,f,c
 23009  0189DC  0012               	return		;funcret
 23010  0189DE                     __end_of_UART2_SetRxInterruptHandler:
 23011                           	opt callstack 0
 23012                           
 23013 ;; *************** function _UART1_Initialize *****************
 23014 ;; Defined at:
 23015 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23016 ;; Parameters:    Size  Location     Type
 23017 ;;		None
 23018 ;; Auto vars:     Size  Location     Type
 23019 ;;		None
 23020 ;; Return value:  Size  Location     Type
 23021 ;;                  1  [STACK] void 
 23022 ;; Registers used:
 23023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23024 ;; Tracked objects:
 23025 ;;		On entry : 0/39
 23026 ;;		On exit  : 3F/39
 23027 ;;		Unchanged: 0/0
 23028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23033 ;;Total ram usage:        0 bytes
 23034 ;; Hardware stack levels used:    1
 23035 ;; Hardware stack levels required when called:    7
 23036 ;; This function calls:
 23037 ;;		_UART1_SetRxInterruptHandler
 23038 ;;		_UART1_SetTxInterruptHandler
 23039 ;; This function is called by:
 23040 ;;		_SYSTEM_Initialize
 23041 ;; This function uses a reentrant model
 23042 ;;
 23043                           
 23044                           	psect	text92
 23045  01807E                     __ptext92:
 23046                           	opt callstack 0
 23047  01807E                     _UART1_Initialize:
 23048                           	opt callstack 22
 23049                           
 23050                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23051                           
 23052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23053                           ;incstack = 0
 23054  01807E  0139               	movlb	57	; () banked
 23055  018080  9793               	bcf	147,3,b	;volatile
 23056                           
 23057                           ; BSR set to: 57
 23058                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23059  018082  0EEC               	movlw	low _UART1_Receive_ISR
 23060  018084  6EE6               	movwf	postinc1,c
 23061  018086  0E8C               	movlw	high _UART1_Receive_ISR
 23062  018088  6EE6               	movwf	postinc1,c
 23063  01808A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23064  01808C  6EE6               	movwf	postinc1,c
 23065  01808E  EC03  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23066                           
 23067                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23068  018092  0139               	movlb	57	; () banked
 23069  018094  9993               	bcf	147,4,b	;volatile
 23070                           
 23071                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23072  018096  0E6A               	movlw	low _UART1_Transmit_ISR
 23073  018098  6EE6               	movwf	postinc1,c
 23074  01809A  0E88               	movlw	high _UART1_Transmit_ISR
 23075  01809C  6EE6               	movwf	postinc1,c
 23076  01809E  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23077  0180A0  6EE6               	movwf	postinc1,c
 23078  0180A2  ECEF  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 23079                           
 23080                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23081  0180A6  013D               	movlb	61	; () banked
 23082  0180A8  6BEC               	clrf	236,b	;volatile
 23083                           
 23084                           ; BSR set to: 61
 23085                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23086  0180AA  6BED               	clrf	237,b	;volatile
 23087                           
 23088                           ; BSR set to: 61
 23089                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23090  0180AC  6BEE               	clrf	238,b	;volatile
 23091                           
 23092                           ; BSR set to: 61
 23093                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23094  0180AE  6BEF               	clrf	239,b	;volatile
 23095                           
 23096                           ; BSR set to: 61
 23097                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23098  0180B0  6BF0               	clrf	240,b	;volatile
 23099                           
 23100                           ; BSR set to: 61
 23101                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23102  0180B2  6BF1               	clrf	241,b	;volatile
 23103                           
 23104                           ; BSR set to: 61
 23105                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23106  0180B4  0EB0               	movlw	176
 23107  0180B6  6FF2               	movwf	242,b	;volatile
 23108                           
 23109                           ; BSR set to: 61
 23110                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23111  0180B8  0E80               	movlw	128
 23112  0180BA  6FF3               	movwf	243,b	;volatile
 23113                           
 23114                           ; BSR set to: 61
 23115                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23116  0180BC  6BF4               	clrf	244,b	;volatile
 23117                           
 23118                           ; BSR set to: 61
 23119                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23120  0180BE  0E82               	movlw	130
 23121  0180C0  6FF5               	movwf	245,b	;volatile
 23122                           
 23123                           ; BSR set to: 61
 23124                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23125  0180C2  0E06               	movlw	6
 23126  0180C4  6FF6               	movwf	246,b	;volatile
 23127                           
 23128                           ; BSR set to: 61
 23129                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23130  0180C6  6BF7               	clrf	247,b	;volatile
 23131                           
 23132                           ; BSR set to: 61
 23133                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23134  0180C8  6BF8               	clrf	248,b	;volatile
 23135                           
 23136                           ; BSR set to: 61
 23137                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23138  0180CA  6BF9               	clrf	249,b	;volatile
 23139                           
 23140                           ; BSR set to: 61
 23141                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23142  0180CC  6BFA               	clrf	250,b	;volatile
 23143                           
 23144                           ; BSR set to: 61
 23145                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23146  0180CE  6A35               	clrf	_uart1TxHead^0,c	;volatile
 23147                           
 23148                           ; BSR set to: 61
 23149                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23150  0180D0  6A34               	clrf	_uart1TxTail^0,c	;volatile
 23151                           
 23152                           ; BSR set to: 61
 23153                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23154  0180D2  0E40               	movlw	64
 23155  0180D4  6E33               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23156                           
 23157                           ; BSR set to: 61
 23158                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23159  0180D6  6A32               	clrf	_uart1RxHead^0,c	;volatile
 23160                           
 23161                           ; BSR set to: 61
 23162                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23163  0180D8  6A31               	clrf	_uart1RxTail^0,c	;volatile
 23164                           
 23165                           ; BSR set to: 61
 23166                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23167  0180DA  6A30               	clrf	_uart1RxCount^0,c	;volatile
 23168                           
 23169                           ; BSR set to: 61
 23170                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23171  0180DC  0139               	movlb	57	; () banked
 23172  0180DE  8793               	bsf	147,3,b	;volatile
 23173                           
 23174                           ; BSR set to: 57
 23175                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23176  0180E0  0012               	return		;funcret
 23177  0180E2                     __end_of_UART1_Initialize:
 23178                           	opt callstack 0
 23179                           
 23180 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23181 ;; Defined at:
 23182 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23185 ;;		 -> UART1_Transmit_ISR(1), 
 23186 ;; Auto vars:     Size  Location     Type
 23187 ;;		None
 23188 ;; Return value:  Size  Location     Type
 23189 ;;                  1  [STACK] void 
 23190 ;; Registers used:
 23191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23192 ;; Tracked objects:
 23193 ;;		On entry : 3F/39
 23194 ;;		On exit  : 0/0
 23195 ;;		Unchanged: 0/0
 23196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23201 ;;Total ram usage:        0 bytes
 23202 ;; Hardware stack levels used:    1
 23203 ;; Hardware stack levels required when called:    6
 23204 ;; This function calls:
 23205 ;;		Nothing
 23206 ;; This function is called by:
 23207 ;;		_UART1_Initialize
 23208 ;; This function uses a reentrant model
 23209 ;;
 23210                           
 23211                           	psect	text93
 23212  0189DE                     __ptext93:
 23213                           	opt callstack 0
 23214  0189DE                     _UART1_SetTxInterruptHandler:
 23215                           	opt callstack 22
 23216                           
 23217                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23218                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23219                           
 23220                           ; BSR set to: 57
 23221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23222                           ;incstack = 0
 23223  0189DE  50E1               	movf	fsr1l,w,c
 23224  0189E0  0FFD               	addlw	-3
 23225  0189E2  6ED9               	movwf	fsr2l,c
 23226  0189E4  50E2               	movf	fsr1h,w,c
 23227  0189E6  6EDA               	movwf	fsr2h,c
 23228  0189E8  0EFF               	movlw	255
 23229  0189EA  22DA               	addwfc	fsr2h,f,c
 23230  0189EC  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 23231  0189F2  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 23232  0189F8  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 23233                           
 23234                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23235  0189FE  52E5               	movf	postdec1,f,c
 23236  018A00  52E5               	movf	postdec1,f,c
 23237  018A02  52E5               	movf	postdec1,f,c
 23238  018A04  0012               	return		;funcret
 23239  018A06                     __end_of_UART1_SetTxInterruptHandler:
 23240                           	opt callstack 0
 23241                           
 23242 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23243 ;; Defined at:
 23244 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23245 ;; Parameters:    Size  Location     Type
 23246 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23247 ;;		 -> UART1_Receive_ISR(1), 
 23248 ;; Auto vars:     Size  Location     Type
 23249 ;;		None
 23250 ;; Return value:  Size  Location     Type
 23251 ;;                  1  [STACK] void 
 23252 ;; Registers used:
 23253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23254 ;; Tracked objects:
 23255 ;;		On entry : 3F/39
 23256 ;;		On exit  : 0/0
 23257 ;;		Unchanged: 0/0
 23258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23263 ;;Total ram usage:        0 bytes
 23264 ;; Hardware stack levels used:    1
 23265 ;; Hardware stack levels required when called:    6
 23266 ;; This function calls:
 23267 ;;		Nothing
 23268 ;; This function is called by:
 23269 ;;		_UART1_Initialize
 23270 ;; This function uses a reentrant model
 23271 ;;
 23272                           
 23273                           	psect	text94
 23274  018A06                     __ptext94:
 23275                           	opt callstack 0
 23276  018A06                     _UART1_SetRxInterruptHandler:
 23277                           	opt callstack 22
 23278                           
 23279                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23280                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23281                           
 23282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23283                           ;incstack = 0
 23284  018A06  50E1               	movf	fsr1l,w,c
 23285  018A08  0FFD               	addlw	-3
 23286  018A0A  6ED9               	movwf	fsr2l,c
 23287  018A0C  50E2               	movf	fsr1h,w,c
 23288  018A0E  6EDA               	movwf	fsr2h,c
 23289  018A10  0EFF               	movlw	255
 23290  018A12  22DA               	addwfc	fsr2h,f,c
 23291  018A14  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 23292  018A1A  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 23293  018A20  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 23294                           
 23295                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23296  018A26  52E5               	movf	postdec1,f,c
 23297  018A28  52E5               	movf	postdec1,f,c
 23298  018A2A  52E5               	movf	postdec1,f,c
 23299  018A2C  0012               	return		;funcret
 23300  018A2E                     __end_of_UART1_SetRxInterruptHandler:
 23301                           	opt callstack 0
 23302                           
 23303 ;; *************** function _TMR6_Initialize *****************
 23304 ;; Defined at:
 23305 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;		None
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;		None
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  1  [STACK] void 
 23312 ;; Registers used:
 23313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23314 ;; Tracked objects:
 23315 ;;		On entry : 3F/39
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23323 ;;Total ram usage:        0 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; Hardware stack levels required when called:    7
 23326 ;; This function calls:
 23327 ;;		_TMR6_SetInterruptHandler
 23328 ;; This function is called by:
 23329 ;;		_SYSTEM_Initialize
 23330 ;; This function uses a reentrant model
 23331 ;;
 23332                           
 23333                           	psect	text95
 23334  0188C2                     __ptext95:
 23335                           	opt callstack 0
 23336  0188C2                     _TMR6_Initialize:
 23337                           	opt callstack 22
 23338                           
 23339                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23340                           
 23341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23342                           ;incstack = 0
 23343  0188C2  0E01               	movlw	1
 23344  0188C4  6E96               	movwf	150,c	;volatile
 23345                           
 23346                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23347  0188C6  6A95               	clrf	149,c	;volatile
 23348                           
 23349                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23350  0188C8  6A97               	clrf	151,c	;volatile
 23351                           
 23352                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23353  0188CA  0E7C               	movlw	124
 23354  0188CC  6E93               	movwf	147,c	;volatile
 23355                           
 23356                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23357  0188CE  6A92               	clrf	146,c	;volatile
 23358                           
 23359                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23360  0188D0  0139               	movlb	57	; () banked
 23361  0188D2  91A9               	bcf	169,0,b	;volatile
 23362                           
 23363                           ; BSR set to: 57
 23364                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23365  0188D4  8199               	bsf	153,0,b	;volatile
 23366                           
 23367                           ; BSR set to: 57
 23368                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23369  0188D6  0E18               	movlw	low _TMR6_DefaultInterruptHandler
 23370  0188D8  6EE6               	movwf	postinc1,c
 23371  0188DA  0E85               	movlw	high _TMR6_DefaultInterruptHandler
 23372  0188DC  6EE6               	movwf	postinc1,c
 23373  0188DE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23374  0188E0  6EE6               	movwf	postinc1,c
 23375  0188E2  EC17  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23376                           
 23377                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23378  0188E6  0EE0               	movlw	224
 23379  0188E8  6E94               	movwf	148,c	;volatile
 23380                           
 23381                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23382  0188EA  0012               	return		;funcret
 23383  0188EC                     __end_of_TMR6_Initialize:
 23384                           	opt callstack 0
 23385                           
 23386 ;; *************** function _TMR6_SetInterruptHandler *****************
 23387 ;; Defined at:
 23388 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23391 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23392 ;; Auto vars:     Size  Location     Type
 23393 ;;		None
 23394 ;; Return value:  Size  Location     Type
 23395 ;;                  1  [STACK] void 
 23396 ;; Registers used:
 23397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23398 ;; Tracked objects:
 23399 ;;		On entry : 3F/39
 23400 ;;		On exit  : 0/0
 23401 ;;		Unchanged: 0/0
 23402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23407 ;;Total ram usage:        0 bytes
 23408 ;; Hardware stack levels used:    1
 23409 ;; Hardware stack levels required when called:    6
 23410 ;; This function calls:
 23411 ;;		Nothing
 23412 ;; This function is called by:
 23413 ;;		_TMR6_Initialize
 23414 ;; This function uses a reentrant model
 23415 ;;
 23416                           
 23417                           	psect	text96
 23418  018A2E                     __ptext96:
 23419                           	opt callstack 0
 23420  018A2E                     _TMR6_SetInterruptHandler:
 23421                           	opt callstack 22
 23422                           
 23423                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23424                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23425                           
 23426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23427                           ;incstack = 0
 23428  018A2E  50E1               	movf	fsr1l,w,c
 23429  018A30  0FFD               	addlw	-3
 23430  018A32  6ED9               	movwf	fsr2l,c
 23431  018A34  50E2               	movf	fsr1h,w,c
 23432  018A36  6EDA               	movwf	fsr2h,c
 23433  018A38  0EFF               	movlw	255
 23434  018A3A  22DA               	addwfc	fsr2h,f,c
 23435  018A3C  006F FF78  F004    	movff	postinc2,_TMR6_InterruptHandler
 23436  018A42  006F FF78  F005    	movff	postinc2,_TMR6_InterruptHandler+1
 23437  018A48  006F FF74  F006    	movff	postdec2,_TMR6_InterruptHandler+2
 23438                           
 23439                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23440  018A4E  52E5               	movf	postdec1,f,c
 23441  018A50  52E5               	movf	postdec1,f,c
 23442  018A52  52E5               	movf	postdec1,f,c
 23443  018A54  0012               	return		;funcret
 23444  018A56                     __end_of_TMR6_SetInterruptHandler:
 23445                           	opt callstack 0
 23446                           
 23447 ;; *************** function _TMR5_Initialize *****************
 23448 ;; Defined at:
 23449 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23450 ;; Parameters:    Size  Location     Type
 23451 ;;		None
 23452 ;; Auto vars:     Size  Location     Type
 23453 ;;		None
 23454 ;; Return value:  Size  Location     Type
 23455 ;;                  1  [STACK] void 
 23456 ;; Registers used:
 23457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23458 ;; Tracked objects:
 23459 ;;		On entry : 0/39
 23460 ;;		On exit  : 0/0
 23461 ;;		Unchanged: 0/0
 23462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23467 ;;Total ram usage:        0 bytes
 23468 ;; Hardware stack levels used:    1
 23469 ;; Hardware stack levels required when called:    7
 23470 ;; This function calls:
 23471 ;;		_TMR5_SetInterruptHandler
 23472 ;; This function is called by:
 23473 ;;		_SYSTEM_Initialize
 23474 ;; This function uses a reentrant model
 23475 ;;
 23476                           
 23477                           	psect	text97
 23478  0184D2                     __ptext97:
 23479                           	opt callstack 0
 23480  0184D2                     _TMR5_Initialize:
 23481                           	opt callstack 22
 23482                           
 23483                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23484                           
 23485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23486                           ;incstack = 0
 23487  0184D2  6A9B               	clrf	155,c	;volatile
 23488                           
 23489                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23490  0184D4  6A9C               	clrf	156,c	;volatile
 23491                           
 23492                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23493  0184D6  0E01               	movlw	1
 23494  0184D8  6E9D               	movwf	157,c	;volatile
 23495                           
 23496                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23497  0184DA  0E63               	movlw	99
 23498  0184DC  6E99               	movwf	153,c	;volatile
 23499                           
 23500                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23501  0184DE  0EC0               	movlw	192
 23502  0184E0  6E98               	movwf	152,c	;volatile
 23503                           
 23504                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23505  0184E2  5098               	movf	152,w,c	;volatile
 23506  0184E4  006F FE64  F036    	movff	16281,btemp	;volatile
 23507  0184EA  6A37               	clrf	(btemp+1)^0,c
 23508  0184EC  0060  F0D8  F037   	movff	btemp,btemp+1
 23509  0184F2  6A36               	clrf	btemp^0,c
 23510  0184F4  1036               	iorwf	btemp^0,w,c
 23511  0184F6  6E27               	movwf	_timer5ReloadVal^0,c	;volatile
 23512  0184F8  5037               	movf	(btemp+1)^0,w,c
 23513  0184FA  6E28               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23514                           
 23515                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23516  0184FC  0139               	movlb	57	; () banked
 23517  0184FE  9DA8               	bcf	168,6,b	;volatile
 23518                           
 23519                           ; BSR set to: 57
 23520                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23521  018500  8D98               	bsf	152,6,b	;volatile
 23522                           
 23523                           ; BSR set to: 57
 23524                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23525  018502  0E1E               	movlw	low _TMR5_DefaultInterruptHandler
 23526  018504  6EE6               	movwf	postinc1,c
 23527  018506  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23528  018508  6EE6               	movwf	postinc1,c
 23529  01850A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23530  01850C  6EE6               	movwf	postinc1,c
 23531  01850E  EC2B  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23532                           
 23533                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23534  018512  0E31               	movlw	49
 23535  018514  6E9A               	movwf	154,c	;volatile
 23536                           
 23537                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23538  018516  0012               	return		;funcret
 23539  018518                     __end_of_TMR5_Initialize:
 23540                           	opt callstack 0
 23541                           
 23542 ;; *************** function _TMR5_SetInterruptHandler *****************
 23543 ;; Defined at:
 23544 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23547 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23548 ;; Auto vars:     Size  Location     Type
 23549 ;;		None
 23550 ;; Return value:  Size  Location     Type
 23551 ;;                  1  [STACK] void 
 23552 ;; Registers used:
 23553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23554 ;; Tracked objects:
 23555 ;;		On entry : 3F/39
 23556 ;;		On exit  : 0/0
 23557 ;;		Unchanged: 0/0
 23558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23563 ;;Total ram usage:        0 bytes
 23564 ;; Hardware stack levels used:    1
 23565 ;; Hardware stack levels required when called:    6
 23566 ;; This function calls:
 23567 ;;		Nothing
 23568 ;; This function is called by:
 23569 ;;		_TMR5_Initialize
 23570 ;; This function uses a reentrant model
 23571 ;;
 23572                           
 23573                           	psect	text98
 23574  018A56                     __ptext98:
 23575                           	opt callstack 0
 23576  018A56                     _TMR5_SetInterruptHandler:
 23577                           	opt callstack 22
 23578                           
 23579                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23580                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23581                           
 23582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23583                           ;incstack = 0
 23584  018A56  50E1               	movf	fsr1l,w,c
 23585  018A58  0FFD               	addlw	-3
 23586  018A5A  6ED9               	movwf	fsr2l,c
 23587  018A5C  50E2               	movf	fsr1h,w,c
 23588  018A5E  6EDA               	movwf	fsr2h,c
 23589  018A60  0EFF               	movlw	255
 23590  018A62  22DA               	addwfc	fsr2h,f,c
 23591  018A64  006F FF78  F001    	movff	postinc2,_TMR5_InterruptHandler
 23592  018A6A  006F FF78  F002    	movff	postinc2,_TMR5_InterruptHandler+1
 23593  018A70  006F FF74  F003    	movff	postdec2,_TMR5_InterruptHandler+2
 23594                           
 23595                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23596  018A76  52E5               	movf	postdec1,f,c
 23597  018A78  52E5               	movf	postdec1,f,c
 23598  018A7A  52E5               	movf	postdec1,f,c
 23599  018A7C  0012               	return		;funcret
 23600  018A7E                     __end_of_TMR5_SetInterruptHandler:
 23601                           	opt callstack 0
 23602                           
 23603 ;; *************** function _TMR2_Initialize *****************
 23604 ;; Defined at:
 23605 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23606 ;; Parameters:    Size  Location     Type
 23607 ;;		None
 23608 ;; Auto vars:     Size  Location     Type
 23609 ;;		None
 23610 ;; Return value:  Size  Location     Type
 23611 ;;                  1  [STACK] void 
 23612 ;; Registers used:
 23613 ;;		wreg, status,2
 23614 ;; Tracked objects:
 23615 ;;		On entry : 3F/3F
 23616 ;;		On exit  : 3F/39
 23617 ;;		Unchanged: 0/0
 23618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23623 ;;Total ram usage:        0 bytes
 23624 ;; Hardware stack levels used:    1
 23625 ;; Hardware stack levels required when called:    6
 23626 ;; This function calls:
 23627 ;;		Nothing
 23628 ;; This function is called by:
 23629 ;;		_SYSTEM_Initialize
 23630 ;; This function uses a reentrant model
 23631 ;;
 23632                           
 23633                           	psect	text99
 23634  018DAE                     __ptext99:
 23635                           	opt callstack 0
 23636  018DAE                     _TMR2_Initialize:
 23637                           	opt callstack 23
 23638                           
 23639                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23640                           
 23641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23642                           ;incstack = 0
 23643  018DAE  0E01               	movlw	1
 23644  018DB0  6EAE               	movwf	174,c	;volatile
 23645                           
 23646                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23647  018DB2  6AAD               	clrf	173,c	;volatile
 23648                           
 23649                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23650  018DB4  6AAF               	clrf	175,c	;volatile
 23651                           
 23652                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23653  018DB6  0E63               	movlw	99
 23654  018DB8  6EAB               	movwf	171,c	;volatile
 23655                           
 23656                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23657  018DBA  6AAA               	clrf	170,c	;volatile
 23658                           
 23659                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23660  018DBC  0139               	movlb	57	; () banked
 23661  018DBE  95A4               	bcf	164,2,b	;volatile
 23662                           
 23663                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23664  018DC0  0EC0               	movlw	192
 23665  018DC2  6EAC               	movwf	172,c	;volatile
 23666                           
 23667                           ; BSR set to: 57
 23668                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23669  018DC4  0012               	return		;funcret
 23670  018DC6                     __end_of_TMR2_Initialize:
 23671                           	opt callstack 0
 23672                           
 23673 ;; *************** function _SPI1_Initialize *****************
 23674 ;; Defined at:
 23675 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;		None
 23678 ;; Auto vars:     Size  Location     Type
 23679 ;;		None
 23680 ;; Return value:  Size  Location     Type
 23681 ;;                  1  [STACK] void 
 23682 ;; Registers used:
 23683 ;;		wreg, status,2
 23684 ;; Tracked objects:
 23685 ;;		On entry : 3F/39
 23686 ;;		On exit  : 3F/3D
 23687 ;;		Unchanged: 0/0
 23688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23693 ;;Total ram usage:        0 bytes
 23694 ;; Hardware stack levels used:    1
 23695 ;; Hardware stack levels required when called:    6
 23696 ;; This function calls:
 23697 ;;		Nothing
 23698 ;; This function is called by:
 23699 ;;		_SYSTEM_Initialize
 23700 ;; This function uses a reentrant model
 23701 ;;
 23702                           
 23703                           	psect	text100
 23704  018DC6                     __ptext100:
 23705                           	opt callstack 0
 23706  018DC6                     _SPI1_Initialize:
 23707                           	opt callstack 23
 23708                           
 23709                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23710                           
 23711                           ; BSR set to: 57
 23712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23713                           ;incstack = 0
 23714  018DC6  0E40               	movlw	64
 23715  018DC8  013D               	movlb	61	; () banked
 23716  018DCA  6F15               	movwf	21,b	;volatile
 23717                           
 23718                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23719  018DCC  0E03               	movlw	3
 23720  018DCE  6F16               	movwf	22,b	;volatile
 23721                           
 23722                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23723  018DD0  0E4F               	movlw	79
 23724  018DD2  6F19               	movwf	25,b	;volatile
 23725                           
 23726                           ; BSR set to: 61
 23727                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23728  018DD4  6B1C               	clrf	28,b	;volatile
 23729                           
 23730                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23731  018DD6  0E83               	movlw	131
 23732  018DD8  6F14               	movwf	20,b	;volatile
 23733                           
 23734                           ; BSR set to: 61
 23735                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23736  018DDA  0012               	return		;funcret
 23737  018DDC                     __end_of_SPI1_Initialize:
 23738                           	opt callstack 0
 23739                           
 23740 ;; *************** function _PWM8_Initialize *****************
 23741 ;; Defined at:
 23742 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23743 ;; Parameters:    Size  Location     Type
 23744 ;;		None
 23745 ;; Auto vars:     Size  Location     Type
 23746 ;;		None
 23747 ;; Return value:  Size  Location     Type
 23748 ;;                  1  [STACK] void 
 23749 ;; Registers used:
 23750 ;;		wreg, status,2
 23751 ;; Tracked objects:
 23752 ;;		On entry : 0/3E
 23753 ;;		On exit  : 3F/3F
 23754 ;;		Unchanged: 0/0
 23755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23760 ;;Total ram usage:        0 bytes
 23761 ;; Hardware stack levels used:    1
 23762 ;; Hardware stack levels required when called:    6
 23763 ;; This function calls:
 23764 ;;		Nothing
 23765 ;; This function is called by:
 23766 ;;		_SYSTEM_Initialize
 23767 ;; This function uses a reentrant model
 23768 ;;
 23769                           
 23770                           	psect	text101
 23771  018DDC                     __ptext101:
 23772                           	opt callstack 0
 23773  018DDC                     _PWM8_Initialize:
 23774                           	opt callstack 23
 23775                           
 23776                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23777                           
 23778                           ; BSR set to: 61
 23779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23780                           ;incstack = 0
 23781  018DDC  0E80               	movlw	128
 23782  018DDE  6E62               	movwf	98,c	;volatile
 23783                           
 23784                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23785  018DE0  6A61               	clrf	97,c	;volatile
 23786                           
 23787                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23788  018DE2  0E40               	movlw	64
 23789  018DE4  6E60               	movwf	96,c	;volatile
 23790                           
 23791                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23792  018DE6  013F               	movlb	63	; () banked
 23793  018DE8  515F               	movf	95,w,b	;volatile
 23794  018DEA  0B3F               	andlw	-193
 23795  018DEC  0940               	iorlw	64
 23796  018DEE  6F5F               	movwf	95,b	;volatile
 23797                           
 23798                           ; BSR set to: 63
 23799                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23800  018DF0  0012               	return		;funcret
 23801  018DF2                     __end_of_PWM8_Initialize:
 23802                           	opt callstack 0
 23803                           
 23804 ;; *************** function _PMD_Initialize *****************
 23805 ;; Defined at:
 23806 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23807 ;; Parameters:    Size  Location     Type
 23808 ;;		None
 23809 ;; Auto vars:     Size  Location     Type
 23810 ;;		None
 23811 ;; Return value:  Size  Location     Type
 23812 ;;                  1  [STACK] void 
 23813 ;; Registers used:
 23814 ;;		None
 23815 ;; Tracked objects:
 23816 ;;		On entry : 3F/39
 23817 ;;		On exit  : 3F/39
 23818 ;;		Unchanged: 0/0
 23819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23824 ;;Total ram usage:        0 bytes
 23825 ;; Hardware stack levels used:    1
 23826 ;; Hardware stack levels required when called:    6
 23827 ;; This function calls:
 23828 ;;		Nothing
 23829 ;; This function is called by:
 23830 ;;		_SYSTEM_Initialize
 23831 ;; This function uses a reentrant model
 23832 ;;
 23833                           
 23834                           	psect	text102
 23835  018E08                     __ptext102:
 23836                           	opt callstack 0
 23837  018E08                     _PMD_Initialize:
 23838                           	opt callstack 23
 23839                           
 23840                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23841                           
 23842                           ; BSR set to: 63
 23843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23844                           ;incstack = 0
 23845  018E08  0139               	movlb	57	; () banked
 23846  018E0A  6BC0               	clrf	192,b	;volatile
 23847                           
 23848                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23849  018E0C  6BC1               	clrf	193,b	;volatile
 23850                           
 23851                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23852  018E0E  6BC2               	clrf	194,b	;volatile
 23853                           
 23854                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23855  018E10  6BC3               	clrf	195,b	;volatile
 23856                           
 23857                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23858  018E12  6BC4               	clrf	196,b	;volatile
 23859                           
 23860                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23861  018E14  6BC5               	clrf	197,b	;volatile
 23862                           
 23863                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23864  018E16  6BC6               	clrf	198,b	;volatile
 23865                           
 23866                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23867  018E18  6BC7               	clrf	199,b	;volatile
 23868                           
 23869                           ; BSR set to: 57
 23870                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23871  018E1A  0012               	return		;funcret
 23872  018E1C                     __end_of_PMD_Initialize:
 23873                           	opt callstack 0
 23874                           
 23875 ;; *************** function _PIN_MANAGER_Initialize *****************
 23876 ;; Defined at:
 23877 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23878 ;; Parameters:    Size  Location     Type
 23879 ;;		None
 23880 ;; Auto vars:     Size  Location     Type
 23881 ;;		None
 23882 ;; Return value:  Size  Location     Type
 23883 ;;                  1  [STACK] void 
 23884 ;; Registers used:
 23885 ;;		wreg, status,2
 23886 ;; Tracked objects:
 23887 ;;		On entry : 3F/39
 23888 ;;		On exit  : 3F/3A
 23889 ;;		Unchanged: 0/0
 23890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;Total ram usage:        0 bytes
 23896 ;; Hardware stack levels used:    1
 23897 ;; Hardware stack levels required when called:    6
 23898 ;; This function calls:
 23899 ;;		Nothing
 23900 ;; This function is called by:
 23901 ;;		_SYSTEM_Initialize
 23902 ;; This function uses a reentrant model
 23903 ;;
 23904                           
 23905                           	psect	text103
 23906  017B60                     __ptext103:
 23907                           	opt callstack 0
 23908  017B60                     _PIN_MANAGER_Initialize:
 23909                           	opt callstack 23
 23910                           
 23911                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23912                           
 23913                           ; BSR set to: 57
 23914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23915                           ;incstack = 0
 23916  017B60  0E07               	movlw	7
 23917  017B62  6EBE               	movwf	190,c	;volatile
 23918                           
 23919                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 23920  017B64  6ABD               	clrf	189,c	;volatile
 23921                           
 23922                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23923  017B66  6ABA               	clrf	186,c	;volatile
 23924                           
 23925                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23926  017B68  6ABF               	clrf	191,c	;volatile
 23927                           
 23928                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23929  017B6A  6ABB               	clrf	187,c	;volatile
 23930                           
 23931                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23932  017B6C  0E07               	movlw	7
 23933  017B6E  6EBC               	movwf	188,c	;volatile
 23934                           
 23935                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23936  017B70  6AC6               	clrf	198,c	;volatile
 23937                           
 23938                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23939  017B72  0E0F               	movlw	15
 23940  017B74  6EC7               	movwf	199,c	;volatile
 23941                           
 23942                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23943  017B76  68C2               	setf	194,c	;volatile
 23944                           
 23945                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23946  017B78  0EBF               	movlw	191
 23947  017B7A  6EC3               	movwf	195,c	;volatile
 23948                           
 23949                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23950  017B7C  0E90               	movlw	144
 23951  017B7E  6EC4               	movwf	196,c	;volatile
 23952                           
 23953                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23954  017B80  0E0C               	movlw	12
 23955  017B82  6EC5               	movwf	197,c	;volatile
 23956                           
 23957                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23958  017B84  013A               	movlb	58	; () banked
 23959  017B86  6B70               	clrf	112,b	;volatile
 23960                           
 23961                           ; BSR set to: 58
 23962                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23963  017B88  6B60               	clrf	96,b	;volatile
 23964                           
 23965                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23966  017B8A  0E3C               	movlw	60
 23967  017B8C  6F50               	movwf	80,b	;volatile
 23968                           
 23969                           ; BSR set to: 58
 23970                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23971  017B8E  6B80               	clrf	128,b	;volatile
 23972                           
 23973                           ; BSR set to: 58
 23974                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23975  017B90  6B90               	clrf	144,b	;volatile
 23976                           
 23977                           ; BSR set to: 58
 23978                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23979  017B92  6940               	setf	64,b	;volatile
 23980                           
 23981                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23982  017B94  0E0C               	movlw	12
 23983  017B96  6F71               	movwf	113,b	;volatile
 23984                           
 23985                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23986  017B98  0E0F               	movlw	15
 23987  017B9A  6F91               	movwf	145,b	;volatile
 23988                           
 23989                           ; BSR set to: 58
 23990                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23991  017B9C  6B81               	clrf	129,b	;volatile
 23992                           
 23993                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 23994  017B9E  0E87               	movlw	135
 23995  017BA0  6F51               	movwf	81,b	;volatile
 23996                           
 23997                           ; BSR set to: 58
 23998                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23999  017BA2  6B41               	clrf	65,b	;volatile
 24000                           
 24001                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24002  017BA4  0E97               	movlw	151
 24003  017BA6  6F61               	movwf	97,b	;volatile
 24004                           
 24005                           ; BSR set to: 58
 24006                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24007  017BA8  6B82               	clrf	130,b	;volatile
 24008                           
 24009                           ; BSR set to: 58
 24010                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24011  017BAA  6B92               	clrf	146,b	;volatile
 24012                           
 24013                           ; BSR set to: 58
 24014                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24015  017BAC  6B42               	clrf	66,b	;volatile
 24016                           
 24017                           ; BSR set to: 58
 24018                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24019  017BAE  6B52               	clrf	82,b	;volatile
 24020                           
 24021                           ; BSR set to: 58
 24022                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24023  017BB0  6B62               	clrf	98,b	;volatile
 24024                           
 24025                           ; BSR set to: 58
 24026                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24027  017BB2  6B72               	clrf	114,b	;volatile
 24028                           
 24029                           ; BSR set to: 58
 24030                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24031  017BB4  6943               	setf	67,b	;volatile
 24032                           
 24033                           ; BSR set to: 58
 24034                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24035  017BB6  6953               	setf	83,b	;volatile
 24036                           
 24037                           ; BSR set to: 58
 24038                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24039  017BB8  6963               	setf	99,b	;volatile
 24040                           
 24041                           ; BSR set to: 58
 24042                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24043  017BBA  6973               	setf	115,b	;volatile
 24044                           
 24045                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24046  017BBC  0E07               	movlw	7
 24047  017BBE  6F83               	movwf	131,b	;volatile
 24048                           
 24049                           ; BSR set to: 58
 24050                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24051  017BC0  6993               	setf	147,b	;volatile
 24052                           
 24053                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24054  017BC2  0E0F               	movlw	15
 24055  017BC4  6FE8               	movwf	232,b	;volatile
 24056                           
 24057                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24058  017BC6  0E13               	movlw	19
 24059  017BC8  6FDE               	movwf	222,b	;volatile
 24060                           
 24061                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24062  017BCA  0E16               	movlw	22
 24063  017BCC  6F0E               	movwf	14,b	;volatile
 24064                           
 24065                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24066  017BCE  0E1E               	movlw	30
 24067  017BD0  6F13               	movwf	19,b	;volatile
 24068                           
 24069                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24070  017BD2  0E08               	movlw	8
 24071  017BD4  6FC0               	movwf	192,b	;volatile
 24072                           
 24073                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24074  017BD6  0E10               	movlw	16
 24075  017BD8  6F19               	movwf	25,b	;volatile
 24076                           
 24077                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24078  017BDA  0E09               	movlw	9
 24079  017BDC  6FC1               	movwf	193,b	;volatile
 24080                           
 24081                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24082  017BDE  0E1F               	movlw	31
 24083  017BE0  6F15               	movwf	21,b	;volatile
 24084                           
 24085                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24086  017BE2  0E13               	movlw	19
 24087  017BE4  6F16               	movwf	22,b	;volatile
 24088                           
 24089                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24090  017BE6  0E17               	movlw	23
 24091  017BE8  6FE5               	movwf	229,b	;volatile
 24092                           
 24093                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24094  017BEA  0E14               	movlw	20
 24095  017BEC  6FDF               	movwf	223,b	;volatile
 24096                           
 24097                           ; BSR set to: 58
 24098                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24099  017BEE  0012               	return		;funcret
 24100  017BF0                     __end_of_PIN_MANAGER_Initialize:
 24101                           	opt callstack 0
 24102                           
 24103 ;; *************** function _OSCILLATOR_Initialize *****************
 24104 ;; Defined at:
 24105 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24106 ;; Parameters:    Size  Location     Type
 24107 ;;		None
 24108 ;; Auto vars:     Size  Location     Type
 24109 ;;		None
 24110 ;; Return value:  Size  Location     Type
 24111 ;;                  1  [STACK] void 
 24112 ;; Registers used:
 24113 ;;		wreg, status,2
 24114 ;; Tracked objects:
 24115 ;;		On entry : 3F/3A
 24116 ;;		On exit  : 3F/39
 24117 ;;		Unchanged: 0/0
 24118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24123 ;;Total ram usage:        0 bytes
 24124 ;; Hardware stack levels used:    1
 24125 ;; Hardware stack levels required when called:    6
 24126 ;; This function calls:
 24127 ;;		Nothing
 24128 ;; This function is called by:
 24129 ;;		_SYSTEM_Initialize
 24130 ;; This function uses a reentrant model
 24131 ;;
 24132                           
 24133                           	psect	text104
 24134  018DF2                     __ptext104:
 24135                           	opt callstack 0
 24136  018DF2                     _OSCILLATOR_Initialize:
 24137                           	opt callstack 23
 24138                           
 24139                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24140                           
 24141                           ; BSR set to: 58
 24142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24143                           ;incstack = 0
 24144  018DF2  0E20               	movlw	32
 24145  018DF4  0139               	movlb	57	; () banked
 24146  018DF6  6FD9               	movwf	217,b	;volatile
 24147                           
 24148                           ; BSR set to: 57
 24149                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24150  018DF8  6BDB               	clrf	219,b	;volatile
 24151                           
 24152                           ; BSR set to: 57
 24153                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24154  018DFA  6BDD               	clrf	221,b	;volatile
 24155                           
 24156                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24157  018DFC  0E02               	movlw	2
 24158  018DFE  6FDF               	movwf	223,b	;volatile
 24159                           
 24160                           ; BSR set to: 57
 24161                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24162  018E00  6BDE               	clrf	222,b	;volatile
 24163  018E02                     l171:
 24164                           
 24165                           ; BSR set to: 57
 24166                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24167  018E02  B1DC               	btfsc	220,0,b	;volatile
 24168  018E04  0012               	return	
 24169  018E06  D7FD               	goto	l171
 24170  018E08                     __end_of_OSCILLATOR_Initialize:
 24171                           	opt callstack 0
 24172                           
 24173 ;; *************** function _INTERRUPT_Initialize *****************
 24174 ;; Defined at:
 24175 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24176 ;; Parameters:    Size  Location     Type
 24177 ;;		None
 24178 ;; Auto vars:     Size  Location     Type
 24179 ;;  state           1  [STACK] _Bool 
 24180 ;; Return value:  Size  Location     Type
 24181 ;;                  1  [STACK] void 
 24182 ;; Registers used:
 24183 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24184 ;; Tracked objects:
 24185 ;;		On entry : 0/0
 24186 ;;		On exit  : 3F/39
 24187 ;;		Unchanged: 0/0
 24188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24193 ;;Total ram usage:        0 bytes
 24194 ;; Hardware stack levels used:    1
 24195 ;; Hardware stack levels required when called:    6
 24196 ;; This function calls:
 24197 ;;		Nothing
 24198 ;; This function is called by:
 24199 ;;		_SYSTEM_Initialize
 24200 ;; This function uses a reentrant model
 24201 ;;
 24202                           
 24203                           	psect	text105
 24204  017FB4                     __ptext105:
 24205                           	opt callstack 0
 24206  017FB4                     _INTERRUPT_Initialize:
 24207                           	opt callstack 0
 24208                           
 24209                           ; BSR set to: 57
 24210                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24211  017FB4  52E6               	movf	postinc1,f,c
 24212                           
 24213                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24214                           
 24215                           ;incstack = 0
 24216  017FB6  8AD2               	bsf	210,5,c	;volatile
 24217                           
 24218                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24219  017FB8  AED2               	btfss	16338,7,c	;volatile
 24220  017FBA  D003               	goto	u8340
 24221  017FBC  6A41               	clrf	(btemp+11)^0,c
 24222  017FBE  2A41               	incf	(btemp+11)^0,f,c
 24223  017FC0  D001               	goto	u8358
 24224  017FC2                     u8340:
 24225  017FC2  6A41               	clrf	(btemp+11)^0,c
 24226  017FC4                     u8358:
 24227                           
 24228                           ;stkvar	_state @ sp[(-1)+0]
 24229  017FC4  0EFF               	movlw	-1
 24230  017FC6  0060  F107  FFE3   	movff	btemp+11,plusw1
 24231                           
 24232                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24233  017FCC  9ED2               	bcf	16338,7,c	;volatile
 24234                           
 24235                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24236  017FCE  0E55               	movlw	85
 24237  017FD0  6ED4               	movwf	212,c	;volatile
 24238                           
 24239                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24240  017FD2  0EAA               	movlw	170
 24241  017FD4  6ED4               	movwf	212,c	;volatile
 24242                           
 24243                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24244  017FD6  90D4               	bcf	212,0,c	;volatile
 24245                           
 24246                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24247  017FD8  0138               	movlb	56	; () banked
 24248  017FDA  6B9F               	clrf	159,b	;volatile
 24249                           
 24250                           ; BSR set to: 56
 24251                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24252  017FDC  6B9E               	clrf	158,b	;volatile
 24253                           
 24254                           ; BSR set to: 56
 24255                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24256  017FDE  0E08               	movlw	8
 24257  017FE0  6F9D               	movwf	157,b	;volatile
 24258                           
 24259                           ; BSR set to: 56
 24260                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24261  017FE2  0E55               	movlw	85
 24262  017FE4  6ED4               	movwf	212,c	;volatile
 24263                           
 24264                           ; BSR set to: 56
 24265                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24266  017FE6  0EAA               	movlw	170
 24267  017FE8  6ED4               	movwf	212,c	;volatile
 24268                           
 24269                           ; BSR set to: 56
 24270                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24271  017FEA  80D4               	bsf	212,0,c	;volatile
 24272                           
 24273                           ; BSR set to: 56
 24274                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24275                           ;stkvar	_state @ sp[(-1)+0]
 24276  017FEC  0EFF               	movlw	-1
 24277  017FEE  B0E3               	btfsc	plusw1,0,c
 24278  017FF0  D002               	bra	u8365
 24279  017FF2  9ED2               	bcf	16338,7,c	;volatile
 24280  017FF4  D001               	bra	u8366
 24281  017FF6                     u8365:
 24282  017FF6  8ED2               	bsf	16338,7,c	;volatile
 24283  017FF8                     u8366:
 24284                           
 24285                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24286  017FF8  0139               	movlb	57	; () banked
 24287  017FFA  8782               	bsf	130,3,b	;volatile
 24288                           
 24289                           ; BSR set to: 57
 24290                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24291  017FFC  8382               	bsf	130,1,b	;volatile
 24292                           
 24293                           ; BSR set to: 57
 24294                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24295  017FFE  8182               	bsf	130,0,b	;volatile
 24296                           
 24297                           ; BSR set to: 57
 24298                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24299  018000  8582               	bsf	130,2,b	;volatile
 24300                           
 24301                           ; BSR set to: 57
 24302                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24303  018002  8786               	bsf	134,3,b	;volatile
 24304                           
 24305                           ; BSR set to: 57
 24306                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24307  018004  8586               	bsf	134,2,b	;volatile
 24308                           
 24309                           ; BSR set to: 57
 24310                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24311  018006  8983               	bsf	131,4,b	;volatile
 24312                           
 24313                           ; BSR set to: 57
 24314                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24315  018008  8783               	bsf	131,3,b	;volatile
 24316                           
 24317                           ; BSR set to: 57
 24318                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24319  01800A  8181               	bsf	129,0,b	;volatile
 24320                           
 24321                           ; BSR set to: 57
 24322                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 24323  01800C  8185               	bsf	133,0,b	;volatile
 24324                           
 24325                           ; BSR set to: 57
 24326                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24327  01800E  8189               	bsf	137,0,b	;volatile
 24328                           
 24329                           ; BSR set to: 57
 24330                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24331  018010  9D88               	bcf	136,6,b	;volatile
 24332                           
 24333                           ; BSR set to: 57
 24334                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24335  018012  8581               	bsf	129,2,b	;volatile
 24336                           
 24337                           ; BSR set to: 57
 24338                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24339  018014  8781               	bsf	129,3,b	;volatile
 24340                           
 24341                           ; BSR set to: 57
 24342                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24343  018016  52E5               	movf	postdec1,f,c
 24344  018018  0012               	return		;funcret
 24345  01801A                     __end_of_INTERRUPT_Initialize:
 24346                           	opt callstack 0
 24347                           
 24348 ;; *************** function _FVR_Initialize *****************
 24349 ;; Defined at:
 24350 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24351 ;; Parameters:    Size  Location     Type
 24352 ;;		None
 24353 ;; Auto vars:     Size  Location     Type
 24354 ;;		None
 24355 ;; Return value:  Size  Location     Type
 24356 ;;                  1  [STACK] void 
 24357 ;; Registers used:
 24358 ;;		wreg, status,2
 24359 ;; Tracked objects:
 24360 ;;		On entry : 3F/39
 24361 ;;		On exit  : 3F/3E
 24362 ;;		Unchanged: 0/0
 24363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24368 ;;Total ram usage:        0 bytes
 24369 ;; Hardware stack levels used:    1
 24370 ;; Hardware stack levels required when called:    6
 24371 ;; This function calls:
 24372 ;;		Nothing
 24373 ;; This function is called by:
 24374 ;;		_SYSTEM_Initialize
 24375 ;; This function uses a reentrant model
 24376 ;;
 24377                           
 24378                           	psect	text106
 24379  018EE6                     __ptext106:
 24380                           	opt callstack 0
 24381  018EE6                     _FVR_Initialize:
 24382                           	opt callstack 23
 24383                           
 24384                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24385                           
 24386                           ; BSR set to: 57
 24387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24388                           ;incstack = 0
 24389  018EE6  0EAF               	movlw	175
 24390  018EE8  013E               	movlb	62	; () banked
 24391  018EEA  6FC1               	movwf	193,b	;volatile
 24392                           
 24393                           ; BSR set to: 62
 24394                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24395  018EEC  0012               	return		;funcret
 24396  018EEE                     __end_of_FVR_Initialize:
 24397                           	opt callstack 0
 24398                           
 24399 ;; *************** function _EXT_INT_Initialize *****************
 24400 ;; Defined at:
 24401 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 24402 ;; Parameters:    Size  Location     Type
 24403 ;;		None
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;		None
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  1  [STACK] void 
 24408 ;; Registers used:
 24409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24410 ;; Tracked objects:
 24411 ;;		On entry : 3F/39
 24412 ;;		On exit  : 3F/39
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24419 ;;Total ram usage:        0 bytes
 24420 ;; Hardware stack levels used:    1
 24421 ;; Hardware stack levels required when called:    7
 24422 ;; This function calls:
 24423 ;;		_INT0_SetInterruptHandler
 24424 ;;		_INT1_SetInterruptHandler
 24425 ;; This function is called by:
 24426 ;;		_SYSTEM_Initialize
 24427 ;; This function uses a reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text107
 24431  018778                     __ptext107:
 24432                           	opt callstack 0
 24433  018778                     _EXT_INT_Initialize:
 24434                           	opt callstack 22
 24435                           
 24436                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 24437                           
 24438                           ; BSR set to: 62
 24439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24440                           ;incstack = 0
 24441  018778  0139               	movlb	57	; () banked
 24442  01877A  91A1               	bcf	161,0,b	;volatile
 24443                           
 24444                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 24445  01877C  90D2               	bcf	210,0,c	;volatile
 24446                           
 24447                           ; BSR set to: 57
 24448                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24449  01877E  0E0A               	movlw	low _INT0_DefaultInterruptHandler
 24450  018780  6EE6               	movwf	postinc1,c
 24451  018782  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24452  018784  6EE6               	movwf	postinc1,c
 24453  018786  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24454  018788  6EE6               	movwf	postinc1,c
 24455  01878A  EC53  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24456                           
 24457                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 24458  01878E  0139               	movlb	57	; () banked
 24459  018790  8191               	bsf	145,0,b	;volatile
 24460                           
 24461                           ; BSR set to: 57
 24462                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 24463  018792  91A5               	bcf	165,0,b	;volatile
 24464                           
 24465                           ; BSR set to: 57
 24466                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 24467  018794  92D2               	bcf	210,1,c	;volatile
 24468                           
 24469                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24470  018796  0E0C               	movlw	low _INT1_DefaultInterruptHandler
 24471  018798  6EE6               	movwf	postinc1,c
 24472  01879A  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24473  01879C  6EE6               	movwf	postinc1,c
 24474  01879E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24475  0187A0  6EE6               	movwf	postinc1,c
 24476  0187A2  EC3F  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24477                           
 24478                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 24479  0187A6  0139               	movlb	57	; () banked
 24480  0187A8  8195               	bsf	149,0,b	;volatile
 24481                           
 24482                           ; BSR set to: 57
 24483                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24484  0187AA  0012               	return		;funcret
 24485  0187AC                     __end_of_EXT_INT_Initialize:
 24486                           	opt callstack 0
 24487                           
 24488 ;; *************** function _INT1_SetInterruptHandler *****************
 24489 ;; Defined at:
 24490 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 24491 ;; Parameters:    Size  Location     Type
 24492 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24493 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 24494 ;; Auto vars:     Size  Location     Type
 24495 ;;		None
 24496 ;; Return value:  Size  Location     Type
 24497 ;;                  1  [STACK] void 
 24498 ;; Registers used:
 24499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24500 ;; Tracked objects:
 24501 ;;		On entry : 0/0
 24502 ;;		On exit  : 0/0
 24503 ;;		Unchanged: 0/0
 24504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;Total ram usage:        0 bytes
 24510 ;; Hardware stack levels used:    1
 24511 ;; Hardware stack levels required when called:    6
 24512 ;; This function calls:
 24513 ;;		Nothing
 24514 ;; This function is called by:
 24515 ;;		_EXT_INT_Initialize
 24516 ;;		_start_switch_handler
 24517 ;; This function uses a reentrant model
 24518 ;;
 24519                           
 24520                           	psect	text108
 24521  018A7E                     __ptext108:
 24522                           	opt callstack 0
 24523  018A7E                     _INT1_SetInterruptHandler:
 24524                           	opt callstack 23
 24525                           
 24526                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24527                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24528                           
 24529                           ; BSR set to: 57
 24530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24531                           ;incstack = 0
 24532  018A7E  50E1               	movf	fsr1l,w,c
 24533  018A80  0FFD               	addlw	-3
 24534  018A82  6ED9               	movwf	fsr2l,c
 24535  018A84  50E2               	movf	fsr1h,w,c
 24536  018A86  6EDA               	movwf	fsr2h,c
 24537  018A88  0EFF               	movlw	255
 24538  018A8A  22DA               	addwfc	fsr2h,f,c
 24539  018A8C  006F FF78  F019    	movff	postinc2,_INT1_InterruptHandler
 24540  018A92  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler+1
 24541  018A98  006F FF74  F01B    	movff	postdec2,_INT1_InterruptHandler+2
 24542                           
 24543                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24544  018A9E  52E5               	movf	postdec1,f,c
 24545  018AA0  52E5               	movf	postdec1,f,c
 24546  018AA2  52E5               	movf	postdec1,f,c
 24547  018AA4  0012               	return		;funcret
 24548  018AA6                     __end_of_INT1_SetInterruptHandler:
 24549                           	opt callstack 0
 24550                           
 24551 ;; *************** function _INT0_SetInterruptHandler *****************
 24552 ;; Defined at:
 24553 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24556 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24557 ;; Auto vars:     Size  Location     Type
 24558 ;;		None
 24559 ;; Return value:  Size  Location     Type
 24560 ;;                  1  [STACK] void 
 24561 ;; Registers used:
 24562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24563 ;; Tracked objects:
 24564 ;;		On entry : 3F/39
 24565 ;;		On exit  : 0/0
 24566 ;;		Unchanged: 0/0
 24567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24572 ;;Total ram usage:        0 bytes
 24573 ;; Hardware stack levels used:    1
 24574 ;; Hardware stack levels required when called:    6
 24575 ;; This function calls:
 24576 ;;		Nothing
 24577 ;; This function is called by:
 24578 ;;		_EXT_INT_Initialize
 24579 ;; This function uses a reentrant model
 24580 ;;
 24581                           
 24582                           	psect	text109
 24583  018AA6                     __ptext109:
 24584                           	opt callstack 0
 24585  018AA6                     _INT0_SetInterruptHandler:
 24586                           	opt callstack 22
 24587                           
 24588                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24589                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24590                           
 24591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24592                           ;incstack = 0
 24593  018AA6  50E1               	movf	fsr1l,w,c
 24594  018AA8  0FFD               	addlw	-3
 24595  018AAA  6ED9               	movwf	fsr2l,c
 24596  018AAC  50E2               	movf	fsr1h,w,c
 24597  018AAE  6EDA               	movwf	fsr2h,c
 24598  018AB0  0EFF               	movlw	255
 24599  018AB2  22DA               	addwfc	fsr2h,f,c
 24600  018AB4  006F FF78  F01C    	movff	postinc2,_INT0_InterruptHandler
 24601  018ABA  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler+1
 24602  018AC0  006F FF74  F01E    	movff	postdec2,_INT0_InterruptHandler+2
 24603                           
 24604                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24605  018AC6  52E5               	movf	postdec1,f,c
 24606  018AC8  52E5               	movf	postdec1,f,c
 24607  018ACA  52E5               	movf	postdec1,f,c
 24608  018ACC  0012               	return		;funcret
 24609  018ACE                     __end_of_INT0_SetInterruptHandler:
 24610                           	opt callstack 0
 24611                           
 24612 ;; *************** function _DMA2_Initialize *****************
 24613 ;; Defined at:
 24614 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;		None
 24617 ;; Auto vars:     Size  Location     Type
 24618 ;;		None
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  1  [STACK] void 
 24621 ;; Registers used:
 24622 ;;		wreg, status,2
 24623 ;; Tracked objects:
 24624 ;;		On entry : 3F/3D
 24625 ;;		On exit  : 3F/3B
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24632 ;;Total ram usage:        0 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; Hardware stack levels required when called:    6
 24635 ;; This function calls:
 24636 ;;		Nothing
 24637 ;; This function is called by:
 24638 ;;		_SYSTEM_Initialize
 24639 ;; This function uses a reentrant model
 24640 ;;
 24641                           
 24642                           	psect	text110
 24643  0182BA                     __ptext110:
 24644                           	opt callstack 0
 24645  0182BA                     _DMA2_Initialize:
 24646                           	opt callstack 23
 24647                           
 24648                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24649                           
 24650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24651                           ;incstack = 0
 24652  0182BA  0E00               	movlw	0
 24653  0182BC  013B               	movlb	59	; () banked
 24654  0182BE  6FD9               	movwf	217,b	;volatile
 24655  0182C0  0E10               	movlw	16
 24656  0182C2  6FDA               	movwf	218,b	;volatile
 24657  0182C4  0E00               	movlw	0
 24658  0182C6  6FDB               	movwf	219,b	;volatile
 24659                           
 24660                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24661  0182C8  0E3F               	movlw	63
 24662  0182CA  6FD1               	movwf	209,b	;volatile
 24663  0182CC  0EBB               	movlw	187
 24664  0182CE  6FD0               	movwf	208,b	;volatile
 24665                           
 24666                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24667  0182D0  0E03               	movlw	3
 24668  0182D2  6FDD               	movwf	221,b	;volatile
 24669                           
 24670                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24671  0182D4  0E00               	movlw	0
 24672  0182D6  6FD8               	movwf	216,b	;volatile
 24673  0182D8  0E01               	movlw	1
 24674  0182DA  6FD7               	movwf	215,b	;volatile
 24675                           
 24676                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24677  0182DC  0E00               	movlw	0
 24678  0182DE  6FCF               	movwf	207,b	;volatile
 24679  0182E0  0E01               	movlw	1
 24680  0182E2  6FCE               	movwf	206,b	;volatile
 24681                           
 24682                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24683  0182E4  0E46               	movlw	70
 24684  0182E6  6FDF               	movwf	223,b	;volatile
 24685                           
 24686                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24687  0182E8  0E3D               	movlw	61
 24688  0182EA  6FDE               	movwf	222,b	;volatile
 24689                           
 24690                           ; BSR set to: 59
 24691                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24692  0182EC  0139               	movlb	57	; () banked
 24693  0182EE  97A5               	bcf	165,3,b	;volatile
 24694                           
 24695                           ; BSR set to: 57
 24696                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24697  0182F0  95A5               	bcf	165,2,b	;volatile
 24698                           
 24699                           ; BSR set to: 57
 24700                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24701  0182F2  9BA5               	bcf	165,5,b	;volatile
 24702                           
 24703                           ; BSR set to: 57
 24704                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24705  0182F4  99A5               	bcf	165,4,b	;volatile
 24706                           
 24707                           ; BSR set to: 57
 24708                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24709  0182F6  9795               	bcf	149,3,b	;volatile
 24710                           
 24711                           ; BSR set to: 57
 24712                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24713  0182F8  9595               	bcf	149,2,b	;volatile
 24714                           
 24715                           ; BSR set to: 57
 24716                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24717  0182FA  9B95               	bcf	149,5,b	;volatile
 24718                           
 24719                           ; BSR set to: 57
 24720                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24721  0182FC  9995               	bcf	149,4,b	;volatile
 24722  0182FE  9ED2               	bcf	16338,7,c	;# 
 24723  018300  0139               	banksel	14831	;# 
 24724  018302  0E55               	movlw	85	;# 
 24725  018304  6FEF               	movwf	14831,b	;# 
 24726  018306  0EAA               	movlw	170	;# 
 24727  018308  6FEF               	movwf	14831,b	;# 
 24728  01830A  81EF               	bsf	14831,0,b	;# 
 24729  01830C  8ED2               	bsf	16338,7,c	;# 
 24730                           
 24731                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24732  01830E  013B               	movlb	59	; () banked
 24733  018310  6BDC               	clrf	220,b	;volatile
 24734                           
 24735                           ; BSR set to: 59
 24736                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24737  018312  0012               	return		;funcret
 24738  018314                     __end_of_DMA2_Initialize:
 24739                           	opt callstack 0
 24740                           
 24741 ;; *************** function _DMA1_Initialize *****************
 24742 ;; Defined at:
 24743 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;		None
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;		None
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1  [STACK] void 
 24750 ;; Registers used:
 24751 ;;		wreg, status,2
 24752 ;; Tracked objects:
 24753 ;;		On entry : 3F/3B
 24754 ;;		On exit  : 3F/3B
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;Total ram usage:        0 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; Hardware stack levels required when called:    6
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_SYSTEM_Initialize
 24768 ;; This function uses a reentrant model
 24769 ;;
 24770                           
 24771                           	psect	text111
 24772  017E78                     __ptext111:
 24773                           	opt callstack 0
 24774  017E78                     _DMA1_Initialize:
 24775                           	opt callstack 23
 24776                           
 24777                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24778                           
 24779                           ; BSR set to: 59
 24780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24781                           ;incstack = 0
 24782  017E78  0E00               	movlw	0
 24783  017E7A  013B               	movlb	59	; () banked
 24784  017E7C  6FF9               	movwf	249,b	;volatile
 24785  017E7E  0E10               	movlw	16
 24786  017E80  6FFA               	movwf	250,b	;volatile
 24787  017E82  0E00               	movlw	0
 24788  017E84  6FFB               	movwf	251,b	;volatile
 24789                           
 24790                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24791  017E86  0E3D               	movlw	61
 24792  017E88  6FF1               	movwf	241,b	;volatile
 24793  017E8A  0E11               	movlw	17
 24794  017E8C  6FF0               	movwf	240,b	;volatile
 24795                           
 24796                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24797  017E8E  0E03               	movlw	3
 24798  017E90  6FFD               	movwf	253,b	;volatile
 24799                           
 24800                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24801  017E92  0E00               	movlw	0
 24802  017E94  6FF8               	movwf	248,b	;volatile
 24803  017E96  0E01               	movlw	1
 24804  017E98  6FF7               	movwf	247,b	;volatile
 24805                           
 24806                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24807  017E9A  0E00               	movlw	0
 24808  017E9C  6FEF               	movwf	239,b	;volatile
 24809  017E9E  0E01               	movlw	1
 24810  017EA0  6FEE               	movwf	238,b	;volatile
 24811                           
 24812                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24813  017EA2  0E15               	movlw	21
 24814  017EA4  6FFF               	movwf	255,b	;volatile
 24815                           
 24816                           ; BSR set to: 59
 24817                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24818  017EA6  6BFE               	clrf	254,b	;volatile
 24819                           
 24820                           ; BSR set to: 59
 24821                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24822  017EA8  0139               	movlb	57	; () banked
 24823  017EAA  93A2               	bcf	162,1,b	;volatile
 24824                           
 24825                           ; BSR set to: 57
 24826                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24827  017EAC  91A2               	bcf	162,0,b	;volatile
 24828                           
 24829                           ; BSR set to: 57
 24830                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24831  017EAE  97A2               	bcf	162,3,b	;volatile
 24832                           
 24833                           ; BSR set to: 57
 24834                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24835  017EB0  95A2               	bcf	162,2,b	;volatile
 24836                           
 24837                           ; BSR set to: 57
 24838                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24839  017EB2  8392               	bsf	146,1,b	;volatile
 24840                           
 24841                           ; BSR set to: 57
 24842                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24843  017EB4  8192               	bsf	146,0,b	;volatile
 24844                           
 24845                           ; BSR set to: 57
 24846                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24847  017EB6  8792               	bsf	146,3,b	;volatile
 24848                           
 24849                           ; BSR set to: 57
 24850                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24851  017EB8  8592               	bsf	146,2,b	;volatile
 24852                           
 24853                           ; BSR set to: 57
 24854                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24855  017EBA  6BF1               	clrf	241,b	;volatile
 24856                           
 24857                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24858  017EBC  0E01               	movlw	1
 24859  017EBE  6FF2               	movwf	242,b	;volatile
 24860                           
 24861                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24862  017EC0  0E04               	movlw	4
 24863  017EC2  6FF3               	movwf	243,b	;volatile
 24864                           
 24865                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24866  017EC4  0E02               	movlw	2
 24867  017EC6  6FF4               	movwf	244,b	;volatile
 24868                           
 24869                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24870  017EC8  0E03               	movlw	3
 24871  017ECA  6FF7               	movwf	247,b	;volatile
 24872  017ECC  9ED2               	bcf	16338,7,c	;# 
 24873  017ECE  0139               	banksel	14831	;# 
 24874  017ED0  0E55               	movlw	85	;# 
 24875  017ED2  6FEF               	movwf	14831,b	;# 
 24876  017ED4  0EAA               	movlw	170	;# 
 24877  017ED6  6FEF               	movwf	14831,b	;# 
 24878  017ED8  81EF               	bsf	14831,0,b	;# 
 24879  017EDA  8ED2               	bsf	16338,7,c	;# 
 24880                           
 24881                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24882  017EDC  013B               	movlb	59	; () banked
 24883  017EDE  6BFC               	clrf	252,b	;volatile
 24884                           
 24885                           ; BSR set to: 59
 24886                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24887  017EE0  0012               	return		;funcret
 24888  017EE2                     __end_of_DMA1_Initialize:
 24889                           	opt callstack 0
 24890                           
 24891 ;; *************** function _CLKREF_Initialize *****************
 24892 ;; Defined at:
 24893 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24894 ;; Parameters:    Size  Location     Type
 24895 ;;		None
 24896 ;; Auto vars:     Size  Location     Type
 24897 ;;		None
 24898 ;; Return value:  Size  Location     Type
 24899 ;;                  1  [STACK] void 
 24900 ;; Registers used:
 24901 ;;		wreg, status,2
 24902 ;; Tracked objects:
 24903 ;;		On entry : 3F/3B
 24904 ;;		On exit  : 3F/3C
 24905 ;;		Unchanged: 0/0
 24906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;Total ram usage:        0 bytes
 24912 ;; Hardware stack levels used:    1
 24913 ;; Hardware stack levels required when called:    6
 24914 ;; This function calls:
 24915 ;;		Nothing
 24916 ;; This function is called by:
 24917 ;;		_SYSTEM_Initialize
 24918 ;; This function uses a reentrant model
 24919 ;;
 24920                           
 24921                           	psect	text112
 24922  018E9A                     __ptext112:
 24923                           	opt callstack 0
 24924  018E9A                     _CLKREF_Initialize:
 24925                           	opt callstack 23
 24926                           
 24927                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24928                           
 24929                           ; BSR set to: 59
 24930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24931                           ;incstack = 0
 24932  018E9A  013C               	movlb	60	; () banked
 24933  018E9C  6BE6               	clrf	230,b	;volatile
 24934                           
 24935                           ; BSR set to: 60
 24936                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24937  018E9E  0E94               	movlw	148
 24938  018EA0  6FE5               	movwf	229,b	;volatile
 24939                           
 24940                           ; BSR set to: 60
 24941                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24942  018EA2  0012               	return		;funcret
 24943  018EA4                     __end_of_CLKREF_Initialize:
 24944                           	opt callstack 0
 24945                           
 24946 ;; *************** function _ADCC_Initialize *****************
 24947 ;; Defined at:
 24948 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24949 ;; Parameters:    Size  Location     Type
 24950 ;;		None
 24951 ;; Auto vars:     Size  Location     Type
 24952 ;;		None
 24953 ;; Return value:  Size  Location     Type
 24954 ;;                  1  [STACK] void 
 24955 ;; Registers used:
 24956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24957 ;; Tracked objects:
 24958 ;;		On entry : 3F/3E
 24959 ;;		On exit  : 0/0
 24960 ;;		Unchanged: 0/0
 24961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24966 ;;Total ram usage:        0 bytes
 24967 ;; Hardware stack levels used:    1
 24968 ;; Hardware stack levels required when called:    7
 24969 ;; This function calls:
 24970 ;;		_ADCC_SetADIInterruptHandler
 24971 ;;		_ADCC_SetADTIInterruptHandler
 24972 ;; This function is called by:
 24973 ;;		_SYSTEM_Initialize
 24974 ;; This function uses a reentrant model
 24975 ;;
 24976                           
 24977                           	psect	text113
 24978  017EE2                     __ptext113:
 24979                           	opt callstack 0
 24980  017EE2                     _ADCC_Initialize:
 24981                           	opt callstack 22
 24982                           
 24983                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24984                           
 24985                           ; BSR set to: 60
 24986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24987                           ;incstack = 0
 24988  017EE2  013E               	movlb	62	; () banked
 24989  017EE4  6BDE               	clrf	222,b	;volatile
 24990                           
 24991                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24992  017EE6  6BDF               	clrf	223,b	;volatile
 24993                           
 24994                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24995  017EE8  6BE0               	clrf	224,b	;volatile
 24996                           
 24997                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24998  017EEA  6BE1               	clrf	225,b	;volatile
 24999                           
 25000                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25001  017EEC  6BE4               	clrf	228,b	;volatile
 25002                           
 25003                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25004  017EEE  6BE5               	clrf	229,b	;volatile
 25005                           
 25006                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25007  017EF0  6BEA               	clrf	234,b	;volatile
 25008                           
 25009                           ; BSR set to: 62
 25010                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25011  017EF2  0E40               	movlw	64
 25012  017EF4  6FEC               	movwf	236,b	;volatile
 25013                           
 25014                           ; BSR set to: 62
 25015                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25016  017EF6  6BF1               	clrf	241,b	;volatile
 25017                           
 25018                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25019  017EF8  0E20               	movlw	32
 25020  017EFA  6FF3               	movwf	243,b	;volatile
 25021                           
 25022                           ; BSR set to: 62
 25023                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25024  017EFC  6BF4               	clrf	244,b	;volatile
 25025                           
 25026                           ; BSR set to: 62
 25027                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25028  017EFE  6BF5               	clrf	245,b	;volatile
 25029                           
 25030                           ; BSR set to: 62
 25031                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25032  017F00  6BF6               	clrf	246,b	;volatile
 25033                           
 25034                           ; BSR set to: 62
 25035                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25036  017F02  6BF7               	clrf	247,b	;volatile
 25037                           
 25038                           ; BSR set to: 62
 25039                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25040  017F04  6BF9               	clrf	249,b	;volatile
 25041                           
 25042                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25043  017F06  0E5B               	movlw	91
 25044  017F08  6FFA               	movwf	250,b	;volatile
 25045                           
 25046                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25047  017F0A  0E27               	movlw	39
 25048  017F0C  6FFB               	movwf	251,b	;volatile
 25049                           
 25050                           ; BSR set to: 62
 25051                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25052  017F0E  6BFC               	clrf	252,b	;volatile
 25053                           
 25054                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25055  017F10  0E02               	movlw	2
 25056  017F12  6FFD               	movwf	253,b	;volatile
 25057                           
 25058                           ; BSR set to: 62
 25059                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25060  017F14  6BFE               	clrf	254,b	;volatile
 25061                           
 25062                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25063  017F16  0E07               	movlw	7
 25064  017F18  6FFF               	movwf	255,b	;volatile
 25065                           
 25066                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25067  017F1A  0E84               	movlw	132
 25068  017F1C  6FF8               	movwf	248,b	;volatile
 25069                           
 25070                           ; BSR set to: 62
 25071                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25072  017F1E  0139               	movlb	57	; () banked
 25073  017F20  95A1               	bcf	161,2,b	;volatile
 25074                           
 25075                           ; BSR set to: 57
 25076                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25077  017F22  8591               	bsf	145,2,b	;volatile
 25078                           
 25079                           ; BSR set to: 57
 25080                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25081  017F24  0E0E               	movlw	low _ADCC_DefaultInterruptHandler
 25082  017F26  6EE6               	movwf	postinc1,c
 25083  017F28  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25084  017F2A  6EE6               	movwf	postinc1,c
 25085  017F2C  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25086  017F2E  6EE6               	movwf	postinc1,c
 25087  017F30  EC7B  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25088                           
 25089                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25090  017F34  0139               	movlb	57	; () banked
 25091  017F36  97A1               	bcf	161,3,b	;volatile
 25092                           
 25093                           ; BSR set to: 57
 25094                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25095  017F38  8791               	bsf	145,3,b	;volatile
 25096                           
 25097                           ; BSR set to: 57
 25098                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25099  017F3A  0E0E               	movlw	low _ADCC_DefaultInterruptHandler
 25100  017F3C  6EE6               	movwf	postinc1,c
 25101  017F3E  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25102  017F40  6EE6               	movwf	postinc1,c
 25103  017F42  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25104  017F44  6EE6               	movwf	postinc1,c
 25105  017F46  EC67  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25106                           
 25107                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25108  017F4A  0012               	return		;funcret
 25109  017F4C                     __end_of_ADCC_Initialize:
 25110                           	opt callstack 0
 25111                           
 25112 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25113 ;; Defined at:
 25114 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25115 ;; Parameters:    Size  Location     Type
 25116 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25117 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25118 ;; Auto vars:     Size  Location     Type
 25119 ;;		None
 25120 ;; Return value:  Size  Location     Type
 25121 ;;                  1  [STACK] void 
 25122 ;; Registers used:
 25123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25124 ;; Tracked objects:
 25125 ;;		On entry : 0/0
 25126 ;;		On exit  : 0/0
 25127 ;;		Unchanged: 0/0
 25128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25133 ;;Total ram usage:        0 bytes
 25134 ;; Hardware stack levels used:    1
 25135 ;; Hardware stack levels required when called:    6
 25136 ;; This function calls:
 25137 ;;		Nothing
 25138 ;; This function is called by:
 25139 ;;		_ADCC_Initialize
 25140 ;;		_start_adc_scan
 25141 ;; This function uses a reentrant model
 25142 ;;
 25143                           
 25144                           	psect	text114
 25145  018ACE                     __ptext114:
 25146                           	opt callstack 0
 25147  018ACE                     _ADCC_SetADTIInterruptHandler:
 25148                           	opt callstack 23
 25149                           
 25150                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25151                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25152                           
 25153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25154                           ;incstack = 0
 25155  018ACE  50E1               	movf	fsr1l,w,c
 25156  018AD0  0FFD               	addlw	-3
 25157  018AD2  6ED9               	movwf	fsr2l,c
 25158  018AD4  50E2               	movf	fsr1h,w,c
 25159  018AD6  6EDA               	movwf	fsr2h,c
 25160  018AD8  0EFF               	movlw	255
 25161  018ADA  22DA               	addwfc	fsr2h,f,c
 25162  018ADC  006F FF78  F007    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25163  018AE2  006F FF78  F008    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25164  018AE8  006F FF74  F009    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25165                           
 25166                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25167  018AEE  52E5               	movf	postdec1,f,c
 25168  018AF0  52E5               	movf	postdec1,f,c
 25169  018AF2  52E5               	movf	postdec1,f,c
 25170  018AF4  0012               	return		;funcret
 25171  018AF6                     __end_of_ADCC_SetADTIInterruptHandler:
 25172                           	opt callstack 0
 25173                           
 25174 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25175 ;; Defined at:
 25176 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25177 ;; Parameters:    Size  Location     Type
 25178 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25179 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25180 ;; Auto vars:     Size  Location     Type
 25181 ;;		None
 25182 ;; Return value:  Size  Location     Type
 25183 ;;                  1  [STACK] void 
 25184 ;; Registers used:
 25185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25186 ;; Tracked objects:
 25187 ;;		On entry : 6/0
 25188 ;;		On exit  : 0/0
 25189 ;;		Unchanged: 0/0
 25190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;Total ram usage:        0 bytes
 25196 ;; Hardware stack levels used:    1
 25197 ;; Hardware stack levels required when called:    6
 25198 ;; This function calls:
 25199 ;;		Nothing
 25200 ;; This function is called by:
 25201 ;;		_ADCC_Initialize
 25202 ;;		_start_adc_scan
 25203 ;; This function uses a reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text115
 25207  018AF6                     __ptext115:
 25208                           	opt callstack 0
 25209  018AF6                     _ADCC_SetADIInterruptHandler:
 25210                           	opt callstack 23
 25211                           
 25212                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25213                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25214                           
 25215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25216                           ;incstack = 0
 25217  018AF6  50E1               	movf	fsr1l,w,c
 25218  018AF8  0FFD               	addlw	-3
 25219  018AFA  6ED9               	movwf	fsr2l,c
 25220  018AFC  50E2               	movf	fsr1h,w,c
 25221  018AFE  6EDA               	movwf	fsr2h,c
 25222  018B00  0EFF               	movlw	255
 25223  018B02  22DA               	addwfc	fsr2h,f,c
 25224  018B04  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25225  018B0A  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25226  018B10  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25227                           
 25228                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25229  018B16  52E5               	movf	postdec1,f,c
 25230  018B18  52E5               	movf	postdec1,f,c
 25231  018B1A  52E5               	movf	postdec1,f,c
 25232  018B1C  0012               	return		;funcret
 25233  018B1E                     __end_of_ADCC_SetADIInterruptHandler:
 25234                           	opt callstack 0
 25235                           
 25236 ;; *************** function _TMR5_ISR *****************
 25237 ;; Defined at:
 25238 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25239 ;; Parameters:    Size  Location     Type
 25240 ;;		None
 25241 ;; Auto vars:     Size  Location     Type
 25242 ;;		None
 25243 ;; Return value:  Size  Location     Type
 25244 ;;                  1    wreg      void 
 25245 ;; Registers used:
 25246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25247 ;; Tracked objects:
 25248 ;;		On entry : 0/0
 25249 ;;		On exit  : 0/0
 25250 ;;		Unchanged: 0/0
 25251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25256 ;;Total ram usage:        4 bytes
 25257 ;; Hardware stack levels used:    1
 25258 ;; Hardware stack levels required when called:    5
 25259 ;; This function calls:
 25260 ;;		_TMR5_CallBack
 25261 ;;		_TMR5_WriteTimer
 25262 ;; This function is called by:
 25263 ;;		Interrupt level 1
 25264 ;; This function uses a non-reentrant model
 25265 ;;
 25266                           
 25267                           	psect	text116
 25268  018204                     __ptext116:
 25269                           	opt callstack 0
 25270  018204                     _TMR5_ISR:
 25271                           	opt callstack 12
 25272                           
 25273                           ;incstack = 0
 25274  018204  006F FF60  F0E4    	movff	status,??_TMR5_ISR+2
 25275  01820A  0060  F104  F0E5   	movff	btemp+11,??_TMR5_ISR+3
 25276  018210  EE15  F3AB         	lfsr	1,___intlo_sp
 25277                           
 25278                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25279  018214  0139               	movlb	57	; () banked
 25280  018216  9DA8               	bcf	168,6,b	;volatile
 25281                           
 25282                           ; BSR set to: 57
 25283                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25284  018218  0060  F09F  FFE6   	movff	_timer5ReloadVal,postinc1
 25285  01821E  0060  F0A3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25286  018224  ECF2  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25287                           
 25288                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25289  018228  0101               	movlb	1	; () banked
 25290  01822A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25291  01822C  0100               	movlb	0	; () banked
 25292  01822E  6FE2               	movwf	??_TMR5_ISR& (0+255),b
 25293  018230  6BE3               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25294  018232  0E05               	movlw	5
 25295  018234  27E2               	addwf	??_TMR5_ISR& (0+255),f,b
 25296  018236  0E00               	movlw	0
 25297  018238  23E3               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25298  01823A  4A25               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25299  01823C  2A26               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25300  01823E  51E2               	movf	??_TMR5_ISR& (0+255),w,b
 25301  018240  5C25               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25302  018242  51E3               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25303  018244  5826               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25304  018246  A0D8               	btfss	status,0,c
 25305  018248  D004               	goto	i1l1045
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25309  01824A  EC05  F0C6         	call	_TMR5_CallBack	;wreg free
 25310                           
 25311                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25312  01824E  6A25               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25313  018250  6A26               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25314  018252                     i1l1045:
 25315  018252  0060  F394  F041   	movff	??_TMR5_ISR+3,btemp+11
 25316  018258  0060  F393  FFD8   	movff	??_TMR5_ISR+2,status
 25317  01825E  0011               	retfie		f
 25318  018260                     __end_of_TMR5_ISR:
 25319                           	opt callstack 0
 25320                           
 25321 ;; *************** function _TMR5_WriteTimer *****************
 25322 ;; Defined at:
 25323 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25324 ;; Parameters:    Size  Location     Type
 25325 ;;  timerVal        2  [STACK] unsigned short 
 25326 ;; Auto vars:     Size  Location     Type
 25327 ;;		None
 25328 ;; Return value:  Size  Location     Type
 25329 ;;                  1  [STACK] void 
 25330 ;; Registers used:
 25331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25332 ;; Tracked objects:
 25333 ;;		On entry : 3F/39
 25334 ;;		On exit  : 0/0
 25335 ;;		Unchanged: 0/0
 25336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;Total ram usage:        0 bytes
 25342 ;; Hardware stack levels used:    1
 25343 ;; Hardware stack levels required when called:    3
 25344 ;; This function calls:
 25345 ;;		Nothing
 25346 ;; This function is called by:
 25347 ;;		_TMR5_ISR
 25348 ;; This function uses a reentrant model
 25349 ;;
 25350                           
 25351                           	psect	text117
 25352  0185E4                     __ptext117:
 25353                           	opt callstack 0
 25354  0185E4                     _TMR5_WriteTimer:
 25355                           	opt callstack 13
 25356                           
 25357                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25358                           
 25359                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25360                           ;incstack = 0
 25361  0185E4  A49A               	btfss	154,2,c	;volatile
 25362  0185E6  D00F               	goto	l8856
 25363                           
 25364                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25365  0185E8  909A               	bcf	154,0,c	;volatile
 25366                           
 25367                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25368                           ;stkvar	_timerVal @ sp[(0)+-2]
 25369  0185EA  0EFF               	movlw	255
 25370  0185EC  24E1               	addwf	fsr1l,w,c
 25371  0185EE  6ED9               	movwf	fsr2l,c
 25372  0185F0  0EFF               	movlw	255
 25373  0185F2  20E2               	addwfc	fsr1h,w,c
 25374  0185F4  6EDA               	movwf	fsr2h,c
 25375  0185F6  50DF               	movf	indf2,w,c
 25376  0185F8  6E99               	movwf	153,c	;volatile
 25377                           
 25378                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25379                           ;stkvar	_timerVal @ sp[(0)+-2]
 25380  0185FA  0EFE               	movlw	-2
 25381  0185FC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25382                           
 25383                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25384  018602  809A               	bsf	154,0,c	;volatile
 25385                           
 25386                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25387  018604  D00C               	goto	l1028
 25388  018606                     l8856:
 25389                           
 25390                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25391                           ;stkvar	_timerVal @ sp[(0)+-2]
 25392  018606  0EFF               	movlw	255
 25393  018608  24E1               	addwf	fsr1l,w,c
 25394  01860A  6ED9               	movwf	fsr2l,c
 25395  01860C  0EFF               	movlw	255
 25396  01860E  20E2               	addwfc	fsr1h,w,c
 25397  018610  6EDA               	movwf	fsr2h,c
 25398  018612  50DF               	movf	indf2,w,c
 25399  018614  6E99               	movwf	153,c	;volatile
 25400                           
 25401                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25402                           ;stkvar	_timerVal @ sp[(0)+-2]
 25403  018616  0EFE               	movlw	-2
 25404  018618  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25405  01861E                     l1028:
 25406                           
 25407                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25408  01861E  52E5               	movf	postdec1,f,c
 25409  018620  52E5               	movf	postdec1,f,c
 25410  018622  0012               	return		;funcret
 25411  018624                     __end_of_TMR5_WriteTimer:
 25412                           	opt callstack 0
 25413                           
 25414 ;; *************** function _TMR5_CallBack *****************
 25415 ;; Defined at:
 25416 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;		None
 25419 ;; Auto vars:     Size  Location     Type
 25420 ;;		None
 25421 ;; Return value:  Size  Location     Type
 25422 ;;                  1  [STACK] void 
 25423 ;; Registers used:
 25424 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25425 ;; Tracked objects:
 25426 ;;		On entry : 3F/0
 25427 ;;		On exit  : 0/0
 25428 ;;		Unchanged: 0/0
 25429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;Total ram usage:        0 bytes
 25435 ;; Hardware stack levels used:    1
 25436 ;; Hardware stack levels required when called:    4
 25437 ;; This function calls:
 25438 ;;		Absolute function
 25439 ;;		_TMR5_DefaultInterruptHandler
 25440 ;; This function is called by:
 25441 ;;		_TMR5_ISR
 25442 ;; This function uses a reentrant model
 25443 ;;
 25444                           
 25445                           	psect	text118
 25446  018C0A                     __ptext118:
 25447                           	opt callstack 0
 25448  018C0A                     _TMR5_CallBack:
 25449                           	opt callstack 12
 25450                           
 25451                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25452                           
 25453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25454                           ;incstack = 0
 25455  018C0A  5001               	movf	_TMR5_InterruptHandler^0,w,c
 25456  018C0C  1002               	iorwf	(_TMR5_InterruptHandler+1)^0,w,c
 25457  018C0E  1003               	iorwf	(_TMR5_InterruptHandler+2)^0,w,c
 25458  018C10  B4D8               	btfsc	status,2,c
 25459  018C12  0012               	return	
 25460                           
 25461                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25462  018C14  D801               	call	u872_28
 25463  018C16  0012               	return	
 25464  018C18                     u872_28:
 25465  018C18  0005               	push	
 25466  018C1A  6EFA               	movwf	pclath,c
 25467  018C1C  5001               	movf	_TMR5_InterruptHandler^0,w,c
 25468  018C1E  6EFD               	movwf	tosl,c
 25469  018C20  5002               	movf	(_TMR5_InterruptHandler+1)^0,w,c
 25470  018C22  6EFE               	movwf	tosh,c
 25471  018C24  5003               	movf	(_TMR5_InterruptHandler+2)^0,w,c
 25472  018C26  6EFF               	movwf	tosu,c
 25473  018C28  50FA               	movf	pclath,w,c
 25474  018C2A  0012               	return		;indir
 25475  018C2C                     __end_of_TMR5_CallBack:
 25476                           	opt callstack 0
 25477                           
 25478 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25479 ;; Defined at:
 25480 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25481 ;; Parameters:    Size  Location     Type
 25482 ;;		None
 25483 ;; Auto vars:     Size  Location     Type
 25484 ;;		None
 25485 ;; Return value:  Size  Location     Type
 25486 ;;                  1  [STACK] void 
 25487 ;; Registers used:
 25488 ;;		wreg, status,2, status,0, btemp+11
 25489 ;; Tracked objects:
 25490 ;;		On entry : 0/0
 25491 ;;		On exit  : 3F/1
 25492 ;;		Unchanged: 0/0
 25493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25498 ;;Total ram usage:        0 bytes
 25499 ;; Hardware stack levels used:    1
 25500 ;; Hardware stack levels required when called:    3
 25501 ;; This function calls:
 25502 ;;		Nothing
 25503 ;; This function is called by:
 25504 ;;		_TMR5_Initialize
 25505 ;;		_TMR5_CallBack
 25506 ;; This function uses a reentrant model
 25507 ;;
 25508                           
 25509                           	psect	text119
 25510  018B1E                     __ptext119:
 25511                           	opt callstack 0
 25512  018B1E                     _TMR5_DefaultInterruptHandler:
 25513                           	opt callstack 12
 25514                           
 25515                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25516                           
 25517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25518                           ;incstack = 0
 25519  018B1E  A0BE               	btfss	190,0,c	;volatile
 25520  018B20  D002               	goto	u840_20
 25521  018B22  0E01               	movlw	1
 25522  018B24  D001               	goto	u840_26
 25523  018B26                     u840_20:
 25524  018B26  0E00               	movlw	0
 25525  018B28                     u840_26:
 25526  018B28  0AFF               	xorlw	255
 25527  018B2A  6E41               	movwf	(btemp+11)^0,c
 25528  018B2C  50BE               	movf	190,w,c	;volatile
 25529  018B2E  1841               	xorwf	(btemp+11)^0,w,c
 25530  018B30  0BFE               	andlw	-2
 25531  018B32  1841               	xorwf	(btemp+11)^0,w,c
 25532  018B34  6EBE               	movwf	190,c	;volatile
 25533                           
 25534                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25535  018B36  0E01               	movlw	1
 25536  018B38  0101               	movlb	1	; () banked
 25537  018B3A  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25538  018B3C  0E00               	movlw	0
 25539  018B3E  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25540  018B40  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25541  018B42  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25542                           
 25543                           ; BSR set to: 1
 25544                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25545  018B44  0012               	return		;funcret
 25546  018B46                     __end_of_TMR5_DefaultInterruptHandler:
 25547                           	opt callstack 0
 25548                           
 25549 ;; *************** function _INT0_ISR *****************
 25550 ;; Defined at:
 25551 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25552 ;; Parameters:    Size  Location     Type
 25553 ;;		None
 25554 ;; Auto vars:     Size  Location     Type
 25555 ;;		None
 25556 ;; Return value:  Size  Location     Type
 25557 ;;                  1    wreg      void 
 25558 ;; Registers used:
 25559 ;;		wreg, status,2, status,0, pclath, tosl
 25560 ;; Tracked objects:
 25561 ;;		On entry : 0/0
 25562 ;;		On exit  : 0/0
 25563 ;;		Unchanged: 0/0
 25564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25569 ;;Total ram usage:        0 bytes
 25570 ;; Hardware stack levels used:    1
 25571 ;; Hardware stack levels required when called:    2
 25572 ;; This function calls:
 25573 ;;		_INT0_CallBack
 25574 ;; This function is called by:
 25575 ;;		Interrupt level 2
 25576 ;; This function uses a non-reentrant model
 25577 ;;
 25578                           
 25579                           	psect	text120
 25580  018E6C                     __ptext120:
 25581                           	opt callstack 0
 25582  018E6C                     _INT0_ISR:
 25583                           	opt callstack 12
 25584                           
 25585                           ; BSR set to: 1
 25586                           ;incstack = 0
 25587  018E6C  EE13  F356         	lfsr	1,___inthi_sp
 25588                           
 25589                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25590  018E70  0139               	movlb	57	; () banked
 25591  018E72  91A1               	bcf	161,0,b	;volatile
 25592                           
 25593                           ; BSR set to: 57
 25594                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25595  018E74  EC16  F0C6         	call	_INT0_CallBack	;wreg free
 25596  018E78  0011               	retfie		f
 25597  018E7A                     __end_of_INT0_ISR:
 25598                           	opt callstack 0
 25599                           
 25600 ;; *************** function _INT0_CallBack *****************
 25601 ;; Defined at:
 25602 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25603 ;; Parameters:    Size  Location     Type
 25604 ;;		None
 25605 ;; Auto vars:     Size  Location     Type
 25606 ;;		None
 25607 ;; Return value:  Size  Location     Type
 25608 ;;                  1  [STACK] void 
 25609 ;; Registers used:
 25610 ;;		wreg, status,2, status,0, pclath, tosl
 25611 ;; Tracked objects:
 25612 ;;		On entry : 3F/39
 25613 ;;		On exit  : 0/0
 25614 ;;		Unchanged: 0/0
 25615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25620 ;;Total ram usage:        0 bytes
 25621 ;; Hardware stack levels used:    1
 25622 ;; Hardware stack levels required when called:    1
 25623 ;; This function calls:
 25624 ;;		Absolute function
 25625 ;;		_INT0_DefaultInterruptHandler
 25626 ;; This function is called by:
 25627 ;;		_INT0_ISR
 25628 ;; This function uses a reentrant model
 25629 ;;
 25630                           
 25631                           	psect	text121
 25632  018C2C                     __ptext121:
 25633                           	opt callstack 0
 25634  018C2C                     _INT0_CallBack:
 25635                           	opt callstack 12
 25636                           
 25637                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25638                           
 25639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25640                           ;incstack = 0
 25641  018C2C  501C               	movf	_INT0_InterruptHandler^0,w,c
 25642  018C2E  101D               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25643  018C30  101E               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25644  018C32  B4D8               	btfsc	status,2,c
 25645  018C34  0012               	return	
 25646                           
 25647                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25648  018C36  D801               	call	u408_48
 25649  018C38  0012               	return	
 25650  018C3A                     u408_48:
 25651  018C3A  0005               	push	
 25652  018C3C  6EFA               	movwf	pclath,c
 25653  018C3E  501C               	movf	_INT0_InterruptHandler^0,w,c
 25654  018C40  6EFD               	movwf	tosl,c
 25655  018C42  501D               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25656  018C44  6EFE               	movwf	tosh,c
 25657  018C46  501E               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25658  018C48  6EFF               	movwf	tosu,c
 25659  018C4A  50FA               	movf	pclath,w,c
 25660  018C4C  0012               	return		;indir
 25661  018C4E                     __end_of_INT0_CallBack:
 25662                           	opt callstack 0
 25663                           
 25664 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25665 ;; Defined at:
 25666 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25667 ;; Parameters:    Size  Location     Type
 25668 ;;		None
 25669 ;; Auto vars:     Size  Location     Type
 25670 ;;		None
 25671 ;; Return value:  Size  Location     Type
 25672 ;;                  1  [STACK] void 
 25673 ;; Registers used:
 25674 ;;		None
 25675 ;; Tracked objects:
 25676 ;;		On entry : 0/39
 25677 ;;		On exit  : 0/0
 25678 ;;		Unchanged: 0/0
 25679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25684 ;;Total ram usage:        0 bytes
 25685 ;; Hardware stack levels used:    1
 25686 ;; This function calls:
 25687 ;;		Nothing
 25688 ;; This function is called by:
 25689 ;;		_EXT_INT_Initialize
 25690 ;;		_INT0_CallBack
 25691 ;; This function uses a reentrant model
 25692 ;;
 25693                           
 25694                           	psect	text122
 25695  018F0A                     __ptext122:
 25696                           	opt callstack 0
 25697  018F0A                     _INT0_DefaultInterruptHandler:
 25698                           	opt callstack 12
 25699                           
 25700                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25701                           
 25702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25703                           ;incstack = 0
 25704  018F0A  0012               	return		;funcret
 25705  018F0C                     __end_of_INT0_DefaultInterruptHandler:
 25706                           	opt callstack 0
 25707                           
 25708 ;; *************** function _INT1_ISR *****************
 25709 ;; Defined at:
 25710 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 25711 ;; Parameters:    Size  Location     Type
 25712 ;;		None
 25713 ;; Auto vars:     Size  Location     Type
 25714 ;;		None
 25715 ;; Return value:  Size  Location     Type
 25716 ;;                  1    wreg      void 
 25717 ;; Registers used:
 25718 ;;		wreg, status,2, status,0, pclath, tosl
 25719 ;; Tracked objects:
 25720 ;;		On entry : 0/0
 25721 ;;		On exit  : 0/0
 25722 ;;		Unchanged: 0/0
 25723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25728 ;;Total ram usage:        0 bytes
 25729 ;; Hardware stack levels used:    1
 25730 ;; Hardware stack levels required when called:    2
 25731 ;; This function calls:
 25732 ;;		_INT1_CallBack
 25733 ;; This function is called by:
 25734 ;;		Interrupt level 2
 25735 ;; This function uses a non-reentrant model
 25736 ;;
 25737                           
 25738                           	psect	text123
 25739  018E7C                     __ptext123:
 25740                           	opt callstack 0
 25741  018E7C                     _INT1_ISR:
 25742                           	opt callstack 12
 25743                           
 25744                           ;incstack = 0
 25745  018E7C  EE13  F356         	lfsr	1,___inthi_sp
 25746                           
 25747                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 25748  018E80  0139               	movlb	57	; () banked
 25749  018E82  91A5               	bcf	165,0,b	;volatile
 25750                           
 25751                           ; BSR set to: 57
 25752                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 25753  018E84  EC27  F0C6         	call	_INT1_CallBack	;wreg free
 25754  018E88  0011               	retfie		f
 25755  018E8A                     __end_of_INT1_ISR:
 25756                           	opt callstack 0
 25757                           
 25758 ;; *************** function _INT1_CallBack *****************
 25759 ;; Defined at:
 25760 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 25761 ;; Parameters:    Size  Location     Type
 25762 ;;		None
 25763 ;; Auto vars:     Size  Location     Type
 25764 ;;		None
 25765 ;; Return value:  Size  Location     Type
 25766 ;;                  1  [STACK] void 
 25767 ;; Registers used:
 25768 ;;		wreg, status,2, status,0, pclath, tosl
 25769 ;; Tracked objects:
 25770 ;;		On entry : 3F/39
 25771 ;;		On exit  : 0/0
 25772 ;;		Unchanged: 0/0
 25773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25778 ;;Total ram usage:        0 bytes
 25779 ;; Hardware stack levels used:    1
 25780 ;; Hardware stack levels required when called:    1
 25781 ;; This function calls:
 25782 ;;		Absolute function
 25783 ;;		_INT1_DefaultInterruptHandler
 25784 ;;		_switch_handler
 25785 ;; This function is called by:
 25786 ;;		_INT1_ISR
 25787 ;; This function uses a reentrant model
 25788 ;;
 25789                           
 25790                           	psect	text124
 25791  018C4E                     __ptext124:
 25792                           	opt callstack 0
 25793  018C4E                     _INT1_CallBack:
 25794                           	opt callstack 12
 25795                           
 25796                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 25797                           
 25798                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25799                           ;incstack = 0
 25800  018C4E  5019               	movf	_INT1_InterruptHandler^0,w,c
 25801  018C50  101A               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25802  018C52  101B               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25803  018C54  B4D8               	btfsc	status,2,c
 25804  018C56  0012               	return	
 25805                           
 25806                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 25807  018C58  D801               	call	u410_48
 25808  018C5A  0012               	return	
 25809  018C5C                     u410_48:
 25810  018C5C  0005               	push	
 25811  018C5E  6EFA               	movwf	pclath,c
 25812  018C60  5019               	movf	_INT1_InterruptHandler^0,w,c
 25813  018C62  6EFD               	movwf	tosl,c
 25814  018C64  501A               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25815  018C66  6EFE               	movwf	tosh,c
 25816  018C68  501B               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25817  018C6A  6EFF               	movwf	tosu,c
 25818  018C6C  50FA               	movf	pclath,w,c
 25819  018C6E  0012               	return		;indir
 25820  018C70                     __end_of_INT1_CallBack:
 25821                           	opt callstack 0
 25822                           
 25823 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25824 ;; Defined at:
 25825 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;		None
 25828 ;; Auto vars:     Size  Location     Type
 25829 ;;		None
 25830 ;; Return value:  Size  Location     Type
 25831 ;;                  1  [STACK] void 
 25832 ;; Registers used:
 25833 ;;		None
 25834 ;; Tracked objects:
 25835 ;;		On entry : 0/39
 25836 ;;		On exit  : 0/0
 25837 ;;		Unchanged: 0/0
 25838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;Total ram usage:        0 bytes
 25844 ;; Hardware stack levels used:    1
 25845 ;; This function calls:
 25846 ;;		Nothing
 25847 ;; This function is called by:
 25848 ;;		_EXT_INT_Initialize
 25849 ;;		_INT1_CallBack
 25850 ;; This function uses a reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text125
 25854  018F0C                     __ptext125:
 25855                           	opt callstack 0
 25856  018F0C                     _INT1_DefaultInterruptHandler:
 25857                           	opt callstack 12
 25858                           
 25859                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25860                           
 25861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25862                           ;incstack = 0
 25863  018F0C  0012               	return		;funcret
 25864  018F0E                     __end_of_INT1_DefaultInterruptHandler:
 25865                           	opt callstack 0
 25866                           
 25867 ;; *************** function _switch_handler *****************
 25868 ;; Defined at:
 25869 ;;		line 53 in file "mbmc.c"
 25870 ;; Parameters:    Size  Location     Type
 25871 ;;		None
 25872 ;; Auto vars:     Size  Location     Type
 25873 ;;		None
 25874 ;; Return value:  Size  Location     Type
 25875 ;;                  1  [STACK] void 
 25876 ;; Registers used:
 25877 ;;		None
 25878 ;; Tracked objects:
 25879 ;;		On entry : 0/39
 25880 ;;		On exit  : 0/0
 25881 ;;		Unchanged: 0/0
 25882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25887 ;;Total ram usage:        0 bytes
 25888 ;; Hardware stack levels used:    1
 25889 ;; This function calls:
 25890 ;;		Nothing
 25891 ;; This function is called by:
 25892 ;;		_start_switch_handler
 25893 ;;		_INT1_CallBack
 25894 ;; This function uses a reentrant model
 25895 ;;
 25896                           
 25897                           	psect	text126
 25898  018F06                     __ptext126:
 25899                           	opt callstack 0
 25900  018F06                     _switch_handler:
 25901                           	opt callstack 12
 25902                           
 25903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25904                           ;incstack = 0
 25905                           ;mbmc.c: 56:  do { LATEbits.LATE1 = 0; } while(0);
 25906  018F06  92BE               	bcf	190,1,c	;volatile
 25907                           
 25908                           ; _switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25909  018F08  0012               	return		;funcret
 25910  018F0A                     __end_of_switch_handler:
 25911                           	opt callstack 0
 25912                           
 25913 ;; *************** function _Default_ISR *****************
 25914 ;; Defined at:
 25915 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25916 ;; Parameters:    Size  Location     Type
 25917 ;;		None
 25918 ;; Auto vars:     Size  Location     Type
 25919 ;;		None
 25920 ;; Return value:  Size  Location     Type
 25921 ;;                  1    wreg      void 
 25922 ;; Registers used:
 25923 ;;		None
 25924 ;; Tracked objects:
 25925 ;;		On entry : 0/0
 25926 ;;		On exit  : 0/0
 25927 ;;		Unchanged: 0/0
 25928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25933 ;;Total ram usage:        0 bytes
 25934 ;; Hardware stack levels used:    1
 25935 ;; This function calls:
 25936 ;;		Nothing
 25937 ;; This function is called by:
 25938 ;;		Interrupt level 2
 25939 ;; This function uses a non-reentrant model
 25940 ;;
 25941                           
 25942                           	psect	text127
 25943  018F00                     __ptext127:
 25944                           	opt callstack 0
 25945  018F00                     _Default_ISR:
 25946                           	opt callstack 14
 25947                           
 25948                           ;incstack = 0
 25949  018F00  EE13  F356         	lfsr	1,___inthi_sp
 25950  018F04  0011               	retfie		f
 25951  018F06                     __end_of_Default_ISR:
 25952                           	opt callstack 0
 25953                           
 25954 ;; *************** function _ADCC_ISR *****************
 25955 ;; Defined at:
 25956 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25957 ;; Parameters:    Size  Location     Type
 25958 ;;		None
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;		None
 25961 ;; Return value:  Size  Location     Type
 25962 ;;                  1    wreg      void 
 25963 ;; Registers used:
 25964 ;;		wreg, status,2, status,0, pclath, tosl
 25965 ;; Tracked objects:
 25966 ;;		On entry : 0/0
 25967 ;;		On exit  : 0/0
 25968 ;;		Unchanged: 0/0
 25969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;Total ram usage:        0 bytes
 25975 ;; Hardware stack levels used:    1
 25976 ;; Hardware stack levels required when called:    1
 25977 ;; This function calls:
 25978 ;;		Absolute function
 25979 ;;		_ADCC_DefaultInterruptHandler
 25980 ;;		_adc_int_handler
 25981 ;; This function is called by:
 25982 ;;		Interrupt level 2
 25983 ;; This function uses a non-reentrant model
 25984 ;;
 25985                           
 25986                           	psect	text128
 25987  0188EC                     __ptext128:
 25988                           	opt callstack 0
 25989  0188EC                     _ADCC_ISR:
 25990                           	opt callstack 13
 25991                           
 25992                           ;incstack = 0
 25993  0188EC  EE13  F356         	lfsr	1,___inthi_sp
 25994                           
 25995                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25996  0188F0  0139               	movlb	57	; () banked
 25997  0188F2  95A1               	bcf	161,2,b	;volatile
 25998                           
 25999                           ; BSR set to: 57
 26000                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 26001  0188F4  500A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26002  0188F6  100B               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26003  0188F8  100C               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26004  0188FA  B4D8               	btfsc	status,2,c
 26005  0188FC  0011               	retfie		f
 26006                           
 26007                           ; BSR set to: 57
 26008                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 26009  0188FE  D801               	call	i2u436_48
 26010  018900  0011               	retfie		f
 26011  018902                     i2u436_48:
 26012  018902  0005               	push	
 26013  018904  6EFA               	movwf	pclath,c
 26014  018906  500A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 26015  018908  6EFD               	movwf	tosl,c
 26016  01890A  500B               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 26017  01890C  6EFE               	movwf	tosh,c
 26018  01890E  500C               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 26019  018910  6EFF               	movwf	tosu,c
 26020  018912  50FA               	movf	pclath,w,c
 26021  018914  0012               	return		;indir
 26022  018916                     __end_of_ADCC_ISR:
 26023                           	opt callstack 0
 26024                           
 26025 ;; *************** function _adc_int_t_handler *****************
 26026 ;; Defined at:
 26027 ;;		line 127 in file "daq.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;		None
 26030 ;; Auto vars:     Size  Location     Type
 26031 ;;		None
 26032 ;; Return value:  Size  Location     Type
 26033 ;;                  1  [STACK] void 
 26034 ;; Registers used:
 26035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 26036 ;; Tracked objects:
 26037 ;;		On entry : 3F/39
 26038 ;;		On exit  : 1/0
 26039 ;;		Unchanged: 0/0
 26040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26045 ;;Total ram usage:        0 bytes
 26046 ;; Hardware stack levels used:    1
 26047 ;; Hardware stack levels required when called:    1
 26048 ;; This function calls:
 26049 ;;		_ADCC_DischargeSampleCapacitor
 26050 ;;		_ADCC_StartConversion
 26051 ;; This function is called by:
 26052 ;;		_start_adc_scan
 26053 ;;		_ADCC_ThresholdISR
 26054 ;; This function uses a reentrant model
 26055 ;;
 26056                           
 26057                           	psect	text129
 26058  017D80                     __ptext129:
 26059                           	opt callstack 0
 26060  017D80                     _adc_int_t_handler:
 26061                           	opt callstack 12
 26062                           
 26063                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 26064                           
 26065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26066                           ;incstack = 0
 26067  017D80  013E               	movlb	62	; () banked
 26068  017D82  51E6               	movf	230,w,b	;volatile
 26069  017D84  006F FB9C  F036    	movff	16103,btemp	;volatile
 26070  017D8A  6A37               	clrf	(btemp+1)^0,c
 26071  017D8C  0060  F0D8  F037   	movff	btemp,btemp+1
 26072  017D92  6A36               	clrf	btemp^0,c
 26073  017D94  2636               	addwf	btemp^0,f,c
 26074  017D96  0E00               	movlw	0
 26075  017D98  2237               	addwfc	(btemp+1)^0,f,c
 26076  017D9A  0100               	movlb	0	; () banked
 26077  017D9C  51C6               	movf	(_R+36)& (0+255),w,b	;volatile
 26078  017D9E  0D02               	mullw	2
 26079  017DA0  50F3               	movf	243,w,c
 26080  017DA2  0FA2               	addlw	low _R
 26081  017DA4  6ED9               	movwf	fsr2l,c
 26082  017DA6  6ADA               	clrf	fsr2h,c
 26083  017DA8  0060  F0DB  FFDE   	movff	btemp,postinc2
 26084  017DAE  0060  F0DF  FFDD   	movff	btemp+1,postdec2
 26085  017DB4                     l9008:
 26086                           
 26087                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 26088  017DB4  0100               	movlb	0	; () banked
 26089  017DB6  2BC6               	incf	(_R+36)& (0+255),f,b	;volatile
 26090  017DB8  0E0D               	movlw	13
 26091  017DBA  65C6               	cpfsgt	(_R+36)& (0+255),b	;volatile
 26092  017DBC  D003               	goto	l9014
 26093                           
 26094                           ; BSR set to: 0
 26095                           ;daq.c: 135:    R.done = 1;
 26096  017DBE  0E01               	movlw	1
 26097  017DC0  6FC9               	movwf	(_R+39)& (0+255),b	;volatile
 26098  017DC2  0012               	return	
 26099  017DC4                     l9014:
 26100                           
 26101                           ; BSR set to: 0
 26102                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26103  017DC4  0060  F318  F041   	movff	_R+36,btemp+11	;volatile
 26104  017DCA  EE20  F0C7         	lfsr	2,_R+37	;volatile
 26105  017DCE  006F FF78  F03E    	movff	postinc2,btemp+8
 26106  017DD4  006F FF74  F03F    	movff	postdec2,btemp+9
 26107  017DDA  2A41               	incf	(btemp+11)^0,f,c
 26108  017DDC  D003               	goto	u884_44
 26109  017DDE                     u884_45:
 26110  017DDE  90D8               	bcf	status,0,c
 26111  017DE0  323F               	rrcf	(btemp+9)^0,f,c
 26112  017DE2  323E               	rrcf	(btemp+8)^0,f,c
 26113  017DE4                     u884_44:
 26114  017DE4  2E41               	decfsz	(btemp+11)^0,f,c
 26115  017DE6  D7FB               	goto	u884_45
 26116  017DE8  A03E               	btfss	(btemp+8)^0,0,c
 26117  017DEA  D7E4               	goto	l9008
 26118                           
 26119                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 26120  017DEC  EC63  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26121                           
 26122                           ; BSR set to: 62
 26123                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 26124  017DF0  0100               	movlb	0	; () banked
 26125  017DF2  51C6               	movf	(_R+36)& (0+255),w,b	;volatile
 26126  017DF4  0B0F               	andlw	15
 26127  017DF6  6EE6               	movwf	postinc1,c
 26128  017DF8  EC17  F0C7         	call	_ADCC_StartConversion	;wreg free
 26129                           
 26130                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26131  017DFC  0012               	return		;funcret
 26132  017DFE                     __end_of_adc_int_t_handler:
 26133                           	opt callstack 0
 26134                           
 26135 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26136 ;; Defined at:
 26137 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26138 ;; Parameters:    Size  Location     Type
 26139 ;;		None
 26140 ;; Auto vars:     Size  Location     Type
 26141 ;;		None
 26142 ;; Return value:  Size  Location     Type
 26143 ;;                  1  [STACK] void 
 26144 ;; Registers used:
 26145 ;;		None
 26146 ;; Tracked objects:
 26147 ;;		On entry : 3F/39
 26148 ;;		On exit  : 0/0
 26149 ;;		Unchanged: 0/0
 26150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26155 ;;Total ram usage:        0 bytes
 26156 ;; Hardware stack levels used:    1
 26157 ;; This function calls:
 26158 ;;		Nothing
 26159 ;; This function is called by:
 26160 ;;		_ADCC_Initialize
 26161 ;;		_ADCC_ISR
 26162 ;;		_ADCC_ThresholdISR
 26163 ;; This function uses a reentrant model
 26164 ;;
 26165                           
 26166                           	psect	text130
 26167  018F0E                     __ptext130:
 26168                           	opt callstack 0
 26169  018F0E                     _ADCC_DefaultInterruptHandler:
 26170                           	opt callstack 13
 26171                           
 26172                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26173                           
 26174                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26175                           ;incstack = 0
 26176  018F0E  0012               	return		;funcret
 26177  018F10                     __end_of_ADCC_DefaultInterruptHandler:
 26178                           	opt callstack 0
 26179                           
 26180 ;; *************** function _adc_int_handler *****************
 26181 ;; Defined at:
 26182 ;;		line 117 in file "daq.c"
 26183 ;; Parameters:    Size  Location     Type
 26184 ;;		None
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;		None
 26187 ;; Return value:  Size  Location     Type
 26188 ;;                  1  [STACK] void 
 26189 ;; Registers used:
 26190 ;;		None
 26191 ;; Tracked objects:
 26192 ;;		On entry : 3F/39
 26193 ;;		On exit  : 0/0
 26194 ;;		Unchanged: 0/0
 26195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26200 ;;Total ram usage:        0 bytes
 26201 ;; Hardware stack levels used:    1
 26202 ;; This function calls:
 26203 ;;		Nothing
 26204 ;; This function is called by:
 26205 ;;		_start_adc_scan
 26206 ;;		_ADCC_ISR
 26207 ;; This function uses a reentrant model
 26208 ;;
 26209                           
 26210                           	psect	text131
 26211  018F10                     __ptext131:
 26212                           	opt callstack 0
 26213  018F10                     _adc_int_handler:
 26214                           	opt callstack 13
 26215                           
 26216                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26217                           
 26218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26219                           ;incstack = 0
 26220  018F10  0012               	return		;funcret
 26221  018F12                     __end_of_adc_int_handler:
 26222                           	opt callstack 0
 26223                           
 26224 ;; *************** function _ADCC_ThresholdISR *****************
 26225 ;; Defined at:
 26226 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26227 ;; Parameters:    Size  Location     Type
 26228 ;;		None
 26229 ;; Auto vars:     Size  Location     Type
 26230 ;;		None
 26231 ;; Return value:  Size  Location     Type
 26232 ;;                  1    wreg      void 
 26233 ;; Registers used:
 26234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26235 ;; Tracked objects:
 26236 ;;		On entry : 0/0
 26237 ;;		On exit  : 0/0
 26238 ;;		Unchanged: 0/0
 26239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26242 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26244 ;;Total ram usage:        5 bytes
 26245 ;; Hardware stack levels used:    1
 26246 ;; Hardware stack levels required when called:    2
 26247 ;; This function calls:
 26248 ;;		Absolute function
 26249 ;;		_ADCC_DefaultInterruptHandler
 26250 ;;		_adc_int_t_handler
 26251 ;; This function is called by:
 26252 ;;		Interrupt level 2
 26253 ;; This function uses a non-reentrant model
 26254 ;;
 26255                           
 26256                           	psect	text132
 26257  017F4C                     __ptext132:
 26258                           	opt callstack 0
 26259  017F4C                     _ADCC_ThresholdISR:
 26260                           	opt callstack 12
 26261                           
 26262                           ;incstack = 0
 26263  017F4C  0060  F0D8  F056   	movff	btemp,??_ADCC_ThresholdISR
 26264  017F52  0060  F0DC  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26265  017F58  0060  F0F8  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26266  017F5E  0060  F0FC  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26267  017F64  0060  F104  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26268  017F6A  EE13  F356         	lfsr	1,___inthi_sp
 26269                           
 26270                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26271  017F6E  0139               	movlb	57	; () banked
 26272  017F70  97A1               	bcf	161,3,b	;volatile
 26273                           
 26274                           ; BSR set to: 57
 26275                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26276  017F72  5007               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26277  017F74  1008               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26278  017F76  1009               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26279  017F78  B4D8               	btfsc	status,2,c
 26280  017F7A  D00C               	goto	i2u887_49
 26281                           
 26282                           ; BSR set to: 57
 26283                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26284  017F7C  D801               	call	i2u887_48
 26285  017F7E  D00A               	goto	i2u887_49
 26286  017F80                     i2u887_48:
 26287  017F80  0005               	push	
 26288  017F82  6EFA               	movwf	pclath,c
 26289  017F84  5007               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26290  017F86  6EFD               	movwf	tosl,c
 26291  017F88  5008               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26292  017F8A  6EFE               	movwf	tosh,c
 26293  017F8C  5009               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26294  017F8E  6EFF               	movwf	tosu,c
 26295  017F90  50FA               	movf	pclath,w,c
 26296  017F92  0012               	return		;indir
 26297  017F94                     i2u887_49:
 26298  017F94  0060  F168  F041   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26299  017F9A  0060  F164  F03F   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26300  017FA0  0060  F160  F03E   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26301  017FA6  0060  F15C  F037   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26302  017FAC  0060  F158  F036   	movff	??_ADCC_ThresholdISR,btemp
 26303  017FB2  0011               	retfie		f
 26304  017FB4                     __end_of_ADCC_ThresholdISR:
 26305                           	opt callstack 0
 26306                           
 26307 ;; *************** function _UART1_tx_vect_isr *****************
 26308 ;; Defined at:
 26309 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26310 ;; Parameters:    Size  Location     Type
 26311 ;;		None
 26312 ;; Auto vars:     Size  Location     Type
 26313 ;;		None
 26314 ;; Return value:  Size  Location     Type
 26315 ;;                  1    wreg      void 
 26316 ;; Registers used:
 26317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26318 ;; Tracked objects:
 26319 ;;		On entry : 0/0
 26320 ;;		On exit  : 0/0
 26321 ;;		Unchanged: 0/0
 26322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26327 ;;Total ram usage:        0 bytes
 26328 ;; Hardware stack levels used:    1
 26329 ;; Hardware stack levels required when called:    1
 26330 ;; This function calls:
 26331 ;;		Absolute function
 26332 ;;		_UART1_Transmit_ISR
 26333 ;; This function is called by:
 26334 ;;		Interrupt level 2
 26335 ;; This function uses a non-reentrant model
 26336 ;;
 26337                           
 26338                           	psect	text133
 26339  018B48                     __ptext133:
 26340                           	opt callstack 0
 26341  018B48                     _UART1_tx_vect_isr:
 26342                           	opt callstack 13
 26343                           
 26344                           ;incstack = 0
 26345  018B48  EE13  F356         	lfsr	1,___inthi_sp
 26346                           
 26347                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26348  018B4C  500D               	movf	_UART1_TxInterruptHandler^0,w,c
 26349  018B4E  100E               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26350  018B50  100F               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26351  018B52  B4D8               	btfsc	status,2,c
 26352  018B54  0011               	retfie		f
 26353                           
 26354                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26355  018B56  D801               	call	i2u889_48
 26356  018B58  0011               	retfie		f
 26357  018B5A                     i2u889_48:
 26358  018B5A  0005               	push	
 26359  018B5C  6EFA               	movwf	pclath,c
 26360  018B5E  500D               	movf	_UART1_TxInterruptHandler^0,w,c
 26361  018B60  6EFD               	movwf	tosl,c
 26362  018B62  500E               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26363  018B64  6EFE               	movwf	tosh,c
 26364  018B66  500F               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26365  018B68  6EFF               	movwf	tosu,c
 26366  018B6A  50FA               	movf	pclath,w,c
 26367  018B6C  0012               	return		;indir
 26368  018B6E                     __end_of_UART1_tx_vect_isr:
 26369                           	opt callstack 0
 26370                           
 26371 ;; *************** function _UART1_Transmit_ISR *****************
 26372 ;; Defined at:
 26373 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26374 ;; Parameters:    Size  Location     Type
 26375 ;;		None
 26376 ;; Auto vars:     Size  Location     Type
 26377 ;;		None
 26378 ;; Return value:  Size  Location     Type
 26379 ;;                  1  [STACK] void 
 26380 ;; Registers used:
 26381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26382 ;; Tracked objects:
 26383 ;;		On entry : 0/0
 26384 ;;		On exit  : 3B/39
 26385 ;;		Unchanged: 0/0
 26386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26391 ;;Total ram usage:        0 bytes
 26392 ;; Hardware stack levels used:    1
 26393 ;; This function calls:
 26394 ;;		Nothing
 26395 ;; This function is called by:
 26396 ;;		_UART1_Initialize
 26397 ;;		_UART1_tx_vect_isr
 26398 ;; This function uses a reentrant model
 26399 ;;
 26400                           
 26401                           	psect	text134
 26402  01886A                     __ptext134:
 26403                           	opt callstack 0
 26404  01886A                     _UART1_Transmit_ISR:
 26405                           	opt callstack 13
 26406                           
 26407                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26408                           
 26409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26410                           ;incstack = 0
 26411  01886A  0E40               	movlw	64
 26412  01886C  6033               	cpfslt	_uart1TxBufferRemaining^0,c
 26413  01886E  D010               	goto	l581
 26414                           
 26415                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26416  018870  0E6C               	movlw	low _uart1TxBuffer
 26417  018872  2434               	addwf	_uart1TxTail^0,w,c	;volatile
 26418  018874  6ED9               	movwf	fsr2l,c
 26419  018876  6ADA               	clrf	fsr2h,c
 26420  018878  0E02               	movlw	high _uart1TxBuffer
 26421  01887A  22DA               	addwfc	fsr2h,f,c
 26422  01887C  50DF               	movf	indf2,w,c
 26423  01887E  013D               	movlb	61	; () banked
 26424  018880  6FEA               	movwf	234,b	;volatile
 26425                           
 26426                           ; BSR set to: 61
 26427  018882  2A34               	incf	_uart1TxTail^0,f,c	;volatile
 26428                           
 26429                           ; BSR set to: 61
 26430                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26431  018884  0E3F               	movlw	63
 26432  018886  6434               	cpfsgt	_uart1TxTail^0,c
 26433  018888  D001               	goto	l8808
 26434                           
 26435                           ; BSR set to: 61
 26436                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26437  01888A  6A34               	clrf	_uart1TxTail^0,c	;volatile
 26438  01888C                     l8808:
 26439                           
 26440                           ; BSR set to: 61
 26441                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26442  01888C  2A33               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26443                           
 26444                           ;mcc_generated_files/uart1.c: 222:  } else {
 26445  01888E  0012               	return	
 26446  018890                     l581:
 26447                           
 26448                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26449  018890  0139               	movlb	57	; () banked
 26450  018892  9993               	bcf	147,4,b	;volatile
 26451                           
 26452                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26453  018894  0012               	return		;funcret
 26454  018896                     __end_of_UART1_Transmit_ISR:
 26455                           	opt callstack 0
 26456                           
 26457 ;; *************** function _UART1_rx_vect_isr *****************
 26458 ;; Defined at:
 26459 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26460 ;; Parameters:    Size  Location     Type
 26461 ;;		None
 26462 ;; Auto vars:     Size  Location     Type
 26463 ;;		None
 26464 ;; Return value:  Size  Location     Type
 26465 ;;                  1    wreg      void 
 26466 ;; Registers used:
 26467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26468 ;; Tracked objects:
 26469 ;;		On entry : 0/0
 26470 ;;		On exit  : 0/0
 26471 ;;		Unchanged: 0/0
 26472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26477 ;;Total ram usage:        0 bytes
 26478 ;; Hardware stack levels used:    1
 26479 ;; Hardware stack levels required when called:    1
 26480 ;; This function calls:
 26481 ;;		Absolute function
 26482 ;;		_UART1_Receive_ISR
 26483 ;; This function is called by:
 26484 ;;		Interrupt level 2
 26485 ;; This function uses a non-reentrant model
 26486 ;;
 26487                           
 26488                           	psect	text135
 26489  018B70                     __ptext135:
 26490                           	opt callstack 0
 26491  018B70                     _UART1_rx_vect_isr:
 26492                           	opt callstack 13
 26493                           
 26494                           ;incstack = 0
 26495  018B70  EE13  F356         	lfsr	1,___inthi_sp
 26496                           
 26497                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26498  018B74  5010               	movf	_UART1_RxInterruptHandler^0,w,c
 26499  018B76  1011               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26500  018B78  1012               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26501  018B7A  B4D8               	btfsc	status,2,c
 26502  018B7C  0011               	retfie		f
 26503                           
 26504                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26505  018B7E  D801               	call	i2u891_48
 26506  018B80  0011               	retfie		f
 26507  018B82                     i2u891_48:
 26508  018B82  0005               	push	
 26509  018B84  6EFA               	movwf	pclath,c
 26510  018B86  5010               	movf	_UART1_RxInterruptHandler^0,w,c
 26511  018B88  6EFD               	movwf	tosl,c
 26512  018B8A  5011               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26513  018B8C  6EFE               	movwf	tosh,c
 26514  018B8E  5012               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26515  018B90  6EFF               	movwf	tosu,c
 26516  018B92  50FA               	movf	pclath,w,c
 26517  018B94  0012               	return		;indir
 26518  018B96                     __end_of_UART1_rx_vect_isr:
 26519                           	opt callstack 0
 26520                           
 26521 ;; *************** function _UART1_Receive_ISR *****************
 26522 ;; Defined at:
 26523 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26524 ;; Parameters:    Size  Location     Type
 26525 ;;		None
 26526 ;; Auto vars:     Size  Location     Type
 26527 ;;		None
 26528 ;; Return value:  Size  Location     Type
 26529 ;;                  1  [STACK] void 
 26530 ;; Registers used:
 26531 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26532 ;; Tracked objects:
 26533 ;;		On entry : 0/0
 26534 ;;		On exit  : 0/0
 26535 ;;		Unchanged: 0/0
 26536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26541 ;;Total ram usage:        0 bytes
 26542 ;; Hardware stack levels used:    1
 26543 ;; This function calls:
 26544 ;;		Nothing
 26545 ;; This function is called by:
 26546 ;;		_UART1_Initialize
 26547 ;;		_UART1_rx_vect_isr
 26548 ;; This function uses a reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text136
 26552  018CEC                     __ptext136:
 26553                           	opt callstack 0
 26554  018CEC                     _UART1_Receive_ISR:
 26555                           	opt callstack 13
 26556                           
 26557                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26558                           
 26559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26560                           ;incstack = 0
 26561  018CEC  0E00               	movlw	low _uart1RxBuffer
 26562  018CEE  2432               	addwf	_uart1RxHead^0,w,c	;volatile
 26563  018CF0  6ED9               	movwf	fsr2l,c
 26564  018CF2  6ADA               	clrf	fsr2h,c
 26565  018CF4  0E05               	movlw	high _uart1RxBuffer
 26566  018CF6  22DA               	addwfc	fsr2h,f,c
 26567  018CF8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26568  018CFE  2A32               	incf	_uart1RxHead^0,f,c	;volatile
 26569                           
 26570                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26571  018D00  2832               	incf	_uart1RxHead^0,w,c
 26572  018D02  B4D8               	btfsc	status,2,c
 26573                           
 26574                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26575  018D04  6A32               	clrf	_uart1RxHead^0,c	;volatile
 26576                           
 26577                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26578  018D06  2A30               	incf	_uart1RxCount^0,f,c	;volatile
 26579                           
 26580                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26581  018D08  0012               	return		;funcret
 26582  018D0A                     __end_of_UART1_Receive_ISR:
 26583                           	opt callstack 0
 26584                           
 26585 ;; *************** function _UART2_tx_vect_isr *****************
 26586 ;; Defined at:
 26587 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26588 ;; Parameters:    Size  Location     Type
 26589 ;;		None
 26590 ;; Auto vars:     Size  Location     Type
 26591 ;;		None
 26592 ;; Return value:  Size  Location     Type
 26593 ;;                  1    wreg      void 
 26594 ;; Registers used:
 26595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26596 ;; Tracked objects:
 26597 ;;		On entry : 0/0
 26598 ;;		On exit  : 0/0
 26599 ;;		Unchanged: 0/0
 26600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26605 ;;Total ram usage:        0 bytes
 26606 ;; Hardware stack levels used:    1
 26607 ;; Hardware stack levels required when called:    1
 26608 ;; This function calls:
 26609 ;;		Absolute function
 26610 ;;		_UART2_Transmit_ISR
 26611 ;; This function is called by:
 26612 ;;		Interrupt level 2
 26613 ;; This function uses a non-reentrant model
 26614 ;;
 26615                           
 26616                           	psect	text137
 26617  018B98                     __ptext137:
 26618                           	opt callstack 0
 26619  018B98                     _UART2_tx_vect_isr:
 26620                           	opt callstack 13
 26621                           
 26622                           ;incstack = 0
 26623  018B98  EE13  F356         	lfsr	1,___inthi_sp
 26624                           
 26625                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26626  018B9C  5013               	movf	_UART2_TxInterruptHandler^0,w,c
 26627  018B9E  1014               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26628  018BA0  1015               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26629  018BA2  B4D8               	btfsc	status,2,c
 26630  018BA4  0011               	retfie		f
 26631                           
 26632                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26633  018BA6  D801               	call	i2u893_48
 26634  018BA8  0011               	retfie		f
 26635  018BAA                     i2u893_48:
 26636  018BAA  0005               	push	
 26637  018BAC  6EFA               	movwf	pclath,c
 26638  018BAE  5013               	movf	_UART2_TxInterruptHandler^0,w,c
 26639  018BB0  6EFD               	movwf	tosl,c
 26640  018BB2  5014               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26641  018BB4  6EFE               	movwf	tosh,c
 26642  018BB6  5015               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26643  018BB8  6EFF               	movwf	tosu,c
 26644  018BBA  50FA               	movf	pclath,w,c
 26645  018BBC  0012               	return		;indir
 26646  018BBE                     __end_of_UART2_tx_vect_isr:
 26647                           	opt callstack 0
 26648                           
 26649 ;; *************** function _UART2_Transmit_ISR *****************
 26650 ;; Defined at:
 26651 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26652 ;; Parameters:    Size  Location     Type
 26653 ;;		None
 26654 ;; Auto vars:     Size  Location     Type
 26655 ;;		None
 26656 ;; Return value:  Size  Location     Type
 26657 ;;                  1  [STACK] void 
 26658 ;; Registers used:
 26659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26660 ;; Tracked objects:
 26661 ;;		On entry : 0/0
 26662 ;;		On exit  : 3B/39
 26663 ;;		Unchanged: 0/0
 26664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26669 ;;Total ram usage:        0 bytes
 26670 ;; Hardware stack levels used:    1
 26671 ;; This function calls:
 26672 ;;		Nothing
 26673 ;; This function is called by:
 26674 ;;		_UART2_Initialize
 26675 ;;		_UART2_tx_vect_isr
 26676 ;; This function uses a reentrant model
 26677 ;;
 26678                           
 26679                           	psect	text138
 26680  018896                     __ptext138:
 26681                           	opt callstack 0
 26682  018896                     _UART2_Transmit_ISR:
 26683                           	opt callstack 13
 26684                           
 26685                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26686                           
 26687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26688                           ;incstack = 0
 26689  018896  0E40               	movlw	64
 26690  018898  602D               	cpfslt	_uart2TxBufferRemaining^0,c
 26691  01889A  D010               	goto	l701
 26692                           
 26693                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26694  01889C  0E00               	movlw	low _uart2TxBuffer
 26695  01889E  242E               	addwf	_uart2TxTail^0,w,c	;volatile
 26696  0188A0  6ED9               	movwf	fsr2l,c
 26697  0188A2  6ADA               	clrf	fsr2h,c
 26698  0188A4  0E03               	movlw	high _uart2TxBuffer
 26699  0188A6  22DA               	addwfc	fsr2h,f,c
 26700  0188A8  50DF               	movf	indf2,w,c
 26701  0188AA  013D               	movlb	61	; () banked
 26702  0188AC  6FD2               	movwf	210,b	;volatile
 26703                           
 26704                           ; BSR set to: 61
 26705  0188AE  2A2E               	incf	_uart2TxTail^0,f,c	;volatile
 26706                           
 26707                           ; BSR set to: 61
 26708                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26709  0188B0  0E3F               	movlw	63
 26710  0188B2  642E               	cpfsgt	_uart2TxTail^0,c
 26711  0188B4  D001               	goto	l8830
 26712                           
 26713                           ; BSR set to: 61
 26714                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26715  0188B6  6A2E               	clrf	_uart2TxTail^0,c	;volatile
 26716  0188B8                     l8830:
 26717                           
 26718                           ; BSR set to: 61
 26719                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26720  0188B8  2A2D               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26721                           
 26722                           ;mcc_generated_files/uart2.c: 224:     }
 26723  0188BA  0012               	return	
 26724  0188BC                     l701:
 26725                           
 26726                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26727  0188BC  0139               	movlb	57	; () banked
 26728  0188BE  9796               	bcf	150,3,b	;volatile
 26729                           
 26730                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26731  0188C0  0012               	return		;funcret
 26732  0188C2                     __end_of_UART2_Transmit_ISR:
 26733                           	opt callstack 0
 26734                           
 26735 ;; *************** function _UART2_rx_vect_isr *****************
 26736 ;; Defined at:
 26737 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26738 ;; Parameters:    Size  Location     Type
 26739 ;;		None
 26740 ;; Auto vars:     Size  Location     Type
 26741 ;;		None
 26742 ;; Return value:  Size  Location     Type
 26743 ;;                  1    wreg      void 
 26744 ;; Registers used:
 26745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26746 ;; Tracked objects:
 26747 ;;		On entry : 0/0
 26748 ;;		On exit  : 0/0
 26749 ;;		Unchanged: 0/0
 26750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26755 ;;Total ram usage:        0 bytes
 26756 ;; Hardware stack levels used:    1
 26757 ;; Hardware stack levels required when called:    1
 26758 ;; This function calls:
 26759 ;;		Absolute function
 26760 ;;		_UART2_Receive_ISR
 26761 ;; This function is called by:
 26762 ;;		Interrupt level 2
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text139
 26767  018BC0                     __ptext139:
 26768                           	opt callstack 0
 26769  018BC0                     _UART2_rx_vect_isr:
 26770                           	opt callstack 13
 26771                           
 26772                           ;incstack = 0
 26773  018BC0  EE13  F356         	lfsr	1,___inthi_sp
 26774                           
 26775                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26776  018BC4  5016               	movf	_UART2_RxInterruptHandler^0,w,c
 26777  018BC6  1017               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26778  018BC8  1018               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26779  018BCA  B4D8               	btfsc	status,2,c
 26780  018BCC  0011               	retfie		f
 26781                           
 26782                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26783  018BCE  D801               	call	i2u895_48
 26784  018BD0  0011               	retfie		f
 26785  018BD2                     i2u895_48:
 26786  018BD2  0005               	push	
 26787  018BD4  6EFA               	movwf	pclath,c
 26788  018BD6  5016               	movf	_UART2_RxInterruptHandler^0,w,c
 26789  018BD8  6EFD               	movwf	tosl,c
 26790  018BDA  5017               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26791  018BDC  6EFE               	movwf	tosh,c
 26792  018BDE  5018               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26793  018BE0  6EFF               	movwf	tosu,c
 26794  018BE2  50FA               	movf	pclath,w,c
 26795  018BE4  0012               	return		;indir
 26796  018BE6                     __end_of_UART2_rx_vect_isr:
 26797                           	opt callstack 0
 26798                           
 26799 ;; *************** function _UART2_Receive_ISR *****************
 26800 ;; Defined at:
 26801 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26802 ;; Parameters:    Size  Location     Type
 26803 ;;		None
 26804 ;; Auto vars:     Size  Location     Type
 26805 ;;		None
 26806 ;; Return value:  Size  Location     Type
 26807 ;;                  1  [STACK] void 
 26808 ;; Registers used:
 26809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26810 ;; Tracked objects:
 26811 ;;		On entry : 0/0
 26812 ;;		On exit  : 0/0
 26813 ;;		Unchanged: 0/0
 26814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26819 ;;Total ram usage:        0 bytes
 26820 ;; Hardware stack levels used:    1
 26821 ;; This function calls:
 26822 ;;		Nothing
 26823 ;; This function is called by:
 26824 ;;		_UART2_Initialize
 26825 ;;		_UART2_rx_vect_isr
 26826 ;; This function uses a reentrant model
 26827 ;;
 26828                           
 26829                           	psect	text140
 26830  018D0A                     __ptext140:
 26831                           	opt callstack 0
 26832  018D0A                     _UART2_Receive_ISR:
 26833                           	opt callstack 13
 26834                           
 26835                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26836                           
 26837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26838                           ;incstack = 0
 26839  018D0A  0E00               	movlw	low _uart2RxBuffer
 26840  018D0C  242C               	addwf	_uart2RxHead^0,w,c	;volatile
 26841  018D0E  6ED9               	movwf	fsr2l,c
 26842  018D10  6ADA               	clrf	fsr2h,c
 26843  018D12  0E06               	movlw	high _uart2RxBuffer
 26844  018D14  22DA               	addwfc	fsr2h,f,c
 26845  018D16  006F F743 FFDF     	movff	15824,indf2	;volatile
 26846  018D1C  2A2C               	incf	_uart2RxHead^0,f,c	;volatile
 26847                           
 26848                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26849  018D1E  282C               	incf	_uart2RxHead^0,w,c
 26850  018D20  B4D8               	btfsc	status,2,c
 26851                           
 26852                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26853  018D22  6A2C               	clrf	_uart2RxHead^0,c	;volatile
 26854                           
 26855                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26856  018D24  2A2A               	incf	_uart2RxCount^0,f,c	;volatile
 26857                           
 26858                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26859  018D26  0012               	return		;funcret
 26860  018D28                     __end_of_UART2_Receive_ISR:
 26861                           	opt callstack 0
 26862                           
 26863 ;; *************** function _TMR6_ISR *****************
 26864 ;; Defined at:
 26865 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26866 ;; Parameters:    Size  Location     Type
 26867 ;;		None
 26868 ;; Auto vars:     Size  Location     Type
 26869 ;;		None
 26870 ;; Return value:  Size  Location     Type
 26871 ;;                  1    wreg      void 
 26872 ;; Registers used:
 26873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26874 ;; Tracked objects:
 26875 ;;		On entry : 0/0
 26876 ;;		On exit  : 0/0
 26877 ;;		Unchanged: 0/0
 26878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26881 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26882 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26883 ;;Total ram usage:        1 bytes
 26884 ;; Hardware stack levels used:    1
 26885 ;; Hardware stack levels required when called:    2
 26886 ;; This function calls:
 26887 ;;		_TMR6_CallBack
 26888 ;; This function is called by:
 26889 ;;		Interrupt level 2
 26890 ;; This function uses a non-reentrant model
 26891 ;;
 26892                           
 26893                           	psect	text141
 26894  018D7C                     __ptext141:
 26895                           	opt callstack 0
 26896  018D7C                     _TMR6_ISR:
 26897                           	opt callstack 12
 26898                           
 26899                           ;incstack = 0
 26900  018D7C  0060  F0D8  F0E1   	movff	btemp,??_TMR6_ISR
 26901  018D82  EE13  F356         	lfsr	1,___inthi_sp
 26902                           
 26903                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26904  018D86  0139               	movlb	57	; () banked
 26905  018D88  91A9               	bcf	169,0,b	;volatile
 26906                           
 26907                           ; BSR set to: 57
 26908                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26909  018D8A  EC38  F0C6         	call	_TMR6_CallBack	;wreg free
 26910  018D8E  0060  F384  F036   	movff	??_TMR6_ISR,btemp
 26911  018D94  0011               	retfie		f
 26912  018D96                     __end_of_TMR6_ISR:
 26913                           	opt callstack 0
 26914                           
 26915 ;; *************** function _TMR6_CallBack *****************
 26916 ;; Defined at:
 26917 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26918 ;; Parameters:    Size  Location     Type
 26919 ;;		None
 26920 ;; Auto vars:     Size  Location     Type
 26921 ;;		None
 26922 ;; Return value:  Size  Location     Type
 26923 ;;                  1  [STACK] void 
 26924 ;; Registers used:
 26925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26926 ;; Tracked objects:
 26927 ;;		On entry : 3F/39
 26928 ;;		On exit  : 0/0
 26929 ;;		Unchanged: 0/0
 26930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26935 ;;Total ram usage:        0 bytes
 26936 ;; Hardware stack levels used:    1
 26937 ;; Hardware stack levels required when called:    1
 26938 ;; This function calls:
 26939 ;;		Absolute function
 26940 ;;		_TMR6_DefaultInterruptHandler
 26941 ;; This function is called by:
 26942 ;;		_TMR6_ISR
 26943 ;; This function uses a reentrant model
 26944 ;;
 26945                           
 26946                           	psect	text142
 26947  018C70                     __ptext142:
 26948                           	opt callstack 0
 26949  018C70                     _TMR6_CallBack:
 26950                           	opt callstack 12
 26951                           
 26952                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26953                           
 26954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26955                           ;incstack = 0
 26956  018C70  5004               	movf	_TMR6_InterruptHandler^0,w,c
 26957  018C72  1005               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 26958  018C74  1006               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 26959  018C76  B4D8               	btfsc	status,2,c
 26960  018C78  0012               	return	
 26961                           
 26962                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26963  018C7A  D801               	call	u869_48
 26964  018C7C  0012               	return	
 26965  018C7E                     u869_48:
 26966  018C7E  0005               	push	
 26967  018C80  6EFA               	movwf	pclath,c
 26968  018C82  5004               	movf	_TMR6_InterruptHandler^0,w,c
 26969  018C84  6EFD               	movwf	tosl,c
 26970  018C86  5005               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 26971  018C88  6EFE               	movwf	tosh,c
 26972  018C8A  5006               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 26973  018C8C  6EFF               	movwf	tosu,c
 26974  018C8E  50FA               	movf	pclath,w,c
 26975  018C90  0012               	return		;indir
 26976  018C92                     __end_of_TMR6_CallBack:
 26977                           	opt callstack 0
 26978                           
 26979 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26980 ;; Defined at:
 26981 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26982 ;; Parameters:    Size  Location     Type
 26983 ;;		None
 26984 ;; Auto vars:     Size  Location     Type
 26985 ;;  i               1  [STACK] unsigned char 
 26986 ;; Return value:  Size  Location     Type
 26987 ;;                  1  [STACK] void 
 26988 ;; Registers used:
 26989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26990 ;; Tracked objects:
 26991 ;;		On entry : 0/39
 26992 ;;		On exit  : 0/0
 26993 ;;		Unchanged: 0/0
 26994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26999 ;;Total ram usage:        0 bytes
 27000 ;; Hardware stack levels used:    1
 27001 ;; This function calls:
 27002 ;;		Nothing
 27003 ;; This function is called by:
 27004 ;;		_TMR6_Initialize
 27005 ;;		_TMR6_CallBack
 27006 ;; This function uses a reentrant model
 27007 ;;
 27008                           
 27009                           	psect	text143
 27010  018518                     __ptext143:
 27011                           	opt callstack 0
 27012  018518                     _TMR6_DefaultInterruptHandler:
 27013                           	opt callstack 0
 27014                           
 27015                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27016  018518  52E6               	movf	postinc1,f,c
 27017                           
 27018                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 27019                           ;stkvar	_i @ sp[(-1)+0]
 27020                           
 27021                           ;incstack = 0
 27022  01851A  0EFF               	movlw	-1
 27023  01851C  6AE3               	clrf	plusw1,c
 27024  01851E                     l8564:
 27025                           
 27026                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 27027                           ;stkvar	_i @ sp[(-1)+0]
 27028  01851E  0EFF               	movlw	-1
 27029  018520  50E3               	movf	plusw1,w,c
 27030  018522  0D02               	mullw	2
 27031  018524  50F3               	movf	243,w,c
 27032  018526  0F60               	addlw	low _tickCount
 27033  018528  6ED9               	movwf	fsr2l,c
 27034  01852A  6ADA               	clrf	fsr2h,c
 27035  01852C  50DE               	movf	postinc2,w,c
 27036  01852E  10DE               	iorwf	postinc2,w,c
 27037  018530  B4D8               	btfsc	status,2,c
 27038  018532  D00A               	goto	l8568
 27039                           
 27040                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 27041                           ;stkvar	_i @ sp[(-1)+0]
 27042  018534  0EFF               	movlw	-1
 27043  018536  50E3               	movf	plusw1,w,c
 27044  018538  0D02               	mullw	2
 27045  01853A  50F3               	movf	243,w,c
 27046  01853C  0F60               	addlw	low _tickCount
 27047  01853E  6ED9               	movwf	fsr2l,c
 27048  018540  6ADA               	clrf	fsr2h,c
 27049  018542  06DE               	decf	postinc2,f,c
 27050  018544  0E00               	movlw	0
 27051  018546  5ADD               	subwfb	postdec2,f,c
 27052  018548                     l8568:
 27053                           
 27054                           ;mcc_generated_files/tmr6.c: 207:  }
 27055                           ;stkvar	_i @ sp[(-1)+0]
 27056  018548  0EFF               	movlw	-1
 27057  01854A  2AE3               	incf	plusw1,f,c
 27058                           
 27059                           ;stkvar	_i @ sp[(-1)+0]
 27060  01854C  0EFF               	movlw	-1
 27061  01854E  006F FF8C  F036    	movff	plusw1,btemp
 27062  018554  0E0B               	movlw	11
 27063  018556  6436               	cpfsgt	btemp^0,c
 27064  018558  D7E2               	goto	l8564
 27065                           
 27066                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27067  01855A  52E5               	movf	postdec1,f,c
 27068  01855C  0012               	return		;funcret
 27069  01855E                     __end_of_TMR6_DefaultInterruptHandler:
 27070                           	opt callstack 0
 27071                           
 27072 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27073 ;; Defined at:
 27074 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27075 ;; Parameters:    Size  Location     Type
 27076 ;;		None
 27077 ;; Auto vars:     Size  Location     Type
 27078 ;;		None
 27079 ;; Return value:  Size  Location     Type
 27080 ;;                  1    wreg      void 
 27081 ;; Registers used:
 27082 ;;		None
 27083 ;; Tracked objects:
 27084 ;;		On entry : 0/0
 27085 ;;		On exit  : 3F/0
 27086 ;;		Unchanged: 0/0
 27087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27092 ;;Total ram usage:        0 bytes
 27093 ;; Hardware stack levels used:    1
 27094 ;; This function calls:
 27095 ;;		Nothing
 27096 ;; This function is called by:
 27097 ;;		Interrupt level 2
 27098 ;; This function uses a non-reentrant model
 27099 ;;
 27100                           
 27101                           	psect	text144
 27102  018E8C                     __ptext144:
 27103                           	opt callstack 0
 27104  018E8C                     _DMA1_DMASCNT_ISR:
 27105                           	opt callstack 14
 27106                           
 27107                           ;incstack = 0
 27108  018E8C  EE13  F356         	lfsr	1,___inthi_sp
 27109                           
 27110                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27111  018E90  0139               	movlb	57	; () banked
 27112  018E92  91A2               	bcf	162,0,b	;volatile
 27113                           
 27114                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27115  018E94  0100               	movlb	0	; () banked
 27116  018E96  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 27117                           
 27118                           ; BSR set to: 0
 27119  018E98  0011               	retfie		f
 27120  018E9A                     __end_of_DMA1_DMASCNT_ISR:
 27121                           	opt callstack 0
 27122                           
 27123 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27124 ;; Defined at:
 27125 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27126 ;; Parameters:    Size  Location     Type
 27127 ;;		None
 27128 ;; Auto vars:     Size  Location     Type
 27129 ;;		None
 27130 ;; Return value:  Size  Location     Type
 27131 ;;                  1    wreg      void 
 27132 ;; Registers used:
 27133 ;;		None
 27134 ;; Tracked objects:
 27135 ;;		On entry : 0/0
 27136 ;;		On exit  : 3F/39
 27137 ;;		Unchanged: 0/0
 27138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27143 ;;Total ram usage:        0 bytes
 27144 ;; Hardware stack levels used:    1
 27145 ;; This function calls:
 27146 ;;		Nothing
 27147 ;; This function is called by:
 27148 ;;		Interrupt level 2
 27149 ;; This function uses a non-reentrant model
 27150 ;;
 27151                           
 27152                           	psect	text145
 27153  018EA4                     __ptext145:
 27154                           	opt callstack 0
 27155  018EA4                     _DMA1_DMADCNT_ISR:
 27156                           	opt callstack 14
 27157                           
 27158                           ; BSR set to: 0
 27159                           ;incstack = 0
 27160  018EA4  EE13  F356         	lfsr	1,___inthi_sp
 27161                           
 27162                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27163  018EA8  0139               	movlb	57	; () banked
 27164  018EAA  93A2               	bcf	162,1,b	;volatile
 27165                           
 27166                           ; BSR set to: 57
 27167  018EAC  0011               	retfie		f
 27168  018EAE                     __end_of_DMA1_DMADCNT_ISR:
 27169                           	opt callstack 0
 27170                           
 27171 ;; *************** function _DMA1_DMAA_ISR *****************
 27172 ;; Defined at:
 27173 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27174 ;; Parameters:    Size  Location     Type
 27175 ;;		None
 27176 ;; Auto vars:     Size  Location     Type
 27177 ;;		None
 27178 ;; Return value:  Size  Location     Type
 27179 ;;                  1    wreg      void 
 27180 ;; Registers used:
 27181 ;;		None
 27182 ;; Tracked objects:
 27183 ;;		On entry : 0/0
 27184 ;;		On exit  : 3F/39
 27185 ;;		Unchanged: 0/0
 27186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;Total ram usage:        0 bytes
 27192 ;; Hardware stack levels used:    1
 27193 ;; This function calls:
 27194 ;;		Nothing
 27195 ;; This function is called by:
 27196 ;;		Interrupt level 2
 27197 ;; This function uses a non-reentrant model
 27198 ;;
 27199                           
 27200                           	psect	text146
 27201  018EB0                     __ptext146:
 27202                           	opt callstack 0
 27203  018EB0                     _DMA1_DMAA_ISR:
 27204                           	opt callstack 14
 27205                           
 27206                           ; BSR set to: 57
 27207                           ;incstack = 0
 27208  018EB0  EE13  F356         	lfsr	1,___inthi_sp
 27209                           
 27210                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27211  018EB4  0139               	movlb	57	; () banked
 27212  018EB6  97A2               	bcf	162,3,b	;volatile
 27213                           
 27214                           ; BSR set to: 57
 27215  018EB8  0011               	retfie		f
 27216  018EBA                     __end_of_DMA1_DMAA_ISR:
 27217                           	opt callstack 0
 27218                           
 27219 ;; *************** function _DMA1_DMAOR_ISR *****************
 27220 ;; Defined at:
 27221 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27222 ;; Parameters:    Size  Location     Type
 27223 ;;		None
 27224 ;; Auto vars:     Size  Location     Type
 27225 ;;		None
 27226 ;; Return value:  Size  Location     Type
 27227 ;;                  1    wreg      void 
 27228 ;; Registers used:
 27229 ;;		None
 27230 ;; Tracked objects:
 27231 ;;		On entry : 0/0
 27232 ;;		On exit  : 3F/39
 27233 ;;		Unchanged: 0/0
 27234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27239 ;;Total ram usage:        0 bytes
 27240 ;; Hardware stack levels used:    1
 27241 ;; This function calls:
 27242 ;;		Nothing
 27243 ;; This function is called by:
 27244 ;;		Interrupt level 2
 27245 ;; This function uses a non-reentrant model
 27246 ;;
 27247                           
 27248                           	psect	text147
 27249  018EBC                     __ptext147:
 27250                           	opt callstack 0
 27251  018EBC                     _DMA1_DMAOR_ISR:
 27252                           	opt callstack 14
 27253                           
 27254                           ; BSR set to: 57
 27255                           ;incstack = 0
 27256  018EBC  EE13  F356         	lfsr	1,___inthi_sp
 27257                           
 27258                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27259  018EC0  0139               	movlb	57	; () banked
 27260  018EC2  95A2               	bcf	162,2,b	;volatile
 27261                           
 27262                           ; BSR set to: 57
 27263  018EC4  0011               	retfie		f
 27264  018EC6                     __end_of_DMA1_DMAOR_ISR:
 27265                           	opt callstack 0
 27266                           
 27267                           ;
 27268                           ; Interrupt Vector Table @ 0x8
 27269                           ;
 27270                           
 27271                           	psect	ivt0x8
 27272  000008                     __pivt0x8:
 27273                           	opt callstack 0
 27274  000008                     ivt0x8_base:
 27275                           	opt callstack 0
 27276                           
 27277                           ; Vector 0 : SWINT
 27278  000008  63C0               	dw	_Default_ISR shr (0+2)
 27279                           
 27280                           ; Vector 1 : HLVD
 27281  00000A  63C0               	dw	_Default_ISR shr (0+2)
 27282                           
 27283                           ; Vector 2 : OSF
 27284  00000C  63C0               	dw	_Default_ISR shr (0+2)
 27285                           
 27286                           ; Vector 3 : CSW
 27287  00000E  63C0               	dw	_Default_ISR shr (0+2)
 27288                           
 27289                           ; Vector 4 : NVM
 27290  000010  63C0               	dw	_Default_ISR shr (0+2)
 27291                           
 27292                           ; Vector 5 : SCAN
 27293  000012  63C0               	dw	_Default_ISR shr (0+2)
 27294                           
 27295                           ; Vector 6 : CRC
 27296  000014  63C0               	dw	_Default_ISR shr (0+2)
 27297                           
 27298                           ; Vector 7 : IOC
 27299  000016  63C0               	dw	_Default_ISR shr (0+2)
 27300                           
 27301                           ; Vector 8 : INT0
 27302  000018  639B               	dw	_INT0_ISR shr (0+2)
 27303                           
 27304                           ; Vector 9 : ZCD
 27305  00001A  63C0               	dw	_Default_ISR shr (0+2)
 27306                           
 27307                           ; Vector 10 : AD
 27308  00001C  623B               	dw	_ADCC_ISR shr (0+2)
 27309                           
 27310                           ; Vector 11 : ADT
 27311  00001E  5FD3               	dw	_ADCC_ThresholdISR shr (0+2)
 27312                           
 27313                           ; Vector 12 : CMP1
 27314  000020  63C0               	dw	_Default_ISR shr (0+2)
 27315                           
 27316                           ; Vector 13 : SMT1
 27317  000022  63C0               	dw	_Default_ISR shr (0+2)
 27318                           
 27319                           ; Vector 14 : SMT1PRA
 27320  000024  63C0               	dw	_Default_ISR shr (0+2)
 27321                           
 27322                           ; Vector 15 : SMT1PRW
 27323  000026  63C0               	dw	_Default_ISR shr (0+2)
 27324                           
 27325                           ; Vector 16 : DMA1SCNT
 27326  000028  63A3               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27327                           
 27328                           ; Vector 17 : DMA1DCNT
 27329  00002A  63A9               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27330                           
 27331                           ; Vector 18 : DMA1OR
 27332  00002C  63AF               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27333                           
 27334                           ; Vector 19 : DMA1A
 27335  00002E  63AC               	dw	_DMA1_DMAA_ISR shr (0+2)
 27336                           
 27337                           ; Vector 20 : SPI1RX
 27338  000030  63C0               	dw	_Default_ISR shr (0+2)
 27339                           
 27340                           ; Vector 21 : SPI1TX
 27341  000032  63C0               	dw	_Default_ISR shr (0+2)
 27342                           
 27343                           ; Vector 22 : SPI1
 27344  000034  63C0               	dw	_Default_ISR shr (0+2)
 27345                           
 27346                           ; Vector 23 : I2C1RX
 27347  000036  63C0               	dw	_Default_ISR shr (0+2)
 27348                           
 27349                           ; Vector 24 : I2C1TX
 27350  000038  63C0               	dw	_Default_ISR shr (0+2)
 27351                           
 27352                           ; Vector 25 : I2C1
 27353  00003A  63C0               	dw	_Default_ISR shr (0+2)
 27354                           
 27355                           ; Vector 26 : I2C1E
 27356  00003C  63C0               	dw	_Default_ISR shr (0+2)
 27357                           
 27358                           ; Vector 27 : U1RX
 27359  00003E  62DC               	dw	_UART1_rx_vect_isr shr (0+2)
 27360                           
 27361                           ; Vector 28 : U1TX
 27362  000040  62D2               	dw	_UART1_tx_vect_isr shr (0+2)
 27363                           
 27364                           ; Vector 29 : U1E
 27365  000042  63C0               	dw	_Default_ISR shr (0+2)
 27366                           
 27367                           ; Vector 30 : U1
 27368  000044  63C0               	dw	_Default_ISR shr (0+2)
 27369                           
 27370                           ; Vector 31 : TMR0
 27371  000046  63C0               	dw	_Default_ISR shr (0+2)
 27372                           
 27373                           ; Vector 32 : TMR1
 27374  000048  63C0               	dw	_Default_ISR shr (0+2)
 27375                           
 27376                           ; Vector 33 : TMR1G
 27377  00004A  63C0               	dw	_Default_ISR shr (0+2)
 27378                           
 27379                           ; Vector 34 : TMR2
 27380  00004C  63C0               	dw	_Default_ISR shr (0+2)
 27381                           
 27382                           ; Vector 35 : CCP1
 27383  00004E  63C0               	dw	_Default_ISR shr (0+2)
 27384                           
 27385                           ; Vector 36 : Undefined
 27386  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27387                           
 27388                           ; Vector 37 : NCO1
 27389  000052  63C0               	dw	_Default_ISR shr (0+2)
 27390                           
 27391                           ; Vector 38 : CWG1
 27392  000054  63C0               	dw	_Default_ISR shr (0+2)
 27393                           
 27394                           ; Vector 39 : CLC1
 27395  000056  63C0               	dw	_Default_ISR shr (0+2)
 27396                           
 27397                           ; Vector 40 : INT1
 27398  000058  639F               	dw	_INT1_ISR shr (0+2)
 27399                           
 27400                           ; Vector 41 : CMP2
 27401  00005A  63C0               	dw	_Default_ISR shr (0+2)
 27402                           
 27403                           ; Vector 42 : DMA2SCNT
 27404  00005C  63C0               	dw	_Default_ISR shr (0+2)
 27405                           
 27406                           ; Vector 43 : DMA2DCNT
 27407  00005E  63C0               	dw	_Default_ISR shr (0+2)
 27408                           
 27409                           ; Vector 44 : DMA2OR
 27410  000060  63C0               	dw	_Default_ISR shr (0+2)
 27411                           
 27412                           ; Vector 45 : DMA2A
 27413  000062  63C0               	dw	_Default_ISR shr (0+2)
 27414                           
 27415                           ; Vector 46 : I2C2RX
 27416  000064  63C0               	dw	_Default_ISR shr (0+2)
 27417                           
 27418                           ; Vector 47 : I2C2TX
 27419  000066  63C0               	dw	_Default_ISR shr (0+2)
 27420                           
 27421                           ; Vector 48 : I2C2
 27422  000068  63C0               	dw	_Default_ISR shr (0+2)
 27423                           
 27424                           ; Vector 49 : I2C2E
 27425  00006A  63C0               	dw	_Default_ISR shr (0+2)
 27426                           
 27427                           ; Vector 50 : U2RX
 27428  00006C  62F0               	dw	_UART2_rx_vect_isr shr (0+2)
 27429                           
 27430                           ; Vector 51 : U2TX
 27431  00006E  62E6               	dw	_UART2_tx_vect_isr shr (0+2)
 27432                           
 27433                           ; Vector 52 : U2E
 27434  000070  63C0               	dw	_Default_ISR shr (0+2)
 27435                           
 27436                           ; Vector 53 : U2
 27437  000072  63C0               	dw	_Default_ISR shr (0+2)
 27438                           
 27439                           ; Vector 54 : TMR3
 27440  000074  63C0               	dw	_Default_ISR shr (0+2)
 27441                           
 27442                           ; Vector 55 : TMR3G
 27443  000076  63C0               	dw	_Default_ISR shr (0+2)
 27444                           
 27445                           ; Vector 56 : TMR4
 27446  000078  63C0               	dw	_Default_ISR shr (0+2)
 27447                           
 27448                           ; Vector 57 : CCP2
 27449  00007A  63C0               	dw	_Default_ISR shr (0+2)
 27450                           
 27451                           ; Vector 58 : Undefined
 27452  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27453                           
 27454                           ; Vector 59 : CWG2
 27455  00007E  63C0               	dw	_Default_ISR shr (0+2)
 27456                           
 27457                           ; Vector 60 : CLC2
 27458  000080  63C0               	dw	_Default_ISR shr (0+2)
 27459                           
 27460                           ; Vector 61 : INT2
 27461  000082  63C0               	dw	_Default_ISR shr (0+2)
 27462                           
 27463                           ; Vector 62 : Undefined
 27464  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27465                           
 27466                           ; Vector 63 : Undefined
 27467  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27468                           
 27469                           ; Vector 64 : Undefined
 27470  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27471                           
 27472                           ; Vector 65 : Undefined
 27473  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27474                           
 27475                           ; Vector 66 : Undefined
 27476  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27477                           
 27478                           ; Vector 67 : Undefined
 27479  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27480                           
 27481                           ; Vector 68 : Undefined
 27482  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27483                           
 27484                           ; Vector 69 : Undefined
 27485  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27486                           
 27487                           ; Vector 70 : TMR5
 27488  000094  6081               	dw	_TMR5_ISR shr (0+2)
 27489                           
 27490                           ; Vector 71 : TMR5G
 27491  000096  63C0               	dw	_Default_ISR shr (0+2)
 27492                           
 27493                           ; Vector 72 : TMR6
 27494  000098  635F               	dw	_TMR6_ISR shr (0+2)
 27495                           
 27496                           ; Vector 73 : CCP3
 27497  00009A  63C0               	dw	_Default_ISR shr (0+2)
 27498                           
 27499                           ; Vector 74 : CWG3
 27500  00009C  63C0               	dw	_Default_ISR shr (0+2)
 27501                           
 27502                           ; Vector 75 : CLC3
 27503  00009E  63C0               	dw	_Default_ISR shr (0+2)
 27504                           
 27505                           ; Vector 76 : Undefined
 27506  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27507                           
 27508                           ; Vector 77 : Undefined
 27509  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27510                           
 27511                           ; Vector 78 : Undefined
 27512  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27513                           
 27514                           ; Vector 79 : Undefined
 27515  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27516                           
 27517                           ; Vector 80 : CCP4
 27518  0000A8  63C0               	dw	_Default_ISR shr (0+2)
 27519                           
 27520                           ; Vector 81 : CLC4
 27521  0000AA  63C0               	dw	_Default_ISR shr (0+2)
 27522  0000AC                     ivt0x8_undefint:
 27523                           	opt callstack 0
 27524  0000AC  00FF               	reset	
 27525                           
 27526                           	psect	text148
 27527  000000                     __ptext148:
 27528                           	opt callstack 0
 27529                           
 27530                           	psect	rparam
 27531  0000                     
 27532                           	psect	temp
 27533  000036                     btemp:
 27534                           	opt callstack 0
 27535  000036                     	ds	32
 27536  0000                     wtemp0	set	btemp
 27537  0000                     wtemp1	set	btemp+2
 27538  0000                     wtemp2	set	btemp+4
 27539  0000                     wtemp3	set	btemp+6
 27540  0000                     wtemp4	set	btemp+8
 27541  0000                     wtemp5	set	btemp+10
 27542  0000                     wtemp8	set	btemp+1
 27543  0000                     ttemp0	set	btemp
 27544  0000                     ttemp1	set	btemp+3
 27545  0000                     ttemp2	set	btemp+6
 27546  0000                     ttemp3	set	btemp+9
 27547  0000                     ttemp5	set	btemp+1
 27548  0000                     ttemp6	set	btemp+4
 27549  0000                     ttemp7	set	btemp+8
 27550  0000                     ltemp0	set	btemp
 27551  0000                     ltemp1	set	btemp+4
 27552  0000                     ltemp2	set	btemp+8
 27553  0000                     lltemp0	set	btemp
 27554  0000                     lltemp1	set	btemp+8
 27555  0000                     lltemp2	set	btemp+16
 27556  0000                     lltemp3	set	btemp+24
 27557                           tosu	equ	0x3FFF
 27558                           tosh	equ	0x3FFE
 27559                           tosl	equ	0x3FFD
 27560                           stkptr	equ	0x3FFC
 27561                           pclatu	equ	0x3FFB
 27562                           pclath	equ	0x3FFA
 27563                           pcl	equ	0x3FF9
 27564                           tblptru	equ	0x3FF8
 27565                           tblptrh	equ	0x3FF7
 27566                           tblptrl	equ	0x3FF6
 27567                           tablat	equ	0x3FF5
 27568                           prodh	equ	0x3FF4
 27569                           prodl	equ	0x3FF3
 27570                           indf0	equ	0x3FEF
 27571                           postinc0	equ	0x3FEE
 27572                           postdec0	equ	0x3FED
 27573                           preinc0	equ	0x3FEC
 27574                           plusw0	equ	0x3FEB
 27575                           fsr0h	equ	0x3FEA
 27576                           fsr0l	equ	0x3FE9
 27577                           wreg	equ	0x3FE8
 27578                           indf1	equ	0x3FE7
 27579                           postinc1	equ	0x3FE6
 27580                           postdec1	equ	0x3FE5
 27581                           preinc1	equ	0x3FE4
 27582                           plusw1	equ	0x3FE3
 27583                           fsr1h	equ	0x3FE2
 27584                           fsr1l	equ	0x3FE1
 27585                           bsr	equ	0x3FE0
 27586                           indf2	equ	0x3FDF
 27587                           postinc2	equ	0x3FDE
 27588                           postdec2	equ	0x3FDD
 27589                           preinc2	equ	0x3FDC
 27590                           plusw2	equ	0x3FDB
 27591                           fsr2h	equ	0x3FDA
 27592                           fsr2l	equ	0x3FD9
 27593                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        250
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      5      58
    BANK0           160      5     134
    BANK1           256      0     251
    BANK2           256      0     252
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4831_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3965tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323330
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (19) _switch_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      86       5       83.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      5      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     655      58        0.0%
DATA                 0      0     655       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 20 01:47:07 2019

                     _SPI1_Exchange8bit 8C92                __end_of_set_display_info 8CEC  
                                     _C 0200                                       _D 0400  
                                     _P 0094                                       _R 00A2  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 8A7E            __end_of_start_switch_handler 8E2E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 8EEE                             __CFG_LVP$ON 000000  
                                   l171 8E02                                     l701 88BC  
                                   l581 8890                                     l835 8CA0  
                                   _GIE 01FE97                                     _abs 8446  
                                   _pad 7068                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 8DAE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8C2C                      _UART1_Transmit_ISR 886A  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8C4E  
                          __CFG_ZCD$OFF 000000                                    l1028 861E  
                                  l1331 826A                                    l1252 434A  
                                  l1244 419A                                    l2310 6904  
                                  l1254 4350                                    l1604 8CE8  
                                  l1471 7B58                                    l2272 76D2  
                                  l1560 60BE                                    l1650 3756  
                                  l1547 86BC                                    l1467 78E6  
                                  l2283 6A66                                    l2276 6992  
                                  l1812 123A                                    l1564 7286  
                                  l1556 5F62                                    l2702 8486  
                                  l2550 31CC                                    l1486 86F0  
                                  l2631 2A10                                    l1841 066A  
                                  l2562 305C                                    l1930 4590  
                                  l1915 4CB6                                    l1756 70C4  
                                  l2733 5A46                                    l1693 647C  
                  _ADCC_StartConversion 8E2E                                    l2671 62BC  
                                  l6112 79BA                                    l1776 3DB4  
                                  l7000 6A2E                                    l1856 0B1A  
                                  l6114 79DC                                    l2595 3CCC  
                                  l2843 5EA6                                    l6300 309C  
                                  l6212 2D46                                    l6140 2A70  
                                  l1980 21E6                                    l6310 30C4  
                                  l6222 2DB8                                    l6150 2AC6  
                                  l2694 6612                                    l1894 5388  
                                  l2871 7CF2                                    l7008 6A64  
                                  l7016 83D6                                    l6232 2DF4  
                                  l6152 2AF6                                    l6400 65B4  
                                  l7114 83A8                                    l6314 30CA  
                                  l6226 2DD8                                    l6170 2BA0  
                                  l6146 2AB0                                    l7050 689C  
                                  l7042 6870                                    l7026 67EE  
                                  l2858 7D76                                    l6340 316C  
                                  l6260 2EDC                                    l6228 2DEA  
                                  l6236 2E24                                    l6164 2B60  
                                  l7052 68B2                                    l7044 688C  
                                  l2797 6F46                                    l6502 5612  
                                  l6342 317C                                    l6326 3128  
                                  l6254 2EC0                                    l6182 2C08  
                                  l6174 2BB6                                    l6158 2B2E  
                                  l6406 660A                                    l6520 572A  
                                  l6336 3154                                    l6256 2ED2  
                                  l6264 2F0E                                    l6176 2BE6  
                                  l6424 7D66                                    l6602 38D0  
                                  l7066 666A                                    l7090 6BF8  
                                  l8036 8C02                                    l6508 5658  
                                  l6540 5AAE                                    l6620 398E  
                                  l6348 31AC                                    l6276 2FE6  
                                  l6452 4B42                                    l8116 86FA  
                                  l9014 7DC4                                    l6382 8476  
                                  l6702 3C48                                    l6614 3954  
                                  l6606 38E6                                    l6294 307E  
                                  l6286 3040                                    l6278 300C  
                                  l6462 4C48                                    l6454 4B92  
                                  l6438 4A24                                    l7078 673C  
                                  l9008 7DB4                                    l6608 3916  
                                  l6296 3090                                    l6480 7CE2  
                                  l6714 3CA0                                    l6458 4BDA  
                                  l7098 6CA4                                    l8162 6178  
                                  l8154 610C                                    l9300 7C3A  
                                  l6556 5BE2                                    l6548 5B36  
                                  l6900 6AAA                                    l6716 3CB0  
                                  l6708 3C78                                    l6628 39A8  
                                  l6820 2804                                    l6740 228C  
                                  l6732 2246                                    l6396 65B0  
                                  l8164 6186                                    l6662 3B06  
                                  l6654 3AD4                                    l6646 3A6E  
                                  l6638 3A38                                    l6582 37F2  
                                  l6830 2846                                    l6750 2314  
                                  l6742 22BC                                    l8174 61E8  
                                  l8166 619C                                    l7704 5A36  
                                  l6496 55BE                                    l6920 6B70  
                                  l6672 3B48                                    l6648 3A80  
                                  l6656 3AD8                                    l6576 37B2  
                                  l6840 2890                                    l6760 238A  
                                  l7720 5D18                                    l8176 6206  
                                  l8168 61BA                                    l9250 6E5C  
                                  l6906 6ACA                                    l6682 3B92  
                                  l6586 3808                                    l6826 2820  
                                  l6738 2286                                    l7722 5D84  
                                  l8186 623A                                    l8178 621C  
                                  l9332 3DEE                                    l9324 3DA4  
                                  l6940 6F70                                    l6668 3B22  
                                  l6596 3890                                    l6588 3838  
                                  l6844 2896                                    l6756 2354  
                                  l9404 0146                                    l8196 629C  
                                  l7670 5818                                    l9262 7A46  
                                  l6686 3B98                                    l6854 290A  
                                  l6758 235A                                    l9414 01EA  
                                  l9422 0258                                    l9272 7094  
                                  l9336 3E0C                                    l6928 6BA4  
                                  l6944 6F82                                    l6696 3C0C  
                                  l6872 29BE                                    l6864 297A  
                                  l6768 23AC                                    l9512 06F0  
                                  l9432 02FC                                    l9440 032A  
                                  l9416 0216                                    l8704 3488  
                                  l8642 86D2                                    l7690 5932  
                                  l9266 7A84                                    l9282 710A  
                                  l9370 410C                                    l9346 401E  
                                  l6874 29D8                                    l6858 2950  
                                  l9602 0EA2                                    l9418 022C  
                                  l8722 3724                                    l8730 3736  
                                  l8564 851E                                    l7684 58B8  
                                  l7668 57F6                                    l9276 70BC  
                                  l6948 6F9A                                    l9292 74C6  
                                  l9508 06B8                                    l9452 0406  
                                  l8716 365C                                    l8708 3550  
                                  l8830 88B8                                    l7694 599A  
                                  l7686 58D0                                    l7678 588C  
                                  l9286 7154                                    l9278 70CE  
                                  l9366 40D0                                    l6894 6A94  
                                  l6966 704E                                    l6958 701A  
                                  l6982 76D0                                    l6974 765A  
                                  l6990 6950                                    l9630 0FF0  
                                  l9614 0F3A                                    l9550 0B12  
                                  l9542 0A48                                    l9518 077A  
                                  l9470 0554                                    l9454 0470  
                                  l9710 542A                                    l9702 53BE  
                                  l8568 8548                                    l8808 888C  
                                  l7688 58F4                                    l9640 1092  
                                  l9552 0B34                                    l9528 0926  
                                  l9448 0396                                    l9384 00AC  
                                  l9720 54E0                                    l9298 7C0E  
                                  l6978 769C                                    l9650 10E2  
                                  l9490 05F6                                    l9482 0594  
                                  l9474 057C                                    l9458 04D2  
                                  l9706 53FA                                    l8682 3206  
                                  l8754 632A                                    l8746 62FE  
                                  l6996 69E0                                    l9628 0FD6  
                                  l9492 0602                                    l9476 058E  
                                  l9396 00F0                                    l9724 551C  
                                  l9716 54B4                                    l8692 3350  
                                  l9566 0C32                                    l9814 474C  
                                  l9822 47D2                                    l9902 165C  
                                  l8758 6342                                    l8856 8606  
                                  l9920 17E0                                    l9912 16F4  
                                  l8696 3456                                    l8952 7E04  
                                  l9666 119A                                    l9578 0CBA  
                                  l9586 0D24                                    l9594 0D90  
                                  l9746 4D02                                    l9738 4CA6  
                                  l9756 4EF8                                    l9924 1834  
                                  l9860 1326                                    l9686 530A  
                                  l9838 48BC                                    l9790 45F6  
                                  l9862 1360                                    STR_1 FF66  
                                  l9784 45BA                                    l9944 1A46  
                                  l9936 198E                                    l9864 1376  
                                  STR_2 FF97                                    STR_3 FFD2  
                                  l9778 4580                                    l9882 14A8  
                                  STR_4 FF55                                    STR_5 FF77  
                                  l9948 1A7A                                    l9884 14E2  
                                  STR_6 FF97                                    STR_7 FFD2  
                                  l9798 4656                                    l9886 14F8  
                                  STR_8 FF44                                    STR_9 FFA6  
                                  l9968 1BDA                                    l9978 1C88  
                                  l9988 1DAA                                    l9998 1E60  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  u5010 3118                                    _T2PR 003FAB  
                                  u5015 3108                                    u5040 3138  
                                  u5200 6602                                    u5210 6604  
                                  u5140 845A                                    u6100 291E  
                                  u6005 25F6                                    u6110 2964  
                                  u5150 6534                                    u6015 27BE  
                                  u5320 4AE8                                    u5240 7D24  
                                  u5080 87D0                                    u5400 7CA2  
                                  u5305 4A42                                    u4610 7A0A  
                                  u6050 2888                                    u5306 4A48  
                                  u5250 7D26                                    u5090 87D2  
                                  _T6PR 003F93                                    u5155 652A  
                                  u5307 4A56                                    u5420 8830  
                                  u5500 5684                                    u5340 4BC0  
                                  _PMD0 0039C0                                    u5325 4ADE  
                                  _PMD1 0039C1                                    u5430 8832  
                                  u6230 6FC6                                    u5270 49BC  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5520 5762                                    u5600 5B30  
                                  u6160 6AF6                                    u4800 2E1C  
                                  u5280 4A08                                    u4640 8800  
                                  _PMD4 0039C4                                    u4617 79FC  
                                  u5345 4BB6                                    _PMD5 0039C5  
                                  u5450 55B8                                    u5610 5B62  
                                  u6250 703A                                    u6090 28E4  
                                  u4810 2E3C                                    u4650 8802  
                                  u5370 8596                                    _PMD6 0039C6  
                                  u5195 65E4                                    u5275 49B2  
                                  _PMD7 0039C7                                    u5540 57B4  
                                  u6180 6B90                                    u6500 6774  
                                  u5380 8598                                    u4805 2E0C  
                                  u5470 560E                                    u5630 5C1A  
                                  u6350 83D2                                    u4910 302E  
                                  u4750 2D6C                                    u6430 68BA  
                                  u5390 7CA0                                    u6095 28D4  
                                  u4760 2D8C                                    u6360 67CE  
                                  u6520 6BF2                                    u5481 5618  
                                  u4761 2D86                                    u5490 5652  
                                  u5650 5C6C                                    u5570 5AA8  
                                  u6290 76CC                                    u6450 68E4  
                                  u6370 67E2                                    u6530 6C24  
                                  u6380 681C                                    u8300 6230  
                                  u6365 67C4                                    u6461 662A  
                                  u5590 5AFE                                    u5830 3B8A  
                                  u4950 30A2                                    u4870 2F04  
                                  u6470 6664                                    u6550 6CDC  
                                  u9200 3D08                                    u6480 6696  
                                  u8225 85D2                                    u6385 6812  
                                  u6570 8384                                    u4970 30BC  
                                  u4778 2D8E                                    u4875 2EF4  
                                  u8340 7FC2                                    u6580 83A4  
                                  u9300 408C                                    u9220 3D78  
                                  u9070 6E50                                    u9310 4090  
                                  u5870 3BE6                                    u5790 3B00  
                                  u9150 7540                                    u9240 3D8A  
                                  u5880 3C20                                    u9400 0194  
                                  u9090 6ECC                                    u9330 40A6  
                                  u5890 3C5C                                    u9410 0196  
                                  u7730 5DB2                                    u8514 3242  
                                  u5875 3BD6                                    u8515 323C  
                                  u7660 5888                                    u9260 3DDA  
                                  u5980 239A                                    u8365 7FF6  
                                  u9157 7532                                    u8366 7FF8  
                                  u8358 7FC4                                    u9270 4032  
                                  u9190 3D06                                    u8534 3470  
                                  u8535 346A                                    u7680 59E0  
                                  u9520 0562                                    u9440 02A6  
                                  u9281 4062                                    u7737 5DA4  
                                  u7690 59E2                                    u9290 4078  
                                  u9450 02A8                                    u9370 00DA  
                                  u7770 5E4C                                    u8554 356A  
                                  u8474 31F0                                    u9291 4076  
                                  u5995 252E                                    u8555 3564  
                                  u8475 31EA                                    u7780 5E7A  
                                  u8580 3594                                    u9550 05C6  
                                  u8574 358C                                    u8494 3220  
                                  u8590 62DC                                    u7775 5E46  
                                  u8575 3586                                    u8495 321A  
                                  u7777 5E38                                    u9490 050E  
                                  _PLLR 01CEE0                                    u7787 5E6C  
                                  u9820 10B8                                    u9660 0A18  
                                  u9590 0648                                    u9840 116E  
                                  u9760 0EE4                                    u9920 5420  
                                  u9850 1170                                    u9930 5466  
                                  u9960 5542                                    u9937 5458  
                                  u9980 4C8C                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8916  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AC  
                                  _atoi 57DC                                    _ctoa 7BF0  
                                  _main 4156                                    _dtoa 3CD6  
                                  _nanf 80E2                                    _seed 009A  
                                  _prec 0021                                    _nout 0098  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 529E  
                                  btemp 0036                                    _utoa 4C72  
                                  _xtoa 454C                  __end_of_check_adc_scan 8EE6  
                         ___fpclassifyf 6486                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0027               __end_of_SPI1_Exchange8bit 8CB0  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8B70  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0056  
                      __end_of_INT0_ISR 8E7A                        __end_of_INT1_ISR 8E8A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 78EE  
         __end_of_OSCILLATOR_Initialize 8E08                                   l10012 1FDC  
                                 l10032 216E                                   l10026 2114  
                                 l10042 2192                                   l10036 2172  
                                 l10070 5108                                   l10310 605A  
                                 l10064 504A                                   l10084 5220  
                                 l10076 5172                                   l10148 7946  
                                 l10404 4354                                   l10182 719E  
                                 l10406 4382                                   l10096 77C4  
                                 l10360 41A2                                   l10098 7806  
                                 l10426 43DA                                   l10418 43B6  
                                 l10362 41B4                                   l10354 417C  
                                 l10436 4506                                   l10356 4184  
                                 l10448 453A                                   l10298 5F32  
                                 PRLOCK 0039EF                         __end_of___aodiv 57DC  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 31D6                                   _ADCLK 003EFF  
                       __end_of___aomod 5C90                                   _ADPCH 003EF1  
                       __end_of___fldiv 3CD6                                   _ADREF 003EFD  
                       __end_of___awdiv 6BBE                         __end_of___flneg 8400  
                                 STR_10 FFA6                                   STR_11 FF32  
                                 STR_20 FFBF                                   STR_12 FFFC  
                                 STR_13 FFF9                                   STR_21 FF88  
                                 STR_22 FF88                                   STR_23 FF88  
                                 STR_15 FFB3                                   STR_16 FFC9  
                                 STR_24 FEE1                                   STR_33 FF0B  
                                 STR_17 FF0C                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF0C                                   STR_42 FFEA  
                                 STR_34 FFD7                                   STR_26 FF1F  
                                 STR_51 FFED                                   STR_35 FFDF  
                                 STR_19 FFBF                                   STR_27 FEF9  
                                 STR_44 FFEA                         __end_of___awmod 7068  
                                 STR_53 FFED                                   STR_61 FFF6  
                                 STR_46 FFF0                                   STR_38 FFDB  
                                 STR_63 FFF6                                   STR_39 FFE3  
                                 STR_48 FFF0                                   STR_56 FFF3  
                                 _ADRPT 003EEC                                   STR_65 FFE7  
                                 STR_58 FFF3                                   STR_67 FFE7  
                       __end_of___flmul 2A1A                         __end_of___flsub 8446  
                       __end_of___fltol 690E                                   u10011 4F3A  
                                 u10020 4F50                                   u10100 46A2  
                                 u10021 4F4E                                   u10030 4F64  
                                 u10110 46A4                                   u10040 4F68  
                                 u10200 4848                                   u10210 484C  
                                 u10130 4702                                   u10140 4704  
                                 u10060 4566                                   u10310 1540  
                                 u10160 47CE                                   u10400 18BC  
                                 u10320 1542                                   u10170 47EE  
                                 u10090 464E                                   u10330 1568  
                                 u10500 1EB4                                   u10260 13BE  
                                 u10181 481E                                   u10165 47B0  
                                 u10190 4834                                   u10430 1B34  
                                 u10270 13C0                                   u10191 4832  
                                 u10520 2064                                   u10440 1B36  
                                 u10280 13E6                                   u10610 7926  
                       __end_of___lodiv 679C                                   u10380 1748  
                                 u10700 60AA                                   u10710 60AC  
                                 _U1P1H 003DED                                   u10580 5294  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   _U1P3L 003DF0  
                                 _U2P1L 003DD4                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                       __end_of___lomod 6CFE                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0007                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U1TXB 003DEA                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 005B  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR5H 003F99                                   _TMR5L 003F98  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR 8F00                 __size_of_clear_adc_scan 0006  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8B48  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 8260  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR 8D96  
                          _DMA1CON1bits 003BFD                                   _flags 0023  
                                 _fputc 6E2C              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 85A2                                   _fputs 7A36  
                       __end_of_isdigit 883C                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0056                                   _srand 8744  
                                 _width 001F                                   _putch 8D60  
                       __end_of_islower 87DC                         __end_of_isspace 83B8  
              _INT1_SetInterruptHandler 8A7E                         __end_of_isupper 880C  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0036                                   ltemp1 003A  
                                 ltemp2 003E                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0036                                   ttemp1 0039  
                                 ttemp2 003C                                   ttemp3 003F  
                                 ttemp5 0037                                   ttemp6 003A  
                                 ttemp7 003E                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8A2E             _UART1_SetRxInterruptHandler 8A06  
                                 wtemp0 0036                                   wtemp1 0038  
                                 wtemp2 003A                                   wtemp3 003C  
                                 wtemp4 003E                                   wtemp5 0040  
                                 wtemp8 0037                         __end_of_sprintf 7394  
                       __end_of_tolower 7D80                         __end_of_strncmp 5EB0  
                       __end_of_toupper 7CFC                     ??_UART1_tx_vect_isr 005B  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8B96  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 84D2  
                 __end_of_ringBufS_init 898E                         __initialization 7552  
                     _UART2_rx_vect_isr 8BC0                            __end_of_atoi 5A50  
                          __end_of_ctoa 7C78                            __end_of_main 454C  
                          __end_of_dtoa 4156                            __end_of_nanf 8144  
                          __end_of_stoa 555C                            __end_of_utoa 4FB2  
                          __end_of_xtoa 4906                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0056                 __end_of_TMR2_Initialize 8DC6  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 8A56  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 005B  
             __end_of_UART1_tx_vect_isr 8B6E                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 88C2                         _PWM8_Initialize 8DDC  
                      _UART1_Initialize 807E                       _UART2_tx_vect_isr 8B98  
                    _UART2_Transmit_ISR 8896                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 801A                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 85A2                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0056  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 8252                    _start_switch_handler 8E1C  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8E5E                                  u410_48 8C5C  
                                _SCANPR 0039F7                                  u408_48 8C3A  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u840_20 8B26  
                                u840_26 8B28                                  u872_28 8C18  
                                u884_44 7DE4                                  u884_45 7DDE  
                                u869_48 8C7E                        __end_of___xxtofl 62C6  
 __end_of_ADCC_DischargeSampleCapacitor 8ECE  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8EC6                __end_of_send_lcd_cmd_dma 8366  
                   ??_UART2_tx_vect_isr 005B               __end_of_UART2_rx_vect_isr 8BE6  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8E9A  
                      _UART2_Initialize 81A6                                  _WaitMs 86D8  
                       _conv_raw_result 31D6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 690E  
                                ___fleq 7618                       _ADCC_ThresholdISR 7F4C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7ACE  
                                _efgtoa 0000                                  _floorf 4906  
                    ?_ADCC_ThresholdISR 0056                                  _memset 4FB2  
                  __size_of_help_button 0038                                  clear_0 759E  
                                clear_1 75B2                                  clear_2 75C4  
                                clear_3 75D0                                  clear_4 75DC  
                                clear_5 75E8                                  clear_6 75F4  
                                clear_7 7600                                  _printf 8144  
                    _eaDogM_WriteString 78EE                                  _strcpy 747E  
                             ?_ADCC_ISR 0056                                  _strlen 7994  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7EE2  
                        _PMD_Initialize 8E08               __end_of_UART2_tx_vect_isr 8BBE  
                                lltemp0 0036                                  lltemp1 003E  
                                lltemp2 0046                                  lltemp3 004E  
                   ??_ADCC_ThresholdISR 0056                  __end_of_start_adc_scan 807E  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 82BA  
                      __end_of_vfprintf 7844                              _StartTimer 8664  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8518  
                     _SYSTEM_Initialize 848C                              __accesstop 0060  
               __end_of__initialization 7612                               ?_INT0_ISR 0056  
                             ?_INT1_ISR 0056                    __end_of_display_help 8EDE  
                  __end_of_display_info 8ED6               __end_of_CLKREF_Initialize 8EA4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 85E4                   _set_temp_display_help 8E40  
             __end_of_ADCC_ThresholdISR 7FB4                  __end_of_ringBufS_flush 7B60  
                        __pcstackCOMRAM 0056                              ___inthi_sp 0F56  
                            ___intlo_sp 17AB                            __pidataBANK0 8624  
                          __pidataBANK1 76DC                               ?_TMR5_ISR 0056  
                             ?_TMR6_ISR 0056                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6F50                           __end_of_fputs 7ACE  
                         __end_of_srand 8778                   __end_of_TMR5_CallBack 8C2C  
                         __end_of_putch 8D7A                 __end_of_PWM8_Initialize 8DF2  
               __end_of_TMR6_Initialize 88EC                       _adc_int_t_handler 7D80  
                __end_of_PMD_Initialize 8E1C                              ??_ADCC_ISR 0056  
                 __end_of_TMR6_CallBack 8C92             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8EB0  
                        _clear_adc_scan 8EEE                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0016               __end_of_SYSTEM_Initialize 84D2  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5EB0  
               __end_of_conv_raw_result 375C                   _INT0_InterruptHandler 001C  
                            ??_INT0_ISR 0056                              ??_INT1_ISR 0056  
                     __end_of_TimerDone 8C0A                        _DMA1_DMADCNT_ISR 8EA4  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8D44  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8A56  
               __end_of_ADCC_Initialize 7F4C                              ??_TMR5_ISR 00E2  
             __end_of_adc_int_t_handler 7DFE                              ??_TMR6_ISR 00E1  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8AF6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8ACE                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8CEC  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8EF4                          ?_DMA1_DMAA_ISR 0056  
                      _DMA1_DMASCNT_ISR 8E8C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0056  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 8624  
               __size_of_switch_handler 0004       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 8D96                                 __Lparam 0000  
              __end_of_UART1_Initialize 80E2                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 555C                                 ___fladd 2A1A  
                               ___aomod 5A50                                 ___fldiv 375C  
                               ___awdiv 6A70                                 ___flneg 83B8  
                               ___awmod 6F50                                 ___flmul 21F0  
                               ___flsub 8400                                 ___fltol 679C  
                               ___lodiv 661C                                 ___lomod 6BBE  
             __end_of_UART1_Receive_ISR 8D0A                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 747E  
                               __pcinit 7552                __end_of_mode_lamp_bright 8E6C  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 8E50                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 4156  
                               __ptext1 8E1C                                 __ptext2 801A  
                               __ptext3 8E2E                                 __ptext4 8EC6  
                               __ptext5 8744                                 __ptext6 7394  
                               __ptext7 8916                                 __ptext8 893E  
                               __ptext9 8C92                       _UART2_Receive_ISR 8D0A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8DF2                            __size_of_abs 0046  
                               us555999 57C6                                 us651999 6786  
                          __size_of_pad 0114                                 us566999 5C7E  
                               _isalpha 855E                                 _isdigit 880C  
                               us656999 6CEE                                 us918999 3CF0  
                               _mode_sw 0029                                 us987999 52B0  
                     __end_of_lp_filter 6486                                 us999999 4CD8  
                               _islower 87AC                                 _isspace 8366  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 8204                                 _isupper 87DC  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 728A  
                               _tolower 7CFC                   __size_of_display_help 0008  
                               _utctime 008C                   __size_of_display_info 0008  
                               _strncmp 5C90                                 _toupper 7C78  
                  end_of_initialization 7612               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8A06             _UART1_SetTxInterruptHandler 89DE  
   __end_of_UART2_SetRxInterruptHandler 89DE             _UART2_SetRxInterruptHandler 89B6  
                     __end_of_set_vterm 8D60                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8F00  
             __end_of_UART2_Receive_ISR 8D28                          wdtdelay@dcount 0090  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 005B  
                 _INT1_InterruptHandler 0019                               _PORTBbits 003FCB  
              _TMR6_SetInterruptHandler 8A2E                            _display_help 8ED6  
                 _TMR5_InterruptHandler 0001                            _display_info 8ECE  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 8B1E             _ADCC_SetADIInterruptHandler 8AF6  
                            _update_lcd 717C                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7E78  
                       _SPI1_Initialize 8DC6                   __end_of_get_vterm_ptr 886A  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 000E  
                        __end_of_WaitMs 870E            __end_of_INTERRUPT_Initialize 801A  
                            _vterm_dump 6CFE                          __end_of___flge 6A70  
                        __end_of___fleq 76DC    __end_of_INT0_DefaultInterruptHandler 8F0C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8F0A  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 82BA  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4C72             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0084                          __end_of_memset 529E  
                        __end_of_printf 81A6                __end_of_DMA1_DMADCNT_ISR 8EAE  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8C4E  
                        __end_of_strcpy 7552                          __end_of_strlen 7A36  
                   start_initialization 7552    __end_of_TMR5_DefaultInterruptHandler 8B46  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8B1E  
       __size_of_PIN_MANAGER_Initialize 0090                             __end_of_abs 848C  
                 __end_of_INT1_CallBack 8C70               __size_of_set_display_info 001E  
                           __end_of_pad 717C                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 8966                          _switch_handler 8F06  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 661C  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 026C  
              __end_of_DMA1_DMASCNT_ISR 8E9A                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR 8EBC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8BE6                           _ringBufS_init 8966  
                           __pdataBANK0 00A2                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 001E              __end_of_EXT_INT_Initialize 87AC  
                   __end_of_help_button 86D8         __end_of_eaDogM_WriteStringAtPos 8744  
               __end_of_DMA1_Initialize 7EE2                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8ACE                           __pcstackBANK0 00E1  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 8F0A  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8DDC  
              _UART1_RxInterruptHandler 0010                _UART2_TxInterruptHandler 0013  
                             __end_of_T FEE1                        _convert_adc_data 7DFE  
             __size_of_ringBufS_put_dma 00AA                            _init_display 7394  
                __end_of_DMA1_DMAOR_ISR 8EC6                  __size_of_TMR5_CallBack 0022  
                 _TMR6_InterruptHandler 0004                  __size_of_TMR6_CallBack 0022  
               __end_of_DMA2_Initialize 8314                  _PIN_MANAGER_Initialize 7B60  
                  __end_of_wait_lcd_set 8EFA                           __pmediumconst FE50  
                             __ptext100 8DC6                               __ptext101 8DDC  
                             __ptext110 82BA                               __ptext102 8E08  
                             __ptext111 7E78                               __ptext103 7B60  
                             __ptext120 8E6C                               __ptext112 8E9A  
                             __ptext104 8DF2                               __ptext121 8C2C  
                             __ptext113 7EE2                               __ptext105 7FB4  
                             __ptext130 8F0E                               __ptext122 8F0A  
                             __ptext114 8ACE                               __ptext106 8EE6  
                             __ptext131 8F10                               __ptext123 8E7C  
                             __ptext115 8AF6                               __ptext107 8778  
                             __ptext140 8D0A                               __ptext132 7F4C  
                             __ptext124 8C4E                               __ptext116 8204  
                             __ptext108 8A7E                               __ptext141 8D7C  
                             __ptext133 8B48                               __ptext125 8F0C  
                             __ptext117 85E4                               __ptext109 8AA6  
                             __ptext142 8C70                               __ptext134 886A  
                             __ptext126 8F06                               __ptext118 8C0A  
                             __ptext143 8518                               __ptext135 8B70  
                             __ptext127 8F00                               __ptext119 8B1E  
                             __ptext144 8E8C                               __ptext136 8CEC  
                             __ptext128 88EC                               __ptext145 8EA4  
                             __ptext137 8B98                               __ptext129 7D80  
                             __ptext146 8EB0                               __ptext138 8896  
                             __ptext147 8EBC                               __ptext139 8BC0  
                             __ptext148 0000                      __end_of_StartTimer 86A0  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 88EC                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 62C6  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 7FB4                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0012                         ?_DMA1_DMAOR_ISR 0056  
                              _INT0_ISR 8E6C                                _INT1_ISR 8E7C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0060  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                i2u436_48 8902  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u891_48 8B82  
              __size_of_TMR5_Initialize 0046                                i2u893_48 8BAA  
                              i2u895_48 8BD2                                i2u887_48 7F80  
                              i2u887_49 7F94                                i2u889_48 8B5A  
                             _set_vterm 8D44                     __size_of_update_lcd 010E  
                           _help_button 86A0              __end_of_UART1_Transmit_ISR 8896  
                              _TMR5_ISR 8204                                _TMR6_ISR 8D7C  
                             _port_data 00D1                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8C0A  
                            _ADCON0bits 003EF8                      __end_of_check_help 60C2  
                             _start_lcd 8EFA                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8C70  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8CCE                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7566                               copy_data1 7588  
              _INT0_SetInterruptHandler 8AA6                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 0033     __end_of_UART2_SetTxInterruptHandler 89B6  
           _UART2_SetTxInterruptHandler 898E                            _uart1RxCount 0030  
                          _uart2RxCount 002A                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0586  
                         _wait_lcd_done 8D28                            _send_lcd_cmd 893E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8F10  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                   __end_of_DMA1_DMAA_ISR 8EBA  
                    ___fpclassifyf@F463 0088    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 01BB                                ___xxtofl 60C2  
                     ?_DMA1_DMADCNT_ISR 0056                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 8E5E                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 005B                                __ptext10 8966  
                              __ptext11 8E50                                __ptext20 6CFE  
                              __ptext12 7DFE                                __ptext21 728A  
                              __ptext13 62C6                                __ptext30 8EF4  
                              __ptext22 883C                                __ptext14 31D6  
                              __ptext31 8EFA                                __ptext23 86D8  
                              __ptext15 80E2                                __ptext40 855E  
                              __ptext32 7ACE                                __ptext24 717C  
                              __ptext16 8CB0                                __ptext41 4C72  
                              __ptext33 4FB2                                __ptext25 870E  
                              __ptext17 60C2                                __ptext50 4906  
                              __ptext42 6BBE                                __ptext34 8144  
                              __ptext26 8314                                __ptext18 8EEE  
                              __ptext51 6486                                __ptext43 661C  
                              __ptext35 7798                                __ptext27 8D28  
                              __ptext19 5EB0                                __ptext60 6F50  
                              __ptext52 679C                                __ptext44 5C90  
                              __ptext36 1244                                __ptext28 8260  
                              __ptext61 6A70                                __ptext53 8400  
                              __ptext45 529E                                __ptext37 454C  
                              __ptext29 78EE                                __ptext70 6E2C  
                              __ptext62 3CD6                                __ptext54 2A1A  
                              __ptext46 0000                                __ptext38 7C78  
                              __ptext71 8D60                                __ptext63 8446  
                              __ptext55 83B8                                __ptext47 7CFC  
                              __ptext39 87AC                                __ptext80 8E5E  
                              __ptext72 7844                                __ptext64 5A50  
                              __ptext56 21F0                                __ptext48 87DC  
                              __ptext81 85A2                                __ptext73 57DC  
                              __ptext65 555C                                __ptext57 690E  
                              __ptext49 747E                                __ptext90 898E  
                              __ptext82 86A0                                __ptext74 8366  
                              __ptext66 7BF0                                __ptext58 7618  
                              __ptext91 89B6                                __ptext83 8BE6  
                              __ptext75 880C                                __ptext67 7068  
                              __ptext59 375C                                __ptext92 807E  
                              __ptext84 8664                                __ptext76 8D44  
                              __ptext68 7994                                __ptext93 89DE  
                              __ptext85 8ECE                                __ptext77 8E40  
                              __ptext69 7A36                                __ptext94 8A06  
                              __ptext86 8ED6                                __ptext78 8CCE  
                              __ptext95 88C2                                __ptext87 8EDE  
                              __ptext79 8D96                                __ptext96 8A2E  
                              __ptext88 848C                                __ptext97 84D2  
                              __ptext89 81A6                                __ptext98 8A56  
                              __ptext99 8DAE                        __size_of_isupper 0030  
                              us1008999 45CC                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 7844  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 03F6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0056                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 000A  
                             stoa@F1166 00CA                      ??_DMA1_DMASCNT_ISR 005B  
          __end_of_ADCC_StartConversion 8E40                                _spi_link 0078  
                              _wdtdelay 8260              __end_of_UART2_Transmit_ISR 88C2  
                              _vfprintf 7798                __end_of_convert_adc_data 7E78  
            __end_of_PWM8_LoadDutyValue 85E4    __end_of_INT1_DefaultInterruptHandler 8F0E  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8F0C  
                         ??_Default_ISR 0056                             _uart1RxHead 0032  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0035  
                           _uart2RxHead 002C                             _uart1RxTail 0031  
                        _get_raw_result 8CB0                             _uart2TxHead 002F  
                           _uart1TxTail 0034                             _uart2RxTail 002B  
                           _uart2TxTail 002E                            _wait_lcd_set 8EF4  
                    _EXT_INT_Initialize 8778    __end_of_TMR6_DefaultInterruptHandler 855E  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 8518  
  __end_of_ADCC_DefaultInterruptHandler 8F10   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8F0E                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 8916  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 8E50  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 7994  
                 __end_of_mode_lamp_dim 8DAE                 __end_of_adc_int_handler 8F12  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 728A                  _uart2TxBufferRemaining 002D  
                        _FVR_Initialize 8EE6                  __end_of_get_raw_result 8CCE  
                      _send_lcd_cmd_dma 8314                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0025        __end_of_INT1_SetInterruptHandler 8AA6  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 005B  
              _UART1_TxInterruptHandler 000D               __end_of_send_lcd_cmd_long 893E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8F06  
        __end_of_PIN_MANAGER_Initialize 7BF0               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 6E2C                 _eaDogM_WriteStringAtPos 870E  
                         _get_vterm_ptr 883C                          _check_adc_scan 8EDE  
             __size_of_UART2_Initialize 005E  
