

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 21 00:58:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=4,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=4,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=4,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=4,class=CODE,delta=1
   114                           	psect	text91,global,reloc=4,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=4,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=4,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=4,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=4,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=4,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=4,class=CODE,delta=1
   128                           	psect	text105,global,reloc=4,class=CODE,delta=1
   129                           	psect	text106,global,reloc=4,class=CODE,delta=1
   130                           	psect	text107,global,reloc=4,class=CODE,delta=1
   131                           	psect	text108,global,reloc=4,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   136                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   139                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   140  0000                     
   141                           ; Version 2.05
   142                           ; Generated 20/12/2018 GMT
   143                           ; 
   144                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution.
   158                           ; 
   159                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   160                           ;        software without specific prior written permission.
   161                           ; 
   162                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   163                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   164                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   165                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   166                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   167                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   168                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   169                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   170                           ; 
   171                           ; 
   172                           ; Code-generator required, PIC18F57K42 Definitions
   173                           ; 
   174                           ; SFR Addresses
   175  0000                     
   176 ;;_mode	offset	0
   177 ;;_rxData	offset	0
   178 ;;_t_link	offset=-1 (param)
   179 ;;_stream	offset=-6 (param)
   180 ;;_function	offset=-7 (param)
   181 ;;_f	offset	0
   182 ;;_ap	offset	5
   183 ;;_s	offset=-2 (param)
   184 ;;_fmt	offset=-3 (param)
   185 ;;_rxData	offset	0
   186 ;;_r_link	offset=-1 (param)
   187 ;;_rxData	offset	0
   188 ;;_m_link	offset=-1 (param)
   189 ;;_k	offset	0
   190 ;;_checksum	offset	2
   191 ;;_i	offset	4
   192 ;;_byte_block	offset=-2 (param)
   193 ;;_length	offset=-3 (param)
   194 ;;_fake	offset=-4 (param)
   195 ;;_s_uart	offset=-5 (param)
   196 ;;_i	offset	0
   197 ;;_sum	offset	2
   198 ;;_byte_block	offset=-2 (param)
   199 ;;_byte_count	offset=-4 (param)
   200 ;;_bufData	offset=-1 (param)
   201 ;;_txData	offset=-1 (param)
   202 ;;_bufData	offset=-1 (param)
   203 ;;_txData	offset=-1 (param)
   204 ;;_stream	offset=-1 (param)
   205 ;;_function	offset=-2 (param)
   206 ;;_byte_block	offset=-1 (param)
   207 ;;_clear	offset=-2 (param)
   208 ;;_numMilliseconds	offset=-2 (param)
   209 ;;_timer	offset=-1 (param)
   210 ;;_timer	offset=-1 (param)
   211 ;;_count	offset=-3 (param)
   212 ;;_readValue	offset	0
   213 ;;_readValue	offset	0
   214 ;;_cmd	offset=-1 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_data	offset=-1 (param)
   217 ;;__this	offset=-2 (param)
   218 ;;_r	offset=-1 (param)
   219 ;;_c	offset=-2 (param)
   220 ;;_strPtr	offset=-3 (param)
   221 ;;_strPtr	offset=-1 (param)
   222 ;;_cmd	offset=-1 (param)
   223 ;;_strPtr	offset=-1 (param)
   224 ;;_delay	offset=-4 (param)
   225 ;;__this	offset=-2 (param)
   226 ;;_clearBuffer	offset=-3 (param)
   227 ;;_s	offset	0
   228 ;;_k	offset	2
   229 ;;_dest	offset=-2 (param)
   230 ;;_c	offset=-4 (param)
   231 ;;_n	offset=-6 (param)
   232 ;;_ap	offset	0
   233 ;;_fmt	offset=-2 (param)
   234 ;;_cfmt	offset	0
   235 ;;_fp	offset=-2 (param)
   236 ;;_fmt	offset=-3 (param)
   237 ;;_ap	offset=-5 (param)
   238 ;;_ll	offset	0
   239 ;;_cp	offset	8
   240 ;;_c	offset	10
   241 ;;_fp	offset=-2 (param)
   242 ;;_fmt	offset=-4 (param)
   243 ;;_ap	offset=-6 (param)
   244 ;;_r	offset	0
   245 ;;_l	offset	1
   246 ;;__l	offset=-1 (param)
   247 ;;__r	offset=-2 (param)
   248 ;;_n	offset=-4 (param)
   249 ;;_nuls	offset	0
   250 ;;_l	offset	7
   251 ;;_p	offset	9
   252 ;;_cp	offset	11
   253 ;;_w	offset	13
   254 ;;_i	offset	15
   255 ;;_fp	offset=-2 (param)
   256 ;;_s	offset=-4 (param)
   257 ;;_dtoa$3935	offset	0
   258 ;;_n	offset	2
   259 ;;_i	offset	10
   260 ;;_s	offset	12
   261 ;;_w	offset	14
   262 ;;_p	offset	16
   263 ;;_fp	offset=-2 (param)
   264 ;;_d	offset=-10 (param)
   265 ;;_a	offset=-2 (param)
   266 ;;_sign	offset	0
   267 ;;_counter	offset	1
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_quotient	offset	0
   271 ;;_sign	offset	8
   272 ;;_counter	offset	9
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_w	offset	0
   276 ;;_fp	offset=-2 (param)
   277 ;;_c	offset=-3 (param)
   278 ;;_w	offset	0
   279 ;;_i	offset	2
   280 ;;_fp	offset=-2 (param)
   281 ;;_buf	offset=-4 (param)
   282 ;;_p	offset=-6 (param)
   283 ;;_a	offset	0
   284 ;;_s	offset=-2 (param)
   285 ;;_i	offset	0
   286 ;;_c	offset	2
   287 ;;_s	offset=-2 (param)
   288 ;;_fp	offset=-4 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_fp	offset=-4 (param)
   291 ;;_c	offset=-1 (param)
   292 ;;__this	offset=-2 (param)
   293 ;;_c	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_state	offset	0
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_i	offset	0
   306 ;;_timerVal	offset=-2 (param)
   307                           
   308                           	psect	idataCOMRAM
   309  0064AE                     __pidataCOMRAM:
   310                           	opt callstack 0
   311                           
   312                           ;initializer for r_protocol@retry
   313  0064AE  03                 	db	3
   314                           
   315                           	psect	idataBANK0
   316  005870                     __pidataBANK0:
   317                           	opt callstack 0
   318                           
   319                           ;initializer for _V
   320  005870  00                 	db	0
   321  005871  00                 	db	0
   322  005872  00                 	db	0
   323  005873  00                 	db	0
   324  005874  00                 	db	0
   325  005875  00                 	db	0
   326  005876  00                 	db	0
   327  005877  00                 	db	0
   328  005878  00                 	db	0
   329  005879  00                 	db	0
   330  00587A  00                 	db	0
   331  00587B  00                 	db	0
   332  00587C  00                 	db	0
   333  00587D  00                 	db	0
   334  00587E  00                 	db	0
   335  00587F  00                 	db	0
   336  005880  00                 	db	0
   337  005881  00                 	db	0
   338  005882  00                 	db	0
   339  005883  00                 	db	0
   340  005884  00                 	db	0
   341  005885  00                 	db	0
   342  005886  00                 	db	0
   343  005887  00                 	db	0
   344  005888  00                 	db	0
   345  005889  00                 	db	0
   346  00588A  00                 	db	0
   347  00588B  00                 	db	0
   348  00588C  00                 	db	0
   349  00588D  00                 	db	0
   350  00588E  00                 	db	0
   351  00588F  00                 	db	0
   352  005890  00                 	db	0
   353  005891  00                 	db	0
   354  005892  00                 	db	0
   355  005893  00                 	db	0
   356  005894  00                 	db	0
   357  005895  00                 	db	0
   358  005896  00                 	db	0
   359  005897  00                 	db	0
   360  005898  00                 	db	0
   361  005899  00                 	db	0
   362  00589A  00                 	db	0
   363  00589B  00                 	db	0
   364  00589C  00                 	db	0
   365  00589D  00                 	db	0
   366  00589E  00                 	db	0
   367  00589F  00                 	db	0
   368  0058A0  00                 	db	0
   369  0058A1  00                 	db	0
   370  0058A2  00                 	db	0
   371  0058A3  00                 	db	0
   372  0058A4  00                 	db	0
   373  0058A5  00                 	db	0
   374  0058A6  00                 	db	0
   375  0058A7  00                 	db	0
   376  0058A8  00                 	db	0
   377  0058A9  00                 	db	0
   378  0058AA  00                 	db	0
   379  0058AB  00                 	db	0
   380  0058AC  00                 	db	0
   381  0058AD  00                 	db	0
   382  0058AE  00                 	db	0
   383  0058AF  00                 	db	0
   384  0058B0  00                 	db	0
   385  0058B1  00                 	db	0
   386  0058B2  00                 	db	0
   387  0058B3  00                 	db	0
   388  0058B4  00                 	db	0
   389  0058B5  00                 	db	0
   390  0058B6  0000               	dw	0
   391  0058B8  0000               	dw	0
   392  0058BA  0000               	dw	0
   393  0058BC  0000               	dw	0
   394  0058BE  00                 	db	0
   395  0058BF  00                 	db	0
   396  0058C0  00                 	db	0
   397  0058C1  00                 	db	0
   398  0058C2  00                 	db	0
   399  0058C3  0000               	dw	0
   400  0058C5  0000               	dw	0
   401  0058C7  00                 	db	0
   402  0058C8  00                 	db	0
   403  0058C9  00                 	db	0
   404  0058CA  00                 	db	0
   405  0058CB  00                 	db	0
   406  0058CC  01                 	db	1
   407  0058CD  2D                 	db	45
   408                           
   409                           	psect	idataBANK1
   410  004FA4                     __pidataBANK1:
   411                           	opt callstack 0
   412                           
   413                           ;initializer for stoa@F1144
   414  004FA4  28                 	db	40
   415  004FA5  6E                 	db	110
   416  004FA6  75                 	db	117
   417  004FA7  6C                 	db	108
   418  004FA8  6C                 	db	108
   419  004FA9  29                 	db	41
   420  004FAA  00                 	db	0
   421                           
   422                           ;initializer for _H10
   423  004FAB  0000               	dw	0
   424  004FAD  0001               	dw	1
   425  004FAF  0000               	dw	0
   426  004FB1  01                 	db	1
   427  004FB2  80                 	db	128
   428  004FB3  01                 	db	1
   429  004FB4  81                 	db	129
   430  004FB5  00                 	db	0
   431  004FB6  00                 	db	0
   432  004FB7  0A                 	db	10
   433  004FB8  0000               	dw	0
   434  004FBA  00                 	db	0
   435  004FBB  00                 	db	0
   436  004FBC  00                 	db	0
   437  004FBD  00                 	db	0
   438  004FBE  00                 	db	0
   439  004FBF  00                 	db	0
   440  004FC0  00                 	db	0
   441  004FC1  00                 	db	0
   442  004FC2  00                 	db	0
   443  004FC3  00                 	db	0
   444  004FC4  0A                 	db	10
   445  004FC5  0000               	dw	0
   446  004FC7  0001               	dw	1
   447  004FC9  0000               	dw	0
   448  004FCB  01                 	db	1
   449  004FCC  80                 	db	128
   450  004FCD  00                 	db	0
   451  004FCE  01                 	db	1
   452  004FCF  00                 	db	0
   453  004FD0  00                 	db	0
   454  004FD1  0A                 	db	10
   455  004FD2  0000               	dw	0
   456  004FD4  0001               	dw	1
   457  004FD6  0000               	dw	0
   458  004FD8  01                 	db	1
   459  004FD9  80                 	db	128
   460  004FDA  01                 	db	1
   461  004FDB  81                 	db	129
   462  004FDC  00                 	db	0
   463  004FDD  80                 	db	128
   464  004FDE  0A                 	db	10
   465  004FDF  0000               	dw	0
   466  004FE1  0001               	dw	1
   467  004FE3  0000               	dw	0
   468  004FE5  01                 	db	1
   469  004FE6  80                 	db	128
   470  004FE7  11                 	db	17
   471  004FE8  82                 	db	130
   472  004FE9  00                 	db	0
   473  004FEA  00                 	db	0
   474  004FEB  0A                 	db	10
   475  004FEC  0000               	dw	0
   476  004FEE  0001               	dw	1
   477  004FF0  0000               	dw	0
   478  004FF2  01                 	db	1
   479  004FF3  80                 	db	128
   480  004FF4  0F                 	db	15
   481  004FF5  81                 	db	129
   482  004FF6  00                 	db	0
   483  004FF7  00                 	db	0
   484  004FF8  0A                 	db	10
   485  004FF9  0000               	dw	0
   486  004FFB  0001               	dw	1
   487  004FFD  0000               	dw	0
   488  004FFF  01                 	db	1
   489  005000  80                 	db	128
   490  005001  11                 	db	17
   491  005002  81                 	db	129
   492  005003  00                 	db	0
   493  005004  00                 	db	0
   494  005005  0A                 	db	10
   495                           
   496                           ;initializer for _H12
   497  005006  0000               	dw	0
   498  005008  00                 	db	0
   499  005009  01                 	db	1
   500  00500A  0001               	dw	1
   501  00500C  0000               	dw	0
   502  00500E  01                 	db	1
   503  00500F  80                 	db	128
   504  005010  02                 	db	2
   505  005011  01                 	db	1
   506  005012  00                 	db	0
   507  005013  00                 	db	0
   508  005014  0C                 	db	12
   509  005015  0000               	dw	0
   510  005017  00                 	db	0
   511  005018  01                 	db	1
   512  005019  0001               	dw	1
   513  00501B  0000               	dw	0
   514  00501D  01                 	db	1
   515  00501E  80                 	db	128
   516  00501F  0D                 	db	13
   517  005020  81                 	db	129
   518  005021  00                 	db	0
   519  005022  00                 	db	0
   520  005023  0C                 	db	12
   521                           
   522                           ;initializer for _H24
   523  005024  0000               	dw	0
   524  005026  41                 	db	65
   525  005027  20                 	db	32
   526  005028  30                 	db	48
   527  005029  31                 	db	49
   528  00502A  30                 	db	48
   529  00502B  39                 	db	57
   530  00502C  31                 	db	49
   531  00502D  31                 	db	49
   532  00502E  30                 	db	48
   533  00502F  38                 	db	56
   534  005030  34                 	db	52
   535  005031  36                 	db	54
   536  005032  30                 	db	48
   537  005033  30                 	db	48
   538  005034  0001               	dw	1
   539  005036  0000               	dw	0
   540  005038  01                 	db	1
   541  005039  80                 	db	128
   542  00503A  12                 	db	18
   543  00503B  02                 	db	2
   544  00503C  00                 	db	0
   545  00503D  00                 	db	0
   546  00503E  18                 	db	24
   547                           
   548                           ;initializer for _H17
   549  00503F  0000               	dw	0
   550  005041  00                 	db	0
   551  005042  01                 	db	1
   552  005043  00                 	db	0
   553  005044  01                 	db	1
   554  005045  21                 	db	33
   555  005046  02                 	db	2
   556  005047  01                 	db	1
   557  005048  0001               	dw	1
   558  00504A  0000               	dw	0
   559  00504C  01                 	db	1
   560  00504D  80                 	db	128
   561  00504E  0E                 	db	14
   562  00504F  01                 	db	1
   563  005050  00                 	db	0
   564  005051  00                 	db	0
   565  005052  11                 	db	17
   566                           
   567                           ;initializer for _H14
   568  005053  0000               	dw	0
   569  005055  00                 	db	0
   570  005056  41                 	db	65
   571  005057  11                 	db	17
   572  005058  01                 	db	1
   573  005059  0001               	dw	1
   574  00505B  0000               	dw	0
   575  00505D  01                 	db	1
   576  00505E  80                 	db	128
   577  00505F  04                 	db	4
   578  005060  01                 	db	1
   579  005061  00                 	db	0
   580  005062  00                 	db	0
   581  005063  0E                 	db	14
   582                           
   583                           ;initializer for _H13
   584  005064  0000               	dw	0
   585  005066  00                 	db	0
   586  005067  01                 	db	1
   587  005068  21                 	db	33
   588  005069  0001               	dw	1
   589  00506B  0000               	dw	0
   590  00506D  01                 	db	1
   591  00506E  80                 	db	128
   592  00506F  0C                 	db	12
   593  005070  06                 	db	6
   594  005071  00                 	db	0
   595  005072  00                 	db	0
   596  005073  0D                 	db	13
   597                           
   598                           	psect	idataBANK2
   599  0062D8                     __pidataBANK2:
   600                           	opt callstack 0
   601                           
   602                           ;initializer for _H27
   603  0062D8  0000               	dw	0
   604  0062DA  00                 	db	0
   605  0062DB  00                 	db	0
   606  0062DC  00                 	db	0
   607  0062DD  00                 	db	0
   608  0062DE  00                 	db	0
   609  0062DF  00                 	db	0
   610  0062E0  00                 	db	0
   611  0062E1  00                 	db	0
   612  0062E2  00                 	db	0
   613  0062E3  00                 	db	0
   614  0062E4  00                 	db	0
   615  0062E5  00                 	db	0
   616  0062E6  00                 	db	0
   617  0062E7  00                 	db	0
   618  0062E8  00                 	db	0
   619  0062E9  00                 	db	0
   620  0062EA  00                 	db	0
   621  0062EB  0001               	dw	1
   622  0062ED  0000               	dw	0
   623  0062EF  01                 	db	1
   624  0062F0  80                 	db	128
   625  0062F1  0D                 	db	13
   626  0062F2  81                 	db	129
   627  0062F3  00                 	db	0
   628  0062F4  80                 	db	128
   629  0062F5  1B                 	db	27
   630                           
   631                           	psect	idataBANK3
   632  005D44                     __pidataBANK3:
   633                           	opt callstack 0
   634                           
   635                           ;initializer for _H53
   636  005D44  0000               	dw	0
   637  005D46  00                 	db	0
   638  005D47  00                 	db	0
   639  005D48  00                 	db	0
   640  005D49  00                 	db	0
   641  005D4A  00                 	db	0
   642  005D4B  00                 	db	0
   643  005D4C  00                 	db	0
   644  005D4D  00                 	db	0
   645  005D4E  00                 	db	0
   646  005D4F  00                 	db	0
   647  005D50  00                 	db	0
   648  005D51  00                 	db	0
   649  005D52  00                 	db	0
   650  005D53  00                 	db	0
   651  005D54  00                 	db	0
   652  005D55  00                 	db	0
   653  005D56  00                 	db	0
   654  005D57  00                 	db	0
   655  005D58  00                 	db	0
   656  005D59  00                 	db	0
   657  005D5A  00                 	db	0
   658  005D5B  00                 	db	0
   659  005D5C  00                 	db	0
   660  005D5D  00                 	db	0
   661  005D5E  00                 	db	0
   662  005D5F  00                 	db	0
   663  005D60  00                 	db	0
   664  005D61  00                 	db	0
   665  005D62  00                 	db	0
   666  005D63  00                 	db	0
   667  005D64  00                 	db	0
   668  005D65  00                 	db	0
   669  005D66  00                 	db	0
   670  005D67  00                 	db	0
   671  005D68  00                 	db	0
   672  005D69  00                 	db	0
   673  005D6A  00                 	db	0
   674  005D6B  00                 	db	0
   675  005D6C  00                 	db	0
   676  005D6D  46                 	db	70
   677  005D6E  01                 	db	1
   678  005D6F  41                 	db	65
   679  005D70  00                 	db	0
   680  005D71  0001               	dw	1
   681  005D73  0000               	dw	0
   682  005D75  01                 	db	1
   683  005D76  80                 	db	128
   684  005D77  03                 	db	3
   685  005D78  8A                 	db	138
   686  005D79  00                 	db	0
   687  005D7A  00                 	db	0
   688  005D7B  35                 	db	53
   689  0000                     _IVTADL	set	14493
   690  0000                     _IVTADH	set	14494
   691  0000                     _IVTADU	set	14495
   692  0000                     _PIE8bits	set	14744
   693  0000                     _PIR8bits	set	14760
   694  0000                     _SCANPR	set	14839
   695  0000                     _DMA2PR	set	14836
   696  0000                     _DMA1PR	set	14835
   697  0000                     _MAINPR	set	14834
   698  0000                     _ISRPR	set	14833
   699  0000                     _PIE2bits	set	14738
   700  0000                     _PIR2bits	set	14754
   701  0000                     _PIE9bits	set	14745
   702  0000                     _PIR9bits	set	14761
   703  0000                     _PIE6bits	set	14742
   704  0000                     _PIE3bits	set	14739
   705  0000                     _PMD7	set	14791
   706  0000                     _PMD6	set	14790
   707  0000                     _PMD5	set	14789
   708  0000                     _PMD4	set	14788
   709  0000                     _PMD3	set	14787
   710  0000                     _PMD2	set	14786
   711  0000                     _PMD1	set	14785
   712  0000                     _PMD0	set	14784
   713  0000                     _OSCTUNE	set	14814
   714  0000                     _OSCFRQ	set	14815
   715  0000                     _OSCEN	set	14813
   716  0000                     _OSCCON3	set	14811
   717  0000                     _OSCCON1	set	14809
   718  0000                     _IPR8bits	set	14728
   719  0000                     _IPR9bits	set	14729
   720  0000                     _IPR7bits	set	14727
   721  0000                     _IPR5bits	set	14725
   722  0000                     _IPR1bits	set	14721
   723  0000                     _IPR3bits	set	14723
   724  0000                     _IPR6bits	set	14726
   725  0000                     _IPR2bits	set	14722
   726  0000                     _PIE7bits	set	14743
   727  0000                     _PIE5bits	set	14741
   728  0000                     _PIE1bits	set	14737
   729  0000                     _PIR7bits	set	14759
   730  0000                     _PIR5bits	set	14757
   731  0000                     _PIR1bits	set	14753
   732  0000                     _PLLR	set	118496
   733  0000                     _SPI1SDIPPS	set	15071
   734  0000                     _RC6PPS	set	14870
   735  0000                     _RC5PPS	set	14869
   736  0000                     _RA6PPS	set	14854
   737  0000                     _RA5PPS	set	14853
   738  0000                     _RA4PPS	set	14852
   739  0000                     _SPI1SCKPPS	set	15070
   740  0000                     _U1RXPPS	set	15077
   741  0000                     _INT1PPS	set	15041
   742  0000                     _INT2PPS	set	15042
   743  0000                     _INT0PPS	set	15040
   744  0000                     _RC3PPS	set	14867
   745  0000                     _RB6PPS	set	14862
   746  0000                     _U2RXPPS	set	15080
   747  0000                     _SLRCONF	set	14995
   748  0000                     _SLRCONE	set	14979
   749  0000                     _SLRCOND	set	14963
   750  0000                     _SLRCONC	set	14947
   751  0000                     _SLRCONB	set	14931
   752  0000                     _SLRCONA	set	14915
   753  0000                     _ODCOND	set	14962
   754  0000                     _ODCONC	set	14946
   755  0000                     _ODCONB	set	14930
   756  0000                     _ODCONA	set	14914
   757  0000                     _ODCONF	set	14994
   758  0000                     _ODCONE	set	14978
   759  0000                     _WPUC	set	14945
   760  0000                     _WPUA	set	14913
   761  0000                     _WPUB	set	14929
   762  0000                     _WPUE	set	14977
   763  0000                     _WPUF	set	14993
   764  0000                     _WPUD	set	14961
   765  0000                     _ANSELA	set	14912
   766  0000                     _ANSELF	set	14992
   767  0000                     _ANSELE	set	14976
   768  0000                     _ANSELB	set	14928
   769  0000                     _ANSELC	set	14944
   770  0000                     _ANSELD	set	14960
   771  0000                     _DMA1SSA	set	15353
   772  0000                     _DMA1DSZ	set	15342
   773  0000                     _DMA1SSZ	set	15351
   774  0000                     _DMA1DSA	set	15344
   775  0000                     _DMA1CON0bits	set	15356
   776  0000                     _DMA1CON1bits	set	15357
   777  0000                     _DMA1CON0	set	15356
   778  0000                     _DMA1AIRQ	set	15358
   779  0000                     _DMA1SIRQ	set	15359
   780  0000                     _DMA1CON1	set	15357
   781  0000                     _CLC1CON	set	15476
   782  0000                     _CLC1GLS3	set	15485
   783  0000                     _CLC1GLS2	set	15484
   784  0000                     _CLC1GLS1	set	15483
   785  0000                     _CLC1GLS0	set	15482
   786  0000                     _CLC1SEL3	set	15481
   787  0000                     _CLC1SEL2	set	15480
   788  0000                     _CLC1SEL1	set	15479
   789  0000                     _CLC1SEL0	set	15478
   790  0000                     _CLC1POL	set	15477
   791  0000                     _CLKRCON	set	15589
   792  0000                     _CLKRCLK	set	15590
   793  0000                     _MD1CARL	set	15613
   794  0000                     _MD1CARH	set	15614
   795  0000                     _MD1SRC	set	15612
   796  0000                     _MD1CON1bits	set	15611
   797  0000                     _MD1CON0bits	set	15610
   798  0000                     _SPI1INTFbits	set	15642
   799  0000                     _SPI1RXB	set	15632
   800  0000                     _SPI1TXB	set	15633
   801  0000                     _SPI1TCNTL	set	15634
   802  0000                     _SPI1CON0	set	15636
   803  0000                     _SPI1CLK	set	15644
   804  0000                     _SPI1BAUD	set	15641
   805  0000                     _SPI1CON2	set	15638
   806  0000                     _SPI1CON1	set	15637
   807  0000                     _U2RXB	set	15824
   808  0000                     _U2TXB	set	15826
   809  0000                     _U2ERRIE	set	15842
   810  0000                     _U2ERRIR	set	15841
   811  0000                     _U2UIR	set	15840
   812  0000                     _U2FIFO	set	15839
   813  0000                     _U2BRGH	set	15838
   814  0000                     _U2BRGL	set	15837
   815  0000                     _U2CON2	set	15836
   816  0000                     _U2CON1	set	15835
   817  0000                     _U2CON0	set	15834
   818  0000                     _U2P3L	set	15832
   819  0000                     _U2P2L	set	15830
   820  0000                     _U2P1L	set	15828
   821  0000                     _U1RXB	set	15848
   822  0000                     _U1TXB	set	15850
   823  0000                     _U1ERRIE	set	15866
   824  0000                     _U1ERRIR	set	15865
   825  0000                     _U1UIR	set	15864
   826  0000                     _U1FIFO	set	15863
   827  0000                     _U1BRGH	set	15862
   828  0000                     _U1BRGL	set	15861
   829  0000                     _U1CON2	set	15860
   830  0000                     _U1CON1	set	15859
   831  0000                     _U1CON0	set	15858
   832  0000                     _U1P3H	set	15857
   833  0000                     _U1P3L	set	15856
   834  0000                     _U1P2H	set	15855
   835  0000                     _U1P2L	set	15854
   836  0000                     _U1P1H	set	15853
   837  0000                     _U1P1L	set	15852
   838  0000                     _ADCON0	set	16120
   839  0000                     _ADCLK	set	16127
   840  0000                     _ADACT	set	16126
   841  0000                     _ADREF	set	16125
   842  0000                     _ADSTAT	set	16124
   843  0000                     _ADCON3	set	16123
   844  0000                     _ADCON2	set	16122
   845  0000                     _ADCON1	set	16121
   846  0000                     _ADPREH	set	16119
   847  0000                     _ADPREL	set	16118
   848  0000                     _ADCAP	set	16117
   849  0000                     _ADACQH	set	16116
   850  0000                     _ADACQL	set	16115
   851  0000                     _ADPCH	set	16113
   852  0000                     _ADRPT	set	16108
   853  0000                     _ADACCU	set	16106
   854  0000                     _ADSTPTH	set	16101
   855  0000                     _ADSTPTL	set	16100
   856  0000                     _ADUTHH	set	16097
   857  0000                     _ADUTHL	set	16096
   858  0000                     _ADLTHH	set	16095
   859  0000                     _ADLTHL	set	16094
   860  0000                     _NCO1CONbits	set	16190
   861  0000                     _NCO1INCL	set	16187
   862  0000                     _NCO1INCH	set	16188
   863  0000                     _NCO1INCU	set	16189
   864  0000                     _NCO1ACCL	set	16184
   865  0000                     _NCO1ACCH	set	16185
   866  0000                     _NCO1ACCU	set	16186
   867  0000                     _NCO1CLK	set	16191
   868  0000                     _NCO1CON	set	16190
   869  0000                     _LATCbits	set	16316
   870  0000                     _LATDbits	set	16317
   871  0000                     _PORTBbits	set	16331
   872  0000                     _LATEbits	set	16318
   873  0000                     _T5CONbits	set	16282
   874  0000                     _T5CON	set	16282
   875  0000                     _TMR5L	set	16280
   876  0000                     _TMR5H	set	16281
   877  0000                     _T5CLK	set	16285
   878  0000                     _T5GATE	set	16284
   879  0000                     _T5GCON	set	16283
   880  0000                     _T6CON	set	16276
   881  0000                     _T6TMR	set	16274
   882  0000                     _T6PR	set	16275
   883  0000                     _T6RST	set	16279
   884  0000                     _T6HLT	set	16277
   885  0000                     _T6CLKCON	set	16278
   886  0000                     _TRISD	set	16325
   887  0000                     _TRISC	set	16324
   888  0000                     _TRISB	set	16323
   889  0000                     _TRISA	set	16322
   890  0000                     _TRISF	set	16327
   891  0000                     _TRISE	set	16326
   892  0000                     _LATC	set	16316
   893  0000                     _LATB	set	16315
   894  0000                     _LATF	set	16319
   895  0000                     _LATA	set	16314
   896  0000                     _LATD	set	16317
   897  0000                     _LATE	set	16318
   898  0000                     _IVTLOCKbits	set	16340
   899  0000                     _IVTLOCK	set	16340
   900  0000                     _INTCON0bits	set	16338
   901  0000                     _GIE	set	130711
   902                           
   903                           	psect	smallconst
   904  002000                     __psmallconst:
   905                           	opt callstack 0
   906  002000  00                 	db	0
   907  002001                     STR_9:
   908  002001  45                 	db	69	;'E'
   909  002002  20                 	db	32
   910  002003  52                 	db	82	;'R'
   911  002004  25                 	db	37
   912  002005  64                 	db	100	;'d'
   913  002006  20                 	db	32
   914  002007  54                 	db	84	;'T'
   915  002008  25                 	db	37
   916  002009  64                 	db	100	;'d'
   917  00200A  20                 	db	32
   918  00200B  45                 	db	69	;'E'
   919  00200C  25                 	db	37
   920  00200D  64                 	db	100	;'d'
   921  00200E  20                 	db	32
   922  00200F  41                 	db	65	;'A'
   923  002010  25                 	db	37
   924  002011  64                 	db	100	;'d'
   925  002012  20                 	db	32
   926  002013  47                 	db	71	;'G'
   927  002014  25                 	db	37
   928  002015  64                 	db	100	;'d'
   929  002016  23                 	db	35
   930  002017  00                 	db	0
   931  002018                     STR_11:
   932  002018  4C                 	db	76	;'L'
   933  002019  4F                 	db	79	;'O'
   934  00201A  47                 	db	71	;'G'
   935  00201B  20                 	db	32
   936  00201C  4D                 	db	77	;'M'
   937  00201D  4F                 	db	79	;'O'
   938  00201E  44                 	db	68	;'D'
   939  00201F  45                 	db	69	;'E'
   940  002020  20                 	db	32
   941  002021  25                 	db	37
   942  002022  64                 	db	100	;'d'
   943  002023  20                 	db	32
   944  002024  25                 	db	37
   945  002025  64                 	db	100	;'d'
   946  002026  20                 	db	32
   947  002027  20                 	db	32
   948  002028  20                 	db	32
   949  002029  20                 	db	32
   950  00202A  20                 	db	32
   951  00202B  23                 	db	35
   952  00202C  00                 	db	0
   953  00202D                     STR_15:
   954  00202D  20                 	db	32
   955  00202E  52                 	db	82	;'R'
   956  00202F  25                 	db	37
   957  002030  64                 	db	100	;'d'
   958  002031  20                 	db	32
   959  002032  54                 	db	84	;'T'
   960  002033  25                 	db	37
   961  002034  64                 	db	100	;'d'
   962  002035  20                 	db	32
   963  002036  46                 	db	70	;'F'
   964  002037  52                 	db	82	;'R'
   965  002038  25                 	db	37
   966  002039  64                 	db	100	;'d'
   967  00203A  20                 	db	32
   968  00203B  46                 	db	70	;'F'
   969  00203C  53                 	db	83	;'S'
   970  00203D  25                 	db	37
   971  00203E  64                 	db	100	;'d'
   972  00203F  20                 	db	32
   973  002040  23                 	db	35
   974  002041  00                 	db	0
   975  002042                     STR_10:
   976  002042  48                 	db	72	;'H'
   977  002043  4F                 	db	79	;'O'
   978  002044  53                 	db	83	;'S'
   979  002045  54                 	db	84	;'T'
   980  002046  20                 	db	32
   981  002047  4D                 	db	77	;'M'
   982  002048  4F                 	db	79	;'O'
   983  002049  44                 	db	68	;'D'
   984  00204A  45                 	db	69	;'E'
   985  00204B  20                 	db	32
   986  00204C  25                 	db	37
   987  00204D  6C                 	db	108	;'l'
   988  00204E  64                 	db	100	;'d'
   989  00204F  20                 	db	32
   990  002050  25                 	db	37
   991  002051  64                 	db	100	;'d'
   992  002052  20                 	db	32
   993  002053  20                 	db	32
   994  002054  23                 	db	35
   995  002055  00                 	db	0
   996  002056                     STR_5:
   997  002056  20                 	db	32
   998  002057  48                 	db	72	;'H'
   999  002058  4F                 	db	79	;'O'
  1000  002059  53                 	db	83	;'S'
  1001  00205A  54                 	db	84	;'T'
  1002  00205B  20                 	db	32
  1003  00205C  4D                 	db	77	;'M'
  1004  00205D  4F                 	db	79	;'O'
  1005  00205E  44                 	db	68	;'D'
  1006  00205F  45                 	db	69	;'E'
  1007  002060  20                 	db	32
  1008  002061  25                 	db	37
  1009  002062  6C                 	db	108	;'l'
  1010  002063  64                 	db	100	;'d'
  1011  002064  20                 	db	32
  1012  002065  20                 	db	32
  1013  002066  20                 	db	32
  1014  002067  23                 	db	35
  1015  002068  00                 	db	0
  1016  002069                     STR_12:
  1017  002069  20                 	db	32
  1018  00206A  53                 	db	83	;'S'
  1019  00206B  25                 	db	37
  1020  00206C  64                 	db	100	;'d'
  1021  00206D  46                 	db	70	;'F'
  1022  00206E  25                 	db	37
  1023  00206F  64                 	db	100	;'d'
  1024  002070  20                 	db	32
  1025  002071  23                 	db	35
  1026  002072  25                 	db	37
  1027  002073  6C                 	db	108	;'l'
  1028  002074  64                 	db	100	;'d'
  1029  002075  20                 	db	32
  1030  002076  20                 	db	32
  1031  002077  20                 	db	32
  1032  002078  20                 	db	32
  1033  002079  00                 	db	0
  1034  00207A                     STR_1:
  1035  00207A  20                 	db	32
  1036  00207B  52                 	db	82	;'R'
  1037  00207C  56                 	db	86	;'V'
  1038  00207D  49                 	db	73	;'I'
  1039  00207E  20                 	db	32
  1040  00207F  48                 	db	72	;'H'
  1041  002080  4F                 	db	79	;'O'
  1042  002081  53                 	db	83	;'S'
  1043  002082  54                 	db	84	;'T'
  1044  002083  20                 	db	32
  1045  002084  54                 	db	84	;'T'
  1046  002085  45                 	db	69	;'E'
  1047  002086  53                 	db	83	;'S'
  1048  002087  54                 	db	84	;'T'
  1049  002088  45                 	db	69	;'E'
  1050  002089  52                 	db	82	;'R'
  1051  00208A  00                 	db	0
  1052  00208B                     STR_4:
  1053  00208B  20                 	db	32
  1054  00208C  46                 	db	70	;'F'
  1055  00208D  47                 	db	71	;'G'
  1056  00208E  42                 	db	66	;'B'
  1057  00208F  40                 	db	64	;'@'
  1058  002090  4D                 	db	77	;'M'
  1059  002091  43                 	db	67	;'C'
  1060  002092  48                 	db	72	;'H'
  1061  002093  50                 	db	80	;'P'
  1062  002094  20                 	db	32
  1063  002095  46                 	db	70	;'F'
  1064  002096  41                 	db	65	;'A'
  1065  002097  42                 	db	66	;'B'
  1066  002098  34                 	db	52	;'4'
  1067  002099  00                 	db	0
  1068  00209A                     STR_6:
  1069  00209A  20                 	db	32
  1070  00209B  53                 	db	83	;'S'
  1071  00209C  25                 	db	37
  1072  00209D  64                 	db	100	;'d'
  1073  00209E  46                 	db	70	;'F'
  1074  00209F  25                 	db	37
  1075  0020A0  64                 	db	100	;'d'
  1076  0020A1  20                 	db	32
  1077  0020A2  23                 	db	35
  1078  0020A3  20                 	db	32
  1079  0020A4  20                 	db	32
  1080  0020A5  20                 	db	32
  1081  0020A6  20                 	db	32
  1082  0020A7  00                 	db	0
  1083  0020A8                     STR_2:
  1084  0020A8  20                 	db	32
  1085  0020A9  56                 	db	86	;'V'
  1086  0020AA  65                 	db	101	;'e'
  1087  0020AB  72                 	db	114	;'r'
  1088  0020AC  73                 	db	115	;'s'
  1089  0020AD  69                 	db	105	;'i'
  1090  0020AE  6F                 	db	111	;'o'
  1091  0020AF  6E                 	db	110	;'n'
  1092  0020B0  20                 	db	32
  1093  0020B1  25                 	db	37
  1094  0020B2  73                 	db	115	;'s'
  1095  0020B3  00                 	db	0
  1096  0020B4                     STR_8:
  1097  0020B4  20                 	db	32
  1098  0020B5  4F                 	db	79	;'O'
  1099  0020B6  4B                 	db	75	;'K'
  1100  0020B7  20                 	db	32
  1101  0020B8  23                 	db	35
  1102  0020B9  00                 	db	0
  1103  0020BA                     STR_7:
  1104  0020BA  20                 	db	32
  1105  0020BB  4F                 	db	79	;'O'
  1106  0020BC  4B                 	db	75	;'K'
  1107  0020BD  51                 	db	81	;'Q'
  1108  0020BE  23                 	db	35
  1109  0020BF  00                 	db	0
  1110  0020C0                     STR_3:
  1111  0020C0  30                 	db	48	;'0'
  1112  0020C1  2E                 	db	46
  1113  0020C2  38                 	db	56	;'8'
  1114  0020C3  30                 	db	48	;'0'
  1115  0020C4  42                 	db	66	;'B'
  1116  0020C5  00                 	db	0
  1117  0020C6                     STR_19:
  1118  0020C6  6C                 	db	108	;'l'
  1119  0020C7  64                 	db	100	;'d'
  1120  0020C8  00                 	db	0
  1121  0020C9                     STR_23:
  1122  0020C9  6C                 	db	108	;'l'
  1123  0020CA  69                 	db	105	;'i'
  1124  0020CB  00                 	db	0
  1125  0020CC                     STR_17:
  1126  0020CC  25                 	db	37
  1127  0020CD  63                 	db	99	;'c'
  1128  0020CE  00                 	db	0
  1129  0000                     
  1130                           ; #config settings
  1131  0020CF  00                 	db	0	; dummy byte at the end
  1132  0000                     
  1133                           	psect	cinit
  1134  004CFE                     __pcinit:
  1135                           	opt callstack 0
  1136  004CFE                     start_initialization:
  1137                           	opt callstack 0
  1138  004CFE                     __initialization:
  1139                           	opt callstack 0
  1140                           
  1141                           ; Initialize objects allocated to BANK3 (56 bytes)
  1142                           ; load TBLPTR registers with __pidataBANK3
  1143  004CFE  0E44               	movlw	low __pidataBANK3
  1144  004D00  6EF6               	movwf	tblptrl,c
  1145  004D02  0E5D               	movlw	high __pidataBANK3
  1146  004D04  6EF7               	movwf	tblptrh,c
  1147  004D06  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1148  004D08  6EF8               	movwf	tblptru,c
  1149  004D0A  EE00  F3C6         	lfsr	0,__pdataBANK3
  1150  004D0E  EE20 F038          	lfsr	2,56
  1151  004D12                     copy_data0:
  1152  004D12  0009               	tblrd		*+
  1153  004D14  006F FFD7 FFEE     	movff	tablat,postinc0
  1154  004D1A  50DD               	movf	postdec2,w,c
  1155  004D1C  50D9               	movf	fsr2l,w,c
  1156  004D1E  E1F9               	bnz	copy_data0
  1157                           
  1158                           ; Initialize objects allocated to BANK2 (30 bytes)
  1159                           ; load TBLPTR registers with __pidataBANK2
  1160  004D20  0ED8               	movlw	low __pidataBANK2
  1161  004D22  6EF6               	movwf	tblptrl,c
  1162  004D24  0E62               	movlw	high __pidataBANK2
  1163  004D26  6EF7               	movwf	tblptrh,c
  1164  004D28  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1165  004D2A  6EF8               	movwf	tblptru,c
  1166  004D2C  EE00  F2C0         	lfsr	0,__pdataBANK2
  1167  004D30  EE20 F01E          	lfsr	2,30
  1168  004D34                     copy_data1:
  1169  004D34  0009               	tblrd		*+
  1170  004D36  006F FFD7 FFEE     	movff	tablat,postinc0
  1171  004D3C  50DD               	movf	postdec2,w,c
  1172  004D3E  50D9               	movf	fsr2l,w,c
  1173  004D40  E1F9               	bnz	copy_data1
  1174                           
  1175                           ; Initialize objects allocated to BANK1 (208 bytes)
  1176                           ; load TBLPTR registers with __pidataBANK1
  1177  004D42  0EA4               	movlw	low __pidataBANK1
  1178  004D44  6EF6               	movwf	tblptrl,c
  1179  004D46  0E4F               	movlw	high __pidataBANK1
  1180  004D48  6EF7               	movwf	tblptrh,c
  1181  004D4A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1182  004D4C  6EF8               	movwf	tblptru,c
  1183  004D4E  EE00  F100         	lfsr	0,__pdataBANK1
  1184  004D52  EE20 F0D0          	lfsr	2,208
  1185  004D56                     copy_data2:
  1186  004D56  0009               	tblrd		*+
  1187  004D58  006F FFD7 FFEE     	movff	tablat,postinc0
  1188  004D5E  50DD               	movf	postdec2,w,c
  1189  004D60  50D9               	movf	fsr2l,w,c
  1190  004D62  E1F9               	bnz	copy_data2
  1191                           
  1192                           ; Initialize objects allocated to BANK0 (94 bytes)
  1193                           ; load TBLPTR registers with __pidataBANK0
  1194  004D64  0E70               	movlw	low __pidataBANK0
  1195  004D66  6EF6               	movwf	tblptrl,c
  1196  004D68  0E58               	movlw	high __pidataBANK0
  1197  004D6A  6EF7               	movwf	tblptrh,c
  1198  004D6C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1199  004D6E  6EF8               	movwf	tblptru,c
  1200  004D70  EE00  F060         	lfsr	0,__pdataBANK0
  1201  004D74  EE20 F05E          	lfsr	2,94
  1202  004D78                     copy_data3:
  1203  004D78  0009               	tblrd		*+
  1204  004D7A  006F FFD7 FFEE     	movff	tablat,postinc0
  1205  004D80  50DD               	movf	postdec2,w,c
  1206  004D82  50D9               	movf	fsr2l,w,c
  1207  004D84  E1F9               	bnz	copy_data3
  1208                           
  1209                           ; Initialize objects allocated to COMRAM (1 bytes)
  1210                           ; load TBLPTR registers with __pidataCOMRAM
  1211  004D86  0EAE               	movlw	low __pidataCOMRAM
  1212  004D88  6EF6               	movwf	tblptrl,c
  1213  004D8A  0E64               	movlw	high __pidataCOMRAM
  1214  004D8C  6EF7               	movwf	tblptrh,c
  1215  004D8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1216  004D90  6EF8               	movwf	tblptru,c
  1217  004D92  0009               	tblrd		*+	;fetch initializer
  1218  004D94  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1219                           
  1220                           ; Clear objects allocated to BANK3 (198 bytes)
  1221  004D9A  EE00  F300         	lfsr	0,__pbssBANK3
  1222  004D9E  0EC6               	movlw	198
  1223  004DA0                     clear_0:
  1224  004DA0  6AEE               	clrf	postinc0,c
  1225  004DA2  06E8               	decf	wreg,f,c
  1226  004DA4  E1FD               	bnz	clear_0
  1227                           
  1228                           ; Clear objects allocated to BANK2 (192 bytes)
  1229  004DA6  EE00  F200         	lfsr	0,__pbssBANK2
  1230  004DAA  0EC0               	movlw	192
  1231  004DAC                     clear_1:
  1232  004DAC  6AEE               	clrf	postinc0,c
  1233  004DAE  06E8               	decf	wreg,f,c
  1234  004DB0  E1FD               	bnz	clear_1
  1235                           
  1236                           ; Clear objects allocated to BANK1 (32 bytes)
  1237  004DB2  EE00  F1D0         	lfsr	0,__pbssBANK1
  1238  004DB6  0E20               	movlw	32
  1239  004DB8                     clear_2:
  1240  004DB8  6AEE               	clrf	postinc0,c
  1241  004DBA  06E8               	decf	wreg,f,c
  1242  004DBC  E1FD               	bnz	clear_2
  1243                           
  1244                           ; Clear objects allocated to BANK0 (61 bytes)
  1245  004DBE  EE00  F0BE         	lfsr	0,__pbssBANK0
  1246  004DC2  0E3D               	movlw	61
  1247  004DC4                     clear_3:
  1248  004DC4  6AEE               	clrf	postinc0,c
  1249  004DC6  06E8               	decf	wreg,f,c
  1250  004DC8  E1FD               	bnz	clear_3
  1251                           
  1252                           ; Clear objects allocated to COMRAM (56 bytes)
  1253  004DCA  EE00  F001         	lfsr	0,__pbssCOMRAM
  1254  004DCE  0E38               	movlw	56
  1255  004DD0                     clear_4:
  1256  004DD0  6AEE               	clrf	postinc0,c
  1257  004DD2  06E8               	decf	wreg,f,c
  1258  004DD4  E1FD               	bnz	clear_4
  1259                           
  1260                           ;
  1261                           ; Setup IVTBASE
  1262                           ;
  1263  004DD6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1264  004DD8  6ED5               	movwf	213,c
  1265  004DDA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1266  004DDC  6ED6               	movwf	214,c
  1267  004DDE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1268  004DE0  6ED7               	movwf	215,c
  1269  004DE2                     end_of_initialization:
  1270                           	opt callstack 0
  1271  004DE2                     __end_of__initialization:
  1272                           	opt callstack 0
  1273  004DE2  0100               	movlb	0
  1274  004DE4  EF68  F010         	goto	_main	;jump to C main() function
  1275                           
  1276                           	psect	bssCOMRAM
  1277  000001                     __pbssCOMRAM:
  1278                           	opt callstack 0
  1279  000001                     secs_II_message@block:
  1280                           	opt callstack 0
  1281  000001                     	ds	7
  1282  000008                     _UART1_TxInterruptHandler:
  1283                           	opt callstack 0
  1284  000008                     	ds	3
  1285  00000B                     _UART1_RxInterruptHandler:
  1286                           	opt callstack 0
  1287  00000B                     	ds	3
  1288  00000E                     _UART2_TxInterruptHandler:
  1289                           	opt callstack 0
  1290  00000E                     	ds	3
  1291  000011                     _UART2_RxInterruptHandler:
  1292                           	opt callstack 0
  1293  000011                     	ds	3
  1294  000014                     _INT2_InterruptHandler:
  1295                           	opt callstack 0
  1296  000014                     	ds	3
  1297  000017                     _INT1_InterruptHandler:
  1298                           	opt callstack 0
  1299  000017                     	ds	3
  1300  00001A                     _INT0_InterruptHandler:
  1301                           	opt callstack 0
  1302  00001A                     	ds	3
  1303  00001D                     _width:
  1304                           	opt callstack 0
  1305  00001D                     	ds	2
  1306  00001F                     _prec:
  1307                           	opt callstack 0
  1308  00001F                     	ds	2
  1309  000021                     _flags:
  1310                           	opt callstack 0
  1311  000021                     	ds	2
  1312  000023                     TMR5_ISR@CountCallBack:
  1313                           	opt callstack 0
  1314  000023                     	ds	2
  1315  000025                     _timer5ReloadVal:
  1316                           	opt callstack 0
  1317  000025                     	ds	2
  1318  000027                     secs_gem_state@block:
  1319                           	opt callstack 0
  1320  000027                     	ds	1
  1321  000028                     t_protocol@requeue:
  1322                           	opt callstack 0
  1323  000028                     	ds	1
  1324  000029                     t_protocol@retry:
  1325                           	opt callstack 0
  1326  000029                     	ds	1
  1327  00002A                     r_protocol@rxData_l:
  1328                           	opt callstack 0
  1329  00002A                     	ds	1
  1330  00002B                     m_protocol@rxData_l:
  1331                           	opt callstack 0
  1332  00002B                     	ds	1
  1333  00002C                     _mode_sw:
  1334                           	opt callstack 0
  1335  00002C                     	ds	1
  1336  00002D                     _uart2RxCount:
  1337                           	opt callstack 0
  1338  00002D                     	ds	1
  1339  00002E                     _uart2RxTail:
  1340                           	opt callstack 0
  1341  00002E                     	ds	1
  1342  00002F                     _uart2RxHead:
  1343                           	opt callstack 0
  1344  00002F                     	ds	1
  1345  000030                     _uart2TxBufferRemaining:
  1346                           	opt callstack 0
  1347  000030                     	ds	1
  1348  000031                     _uart2TxTail:
  1349                           	opt callstack 0
  1350  000031                     	ds	1
  1351  000032                     _uart2TxHead:
  1352                           	opt callstack 0
  1353  000032                     	ds	1
  1354  000033                     _uart1RxCount:
  1355                           	opt callstack 0
  1356  000033                     	ds	1
  1357  000034                     _uart1RxTail:
  1358                           	opt callstack 0
  1359  000034                     	ds	1
  1360  000035                     _uart1RxHead:
  1361                           	opt callstack 0
  1362  000035                     	ds	1
  1363  000036                     _uart1TxBufferRemaining:
  1364                           	opt callstack 0
  1365  000036                     	ds	1
  1366  000037                     _uart1TxTail:
  1367                           	opt callstack 0
  1368  000037                     	ds	1
  1369  000038                     _uart1TxHead:
  1370                           	opt callstack 0
  1371  000038                     	ds	1
  1372                           
  1373                           	psect	dataCOMRAM
  1374  00005D                     __pdataCOMRAM:
  1375                           	opt callstack 0
  1376  00005D                     r_protocol@retry:
  1377                           	opt callstack 0
  1378  00005D                     	ds	1
  1379                           
  1380                           	psect	bssBANK0
  1381  0000BE                     __pbssBANK0:
  1382                           	opt callstack 0
  1383  0000BE                     _r_block:
  1384                           	opt callstack 0
  1385  0000BE                     	ds	13
  1386  0000CB                     _spi_link:
  1387                           	opt callstack 0
  1388  0000CB                     	ds	12
  1389  0000D7                     _tickCount:
  1390                           	opt callstack 0
  1391  0000D7                     	ds	12
  1392  0000E3                     t_protocol@block:
  1393                           	opt callstack 0
  1394  0000E3                     	ds	7
  1395  0000EA                     wdtdelay@dcount:
  1396                           	opt callstack 0
  1397  0000EA                     	ds	4
  1398  0000EE                     _TMR5_InterruptHandler:
  1399                           	opt callstack 0
  1400  0000EE                     	ds	3
  1401  0000F1                     _TMR6_InterruptHandler:
  1402                           	opt callstack 0
  1403  0000F1                     	ds	3
  1404  0000F4                     _ADCC_ADI_InterruptHandler:
  1405                           	opt callstack 0
  1406  0000F4                     	ds	3
  1407  0000F7                     _nout:
  1408                           	opt callstack 0
  1409  0000F7                     	ds	2
  1410  0000F9                     run_checksum@sum:
  1411                           	opt callstack 0
  1412  0000F9                     	ds	2
  1413                           
  1414                           	psect	dataBANK0
  1415  000060                     __pdataBANK0:
  1416                           	opt callstack 0
  1417  000060                     _V:
  1418                           	opt callstack 0
  1419  000060                     	ds	94
  1420                           
  1421                           	psect	bssBANK1
  1422  0001D0                     __pbssBANK1:
  1423                           	opt callstack 0
  1424  0001D0                     _dbuf:
  1425                           	opt callstack 0
  1426  0001D0                     	ds	32
  1427                           
  1428                           	psect	dataBANK1
  1429  000100                     __pdataBANK1:
  1430                           	opt callstack 0
  1431  000100                     stoa@F1144:
  1432                           	opt callstack 0
  1433  000100                     	ds	7
  1434  000107                     _H10:
  1435                           	opt callstack 0
  1436  000107                     	ds	91
  1437  000162                     _H12:
  1438                           	opt callstack 0
  1439  000162                     	ds	30
  1440  000180                     _H24:
  1441                           	opt callstack 0
  1442  000180                     	ds	27
  1443  00019B                     _H17:
  1444                           	opt callstack 0
  1445  00019B                     	ds	20
  1446  0001AF                     _H14:
  1447                           	opt callstack 0
  1448  0001AF                     	ds	17
  1449  0001C0                     _H13:
  1450                           	opt callstack 0
  1451  0001C0                     	ds	16
  1452                           
  1453                           	psect	bssBANK2
  1454  000200                     __pbssBANK2:
  1455                           	opt callstack 0
  1456  000200                     _uart2RxBuffer:
  1457                           	opt callstack 0
  1458  000200                     	ds	64
  1459  000240                     _uart1RxBuffer:
  1460                           	opt callstack 0
  1461  000240                     	ds	64
  1462  000280                     _uart1TxBuffer:
  1463                           	opt callstack 0
  1464  000280                     	ds	64
  1465                           
  1466                           	psect	dataBANK2
  1467  0002C0                     __pdataBANK2:
  1468                           	opt callstack 0
  1469  0002C0                     _H27:
  1470                           	opt callstack 0
  1471  0002C0                     	ds	30
  1472                           
  1473                           	psect	bssBANK3
  1474  000300                     __pbssBANK3:
  1475                           	opt callstack 0
  1476  000300                     _uart2TxBuffer:
  1477                           	opt callstack 0
  1478  000300                     	ds	64
  1479  000340                     _ring_buf2:
  1480                           	opt callstack 0
  1481  000340                     	ds	67
  1482  000383                     _ring_buf1:
  1483                           	opt callstack 0
  1484  000383                     	ds	67
  1485                           
  1486                           	psect	dataBANK3
  1487  0003C6                     __pdataBANK3:
  1488                           	opt callstack 0
  1489  0003C6                     _H53:
  1490                           	opt callstack 0
  1491  0003C6                     	ds	56
  1492                           
  1493                           	psect	cstackCOMRAM
  1494  000059                     __pcstackCOMRAM:
  1495                           	opt callstack 0
  1496  000059                     ??_TMR6_ISR:
  1497  000059                     
  1498                           ; 1 bytes @ 0x0
  1499  000059                     	ds	1
  1500  00005A                     ??_TMR5_ISR:
  1501                           
  1502                           ; 1 bytes @ 0x1
  1503  00005A                     	ds	3
  1504                           
  1505 ;;
  1506 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1507 ;;
  1508 ;; *************** function _main *****************
  1509 ;; Defined at:
  1510 ;;		line 311 in file "main.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  mode            1  [STACK] enum E16897
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1  [STACK] void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 4/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels required when called:   14
  1530 ;; This function calls:
  1531 ;;		_SYSTEM_Initialize
  1532 ;;		_UART1_put_buffer
  1533 ;;		_UART2_put_buffer
  1534 ;;		_WaitMs
  1535 ;;		_eaDogM_WriteCommand
  1536 ;;		_eaDogM_WriteStringAtPos
  1537 ;;		_init_display
  1538 ;;		_m_protocol
  1539 ;;		_r_protocol
  1540 ;;		_sprintf
  1541 ;;		_t_protocol
  1542 ;;		_wait_lcd_done
  1543 ;; This function is called by:
  1544 ;;		Startup code after reset
  1545 ;; This function uses a reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text0
  1549  0020D0                     __ptext0:
  1550                           	opt callstack 0
  1551  0020D0                     _main:
  1552                           	opt callstack 0
  1553                           
  1554                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1555  0020D0  52E6               	movf	postinc1,f,c
  1556                           
  1557                           ;main.c: 313:  UI_STATES mode;;main.c: 316:  SYSTEM_Initialize();
  1558                           
  1559                           ;incstack = 0
  1560  0020D2  ECC7  F02D         	call	_SYSTEM_Initialize	;wreg free
  1561                           
  1562                           ; BSR set to: 60
  1563                           ;main.c: 319:  (INTCON0bits.GIEH = 1);
  1564  0020D6  8ED2               	bsf	16338,7,c	;volatile
  1565                           
  1566                           ; BSR set to: 60
  1567                           ;main.c: 322:  (INTCON0bits.GIEL = 1);
  1568  0020D8  8CD2               	bsf	16338,6,c	;volatile
  1569                           
  1570                           ; BSR set to: 60
  1571                           ;main.c: 324:  V.ui_state = UI_STATE_INIT;
  1572  0020DA  0100               	movlb	0	; () banked
  1573  0020DC  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 329:  WaitMs(300);
  1577  0020DE  0E2C               	movlw	44
  1578  0020E0  6EE6               	movwf	postinc1,c
  1579  0020E2  0E01               	movlw	1
  1580  0020E4  6EE6               	movwf	postinc1,c
  1581  0020E6  EC56  F02F         	call	_WaitMs	;wreg free
  1582                           
  1583                           ;main.c: 330:  if (PORTBbits.RB0) {
  1584  0020EA  A0CB               	btfss	16331,0,c	;volatile
  1585  0020EC  D004               	goto	l9125
  1586                           
  1587                           ;main.c: 331:   mode = UI_STATE_HOST;
  1588                           ;stkvar	_mode @ sp[(-1)+0]
  1589  0020EE  0EFF               	movlw	-1
  1590  0020F0  6AE3               	clrf	plusw1,c
  1591  0020F2  2AE3               	incf	plusw1,f,c
  1592                           
  1593                           ;main.c: 332:  } else {
  1594  0020F4  D004               	goto	l9127
  1595  0020F6                     l9125:
  1596                           
  1597                           ;main.c: 333:   mode = UI_STATE_LOG;
  1598                           ;stkvar	_mode @ sp[(-1)+0]
  1599  0020F6  0EFF               	movlw	-1
  1600  0020F8  6AE3               	clrf	plusw1,c
  1601  0020FA  80E3               	bsf	plusw1,0,c
  1602  0020FC  82E3               	bsf	plusw1,1,c	;indir
  1603  0020FE                     l9127:
  1604                           
  1605                           ;main.c: 336:  if (mode == UI_STATE_HOST) {
  1606                           ;stkvar	_mode @ sp[(-1)+0]
  1607  0020FE  0EFF               	movlw	-1
  1608  002100  04E3               	decf	plusw1,w,c
  1609  002102  A4D8               	btfss	status,2,c
  1610  002104  D003               	goto	l1228
  1611                           
  1612                           ;main.c: 337:   do { LATDbits.LATD0 = 1; } while(0);
  1613  002106  80BD               	bsf	16317,0,c	;volatile
  1614                           
  1615                           ;main.c: 338:   do { LATDbits.LATD1 = 1; } while(0);
  1616  002108  82BD               	bsf	16317,1,c	;volatile
  1617  00210A  D234               	goto	l9301
  1618  00210C                     l1228:
  1619  00210C  90BD               	bcf	16317,0,c	;volatile
  1620                           
  1621                           ;main.c: 341:   do { LATDbits.LATD1 = 0; } while(0);
  1622  00210E  92BD               	bcf	16317,1,c	;volatile
  1623  002110  D231               	goto	l9301
  1624  002112                     l9129:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 347:    init_display();
  1628  002112  ECF4  F026         	call	_init_display	;wreg free
  1629                           
  1630                           ; BSR set to: 61
  1631                           ;main.c: 348:    eaDogM_WriteCommand(0b00001100);
  1632  002116  0E0C               	movlw	12
  1633  002118  6EE6               	movwf	postinc1,c
  1634  00211A  ECFC  F031         	call	_eaDogM_WriteCommand	;wreg free
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 350:    V.ui_state = mode;
  1638                           ;stkvar	_mode @ sp[(-1)+0]
  1639  00211E  0EFF               	movlw	-1
  1640  002120  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;main.c: 351:    V.s_state = SEQ_STATE_INIT;
  1644  002126  6B60               	clrf	_V& (0+255),b	;volatile
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 380:    sprintf(V.buf, " RVI HOST TESTER");
  1648  002128  0E7A               	movlw	STR_1& (0+255)
  1649  00212A  6EE6               	movwf	postinc1,c
  1650  00212C  0E60               	movlw	_V& (0+255)
  1651  00212E  0F06               	addlw	6
  1652  002130  6EE6               	movwf	postinc1,c
  1653  002132  0E02               	movlw	2
  1654  002134  6EE6               	movwf	postinc1,c
  1655  002136  ECA1  F028         	call	_sprintf	;wreg free
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 381:    wait_lcd_done();
  1659  00213A  EC8A  F031         	call	_wait_lcd_done	;wreg free
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;main.c: 382:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1663  00213E  0E60               	movlw	_V& (0+255)
  1664  002140  0F06               	addlw	6
  1665  002142  6EE6               	movwf	postinc1,c
  1666  002144  0E00               	movlw	0
  1667  002146  6EE6               	movwf	postinc1,c
  1668  002148  0E00               	movlw	0
  1669  00214A  6EE6               	movwf	postinc1,c
  1670  00214C  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1671                           
  1672                           ; BSR set to: 59
  1673                           ;main.c: 383:    sprintf(V.buf, " Version %s", "0.80B");
  1674  002150  0EC0               	movlw	STR_3& (0+255)
  1675  002152  6E44               	movwf	btemp+11,c
  1676  002154  0060  F113  FFE6   	movff	btemp+11,postinc1
  1677  00215A  0E20               	movlw	high __smallconst
  1678  00215C  6EE6               	movwf	postinc1,c
  1679  00215E  0EA8               	movlw	STR_2& (0+255)
  1680  002160  6EE6               	movwf	postinc1,c
  1681  002162  0E60               	movlw	_V& (0+255)
  1682  002164  0F06               	addlw	6
  1683  002166  6EE6               	movwf	postinc1,c
  1684  002168  0E04               	movlw	4
  1685  00216A  6EE6               	movwf	postinc1,c
  1686  00216C  ECA1  F028         	call	_sprintf	;wreg free
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;main.c: 384:    wait_lcd_done();
  1690  002170  EC8A  F031         	call	_wait_lcd_done	;wreg free
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 385:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1694  002174  0E60               	movlw	_V& (0+255)
  1695  002176  0F06               	addlw	6
  1696  002178  6EE6               	movwf	postinc1,c
  1697  00217A  0E00               	movlw	0
  1698  00217C  6EE6               	movwf	postinc1,c
  1699  00217E  0E01               	movlw	1
  1700  002180  6EE6               	movwf	postinc1,c
  1701  002182  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1702                           
  1703                           ; BSR set to: 59
  1704                           ;main.c: 386:    sprintf(V.buf, " FGB@MCHP FAB4");
  1705  002186  0E8B               	movlw	STR_4& (0+255)
  1706  002188  6EE6               	movwf	postinc1,c
  1707  00218A  0E60               	movlw	_V& (0+255)
  1708  00218C  0F06               	addlw	6
  1709  00218E  6EE6               	movwf	postinc1,c
  1710  002190  0E02               	movlw	2
  1711  002192  6EE6               	movwf	postinc1,c
  1712  002194  ECA1  F028         	call	_sprintf	;wreg free
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 387:    wait_lcd_done();
  1716  002198  EC8A  F031         	call	_wait_lcd_done	;wreg free
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 388:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1720  00219C  0E60               	movlw	_V& (0+255)
  1721  00219E  0F06               	addlw	6
  1722  0021A0  6EE6               	movwf	postinc1,c
  1723  0021A2  0E00               	movlw	0
  1724  0021A4  6EE6               	movwf	postinc1,c
  1725  0021A6  0E02               	movlw	2
  1726  0021A8  6EE6               	movwf	postinc1,c
  1727  0021AA  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1728                           
  1729                           ; BSR set to: 59
  1730                           ;main.c: 390:    WaitMs(3000);
  1731  0021AE  0EB8               	movlw	184
  1732  0021B0  6EE6               	movwf	postinc1,c
  1733  0021B2  0E0B               	movlw	11
  1734  0021B4  6EE6               	movwf	postinc1,c
  1735  0021B6  EC56  F02F         	call	_WaitMs	;wreg free
  1736                           
  1737                           ;main.c: 391:    break;
  1738  0021BA  D1F0               	goto	l1273
  1739  0021BC                     l1238:
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;main.c: 395:     V.r_l_state = LINK_STATE_IDLE;
  1743  0021BC  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1744                           
  1745                           ;main.c: 396:     V.t_l_state = LINK_STATE_IDLE;
  1746  0021BE  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 397:     V.s_state = SEQ_STATE_RX;
  1750  0021C0  0E01               	movlw	1
  1751  0021C2  6F60               	movwf	_V& (0+255),b	;volatile
  1752                           
  1753                           ;main.c: 398:     if (!V.error && !V.abort) {
  1754  0021C4  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  1755  0021C6  A4D8               	btfss	status,2,c
  1756  0021C8  D024               	goto	l9169
  1757                           
  1758                           ; BSR set to: 0
  1759  0021CA  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  1760  0021CC  A4D8               	btfss	status,2,c
  1761  0021CE  D021               	goto	l9169
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;main.c: 399:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1765  0021D0  0060  F29B  FFE6   	movff	_V+70,postinc1
  1766  0021D6  0060  F29F  FFE6   	movff	_V+71,postinc1
  1767  0021DC  0060  F2A3  FFE6   	movff	_V+72,postinc1
  1768  0021E2  0060  F2A7  FFE6   	movff	_V+73,postinc1
  1769  0021E8  0E56               	movlw	STR_5& (0+255)
  1770  0021EA  6EE6               	movwf	postinc1,c
  1771  0021EC  0E60               	movlw	_V& (0+255)
  1772  0021EE  0F06               	addlw	6
  1773  0021F0  6EE6               	movwf	postinc1,c
  1774  0021F2  0E06               	movlw	6
  1775  0021F4  6EE6               	movwf	postinc1,c
  1776  0021F6  ECA1  F028         	call	_sprintf	;wreg free
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 400:      V.buf[16] = 0;
  1780  0021FA  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 401:      wait_lcd_done();
  1784  0021FC  EC8A  F031         	call	_wait_lcd_done	;wreg free
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 402:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1788  002200  0E60               	movlw	_V& (0+255)
  1789  002202  0F06               	addlw	6
  1790  002204  6EE6               	movwf	postinc1,c
  1791  002206  0E00               	movlw	0
  1792  002208  6EE6               	movwf	postinc1,c
  1793  00220A  0E02               	movlw	2
  1794  00220C  6EE6               	movwf	postinc1,c
  1795  00220E  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1796  002212                     l9169:
  1797                           
  1798                           ;main.c: 405:     WaitMs(50);
  1799  002212  0E32               	movlw	50
  1800  002214  6EE6               	movwf	postinc1,c
  1801  002216  0E00               	movlw	0
  1802  002218  6EE6               	movwf	postinc1,c
  1803  00221A  EC56  F02F         	call	_WaitMs	;wreg free
  1804                           
  1805                           ;main.c: 406:     UART1_put_buffer(0x05);
  1806  00221E  0E05               	movlw	5
  1807  002220  6EE6               	movwf	postinc1,c
  1808  002222  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  1809                           
  1810                           ;main.c: 408:     break;
  1811  002226  D0CB               	goto	l9235
  1812  002228                     l9173:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;main.c: 413:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1816  002228  0E60               	movlw	_V& (0+255)
  1817  00222A  0F04               	addlw	4
  1818  00222C  6EE6               	movwf	postinc1,c
  1819  00222E  EC29  F01A         	call	_r_protocol	;wreg free
  1820  002232  0E04               	movlw	4
  1821  002234  1839               	xorwf	btemp,w,c
  1822  002236  A4D8               	btfss	status,2,c
  1823  002238  D02F               	goto	l9193
  1824                           
  1825                           ;main.c: 414:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1826  00223A  0100               	movlb	0	; () banked
  1827  00223C  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  1828  00223E  6EE6               	movwf	postinc1,c
  1829  002240  0E00               	movlw	0
  1830  002242  6EE6               	movwf	postinc1,c
  1831  002244  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  1832  002246  6EE6               	movwf	postinc1,c
  1833  002248  0E00               	movlw	0
  1834  00224A  6EE6               	movwf	postinc1,c
  1835  00224C  0E9A               	movlw	STR_6& (0+255)
  1836  00224E  6EE6               	movwf	postinc1,c
  1837  002250  0E60               	movlw	_V& (0+255)
  1838  002252  0F06               	addlw	6
  1839  002254  6EE6               	movwf	postinc1,c
  1840  002256  0E06               	movlw	6
  1841  002258  6EE6               	movwf	postinc1,c
  1842  00225A  ECA1  F028         	call	_sprintf	;wreg free
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;main.c: 415:      V.buf[11] = 0;
  1846  00225E  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 416:      wait_lcd_done();
  1850  002260  EC8A  F031         	call	_wait_lcd_done	;wreg free
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;main.c: 417:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1854  002264  0E60               	movlw	_V& (0+255)
  1855  002266  0F06               	addlw	6
  1856  002268  6EE6               	movwf	postinc1,c
  1857  00226A  0E00               	movlw	0
  1858  00226C  6EE6               	movwf	postinc1,c
  1859  00226E  0E00               	movlw	0
  1860  002270  6EE6               	movwf	postinc1,c
  1861  002272  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1862                           
  1863                           ; BSR set to: 59
  1864                           ;main.c: 419:      WaitMs(5);
  1865  002276  0E05               	movlw	5
  1866  002278  6EE6               	movwf	postinc1,c
  1867  00227A  0E00               	movlw	0
  1868  00227C  6EE6               	movwf	postinc1,c
  1869  00227E  EC56  F02F         	call	_WaitMs	;wreg free
  1870                           
  1871                           ;main.c: 421:      if (V.wbit) {
  1872  002282  0100               	movlb	0	; () banked
  1873  002284  A3B7               	btfss	(_V+87)& (0+255),1,b	;volatile
  1874  002286  D006               	goto	l9191
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 422:       V.s_state = SEQ_STATE_TX;
  1878  002288  0E02               	movlw	2
  1879  00228A  6F60               	movwf	_V& (0+255),b	;volatile
  1880                           
  1881                           ;main.c: 423:       V.failed_send = 0;
  1882  00228C  0E87               	movlw	-121
  1883  00228E  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 424:       V.t_l_state = LINK_STATE_IDLE;
  1887  002290  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1888                           
  1889                           ;main.c: 425:      } else {
  1890  002292  D002               	goto	l9193
  1891  002294                     l9191:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 426:       V.s_state = SEQ_STATE_TRIGGER;
  1895  002294  0E03               	movlw	3
  1896  002296  6F60               	movwf	_V& (0+255),b	;volatile
  1897  002298                     l9193:
  1898                           
  1899                           ;main.c: 429:     if (V.r_l_state == LINK_STATE_ERROR)
  1900  002298  0E06               	movlw	6
  1901  00229A  0100               	movlb	0	; () banked
  1902  00229C  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  1903  00229E  D00F               	goto	L28
  1904  0022A0                     l9197:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 436:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1908  0022A0  0E60               	movlw	_V& (0+255)
  1909  0022A2  0F05               	addlw	5
  1910  0022A4  6EE6               	movwf	postinc1,c
  1911  0022A6  ECA2  F01E         	call	_t_protocol	;wreg free
  1912  0022AA  0E04               	movlw	4
  1913  0022AC  1839               	xorwf	btemp,w,c
  1914  0022AE  A4D8               	btfss	status,2,c
  1915  0022B0  D003               	goto	l9201
  1916                           
  1917                           ;main.c: 437:      V.s_state = SEQ_STATE_TRIGGER;
  1918  0022B2  0E03               	movlw	3
  1919  0022B4  0100               	movlb	0	; () banked
  1920  0022B6  6F60               	movwf	_V& (0+255),b	;volatile
  1921  0022B8                     l9201:
  1922                           
  1923                           ;main.c: 439:     if (V.t_l_state == LINK_STATE_ERROR)
  1924  0022B8  0E06               	movlw	6
  1925  0022BA  0100               	movlb	0	; () banked
  1926  0022BC  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  1927  0022BE                     L28:
  1928  0022BE  A4D8               	btfss	status,2,c
  1929  0022C0  D07E               	goto	l9235
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 440:      V.s_state = SEQ_STATE_ERROR;
  1933  0022C2  0E06               	movlw	6
  1934  0022C4  6F60               	movwf	_V& (0+255),b	;volatile
  1935  0022C6  D07B               	goto	l9235
  1936  0022C8                     l1249:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;main.c: 443:     if (V.queue) {
  1940  0022C8  A9B8               	btfss	(_V+88)& (0+255),4,b	;volatile
  1941  0022CA  D01C               	goto	l9215
  1942                           
  1943                           ; BSR set to: 0
  1944  0022CC  A4BE               	btfss	16318,2,c	;volatile
  1945  0022CE  D002               	goto	u6060
  1946  0022D0  0E01               	movlw	1
  1947  0022D2  D001               	goto	u6066
  1948  0022D4                     u6060:
  1949  0022D4  0E00               	movlw	0
  1950  0022D6                     u6066:
  1951  0022D6  0AFF               	xorlw	255
  1952  0022D8  6E44               	movwf	btemp+11,c
  1953  0022DA  4644               	rlncf	btemp+11,f,c
  1954  0022DC  4644               	rlncf	btemp+11,f,c
  1955  0022DE  50BE               	movf	16318,w,c	;volatile
  1956  0022E0  1844               	xorwf	btemp+11,w,c
  1957  0022E2  0BFB               	andlw	-5
  1958  0022E4  1844               	xorwf	btemp+11,w,c
  1959  0022E6  6EBE               	movwf	16318,c	;volatile
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 445:      V.r_l_state = LINK_STATE_IDLE;
  1963  0022E8  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;main.c: 446:      V.t_l_state = LINK_STATE_IDLE;
  1967  0022EA  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;main.c: 447:      V.s_state = SEQ_STATE_TX;
  1971  0022EC  0E02               	movlw	2
  1972  0022EE  6F60               	movwf	_V& (0+255),b	;volatile
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 448:      sprintf(V.buf, " OKQ#");
  1976  0022F0  0EBA               	movlw	STR_7& (0+255)
  1977  0022F2  6EE6               	movwf	postinc1,c
  1978  0022F4  0E60               	movlw	_V& (0+255)
  1979  0022F6  0F06               	addlw	6
  1980  0022F8  6EE6               	movwf	postinc1,c
  1981  0022FA  0E02               	movlw	2
  1982  0022FC  6EE6               	movwf	postinc1,c
  1983  0022FE  ECA1  F028         	call	_sprintf	;wreg free
  1984                           
  1985                           ;main.c: 449:     } else {
  1986  002302  D00B               	goto	l9219
  1987  002304                     l9215:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;main.c: 450:      V.s_state = SEQ_STATE_DONE;
  1991  002304  0E05               	movlw	5
  1992  002306  6F60               	movwf	_V& (0+255),b	;volatile
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 451:      sprintf(V.buf, " OK #");
  1996  002308  0EB4               	movlw	STR_8& (0+255)
  1997  00230A  6EE6               	movwf	postinc1,c
  1998  00230C  0E60               	movlw	_V& (0+255)
  1999  00230E  0F06               	addlw	6
  2000  002310  6EE6               	movwf	postinc1,c
  2001  002312  0E02               	movlw	2
  2002  002314  6EE6               	movwf	postinc1,c
  2003  002316  ECA1  F028         	call	_sprintf	;wreg free
  2004  00231A                     l9219:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;main.c: 453:     wait_lcd_done();
  2008  00231A  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 454:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2012  00231E  0E60               	movlw	_V& (0+255)
  2013  002320  0F06               	addlw	6
  2014  002322  6EE6               	movwf	postinc1,c
  2015  002324  0E0B               	movlw	11
  2016  002326  6EE6               	movwf	postinc1,c
  2017  002328  0E00               	movlw	0
  2018  00232A  6EE6               	movwf	postinc1,c
  2019  00232C  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2020                           
  2021                           ;main.c: 455:     break;
  2022  002330  D046               	goto	l9235
  2023  002332                     l1254:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 457:     V.s_state = SEQ_STATE_INIT;
  2027  002332  6B60               	clrf	_V& (0+255),b	;volatile
  2028                           
  2029                           ;main.c: 458:     break;
  2030  002334  D044               	goto	l9235
  2031  002336                     l1256:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 461:     V.s_state = SEQ_STATE_INIT;
  2035  002336  6B60               	clrf	_V& (0+255),b	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;main.c: 462:     sprintf(V.buf, "E R%d T%d E%d A%d G%d#", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort, V.g_state);
  2039  002338  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2040  00233A  6EE6               	movwf	postinc1,c
  2041  00233C  0E00               	movlw	0
  2042  00233E  6EE6               	movwf	postinc1,c
  2043  002340  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2044  002342  6EE6               	movwf	postinc1,c
  2045  002344  0E00               	movlw	0
  2046  002346  6EE6               	movwf	postinc1,c
  2047  002348  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2048  00234A  6EE6               	movwf	postinc1,c
  2049  00234C  0E00               	movlw	0
  2050  00234E  6EE6               	movwf	postinc1,c
  2051  002350  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2052  002352  6EE6               	movwf	postinc1,c
  2053  002354  0E00               	movlw	0
  2054  002356  6EE6               	movwf	postinc1,c
  2055  002358  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2056  00235A  6EE6               	movwf	postinc1,c
  2057  00235C  0E00               	movlw	0
  2058  00235E  6EE6               	movwf	postinc1,c
  2059  002360  0E01               	movlw	STR_9& (0+255)
  2060  002362  6EE6               	movwf	postinc1,c
  2061  002364  0E60               	movlw	_V& (0+255)
  2062  002366  0F06               	addlw	6
  2063  002368  6EE6               	movwf	postinc1,c
  2064  00236A  0E0C               	movlw	12
  2065  00236C  6EE6               	movwf	postinc1,c
  2066  00236E  ECA1  F028         	call	_sprintf	;wreg free
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;main.c: 463:     V.buf[16] = 0;
  2070  002372  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;main.c: 464:     wait_lcd_done();
  2074  002374  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;main.c: 465:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2078  002378  0E60               	movlw	_V& (0+255)
  2079  00237A  0F06               	addlw	6
  2080  00237C  6EE6               	movwf	postinc1,c
  2081  00237E  0E00               	movlw	0
  2082  002380  6EE6               	movwf	postinc1,c
  2083  002382  0E02               	movlw	2
  2084  002384  6EE6               	movwf	postinc1,c
  2085  002386  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2086                           
  2087                           ;main.c: 466:     break;
  2088  00238A  D019               	goto	l9235
  2089  00238C                     l9233:
  2090                           
  2091                           ; BSR set to: 0
  2092  00238C  5160               	movf	_V& (0+255),w,b	;volatile
  2093  00238E  6E43               	movwf	btemp+10,c
  2094  002390  6A44               	clrf	btemp+11,c
  2095                           
  2096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2097                           ; Switch size 1, requested type "simple"
  2098                           ; Number of cases is 1, Range of values is 0 to 0
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            4     3 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  002392  5044               	movf	btemp+11,w,c
  2104  002394  0A00               	xorlw	0	; case 0
  2105  002396  A4D8               	btfss	status,2,c
  2106  002398  D7CE               	goto	l1256
  2107                           
  2108                           ; BSR set to: 0
  2109                           ; Switch size 1, requested type "simple"
  2110                           ; Number of cases is 6, Range of values is 0 to 6
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte           19    10 (average)
  2114                           ;	Chosen strategy is simple_byte
  2115  00239A  5043               	movf	btemp+10,w,c
  2116  00239C  0A00               	xorlw	0	; case 0
  2117  00239E  B4D8               	btfsc	status,2,c
  2118  0023A0  D70D               	goto	l1238
  2119  0023A2  0A01               	xorlw	1	; case 1
  2120  0023A4  B4D8               	btfsc	status,2,c
  2121  0023A6  D740               	goto	l9173
  2122  0023A8  0A03               	xorlw	3	; case 2
  2123  0023AA  B4D8               	btfsc	status,2,c
  2124  0023AC  D779               	goto	l9197
  2125  0023AE  0A01               	xorlw	1	; case 3
  2126  0023B0  B4D8               	btfsc	status,2,c
  2127  0023B2  D78A               	goto	l1249
  2128  0023B4  0A06               	xorlw	6	; case 5
  2129  0023B6  B4D8               	btfsc	status,2,c
  2130  0023B8  D7BC               	goto	l1254
  2131  0023BA  0A03               	xorlw	3	; case 6
  2132  0023BC  D7BC               	goto	l1256
  2133  0023BE                     l9235:
  2134                           
  2135                           ;main.c: 468:    if (!V.error && !V.abort) {
  2136  0023BE  0100               	movlb	0	; () banked
  2137  0023C0  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2138  0023C2  A4D8               	btfss	status,2,c
  2139  0023C4  D0EB               	goto	l1273
  2140                           
  2141                           ; BSR set to: 0
  2142  0023C6  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2143  0023C8  A4D8               	btfss	status,2,c
  2144  0023CA  D0E8               	goto	l1273
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 469:     sprintf(V.buf, "HOST MODE %ld %d  #", V.ticks, V.g_state);
  2148  0023CC  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2149  0023CE  6EE6               	movwf	postinc1,c
  2150  0023D0  0E00               	movlw	0
  2151  0023D2  6EE6               	movwf	postinc1,c
  2152  0023D4  0060  F29B  FFE6   	movff	_V+70,postinc1
  2153  0023DA  0060  F29F  FFE6   	movff	_V+71,postinc1
  2154  0023E0  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2155  0023E6  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2156  0023EC  0E42               	movlw	STR_10& (0+255)
  2157  0023EE  6EE6               	movwf	postinc1,c
  2158  0023F0  0E60               	movlw	_V& (0+255)
  2159  0023F2  0F06               	addlw	6
  2160  0023F4  6EE6               	movwf	postinc1,c
  2161  0023F6  0E08               	movlw	8
  2162  0023F8  6EE6               	movwf	postinc1,c
  2163  0023FA  ECA1  F028         	call	_sprintf	;wreg free
  2164  0023FE                     l9241:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 470:     V.buf[16] = 0;
  2168  0023FE  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;main.c: 471:     wait_lcd_done();
  2172  002400  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 472:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2176  002404  0E60               	movlw	_V& (0+255)
  2177  002406  0F06               	addlw	6
  2178  002408  6EE6               	movwf	postinc1,c
  2179  00240A  0E00               	movlw	0
  2180  00240C  6EE6               	movwf	postinc1,c
  2181  00240E  0E02               	movlw	2
  2182  002410  6EE6               	movwf	postinc1,c
  2183  002412  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2184  002416  D0C2               	goto	l1273
  2185  002418                     l1260:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 478:     V.m_l_state = LINK_STATE_IDLE;
  2189  002418  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;main.c: 479:     V.s_state = SEQ_STATE_RX;
  2193  00241A  0E01               	movlw	1
  2194  00241C  6F60               	movwf	_V& (0+255),b	;volatile
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 480:     sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2198  00241E  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2199  002420  6EE6               	movwf	postinc1,c
  2200  002422  0E00               	movlw	0
  2201  002424  6EE6               	movwf	postinc1,c
  2202  002426  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2203  002428  6EE6               	movwf	postinc1,c
  2204  00242A  0E00               	movlw	0
  2205  00242C  6EE6               	movwf	postinc1,c
  2206  00242E  0E18               	movlw	STR_11& (0+255)
  2207  002430  6EE6               	movwf	postinc1,c
  2208  002432  0E60               	movlw	_V& (0+255)
  2209  002434  0F06               	addlw	6
  2210  002436  6EE6               	movwf	postinc1,c
  2211  002438  0E06               	movlw	6
  2212  00243A  6EE6               	movwf	postinc1,c
  2213  00243C  ECA1  F028         	call	_sprintf	;wreg free
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 481:     V.buf[16] = 0;
  2217  002440  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;main.c: 482:     wait_lcd_done();
  2221  002442  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 483:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2225  002446  0E60               	movlw	_V& (0+255)
  2226  002448  0F06               	addlw	6
  2227  00244A  6EE6               	movwf	postinc1,c
  2228  00244C  0E00               	movlw	0
  2229  00244E  6EE6               	movwf	postinc1,c
  2230  002450  0E02               	movlw	2
  2231  002452  6EE6               	movwf	postinc1,c
  2232  002454  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2233                           
  2234                           ; BSR set to: 59
  2235                           ;main.c: 486:     if (LATEbits.LATE0) {
  2236  002458  A0BE               	btfss	16318,0,c	;volatile
  2237  00245A  D005               	goto	l9261
  2238                           
  2239                           ; BSR set to: 59
  2240                           ;main.c: 487:      UART2_put_buffer(0x05);
  2241  00245C  0E05               	movlw	5
  2242  00245E  6EE6               	movwf	postinc1,c
  2243  002460  EC2C  F02F         	call	_UART2_put_buffer	;wreg free
  2244                           
  2245                           ;main.c: 488:     } else {
  2246  002464  D072               	goto	l9291
  2247  002466                     l9261:
  2248                           
  2249                           ; BSR set to: 59
  2250                           ;main.c: 489:      UART1_put_buffer(0x05);
  2251  002466  0E05               	movlw	5
  2252  002468  6EE6               	movwf	postinc1,c
  2253  00246A  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  2254  00246E  D06D               	goto	l9291
  2255  002470                     l9263:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 497:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2259  002470  0E60               	movlw	_V& (0+255)
  2260  002472  0F03               	addlw	3
  2261  002474  6EE6               	movwf	postinc1,c
  2262  002476  EC1F  F013         	call	_m_protocol	;wreg free
  2263  00247A  0E04               	movlw	4
  2264  00247C  1839               	xorwf	btemp,w,c
  2265  00247E  A4D8               	btfss	status,2,c
  2266  002480  D02D               	goto	l9275
  2267                           
  2268                           ;main.c: 498:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2269  002482  0060  F29B  FFE6   	movff	_V+70,postinc1
  2270  002488  0060  F29F  FFE6   	movff	_V+71,postinc1
  2271  00248E  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2272  002494  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2273  00249A  0100               	movlb	0	; () banked
  2274  00249C  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2275  00249E  6EE6               	movwf	postinc1,c
  2276  0024A0  0E00               	movlw	0
  2277  0024A2  6EE6               	movwf	postinc1,c
  2278  0024A4  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2279  0024A6  6EE6               	movwf	postinc1,c
  2280  0024A8  0E00               	movlw	0
  2281  0024AA  6EE6               	movwf	postinc1,c
  2282  0024AC  0E69               	movlw	STR_12& (0+255)
  2283  0024AE  6EE6               	movwf	postinc1,c
  2284  0024B0  0E60               	movlw	_V& (0+255)
  2285  0024B2  0F06               	addlw	6
  2286  0024B4  6EE6               	movwf	postinc1,c
  2287  0024B6  0E0A               	movlw	10
  2288  0024B8  6EE6               	movwf	postinc1,c
  2289  0024BA  ECA1  F028         	call	_sprintf	;wreg free
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;main.c: 499:      V.buf[11] = 0;
  2293  0024BE  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 500:      wait_lcd_done();
  2297  0024C0  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;main.c: 501:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2301  0024C4  0E60               	movlw	_V& (0+255)
  2302  0024C6  0F06               	addlw	6
  2303  0024C8  6EE6               	movwf	postinc1,c
  2304  0024CA  0E00               	movlw	0
  2305  0024CC  6EE6               	movwf	postinc1,c
  2306  0024CE  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  2307  0024D0  6EE6               	movwf	postinc1,c
  2308  0024D2  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2309                           
  2310                           ; BSR set to: 59
  2311                           ;main.c: 502:      V.s_state = SEQ_STATE_TRIGGER;
  2312  0024D6  0E03               	movlw	3
  2313  0024D8  0100               	movlb	0	; () banked
  2314  0024DA  6F60               	movwf	_V& (0+255),b	;volatile
  2315  0024DC                     l9275:
  2316                           
  2317                           ;main.c: 504:     if (V.m_l_state == LINK_STATE_ERROR)
  2318  0024DC  0E06               	movlw	6
  2319  0024DE  0100               	movlb	0	; () banked
  2320  0024E0  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2321  0024E2  A4D8               	btfss	status,2,c
  2322  0024E4  D032               	goto	l9291
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;main.c: 505:      V.s_state = SEQ_STATE_ERROR;
  2326  0024E6  0E06               	movlw	6
  2327  0024E8  6F60               	movwf	_V& (0+255),b	;volatile
  2328  0024EA  D02F               	goto	l9291
  2329  0024EC                     l9279:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 508:     V.s_state = SEQ_STATE_DONE;
  2333  0024EC  0E05               	movlw	5
  2334  0024EE  6F60               	movwf	_V& (0+255),b	;volatile
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;main.c: 509:     sprintf(V.buf, " OK #");
  2338  0024F0  0EB4               	movlw	STR_8& (0+255)
  2339  0024F2  6EE6               	movwf	postinc1,c
  2340  0024F4  0E60               	movlw	_V& (0+255)
  2341  0024F6  0F06               	addlw	6
  2342  0024F8  6EE6               	movwf	postinc1,c
  2343  0024FA  0E02               	movlw	2
  2344  0024FC  6EE6               	movwf	postinc1,c
  2345  0024FE  ECA1  F028         	call	_sprintf	;wreg free
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 510:     wait_lcd_done();
  2349  002502  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main.c: 511:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2353  002506  0E60               	movlw	_V& (0+255)
  2354  002508  0F06               	addlw	6
  2355  00250A  6EE6               	movwf	postinc1,c
  2356  00250C  0E0B               	movlw	11
  2357  00250E  6EE6               	movwf	postinc1,c
  2358  002510  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  2359  002512  6EE6               	movwf	postinc1,c
  2360  002514  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2361                           
  2362                           ;main.c: 512:     break;
  2363  002518  D018               	goto	l9291
  2364  00251A                     l1268:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;main.c: 518:     V.s_state = SEQ_STATE_INIT;
  2368                           
  2369                           ;main.c: 517:    default:
  2370                           
  2371                           ;main.c: 515:     break;
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;main.c: 514:     V.s_state = SEQ_STATE_INIT;
  2375  00251A  6B60               	clrf	_V& (0+255),b	;volatile
  2376                           
  2377                           ;main.c: 519:     break;
  2378  00251C  D016               	goto	l9291
  2379  00251E                     l9289:
  2380                           
  2381                           ; BSR set to: 0
  2382  00251E  5160               	movf	_V& (0+255),w,b	;volatile
  2383  002520  6E43               	movwf	btemp+10,c
  2384  002522  6A44               	clrf	btemp+11,c
  2385                           
  2386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 1, Range of values is 0 to 0
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            4     3 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  002524  5044               	movf	btemp+11,w,c
  2394  002526  0A00               	xorlw	0	; case 0
  2395  002528  A4D8               	btfss	status,2,c
  2396  00252A  D7F7               	goto	l1268
  2397                           
  2398                           ; BSR set to: 0
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 5, Range of values is 0 to 6
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte           16     9 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405  00252C  5043               	movf	btemp+10,w,c
  2406  00252E  0A00               	xorlw	0	; case 0
  2407  002530  B4D8               	btfsc	status,2,c
  2408  002532  D772               	goto	l1260
  2409  002534  0A01               	xorlw	1	; case 1
  2410  002536  B4D8               	btfsc	status,2,c
  2411  002538  D79B               	goto	l9263
  2412  00253A  0A02               	xorlw	2	; case 3
  2413  00253C  B4D8               	btfsc	status,2,c
  2414  00253E  D7D6               	goto	l9279
  2415  002540  0A06               	xorlw	6	; case 5
  2416  002542  B4D8               	btfsc	status,2,c
  2417  002544  D7EA               	goto	l1268
  2418  002546  0A03               	xorlw	3	; case 6
  2419  002548  D7E8               	goto	l1268
  2420  00254A                     l9291:
  2421                           
  2422                           ;main.c: 521:    sprintf(V.buf, "LOG MODE %d %d     #", V.uart, V.g_state);
  2423  00254A  0100               	movlb	0	; () banked
  2424  00254C  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2425  00254E  6EE6               	movwf	postinc1,c
  2426  002550  0E00               	movlw	0
  2427  002552  6EE6               	movwf	postinc1,c
  2428  002554  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2429  002556  6EE6               	movwf	postinc1,c
  2430  002558  0E00               	movlw	0
  2431  00255A  6EE6               	movwf	postinc1,c
  2432  00255C  0E18               	movlw	STR_11& (0+255)
  2433  00255E  6EE6               	movwf	postinc1,c
  2434  002560  0E60               	movlw	_V& (0+255)
  2435  002562  0F06               	addlw	6
  2436  002564  6EE6               	movwf	postinc1,c
  2437  002566  0E06               	movlw	6
  2438  002568  6EE6               	movwf	postinc1,c
  2439  00256A  ECA1  F028         	call	_sprintf	;wreg free
  2440  00256E  D747               	goto	l9241
  2441  002570                     l1272:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 528:    V.ui_state = UI_STATE_INIT;
  2445  002570  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2446                           
  2447                           ;main.c: 529:    break;
  2448  002572  D014               	goto	l1273
  2449  002574                     l9301:
  2450  002574  0100               	movlb	0	; () banked
  2451  002576  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2452  002578  6E43               	movwf	btemp+10,c
  2453  00257A  6A44               	clrf	btemp+11,c
  2454                           
  2455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2456                           ; Switch size 1, requested type "simple"
  2457                           ; Number of cases is 1, Range of values is 0 to 0
  2458                           ; switch strategies available:
  2459                           ; Name         Instructions Cycles
  2460                           ; simple_byte            4     3 (average)
  2461                           ;	Chosen strategy is simple_byte
  2462  00257C  5044               	movf	btemp+11,w,c
  2463  00257E  0A00               	xorlw	0	; case 0
  2464  002580  A4D8               	btfss	status,2,c
  2465  002582  D7F6               	goto	l1272
  2466                           
  2467                           ; BSR set to: 0
  2468                           ; Switch size 1, requested type "simple"
  2469                           ; Number of cases is 4, Range of values is 0 to 4
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte           13     7 (average)
  2473                           ;	Chosen strategy is simple_byte
  2474  002584  5043               	movf	btemp+10,w,c
  2475  002586  0A00               	xorlw	0	; case 0
  2476  002588  B4D8               	btfsc	status,2,c
  2477  00258A  D5C3               	goto	l9129
  2478  00258C  0A01               	xorlw	1	; case 1
  2479  00258E  B4D8               	btfsc	status,2,c
  2480  002590  D6FD               	goto	l9233
  2481  002592  0A02               	xorlw	2	; case 3
  2482  002594  B4D8               	btfsc	status,2,c
  2483  002596  D7C3               	goto	l9289
  2484  002598  0A07               	xorlw	7	; case 4
  2485  00259A  D7EA               	goto	l1272
  2486  00259C                     l1273:
  2487  00259C  82BE               	bsf	16318,1,c	;volatile
  2488                           
  2489                           ;main.c: 532:   if (V.ticks) {
  2490  00259E  0100               	movlb	0	; () banked
  2491  0025A0  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2492  0025A2  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2493  0025A4  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2494  0025A6  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2495  0025A8  B4D8               	btfsc	status,2,c
  2496  0025AA  D016               	goto	l9309
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 533:    if (V.failed_receive) {
  2500  0025AC  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  2501  0025AE  0B0F               	andlw	15
  2502  0025B0  0900               	iorlw	0
  2503  0025B2  B4D8               	btfsc	status,2,c
  2504  0025B4  D003               	goto	l1282
  2505                           
  2506                           ; BSR set to: 0
  2507                           
  2508                           ;main.c: 534:     do { LATDbits.LATD4 = 0; } while(0);
  2509  0025B6  98BD               	bcf	16317,4,c	;volatile
  2510                           
  2511                           ; BSR set to: 0
  2512                           
  2513                           ;main.c: 535:     do { LATDbits.LATD5 = 1; } while(0);
  2514  0025B8  8ABD               	bsf	16317,5,c	;volatile
  2515  0025BA  D002               	goto	l9307
  2516  0025BC                     l1282:
  2517                           
  2518                           ; BSR set to: 0
  2519  0025BC  88BD               	bsf	16317,4,c	;volatile
  2520                           
  2521                           ; BSR set to: 0
  2522                           
  2523                           ;main.c: 538:     do { LATDbits.LATD5 = 0; } while(0);
  2524  0025BE  9ABD               	bcf	16317,5,c	;volatile
  2525  0025C0                     l9307:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 540:    if (V.failed_send) {
  2529  0025C0  31B7               	rrcf	(_V+87)& (0+255),w,b	;volatile
  2530  0025C2  32E8               	rrcf	wreg,f,c
  2531  0025C4  32E8               	rrcf	wreg,f,c
  2532  0025C6  0B0F               	andlw	15
  2533  0025C8  0900               	iorlw	0
  2534  0025CA  B4D8               	btfsc	status,2,c
  2535  0025CC  D003               	goto	l1292
  2536                           
  2537                           ; BSR set to: 0
  2538                           
  2539                           ;main.c: 541:     do { LATDbits.LATD6 = 0; } while(0);
  2540  0025CE  9CBD               	bcf	16317,6,c	;volatile
  2541                           
  2542                           ; BSR set to: 0
  2543                           
  2544                           ;main.c: 542:     do { LATDbits.LATD7 = 1; } while(0);
  2545  0025D0  8EBD               	bsf	16317,7,c	;volatile
  2546  0025D2  D002               	goto	l9309
  2547  0025D4                     l1292:
  2548                           
  2549                           ; BSR set to: 0
  2550  0025D4  8CBD               	bsf	16317,6,c	;volatile
  2551                           
  2552                           ; BSR set to: 0
  2553                           
  2554                           ;main.c: 545:     do { LATDbits.LATD7 = 0; } while(0);
  2555  0025D6  9EBD               	bcf	16317,7,c	;volatile
  2556  0025D8                     l9309:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;main.c: 548:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2560  0025D8  31B7               	rrcf	(_V+87)& (0+255),w,b	;volatile
  2561  0025DA  32E8               	rrcf	wreg,f,c
  2562  0025DC  32E8               	rrcf	wreg,f,c
  2563  0025DE  0B0F               	andlw	15
  2564  0025E0  6EE6               	movwf	postinc1,c
  2565  0025E2  0E00               	movlw	0
  2566  0025E4  6EE6               	movwf	postinc1,c
  2567  0025E6  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  2568  0025E8  0B0F               	andlw	15
  2569  0025EA  6EE6               	movwf	postinc1,c
  2570  0025EC  0E00               	movlw	0
  2571  0025EE  6EE6               	movwf	postinc1,c
  2572  0025F0  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2573  0025F2  6EE6               	movwf	postinc1,c
  2574  0025F4  0E00               	movlw	0
  2575  0025F6  6EE6               	movwf	postinc1,c
  2576  0025F8  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2577  0025FA  6EE6               	movwf	postinc1,c
  2578  0025FC  0E00               	movlw	0
  2579  0025FE  6EE6               	movwf	postinc1,c
  2580  002600  0E2D               	movlw	STR_15& (0+255)
  2581  002602  6EE6               	movwf	postinc1,c
  2582  002604  0E60               	movlw	_V& (0+255)
  2583  002606  0F06               	addlw	6
  2584  002608  6EE6               	movwf	postinc1,c
  2585  00260A  0E0A               	movlw	10
  2586  00260C  6EE6               	movwf	postinc1,c
  2587  00260E  ECA1  F028         	call	_sprintf	;wreg free
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;main.c: 549:   V.buf[16] = 0;
  2591  002612  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;main.c: 550:   wait_lcd_done();
  2595  002614  EC8A  F031         	call	_wait_lcd_done	;wreg free
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 551:   if (mode != UI_STATE_LOG)
  2599                           ;stkvar	_mode @ sp[(-1)+0]
  2600  002618  0EFF               	movlw	-1
  2601  00261A  006F FF8C  F039    	movff	plusw1,btemp
  2602  002620  0E03               	movlw	3
  2603  002622  1839               	xorwf	btemp,w,c
  2604  002624  B4D8               	btfsc	status,2,c
  2605  002626  D009               	goto	l9319
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;main.c: 552:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2609  002628  0E60               	movlw	_V& (0+255)
  2610  00262A  0F06               	addlw	6
  2611  00262C  6EE6               	movwf	postinc1,c
  2612  00262E  0E00               	movlw	0
  2613  002630  6EE6               	movwf	postinc1,c
  2614  002632  0E01               	movlw	1
  2615  002634  6EE6               	movwf	postinc1,c
  2616  002636  ECD4  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2617  00263A                     l9319:
  2618  00263A  92BE               	bcf	16318,1,c	;volatile
  2619  00263C  D79B               	goto	l9301
  2620  00263E                     __end_of_main:
  2621                           	opt callstack 0
  2622                           
  2623 ;; *************** function _t_protocol *****************
  2624 ;; Defined at:
  2625 ;;		line 314 in file "gemsecs.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  t_link          1  [STACK] PTR enum E16173
  2628 ;;		 -> V(94), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  rxData          1  [STACK] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1  [STACK] enum E16913
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    5
  2647 ;; This function calls:
  2648 ;;		_StartTimer
  2649 ;;		_TimerDone
  2650 ;;		_UART1_Read
  2651 ;;		_UART1_Write
  2652 ;;		_UART1_is_rx_ready
  2653 ;;		_UART1_put_buffer
  2654 ;;		_WaitMs
  2655 ;;		_secs_II_message
  2656 ;;		_secs_send
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text1
  2663  003D44                     __ptext1:
  2664                           	opt callstack 0
  2665  003D44                     _t_protocol:
  2666                           	opt callstack 0
  2667                           
  2668                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2669  003D44  52E6               	movf	postinc1,f,c
  2670                           
  2671                           ;gemsecs.c: 314: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 315: {;gemsecs.
      +                          c: 316:  uint8_t rxData;;gemsecs.c: 317:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          318:  static response_type block;;gemsecs.c: 320:  switch (*t_link) {
  2672                           
  2673                           ;incstack = 0
  2674  003D46  D124               	goto	l8895
  2675  003D48                     l1674:
  2676                           
  2677                           ;gemsecs.c: 322:   V.error = LINK_ERROR_NONE;
  2678  003D48  0100               	movlb	0	; () banked
  2679  003D4A  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;gemsecs.c: 323:   retry = 3;
  2683  003D4C  0E03               	movlw	3
  2684  003D4E  6E29               	movwf	t_protocol@retry,c
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;gemsecs.c: 324:   UART1_Write(0x05);
  2688  003D50  0E05               	movlw	5
  2689  003D52  6EE6               	movwf	postinc1,c
  2690  003D54  EC27  F02E         	call	_UART1_Write	;wreg free
  2691                           
  2692                           ; BSR set to: 57
  2693                           ;gemsecs.c: 325:   StartTimer(TMR_T2, 2000);
  2694  003D58  0ED0               	movlw	208
  2695  003D5A  6EE6               	movwf	postinc1,c
  2696  003D5C  0E07               	movlw	7
  2697  003D5E  6EE6               	movwf	postinc1,c
  2698  003D60  0E02               	movlw	2
  2699  003D62  6EE6               	movwf	postinc1,c
  2700  003D64  EC84  F02E         	call	_StartTimer	;wreg free
  2701                           
  2702                           ;gemsecs.c: 326:   *t_link = LINK_STATE_ENQ;
  2703                           ;stkvar	_t_link @ sp[(-1)+-1]
  2704  003D68  0EFE               	movlw	-2
  2705  003D6A  50E3               	movf	plusw1,w,c
  2706  003D6C  6ED9               	movwf	fsr2l,c
  2707  003D6E  6ADA               	clrf	fsr2h,c
  2708  003D70  0E01               	movlw	1
  2709  003D72  6EDF               	movwf	indf2,c
  2710                           
  2711                           ;gemsecs.c: 328:   WaitMs(5);
  2712  003D74  0E05               	movlw	5
  2713  003D76  6EE6               	movwf	postinc1,c
  2714  003D78  0E00               	movlw	0
  2715  003D7A  6EE6               	movwf	postinc1,c
  2716  003D7C  EC56  F02F         	call	_WaitMs	;wreg free
  2717                           
  2718                           ;gemsecs.c: 329:   UART1_put_buffer(0x04);
  2719  003D80  0E04               	movlw	4
  2720  003D82  6EE6               	movwf	postinc1,c
  2721  003D84  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  2722                           
  2723                           ;gemsecs.c: 331:   break;
  2724  003D88  D124               	goto	l8897
  2725  003D8A                     l8807:
  2726                           
  2727                           ;gemsecs.c: 333:   if (TimerDone(TMR_T2)) {
  2728  003D8A  0E02               	movlw	2
  2729  003D8C  6EE6               	movwf	postinc1,c
  2730  003D8E  ECF7  F030         	call	_TimerDone	;wreg free
  2731  003D92  5039               	movf	btemp,w,c
  2732  003D94  B4D8               	btfsc	status,2,c
  2733  003D96  D01A               	goto	l8817
  2734                           
  2735                           ;gemsecs.c: 334:    if (!retry--) {
  2736  003D98  0629               	decf	t_protocol@retry,f,c
  2737  003D9A  2829               	incf	t_protocol@retry,w,c
  2738  003D9C  A4D8               	btfss	status,2,c
  2739  003D9E  D00D               	goto	l8815
  2740                           
  2741                           ;gemsecs.c: 335:     V.error = LINK_ERROR_T2;
  2742  003DA0  0E02               	movlw	2
  2743  003DA2  0100               	movlb	0	; () banked
  2744  003DA4  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2745                           
  2746                           ;gemsecs.c: 336:     V.failed_send = 1;
  2747  003DA6  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2748  003DA8  0B87               	andlw	-121
  2749  003DAA  0908               	iorlw	8
  2750  003DAC  6FB7               	movwf	(_V+87)& (0+255),b	;volatile
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;gemsecs.c: 337:     *t_link = LINK_STATE_NAK;
  2754                           ;stkvar	_t_link @ sp[(-1)+-1]
  2755  003DAE  0EFE               	movlw	-2
  2756  003DB0  50E3               	movf	plusw1,w,c
  2757  003DB2  6ED9               	movwf	fsr2l,c
  2758  003DB4  6ADA               	clrf	fsr2h,c
  2759  003DB6  0E05               	movlw	5
  2760  003DB8  D0E9               	goto	L2
  2761  003DBA                     l8815:
  2762                           
  2763                           ;gemsecs.c: 339:     StartTimer(TMR_T2, 2000);
  2764  003DBA  0ED0               	movlw	208
  2765  003DBC  6EE6               	movwf	postinc1,c
  2766  003DBE  0E07               	movlw	7
  2767  003DC0  6EE6               	movwf	postinc1,c
  2768  003DC2  0E02               	movlw	2
  2769  003DC4  6EE6               	movwf	postinc1,c
  2770  003DC6  EC84  F02E         	call	_StartTimer	;wreg free
  2771  003DCA  D103               	goto	l8897
  2772  003DCC                     l8817:
  2773                           
  2774                           ;gemsecs.c: 342:    if (UART1_is_rx_ready()) {
  2775  003DCC  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  2776  003DD0  5039               	movf	btemp,w,c
  2777  003DD2  B4D8               	btfsc	status,2,c
  2778  003DD4  D0FE               	goto	l8897
  2779                           
  2780                           ;gemsecs.c: 343:     rxData = UART1_Read();
  2781  003DD6  EC65  F02E         	call	_UART1_Read	;wreg free
  2782                           
  2783                           ;stkvar	_rxData @ sp[(-1)+0]
  2784  003DDA  0EFF               	movlw	-1
  2785  003DDC  0060  F0E7  FFE3   	movff	btemp,plusw1
  2786                           
  2787                           ; BSR set to: 57
  2788                           ;gemsecs.c: 344:     if (rxData == 0x04) {
  2789                           ;stkvar	_rxData @ sp[(-1)+0]
  2790  003DE2  0EFF               	movlw	-1
  2791  003DE4  006F FF8C  F039    	movff	plusw1,btemp
  2792  003DEA  0E04               	movlw	4
  2793  003DEC  1839               	xorwf	btemp,w,c
  2794  003DEE  A4D8               	btfss	status,2,c
  2795  003DF0  D00E               	goto	l8827
  2796                           
  2797                           ; BSR set to: 57
  2798                           ;gemsecs.c: 345:      StartTimer(TMR_T3, 5000);
  2799  003DF2  0E88               	movlw	136
  2800  003DF4  6EE6               	movwf	postinc1,c
  2801  003DF6  0E13               	movlw	19
  2802  003DF8  6EE6               	movwf	postinc1,c
  2803  003DFA  0E03               	movlw	3
  2804  003DFC  6EE6               	movwf	postinc1,c
  2805  003DFE  EC84  F02E         	call	_StartTimer	;wreg free
  2806                           
  2807                           ;gemsecs.c: 346:      *t_link = LINK_STATE_EOT;
  2808                           ;stkvar	_t_link @ sp[(-1)+-1]
  2809  003E02  0EFE               	movlw	-2
  2810  003E04  50E3               	movf	plusw1,w,c
  2811  003E06  6ED9               	movwf	fsr2l,c
  2812  003E08  6ADA               	clrf	fsr2h,c
  2813  003E0A  0E02               	movlw	2
  2814  003E0C  6EDF               	movwf	indf2,c
  2815  003E0E                     l8827:
  2816                           
  2817                           ;gemsecs.c: 348:     if (rxData == 0x05) {
  2818                           ;stkvar	_rxData @ sp[(-1)+0]
  2819  003E0E  0EFF               	movlw	-1
  2820  003E10  006F FF8C  F039    	movff	plusw1,btemp
  2821  003E16  0E05               	movlw	5
  2822  003E18  1839               	xorwf	btemp,w,c
  2823  003E1A  A4D8               	btfss	status,2,c
  2824  003E1C  D0DA               	goto	l8897
  2825                           
  2826                           ;gemsecs.c: 349:      UART1_put_buffer(0x04);
  2827  003E1E  0E04               	movlw	4
  2828  003E20  6EE6               	movwf	postinc1,c
  2829  003E22  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  2830  003E26                     l8831:
  2831                           
  2832                           ;gemsecs.c: 350:      *t_link = LINK_STATE_DONE;
  2833                           ;stkvar	_t_link @ sp[(-1)+-1]
  2834  003E26  0EFE               	movlw	-2
  2835  003E28  50E3               	movf	plusw1,w,c
  2836  003E2A  6ED9               	movwf	fsr2l,c
  2837  003E2C  6ADA               	clrf	fsr2h,c
  2838  003E2E  0E04               	movlw	4
  2839  003E30  D0AD               	goto	L2
  2840  003E32                     l8833:
  2841                           
  2842                           ;gemsecs.c: 356:   if (!requeue)
  2843  003E32  5028               	movf	t_protocol@requeue,w,c
  2844  003E34  A4D8               	btfss	status,2,c
  2845  003E36  D010               	goto	l8837
  2846                           
  2847                           ;gemsecs.c: 357:    block = secs_II_message(V.stream, V.function);
  2848  003E38  0100               	movlb	0	; () banked
  2849  003E3A  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2850  003E3C  6EE6               	movwf	postinc1,c
  2851  003E3E  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2852  003E40  6EE6               	movwf	postinc1,c
  2853  003E42  EC66  F022         	call	_secs_II_message	;wreg free
  2854  003E46  EE20  F0E3         	lfsr	2,t_protocol@block
  2855  003E4A  0E06               	movlw	6
  2856  003E4C                     u5551:
  2857  003E4C  52E5               	movf	postdec1,f,c
  2858  003E4E  006F FF9F FFDB     	movff	indf1,plusw2
  2859  003E54  06E8               	decf	wreg,f,c
  2860  003E56  E2FA               	bc	u5551
  2861  003E58                     l8837:
  2862                           
  2863                           ;gemsecs.c: 359:   if (V.abort == LINK_ERROR_ABORT) {
  2864  003E58  0E07               	movlw	7
  2865  003E5A  0100               	movlb	0	; () banked
  2866  003E5C  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2867  003E5E  A4D8               	btfss	status,2,c
  2868  003E60  D019               	goto	l8845
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;gemsecs.c: 360:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2872  003E62  0E01               	movlw	1
  2873  003E64  6EE6               	movwf	postinc1,c
  2874  003E66  0E00               	movlw	0
  2875  003E68  6EE6               	movwf	postinc1,c
  2876  003E6A  51E5               	movf	(t_protocol@block+2)& (0+255),w,b
  2877  003E6C  6EE6               	movwf	postinc1,c
  2878  003E6E  0060  F38F  FFE6   	movff	t_protocol@block,postinc1
  2879  003E74  0060  F393  FFE6   	movff	t_protocol@block+1,postinc1
  2880  003E7A  EC32  F021         	call	_secs_send	;wreg free
  2881                           
  2882                           ;gemsecs.c: 361:    V.failed_send = 2;
  2883  003E7E  0100               	movlb	0	; () banked
  2884  003E80  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2885  003E82  0B87               	andlw	-121
  2886  003E84  0910               	iorlw	16
  2887  003E86  6FB7               	movwf	(_V+87)& (0+255),b	;volatile
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;gemsecs.c: 362:    *t_link = LINK_STATE_ERROR;
  2891                           ;stkvar	_t_link @ sp[(-1)+-1]
  2892  003E88  0EFE               	movlw	-2
  2893  003E8A  50E3               	movf	plusw1,w,c
  2894  003E8C  6ED9               	movwf	fsr2l,c
  2895  003E8E  6ADA               	clrf	fsr2h,c
  2896  003E90  0E06               	movlw	6
  2897  003E92  D030               	goto	L3
  2898  003E94                     l8845:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;gemsecs.c: 364:    if (!requeue) {
  2902  003E94  5028               	movf	t_protocol@requeue,w,c
  2903  003E96  A4D8               	btfss	status,2,c
  2904  003E98  D014               	goto	l1688
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;gemsecs.c: 365:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2908  003E9A  0E01               	movlw	1
  2909  003E9C  6EE6               	movwf	postinc1,c
  2910  003E9E  0E00               	movlw	0
  2911  003EA0  6EE6               	movwf	postinc1,c
  2912  003EA2  51E5               	movf	(t_protocol@block+2)& (0+255),w,b
  2913  003EA4  6EE6               	movwf	postinc1,c
  2914  003EA6  0060  F38F  FFE6   	movff	t_protocol@block,postinc1
  2915  003EAC  0060  F393  FFE6   	movff	t_protocol@block+1,postinc1
  2916  003EB2  EC32  F021         	call	_secs_send	;wreg free
  2917                           
  2918                           ;gemsecs.c: 366:     if (V.queue)
  2919  003EB6  0100               	movlb	0	; () banked
  2920  003EB8  A9B8               	btfss	(_V+88)& (0+255),4,b	;volatile
  2921  003EBA  D013               	goto	l8855
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;gemsecs.c: 367:      requeue = 1;
  2925  003EBC  0E01               	movlw	1
  2926  003EBE  6E28               	movwf	t_protocol@requeue,c
  2927  003EC0  D010               	goto	l8855
  2928  003EC2                     l1688:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;gemsecs.c: 369:     requeue = 0;
  2932  003EC2  6A28               	clrf	t_protocol@requeue,c
  2933                           
  2934                           ;gemsecs.c: 370:     V.queue = 0;
  2935  003EC4  99B8               	bcf	(_V+88)& (0+255),4,b	;volatile
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;gemsecs.c: 371:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2939  003EC6  0E01               	movlw	1
  2940  003EC8  6EE6               	movwf	postinc1,c
  2941  003ECA  0E00               	movlw	0
  2942  003ECC  6EE6               	movwf	postinc1,c
  2943  003ECE  51E8               	movf	(t_protocol@block+5)& (0+255),w,b
  2944  003ED0  6EE6               	movwf	postinc1,c
  2945  003ED2  0060  F39B  FFE6   	movff	t_protocol@block+3,postinc1
  2946  003ED8  0060  F39F  FFE6   	movff	t_protocol@block+4,postinc1
  2947  003EDE  EC32  F021         	call	_secs_send	;wreg free
  2948  003EE2                     l8855:
  2949                           
  2950                           ;gemsecs.c: 373:    if (V.error == LINK_ERROR_NONE) {
  2951  003EE2  0100               	movlb	0	; () banked
  2952  003EE4  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2953  003EE6  A4D8               	btfss	status,2,c
  2954  003EE8  D007               	goto	l8859
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;gemsecs.c: 374:     *t_link = LINK_STATE_ACK;
  2958                           ;stkvar	_t_link @ sp[(-1)+-1]
  2959  003EEA  0EFE               	movlw	-2
  2960  003EEC  50E3               	movf	plusw1,w,c
  2961  003EEE  6ED9               	movwf	fsr2l,c
  2962  003EF0  6ADA               	clrf	fsr2h,c
  2963  003EF2  0E03               	movlw	3
  2964  003EF4                     L3:
  2965  003EF4  6EDF               	movwf	indf2,c
  2966                           
  2967                           ;gemsecs.c: 375:    } else {
  2968  003EF6  D004               	goto	l8863
  2969  003EF8                     l8859:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;gemsecs.c: 376:     V.failed_send = 3;
  2973  003EF8  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  2974  003EFA  0B87               	andlw	-121
  2975  003EFC  0918               	iorlw	24
  2976  003EFE  D7C3               	goto	L4
  2977  003F00                     l8863:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;gemsecs.c: 381:   WaitMs(5);
  2981  003F00  0E05               	movlw	5
  2982  003F02  6EE6               	movwf	postinc1,c
  2983  003F04  0E00               	movlw	0
  2984  003F06  6EE6               	movwf	postinc1,c
  2985  003F08  EC56  F02F         	call	_WaitMs	;wreg free
  2986                           
  2987                           ;gemsecs.c: 382:   UART1_put_buffer(0x06);
  2988  003F0C  0E06               	movlw	6
  2989  003F0E  6EE6               	movwf	postinc1,c
  2990  003F10  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  2991                           
  2992                           ;gemsecs.c: 384:   break;
  2993  003F14  D05E               	goto	l8897
  2994  003F16                     l8867:
  2995                           
  2996                           ;gemsecs.c: 386:   if (TimerDone(TMR_T3)) {
  2997  003F16  0E03               	movlw	3
  2998  003F18  6EE6               	movwf	postinc1,c
  2999  003F1A  ECF7  F030         	call	_TimerDone	;wreg free
  3000  003F1E  5039               	movf	btemp,w,c
  3001  003F20  B4D8               	btfsc	status,2,c
  3002  003F22  D007               	goto	l8873
  3003                           
  3004                           ;gemsecs.c: 387:    V.error = LINK_ERROR_T3;
  3005  003F24  0E03               	movlw	3
  3006  003F26  0100               	movlb	0	; () banked
  3007  003F28  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3008                           
  3009                           ;gemsecs.c: 388:    V.failed_send = 4;
  3010  003F2A  51B7               	movf	(_V+87)& (0+255),w,b	;volatile
  3011  003F2C  0B87               	andlw	-121
  3012  003F2E  0920               	iorlw	32
  3013  003F30  D73D               	goto	L5
  3014  003F32                     l8873:
  3015                           
  3016                           ;gemsecs.c: 391:    if (UART1_is_rx_ready()) {
  3017  003F32  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  3018  003F36  5039               	movf	btemp,w,c
  3019  003F38  B4D8               	btfsc	status,2,c
  3020  003F3A  D04B               	goto	l8897
  3021                           
  3022                           ;gemsecs.c: 392:     rxData = UART1_Read();
  3023  003F3C  EC65  F02E         	call	_UART1_Read	;wreg free
  3024                           
  3025                           ;stkvar	_rxData @ sp[(-1)+0]
  3026  003F40  0EFF               	movlw	-1
  3027  003F42  0060  F0E7  FFE3   	movff	btemp,plusw1
  3028                           
  3029                           ; BSR set to: 57
  3030                           ;gemsecs.c: 393:     if (rxData == 0x06) {
  3031                           ;stkvar	_rxData @ sp[(-1)+0]
  3032  003F48  0EFF               	movlw	-1
  3033  003F4A  006F FF8C  F039    	movff	plusw1,btemp
  3034  003F50  0E06               	movlw	6
  3035  003F52  1839               	xorwf	btemp,w,c
  3036  003F54  A4D8               	btfss	status,2,c
  3037  003F56  D03D               	goto	l8897
  3038                           
  3039                           ; BSR set to: 57
  3040                           ;gemsecs.c: 394:      V.failed_send = 0;
  3041  003F58  0E87               	movlw	-121
  3042  003F5A  0100               	movlb	0	; () banked
  3043  003F5C  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  3044  003F5E  D763               	goto	l8831
  3045  003F60                     l8883:
  3046                           
  3047                           ;gemsecs.c: 401:   *t_link = LINK_STATE_ERROR;
  3048                           ;stkvar	_t_link @ sp[(-1)+-1]
  3049  003F60  0EFE               	movlw	-2
  3050  003F62  50E3               	movf	plusw1,w,c
  3051  003F64  6ED9               	movwf	fsr2l,c
  3052  003F66  6ADA               	clrf	fsr2h,c
  3053  003F68  0E06               	movlw	6
  3054  003F6A  6EDF               	movwf	indf2,c
  3055                           
  3056                           ;gemsecs.c: 402:   while ((uart1RxCount)) {
  3057  003F6C  D002               	goto	l8887
  3058  003F6E                     l8885:
  3059                           
  3060                           ;gemsecs.c: 403:    UART1_Read();
  3061  003F6E  EC65  F02E         	call	_UART1_Read	;wreg free
  3062  003F72                     l8887:
  3063                           
  3064                           ;gemsecs.c: 402:   while ((uart1RxCount)) {
  3065  003F72  5033               	movf	_uart1RxCount,w,c	;volatile
  3066  003F74  B4D8               	btfsc	status,2,c
  3067  003F76  D02D               	goto	l8897
  3068  003F78  D7FA               	goto	l8885
  3069  003F7A                     l8889:
  3070                           
  3071                           ;gemsecs.c: 409:   V.failed_send = 0;
  3072  003F7A  0E87               	movlw	-121
  3073  003F7C  0100               	movlb	0	; () banked
  3074  003F7E  17B7               	andwf	(_V+87)& (0+255),f,b	;volatile
  3075                           
  3076                           ;gemsecs.c: 410:   break;
  3077  003F80  D028               	goto	l8897
  3078  003F82                     l8891:
  3079                           
  3080                           ;gemsecs.c: 412:   *t_link = LINK_STATE_IDLE;
  3081                           ;stkvar	_t_link @ sp[(-1)+-1]
  3082  003F82  0EFE               	movlw	-2
  3083  003F84  50E3               	movf	plusw1,w,c
  3084  003F86  6ED9               	movwf	fsr2l,c
  3085  003F88  6ADA               	clrf	fsr2h,c
  3086  003F8A  0E00               	movlw	0
  3087  003F8C                     L2:
  3088  003F8C  6EDF               	movwf	indf2,c
  3089                           
  3090                           ;gemsecs.c: 414:   break;
  3091  003F8E  D021               	goto	l8897
  3092  003F90                     l8895:
  3093                           
  3094                           ;stkvar	_t_link @ sp[(-1)+-1]
  3095  003F90  0EFE               	movlw	-2
  3096  003F92  50E3               	movf	plusw1,w,c
  3097  003F94  6ED9               	movwf	fsr2l,c
  3098  003F96  6ADA               	clrf	fsr2h,c
  3099  003F98  50DF               	movf	indf2,w,c
  3100  003F9A  6E43               	movwf	btemp+10,c
  3101  003F9C  6A44               	clrf	btemp+11,c
  3102                           
  3103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3104                           ; Switch size 1, requested type "simple"
  3105                           ; Number of cases is 1, Range of values is 0 to 0
  3106                           ; switch strategies available:
  3107                           ; Name         Instructions Cycles
  3108                           ; simple_byte            4     3 (average)
  3109                           ;	Chosen strategy is simple_byte
  3110  003F9E  5044               	movf	btemp+11,w,c
  3111  003FA0  0A00               	xorlw	0	; case 0
  3112  003FA2  A4D8               	btfss	status,2,c
  3113  003FA4  D7EE               	goto	l8891
  3114                           
  3115                           ; Switch size 1, requested type "simple"
  3116                           ; Number of cases is 7, Range of values is 0 to 6
  3117                           ; switch strategies available:
  3118                           ; Name         Instructions Cycles
  3119                           ; simple_byte           22    12 (average)
  3120                           ;	Chosen strategy is simple_byte
  3121  003FA6  5043               	movf	btemp+10,w,c
  3122  003FA8  0A00               	xorlw	0	; case 0
  3123  003FAA  B4D8               	btfsc	status,2,c
  3124  003FAC  D6CD               	goto	l1674
  3125  003FAE  0A01               	xorlw	1	; case 1
  3126  003FB0  B4D8               	btfsc	status,2,c
  3127  003FB2  D6EB               	goto	l8807
  3128  003FB4  0A03               	xorlw	3	; case 2
  3129  003FB6  B4D8               	btfsc	status,2,c
  3130  003FB8  D73C               	goto	l8833
  3131  003FBA  0A01               	xorlw	1	; case 3
  3132  003FBC  B4D8               	btfsc	status,2,c
  3133  003FBE  D7AB               	goto	l8867
  3134  003FC0  0A07               	xorlw	7	; case 4
  3135  003FC2  B4D8               	btfsc	status,2,c
  3136  003FC4  D7DA               	goto	l8889
  3137  003FC6  0A01               	xorlw	1	; case 5
  3138  003FC8  B4D8               	btfsc	status,2,c
  3139  003FCA  D7CA               	goto	l8883
  3140  003FCC  0A03               	xorlw	3	; case 6
  3141  003FCE  A4D8               	btfss	status,2,c
  3142  003FD0  D7D8               	goto	l8891
  3143  003FD2                     l8897:
  3144                           
  3145                           ;gemsecs.c: 417:  return *t_link;
  3146                           ;stkvar	_t_link @ sp[(-1)+-1]
  3147  003FD2  0EFE               	movlw	-2
  3148  003FD4  50E3               	movf	plusw1,w,c
  3149  003FD6  6ED9               	movwf	fsr2l,c
  3150  003FD8  6ADA               	clrf	fsr2h,c
  3151  003FDA  50DF               	movf	indf2,w,c
  3152  003FDC  6E39               	movwf	btemp,c
  3153                           
  3154                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3155  003FDE  52E5               	movf	postdec1,f,c
  3156  003FE0  52E5               	movf	postdec1,f,c
  3157  003FE2  0012               	return		;funcret
  3158  003FE4                     __end_of_t_protocol:
  3159                           	opt callstack 0
  3160                           
  3161 ;; *************** function _secs_II_message *****************
  3162 ;; Defined at:
  3163 ;;		line 477 in file "gemsecs.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  stream          1  [STACK] unsigned char 
  3166 ;;  function        1  [STACK] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  7  [STACK] struct response_type
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3173 ;; Tracked objects:
  3174 ;;		On entry : 3F/0
  3175 ;;		On exit  : 3E/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    3
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_t_protocol
  3189 ;; This function uses a reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text2
  3193  0044CC                     __ptext2:
  3194                           	opt callstack 0
  3195  0044CC                     _secs_II_message:
  3196                           	opt callstack 0
  3197                           
  3198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3199  0044CC  0E05               	movlw	5
  3200  0044CE  26E1               	addwf	fsr1l,f,c
  3201  0044D0  0E00               	movlw	0
  3202  0044D2  22E2               	addwfc	fsr1h,f,c
  3203                           
  3204                           ;gemsecs.c: 477: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 478: {;gemsecs.c: 479:  static response_type block;;gemsecs.c: 481:  V.abort = LINK_
      +                          ERROR_NONE;
  3205                           
  3206                           ;incstack = 0
  3207  0044D4  0100               	movlb	0	; () banked
  3208  0044D6  6BB1               	clrf	(_V+81)& (0+255),b	;volatile
  3209                           
  3210                           ;gemsecs.c: 482:  V.queue = 0;
  3211  0044D8  99B8               	bcf	(_V+88)& (0+255),4,b	;volatile
  3212                           
  3213                           ;gemsecs.c: 483:  block.respond = 0;
  3214  0044DA  9007               	bcf	secs_II_message@block+6,0,c
  3215                           
  3216                           ;gemsecs.c: 485:  switch (stream) {
  3217  0044DC  D0F3               	goto	l6615
  3218  0044DE                     l6483:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;gemsecs.c: 489:    block.header = (uint8_t*) & H12[0];
  3222  0044DE  0E62               	movlw	low _H12
  3223  0044E0  6E01               	movwf	secs_II_message@block,c
  3224  0044E2  0E01               	movlw	high _H12
  3225  0044E4  6E02               	movwf	secs_II_message@block+1,c
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;gemsecs.c: 490:    block.length = sizeof(header12);
  3229  0044E6  0E0F               	movlw	15
  3230  0044E8  6E03               	movwf	secs_II_message@block+2,c
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;gemsecs.c: 491:    H12[0].block.block.systemb = V.systemb;
  3234  0044EA  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3235  0044EE  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3236  0044F2  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3237  0044F6  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;gemsecs.c: 492:    H10[0].block.block.systemb = V.systemb;
  3241  0044FA  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3242  0044FE  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3243  004502  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3244  004506  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;gemsecs.c: 493:    block.respond = 1;
  3248  00450A  8007               	bsf	secs_II_message@block+6,0,c
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;gemsecs.c: 494:    block.reply = (uint8_t*) & H10[0];
  3252  00450C  0E07               	movlw	low _H10
  3253  00450E  6E04               	movwf	secs_II_message@block+3,c
  3254  004510  0E01               	movlw	high _H10
  3255  004512  6E05               	movwf	secs_II_message@block+4,c
  3256                           
  3257                           ;gemsecs.c: 495:    block.reply_length = sizeof(header10);
  3258  004514  0E0D               	movlw	13
  3259  004516                     L6:
  3260  004516  6E06               	movwf	secs_II_message@block+5,c
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;gemsecs.c: 496:    V.queue = 1;
  3264  004518  89B8               	bsf	(_V+88)& (0+255),4,b	;volatile
  3265                           
  3266                           ;gemsecs.c: 497:    break;
  3267  00451A  D0ED               	goto	l6617
  3268  00451C                     l6497:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;gemsecs.c: 499:    block.header = (uint8_t*) & H14[0];
  3272  00451C  0EAF               	movlw	low _H14
  3273  00451E  6E01               	movwf	secs_II_message@block,c
  3274  004520  0E01               	movlw	high _H14
  3275  004522  6E02               	movwf	secs_II_message@block+1,c
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;gemsecs.c: 500:    block.length = sizeof(header14);
  3279  004524  0E11               	movlw	17
  3280  004526  6E03               	movwf	secs_II_message@block+2,c
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;gemsecs.c: 501:    H14[0].block.block.systemb = V.systemb;
  3284  004528  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  3285  00452C  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  3286  004530  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  3287  004534  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  3288                           
  3289                           ;gemsecs.c: 502:    break;
  3290  004538  D0DE               	goto	l6617
  3291  00453A                     l6503:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;gemsecs.c: 504:    block.header = (uint8_t*) & H17[0];
  3295  00453A  0E9B               	movlw	low _H17
  3296  00453C  6E01               	movwf	secs_II_message@block,c
  3297  00453E  0E01               	movlw	high _H17
  3298  004540  6E02               	movwf	secs_II_message@block+1,c
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;gemsecs.c: 505:    block.length = sizeof(header17);
  3302  004542  0E14               	movlw	20
  3303  004544  6E03               	movwf	secs_II_message@block+2,c
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;gemsecs.c: 506:    H17[0].block.block.systemb = V.systemb;
  3307  004546  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  3308  00454A  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  3309  00454E  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  3310  004552  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;gemsecs.c: 507:    H12[1].block.block.systemb = V.systemb;
  3314  004556  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  3315  00455A  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  3316  00455E  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  3317  004562  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;gemsecs.c: 508:    block.respond = 1;
  3321  004566  8007               	bsf	secs_II_message@block+6,0,c
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;gemsecs.c: 509:    block.reply = (uint8_t*) & H12[1];
  3325  004568  0E71               	movlw	low (_H12+15)
  3326  00456A  6E04               	movwf	secs_II_message@block+3,c
  3327  00456C  0E01               	movlw	high (_H12+15)
  3328  00456E  6E05               	movwf	secs_II_message@block+4,c
  3329                           
  3330                           ;gemsecs.c: 510:    block.reply_length = sizeof(header12);
  3331  004570  0E0F               	movlw	15
  3332  004572  D7D1               	goto	L6
  3333  004574                     l6517:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;gemsecs.c: 514:    block.header = (uint8_t*) & H10[2];
  3337  004574  0E21               	movlw	low (_H10+26)
  3338  004576  6E01               	movwf	secs_II_message@block,c
  3339  004578  0E01               	movlw	high (_H10+26)
  3340  00457A  6E02               	movwf	secs_II_message@block+1,c
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;gemsecs.c: 515:    block.length = sizeof(header10);
  3344  00457C  0E0D               	movlw	13
  3345  00457E  6E03               	movwf	secs_II_message@block+2,c
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;gemsecs.c: 516:    H10[2].block.block.systemb = V.systemb;
  3349  004580  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  3350  004584  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  3351  004588  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  3352  00458C  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;gemsecs.c: 517:    V.abort = LINK_ERROR_ABORT;
  3356  004590  0E07               	movlw	7
  3357  004592  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3358                           
  3359                           ;gemsecs.c: 518:    break;
  3360  004594  D0B0               	goto	l6617
  3361  004596                     l6527:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;stkvar	_function @ sp[(0)+-7]
  3365  004596  0EF9               	movlw	-7
  3366  004598  50E3               	movf	plusw1,w,c
  3367  00459A  6E43               	movwf	btemp+10,c
  3368  00459C  6A44               	clrf	btemp+11,c
  3369                           
  3370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 1, Range of values is 0 to 0
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte            4     3 (average)
  3376                           ;	Chosen strategy is simple_byte
  3377  00459E  5044               	movf	btemp+11,w,c
  3378  0045A0  0A00               	xorlw	0	; case 0
  3379  0045A2  A4D8               	btfss	status,2,c
  3380  0045A4  D7E7               	goto	l6517
  3381                           
  3382                           ; BSR set to: 0
  3383                           ; Switch size 1, requested type "simple"
  3384                           ; Number of cases is 3, Range of values is 1 to 13
  3385                           ; switch strategies available:
  3386                           ; Name         Instructions Cycles
  3387                           ; simple_byte           10     6 (average)
  3388                           ;	Chosen strategy is simple_byte
  3389  0045A6  5043               	movf	btemp+10,w,c
  3390  0045A8  0A01               	xorlw	1	; case 1
  3391  0045AA  B4D8               	btfsc	status,2,c
  3392  0045AC  D798               	goto	l6483
  3393  0045AE  0A02               	xorlw	2	; case 3
  3394  0045B0  B4D8               	btfsc	status,2,c
  3395  0045B2  D7B4               	goto	l6497
  3396  0045B4  0A0E               	xorlw	14	; case 13
  3397  0045B6  B4D8               	btfsc	status,2,c
  3398  0045B8  D7C0               	goto	l6503
  3399  0045BA  D7DC               	goto	l6517
  3400  0045BC                     l6529:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;gemsecs.c: 524:    block.header = (uint8_t*) & H24[0];
  3404  0045BC  0E80               	movlw	low _H24
  3405  0045BE  6E01               	movwf	secs_II_message@block,c
  3406  0045C0  0E01               	movlw	high _H24
  3407  0045C2  6E02               	movwf	secs_II_message@block+1,c
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;gemsecs.c: 525:    block.length = sizeof(header24);
  3411  0045C4  0E1B               	movlw	27
  3412  0045C6  6E03               	movwf	secs_II_message@block+2,c
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;gemsecs.c: 526:    H24[0].block.block.systemb = V.systemb;
  3416  0045C8  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  3417  0045CC  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  3418  0045D0  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  3419  0045D4  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;gemsecs.c: 527:    H24[0].data[12] = 12;
  3423  0045D8  0E0C               	movlw	12
  3424  0045DA  0101               	movlb	1	; () banked
  3425  0045DC  6F8E               	movwf	(_H24+14)& (0+255),b
  3426                           
  3427                           ;gemsecs.c: 528:    break;
  3428  0045DE  D08B               	goto	l6617
  3429  0045E0                     l6547:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;stkvar	_function @ sp[(0)+-7]
  3433  0045E0  0EF9               	movlw	-7
  3434  0045E2  50E3               	movf	plusw1,w,c
  3435  0045E4  6E43               	movwf	btemp+10,c
  3436  0045E6  6A44               	clrf	btemp+11,c
  3437                           
  3438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3439                           ; Switch size 1, requested type "simple"
  3440                           ; Number of cases is 1, Range of values is 0 to 0
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte            4     3 (average)
  3444                           ;	Chosen strategy is simple_byte
  3445  0045E8  5044               	movf	btemp+11,w,c
  3446  0045EA  0A00               	xorlw	0	; case 0
  3447  0045EC  A4D8               	btfss	status,2,c
  3448  0045EE  D7C2               	goto	l6517
  3449                           
  3450                           ; BSR set to: 0
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 1, Range of values is 17 to 17
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            4     3 (average)
  3456                           ;	Chosen strategy is simple_byte
  3457  0045F0  5043               	movf	btemp+10,w,c
  3458  0045F2  0A11               	xorlw	17	; case 17
  3459  0045F4  B4D8               	btfsc	status,2,c
  3460  0045F6  D7E2               	goto	l6529
  3461  0045F8  D7BD               	goto	l6517
  3462  0045FA                     l6549:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;gemsecs.c: 540:    block.header = (uint8_t*) & H13[0];
  3466  0045FA  0EC0               	movlw	low _H13
  3467  0045FC  6E01               	movwf	secs_II_message@block,c
  3468  0045FE  0E01               	movlw	high _H13
  3469  004600  6E02               	movwf	secs_II_message@block+1,c
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;gemsecs.c: 541:    block.length = sizeof(header13);
  3473  004602  0E10               	movlw	16
  3474  004604  6E03               	movwf	secs_II_message@block+2,c
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;gemsecs.c: 542:    H13[0].block.block.systemb = V.systemb;
  3478  004606  C0AA  F1C5         	movff	_V+74,_H13+5	;volatile
  3479  00460A  C0AB  F1C6         	movff	_V+75,_H13+6	;volatile
  3480  00460E  C0AC  F1C7         	movff	_V+76,_H13+7	;volatile
  3481  004612  C0AD  F1C8         	movff	_V+77,_H13+8	;volatile
  3482                           
  3483                           ;gemsecs.c: 543:    break;
  3484  004616  D06F               	goto	l6617
  3485  004618                     l6565:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;stkvar	_function @ sp[(0)+-7]
  3489  004618  0EF9               	movlw	-7
  3490  00461A  50E3               	movf	plusw1,w,c
  3491  00461C  6E43               	movwf	btemp+10,c
  3492  00461E  6A44               	clrf	btemp+11,c
  3493                           
  3494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 1, Range of values is 0 to 0
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte            4     3 (average)
  3500                           ;	Chosen strategy is simple_byte
  3501  004620  5044               	movf	btemp+11,w,c
  3502  004622  0A00               	xorlw	0	; case 0
  3503  004624  A4D8               	btfss	status,2,c
  3504  004626  D7A6               	goto	l6517
  3505                           
  3506                           ; BSR set to: 0
  3507                           ; Switch size 1, requested type "simple"
  3508                           ; Number of cases is 1, Range of values is 11 to 11
  3509                           ; switch strategies available:
  3510                           ; Name         Instructions Cycles
  3511                           ; simple_byte            4     3 (average)
  3512                           ;	Chosen strategy is simple_byte
  3513  004628  5043               	movf	btemp+10,w,c
  3514  00462A  0A0B               	xorlw	11	; case 11
  3515  00462C  B4D8               	btfsc	status,2,c
  3516  00462E  D7E5               	goto	l6549
  3517  004630  D7A1               	goto	l6517
  3518  004632                     l6577:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;stkvar	_function @ sp[(0)+-7]
  3522  004632  0EF9               	movlw	-7
  3523  004634  50E3               	movf	plusw1,w,c
  3524  004636  6E43               	movwf	btemp+10,c
  3525  004638  6A44               	clrf	btemp+11,c
  3526                           
  3527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3528                           ; Switch size 1, requested type "simple"
  3529                           ; Number of cases is 1, Range of values is 0 to 0
  3530                           ; switch strategies available:
  3531                           ; Name         Instructions Cycles
  3532                           ; simple_byte            4     3 (average)
  3533                           ;	Chosen strategy is simple_byte
  3534  00463A  5044               	movf	btemp+11,w,c
  3535  00463C  0A00               	xorlw	0	; case 0
  3536  00463E  A4D8               	btfss	status,2,c
  3537  004640  D799               	goto	l6517
  3538                           
  3539                           ; BSR set to: 0
  3540                           ; Switch size 1, requested type "simple"
  3541                           ; Number of cases is 7, Range of values is 1 to 13
  3542                           ; switch strategies available:
  3543                           ; Name         Instructions Cycles
  3544                           ; simple_byte           22    12 (average)
  3545                           ;	Chosen strategy is simple_byte
  3546  004642  5043               	movf	btemp+10,w,c
  3547  004644  0A01               	xorlw	1	; case 1
  3548  004646  B4D8               	btfsc	status,2,c
  3549  004648  D056               	goto	l6617
  3550  00464A  0A02               	xorlw	2	; case 3
  3551  00464C  B4D8               	btfsc	status,2,c
  3552  00464E  D053               	goto	l6617
  3553  004650  0A06               	xorlw	6	; case 5
  3554  004652  B4D8               	btfsc	status,2,c
  3555  004654  D050               	goto	l6617
  3556  004656  0A02               	xorlw	2	; case 7
  3557  004658  B4D8               	btfsc	status,2,c
  3558  00465A  D04D               	goto	l6617
  3559  00465C  0A0E               	xorlw	14	; case 9
  3560  00465E  B4D8               	btfsc	status,2,c
  3561  004660  D04A               	goto	l6617
  3562  004662  0A02               	xorlw	2	; case 11
  3563  004664  B4D8               	btfsc	status,2,c
  3564  004666  D047               	goto	l6617
  3565  004668  0A06               	xorlw	6	; case 13
  3566  00466A  B4D8               	btfsc	status,2,c
  3567  00466C  D044               	goto	l6617
  3568  00466E  D782               	goto	l6517
  3569  004670                     l6579:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;gemsecs.c: 579:    block.header = (uint8_t*) & H12[0];
  3573  004670  0E62               	movlw	low _H12
  3574  004672  6E01               	movwf	secs_II_message@block,c
  3575  004674  0E01               	movlw	high _H12
  3576  004676  6E02               	movwf	secs_II_message@block+1,c
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;gemsecs.c: 580:    block.length = sizeof(header12);
  3580  004678  0E0F               	movlw	15
  3581  00467A  6E03               	movwf	secs_II_message@block+2,c
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;gemsecs.c: 581:    H12[0].block.block.systemb = V.systemb;
  3585  00467C  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3586  004680  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3587  004684  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3588  004688  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;gemsecs.c: 582:    H53[0].block.block.systemb = V.systemb;
  3592  00468C  C0AA  F3F3         	movff	_V+74,_H53+45	;volatile
  3593  004690  C0AB  F3F4         	movff	_V+75,_H53+46	;volatile
  3594  004694  C0AC  F3F5         	movff	_V+76,_H53+47	;volatile
  3595  004698  C0AD  F3F6         	movff	_V+77,_H53+48	;volatile
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;gemsecs.c: 583:    block.respond = 1;
  3599  00469C  8007               	bsf	secs_II_message@block+6,0,c
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;gemsecs.c: 584:    block.reply = (uint8_t*) & H53[0];
  3603  00469E  0EC6               	movlw	low _H53
  3604  0046A0  6E04               	movwf	secs_II_message@block+3,c
  3605  0046A2  0E03               	movlw	high _H53
  3606  0046A4  6E05               	movwf	secs_II_message@block+4,c
  3607                           
  3608                           ;gemsecs.c: 585:    block.reply_length = sizeof(header53);
  3609  0046A6  0E38               	movlw	56
  3610  0046A8  D736               	goto	L6
  3611  0046AA                     l6603:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;stkvar	_function @ sp[(0)+-7]
  3615  0046AA  0EF9               	movlw	-7
  3616  0046AC  50E3               	movf	plusw1,w,c
  3617  0046AE  6E43               	movwf	btemp+10,c
  3618  0046B0  6A44               	clrf	btemp+11,c
  3619                           
  3620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3621                           ; Switch size 1, requested type "simple"
  3622                           ; Number of cases is 1, Range of values is 0 to 0
  3623                           ; switch strategies available:
  3624                           ; Name         Instructions Cycles
  3625                           ; simple_byte            4     3 (average)
  3626                           ;	Chosen strategy is simple_byte
  3627  0046B2  5044               	movf	btemp+11,w,c
  3628  0046B4  0A00               	xorlw	0	; case 0
  3629  0046B6  A4D8               	btfss	status,2,c
  3630  0046B8  D75D               	goto	l6517
  3631                           
  3632                           ; BSR set to: 0
  3633                           ; Switch size 1, requested type "simple"
  3634                           ; Number of cases is 1, Range of values is 1 to 1
  3635                           ; switch strategies available:
  3636                           ; Name         Instructions Cycles
  3637                           ; simple_byte            4     3 (average)
  3638                           ;	Chosen strategy is simple_byte
  3639  0046BA  5043               	movf	btemp+10,w,c
  3640  0046BC  0A01               	xorlw	1	; case 1
  3641  0046BE  B4D8               	btfsc	status,2,c
  3642  0046C0  D7D7               	goto	l6579
  3643  0046C2  D758               	goto	l6517
  3644  0046C4                     l6615:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;stkvar	_stream @ sp[(0)+-6]
  3648  0046C4  0EFA               	movlw	-6
  3649  0046C6  50E3               	movf	plusw1,w,c
  3650  0046C8  6E43               	movwf	btemp+10,c
  3651  0046CA  6A44               	clrf	btemp+11,c
  3652                           
  3653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3654                           ; Switch size 1, requested type "simple"
  3655                           ; Number of cases is 1, Range of values is 0 to 0
  3656                           ; switch strategies available:
  3657                           ; Name         Instructions Cycles
  3658                           ; simple_byte            4     3 (average)
  3659                           ;	Chosen strategy is simple_byte
  3660  0046CC  5044               	movf	btemp+11,w,c
  3661  0046CE  0A00               	xorlw	0	; case 0
  3662  0046D0  A4D8               	btfss	status,2,c
  3663  0046D2  D750               	goto	l6517
  3664                           
  3665                           ; BSR set to: 0
  3666                           ; Switch size 1, requested type "simple"
  3667                           ; Number of cases is 5, Range of values is 1 to 10
  3668                           ; switch strategies available:
  3669                           ; Name         Instructions Cycles
  3670                           ; simple_byte           16     9 (average)
  3671                           ;	Chosen strategy is simple_byte
  3672  0046D4  5043               	movf	btemp+10,w,c
  3673  0046D6  0A01               	xorlw	1	; case 1
  3674  0046D8  B4D8               	btfsc	status,2,c
  3675  0046DA  D75D               	goto	l6527
  3676  0046DC  0A03               	xorlw	3	; case 2
  3677  0046DE  B4D8               	btfsc	status,2,c
  3678  0046E0  D77F               	goto	l6547
  3679  0046E2  0A04               	xorlw	4	; case 6
  3680  0046E4  B4D8               	btfsc	status,2,c
  3681  0046E6  D798               	goto	l6565
  3682  0046E8  0A0F               	xorlw	15	; case 9
  3683  0046EA  B4D8               	btfsc	status,2,c
  3684  0046EC  D7A2               	goto	l6577
  3685  0046EE  0A03               	xorlw	3	; case 10
  3686  0046F0  B4D8               	btfsc	status,2,c
  3687  0046F2  D7DB               	goto	l6603
  3688  0046F4  D73F               	goto	l6517
  3689  0046F6                     l6617:
  3690                           
  3691                           ;gemsecs.c: 604:  return(block);
  3692  0046F6  EE20  F001         	lfsr	2,secs_II_message@block
  3693                           
  3694                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3695  0046FA  0E07               	movlw	7
  3696  0046FC  6E39               	movwf	btemp,c
  3697  0046FE  0EF9               	movlw	-7
  3698  004700                     us359999:
  3699  004700  006F FF7B FFE3     	movff	postinc2,plusw1
  3700  004706  28E8               	incf	wreg,w,c
  3701  004708  2E39               	decfsz	btemp,f,c
  3702  00470A  D7FA               	bra	us359999
  3703                           
  3704                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3705  00470C  0012               	return		;funcret
  3706  00470E                     __end_of_secs_II_message:
  3707                           	opt callstack 0
  3708                           
  3709 ;; *************** function _sprintf *****************
  3710 ;; Defined at:
  3711 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  s               1  [STACK] PTR unsigned char 
  3714 ;;		 -> V(94), 
  3715 ;;  fmt             1  [STACK] PTR const unsigned char 
  3716 ;;		 -> STR_15(21), STR_14(21), STR_13(6), STR_12(17), 
  3717 ;;		 -> STR_11(21), STR_10(20), STR_9(23), STR_8(6), 
  3718 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  3719 ;;		 -> STR_2(12), STR_1(17), 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  f               5  [STACK] struct _IO_FILE
  3722 ;;  ap              2  [STACK] PTR void [1]
  3723 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3724 ;;  ret             2    0        int 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  2  [STACK] int 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3729 ;; Tracked objects:
  3730 ;;		On entry : 4/0
  3731 ;;		On exit  : 3F/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:   11
  3741 ;; This function calls:
  3742 ;;		_vfprintf
  3743 ;; This function is called by:
  3744 ;;		_main
  3745 ;; This function uses a reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text3
  3749  005142                     __ptext3:
  3750                           	opt callstack 0
  3751  005142                     _sprintf:
  3752                           	opt callstack 0
  3753                           
  3754                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3755  005142  0E07               	movlw	7
  3756  005144  26E1               	addwf	fsr1l,f,c
  3757  005146  0E00               	movlw	0
  3758  005148  22E2               	addwfc	fsr1h,f,c
  3759                           
  3760                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3761                           
  3762                           ;incstack = 0
  3763  00514A  0EF6               	movlw	246
  3764  00514C  24E1               	addwf	fsr1l,w,c
  3765  00514E  6E43               	movwf	btemp+10,c
  3766  005150  0EFF               	movlw	255
  3767  005152  20E2               	addwfc	fsr1h,w,c
  3768  005154  6E44               	movwf	btemp+11,c
  3769                           
  3770                           ;stkvar	_ap @ sp[(-7)+5]
  3771  005156  0EFF               	movlw	-1
  3772  005158  0060  F113  FFE3   	movff	btemp+11,plusw1
  3773  00515E  0EFE               	movlw	-2
  3774  005160  0060  F10F  FFE3   	movff	btemp+10,plusw1
  3775                           
  3776                           ;stkvar	_s @ sp[(-7)+-2]
  3777  005166  0EF7               	movlw	-9
  3778  005168  006F FF8C  F044    	movff	plusw1,btemp+11
  3779                           
  3780                           ;stkvar	_f @ sp[(-7)+0]
  3781  00516E  0EF9               	movlw	-7
  3782  005170  0060  F113  FFE3   	movff	btemp+11,plusw1
  3783                           
  3784                           ;stkvar	_f @ sp[(-7)+0]
  3785  005176  0EFA               	movlw	250
  3786  005178  24E1               	addwf	fsr1l,w,c
  3787  00517A  6ED9               	movwf	fsr2l,c
  3788  00517C  0EFF               	movlw	255
  3789  00517E  20E2               	addwfc	fsr1h,w,c
  3790  005180  6EDA               	movwf	fsr2h,c
  3791  005182  0E00               	movlw	0
  3792  005184  6EDE               	movwf	postinc2,c
  3793  005186  0E00               	movlw	0
  3794  005188  6EDD               	movwf	postdec2,c
  3795                           
  3796                           ;stkvar	_f @ sp[(-7)+0]
  3797  00518A  0EFC               	movlw	252
  3798  00518C  24E1               	addwf	fsr1l,w,c
  3799  00518E  6ED9               	movwf	fsr2l,c
  3800  005190  0EFF               	movlw	255
  3801  005192  20E2               	addwfc	fsr1h,w,c
  3802  005194  6EDA               	movwf	fsr2h,c
  3803  005196  0E00               	movlw	0
  3804  005198  6EDE               	movwf	postinc2,c
  3805  00519A  0E00               	movlw	0
  3806  00519C  6EDD               	movwf	postdec2,c
  3807                           
  3808                           ;stkvar	_ap @ sp[(-7)+5]
  3809  00519E  0EFE               	movlw	254
  3810  0051A0  24E1               	addwf	fsr1l,w,c
  3811  0051A2  6E39               	movwf	btemp,c
  3812  0051A4  0EFF               	movlw	255
  3813  0051A6  20E2               	addwfc	fsr1h,w,c
  3814  0051A8  6E3A               	movwf	btemp+1,c
  3815  0051AA  0060  F0E7  FFE6   	movff	btemp,postinc1
  3816  0051B0  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3817                           
  3818                           ;stkvar	_fmt @ sp[(-9)+-3]
  3819  0051B6  0EF4               	movlw	-12
  3820  0051B8  50E3               	movf	plusw1,w,c
  3821  0051BA  6EE6               	movwf	postinc1,c
  3822                           
  3823                           ;stkvar	_f @ sp[(-10)+0]
  3824  0051BC  0EF6               	movlw	246
  3825  0051BE  24E1               	addwf	fsr1l,w,c
  3826  0051C0  6E39               	movwf	btemp,c
  3827  0051C2  0EFF               	movlw	255
  3828  0051C4  20E2               	addwfc	fsr1h,w,c
  3829  0051C6  6E3A               	movwf	btemp+1,c
  3830  0051C8  0060  F0E7  FFE6   	movff	btemp,postinc1
  3831  0051CE  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  3832  0051D4  EC48  F02A         	call	_vfprintf	;wreg free
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;stkvar	_f @ sp[(-7)+0]
  3836  0051D8  0EFA               	movlw	250
  3837  0051DA  24E1               	addwf	fsr1l,w,c
  3838  0051DC  6ED9               	movwf	fsr2l,c
  3839  0051DE  0EFF               	movlw	255
  3840  0051E0  20E2               	addwfc	fsr1h,w,c
  3841  0051E2  6EDA               	movwf	fsr2h,c
  3842  0051E4  50DF               	movf	indf2,w,c
  3843  0051E6  6E44               	movwf	btemp+11,c
  3844                           
  3845                           ;stkvar	_s @ sp[(-7)+-2]
  3846  0051E8  0EF7               	movlw	-9
  3847  0051EA  50E3               	movf	plusw1,w,c
  3848  0051EC  2444               	addwf	btemp+11,w,c
  3849  0051EE  6ED9               	movwf	fsr2l,c
  3850  0051F0  6ADA               	clrf	fsr2h,c
  3851  0051F2  0E00               	movlw	0
  3852  0051F4  6EDF               	movwf	indf2,c
  3853                           
  3854                           ; BSR set to: 0
  3855                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  3856  0051F6  0EF9               	movlw	249
  3857  0051F8  26E1               	addwf	fsr1l,f,c
  3858  0051FA  0EFF               	movlw	255
  3859  0051FC  22E2               	addwfc	fsr1h,f,c
  3860  0051FE  52E5               	movf	postdec1,f,c
  3861  005200  50E7               	movf	indf1,w,c
  3862  005202  5EE1               	subwf	fsr1l,f,c
  3863  005204  0E00               	movlw	0
  3864  005206  5AE2               	subwfb	fsr1h,f,c
  3865  005208  0012               	return		;funcret
  3866  00520A                     __end_of_sprintf:
  3867                           	opt callstack 0
  3868                           
  3869 ;; *************** function _r_protocol *****************
  3870 ;; Defined at:
  3871 ;;		line 198 in file "gemsecs.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  r_link          1  [STACK] PTR enum E16173
  3874 ;;		 -> V(94), 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  rxData          1  [STACK] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1  [STACK] enum E16913
  3879 ;; Registers used:
  3880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    5
  3893 ;; This function calls:
  3894 ;;		_StartTimer
  3895 ;;		_TimerDone
  3896 ;;		_UART1_Read
  3897 ;;		_UART1_Write
  3898 ;;		_UART1_is_rx_ready
  3899 ;;		_WaitMs
  3900 ;;		_run_checksum
  3901 ;;		_secs_gem_state
  3902 ;;		_secs_send
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;; This function uses a reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text4
  3909  003452                     __ptext4:
  3910                           	opt callstack 0
  3911  003452                     _r_protocol:
  3912                           	opt callstack 0
  3913                           
  3914                           ; BSR set to: 0
  3915                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3916  003452  52E6               	movf	postinc1,f,c
  3917                           
  3918                           ;gemsecs.c: 198: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 199: {;gemsecs.
      +                          c: 200:  uint8_t rxData;;gemsecs.c: 201:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 203:  switch (*r_link) {
  3919                           
  3920                           ;incstack = 0
  3921  003454  D178               	goto	l8781
  3922  003456                     l8653:
  3923                           
  3924                           ;gemsecs.c: 205:   if (UART1_is_rx_ready()) {
  3925  003456  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  3926  00345A  5039               	movf	btemp,w,c
  3927  00345C  B4D8               	btfsc	status,2,c
  3928  00345E  D194               	goto	l8783
  3929                           
  3930                           ;gemsecs.c: 206:    rxData = UART1_Read();
  3931  003460  EC65  F02E         	call	_UART1_Read	;wreg free
  3932                           
  3933                           ;stkvar	_rxData @ sp[(-1)+0]
  3934  003464  0EFF               	movlw	-1
  3935  003466  0060  F0E7  FFE3   	movff	btemp,plusw1
  3936                           
  3937                           ; BSR set to: 57
  3938                           ;gemsecs.c: 207:    if (rxData == 0x05) {
  3939                           ;stkvar	_rxData @ sp[(-1)+0]
  3940  00346C  0EFF               	movlw	-1
  3941  00346E  006F FF8C  F039    	movff	plusw1,btemp
  3942  003474  0E05               	movlw	5
  3943  003476  1839               	xorwf	btemp,w,c
  3944  003478  A4D8               	btfss	status,2,c
  3945  00347A  D186               	goto	l8783
  3946                           
  3947                           ; BSR set to: 57
  3948                           ;gemsecs.c: 208:     V.error = LINK_ERROR_NONE;
  3949  00347C  0100               	movlb	0	; () banked
  3950  00347E  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;gemsecs.c: 209:     *r_link = LINK_STATE_ENQ;
  3954                           ;stkvar	_r_link @ sp[(-1)+-1]
  3955  003480  0EFE               	movlw	-2
  3956  003482  50E3               	movf	plusw1,w,c
  3957  003484  6ED9               	movwf	fsr2l,c
  3958  003486  6ADA               	clrf	fsr2h,c
  3959  003488  0E01               	movlw	1
  3960  00348A  D144               	goto	L10
  3961  00348C                     l1634:
  3962                           
  3963                           ;gemsecs.c: 214:   rxData_l = 0;
  3964  00348C  6A2A               	clrf	r_protocol@rxData_l,c
  3965                           
  3966                           ;gemsecs.c: 215:   UART1_Write(0x04);
  3967  00348E  0E04               	movlw	4
  3968  003490  6EE6               	movwf	postinc1,c
  3969  003492  EC27  F02E         	call	_UART1_Write	;wreg free
  3970                           
  3971                           ; BSR set to: 57
  3972                           ;gemsecs.c: 216:   StartTimer(TMR_T2, 2000);
  3973  003496  0ED0               	movlw	208
  3974  003498  6EE6               	movwf	postinc1,c
  3975  00349A  0E07               	movlw	7
  3976  00349C  6EE6               	movwf	postinc1,c
  3977  00349E  0E02               	movlw	2
  3978  0034A0  6EE6               	movwf	postinc1,c
  3979  0034A2  EC84  F02E         	call	_StartTimer	;wreg free
  3980                           
  3981                           ;gemsecs.c: 217:   *r_link = LINK_STATE_EOT;
  3982                           ;stkvar	_r_link @ sp[(-1)+-1]
  3983  0034A6  0EFE               	movlw	-2
  3984  0034A8  50E3               	movf	plusw1,w,c
  3985  0034AA  6ED9               	movwf	fsr2l,c
  3986  0034AC  6ADA               	clrf	fsr2h,c
  3987  0034AE  0E02               	movlw	2
  3988  0034B0  6EDF               	movwf	indf2,c
  3989                           
  3990                           ;gemsecs.c: 219:   WaitMs(5);
  3991  0034B2  0E05               	movlw	5
  3992  0034B4  6EE6               	movwf	postinc1,c
  3993  0034B6  0E00               	movlw	0
  3994  0034B8  6EE6               	movwf	postinc1,c
  3995  0034BA  EC56  F02F         	call	_WaitMs	;wreg free
  3996                           
  3997                           ;gemsecs.c: 220:   H27[0].block.block.systemb = V.ticks;
  3998  0034BE  C0A6  F2D3         	movff	_V+70,_H27+19	;volatile
  3999  0034C2  C0A7  F2D4         	movff	_V+71,_H27+20	;volatile
  4000  0034C6  C0A8  F2D5         	movff	_V+72,_H27+21	;volatile
  4001  0034CA  C0A9  F2D6         	movff	_V+73,_H27+22	;volatile
  4002                           
  4003                           ;gemsecs.c: 221:   secs_send((uint8_t*) & H27[0], sizeof(header27), 1, 1);
  4004  0034CE  0E01               	movlw	1
  4005  0034D0  6EE6               	movwf	postinc1,c
  4006  0034D2  0E01               	movlw	1
  4007  0034D4  6EE6               	movwf	postinc1,c
  4008  0034D6  0E1E               	movlw	30
  4009  0034D8  6EE6               	movwf	postinc1,c
  4010  0034DA  0EC0               	movlw	low _H27
  4011  0034DC  6EE6               	movwf	postinc1,c
  4012  0034DE  0E02               	movlw	high _H27
  4013  0034E0  6EE6               	movwf	postinc1,c
  4014  0034E2  EC32  F021         	call	_secs_send	;wreg free
  4015                           
  4016                           ;gemsecs.c: 225:   break;
  4017  0034E6  D150               	goto	l8783
  4018  0034E8                     l8675:
  4019                           
  4020                           ;gemsecs.c: 227:   if (TimerDone(TMR_T2)) {
  4021  0034E8  0E02               	movlw	2
  4022  0034EA  6EE6               	movwf	postinc1,c
  4023  0034EC  ECF7  F030         	call	_TimerDone	;wreg free
  4024  0034F0  5039               	movf	btemp,w,c
  4025  0034F2  B4D8               	btfsc	status,2,c
  4026  0034F4  D017               	goto	l8685
  4027                           
  4028                           ;gemsecs.c: 228:    if (!retry--) {
  4029  0034F6  065D               	decf	r_protocol@retry,f,c
  4030  0034F8  285D               	incf	r_protocol@retry,w,c
  4031  0034FA  A4D8               	btfss	status,2,c
  4032  0034FC  D00D               	goto	l8683
  4033                           
  4034                           ;gemsecs.c: 229:     V.error = LINK_ERROR_T2;
  4035  0034FE  0E02               	movlw	2
  4036  003500  0100               	movlb	0	; () banked
  4037  003502  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4038                           
  4039                           ;gemsecs.c: 230:     V.failed_receive = 1;
  4040  003504  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4041  003506  0BF0               	andlw	-16
  4042  003508  0901               	iorlw	1
  4043  00350A  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;gemsecs.c: 231:     *r_link = LINK_STATE_NAK;
  4047                           ;stkvar	_r_link @ sp[(-1)+-1]
  4048  00350C  0EFE               	movlw	-2
  4049  00350E  50E3               	movf	plusw1,w,c
  4050  003510  6ED9               	movwf	fsr2l,c
  4051  003512  6ADA               	clrf	fsr2h,c
  4052  003514  0E05               	movlw	5
  4053  003516  D0FE               	goto	L10
  4054  003518                     l8683:
  4055                           
  4056                           ;gemsecs.c: 233:     *r_link = LINK_STATE_IDLE;
  4057                           ;stkvar	_r_link @ sp[(-1)+-1]
  4058  003518  0EFE               	movlw	-2
  4059  00351A  50E3               	movf	plusw1,w,c
  4060  00351C  6ED9               	movwf	fsr2l,c
  4061  00351E  6ADA               	clrf	fsr2h,c
  4062  003520  0E00               	movlw	0
  4063  003522  D0F8               	goto	L10
  4064  003524                     l8685:
  4065                           
  4066                           ;gemsecs.c: 236:    if (UART1_is_rx_ready()) {
  4067  003524  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  4068  003528  5039               	movf	btemp,w,c
  4069  00352A  B4D8               	btfsc	status,2,c
  4070  00352C  D12D               	goto	l8783
  4071                           
  4072                           ;gemsecs.c: 237:     rxData = UART1_Read();
  4073  00352E  EC65  F02E         	call	_UART1_Read	;wreg free
  4074                           
  4075                           ;stkvar	_rxData @ sp[(-1)+0]
  4076  003532  0EFF               	movlw	-1
  4077  003534  0060  F0E7  FFE3   	movff	btemp,plusw1
  4078                           
  4079                           ; BSR set to: 57
  4080                           ;gemsecs.c: 238:     if (rxData_l == 0) {
  4081  00353A  502A               	movf	r_protocol@rxData_l,w,c
  4082  00353C  A4D8               	btfss	status,2,c
  4083  00353E  D00C               	goto	l8697
  4084                           
  4085                           ; BSR set to: 57
  4086                           ;gemsecs.c: 239:      r_block.length = rxData;
  4087                           ;stkvar	_rxData @ sp[(-1)+0]
  4088  003540  0EFF               	movlw	-1
  4089  003542  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  4090                           
  4091                           ; BSR set to: 57
  4092                           ;gemsecs.c: 240:      run_checksum(0, 1);
  4093  003548  0E01               	movlw	1
  4094  00354A  6EE6               	movwf	postinc1,c
  4095  00354C  0E00               	movlw	0
  4096  00354E  6EE6               	movwf	postinc1,c
  4097  003550  ECBE  F02E         	call	_run_checksum	;wreg free
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;gemsecs.c: 241:      rxData_l++;
  4101  003554  2A2A               	incf	r_protocol@rxData_l,f,c
  4102                           
  4103                           ;gemsecs.c: 242:     } else {
  4104  003556  D118               	goto	l8783
  4105  003558                     l8697:
  4106                           
  4107                           ; BSR set to: 57
  4108                           ;gemsecs.c: 246:      if (rxData_l <= sizeof(block10))
  4109  003558  0E0B               	movlw	11
  4110  00355A  602A               	cpfslt	r_protocol@rxData_l,c
  4111  00355C  D00C               	goto	l8701
  4112                           
  4113                           ; BSR set to: 57
  4114                           ;gemsecs.c: 247:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4115                           ;stkvar	_rxData @ sp[(-1)+0]
  4116  00355E  502A               	movf	r_protocol@rxData_l,w,c
  4117  003560  0820               	sublw	low (_H10+25)
  4118  003562  6ED9               	movwf	fsr2l,c
  4119  003564  0E00               	movlw	0
  4120  003566  A0D8               	btfss	status,0,c
  4121  003568  2AE8               	incf	wreg,f,c
  4122  00356A  0801               	sublw	high (_H10+25)
  4123  00356C  6EDA               	movwf	fsr2h,c
  4124  00356E  0EFF               	movlw	-1
  4125  003570  006F FF8F FFDF     	movff	plusw1,indf2
  4126  003576                     l8701:
  4127                           
  4128                           ; BSR set to: 57
  4129                           ;gemsecs.c: 249:      if (rxData_l == sizeof(block10) + 1)
  4130  003576  0E0B               	movlw	11
  4131  003578  182A               	xorwf	r_protocol@rxData_l,w,c
  4132  00357A  A4D8               	btfss	status,2,c
  4133  00357C  D004               	goto	l8705
  4134                           
  4135                           ; BSR set to: 57
  4136                           ;gemsecs.c: 250:       V.ack[2] = rxData;
  4137                           ;stkvar	_rxData @ sp[(-1)+0]
  4138  00357E  0EFF               	movlw	-1
  4139  003580  006F FF8C  F0BB    	movff	plusw1,_V+91	;volatile
  4140  003586                     l8705:
  4141                           
  4142                           ; BSR set to: 57
  4143                           ;gemsecs.c: 251:      if (rxData_l == sizeof(block10) + 2)
  4144  003586  0E0C               	movlw	12
  4145  003588  182A               	xorwf	r_protocol@rxData_l,w,c
  4146  00358A  A4D8               	btfss	status,2,c
  4147  00358C  D004               	goto	l8709
  4148                           
  4149                           ; BSR set to: 57
  4150                           ;gemsecs.c: 252:       V.ack[1] = rxData;
  4151                           ;stkvar	_rxData @ sp[(-1)+0]
  4152  00358E  0EFF               	movlw	-1
  4153  003590  006F FF8C  F0BA    	movff	plusw1,_V+90	;volatile
  4154  003596                     l8709:
  4155                           
  4156                           ; BSR set to: 57
  4157                           ;gemsecs.c: 253:      if (rxData_l == sizeof(block10) + 3)
  4158  003596  0E0D               	movlw	13
  4159  003598  182A               	xorwf	r_protocol@rxData_l,w,c
  4160  00359A  A4D8               	btfss	status,2,c
  4161  00359C  D004               	goto	l8713
  4162                           
  4163                           ; BSR set to: 57
  4164                           ;gemsecs.c: 254:       V.ack[0] = rxData;
  4165                           ;stkvar	_rxData @ sp[(-1)+0]
  4166  00359E  0EFF               	movlw	-1
  4167  0035A0  006F FF8C  F0B9    	movff	plusw1,_V+89	;volatile
  4168  0035A6                     l8713:
  4169                           
  4170                           ; BSR set to: 57
  4171                           ;gemsecs.c: 256:      if (rxData_l <= r_block.length)
  4172  0035A6  502A               	movf	r_protocol@rxData_l,w,c
  4173  0035A8  0100               	movlb	0	; () banked
  4174  0035AA  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  4175  0035AC  A0D8               	btfss	status,0,c
  4176  0035AE  D00D               	goto	l8717
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;gemsecs.c: 257:       V.r_checksum = run_checksum(rxData, 0);
  4180  0035B0  0E00               	movlw	0
  4181  0035B2  6EE6               	movwf	postinc1,c
  4182                           
  4183                           ;stkvar	_rxData @ sp[(-2)+0]
  4184  0035B4  0EFE               	movlw	-2
  4185  0035B6  50E3               	movf	plusw1,w,c
  4186  0035B8  6EE6               	movwf	postinc1,c
  4187  0035BA  ECBE  F02E         	call	_run_checksum	;wreg free
  4188  0035BE  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  4189  0035C4  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  4190  0035CA                     l8717:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;gemsecs.c: 259:      if (rxData_l == r_block.length + 1)
  4194  0035CA  502A               	movf	r_protocol@rxData_l,w,c
  4195  0035CC  6E43               	movwf	btemp+10,c
  4196  0035CE  6A44               	clrf	btemp+11,c
  4197  0035D0  51CA               	movf	(_r_block+12)& (0+255),w,b
  4198  0035D2  6E41               	movwf	btemp+8,c
  4199  0035D4  6A42               	clrf	btemp+9,c
  4200  0035D6  0E01               	movlw	1
  4201  0035D8  2641               	addwf	btemp+8,f,c
  4202  0035DA  0E00               	movlw	0
  4203  0035DC  2242               	addwfc	btemp+9,f,c
  4204  0035DE  5043               	movf	btemp+10,w,c
  4205  0035E0  1841               	xorwf	btemp+8,w,c
  4206  0035E2  E109               	bnz	l8721
  4207  0035E4  5044               	movf	btemp+11,w,c
  4208  0035E6  1842               	xorwf	btemp+9,w,c
  4209  0035E8  A4D8               	btfss	status,2,c
  4210  0035EA  D005               	goto	l8721
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;gemsecs.c: 260:       H10[1].checksum = (uint16_t) rxData << 8;
  4214                           ;stkvar	_rxData @ sp[(-1)+0]
  4215  0035EC  0EFF               	movlw	-1
  4216  0035EE  50E3               	movf	plusw1,w,c
  4217  0035F0  0101               	movlb	1	; () banked
  4218  0035F2  6F15               	movwf	(_H10+14)& (0+255),b
  4219  0035F4  6B14               	clrf	(_H10+13)& (0+255),b
  4220  0035F6                     l8721:
  4221                           
  4222                           ;gemsecs.c: 261:      if (rxData_l == r_block.length + 2)
  4223  0035F6  502A               	movf	r_protocol@rxData_l,w,c
  4224  0035F8  6E43               	movwf	btemp+10,c
  4225  0035FA  6A44               	clrf	btemp+11,c
  4226  0035FC  0100               	movlb	0	; () banked
  4227  0035FE  51CA               	movf	(_r_block+12)& (0+255),w,b
  4228  003600  6E41               	movwf	btemp+8,c
  4229  003602  6A42               	clrf	btemp+9,c
  4230  003604  0E02               	movlw	2
  4231  003606  2641               	addwf	btemp+8,f,c
  4232  003608  0E00               	movlw	0
  4233  00360A  2242               	addwfc	btemp+9,f,c
  4234  00360C  5043               	movf	btemp+10,w,c
  4235  00360E  1841               	xorwf	btemp+8,w,c
  4236  003610  E10A               	bnz	l8725
  4237  003612  5044               	movf	btemp+11,w,c
  4238  003614  1842               	xorwf	btemp+9,w,c
  4239  003616  A4D8               	btfss	status,2,c
  4240  003618  D006               	goto	l8725
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;gemsecs.c: 262:       H10[1].checksum += rxData;
  4244                           ;stkvar	_rxData @ sp[(-1)+0]
  4245  00361A  0EFF               	movlw	-1
  4246  00361C  50E3               	movf	plusw1,w,c
  4247  00361E  0101               	movlb	1	; () banked
  4248  003620  2714               	addwf	(_H10+13)& (0+255),f,b
  4249  003622  0E00               	movlw	0
  4250  003624  2315               	addwfc	(_H10+14)& (0+255),f,b
  4251  003626                     l8725:
  4252                           
  4253                           ;gemsecs.c: 264:      rxData_l++;
  4254  003626  2A2A               	incf	r_protocol@rxData_l,f,c
  4255                           
  4256                           ;gemsecs.c: 265:      if (rxData_l > (r_block.length + 2)) {
  4257  003628  502A               	movf	r_protocol@rxData_l,w,c
  4258  00362A  6E43               	movwf	btemp+10,c
  4259  00362C  6A44               	clrf	btemp+11,c
  4260  00362E  0100               	movlb	0	; () banked
  4261  003630  51CA               	movf	(_r_block+12)& (0+255),w,b
  4262  003632  6E41               	movwf	btemp+8,c
  4263  003634  6A42               	clrf	btemp+9,c
  4264  003636  0E02               	movlw	2
  4265  003638  2641               	addwf	btemp+8,f,c
  4266  00363A  0E00               	movlw	0
  4267  00363C  2242               	addwfc	btemp+9,f,c
  4268  00363E  5043               	movf	btemp+10,w,c
  4269  003640  5C41               	subwf	btemp+8,w,c
  4270  003642  5042               	movf	btemp+9,w,c
  4271  003644  0A80               	xorlw	128
  4272  003646  6E39               	movwf	btemp,c
  4273  003648  5044               	movf	btemp+11,w,c
  4274  00364A  0A80               	xorlw	128
  4275  00364C  5839               	subwfb	btemp,w,c
  4276  00364E  B0D8               	btfsc	status,0,c
  4277  003650  D09B               	goto	l8783
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;gemsecs.c: 266:       if (V.r_checksum == H10[1].checksum) {
  4281  003652  0101               	movlb	1	; () banked
  4282  003654  5114               	movf	(_H10+13)& (0+255),w,b
  4283  003656  0100               	movlb	0	; () banked
  4284  003658  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4285  00365A  E10E               	bnz	l8735
  4286  00365C  0101               	movlb	1	; () banked
  4287  00365E  5115               	movf	(_H10+14)& (0+255),w,b
  4288  003660  0100               	movlb	0	; () banked
  4289  003662  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  4290  003664  A4D8               	btfss	status,2,c
  4291  003666  D008               	goto	l8735
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;gemsecs.c: 267:        *r_link = LINK_STATE_ACK;
  4295                           ;stkvar	_r_link @ sp[(-1)+-1]
  4296  003668  0EFE               	movlw	-2
  4297  00366A  50E3               	movf	plusw1,w,c
  4298  00366C  6ED9               	movwf	fsr2l,c
  4299  00366E  6ADA               	clrf	fsr2h,c
  4300  003670  0E03               	movlw	3
  4301  003672  D050               	goto	L10
  4302  003674                     l8733:
  4303  003674  EC65  F02E         	call	_UART1_Read	;wreg free
  4304  003678                     l8735:
  4305                           
  4306                           ;gemsecs.c: 269:        while (UART1_is_rx_ready())
  4307  003678  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  4308  00367C  5039               	movf	btemp,w,c
  4309  00367E  A4D8               	btfss	status,2,c
  4310  003680  D7F9               	goto	l8733
  4311                           
  4312                           ;gemsecs.c: 271:        WaitMs(500);
  4313  003682  0EF4               	movlw	244
  4314  003684  6EE6               	movwf	postinc1,c
  4315  003686  0E01               	movlw	1
  4316  003688  6EE6               	movwf	postinc1,c
  4317  00368A  EC56  F02F         	call	_WaitMs	;wreg free
  4318                           
  4319                           ;gemsecs.c: 272:        V.error = LINK_ERROR_CHECKSUM;
  4320  00368E  0E05               	movlw	5
  4321  003690  0100               	movlb	0	; () banked
  4322  003692  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;gemsecs.c: 273:        V.failed_receive = 2;
  4326  003694  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4327  003696  0BF0               	andlw	-16
  4328  003698  0902               	iorlw	2
  4329  00369A  D737               	goto	L11
  4330  00369C                     l8745:
  4331                           
  4332                           ;gemsecs.c: 282:   V.stream = H10[1].block.block.stream;
  4333  00369C  0101               	movlb	1	; () banked
  4334  00369E  511D               	movf	(_H10+22)& (0+255),w,b
  4335  0036A0  0B7F               	andlw	127
  4336  0036A2  0100               	movlb	0	; () banked
  4337  0036A4  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;gemsecs.c: 283:   V.function = H10[1].block.block.function;
  4341  0036A6  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;gemsecs.c: 284:   V.systemb = H10[1].block.block.systemb;
  4345  0036AA  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  4346  0036AE  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  4347  0036B2  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  4348  0036B6  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;gemsecs.c: 285:   V.rbit = H10[1].block.block.rbit;
  4352  0036BA  0101               	movlb	1	; () banked
  4353  0036BC  AF1F               	btfss	(_H10+24)& (0+255),7,b
  4354  0036BE  D003               	bra	u5455
  4355  0036C0  0100               	movlb	0	; () banked
  4356  0036C2  81B7               	bsf	(_V+87)& (0+255),0,b	;volatile
  4357  0036C4  D002               	bra	u5457
  4358  0036C6                     u5455:
  4359  0036C6  0100               	movlb	0	; () banked
  4360  0036C8  91B7               	bcf	(_V+87)& (0+255),0,b	;volatile
  4361  0036CA                     u5457:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;gemsecs.c: 286:   V.wbit = H10[1].block.block.wbit;
  4365  0036CA  0101               	movlb	1	; () banked
  4366  0036CC  AF1D               	btfss	(_H10+22)& (0+255),7,b
  4367  0036CE  D003               	bra	u5465
  4368  0036D0  0100               	movlb	0	; () banked
  4369  0036D2  83B7               	bsf	(_V+87)& (0+255),1,b	;volatile
  4370  0036D4  D002               	bra	u5467
  4371  0036D6                     u5465:
  4372  0036D6  0100               	movlb	0	; () banked
  4373  0036D8  93B7               	bcf	(_V+87)& (0+255),1,b	;volatile
  4374  0036DA                     u5467:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;gemsecs.c: 287:   V.ebit = H10[1].block.block.ebit;
  4378  0036DA  0101               	movlb	1	; () banked
  4379  0036DC  AF1B               	btfss	(_H10+20)& (0+255),7,b
  4380  0036DE  D003               	bra	u5475
  4381  0036E0  0100               	movlb	0	; () banked
  4382  0036E2  85B7               	bsf	(_V+87)& (0+255),2,b	;volatile
  4383  0036E4  D002               	bra	u5477
  4384  0036E6                     u5475:
  4385  0036E6  0100               	movlb	0	; () banked
  4386  0036E8  95B7               	bcf	(_V+87)& (0+255),2,b	;volatile
  4387  0036EA                     u5477:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;gemsecs.c: 288:   V.g_state = secs_gem_state(V.stream, V.function);
  4391  0036EA  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  4392  0036EC  6EE6               	movwf	postinc1,c
  4393  0036EE  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  4394  0036F0  6EE6               	movwf	postinc1,c
  4395  0036F2  EC3A  F028         	call	_secs_gem_state	;wreg free
  4396  0036F6  5039               	movf	btemp,w,c
  4397  0036F8  0100               	movlb	0	; () banked
  4398  0036FA  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;gemsecs.c: 289:   UART1_Write(0x06);
  4402  0036FC  0E06               	movlw	6
  4403  0036FE  6EE6               	movwf	postinc1,c
  4404  003700  EC27  F02E         	call	_UART1_Write	;wreg free
  4405                           
  4406                           ; BSR set to: 57
  4407                           ;gemsecs.c: 290:   V.failed_receive = 0;
  4408  003704  0EF0               	movlw	-16
  4409  003706  0100               	movlb	0	; () banked
  4410  003708  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;gemsecs.c: 291:   *r_link = LINK_STATE_DONE;
  4414                           ;stkvar	_r_link @ sp[(-1)+-1]
  4415  00370A  0EFE               	movlw	-2
  4416  00370C  50E3               	movf	plusw1,w,c
  4417  00370E  6ED9               	movwf	fsr2l,c
  4418  003710  6ADA               	clrf	fsr2h,c
  4419  003712  0E04               	movlw	4
  4420  003714                     L10:
  4421  003714  6EDF               	movwf	indf2,c
  4422                           
  4423                           ;gemsecs.c: 292:   break;
  4424  003716  D038               	goto	l8783
  4425  003718                     l8765:
  4426                           
  4427                           ;gemsecs.c: 294:   UART1_Write(0x15);
  4428  003718  0E15               	movlw	21
  4429  00371A  6EE6               	movwf	postinc1,c
  4430  00371C  EC27  F02E         	call	_UART1_Write	;wreg free
  4431                           
  4432                           ; BSR set to: 57
  4433                           ;gemsecs.c: 295:   *r_link = LINK_STATE_ERROR;
  4434                           ;stkvar	_r_link @ sp[(-1)+-1]
  4435  003720  0EFE               	movlw	-2
  4436  003722  50E3               	movf	plusw1,w,c
  4437  003724  6ED9               	movwf	fsr2l,c
  4438  003726  6ADA               	clrf	fsr2h,c
  4439  003728  0E06               	movlw	6
  4440  00372A  6EDF               	movwf	indf2,c
  4441                           
  4442                           ;gemsecs.c: 296:   while ((uart1RxCount)) {
  4443  00372C  D002               	goto	l8771
  4444  00372E                     l8769:
  4445                           
  4446                           ; BSR set to: 57
  4447                           ;gemsecs.c: 297:    UART1_Read();
  4448  00372E  EC65  F02E         	call	_UART1_Read	;wreg free
  4449  003732                     l8771:
  4450                           
  4451                           ; BSR set to: 57
  4452                           ;gemsecs.c: 296:   while ((uart1RxCount)) {
  4453  003732  5033               	movf	_uart1RxCount,w,c	;volatile
  4454  003734  A4D8               	btfss	status,2,c
  4455  003736  D7FB               	goto	l8769
  4456                           
  4457                           ; BSR set to: 57
  4458                           ;gemsecs.c: 299:   retry = 3;
  4459  003738  0E03               	movlw	3
  4460  00373A  6E5D               	movwf	r_protocol@retry,c
  4461                           
  4462                           ;gemsecs.c: 300:   break;
  4463  00373C  D025               	goto	l8783
  4464  00373E                     l8775:
  4465                           
  4466                           ;gemsecs.c: 304:   V.failed_receive = 0;
  4467  00373E  0EF0               	movlw	-16
  4468  003740  0100               	movlb	0	; () banked
  4469  003742  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  4470  003744  D6E9               	goto	l8683
  4471  003746                     l8781:
  4472                           
  4473                           ;stkvar	_r_link @ sp[(-1)+-1]
  4474  003746  0EFE               	movlw	-2
  4475  003748  50E3               	movf	plusw1,w,c
  4476  00374A  6ED9               	movwf	fsr2l,c
  4477  00374C  6ADA               	clrf	fsr2h,c
  4478  00374E  50DF               	movf	indf2,w,c
  4479  003750  6E43               	movwf	btemp+10,c
  4480  003752  6A44               	clrf	btemp+11,c
  4481                           
  4482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 1, Range of values is 0 to 0
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            4     3 (average)
  4488                           ;	Chosen strategy is simple_byte
  4489  003754  5044               	movf	btemp+11,w,c
  4490  003756  0A00               	xorlw	0	; case 0
  4491  003758  A4D8               	btfss	status,2,c
  4492  00375A  D6DE               	goto	l8683
  4493                           
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 7, Range of values is 0 to 6
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           22    12 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500  00375C  5043               	movf	btemp+10,w,c
  4501  00375E  0A00               	xorlw	0	; case 0
  4502  003760  B4D8               	btfsc	status,2,c
  4503  003762  D679               	goto	l8653
  4504  003764  0A01               	xorlw	1	; case 1
  4505  003766  B4D8               	btfsc	status,2,c
  4506  003768  D691               	goto	l1634
  4507  00376A  0A03               	xorlw	3	; case 2
  4508  00376C  B4D8               	btfsc	status,2,c
  4509  00376E  D6BC               	goto	l8675
  4510  003770  0A01               	xorlw	1	; case 3
  4511  003772  B4D8               	btfsc	status,2,c
  4512  003774  D793               	goto	l8745
  4513  003776  0A07               	xorlw	7	; case 4
  4514  003778  B4D8               	btfsc	status,2,c
  4515  00377A  D7E1               	goto	l8775
  4516  00377C  0A01               	xorlw	1	; case 5
  4517  00377E  B4D8               	btfsc	status,2,c
  4518  003780  D7CB               	goto	l8765
  4519  003782  0A03               	xorlw	3	; case 6
  4520  003784  A4D8               	btfss	status,2,c
  4521  003786  D6C8               	goto	l8683
  4522  003788                     l8783:
  4523                           
  4524                           ;gemsecs.c: 311:  return *r_link;
  4525                           ;stkvar	_r_link @ sp[(-1)+-1]
  4526  003788  0EFE               	movlw	-2
  4527  00378A  50E3               	movf	plusw1,w,c
  4528  00378C  6ED9               	movwf	fsr2l,c
  4529  00378E  6ADA               	clrf	fsr2h,c
  4530  003790  50DF               	movf	indf2,w,c
  4531  003792  6E39               	movwf	btemp,c
  4532                           
  4533                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4534  003794  52E5               	movf	postdec1,f,c
  4535  003796  52E5               	movf	postdec1,f,c
  4536  003798  0012               	return		;funcret
  4537  00379A                     __end_of_r_protocol:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _m_protocol *****************
  4541 ;; Defined at:
  4542 ;;		line 42 in file "gemsecs.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  m_link          1  [STACK] PTR enum E16173
  4545 ;;		 -> V(94), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  rxData          1  [STACK] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1  [STACK] enum E16913
  4550 ;; Registers used:
  4551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;Total ram usage:        0 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    5
  4564 ;; This function calls:
  4565 ;;		_StartTimer
  4566 ;;		_TimerDone
  4567 ;;		_UART1_Read
  4568 ;;		_UART1_is_rx_ready
  4569 ;;		_UART2_Read
  4570 ;;		_UART2_is_rx_ready
  4571 ;;		_WaitMs
  4572 ;;		_run_checksum
  4573 ;;		_secs_gem_state
  4574 ;;		_secs_send
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text5
  4581  00263E                     __ptext5:
  4582                           	opt callstack 0
  4583  00263E                     _m_protocol:
  4584                           	opt callstack 0
  4585                           
  4586                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4587  00263E  52E6               	movf	postinc1,f,c
  4588                           
  4589                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  4590                           
  4591                           ;incstack = 0
  4592  002640  D247               	goto	l9093
  4593  002642                     l8909:
  4594                           
  4595                           ;gemsecs.c: 50:   WaitMs(50);
  4596  002642  0E32               	movlw	50
  4597  002644  6EE6               	movwf	postinc1,c
  4598  002646  0E00               	movlw	0
  4599  002648  6EE6               	movwf	postinc1,c
  4600  00264A  EC56  F02F         	call	_WaitMs	;wreg free
  4601                           
  4602                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  4603  00264E  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  4604  002652  5039               	movf	btemp,w,c
  4605  002654  B4D8               	btfsc	status,2,c
  4606  002656  D021               	goto	l8925
  4607                           
  4608                           ;gemsecs.c: 53:    rxData = UART1_Read();
  4609  002658  EC65  F02E         	call	_UART1_Read	;wreg free
  4610                           
  4611                           ;stkvar	_rxData @ sp[(-1)+0]
  4612  00265C  0EFF               	movlw	-1
  4613  00265E  0060  F0E7  FFE3   	movff	btemp,plusw1
  4614                           
  4615                           ; BSR set to: 57
  4616                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  4617                           ;stkvar	_rxData @ sp[(-1)+0]
  4618  002664  0EFF               	movlw	-1
  4619  002666  006F FF8C  F039    	movff	plusw1,btemp
  4620  00266C  0E05               	movlw	5
  4621  00266E  1839               	xorwf	btemp,w,c
  4622  002670  A4D8               	btfss	status,2,c
  4623  002672  D013               	goto	l8925
  4624                           
  4625                           ; BSR set to: 57
  4626                           ;gemsecs.c: 55:     V.uart = 1;
  4627  002674  0E01               	movlw	1
  4628  002676  0100               	movlb	0	; () banked
  4629  002678  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  4633  00267A  0ED0               	movlw	208
  4634  00267C  6EE6               	movwf	postinc1,c
  4635  00267E  0E07               	movlw	7
  4636  002680  6EE6               	movwf	postinc1,c
  4637  002682  0E02               	movlw	2
  4638  002684  6EE6               	movwf	postinc1,c
  4639  002686  EC84  F02E         	call	_StartTimer	;wreg free
  4640                           
  4641                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  4642  00268A  0100               	movlb	0	; () banked
  4643  00268C  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  4647                           ;stkvar	_m_link @ sp[(-1)+-1]
  4648  00268E  0EFE               	movlw	-2
  4649  002690  50E3               	movf	plusw1,w,c
  4650  002692  6ED9               	movwf	fsr2l,c
  4651  002694  6ADA               	clrf	fsr2h,c
  4652  002696  0E01               	movlw	1
  4653  002698  6EDF               	movwf	indf2,c
  4654  00269A                     l8925:
  4655                           
  4656                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  4657  00269A  EC41  F032         	call	_UART2_is_rx_ready	;wreg free
  4658  00269E  5039               	movf	btemp,w,c
  4659  0026A0  B4D8               	btfsc	status,2,c
  4660  0026A2  D237               	goto	l9095
  4661                           
  4662                           ;gemsecs.c: 62:    rxData = UART2_Read();
  4663  0026A4  EC46  F02E         	call	_UART2_Read	;wreg free
  4664                           
  4665                           ;stkvar	_rxData @ sp[(-1)+0]
  4666  0026A8  0EFF               	movlw	-1
  4667  0026AA  0060  F0E7  FFE3   	movff	btemp,plusw1
  4668                           
  4669                           ; BSR set to: 57
  4670                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  4671                           ;stkvar	_rxData @ sp[(-1)+0]
  4672  0026B0  0EFF               	movlw	-1
  4673  0026B2  006F FF8C  F039    	movff	plusw1,btemp
  4674  0026B8  0E05               	movlw	5
  4675  0026BA  1839               	xorwf	btemp,w,c
  4676  0026BC  A4D8               	btfss	status,2,c
  4677  0026BE  D229               	goto	l9095
  4678                           
  4679                           ; BSR set to: 57
  4680                           ;gemsecs.c: 64:     V.uart = 2;
  4681  0026C0  0E02               	movlw	2
  4682  0026C2  0100               	movlb	0	; () banked
  4683  0026C4  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  4687  0026C6  0ED0               	movlw	208
  4688  0026C8  6EE6               	movwf	postinc1,c
  4689  0026CA  0E07               	movlw	7
  4690  0026CC  6EE6               	movwf	postinc1,c
  4691  0026CE  0E02               	movlw	2
  4692  0026D0  6EE6               	movwf	postinc1,c
  4693  0026D2  EC84  F02E         	call	_StartTimer	;wreg free
  4694                           
  4695                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  4696  0026D6  0100               	movlb	0	; () banked
  4697  0026D8  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  4701                           ;stkvar	_m_link @ sp[(-1)+-1]
  4702  0026DA  0EFE               	movlw	-2
  4703  0026DC  50E3               	movf	plusw1,w,c
  4704  0026DE  6ED9               	movwf	fsr2l,c
  4705  0026E0  6ADA               	clrf	fsr2h,c
  4706  0026E2  0E01               	movlw	1
  4707  0026E4  D1F3               	goto	L17
  4708  0026E6                     l8939:
  4709                           
  4710                           ;gemsecs.c: 73:   WaitMs(50);
  4711  0026E6  0E32               	movlw	50
  4712  0026E8  6EE6               	movwf	postinc1,c
  4713  0026EA  0E00               	movlw	0
  4714  0026EC  6EE6               	movwf	postinc1,c
  4715  0026EE  EC56  F02F         	call	_WaitMs	;wreg free
  4716                           
  4717                           ;gemsecs.c: 74:   if (V.uart == 1)
  4718  0026F2  0100               	movlb	0	; () banked
  4719  0026F4  05BC               	decf	(_V+92)& (0+255),w,b	;volatile
  4720  0026F6  A4D8               	btfss	status,2,c
  4721  0026F8  D00C               	goto	l8945
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;gemsecs.c: 75:    secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  4725  0026FA  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4726  0026FC  6EE6               	movwf	postinc1,c
  4727  0026FE  0E01               	movlw	1
  4728  002700  6EE6               	movwf	postinc1,c
  4729  002702  0E1E               	movlw	30
  4730  002704  6EE6               	movwf	postinc1,c
  4731  002706  0EC0               	movlw	low _H27
  4732  002708  6EE6               	movwf	postinc1,c
  4733  00270A  0E02               	movlw	high _H27
  4734  00270C  6EE6               	movwf	postinc1,c
  4735  00270E  EC32  F021         	call	_secs_send	;wreg free
  4736  002712                     l8945:
  4737                           
  4738                           ;gemsecs.c: 76:   if (V.uart == 2)
  4739  002712  0E02               	movlw	2
  4740  002714  0100               	movlb	0	; () banked
  4741  002716  19BC               	xorwf	(_V+92)& (0+255),w,b	;volatile
  4742  002718  A4D8               	btfss	status,2,c
  4743  00271A  D00C               	goto	l8949
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;gemsecs.c: 77:    secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  4747  00271C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4748  00271E  6EE6               	movwf	postinc1,c
  4749  002720  0E01               	movlw	1
  4750  002722  6EE6               	movwf	postinc1,c
  4751  002724  0E0D               	movlw	13
  4752  002726  6EE6               	movwf	postinc1,c
  4753  002728  0E07               	movlw	low _H10
  4754  00272A  6EE6               	movwf	postinc1,c
  4755  00272C  0E01               	movlw	high _H10
  4756  00272E  6EE6               	movwf	postinc1,c
  4757  002730  EC32  F021         	call	_secs_send	;wreg free
  4758  002734                     l8949:
  4759                           
  4760                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  4761  002734  0100               	movlb	0	; () banked
  4762  002736  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  4766                           ;stkvar	_m_link @ sp[(-1)+-1]
  4767  002738  0EFE               	movlw	-2
  4768  00273A  50E3               	movf	plusw1,w,c
  4769  00273C  6ED9               	movwf	fsr2l,c
  4770  00273E  6ADA               	clrf	fsr2h,c
  4771  002740  0E02               	movlw	2
  4772  002742  6EDF               	movwf	indf2,c
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  4776  002744  0ED0               	movlw	208
  4777  002746  6EE6               	movwf	postinc1,c
  4778  002748  0E07               	movlw	7
  4779  00274A  6EE6               	movwf	postinc1,c
  4780  00274C  0E02               	movlw	2
  4781  00274E  6EE6               	movwf	postinc1,c
  4782  002750  EC84  F02E         	call	_StartTimer	;wreg free
  4783                           
  4784                           ;gemsecs.c: 82:   break;
  4785  002754  D1DE               	goto	l9095
  4786  002756                     l8955:
  4787                           
  4788                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  4789  002756  0E02               	movlw	2
  4790  002758  6EE6               	movwf	postinc1,c
  4791  00275A  ECF7  F030         	call	_TimerDone	;wreg free
  4792  00275E  5039               	movf	btemp,w,c
  4793  002760  B4D8               	btfsc	status,2,c
  4794  002762  D00D               	goto	l8961
  4795                           
  4796                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  4797  002764  0E02               	movlw	2
  4798  002766  0100               	movlb	0	; () banked
  4799  002768  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4800                           
  4801                           ;gemsecs.c: 86:    V.failed_receive = 2;
  4802  00276A  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  4803  00276C  0BF0               	andlw	-16
  4804  00276E  0902               	iorlw	2
  4805  002770  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  4809                           ;stkvar	_m_link @ sp[(-1)+-1]
  4810  002772  0EFE               	movlw	-2
  4811  002774  50E3               	movf	plusw1,w,c
  4812  002776  6ED9               	movwf	fsr2l,c
  4813  002778  6ADA               	clrf	fsr2h,c
  4814  00277A  0E05               	movlw	5
  4815  00277C  D1A7               	goto	L17
  4816  00277E                     l8961:
  4817                           
  4818                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  4819  00277E  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  4820  002782  5039               	movf	btemp,w,c
  4821  002784  B4D8               	btfsc	status,2,c
  4822  002786  D0A5               	goto	l9009
  4823                           
  4824                           ;gemsecs.c: 90:     rxData = UART1_Read();
  4825  002788  EC65  F02E         	call	_UART1_Read	;wreg free
  4826                           
  4827                           ;stkvar	_rxData @ sp[(-1)+0]
  4828  00278C  0EFF               	movlw	-1
  4829  00278E  0060  F0E7  FFE3   	movff	btemp,plusw1
  4830                           
  4831                           ; BSR set to: 57
  4832                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  4833  002794  502B               	movf	m_protocol@rxData_l,w,c
  4834  002796  A4D8               	btfss	status,2,c
  4835  002798  D00C               	goto	l8973
  4836                           
  4837                           ; BSR set to: 57
  4838                           ;gemsecs.c: 92:      r_block.length = rxData;
  4839                           ;stkvar	_rxData @ sp[(-1)+0]
  4840  00279A  0EFF               	movlw	-1
  4841  00279C  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  4842                           
  4843                           ; BSR set to: 57
  4844                           ;gemsecs.c: 93:      run_checksum(0, 1);
  4845  0027A2  0E01               	movlw	1
  4846  0027A4  6EE6               	movwf	postinc1,c
  4847  0027A6  0E00               	movlw	0
  4848  0027A8  6EE6               	movwf	postinc1,c
  4849  0027AA  ECBE  F02E         	call	_run_checksum	;wreg free
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;gemsecs.c: 94:      rxData_l++;
  4853  0027AE  2A2B               	incf	m_protocol@rxData_l,f,c
  4854                           
  4855                           ;gemsecs.c: 95:     } else {
  4856  0027B0  D090               	goto	l9009
  4857  0027B2                     l8973:
  4858                           
  4859                           ; BSR set to: 57
  4860                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  4861  0027B2  0E0B               	movlw	11
  4862  0027B4  602B               	cpfslt	m_protocol@rxData_l,c
  4863  0027B6  D00C               	goto	l8977
  4864                           
  4865                           ; BSR set to: 57
  4866                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4867                           ;stkvar	_rxData @ sp[(-1)+0]
  4868  0027B8  502B               	movf	m_protocol@rxData_l,w,c
  4869  0027BA  0820               	sublw	low (_H10+25)
  4870  0027BC  6ED9               	movwf	fsr2l,c
  4871  0027BE  0E00               	movlw	0
  4872  0027C0  A0D8               	btfss	status,0,c
  4873  0027C2  2AE8               	incf	wreg,f,c
  4874  0027C4  0801               	sublw	high (_H10+25)
  4875  0027C6  6EDA               	movwf	fsr2h,c
  4876  0027C8  0EFF               	movlw	-1
  4877  0027CA  006F FF8F FFDF     	movff	plusw1,indf2
  4878  0027D0                     l8977:
  4879                           
  4880                           ; BSR set to: 57
  4881                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  4882  0027D0  502B               	movf	m_protocol@rxData_l,w,c
  4883  0027D2  0100               	movlb	0	; () banked
  4884  0027D4  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  4885  0027D6  A0D8               	btfss	status,0,c
  4886  0027D8  D00D               	goto	l8981
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  4890  0027DA  0E00               	movlw	0
  4891  0027DC  6EE6               	movwf	postinc1,c
  4892                           
  4893                           ;stkvar	_rxData @ sp[(-2)+0]
  4894  0027DE  0EFE               	movlw	-2
  4895  0027E0  50E3               	movf	plusw1,w,c
  4896  0027E2  6EE6               	movwf	postinc1,c
  4897  0027E4  ECBE  F02E         	call	_run_checksum	;wreg free
  4898  0027E8  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  4899  0027EE  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  4900  0027F4                     l8981:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  4904  0027F4  502B               	movf	m_protocol@rxData_l,w,c
  4905  0027F6  6E43               	movwf	btemp+10,c
  4906  0027F8  6A44               	clrf	btemp+11,c
  4907  0027FA  51CA               	movf	(_r_block+12)& (0+255),w,b
  4908  0027FC  6E41               	movwf	btemp+8,c
  4909  0027FE  6A42               	clrf	btemp+9,c
  4910  002800  0E01               	movlw	1
  4911  002802  2641               	addwf	btemp+8,f,c
  4912  002804  0E00               	movlw	0
  4913  002806  2242               	addwfc	btemp+9,f,c
  4914  002808  5043               	movf	btemp+10,w,c
  4915  00280A  1841               	xorwf	btemp+8,w,c
  4916  00280C  E109               	bnz	l8985
  4917  00280E  5044               	movf	btemp+11,w,c
  4918  002810  1842               	xorwf	btemp+9,w,c
  4919  002812  A4D8               	btfss	status,2,c
  4920  002814  D005               	goto	l8985
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  4924                           ;stkvar	_rxData @ sp[(-1)+0]
  4925  002816  0EFF               	movlw	-1
  4926  002818  50E3               	movf	plusw1,w,c
  4927  00281A  0101               	movlb	1	; () banked
  4928  00281C  6F15               	movwf	(_H10+14)& (0+255),b
  4929  00281E  6B14               	clrf	(_H10+13)& (0+255),b
  4930  002820                     l8985:
  4931                           
  4932                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  4933  002820  502B               	movf	m_protocol@rxData_l,w,c
  4934  002822  6E43               	movwf	btemp+10,c
  4935  002824  6A44               	clrf	btemp+11,c
  4936  002826  0100               	movlb	0	; () banked
  4937  002828  51CA               	movf	(_r_block+12)& (0+255),w,b
  4938  00282A  6E41               	movwf	btemp+8,c
  4939  00282C  6A42               	clrf	btemp+9,c
  4940  00282E  0E02               	movlw	2
  4941  002830  2641               	addwf	btemp+8,f,c
  4942  002832  0E00               	movlw	0
  4943  002834  2242               	addwfc	btemp+9,f,c
  4944  002836  5043               	movf	btemp+10,w,c
  4945  002838  1841               	xorwf	btemp+8,w,c
  4946  00283A  E10A               	bnz	l8989
  4947  00283C  5044               	movf	btemp+11,w,c
  4948  00283E  1842               	xorwf	btemp+9,w,c
  4949  002840  A4D8               	btfss	status,2,c
  4950  002842  D006               	goto	l8989
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  4954                           ;stkvar	_rxData @ sp[(-1)+0]
  4955  002844  0EFF               	movlw	-1
  4956  002846  50E3               	movf	plusw1,w,c
  4957  002848  0101               	movlb	1	; () banked
  4958  00284A  2714               	addwf	(_H10+13)& (0+255),f,b
  4959  00284C  0E00               	movlw	0
  4960  00284E  2315               	addwfc	(_H10+14)& (0+255),f,b
  4961  002850                     l8989:
  4962                           
  4963                           ;gemsecs.c: 109:      rxData_l++;
  4964  002850  2A2B               	incf	m_protocol@rxData_l,f,c
  4965                           
  4966                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  4967  002852  502B               	movf	m_protocol@rxData_l,w,c
  4968  002854  6E43               	movwf	btemp+10,c
  4969  002856  6A44               	clrf	btemp+11,c
  4970  002858  0100               	movlb	0	; () banked
  4971  00285A  51CA               	movf	(_r_block+12)& (0+255),w,b
  4972  00285C  6E41               	movwf	btemp+8,c
  4973  00285E  6A42               	clrf	btemp+9,c
  4974  002860  0E02               	movlw	2
  4975  002862  2641               	addwf	btemp+8,f,c
  4976  002864  0E00               	movlw	0
  4977  002866  2242               	addwfc	btemp+9,f,c
  4978  002868  5043               	movf	btemp+10,w,c
  4979  00286A  5C41               	subwf	btemp+8,w,c
  4980  00286C  5042               	movf	btemp+9,w,c
  4981  00286E  0A80               	xorlw	128
  4982  002870  6E39               	movwf	btemp,c
  4983  002872  5044               	movf	btemp+11,w,c
  4984  002874  0A80               	xorlw	128
  4985  002876  5839               	subwfb	btemp,w,c
  4986  002878  B0D8               	btfsc	status,0,c
  4987  00287A  D02B               	goto	l9009
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  4991  00287C  0101               	movlb	1	; () banked
  4992  00287E  5114               	movf	(_H10+13)& (0+255),w,b
  4993  002880  0100               	movlb	0	; () banked
  4994  002882  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  4995  002884  E10E               	bnz	l8999
  4996  002886  0101               	movlb	1	; () banked
  4997  002888  5115               	movf	(_H10+14)& (0+255),w,b
  4998  00288A  0100               	movlb	0	; () banked
  4999  00288C  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5000  00288E  A4D8               	btfss	status,2,c
  5001  002890  D008               	goto	l8999
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  5005                           ;stkvar	_m_link @ sp[(-1)+-1]
  5006  002892  0EFE               	movlw	-2
  5007  002894  50E3               	movf	plusw1,w,c
  5008  002896  6ED9               	movwf	fsr2l,c
  5009  002898  6ADA               	clrf	fsr2h,c
  5010  00289A  0E03               	movlw	3
  5011  00289C  D019               	goto	L14
  5012  00289E                     l8997:
  5013  00289E  EC65  F02E         	call	_UART1_Read	;wreg free
  5014  0028A2                     l8999:
  5015                           
  5016                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  5017  0028A2  EC45  F032         	call	_UART1_is_rx_ready	;wreg free
  5018  0028A6  5039               	movf	btemp,w,c
  5019  0028A8  A4D8               	btfss	status,2,c
  5020  0028AA  D7F9               	goto	l8997
  5021                           
  5022                           ;gemsecs.c: 116:        WaitMs(500);
  5023  0028AC  0EF4               	movlw	244
  5024  0028AE  6EE6               	movwf	postinc1,c
  5025  0028B0  0E01               	movlw	1
  5026  0028B2  6EE6               	movwf	postinc1,c
  5027  0028B4  EC56  F02F         	call	_WaitMs	;wreg free
  5028                           
  5029                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  5030  0028B8  0E05               	movlw	5
  5031  0028BA  0100               	movlb	0	; () banked
  5032  0028BC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;gemsecs.c: 118:        V.failed_receive = 3;
  5036  0028BE  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  5037  0028C0  0BF0               	andlw	-16
  5038  0028C2  0903               	iorlw	3
  5039  0028C4  6FB8               	movwf	(_V+88)& (0+255),b	;volatile
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  5043                           ;stkvar	_m_link @ sp[(-1)+-1]
  5044  0028C6  0EFE               	movlw	-2
  5045  0028C8  50E3               	movf	plusw1,w,c
  5046  0028CA  6ED9               	movwf	fsr2l,c
  5047  0028CC  6ADA               	clrf	fsr2h,c
  5048  0028CE  0E05               	movlw	5
  5049  0028D0                     L14:
  5050  0028D0  6EDF               	movwf	indf2,c
  5051  0028D2                     l9009:
  5052                           
  5053                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  5054  0028D2  EC41  F032         	call	_UART2_is_rx_ready	;wreg free
  5055  0028D6  5039               	movf	btemp,w,c
  5056  0028D8  B4D8               	btfsc	status,2,c
  5057  0028DA  D11B               	goto	l9095
  5058                           
  5059                           ;gemsecs.c: 126:     rxData = UART2_Read();
  5060  0028DC  EC46  F02E         	call	_UART2_Read	;wreg free
  5061                           
  5062                           ;stkvar	_rxData @ sp[(-1)+0]
  5063  0028E0  0EFF               	movlw	-1
  5064  0028E2  0060  F0E7  FFE3   	movff	btemp,plusw1
  5065                           
  5066                           ; BSR set to: 57
  5067                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  5068  0028E8  502B               	movf	m_protocol@rxData_l,w,c
  5069  0028EA  A4D8               	btfss	status,2,c
  5070  0028EC  D00C               	goto	l9021
  5071                           
  5072                           ; BSR set to: 57
  5073                           ;gemsecs.c: 128:      r_block.length = rxData;
  5074                           ;stkvar	_rxData @ sp[(-1)+0]
  5075  0028EE  0EFF               	movlw	-1
  5076  0028F0  006F FF8C  F0CA    	movff	plusw1,_r_block+12
  5077                           
  5078                           ; BSR set to: 57
  5079                           ;gemsecs.c: 129:      run_checksum(0, 1);
  5080  0028F6  0E01               	movlw	1
  5081  0028F8  6EE6               	movwf	postinc1,c
  5082  0028FA  0E00               	movlw	0
  5083  0028FC  6EE6               	movwf	postinc1,c
  5084  0028FE  ECBE  F02E         	call	_run_checksum	;wreg free
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;gemsecs.c: 130:      rxData_l++;
  5088  002902  2A2B               	incf	m_protocol@rxData_l,f,c
  5089                           
  5090                           ;gemsecs.c: 131:     } else {
  5091  002904  D106               	goto	l9095
  5092  002906                     l9021:
  5093                           
  5094                           ; BSR set to: 57
  5095                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  5096  002906  0E0B               	movlw	11
  5097  002908  602B               	cpfslt	m_protocol@rxData_l,c
  5098  00290A  D00C               	goto	l9025
  5099                           
  5100                           ; BSR set to: 57
  5101                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5102                           ;stkvar	_rxData @ sp[(-1)+0]
  5103  00290C  502B               	movf	m_protocol@rxData_l,w,c
  5104  00290E  0820               	sublw	low (_H10+25)
  5105  002910  6ED9               	movwf	fsr2l,c
  5106  002912  0E00               	movlw	0
  5107  002914  A0D8               	btfss	status,0,c
  5108  002916  2AE8               	incf	wreg,f,c
  5109  002918  0801               	sublw	high (_H10+25)
  5110  00291A  6EDA               	movwf	fsr2h,c
  5111  00291C  0EFF               	movlw	-1
  5112  00291E  006F FF8F FFDF     	movff	plusw1,indf2
  5113  002924                     l9025:
  5114                           
  5115                           ; BSR set to: 57
  5116                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  5117  002924  502B               	movf	m_protocol@rxData_l,w,c
  5118  002926  0100               	movlb	0	; () banked
  5119  002928  5DCA               	subwf	(_r_block+12)& (0+255),w,b
  5120  00292A  A0D8               	btfss	status,0,c
  5121  00292C  D00D               	goto	l9029
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  5125  00292E  0E00               	movlw	0
  5126  002930  6EE6               	movwf	postinc1,c
  5127                           
  5128                           ;stkvar	_rxData @ sp[(-2)+0]
  5129  002932  0EFE               	movlw	-2
  5130  002934  50E3               	movf	plusw1,w,c
  5131  002936  6EE6               	movwf	postinc1,c
  5132  002938  ECBE  F02E         	call	_run_checksum	;wreg free
  5133  00293C  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5134  002942  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5135  002948                     l9029:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  5139  002948  502B               	movf	m_protocol@rxData_l,w,c
  5140  00294A  6E43               	movwf	btemp+10,c
  5141  00294C  6A44               	clrf	btemp+11,c
  5142  00294E  51CA               	movf	(_r_block+12)& (0+255),w,b
  5143  002950  6E41               	movwf	btemp+8,c
  5144  002952  6A42               	clrf	btemp+9,c
  5145  002954  0E01               	movlw	1
  5146  002956  2641               	addwf	btemp+8,f,c
  5147  002958  0E00               	movlw	0
  5148  00295A  2242               	addwfc	btemp+9,f,c
  5149  00295C  5043               	movf	btemp+10,w,c
  5150  00295E  1841               	xorwf	btemp+8,w,c
  5151  002960  E109               	bnz	l9033
  5152  002962  5044               	movf	btemp+11,w,c
  5153  002964  1842               	xorwf	btemp+9,w,c
  5154  002966  A4D8               	btfss	status,2,c
  5155  002968  D005               	goto	l9033
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  5159                           ;stkvar	_rxData @ sp[(-1)+0]
  5160  00296A  0EFF               	movlw	-1
  5161  00296C  50E3               	movf	plusw1,w,c
  5162  00296E  0101               	movlb	1	; () banked
  5163  002970  6F15               	movwf	(_H10+14)& (0+255),b
  5164  002972  6B14               	clrf	(_H10+13)& (0+255),b
  5165  002974                     l9033:
  5166                           
  5167                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  5168  002974  502B               	movf	m_protocol@rxData_l,w,c
  5169  002976  6E43               	movwf	btemp+10,c
  5170  002978  6A44               	clrf	btemp+11,c
  5171  00297A  0100               	movlb	0	; () banked
  5172  00297C  51CA               	movf	(_r_block+12)& (0+255),w,b
  5173  00297E  6E41               	movwf	btemp+8,c
  5174  002980  6A42               	clrf	btemp+9,c
  5175  002982  0E02               	movlw	2
  5176  002984  2641               	addwf	btemp+8,f,c
  5177  002986  0E00               	movlw	0
  5178  002988  2242               	addwfc	btemp+9,f,c
  5179  00298A  5043               	movf	btemp+10,w,c
  5180  00298C  1841               	xorwf	btemp+8,w,c
  5181  00298E  E10A               	bnz	l9037
  5182  002990  5044               	movf	btemp+11,w,c
  5183  002992  1842               	xorwf	btemp+9,w,c
  5184  002994  A4D8               	btfss	status,2,c
  5185  002996  D006               	goto	l9037
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  5189                           ;stkvar	_rxData @ sp[(-1)+0]
  5190  002998  0EFF               	movlw	-1
  5191  00299A  50E3               	movf	plusw1,w,c
  5192  00299C  0101               	movlb	1	; () banked
  5193  00299E  2714               	addwf	(_H10+13)& (0+255),f,b
  5194  0029A0  0E00               	movlw	0
  5195  0029A2  2315               	addwfc	(_H10+14)& (0+255),f,b
  5196  0029A4                     l9037:
  5197                           
  5198                           ;gemsecs.c: 145:      rxData_l++;
  5199  0029A4  2A2B               	incf	m_protocol@rxData_l,f,c
  5200                           
  5201                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  5202  0029A6  502B               	movf	m_protocol@rxData_l,w,c
  5203  0029A8  6E43               	movwf	btemp+10,c
  5204  0029AA  6A44               	clrf	btemp+11,c
  5205  0029AC  0100               	movlb	0	; () banked
  5206  0029AE  51CA               	movf	(_r_block+12)& (0+255),w,b
  5207  0029B0  6E41               	movwf	btemp+8,c
  5208  0029B2  6A42               	clrf	btemp+9,c
  5209  0029B4  0E02               	movlw	2
  5210  0029B6  2641               	addwf	btemp+8,f,c
  5211  0029B8  0E00               	movlw	0
  5212  0029BA  2242               	addwfc	btemp+9,f,c
  5213  0029BC  5043               	movf	btemp+10,w,c
  5214  0029BE  5C41               	subwf	btemp+8,w,c
  5215  0029C0  5042               	movf	btemp+9,w,c
  5216  0029C2  0A80               	xorlw	128
  5217  0029C4  6E39               	movwf	btemp,c
  5218  0029C6  5044               	movf	btemp+11,w,c
  5219  0029C8  0A80               	xorlw	128
  5220  0029CA  5839               	subwfb	btemp,w,c
  5221  0029CC  B0D8               	btfsc	status,0,c
  5222  0029CE  D0A1               	goto	l9095
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5226  0029D0  0101               	movlb	1	; () banked
  5227  0029D2  5114               	movf	(_H10+13)& (0+255),w,b
  5228  0029D4  0100               	movlb	0	; () banked
  5229  0029D6  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5230  0029D8  E10E               	bnz	l9047
  5231  0029DA  0101               	movlb	1	; () banked
  5232  0029DC  5115               	movf	(_H10+14)& (0+255),w,b
  5233  0029DE  0100               	movlb	0	; () banked
  5234  0029E0  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5235  0029E2  A4D8               	btfss	status,2,c
  5236  0029E4  D008               	goto	l9047
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5240                           ;stkvar	_m_link @ sp[(-1)+-1]
  5241  0029E6  0EFE               	movlw	-2
  5242  0029E8  50E3               	movf	plusw1,w,c
  5243  0029EA  6ED9               	movwf	fsr2l,c
  5244  0029EC  6ADA               	clrf	fsr2h,c
  5245  0029EE  0E03               	movlw	3
  5246  0029F0  D06D               	goto	L17
  5247  0029F2                     l9045:
  5248  0029F2  EC46  F02E         	call	_UART2_Read	;wreg free
  5249  0029F6                     l9047:
  5250                           
  5251                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5252  0029F6  EC41  F032         	call	_UART2_is_rx_ready	;wreg free
  5253  0029FA  5039               	movf	btemp,w,c
  5254  0029FC  A4D8               	btfss	status,2,c
  5255  0029FE  D7F9               	goto	l9045
  5256                           
  5257                           ;gemsecs.c: 152:        WaitMs(500);
  5258  002A00  0EF4               	movlw	244
  5259  002A02  6EE6               	movwf	postinc1,c
  5260  002A04  0E01               	movlw	1
  5261  002A06  6EE6               	movwf	postinc1,c
  5262  002A08  EC56  F02F         	call	_WaitMs	;wreg free
  5263                           
  5264                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5265  002A0C  0E05               	movlw	5
  5266  002A0E  0100               	movlb	0	; () banked
  5267  002A10  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5271  002A12  51B8               	movf	(_V+88)& (0+255),w,b	;volatile
  5272  002A14  0BF0               	andlw	-16
  5273  002A16  0904               	iorlw	4
  5274  002A18  D6AB               	goto	L16
  5275  002A1A                     l9057:
  5276                           
  5277                           ;gemsecs.c: 164:   WaitMs(50);
  5278  002A1A  0E32               	movlw	50
  5279  002A1C  6EE6               	movwf	postinc1,c
  5280  002A1E  0E00               	movlw	0
  5281  002A20  6EE6               	movwf	postinc1,c
  5282  002A22  EC56  F02F         	call	_WaitMs	;wreg free
  5283                           
  5284                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5285  002A26  0101               	movlb	1	; () banked
  5286  002A28  511D               	movf	(_H10+22)& (0+255),w,b
  5287  002A2A  0B7F               	andlw	127
  5288  002A2C  0100               	movlb	0	; () banked
  5289  002A2E  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5293  002A30  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5297  002A34  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5298  002A38  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5299  002A3C  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5300  002A40  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5304  002A44  0101               	movlb	1	; () banked
  5305  002A46  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5306  002A48  D003               	bra	u5895
  5307  002A4A  0100               	movlb	0	; () banked
  5308  002A4C  81B7               	bsf	(_V+87)& (0+255),0,b	;volatile
  5309  002A4E  D002               	bra	u5897
  5310  002A50                     u5895:
  5311  002A50  0100               	movlb	0	; () banked
  5312  002A52  91B7               	bcf	(_V+87)& (0+255),0,b	;volatile
  5313  002A54                     u5897:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  5317  002A54  0101               	movlb	1	; () banked
  5318  002A56  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5319  002A58  D003               	bra	u5905
  5320  002A5A  0100               	movlb	0	; () banked
  5321  002A5C  83B7               	bsf	(_V+87)& (0+255),1,b	;volatile
  5322  002A5E  D002               	bra	u5907
  5323  002A60                     u5905:
  5324  002A60  0100               	movlb	0	; () banked
  5325  002A62  93B7               	bcf	(_V+87)& (0+255),1,b	;volatile
  5326  002A64                     u5907:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  5330  002A64  0101               	movlb	1	; () banked
  5331  002A66  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5332  002A68  D003               	bra	u5915
  5333  002A6A  0100               	movlb	0	; () banked
  5334  002A6C  85B7               	bsf	(_V+87)& (0+255),2,b	;volatile
  5335  002A6E  D002               	bra	u5917
  5336  002A70                     u5915:
  5337  002A70  0100               	movlb	0	; () banked
  5338  002A72  95B7               	bcf	(_V+87)& (0+255),2,b	;volatile
  5339  002A74                     u5917:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;gemsecs.c: 172:   V.failed_receive = 0;
  5343  002A74  0EF0               	movlw	-16
  5344  002A76  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;gemsecs.c: 173:   V.g_state = secs_gem_state(V.stream, V.function);
  5348  002A78  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5349  002A7A  6EE6               	movwf	postinc1,c
  5350  002A7C  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5351  002A7E  6EE6               	movwf	postinc1,c
  5352  002A80  EC3A  F028         	call	_secs_gem_state	;wreg free
  5353  002A84  5039               	movf	btemp,w,c
  5354  002A86  0100               	movlb	0	; () banked
  5355  002A88  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;gemsecs.c: 174:   *m_link = LINK_STATE_DONE;
  5359                           ;stkvar	_m_link @ sp[(-1)+-1]
  5360  002A8A  0EFE               	movlw	-2
  5361  002A8C  50E3               	movf	plusw1,w,c
  5362  002A8E  6ED9               	movwf	fsr2l,c
  5363  002A90  6ADA               	clrf	fsr2h,c
  5364  002A92  0E04               	movlw	4
  5365  002A94  D01B               	goto	L17
  5366  002A96                     l9077:
  5367                           
  5368                           ;gemsecs.c: 177:   *m_link = LINK_STATE_ERROR;
  5369                           ;stkvar	_m_link @ sp[(-1)+-1]
  5370  002A96  0EFE               	movlw	-2
  5371  002A98  50E3               	movf	plusw1,w,c
  5372  002A9A  6ED9               	movwf	fsr2l,c
  5373  002A9C  6ADA               	clrf	fsr2h,c
  5374  002A9E  0E06               	movlw	6
  5375  002AA0  6EDF               	movwf	indf2,c
  5376                           
  5377                           ;gemsecs.c: 178:   while ((uart1RxCount)) {
  5378  002AA2  D002               	goto	l9081
  5379  002AA4                     l9079:
  5380                           
  5381                           ;gemsecs.c: 179:    UART1_Read();
  5382  002AA4  EC65  F02E         	call	_UART1_Read	;wreg free
  5383  002AA8                     l9081:
  5384                           
  5385                           ;gemsecs.c: 178:   while ((uart1RxCount)) {
  5386  002AA8  5033               	movf	_uart1RxCount,w,c	;volatile
  5387  002AAA  B4D8               	btfsc	status,2,c
  5388  002AAC  D003               	goto	l9085
  5389  002AAE  D7FA               	goto	l9079
  5390  002AB0                     l9083:
  5391                           
  5392                           ;gemsecs.c: 182:    UART2_Read();
  5393  002AB0  EC46  F02E         	call	_UART2_Read	;wreg free
  5394  002AB4                     l9085:
  5395                           
  5396                           ;gemsecs.c: 181:   while ((uart2RxCount)) {
  5397  002AB4  502D               	movf	_uart2RxCount,w,c	;volatile
  5398  002AB6  B4D8               	btfsc	status,2,c
  5399  002AB8  D02C               	goto	l9095
  5400  002ABA  D7FA               	goto	l9083
  5401  002ABC                     l9087:
  5402                           
  5403                           ;gemsecs.c: 188:   V.failed_receive = 0;
  5404  002ABC  0EF0               	movlw	-16
  5405  002ABE  0100               	movlb	0	; () banked
  5406  002AC0  17B8               	andwf	(_V+88)& (0+255),f,b	;volatile
  5407  002AC2                     l9089:
  5408                           
  5409                           ;gemsecs.c: 190:   *m_link = LINK_STATE_IDLE;
  5410                           ;stkvar	_m_link @ sp[(-1)+-1]
  5411  002AC2  0EFE               	movlw	-2
  5412  002AC4  50E3               	movf	plusw1,w,c
  5413  002AC6  6ED9               	movwf	fsr2l,c
  5414  002AC8  6ADA               	clrf	fsr2h,c
  5415  002ACA  0E00               	movlw	0
  5416  002ACC                     L17:
  5417  002ACC  6EDF               	movwf	indf2,c
  5418                           
  5419                           ;gemsecs.c: 192:   break;
  5420  002ACE  D021               	goto	l9095
  5421  002AD0                     l9093:
  5422                           
  5423                           ;stkvar	_m_link @ sp[(-1)+-1]
  5424  002AD0  0EFE               	movlw	-2
  5425  002AD2  50E3               	movf	plusw1,w,c
  5426  002AD4  6ED9               	movwf	fsr2l,c
  5427  002AD6  6ADA               	clrf	fsr2h,c
  5428  002AD8  50DF               	movf	indf2,w,c
  5429  002ADA  6E43               	movwf	btemp+10,c
  5430  002ADC  6A44               	clrf	btemp+11,c
  5431                           
  5432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5433                           ; Switch size 1, requested type "simple"
  5434                           ; Number of cases is 1, Range of values is 0 to 0
  5435                           ; switch strategies available:
  5436                           ; Name         Instructions Cycles
  5437                           ; simple_byte            4     3 (average)
  5438                           ;	Chosen strategy is simple_byte
  5439  002ADE  5044               	movf	btemp+11,w,c
  5440  002AE0  0A00               	xorlw	0	; case 0
  5441  002AE2  A4D8               	btfss	status,2,c
  5442  002AE4  D7EE               	goto	l9089
  5443                           
  5444                           ; Switch size 1, requested type "simple"
  5445                           ; Number of cases is 7, Range of values is 0 to 6
  5446                           ; switch strategies available:
  5447                           ; Name         Instructions Cycles
  5448                           ; simple_byte           22    12 (average)
  5449                           ;	Chosen strategy is simple_byte
  5450  002AE6  5043               	movf	btemp+10,w,c
  5451  002AE8  0A00               	xorlw	0	; case 0
  5452  002AEA  B4D8               	btfsc	status,2,c
  5453  002AEC  D5AA               	goto	l8909
  5454  002AEE  0A01               	xorlw	1	; case 1
  5455  002AF0  B4D8               	btfsc	status,2,c
  5456  002AF2  D5F9               	goto	l8939
  5457  002AF4  0A03               	xorlw	3	; case 2
  5458  002AF6  B4D8               	btfsc	status,2,c
  5459  002AF8  D62E               	goto	l8955
  5460  002AFA  0A01               	xorlw	1	; case 3
  5461  002AFC  B4D8               	btfsc	status,2,c
  5462  002AFE  D78D               	goto	l9057
  5463  002B00  0A07               	xorlw	7	; case 4
  5464  002B02  B4D8               	btfsc	status,2,c
  5465  002B04  D7DB               	goto	l9087
  5466  002B06  0A01               	xorlw	1	; case 5
  5467  002B08  B4D8               	btfsc	status,2,c
  5468  002B0A  D7C5               	goto	l9077
  5469  002B0C  0A03               	xorlw	3	; case 6
  5470  002B0E  A4D8               	btfss	status,2,c
  5471  002B10  D7D8               	goto	l9089
  5472  002B12                     l9095:
  5473                           
  5474                           ;gemsecs.c: 195:  return *m_link;
  5475                           ;stkvar	_m_link @ sp[(-1)+-1]
  5476  002B12  0EFE               	movlw	-2
  5477  002B14  50E3               	movf	plusw1,w,c
  5478  002B16  6ED9               	movwf	fsr2l,c
  5479  002B18  6ADA               	clrf	fsr2h,c
  5480  002B1A  50DF               	movf	indf2,w,c
  5481  002B1C  6E39               	movwf	btemp,c
  5482                           
  5483                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5484  002B1E  52E5               	movf	postdec1,f,c
  5485  002B20  52E5               	movf	postdec1,f,c
  5486  002B22  0012               	return		;funcret
  5487  002B24                     __end_of_m_protocol:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function _secs_send *****************
  5491 ;; Defined at:
  5492 ;;		line 421 in file "gemsecs.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  byte_block      2  [STACK] PTR unsigned char 
  5495 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5496 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5497 ;;  length          1  [STACK] unsigned char 
  5498 ;;  fake            1  [STACK] _Bool 
  5499 ;;  s_uart          1  [STACK] unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  k               2  [STACK] PTR unsigned char 
  5502 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5503 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5504 ;;  checksum        2  [STACK] unsigned short 
  5505 ;;  i               1  [STACK] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1  [STACK] _Bool 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    4
  5522 ;; This function calls:
  5523 ;;		_UART1_Write
  5524 ;;		_UART1_is_tx_ready
  5525 ;;		_UART1_put_buffer
  5526 ;;		_UART2_Write
  5527 ;;		_UART2_is_tx_ready
  5528 ;;		_UART2_put_buffer
  5529 ;;		_block_checksum
  5530 ;; This function is called by:
  5531 ;;		_m_protocol
  5532 ;;		_r_protocol
  5533 ;;		_t_protocol
  5534 ;; This function uses a reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text6
  5538  004264                     __ptext6:
  5539                           	opt callstack 0
  5540  004264                     _secs_send:
  5541                           	opt callstack 0
  5542                           
  5543                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5544  004264  0E05               	movlw	5
  5545  004266  26E1               	addwf	fsr1l,f,c
  5546  004268  0E00               	movlw	0
  5547  00426A  22E2               	addwfc	fsr1h,f,c
  5548                           
  5549                           ;gemsecs.c: 421: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 422: {;gemsecs.c: 423:  uint8_t i, *k;;gemsecs.c: 424:  uint16_t ch
      +                          ecksum;;gemsecs.c: 426:  k = (uint8_t *) byte_block;
  5550                           ;stkvar	_byte_block @ sp[(-5)+-2]
  5551                           
  5552                           ;incstack = 0
  5553  00426C  0EF9               	movlw	-7
  5554  00426E  006F FF8C  F043    	movff	plusw1,btemp+10
  5555  004274  0EFA               	movlw	-6
  5556  004276  006F FF8C  F044    	movff	plusw1,btemp+11
  5557                           
  5558                           ;stkvar	_k @ sp[(-5)+0]
  5559  00427C  0EFC               	movlw	-4
  5560  00427E  0060  F113  FFE3   	movff	btemp+11,plusw1
  5561  004284  0EFB               	movlw	-5
  5562  004286  0060  F10F  FFE3   	movff	btemp+10,plusw1
  5563                           
  5564                           ;gemsecs.c: 428:  ++V.ticks;
  5565  00428C  0E01               	movlw	1
  5566  00428E  0100               	movlb	0	; () banked
  5567  004290  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  5568  004292  0E00               	movlw	0
  5569  004294  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5570  004296  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  5571  004298  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;gemsecs.c: 429:  V.error = LINK_ERROR_NONE;
  5575  00429A  6BB0               	clrf	(_V+80)& (0+255),b	;volatile
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;gemsecs.c: 430:  if ((length - 3) != k[length - 1]) {
  5579                           ;stkvar	_length @ sp[(-5)+-3]
  5580  00429C  0EF8               	movlw	-8
  5581  00429E  50E3               	movf	plusw1,w,c
  5582  0042A0  6E43               	movwf	btemp+10,c
  5583  0042A2  6A44               	clrf	btemp+11,c
  5584                           
  5585                           ;stkvar	_k @ sp[(-5)+0]
  5586  0042A4  0EFB               	movlw	-5
  5587  0042A6  50E3               	movf	plusw1,w,c
  5588  0042A8  2643               	addwf	btemp+10,f,c
  5589  0042AA  0EFC               	movlw	-4
  5590  0042AC  50E3               	movf	plusw1,w,c
  5591  0042AE  2244               	addwfc	btemp+11,f,c
  5592  0042B0  0EFF               	movlw	255
  5593  0042B2  2443               	addwf	btemp+10,w,c
  5594  0042B4  6ED9               	movwf	fsr2l,c
  5595  0042B6  0EFF               	movlw	255
  5596  0042B8  2044               	addwfc	btemp+11,w,c
  5597  0042BA  6EDA               	movwf	fsr2h,c
  5598  0042BC  50DF               	movf	indf2,w,c
  5599  0042BE  6E43               	movwf	btemp+10,c
  5600  0042C0  6A44               	clrf	btemp+11,c
  5601  0042C2  0EFD               	movlw	253
  5602  0042C4  6E41               	movwf	btemp+8,c
  5603  0042C6  0EFF               	movlw	255
  5604  0042C8  6E42               	movwf	btemp+9,c
  5605                           
  5606                           ;stkvar	_length @ sp[(-5)+-3]
  5607  0042CA  0EF8               	movlw	-8
  5608  0042CC  50E3               	movf	plusw1,w,c
  5609  0042CE  6E3F               	movwf	btemp+6,c
  5610  0042D0  6A40               	clrf	btemp+7,c
  5611  0042D2  5041               	movf	btemp+8,w,c
  5612  0042D4  263F               	addwf	btemp+6,f,c
  5613  0042D6  5042               	movf	btemp+9,w,c
  5614  0042D8  2240               	addwfc	btemp+7,f,c
  5615  0042DA  5043               	movf	btemp+10,w,c
  5616  0042DC  183F               	xorwf	btemp+6,w,c
  5617  0042DE  E104               	bnz	u5220
  5618  0042E0  5044               	movf	btemp+11,w,c
  5619  0042E2  1840               	xorwf	btemp+7,w,c
  5620  0042E4  B4D8               	btfsc	status,2,c
  5621  0042E6  D003               	goto	l8487
  5622  0042E8                     u5220:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;gemsecs.c: 431:   V.error = LINK_ERROR_SEND;
  5626  0042E8  0E08               	movlw	8
  5627  0042EA  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5628  0042EC  D0EA               	goto	l1709
  5629  0042EE                     l8487:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;gemsecs.c: 440:  checksum = block_checksum(&k[2], length - 3);
  5633  0042EE  0EFD               	movlw	253
  5634  0042F0  6E43               	movwf	btemp+10,c
  5635  0042F2  0EFF               	movlw	255
  5636  0042F4  6E44               	movwf	btemp+11,c
  5637                           
  5638                           ;stkvar	_length @ sp[(-5)+-3]
  5639  0042F6  0EF8               	movlw	-8
  5640  0042F8  50E3               	movf	plusw1,w,c
  5641  0042FA  6E41               	movwf	btemp+8,c
  5642  0042FC  6A42               	clrf	btemp+9,c
  5643  0042FE  5043               	movf	btemp+10,w,c
  5644  004300  2641               	addwf	btemp+8,f,c
  5645  004302  5044               	movf	btemp+11,w,c
  5646  004304  2242               	addwfc	btemp+9,f,c
  5647  004306  0060  F107  FFE6   	movff	btemp+8,postinc1
  5648  00430C  0060  F10B  FFE6   	movff	btemp+9,postinc1
  5649                           
  5650                           ;stkvar	_k @ sp[(-7)+0]
  5651  004312  0EF9               	movlw	-7
  5652  004314  50E3               	movf	plusw1,w,c
  5653  004316  0F02               	addlw	2
  5654  004318  6E43               	movwf	btemp+10,c
  5655  00431A  0EFA               	movlw	-6
  5656  00431C  006F FF8C  F044    	movff	plusw1,btemp+11
  5657  004322  0E00               	movlw	0
  5658  004324  2244               	addwfc	btemp+11,f,c
  5659  004326  0060  F10F  FFE6   	movff	btemp+10,postinc1
  5660  00432C  0060  F113  FFE6   	movff	btemp+11,postinc1
  5661  004332  EC69  F027         	call	_block_checksum	;wreg free
  5662                           
  5663                           ;stkvar	_checksum @ sp[(-5)+2]
  5664  004336  0EFD               	movlw	-3
  5665  004338  0060  F0E7  FFE3   	movff	btemp,plusw1
  5666  00433E  0EFE               	movlw	-2
  5667  004340  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  5668                           
  5669                           ;gemsecs.c: 441:  k[0] = checksum & 0xff;
  5670                           ;stkvar	_checksum @ sp[(-5)+2]
  5671                           ;stkvar	_k @ sp[(-5)+0]
  5672  004346  0EFB               	movlw	-5
  5673  004348  006F FF8F FFD9     	movff	plusw1,fsr2l
  5674  00434E  0EFC               	movlw	-4
  5675  004350  006F FF8F FFDA     	movff	plusw1,fsr2h
  5676  004356  0EFD               	movlw	-3
  5677  004358  006F FF8F FFDF     	movff	plusw1,indf2
  5678                           
  5679                           ;gemsecs.c: 442:  k[1] = (checksum >> 8)&0xff;
  5680                           ;stkvar	_checksum @ sp[(-5)+2]
  5681  00435E  0EFE               	movlw	254
  5682  004360  24E1               	addwf	fsr1l,w,c
  5683  004362  6ED9               	movwf	fsr2l,c
  5684  004364  0EFF               	movlw	255
  5685  004366  20E2               	addwfc	fsr1h,w,c
  5686  004368  6EDA               	movwf	fsr2h,c
  5687                           
  5688                           ;stkvar	_k @ sp[(-5)+0]
  5689  00436A  0EFB               	movlw	-5
  5690  00436C  006F FF8C  F043    	movff	plusw1,btemp+10
  5691  004372  0EFC               	movlw	-4
  5692  004374  006F FF8C  F044    	movff	plusw1,btemp+11
  5693  00437A  0E01               	movlw	1
  5694  00437C  2443               	addwf	btemp+10,w,c
  5695  00437E  6EE9               	movwf	fsr0l,c
  5696  004380  0E00               	movlw	0
  5697  004382  2044               	addwfc	btemp+11,w,c
  5698  004384  6EEA               	movwf	fsr0h,c
  5699  004386  006F FF7F FFEF     	movff	indf2,indf0
  5700                           
  5701                           ;gemsecs.c: 443:  V.t_checksum = checksum;
  5702                           ;stkvar	_checksum @ sp[(-5)+2]
  5703  00438C  0EFD               	movlw	-3
  5704  00438E  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  5705  004394  0EFE               	movlw	-2
  5706  004396  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  5707                           
  5708                           ;gemsecs.c: 445:  switch (s_uart) {
  5709  00439C  D082               	goto	l8533
  5710  00439E                     l8495:
  5711  00439E  EC39  F032         	call	_UART2_is_tx_ready	;wreg free
  5712  0043A2  0E3F               	movlw	63
  5713  0043A4  6439               	cpfsgt	btemp,c
  5714  0043A6  D7FB               	goto	l8495
  5715                           
  5716                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  5717                           ;stkvar	_length @ sp[(-5)+-3]
  5718                           ;stkvar	_i @ sp[(-5)+4]
  5719  0043A8  0EF8               	movlw	-8
  5720  0043AA  006F FF8C  F039    	movff	plusw1,btemp
  5721  0043B0  0EFF               	movlw	-1
  5722  0043B2  0060  F0E7  FFE3   	movff	btemp,plusw1
  5723  0043B8                     l8499:
  5724                           
  5725                           ;stkvar	_i @ sp[(-5)+4]
  5726  0043B8  0EFF               	movlw	-1
  5727  0043BA  50E3               	movf	plusw1,w,c
  5728  0043BC  B4D8               	btfsc	status,2,c
  5729  0043BE  D081               	goto	l1709
  5730                           
  5731                           ;gemsecs.c: 449:    if (fake) {
  5732                           ;stkvar	_fake @ sp[(-5)+-4]
  5733  0043C0  0EF7               	movlw	-9
  5734  0043C2  50E3               	movf	plusw1,w,c
  5735  0043C4  B4D8               	btfsc	status,2,c
  5736  0043C6  D015               	goto	l8507
  5737                           
  5738                           ;gemsecs.c: 450:     UART2_put_buffer(k[i - 1]);
  5739                           ;stkvar	_i @ sp[(-5)+4]
  5740  0043C8  0EFF               	movlw	-1
  5741  0043CA  50E3               	movf	plusw1,w,c
  5742  0043CC  6E43               	movwf	btemp+10,c
  5743  0043CE  6A44               	clrf	btemp+11,c
  5744                           
  5745                           ;stkvar	_k @ sp[(-5)+0]
  5746  0043D0  0EFB               	movlw	-5
  5747  0043D2  50E3               	movf	plusw1,w,c
  5748  0043D4  2643               	addwf	btemp+10,f,c
  5749  0043D6  0EFC               	movlw	-4
  5750  0043D8  50E3               	movf	plusw1,w,c
  5751  0043DA  2244               	addwfc	btemp+11,f,c
  5752  0043DC  0EFF               	movlw	255
  5753  0043DE  2443               	addwf	btemp+10,w,c
  5754  0043E0  6ED9               	movwf	fsr2l,c
  5755  0043E2  0EFF               	movlw	255
  5756  0043E4  2044               	addwfc	btemp+11,w,c
  5757  0043E6  6EDA               	movwf	fsr2h,c
  5758  0043E8  50DF               	movf	indf2,w,c
  5759  0043EA  6EE6               	movwf	postinc1,c
  5760  0043EC  EC2C  F02F         	call	_UART2_put_buffer	;wreg free
  5761                           
  5762                           ;gemsecs.c: 451:    } else {
  5763  0043F0  D014               	goto	l8509
  5764  0043F2                     l8507:
  5765                           
  5766                           ;gemsecs.c: 453:     UART2_Write(k[i - 1]);
  5767                           ;stkvar	_i @ sp[(-5)+4]
  5768  0043F2  0EFF               	movlw	-1
  5769  0043F4  50E3               	movf	plusw1,w,c
  5770  0043F6  6E43               	movwf	btemp+10,c
  5771  0043F8  6A44               	clrf	btemp+11,c
  5772                           
  5773                           ;stkvar	_k @ sp[(-5)+0]
  5774  0043FA  0EFB               	movlw	-5
  5775  0043FC  50E3               	movf	plusw1,w,c
  5776  0043FE  2643               	addwf	btemp+10,f,c
  5777  004400  0EFC               	movlw	-4
  5778  004402  50E3               	movf	plusw1,w,c
  5779  004404  2244               	addwfc	btemp+11,f,c
  5780  004406  0EFF               	movlw	255
  5781  004408  2443               	addwf	btemp+10,w,c
  5782  00440A  6ED9               	movwf	fsr2l,c
  5783  00440C  0EFF               	movlw	255
  5784  00440E  2044               	addwfc	btemp+11,w,c
  5785  004410  6EDA               	movwf	fsr2h,c
  5786  004412  50DF               	movf	indf2,w,c
  5787  004414  6EE6               	movwf	postinc1,c
  5788  004416  EC08  F02E         	call	_UART2_Write	;wreg free
  5789  00441A                     l8509:
  5790                           
  5791                           ; BSR set to: 57
  5792                           ;gemsecs.c: 455:   }
  5793                           ;stkvar	_i @ sp[(-5)+4]
  5794  00441A  0EFF               	movlw	-1
  5795  00441C  06E3               	decf	plusw1,f,c
  5796  00441E  D7CC               	goto	l8499
  5797  004420                     l8513:
  5798  004420  EC3D  F032         	call	_UART1_is_tx_ready	;wreg free
  5799  004424  0E3F               	movlw	63
  5800  004426  6439               	cpfsgt	btemp,c
  5801  004428  D7FB               	goto	l8513
  5802                           
  5803                           ;gemsecs.c: 460:   for (i = length; i > 0; i--) {
  5804                           ;stkvar	_length @ sp[(-5)+-3]
  5805                           ;stkvar	_i @ sp[(-5)+4]
  5806  00442A  0EF8               	movlw	-8
  5807  00442C  006F FF8C  F039    	movff	plusw1,btemp
  5808  004432  0EFF               	movlw	-1
  5809  004434  0060  F0E7  FFE3   	movff	btemp,plusw1
  5810  00443A                     l8517:
  5811                           
  5812                           ;stkvar	_i @ sp[(-5)+4]
  5813  00443A  0EFF               	movlw	-1
  5814  00443C  50E3               	movf	plusw1,w,c
  5815  00443E  B4D8               	btfsc	status,2,c
  5816  004440  D040               	goto	l1709
  5817                           
  5818                           ;gemsecs.c: 461:    if (fake) {
  5819                           ;stkvar	_fake @ sp[(-5)+-4]
  5820  004442  0EF7               	movlw	-9
  5821  004444  50E3               	movf	plusw1,w,c
  5822  004446  B4D8               	btfsc	status,2,c
  5823  004448  D015               	goto	l8525
  5824                           
  5825                           ;gemsecs.c: 462:     UART1_put_buffer(k[i - 1]);
  5826                           ;stkvar	_i @ sp[(-5)+4]
  5827  00444A  0EFF               	movlw	-1
  5828  00444C  50E3               	movf	plusw1,w,c
  5829  00444E  6E43               	movwf	btemp+10,c
  5830  004450  6A44               	clrf	btemp+11,c
  5831                           
  5832                           ;stkvar	_k @ sp[(-5)+0]
  5833  004452  0EFB               	movlw	-5
  5834  004454  50E3               	movf	plusw1,w,c
  5835  004456  2643               	addwf	btemp+10,f,c
  5836  004458  0EFC               	movlw	-4
  5837  00445A  50E3               	movf	plusw1,w,c
  5838  00445C  2244               	addwfc	btemp+11,f,c
  5839  00445E  0EFF               	movlw	255
  5840  004460  2443               	addwf	btemp+10,w,c
  5841  004462  6ED9               	movwf	fsr2l,c
  5842  004464  0EFF               	movlw	255
  5843  004466  2044               	addwfc	btemp+11,w,c
  5844  004468  6EDA               	movwf	fsr2h,c
  5845  00446A  50DF               	movf	indf2,w,c
  5846  00446C  6EE6               	movwf	postinc1,c
  5847  00446E  EC41  F02F         	call	_UART1_put_buffer	;wreg free
  5848                           
  5849                           ;gemsecs.c: 463:    } else {
  5850  004472  D014               	goto	l8527
  5851  004474                     l8525:
  5852                           
  5853                           ;gemsecs.c: 465:     UART1_Write(k[i - 1]);
  5854                           ;stkvar	_i @ sp[(-5)+4]
  5855  004474  0EFF               	movlw	-1
  5856  004476  50E3               	movf	plusw1,w,c
  5857  004478  6E43               	movwf	btemp+10,c
  5858  00447A  6A44               	clrf	btemp+11,c
  5859                           
  5860                           ;stkvar	_k @ sp[(-5)+0]
  5861  00447C  0EFB               	movlw	-5
  5862  00447E  50E3               	movf	plusw1,w,c
  5863  004480  2643               	addwf	btemp+10,f,c
  5864  004482  0EFC               	movlw	-4
  5865  004484  50E3               	movf	plusw1,w,c
  5866  004486  2244               	addwfc	btemp+11,f,c
  5867  004488  0EFF               	movlw	255
  5868  00448A  2443               	addwf	btemp+10,w,c
  5869  00448C  6ED9               	movwf	fsr2l,c
  5870  00448E  0EFF               	movlw	255
  5871  004490  2044               	addwfc	btemp+11,w,c
  5872  004492  6EDA               	movwf	fsr2h,c
  5873  004494  50DF               	movf	indf2,w,c
  5874  004496  6EE6               	movwf	postinc1,c
  5875  004498  EC27  F02E         	call	_UART1_Write	;wreg free
  5876  00449C                     l8527:
  5877                           
  5878                           ; BSR set to: 57
  5879                           ;gemsecs.c: 467:   }
  5880                           ;stkvar	_i @ sp[(-5)+4]
  5881  00449C  0EFF               	movlw	-1
  5882  00449E  06E3               	decf	plusw1,f,c
  5883  0044A0  D7CC               	goto	l8517
  5884  0044A2                     l8533:
  5885                           
  5886                           ;stkvar	_s_uart @ sp[(-5)+-5]
  5887  0044A2  0EF6               	movlw	-10
  5888  0044A4  50E3               	movf	plusw1,w,c
  5889  0044A6  6E43               	movwf	btemp+10,c
  5890  0044A8  6A44               	clrf	btemp+11,c
  5891                           
  5892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5893                           ; Switch size 1, requested type "simple"
  5894                           ; Number of cases is 1, Range of values is 0 to 0
  5895                           ; switch strategies available:
  5896                           ; Name         Instructions Cycles
  5897                           ; simple_byte            4     3 (average)
  5898                           ;	Chosen strategy is simple_byte
  5899  0044AA  5044               	movf	btemp+11,w,c
  5900  0044AC  0A00               	xorlw	0	; case 0
  5901  0044AE  A4D8               	btfss	status,2,c
  5902  0044B0  D7B7               	goto	l8513
  5903                           
  5904                           ; Switch size 1, requested type "simple"
  5905                           ; Number of cases is 2, Range of values is 1 to 2
  5906                           ; switch strategies available:
  5907                           ; Name         Instructions Cycles
  5908                           ; simple_byte            7     4 (average)
  5909                           ;	Chosen strategy is simple_byte
  5910  0044B2  5043               	movf	btemp+10,w,c
  5911  0044B4  0A01               	xorlw	1	; case 1
  5912  0044B6  B4D8               	btfsc	status,2,c
  5913  0044B8  D7B3               	goto	l8513
  5914  0044BA  0A03               	xorlw	3	; case 2
  5915  0044BC  B4D8               	btfsc	status,2,c
  5916  0044BE  D76F               	goto	l8495
  5917  0044C0  D7AF               	goto	l8513
  5918  0044C2                     l1709:
  5919                           
  5920                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  5921  0044C2  0EF6               	movlw	246
  5922  0044C4  26E1               	addwf	fsr1l,f,c
  5923  0044C6  0EFF               	movlw	255
  5924  0044C8  22E2               	addwfc	fsr1h,f,c
  5925  0044CA  0012               	return		;funcret
  5926  0044CC                     __end_of_secs_send:
  5927                           	opt callstack 0
  5928                           
  5929 ;; *************** function _block_checksum *****************
  5930 ;; Defined at:
  5931 ;;		line 18 in file "gemsecs.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  byte_block      2  [STACK] PTR unsigned char 
  5934 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  5935 ;;		 -> H14(17), H13(16), H12(30), H10(91), 
  5936 ;;  byte_count      2  [STACK] unsigned short 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  i               2  [STACK] unsigned short 
  5939 ;;  sum             2  [STACK] unsigned short 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2  [STACK] unsigned short 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  5944 ;; Tracked objects:
  5945 ;;		On entry : 3F/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    3
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_secs_send
  5960 ;; This function uses a reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text7
  5964  004ED2                     __ptext7:
  5965                           	opt callstack 0
  5966  004ED2                     _block_checksum:
  5967                           	opt callstack 0
  5968                           
  5969                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5970  004ED2  52E6               	movf	postinc1,f,c
  5971  004ED4  52E6               	movf	postinc1,f,c
  5972  004ED6  52E6               	movf	postinc1,f,c
  5973  004ED8  52E6               	movf	postinc1,f,c
  5974                           
  5975                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  5976                           ;stkvar	_sum @ sp[(-4)+2]
  5977                           
  5978                           ;incstack = 0
  5979  004EDA  0EFE               	movlw	-2
  5980  004EDC  6AE3               	clrf	plusw1,c
  5981  004EDE  0EFF               	movlw	-1
  5982  004EE0  6AE3               	clrf	plusw1,c
  5983                           
  5984                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  5985                           ;stkvar	_i @ sp[(-4)+0]
  5986  004EE2  0EFC               	movlw	-4
  5987  004EE4  6AE3               	clrf	plusw1,c
  5988  004EE6  0EFD               	movlw	-3
  5989  004EE8  6AE3               	clrf	plusw1,c
  5990  004EEA  D039               	goto	l8411
  5991  004EEC                     l8407:
  5992                           
  5993                           ;gemsecs.c: 23:   sum += byte_block[i];
  5994                           ;stkvar	_i @ sp[(-4)+0]
  5995  004EEC  0EFC               	movlw	-4
  5996  004EEE  006F FF8C  F043    	movff	plusw1,btemp+10
  5997  004EF4  0EFD               	movlw	-3
  5998  004EF6  006F FF8C  F044    	movff	plusw1,btemp+11
  5999                           
  6000                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6001  004EFC  0EFA               	movlw	-6
  6002  004EFE  006F FF8C  F041    	movff	plusw1,btemp+8
  6003  004F04  0EFB               	movlw	-5
  6004  004F06  006F FF8C  F042    	movff	plusw1,btemp+9
  6005  004F0C  5043               	movf	btemp+10,w,c
  6006  004F0E  2441               	addwf	btemp+8,w,c
  6007  004F10  6ED9               	movwf	fsr2l,c
  6008  004F12  5044               	movf	btemp+11,w,c
  6009  004F14  2042               	addwfc	btemp+9,w,c
  6010  004F16  6EDA               	movwf	fsr2h,c
  6011  004F18  50DF               	movf	indf2,w,c
  6012  004F1A  6E44               	movwf	btemp+11,c
  6013                           
  6014                           ;stkvar	_sum @ sp[(-4)+2]
  6015  004F1C  0EFE               	movlw	-2
  6016  004F1E  50E3               	movf	plusw1,w,c
  6017  004F20  2444               	addwf	btemp+11,w,c
  6018  004F22  6E39               	movwf	btemp,c
  6019  004F24  0EFE               	movlw	-2
  6020  004F26  0060  F0E7  FFE3   	movff	btemp,plusw1
  6021  004F2C  6A39               	clrf	btemp,c
  6022  004F2E  0EFF               	movlw	-1
  6023  004F30  50E3               	movf	plusw1,w,c
  6024  004F32  2239               	addwfc	btemp,f,c
  6025  004F34  0EFF               	movlw	-1
  6026  004F36  0060  F0E7  FFE3   	movff	btemp,plusw1
  6027                           
  6028                           ;gemsecs.c: 24:  }
  6029                           ;stkvar	_i @ sp[(-4)+0]
  6030  004F3C  0EFC               	movlw	-4
  6031  004F3E  50E3               	movf	plusw1,w,c
  6032  004F40  0F01               	addlw	1
  6033  004F42  6E39               	movwf	btemp,c
  6034  004F44  0EFC               	movlw	-4
  6035  004F46  0060  F0E7  FFE3   	movff	btemp,plusw1
  6036  004F4C  6A39               	clrf	btemp,c
  6037  004F4E  0EFD               	movlw	-3
  6038  004F50  50E3               	movf	plusw1,w,c
  6039  004F52  2039               	addwfc	btemp,w,c
  6040  004F54  6E39               	movwf	btemp,c
  6041  004F56  0EFD               	movlw	-3
  6042  004F58  0060  F0E7  FFE3   	movff	btemp,plusw1
  6043  004F5E                     l8411:
  6044                           
  6045                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6046  004F5E  0EF8               	movlw	-8
  6047  004F60  006F FF8C  F043    	movff	plusw1,btemp+10
  6048  004F66  0EF9               	movlw	-7
  6049  004F68  006F FF8C  F044    	movff	plusw1,btemp+11
  6050                           
  6051                           ;stkvar	_i @ sp[(-4)+0]
  6052  004F6E  0EFC               	movlw	-4
  6053  004F70  006F FF8C  F041    	movff	plusw1,btemp+8
  6054  004F76  0EFD               	movlw	-3
  6055  004F78  006F FF8C  F042    	movff	plusw1,btemp+9
  6056  004F7E  5043               	movf	btemp+10,w,c
  6057  004F80  5C41               	subwf	btemp+8,w,c
  6058  004F82  5044               	movf	btemp+11,w,c
  6059  004F84  5842               	subwfb	btemp+9,w,c
  6060  004F86  A0D8               	btfss	status,0,c
  6061  004F88  D7B1               	goto	l8407
  6062                           
  6063                           ;gemsecs.c: 25:  return sum;
  6064                           ;stkvar	_sum @ sp[(-4)+2]
  6065  004F8A  0EFE               	movlw	-2
  6066  004F8C  006F FF8C  F039    	movff	plusw1,btemp
  6067  004F92  0EFF               	movlw	-1
  6068  004F94  006F FF8C  F03A    	movff	plusw1,btemp+1
  6069                           
  6070                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6071  004F9A  0EF8               	movlw	248
  6072  004F9C  26E1               	addwf	fsr1l,f,c
  6073  004F9E  0EFF               	movlw	255
  6074  004FA0  22E2               	addwfc	fsr1h,f,c
  6075  004FA2  0012               	return		;funcret
  6076  004FA4                     __end_of_block_checksum:
  6077                           	opt callstack 0
  6078                           
  6079 ;; *************** function _UART2_put_buffer *****************
  6080 ;; Defined at:
  6081 ;;		line 257 in file "mcc_generated_files/uart2.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  bufData         1  [STACK] unsigned char 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1  [STACK] void 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/3B
  6092 ;;		On exit  : 3F/39
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    3
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_main
  6106 ;;		_secs_send
  6107 ;; This function uses a reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text8
  6111  005E58                     __ptext8:
  6112                           	opt callstack 0
  6113  005E58                     _UART2_put_buffer:
  6114                           	opt callstack 25
  6115                           
  6116                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  6117                           
  6118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6119                           ;incstack = 0
  6120  005E58  0139               	movlb	57	; () banked
  6121  005E5A  9596               	bcf	150,2,b	;volatile
  6122                           
  6123                           ; BSR set to: 57
  6124                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  6125                           ;stkvar	_bufData @ sp[(0)+-1]
  6126  005E5C  0E00               	movlw	low _uart2RxBuffer
  6127  005E5E  242F               	addwf	_uart2RxHead,w,c	;volatile
  6128  005E60  6ED9               	movwf	fsr2l,c
  6129  005E62  6ADA               	clrf	fsr2h,c
  6130  005E64  0E02               	movlw	high _uart2RxBuffer
  6131  005E66  22DA               	addwfc	fsr2h,f,c
  6132  005E68  0EFF               	movlw	-1
  6133  005E6A  006F FF8F FFDF     	movff	plusw1,indf2
  6134                           
  6135                           ; BSR set to: 57
  6136  005E70  2A2F               	incf	_uart2RxHead,f,c	;volatile
  6137                           
  6138                           ; BSR set to: 57
  6139                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  6140  005E72  0E3F               	movlw	63
  6141  005E74  642F               	cpfsgt	_uart2RxHead,c
  6142  005E76  D001               	goto	l5837
  6143                           
  6144                           ; BSR set to: 57
  6145                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  6146  005E78  6A2F               	clrf	_uart2RxHead,c	;volatile
  6147  005E7A                     l5837:
  6148                           
  6149                           ; BSR set to: 57
  6150                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  6151  005E7A  2A2D               	incf	_uart2RxCount,f,c	;volatile
  6152                           
  6153                           ; BSR set to: 57
  6154                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  6155  005E7C  8596               	bsf	150,2,b	;volatile
  6156                           
  6157                           ; BSR set to: 57
  6158                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6159  005E7E  52E5               	movf	postdec1,f,c
  6160  005E80  0012               	return		;funcret
  6161  005E82                     __end_of_UART2_put_buffer:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _UART2_is_tx_ready *****************
  6165 ;; Defined at:
  6166 ;;		line 142 in file "mcc_generated_files/uart2.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1  [STACK] unsigned char 
  6173 ;; Registers used:
  6174 ;;		btemp
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    3
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_secs_send
  6191 ;; This function uses a reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text9
  6195  006472                     __ptext9:
  6196                           	opt callstack 0
  6197  006472                     _UART2_is_tx_ready:
  6198                           	opt callstack 25
  6199                           
  6200                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  6201                           
  6202                           ; BSR set to: 57
  6203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6204                           ;incstack = 0
  6205  006472  0060  F0C0  F039   	movff	_uart2TxBufferRemaining,btemp	;volatile
  6206                           
  6207                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6208  006478  0012               	return		;funcret
  6209  00647A                     __end_of_UART2_is_tx_ready:
  6210                           	opt callstack 0
  6211                           
  6212 ;; *************** function _UART2_Write *****************
  6213 ;; Defined at:
  6214 ;;		line 172 in file "mcc_generated_files/uart2.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  txData          1  [STACK] unsigned char 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1  [STACK] void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 3F/39
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    3
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_secs_send
  6239 ;; This function uses a reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text10
  6243  005C10                     __ptext10:
  6244                           	opt callstack 0
  6245  005C10                     _UART2_Write:
  6246                           	opt callstack 25
  6247                           
  6248                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6249                           
  6250                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  6251                           
  6252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6253                           ;incstack = 0
  6254  005C10  5030               	movf	_uart2TxBufferRemaining,w,c	;volatile
  6255  005C12  B4D8               	btfsc	status,2,c
  6256  005C14  D7FD               	goto	_UART2_Write
  6257                           
  6258                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  6259  005C16  0139               	movlb	57	; () banked
  6260  005C18  B796               	btfsc	150,3,b	;volatile
  6261  005C1A  D005               	goto	l699
  6262                           
  6263                           ; BSR set to: 57
  6264                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  6265                           ;stkvar	_txData @ sp[(0)+-1]
  6266  005C1C  0EFF               	movlw	-1
  6267  005C1E  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  6268                           
  6269                           ;mcc_generated_files/uart2.c: 181:     }
  6270  005C24  D011               	goto	l5825
  6271  005C26                     l699:
  6272                           
  6273                           ; BSR set to: 57
  6274                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  6275  005C26  9796               	bcf	150,3,b	;volatile
  6276                           
  6277                           ; BSR set to: 57
  6278                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  6279                           ;stkvar	_txData @ sp[(0)+-1]
  6280  005C28  0E00               	movlw	low _uart2TxBuffer
  6281  005C2A  2432               	addwf	_uart2TxHead,w,c	;volatile
  6282  005C2C  6ED9               	movwf	fsr2l,c
  6283  005C2E  6ADA               	clrf	fsr2h,c
  6284  005C30  0E03               	movlw	high _uart2TxBuffer
  6285  005C32  22DA               	addwfc	fsr2h,f,c
  6286  005C34  0EFF               	movlw	-1
  6287  005C36  006F FF8F FFDF     	movff	plusw1,indf2
  6288                           
  6289                           ; BSR set to: 57
  6290  005C3C  2A32               	incf	_uart2TxHead,f,c	;volatile
  6291                           
  6292                           ; BSR set to: 57
  6293                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  6294  005C3E  0E3F               	movlw	63
  6295  005C40  6432               	cpfsgt	_uart2TxHead,c
  6296  005C42  D001               	goto	l5823
  6297                           
  6298                           ; BSR set to: 57
  6299                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  6300  005C44  6A32               	clrf	_uart2TxHead,c	;volatile
  6301  005C46                     l5823:
  6302                           
  6303                           ; BSR set to: 57
  6304                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  6305  005C46  0630               	decf	_uart2TxBufferRemaining,f,c	;volatile
  6306  005C48                     l5825:
  6307                           
  6308                           ; BSR set to: 57
  6309                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  6310  005C48  8796               	bsf	150,3,b	;volatile
  6311                           
  6312                           ; BSR set to: 57
  6313                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6314  005C4A  52E5               	movf	postdec1,f,c
  6315  005C4C  0012               	return		;funcret
  6316  005C4E                     __end_of_UART2_Write:
  6317                           	opt callstack 0
  6318                           
  6319 ;; *************** function _UART1_put_buffer *****************
  6320 ;; Defined at:
  6321 ;;		line 250 in file "mcc_generated_files/uart1.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  bufData         1  [STACK] unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1  [STACK] void 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 3F/39
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    3
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;;		_t_protocol
  6347 ;;		_secs_send
  6348 ;; This function uses a reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text11
  6352  005E82                     __ptext11:
  6353                           	opt callstack 0
  6354  005E82                     _UART1_put_buffer:
  6355                           	opt callstack 25
  6356                           
  6357                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  6358                           
  6359                           ; BSR set to: 57
  6360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361                           ;incstack = 0
  6362  005E82  0139               	movlb	57	; () banked
  6363  005E84  9793               	bcf	147,3,b	;volatile
  6364                           
  6365                           ; BSR set to: 57
  6366                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  6367                           ;stkvar	_bufData @ sp[(0)+-1]
  6368  005E86  0E40               	movlw	low _uart1RxBuffer
  6369  005E88  2435               	addwf	_uart1RxHead,w,c	;volatile
  6370  005E8A  6ED9               	movwf	fsr2l,c
  6371  005E8C  6ADA               	clrf	fsr2h,c
  6372  005E8E  0E02               	movlw	high _uart1RxBuffer
  6373  005E90  22DA               	addwfc	fsr2h,f,c
  6374  005E92  0EFF               	movlw	-1
  6375  005E94  006F FF8F FFDF     	movff	plusw1,indf2
  6376                           
  6377                           ; BSR set to: 57
  6378  005E9A  2A35               	incf	_uart1RxHead,f,c	;volatile
  6379                           
  6380                           ; BSR set to: 57
  6381                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  6382  005E9C  0E3F               	movlw	63
  6383  005E9E  6435               	cpfsgt	_uart1RxHead,c
  6384  005EA0  D001               	goto	l5797
  6385                           
  6386                           ; BSR set to: 57
  6387                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  6388  005EA2  6A35               	clrf	_uart1RxHead,c	;volatile
  6389  005EA4                     l5797:
  6390                           
  6391                           ; BSR set to: 57
  6392                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  6393  005EA4  2A33               	incf	_uart1RxCount,f,c	;volatile
  6394                           
  6395                           ; BSR set to: 57
  6396                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  6397  005EA6  8793               	bsf	147,3,b	;volatile
  6398                           
  6399                           ; BSR set to: 57
  6400                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6401  005EA8  52E5               	movf	postdec1,f,c
  6402  005EAA  0012               	return		;funcret
  6403  005EAC                     __end_of_UART1_put_buffer:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _UART1_is_tx_ready *****************
  6407 ;; Defined at:
  6408 ;;		line 151 in file "mcc_generated_files/uart1.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1  [STACK] unsigned char 
  6415 ;; Registers used:
  6416 ;;		btemp
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    3
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_secs_send
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text12
  6437  00647A                     __ptext12:
  6438                           	opt callstack 0
  6439  00647A                     _UART1_is_tx_ready:
  6440                           	opt callstack 25
  6441                           
  6442                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  6443                           
  6444                           ; BSR set to: 57
  6445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6446                           ;incstack = 0
  6447  00647A  0060  F0D8  F039   	movff	_uart1TxBufferRemaining,btemp	;volatile
  6448                           
  6449                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6450  006480  0012               	return		;funcret
  6451  006482                     __end_of_UART1_is_tx_ready:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _UART1_Write *****************
  6455 ;; Defined at:
  6456 ;;		line 179 in file "mcc_generated_files/uart1.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  txData          1  [STACK] unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1  [STACK] void 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 3F/39
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    3
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_r_protocol
  6481 ;;		_t_protocol
  6482 ;;		_secs_send
  6483 ;; This function uses a reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text13
  6487  005C4E                     __ptext13:
  6488                           	opt callstack 0
  6489  005C4E                     _UART1_Write:
  6490                           	opt callstack 25
  6491                           
  6492                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6493                           
  6494                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  6495                           
  6496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6497                           ;incstack = 0
  6498  005C4E  5036               	movf	_uart1TxBufferRemaining,w,c	;volatile
  6499  005C50  B4D8               	btfsc	status,2,c
  6500  005C52  D7FD               	goto	_UART1_Write
  6501                           
  6502                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  6503  005C54  0139               	movlb	57	; () banked
  6504  005C56  B993               	btfsc	147,4,b	;volatile
  6505  005C58  D005               	goto	l579
  6506                           
  6507                           ; BSR set to: 57
  6508                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  6509                           ;stkvar	_txData @ sp[(0)+-1]
  6510  005C5A  0EFF               	movlw	-1
  6511  005C5C  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  6512                           
  6513                           ;mcc_generated_files/uart1.c: 186:  } else {
  6514  005C62  D011               	goto	l5785
  6515  005C64                     l579:
  6516                           
  6517                           ; BSR set to: 57
  6518                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  6519  005C64  9993               	bcf	147,4,b	;volatile
  6520                           
  6521                           ; BSR set to: 57
  6522                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  6523                           ;stkvar	_txData @ sp[(0)+-1]
  6524  005C66  0E80               	movlw	low _uart1TxBuffer
  6525  005C68  2438               	addwf	_uart1TxHead,w,c	;volatile
  6526  005C6A  6ED9               	movwf	fsr2l,c
  6527  005C6C  6ADA               	clrf	fsr2h,c
  6528  005C6E  0E02               	movlw	high _uart1TxBuffer
  6529  005C70  22DA               	addwfc	fsr2h,f,c
  6530  005C72  0EFF               	movlw	-1
  6531  005C74  006F FF8F FFDF     	movff	plusw1,indf2
  6532                           
  6533                           ; BSR set to: 57
  6534  005C7A  2A38               	incf	_uart1TxHead,f,c	;volatile
  6535                           
  6536                           ; BSR set to: 57
  6537                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  6538  005C7C  0E3F               	movlw	63
  6539  005C7E  6438               	cpfsgt	_uart1TxHead,c
  6540  005C80  D001               	goto	l5783
  6541                           
  6542                           ; BSR set to: 57
  6543                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  6544  005C82  6A38               	clrf	_uart1TxHead,c	;volatile
  6545  005C84                     l5783:
  6546                           
  6547                           ; BSR set to: 57
  6548                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  6549  005C84  0636               	decf	_uart1TxBufferRemaining,f,c	;volatile
  6550  005C86                     l5785:
  6551                           
  6552                           ; BSR set to: 57
  6553                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  6554  005C86  8993               	bsf	147,4,b	;volatile
  6555                           
  6556                           ; BSR set to: 57
  6557                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6558  005C88  52E5               	movf	postdec1,f,c
  6559  005C8A  0012               	return		;funcret
  6560  005C8C                     __end_of_UART1_Write:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _secs_gem_state *****************
  6564 ;; Defined at:
  6565 ;;		line 610 in file "gemsecs.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  stream          1  [STACK] unsigned char 
  6568 ;;  function        1  [STACK] unsigned char 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1  [STACK] enum E16164
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6575 ;; Tracked objects:
  6576 ;;		On entry : 3F/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6584 ;;Total ram usage:        0 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    3
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_m_protocol
  6591 ;;		_r_protocol
  6592 ;; This function uses a reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text14
  6596  005074                     __ptext14:
  6597                           	opt callstack 0
  6598  005074                     _secs_gem_state:
  6599                           	opt callstack 26
  6600                           
  6601                           ;gemsecs.c: 610: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          611: {;gemsecs.c: 612:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 614:  sw
      +                          itch (stream) {
  6602                           
  6603                           ; BSR set to: 57
  6604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6605                           ;incstack = 0
  6606  005074  D04D               	goto	l6467
  6607  005076                     l6423:
  6608                           
  6609                           ;gemsecs.c: 621:    block = GEM_STATE_REMOTE;
  6610  005076  0E04               	movlw	4
  6611  005078                     L19:
  6612  005078  6E27               	movwf	secs_gem_state@block,c
  6613                           
  6614                           ;gemsecs.c: 622:    V.ticker = 0;
  6615  00507A  0100               	movlb	0	; () banked
  6616  00507C  6BBD               	clrf	(_V+93)& (0+255),b	;volatile
  6617                           
  6618                           ;gemsecs.c: 623:    break;
  6619  00507E  D05B               	goto	l6469
  6620  005080                     l6427:
  6621                           
  6622                           ;gemsecs.c: 628:    block = GEM_STATE_COMM;
  6623  005080  0E01               	movlw	1
  6624  005082  6E27               	movwf	secs_gem_state@block,c
  6625                           
  6626                           ;gemsecs.c: 629:    V.ticker = 15;
  6627  005084  0E0F               	movlw	15
  6628  005086  D041               	goto	L21
  6629  005088                     l6429:
  6630                           
  6631                           ;gemsecs.c: 635:    block = GEM_STATE_OFFLINE;
  6632  005088  0E02               	movlw	2
  6633  00508A  D7F6               	goto	L19
  6634  00508C                     l6433:
  6635                           
  6636                           ;gemsecs.c: 642:    block = GEM_STATE_ONLINE;
  6637  00508C  0E03               	movlw	3
  6638  00508E  D7F4               	goto	L19
  6639  005090                     l6437:
  6640                           
  6641                           ;gemsecs.c: 646:    if (block == GEM_STATE_DISABLE) {
  6642  005090  5027               	movf	secs_gem_state@block,w,c
  6643  005092  B4D8               	btfsc	status,2,c
  6644  005094  D7F5               	goto	l6427
  6645  005096  D04F               	goto	l6469
  6646  005098                     l6443:
  6647                           
  6648                           ;stkvar	_function @ sp[(0)+-2]
  6649  005098  0EFE               	movlw	-2
  6650  00509A  50E3               	movf	plusw1,w,c
  6651  00509C  6E43               	movwf	btemp+10,c
  6652  00509E  6A44               	clrf	btemp+11,c
  6653                           
  6654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6655                           ; Switch size 1, requested type "simple"
  6656                           ; Number of cases is 1, Range of values is 0 to 0
  6657                           ; switch strategies available:
  6658                           ; Name         Instructions Cycles
  6659                           ; simple_byte            4     3 (average)
  6660                           ;	Chosen strategy is simple_byte
  6661  0050A0  5044               	movf	btemp+11,w,c
  6662  0050A2  0A00               	xorlw	0	; case 0
  6663  0050A4  A4D8               	btfss	status,2,c
  6664  0050A6  D7F4               	goto	l6437
  6665                           
  6666                           ; Switch size 1, requested type "simple"
  6667                           ; Number of cases is 8, Range of values is 1 to 18
  6668                           ; switch strategies available:
  6669                           ; Name         Instructions Cycles
  6670                           ; simple_byte           25    13 (average)
  6671                           ;	Chosen strategy is simple_byte
  6672  0050A8  5043               	movf	btemp+10,w,c
  6673  0050AA  0A01               	xorlw	1	; case 1
  6674  0050AC  B4D8               	btfsc	status,2,c
  6675  0050AE  D7E3               	goto	l6423
  6676  0050B0  0A03               	xorlw	3	; case 2
  6677  0050B2  B4D8               	btfsc	status,2,c
  6678  0050B4  D7E0               	goto	l6423
  6679  0050B6  0A0F               	xorlw	15	; case 13
  6680  0050B8  B4D8               	btfsc	status,2,c
  6681  0050BA  D7E2               	goto	l6427
  6682  0050BC  0A03               	xorlw	3	; case 14
  6683  0050BE  B4D8               	btfsc	status,2,c
  6684  0050C0  D7DF               	goto	l6427
  6685  0050C2  0A01               	xorlw	1	; case 15
  6686  0050C4  B4D8               	btfsc	status,2,c
  6687  0050C6  D7E0               	goto	l6429
  6688  0050C8  0A1F               	xorlw	31	; case 16
  6689  0050CA  B4D8               	btfsc	status,2,c
  6690  0050CC  D7DD               	goto	l6429
  6691  0050CE  0A01               	xorlw	1	; case 17
  6692  0050D0  B4D8               	btfsc	status,2,c
  6693  0050D2  D7DC               	goto	l6433
  6694  0050D4  0A03               	xorlw	3	; case 18
  6695  0050D6  B4D8               	btfsc	status,2,c
  6696  0050D8  D7D9               	goto	l6433
  6697  0050DA  D7DA               	goto	l6437
  6698  0050DC                     l6445:
  6699                           
  6700                           ;gemsecs.c: 656:    block = GEM_STATE_ALARM;
  6701  0050DC  0E05               	movlw	5
  6702  0050DE  6E27               	movwf	secs_gem_state@block,c
  6703                           
  6704                           ;gemsecs.c: 657:    if (V.ticker != 45)
  6705  0050E0  0E2D               	movlw	45
  6706  0050E2  0100               	movlb	0	; () banked
  6707  0050E4  19BD               	xorwf	(_V+93)& (0+255),w,b	;volatile
  6708  0050E6  B4D8               	btfsc	status,2,c
  6709  0050E8  D026               	goto	l6469
  6710  0050EA                     u3560:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;gemsecs.c: 658:     V.ticker = 15;
  6714  0050EA  0E0F               	movlw	15
  6715  0050EC  D00F               	goto	L20
  6716  0050EE                     l6453:
  6717                           
  6718                           ;gemsecs.c: 665:    block = GEM_STATE_ERROR;
  6719  0050EE  0E06               	movlw	6
  6720  0050F0  6E27               	movwf	secs_gem_state@block,c
  6721                           
  6722                           ;gemsecs.c: 666:    if (V.ticker != 45)
  6723  0050F2  0E2D               	movlw	45
  6724  0050F4  0100               	movlb	0	; () banked
  6725  0050F6  19BD               	xorwf	(_V+93)& (0+255),w,b	;volatile
  6726  0050F8  A4D8               	btfss	status,2,c
  6727  0050FA  D7F7               	goto	u3560
  6728  0050FC  D01C               	goto	l6469
  6729  0050FE                     l6461:
  6730                           
  6731                           ;gemsecs.c: 672:   if (block == GEM_STATE_DISABLE) {
  6732  0050FE  5027               	movf	secs_gem_state@block,w,c
  6733  005100  A4D8               	btfss	status,2,c
  6734  005102  D019               	goto	l6469
  6735                           
  6736                           ;gemsecs.c: 673:    block = GEM_STATE_COMM;
  6737  005104  0E01               	movlw	1
  6738  005106  6E27               	movwf	secs_gem_state@block,c
  6739                           
  6740                           ;gemsecs.c: 674:    V.ticker = 45;
  6741  005108  0E2D               	movlw	45
  6742  00510A                     L21:
  6743  00510A  0100               	movlb	0	; () banked
  6744  00510C                     L20:
  6745  00510C  6FBD               	movwf	(_V+93)& (0+255),b	;volatile
  6746  00510E  D013               	goto	l6469
  6747  005110                     l6467:
  6748                           
  6749                           ;stkvar	_stream @ sp[(0)+-1]
  6750  005110  0EFF               	movlw	-1
  6751  005112  50E3               	movf	plusw1,w,c
  6752  005114  6E43               	movwf	btemp+10,c
  6753  005116  6A44               	clrf	btemp+11,c
  6754                           
  6755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6756                           ; Switch size 1, requested type "simple"
  6757                           ; Number of cases is 1, Range of values is 0 to 0
  6758                           ; switch strategies available:
  6759                           ; Name         Instructions Cycles
  6760                           ; simple_byte            4     3 (average)
  6761                           ;	Chosen strategy is simple_byte
  6762  005118  5044               	movf	btemp+11,w,c
  6763  00511A  0A00               	xorlw	0	; case 0
  6764  00511C  A4D8               	btfss	status,2,c
  6765  00511E  D7EF               	goto	l6461
  6766                           
  6767                           ; Switch size 1, requested type "simple"
  6768                           ; Number of cases is 3, Range of values is 1 to 9
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte           10     6 (average)
  6772                           ;	Chosen strategy is simple_byte
  6773  005120  5043               	movf	btemp+10,w,c
  6774  005122  0A01               	xorlw	1	; case 1
  6775  005124  B4D8               	btfsc	status,2,c
  6776  005126  D7B8               	goto	l6443
  6777  005128  0A04               	xorlw	4	; case 5
  6778  00512A  B4D8               	btfsc	status,2,c
  6779  00512C  D7D7               	goto	l6445
  6780  00512E  0A0C               	xorlw	12	; case 9
  6781  005130  B4D8               	btfsc	status,2,c
  6782  005132  D7DD               	goto	l6453
  6783  005134  D7E4               	goto	l6461
  6784  005136                     l6469:
  6785                           
  6786                           ;gemsecs.c: 679:  return(block);
  6787  005136  0060  F09C  F039   	movff	secs_gem_state@block,btemp
  6788                           
  6789                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  6790  00513C  52E5               	movf	postdec1,f,c
  6791  00513E  52E5               	movf	postdec1,f,c
  6792  005140  0012               	return		;funcret
  6793  005142                     __end_of_secs_gem_state:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _run_checksum *****************
  6797 ;; Defined at:
  6798 ;;		line 31 in file "gemsecs.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  byte_block      1  [STACK] unsigned char 
  6801 ;;  clear           1  [STACK] _Bool 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  2  [STACK] unsigned short 
  6806 ;; Registers used:
  6807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6808 ;; Tracked objects:
  6809 ;;		On entry : 6/39
  6810 ;;		On exit  : 3F/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    3
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_m_protocol
  6824 ;;		_r_protocol
  6825 ;; This function uses a reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text15
  6829  005D7C                     __ptext15:
  6830                           	opt callstack 0
  6831  005D7C                     _run_checksum:
  6832                           	opt callstack 26
  6833                           
  6834                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6835                           ;stkvar	_clear @ sp[(0)+-2]
  6836                           
  6837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6838                           ;incstack = 0
  6839  005D7C  0EFE               	movlw	-2
  6840  005D7E  50E3               	movf	plusw1,w,c
  6841  005D80  B4D8               	btfsc	status,2,c
  6842  005D82  D003               	goto	l6349
  6843                           
  6844                           ;gemsecs.c: 36:   sum = 0;
  6845  005D84  0100               	movlb	0	; () banked
  6846  005D86  6BF9               	clrf	run_checksum@sum& (0+255),b
  6847  005D88  6BFA               	clrf	(run_checksum@sum+1)& (0+255),b
  6848  005D8A                     l6349:
  6849                           
  6850                           ;gemsecs.c: 38:  sum += byte_block;
  6851                           ;stkvar	_byte_block @ sp[(0)+-1]
  6852  005D8A  0EFF               	movlw	-1
  6853  005D8C  50E3               	movf	plusw1,w,c
  6854  005D8E  0100               	movlb	0	; () banked
  6855  005D90  27F9               	addwf	run_checksum@sum& (0+255),f,b
  6856  005D92  0E00               	movlw	0
  6857  005D94  23FA               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;gemsecs.c: 39:  return sum;
  6861  005D96  0060  F3E4  F039   	movff	run_checksum@sum,btemp
  6862  005D9C  0060  F3E8  F03A   	movff	run_checksum@sum+1,btemp+1
  6863                           
  6864                           ; BSR set to: 0
  6865                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6866  005DA2  52E5               	movf	postdec1,f,c
  6867  005DA4  52E5               	movf	postdec1,f,c
  6868  005DA6  0012               	return		;funcret
  6869  005DA8                     __end_of_run_checksum:
  6870                           	opt callstack 0
  6871                           
  6872 ;; *************** function _WaitMs *****************
  6873 ;; Defined at:
  6874 ;;		line 31 in file "timers.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  numMilliseco    2  [STACK] unsigned short 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1  [STACK] void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    4
  6895 ;; This function calls:
  6896 ;;		_StartTimer
  6897 ;;		_TimerDone
  6898 ;; This function is called by:
  6899 ;;		_main
  6900 ;;		_m_protocol
  6901 ;;		_r_protocol
  6902 ;;		_t_protocol
  6903 ;; This function uses a reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text16
  6907  005EAC                     __ptext16:
  6908                           	opt callstack 0
  6909  005EAC                     _WaitMs:
  6910                           	opt callstack 25
  6911                           
  6912                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6913                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6914                           
  6915                           ; BSR set to: 0
  6916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6917                           ;incstack = 0
  6918  005EAC  0EFE               	movlw	-2
  6919  005EAE  006F FF8F FFE6     	movff	plusw1,postinc1
  6920  005EB4  006F FF8F FFE6     	movff	plusw1,postinc1
  6921  005EBA  0E00               	movlw	0
  6922  005EBC  6EE6               	movwf	postinc1,c
  6923  005EBE  EC84  F02E         	call	_StartTimer	;wreg free
  6924  005EC2                     l6287:
  6925                           
  6926                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6927  005EC2  0E00               	movlw	0
  6928  005EC4  6EE6               	movwf	postinc1,c
  6929  005EC6  ECF7  F030         	call	_TimerDone	;wreg free
  6930  005ECA  5039               	movf	btemp,w,c
  6931  005ECC  B4D8               	btfsc	status,2,c
  6932  005ECE  D7F9               	goto	l6287
  6933                           
  6934                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6935  005ED0  52E5               	movf	postdec1,f,c
  6936  005ED2  52E5               	movf	postdec1,f,c
  6937  005ED4  0012               	return		;funcret
  6938  005ED6                     __end_of_WaitMs:
  6939                           	opt callstack 0
  6940                           
  6941 ;; *************** function _TimerDone *****************
  6942 ;; Defined at:
  6943 ;;		line 20 in file "timers.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  timer           1  [STACK] unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1  [STACK] _Bool 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    3
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_m_protocol
  6968 ;;		_r_protocol
  6969 ;;		_t_protocol
  6970 ;;		_WaitMs
  6971 ;; This function uses a reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text17
  6975  0061EE                     __ptext17:
  6976                           	opt callstack 0
  6977  0061EE                     _TimerDone:
  6978                           	opt callstack 25
  6979                           
  6980                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6981                           ;stkvar	_timer @ sp[(0)+-1]
  6982                           
  6983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6984                           ;incstack = 0
  6985  0061EE  0EFF               	movlw	-1
  6986  0061F0  50E3               	movf	plusw1,w,c
  6987  0061F2  0D02               	mullw	2
  6988  0061F4  50F3               	movf	prodl,w,c
  6989  0061F6  0FD7               	addlw	low _tickCount
  6990  0061F8  6ED9               	movwf	fsr2l,c
  6991  0061FA  6ADA               	clrf	fsr2h,c
  6992  0061FC  50DE               	movf	postinc2,w,c
  6993  0061FE  10DE               	iorwf	postinc2,w,c
  6994  006200  A4D8               	btfss	status,2,c
  6995  006202  D002               	goto	l5893
  6996                           
  6997                           ;timers.c: 23:   return 1;
  6998  006204  0E01               	movlw	1
  6999  006206  D001               	goto	L22
  7000  006208                     l5893:
  7001                           
  7002                           ;timers.c: 25:  return 0;
  7003  006208  0E00               	movlw	0
  7004  00620A                     L22:
  7005  00620A  6E39               	movwf	btemp,c
  7006                           
  7007                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7008  00620C  52E5               	movf	postdec1,f,c
  7009  00620E  0012               	return		;funcret
  7010  006210                     __end_of_TimerDone:
  7011                           	opt callstack 0
  7012                           
  7013 ;; *************** function _StartTimer *****************
  7014 ;; Defined at:
  7015 ;;		line 12 in file "timers.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  timer           1  [STACK] unsigned char 
  7018 ;;  count           2  [STACK] unsigned short 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1  [STACK] void 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/39
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    3
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_m_protocol
  7041 ;;		_r_protocol
  7042 ;;		_t_protocol
  7043 ;;		_WaitMs
  7044 ;; This function uses a reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text18
  7048  005D08                     __ptext18:
  7049                           	opt callstack 0
  7050  005D08                     _StartTimer:
  7051                           	opt callstack 25
  7052                           
  7053                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7054                           ;stkvar	_count @ sp[(0)+-3]
  7055                           
  7056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7057                           ;incstack = 0
  7058  005D08  0EFD               	movlw	-3
  7059  005D0A  006F FF8C  F043    	movff	plusw1,btemp+10
  7060  005D10  0EFE               	movlw	-2
  7061  005D12  006F FF8C  F044    	movff	plusw1,btemp+11
  7062  005D18  90D8               	bcf	status,0,c
  7063  005D1A  3443               	rlcf	btemp+10,w,c
  7064  005D1C  6E41               	movwf	btemp+8,c
  7065  005D1E  3444               	rlcf	btemp+11,w,c
  7066  005D20  6E42               	movwf	btemp+9,c
  7067                           
  7068                           ;stkvar	_timer @ sp[(0)+-1]
  7069  005D22  0EFF               	movlw	-1
  7070  005D24  50E3               	movf	plusw1,w,c
  7071  005D26  0D02               	mullw	2
  7072  005D28  50F3               	movf	prodl,w,c
  7073  005D2A  0FD7               	addlw	low _tickCount
  7074  005D2C  6ED9               	movwf	fsr2l,c
  7075  005D2E  6ADA               	clrf	fsr2h,c
  7076  005D30  0060  F107  FFDE   	movff	btemp+8,postinc2
  7077  005D36  0060  F10B  FFDD   	movff	btemp+9,postdec2
  7078                           
  7079                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7080  005D3C  52E5               	movf	postdec1,f,c
  7081  005D3E  52E5               	movf	postdec1,f,c
  7082  005D40  52E5               	movf	postdec1,f,c
  7083  005D42  0012               	return		;funcret
  7084  005D44                     __end_of_StartTimer:
  7085                           	opt callstack 0
  7086                           
  7087 ;; *************** function _UART2_is_rx_ready *****************
  7088 ;; Defined at:
  7089 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;		None
  7092 ;; Auto vars:     Size  Location     Type
  7093 ;;		None
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  1  [STACK] unsigned char 
  7096 ;; Registers used:
  7097 ;;		btemp
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7107 ;;Total ram usage:        0 bytes
  7108 ;; Hardware stack levels used:    1
  7109 ;; Hardware stack levels required when called:    3
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_m_protocol
  7114 ;; This function uses a reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text19
  7118  006482                     __ptext19:
  7119                           	opt callstack 0
  7120  006482                     _UART2_is_rx_ready:
  7121                           	opt callstack 26
  7122                           
  7123                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7124                           
  7125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7126                           ;incstack = 0
  7127  006482  0060  F0B4  F039   	movff	_uart2RxCount,btemp	;volatile
  7128                           
  7129                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7130  006488  0012               	return		;funcret
  7131  00648A                     __end_of_UART2_is_rx_ready:
  7132                           	opt callstack 0
  7133                           
  7134 ;; *************** function _UART2_Read *****************
  7135 ;; Defined at:
  7136 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  readValue       1  [STACK] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1  [STACK] unsigned char 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 3F/39
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    3
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_m_protocol
  7161 ;; This function uses a reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text20
  7165  005C8C                     __ptext20:
  7166                           	opt callstack 0
  7167  005C8C                     _UART2_Read:
  7168                           	opt callstack 0
  7169                           
  7170                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7171  005C8C  52E6               	movf	postinc1,f,c
  7172  005C8E                     
  7173                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7174                           
  7175                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7176  005C8E  502D               	movf	_uart2RxCount,w,c	;volatile
  7177  005C90  B4D8               	btfsc	status,2,c
  7178  005C92  D7FD               	goto	l6249
  7179                           
  7180                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7181  005C94  0E00               	movlw	low _uart2RxBuffer
  7182  005C96  242E               	addwf	_uart2RxTail,w,c	;volatile
  7183  005C98  6ED9               	movwf	fsr2l,c
  7184  005C9A  6ADA               	clrf	fsr2h,c
  7185  005C9C  0E02               	movlw	high _uart2RxBuffer
  7186  005C9E  22DA               	addwfc	fsr2h,f,c
  7187  005CA0  50DF               	movf	indf2,w,c
  7188  005CA2  6E44               	movwf	btemp+11,c
  7189                           
  7190                           ;stkvar	_readValue @ sp[(-1)+0]
  7191  005CA4  0EFF               	movlw	-1
  7192  005CA6  0060  F113  FFE3   	movff	btemp+11,plusw1
  7193  005CAC  2A2E               	incf	_uart2RxTail,f,c	;volatile
  7194                           
  7195                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7196  005CAE  0E3F               	movlw	63
  7197  005CB0  642E               	cpfsgt	_uart2RxTail,c
  7198  005CB2  D001               	goto	l692
  7199                           
  7200                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7201  005CB4  6A2E               	clrf	_uart2RxTail,c	;volatile
  7202  005CB6                     l692:
  7203                           
  7204                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7205  005CB6  0139               	movlb	57	; () banked
  7206  005CB8  9596               	bcf	150,2,b	;volatile
  7207                           
  7208                           ; BSR set to: 57
  7209                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7210  005CBA  062D               	decf	_uart2RxCount,f,c	;volatile
  7211                           
  7212                           ; BSR set to: 57
  7213                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7214  005CBC  8596               	bsf	150,2,b	;volatile
  7215                           
  7216                           ; BSR set to: 57
  7217                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7218                           ;stkvar	_readValue @ sp[(-1)+0]
  7219  005CBE  0EFF               	movlw	-1
  7220  005CC0  006F FF8C  F039    	movff	plusw1,btemp
  7221                           
  7222                           ; BSR set to: 57
  7223                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7224  005CC6  52E5               	movf	postdec1,f,c
  7225  005CC8  0012               	return		;funcret
  7226  005CCA                     __end_of_UART2_Read:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _UART1_is_rx_ready *****************
  7230 ;; Defined at:
  7231 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1  [STACK] unsigned char 
  7238 ;; Registers used:
  7239 ;;		btemp
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;Total ram usage:        0 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    3
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_m_protocol
  7256 ;;		_r_protocol
  7257 ;;		_t_protocol
  7258 ;; This function uses a reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text21
  7262  00648A                     __ptext21:
  7263                           	opt callstack 0
  7264  00648A                     _UART1_is_rx_ready:
  7265                           	opt callstack 26
  7266                           
  7267                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7268                           
  7269                           ; BSR set to: 57
  7270                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7271                           ;incstack = 0
  7272  00648A  0060  F0CC  F039   	movff	_uart1RxCount,btemp	;volatile
  7273                           
  7274                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7275  006490  0012               	return		;funcret
  7276  006492                     __end_of_UART1_is_rx_ready:
  7277                           	opt callstack 0
  7278                           
  7279 ;; *************** function _UART1_Read *****************
  7280 ;; Defined at:
  7281 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  readValue       1  [STACK] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1  [STACK] unsigned char 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 3F/39
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7299 ;;Total ram usage:        0 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    3
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_m_protocol
  7306 ;;		_r_protocol
  7307 ;;		_t_protocol
  7308 ;; This function uses a reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text22
  7312  005CCA                     __ptext22:
  7313                           	opt callstack 0
  7314  005CCA                     _UART1_Read:
  7315                           	opt callstack 0
  7316                           
  7317                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7318  005CCA  52E6               	movf	postinc1,f,c
  7319  005CCC                     
  7320                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7321                           
  7322                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7323  005CCC  5033               	movf	_uart1RxCount,w,c	;volatile
  7324  005CCE  B4D8               	btfsc	status,2,c
  7325  005CD0  D7FD               	goto	l6225
  7326                           
  7327                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7328  005CD2  0E40               	movlw	low _uart1RxBuffer
  7329  005CD4  2434               	addwf	_uart1RxTail,w,c	;volatile
  7330  005CD6  6ED9               	movwf	fsr2l,c
  7331  005CD8  6ADA               	clrf	fsr2h,c
  7332  005CDA  0E02               	movlw	high _uart1RxBuffer
  7333  005CDC  22DA               	addwfc	fsr2h,f,c
  7334  005CDE  50DF               	movf	indf2,w,c
  7335  005CE0  6E44               	movwf	btemp+11,c
  7336                           
  7337                           ;stkvar	_readValue @ sp[(-1)+0]
  7338  005CE2  0EFF               	movlw	-1
  7339  005CE4  0060  F113  FFE3   	movff	btemp+11,plusw1
  7340  005CEA  2A34               	incf	_uart1RxTail,f,c	;volatile
  7341                           
  7342                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7343  005CEC  0E3F               	movlw	63
  7344  005CEE  6434               	cpfsgt	_uart1RxTail,c
  7345  005CF0  D001               	goto	l572
  7346                           
  7347                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7348  005CF2  6A34               	clrf	_uart1RxTail,c	;volatile
  7349  005CF4                     l572:
  7350                           
  7351                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7352  005CF4  0139               	movlb	57	; () banked
  7353  005CF6  9793               	bcf	147,3,b	;volatile
  7354                           
  7355                           ; BSR set to: 57
  7356                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7357  005CF8  0633               	decf	_uart1RxCount,f,c	;volatile
  7358                           
  7359                           ; BSR set to: 57
  7360                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7361  005CFA  8793               	bsf	147,3,b	;volatile
  7362                           
  7363                           ; BSR set to: 57
  7364                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7365                           ;stkvar	_readValue @ sp[(-1)+0]
  7366  005CFC  0EFF               	movlw	-1
  7367  005CFE  006F FF8C  F039    	movff	plusw1,btemp
  7368                           
  7369                           ; BSR set to: 57
  7370                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7371  005D04  52E5               	movf	postdec1,f,c
  7372  005D06  0012               	return		;funcret
  7373  005D08                     __end_of_UART1_Read:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _init_display *****************
  7377 ;; Defined at:
  7378 ;;		line 35 in file "eadog.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1  [STACK] void 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 3F/3D
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    5
  7399 ;; This function calls:
  7400 ;;		_ringBufS_init
  7401 ;;		_send_lcd_cmd
  7402 ;;		_send_lcd_cmd_long
  7403 ;;		_wdtdelay
  7404 ;; This function is called by:
  7405 ;;		_main
  7406 ;; This function uses a reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text23
  7410  004DE8                     __ptext23:
  7411                           	opt callstack 0
  7412  004DE8                     _init_display:
  7413                           	opt callstack 25
  7414                           
  7415                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7416                           
  7417                           ; BSR set to: 57
  7418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7419                           ;incstack = 0
  7420  004DE8  0E83               	movlw	low _ring_buf1
  7421  004DEA  0100               	movlb	0	; () banked
  7422  004DEC  6FD1               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7423  004DEE  0E03               	movlw	high _ring_buf1
  7424  004DF0  6FD2               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7425                           
  7426                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7427  004DF2  0E40               	movlw	low _ring_buf2
  7428  004DF4  6FCF               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7429  004DF6  0E03               	movlw	high _ring_buf2
  7430  004DF8  6FD0               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7434  004DFA  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  7435  004E00  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  7436  004E06  EC93  F02F         	call	_ringBufS_init	;wreg free
  7437                           
  7438                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7439  004E0A  0060  F33F  FFE6   	movff	_spi_link+4,postinc1
  7440  004E10  0060  F343  FFE6   	movff	_spi_link+5,postinc1
  7441  004E16  EC93  F02F         	call	_ringBufS_init	;wreg free
  7442                           
  7443                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7444  004E1A  80BE               	bsf	16318,0,c	;volatile
  7445  004E1C  84BC               	bsf	16316,2,c	;volatile
  7446                           
  7447                           ;eadog.c: 44:  wdtdelay(350000);
  7448  004E1E  0E30               	movlw	48
  7449  004E20  6EE6               	movwf	postinc1,c
  7450  004E22  0E57               	movlw	87
  7451  004E24  6EE6               	movwf	postinc1,c
  7452  004E26  0E05               	movlw	5
  7453  004E28  6EE6               	movwf	postinc1,c
  7454  004E2A  0E00               	movlw	0
  7455  004E2C  6EE6               	movwf	postinc1,c
  7456  004E2E  EC96  F02C         	call	_wdtdelay	;wreg free
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7460  004E32  0E39               	movlw	57
  7461  004E34  6EE6               	movwf	postinc1,c
  7462  004E36  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7466  004E3A  0E1D               	movlw	29
  7467  004E3C  6EE6               	movwf	postinc1,c
  7468  004E3E  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7472  004E42  0E50               	movlw	80
  7473  004E44  6EE6               	movwf	postinc1,c
  7474  004E46  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7478  004E4A  0E6C               	movlw	108
  7479  004E4C  6EE6               	movwf	postinc1,c
  7480  004E4E  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7484  004E52  0E76               	movlw	118
  7485  004E54  6EE6               	movwf	postinc1,c
  7486  004E56  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7490  004E5A  0E38               	movlw	56
  7491  004E5C  6EE6               	movwf	postinc1,c
  7492  004E5E  EC6B  F02F         	call	_send_lcd_cmd_long	;wreg free
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7496  004E62  0E0F               	movlw	15
  7497  004E64  6EE6               	movwf	postinc1,c
  7498  004E66  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7502  004E6A  0E01               	movlw	1
  7503  004E6C  6EE6               	movwf	postinc1,c
  7504  004E6E  EC6B  F02F         	call	_send_lcd_cmd_long	;wreg free
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7508  004E72  0E02               	movlw	2
  7509  004E74  6EE6               	movwf	postinc1,c
  7510  004E76  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7514  004E7A  0E06               	movlw	6
  7515  004E7C  6EE6               	movwf	postinc1,c
  7516  004E7E  EC7F  F02F         	call	_send_lcd_cmd	;wreg free
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;eadog.c: 55:  wdtdelay(30);
  7520  004E82  0E1E               	movlw	30
  7521  004E84  6EE6               	movwf	postinc1,c
  7522  004E86  0E00               	movlw	0
  7523  004E88  6EE6               	movwf	postinc1,c
  7524  004E8A  0E00               	movlw	0
  7525  004E8C  6EE6               	movwf	postinc1,c
  7526  004E8E  0E00               	movlw	0
  7527  004E90  6EE6               	movwf	postinc1,c
  7528  004E92  EC96  F02C         	call	_wdtdelay	;wreg free
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7532  004E96  0E02               	movlw	2
  7533  004E98  013D               	movlb	61	; () banked
  7534  004E9A  6F16               	movwf	22,b	;volatile
  7535                           
  7536                           ; BSR set to: 61
  7537                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7538  004E9C  0E40               	movlw	64
  7539  004E9E  6F15               	movwf	21,b	;volatile
  7540                           
  7541                           ; BSR set to: 61
  7542                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7543  004EA0  0E83               	movlw	131
  7544  004EA2  6F14               	movwf	20,b	;volatile
  7545                           
  7546                           ; BSR set to: 61
  7547                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7548  004EA4  931A               	bcf	26,1,b	;volatile
  7549                           
  7550                           ; BSR set to: 61
  7551                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7552  004EA6  0E3F               	movlw	-193
  7553  004EA8  013B               	movlb	59	; () banked
  7554  004EAA  17FD               	andwf	253,f,b	;volatile
  7555                           
  7556                           ; BSR set to: 59
  7557                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7558  004EAC  9BFD               	bcf	253,5,b	;volatile
  7559                           
  7560                           ; BSR set to: 59
  7561                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7562  004EAE  51FD               	movf	253,w,b	;volatile
  7563  004EB0  0BF9               	andlw	-7
  7564  004EB2  0902               	iorlw	2
  7565  004EB4  6FFD               	movwf	253,b	;volatile
  7566                           
  7567                           ; BSR set to: 59
  7568                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7569  004EB6  0EE7               	movlw	-25
  7570  004EB8  17FD               	andwf	253,f,b	;volatile
  7571                           
  7572                           ; BSR set to: 59
  7573                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7574  004EBA  81FD               	bsf	253,0,b	;volatile
  7575                           
  7576                           ; BSR set to: 59
  7577                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7578  004EBC  0E83               	movlw	low _ring_buf1
  7579  004EBE  6FF9               	movwf	249,b	;volatile
  7580  004EC0  0E03               	movlw	high _ring_buf1
  7581  004EC2  6FFA               	movwf	250,b	;volatile
  7582  004EC4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7583  004EC6  6FFB               	movwf	251,b	;volatile
  7584                           
  7585                           ; BSR set to: 59
  7586                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7587  004EC8  9BFC               	bcf	252,5,b	;volatile
  7588                           
  7589                           ; BSR set to: 59
  7590                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7591  004ECA  013D               	movlb	61	; () banked
  7592  004ECC  831A               	bsf	26,1,b	;volatile
  7593                           
  7594                           ; BSR set to: 61
  7595                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7596  004ECE  90BE               	bcf	16318,0,c	;volatile
  7597                           
  7598                           ; BSR set to: 61
  7599                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7600  004ED0  0012               	return		;funcret
  7601  004ED2                     __end_of_init_display:
  7602                           	opt callstack 0
  7603                           
  7604 ;; *************** function _send_lcd_cmd_long *****************
  7605 ;; Defined at:
  7606 ;;		line 97 in file "eadog.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  cmd             1  [STACK] unsigned char 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1  [STACK] void 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7615 ;; Tracked objects:
  7616 ;;		On entry : 3F/0
  7617 ;;		On exit  : 3F/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    4
  7627 ;; This function calls:
  7628 ;;		_SPI1_Exchange8bit
  7629 ;;		_wdtdelay
  7630 ;; This function is called by:
  7631 ;;		_init_display
  7632 ;; This function uses a reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text24
  7636  005ED6                     __ptext24:
  7637                           	opt callstack 0
  7638  005ED6                     _send_lcd_cmd_long:
  7639                           	opt callstack 25
  7640                           
  7641                           ; BSR set to: 61
  7642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7643                           ;incstack = 0
  7644                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7645  005ED6  92BC               	bcf	16316,1,c	;volatile
  7646                           
  7647                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7648  005ED8  94BC               	bcf	16316,2,c	;volatile
  7649                           
  7650                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7651                           ;stkvar	_cmd @ sp[(0)+-1]
  7652  005EDA  0EFF               	movlw	-1
  7653  005EDC  50E3               	movf	plusw1,w,c
  7654  005EDE  6EE6               	movwf	postinc1,c
  7655  005EE0  EC7B  F031         	call	_SPI1_Exchange8bit	;wreg free
  7656                           
  7657                           ; BSR set to: 57
  7658                           ;eadog.c: 102:  wdtdelay(800);
  7659  005EE4  0E20               	movlw	32
  7660  005EE6  6EE6               	movwf	postinc1,c
  7661  005EE8  0E03               	movlw	3
  7662  005EEA  6EE6               	movwf	postinc1,c
  7663  005EEC  0E00               	movlw	0
  7664  005EEE  6EE6               	movwf	postinc1,c
  7665  005EF0  0E00               	movlw	0
  7666  005EF2  6EE6               	movwf	postinc1,c
  7667  005EF4  EC96  F02C         	call	_wdtdelay	;wreg free
  7668                           
  7669                           ; BSR set to: 0
  7670  005EF8  82BC               	bsf	16316,1,c	;volatile
  7671                           
  7672                           ; BSR set to: 0
  7673                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7674  005EFA  52E5               	movf	postdec1,f,c
  7675  005EFC  0012               	return		;funcret
  7676  005EFE                     __end_of_send_lcd_cmd_long:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function _send_lcd_cmd *****************
  7680 ;; Defined at:
  7681 ;;		line 85 in file "eadog.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  cmd             1  [STACK] unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1  [STACK] void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7690 ;; Tracked objects:
  7691 ;;		On entry : 3F/0
  7692 ;;		On exit  : 3F/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7699 ;;Total ram usage:        0 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    4
  7702 ;; This function calls:
  7703 ;;		_SPI1_Exchange8bit
  7704 ;;		_wdtdelay
  7705 ;; This function is called by:
  7706 ;;		_init_display
  7707 ;; This function uses a reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text25
  7711  005EFE                     __ptext25:
  7712                           	opt callstack 0
  7713  005EFE                     _send_lcd_cmd:
  7714                           	opt callstack 25
  7715                           
  7716                           ; BSR set to: 0
  7717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7718                           ;incstack = 0
  7719                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7720  005EFE  92BC               	bcf	16316,1,c	;volatile
  7721                           
  7722                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7723  005F00  94BC               	bcf	16316,2,c	;volatile
  7724                           
  7725                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7726                           ;stkvar	_cmd @ sp[(0)+-1]
  7727  005F02  0EFF               	movlw	-1
  7728  005F04  50E3               	movf	plusw1,w,c
  7729  005F06  6EE6               	movwf	postinc1,c
  7730  005F08  EC7B  F031         	call	_SPI1_Exchange8bit	;wreg free
  7731                           
  7732                           ; BSR set to: 57
  7733                           ;eadog.c: 90:  wdtdelay(30);
  7734  005F0C  0E1E               	movlw	30
  7735  005F0E  6EE6               	movwf	postinc1,c
  7736  005F10  0E00               	movlw	0
  7737  005F12  6EE6               	movwf	postinc1,c
  7738  005F14  0E00               	movlw	0
  7739  005F16  6EE6               	movwf	postinc1,c
  7740  005F18  0E00               	movlw	0
  7741  005F1A  6EE6               	movwf	postinc1,c
  7742  005F1C  EC96  F02C         	call	_wdtdelay	;wreg free
  7743                           
  7744                           ; BSR set to: 0
  7745  005F20  82BC               	bsf	16316,1,c	;volatile
  7746                           
  7747                           ; BSR set to: 0
  7748                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7749  005F22  52E5               	movf	postdec1,f,c
  7750  005F24  0012               	return		;funcret
  7751  005F26                     __end_of_send_lcd_cmd:
  7752                           	opt callstack 0
  7753                           
  7754 ;; *************** function _SPI1_Exchange8bit *****************
  7755 ;; Defined at:
  7756 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  data            1  [STACK] unsigned char 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1  [STACK] unsigned char 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 3F/39
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7774 ;;Total ram usage:        0 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    3
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_send_lcd_cmd
  7781 ;;		_send_lcd_cmd_long
  7782 ;; This function uses a reentrant model
  7783 ;;
  7784                           
  7785                           	psect	text26
  7786  0062F6                     __ptext26:
  7787                           	opt callstack 0
  7788  0062F6                     _SPI1_Exchange8bit:
  7789                           	opt callstack 25
  7790                           
  7791                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7792                           
  7793                           ; BSR set to: 0
  7794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7795                           ;incstack = 0
  7796  0062F6  0E01               	movlw	1
  7797  0062F8  013D               	movlb	61	; () banked
  7798  0062FA  6F12               	movwf	18,b	;volatile
  7799                           
  7800                           ; BSR set to: 61
  7801                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7802                           ;stkvar	_data @ sp[(0)+-1]
  7803  0062FC  0EFF               	movlw	-1
  7804  0062FE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7805  006304                     l851:
  7806                           
  7807                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7808  006304  0139               	movlb	57	; () banked
  7809  006306  A9A2               	btfss	162,4,b	;volatile
  7810  006308  D7FD               	goto	l851
  7811                           
  7812                           ; BSR set to: 57
  7813                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7814  00630A  006F F440  F039    	movff	15632,btemp	;volatile
  7815                           
  7816                           ; BSR set to: 57
  7817                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7818  006310  52E5               	movf	postdec1,f,c
  7819  006312  0012               	return		;funcret
  7820  006314                     __end_of_SPI1_Exchange8bit:
  7821                           	opt callstack 0
  7822                           
  7823 ;; *************** function _ringBufS_init *****************
  7824 ;; Defined at:
  7825 ;;		line 22 in file "ringbufs.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  _this           2  [STACK] PTR volatile struct ring
  7828 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1  [STACK] void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    4
  7847 ;; This function calls:
  7848 ;;		_memset
  7849 ;; This function is called by:
  7850 ;;		_init_display
  7851 ;; This function uses a reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text27
  7855  005F26                     __ptext27:
  7856                           	opt callstack 0
  7857  005F26                     _ringBufS_init:
  7858                           	opt callstack 25
  7859                           
  7860                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7861                           
  7862                           ; BSR set to: 57
  7863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7864                           ;incstack = 0
  7865  005F26  0E43               	movlw	67
  7866  005F28  6EE6               	movwf	postinc1,c
  7867  005F2A  0E00               	movlw	0
  7868  005F2C  6EE6               	movwf	postinc1,c
  7869  005F2E  0E00               	movlw	0
  7870  005F30  6EE6               	movwf	postinc1,c
  7871  005F32  0E00               	movlw	0
  7872  005F34  6EE6               	movwf	postinc1,c
  7873                           
  7874                           ;stkvar	__this @ sp[(-4)+-2]
  7875  005F36  0EFA               	movlw	-6
  7876  005F38  006F FF8F FFE6     	movff	plusw1,postinc1
  7877  005F3E  006F FF8F FFE6     	movff	plusw1,postinc1
  7878  005F44  ECCD  F01B         	call	_memset	;wreg free
  7879                           
  7880                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7881  005F48  52E5               	movf	postdec1,f,c
  7882  005F4A  52E5               	movf	postdec1,f,c
  7883  005F4C  0012               	return		;funcret
  7884  005F4E                     __end_of_ringBufS_init:
  7885                           	opt callstack 0
  7886                           
  7887 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7888 ;; Defined at:
  7889 ;;		line 221 in file "eadog.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  r               1  [STACK] unsigned char 
  7892 ;;  c               1  [STACK] unsigned char 
  7893 ;;  strPtr          1  [STACK] PTR unsigned char 
  7894 ;;		 -> V(94), 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1  [STACK] void 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7901 ;; Tracked objects:
  7902 ;;		On entry : 3F/0
  7903 ;;		On exit  : 3F/3B
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:   13
  7913 ;; This function calls:
  7914 ;;		_eaDogM_WriteString
  7915 ;;		_send_lcd_cmd_dma
  7916 ;; This function is called by:
  7917 ;;		_main
  7918 ;; This function uses a reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text28
  7922  005DA8                     __ptext28:
  7923                           	opt callstack 0
  7924  005DA8                     _eaDogM_WriteStringAtPos:
  7925                           	opt callstack 17
  7926                           
  7927                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7928                           ;stkvar	_c @ sp[(0)+-2]
  7929                           
  7930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7931                           ;incstack = 0
  7932  005DA8  0EFE               	movlw	-2
  7933  005DAA  006F FF8C  F044    	movff	plusw1,btemp+11
  7934                           
  7935                           ;stkvar	_r @ sp[(0)+-1]
  7936  005DB0  0EFF               	movlw	-1
  7937  005DB2  50E3               	movf	plusw1,w,c
  7938  005DB4  0D10               	mullw	16
  7939  005DB6  50F3               	movf	prodl,w,c
  7940  005DB8  2444               	addwf	btemp+11,w,c
  7941  005DBA  0F80               	addlw	128
  7942  005DBC  6EE6               	movwf	postinc1,c
  7943  005DBE  ECC4  F02C         	call	_send_lcd_cmd_dma	;wreg free
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7947                           ;stkvar	_strPtr @ sp[(0)+-3]
  7948  005DC2  0EFD               	movlw	-3
  7949  005DC4  50E3               	movf	plusw1,w,c
  7950  005DC6  6EE6               	movwf	postinc1,c
  7951  005DC8  ECFA  F029         	call	_eaDogM_WriteString	;wreg free
  7952                           
  7953                           ; BSR set to: 59
  7954                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7955  005DCC  52E5               	movf	postdec1,f,c
  7956  005DCE  52E5               	movf	postdec1,f,c
  7957  005DD0  52E5               	movf	postdec1,f,c
  7958  005DD2  0012               	return		;funcret
  7959  005DD4                     __end_of_eaDogM_WriteStringAtPos:
  7960                           	opt callstack 0
  7961                           
  7962 ;; *************** function _eaDogM_WriteString *****************
  7963 ;; Defined at:
  7964 ;;		line 167 in file "eadog.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  strPtr          1  [STACK] PTR unsigned char 
  7967 ;;		 -> V(94), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1  [STACK] void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7974 ;; Tracked objects:
  7975 ;;		On entry : 3F/0
  7976 ;;		On exit  : 3F/3B
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:   12
  7986 ;; This function calls:
  7987 ;;		_printf
  7988 ;;		_ringBufS_flush
  7989 ;;		_start_lcd
  7990 ;;		_strlen
  7991 ;;		_wait_lcd_set
  7992 ;; This function is called by:
  7993 ;;		_eaDogM_WriteStringAtPos
  7994 ;; This function uses a reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text29
  7998  0053F4                     __ptext29:
  7999                           	opt callstack 0
  8000  0053F4                     _eaDogM_WriteString:
  8001                           	opt callstack 17
  8002                           
  8003                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  8004                           
  8005                           ; BSR set to: 59
  8006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8007                           ;incstack = 0
  8008  0053F4  EC49  F032         	call	_wait_lcd_set	;wreg free
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  8012  0053F8  0E00               	movlw	0
  8013  0053FA  6EE6               	movwf	postinc1,c
  8014  0053FC  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  8015  005402  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  8016  005408  ECE0  F02A         	call	_ringBufS_flush	;wreg free
  8017  00540C  94BC               	bcf	16316,2,c	;volatile
  8018                           
  8019                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8020                           ;stkvar	_strPtr @ sp[(0)+-1]
  8021  00540E  0EFF               	movlw	-1
  8022  005410  006F FF8C  F044    	movff	plusw1,btemp+11
  8023  005416  0060  F113  FFE6   	movff	btemp+11,postinc1
  8024  00541C  0E00               	movlw	0
  8025  00541E  6EE6               	movwf	postinc1,c
  8026  005420  EC5A  F029         	call	_strlen	;wreg free
  8027  005424  503A               	movf	btemp+1,w,c
  8028  005426  E104               	bnz	u5210
  8029  005428  0E41               	movlw	65
  8030  00542A  5C39               	subwf	btemp,w,c
  8031  00542C  A0D8               	btfss	status,0,c
  8032  00542E  D008               	goto	l8465
  8033  005430                     u5210:
  8034                           
  8035                           ;stkvar	_strPtr @ sp[(0)+-1]
  8036  005430  0EFF               	movlw	-1
  8037  005432  50E3               	movf	plusw1,w,c
  8038  005434  6ED9               	movwf	fsr2l,c
  8039  005436  6ADA               	clrf	fsr2h,c
  8040  005438  0E40               	movlw	64
  8041  00543A  26D9               	addwf	fsr2l,f,c
  8042  00543C  0E00               	movlw	0
  8043  00543E  6EDF               	movwf	indf2,c
  8044  005440                     l8465:
  8045                           
  8046                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  8047  005440  013B               	movlb	59	; () banked
  8048  005442  9FFC               	bcf	252,7,b	;volatile
  8049                           
  8050                           ; BSR set to: 59
  8051                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  8052                           ;stkvar	_strPtr @ sp[(0)+-1]
  8053  005444  0EFF               	movlw	-1
  8054  005446  006F FF8C  F044    	movff	plusw1,btemp+11
  8055  00544C  0060  F113  FFE6   	movff	btemp+11,postinc1
  8056  005452  0E00               	movlw	0
  8057  005454  6EE6               	movwf	postinc1,c
  8058  005456  EC5A  F029         	call	_strlen	;wreg free
  8059  00545A  0060  F0E7  FBF7   	movff	btemp,15351	;volatile
  8060  005460  0060  F0EB  FBF8   	movff	btemp+1,15352	;volatile
  8061                           
  8062                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  8063  005466  013B               	movlb	59	; () banked
  8064  005468  8FFC               	bsf	252,7,b	;volatile
  8065                           
  8066                           ; BSR set to: 59
  8067                           ;eadog.c: 177:  printf("%s", strPtr);
  8068                           ;stkvar	_strPtr @ sp[(0)+-1]
  8069  00546A  0EFF               	movlw	-1
  8070  00546C  006F FF8C  F044    	movff	plusw1,btemp+11
  8071  005472  0060  F113  FFE6   	movff	btemp+11,postinc1
  8072  005478  0E00               	movlw	0
  8073  00547A  6EE6               	movwf	postinc1,c
  8074  00547C  0EB1               	movlw	(STR_2+9)& (0+255)
  8075  00547E  6EE6               	movwf	postinc1,c
  8076  005480  0E03               	movlw	3
  8077  005482  6EE6               	movwf	postinc1,c
  8078  005484  EC07  F02C         	call	_printf	;wreg free
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;eadog.c: 178:  start_lcd();
  8082  005488  EC4C  F032         	call	_start_lcd	;wreg free
  8083                           
  8084                           ; BSR set to: 59
  8085                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8086  00548C  52E5               	movf	postdec1,f,c
  8087  00548E  0012               	return		;funcret
  8088  005490                     __end_of_eaDogM_WriteString:
  8089                           	opt callstack 0
  8090                           
  8091 ;; *************** function _eaDogM_WriteCommand *****************
  8092 ;; Defined at:
  8093 ;;		line 143 in file "eadog.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;  cmd             1  [STACK] unsigned char 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1  [STACK] void 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8102 ;; Tracked objects:
  8103 ;;		On entry : 3F/3D
  8104 ;;		On exit  : 3F/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;Total ram usage:        0 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:   13
  8114 ;; This function calls:
  8115 ;;		_send_lcd_cmd_dma
  8116 ;; This function is called by:
  8117 ;;		_main
  8118 ;; This function uses a reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text30
  8122  0063F8                     __ptext30:
  8123                           	opt callstack 0
  8124  0063F8                     _eaDogM_WriteCommand:
  8125                           	opt callstack 17
  8126                           
  8127                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8128                           ;stkvar	_cmd @ sp[(0)+-1]
  8129                           
  8130                           ; BSR set to: 59
  8131                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8132                           ;incstack = 0
  8133  0063F8  0EFF               	movlw	-1
  8134  0063FA  50E3               	movf	plusw1,w,c
  8135  0063FC  6EE6               	movwf	postinc1,c
  8136  0063FE  ECC4  F02C         	call	_send_lcd_cmd_dma	;wreg free
  8137                           
  8138                           ; BSR set to: 0
  8139                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8140  006402  52E5               	movf	postdec1,f,c
  8141  006404  0012               	return		;funcret
  8142  006406                     __end_of_eaDogM_WriteCommand:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function _send_lcd_cmd_dma *****************
  8146 ;; Defined at:
  8147 ;;		line 187 in file "eadog.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  strPtr          1  [STACK] unsigned char 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1  [STACK] void 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 3F/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:   12
  8168 ;; This function calls:
  8169 ;;		_printf
  8170 ;;		_ringBufS_flush
  8171 ;;		_start_lcd
  8172 ;;		_wait_lcd_done
  8173 ;;		_wait_lcd_set
  8174 ;; This function is called by:
  8175 ;;		_eaDogM_WriteCommand
  8176 ;;		_eaDogM_WriteStringAtPos
  8177 ;; This function uses a reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text31
  8181  005988                     __ptext31:
  8182                           	opt callstack 0
  8183  005988                     _send_lcd_cmd_dma:
  8184                           	opt callstack 17
  8185                           
  8186                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  8187                           
  8188                           ; BSR set to: 0
  8189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8190                           ;incstack = 0
  8191  005988  EC49  F032         	call	_wait_lcd_set	;wreg free
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  8195  00598C  0E00               	movlw	0
  8196  00598E  6EE6               	movwf	postinc1,c
  8197  005990  0060  F347  FFE6   	movff	_spi_link+6,postinc1
  8198  005996  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
  8199  00599C  ECE0  F02A         	call	_ringBufS_flush	;wreg free
  8200  0059A0  92BC               	bcf	16316,1,c	;volatile
  8201  0059A2  94BC               	bcf	16316,2,c	;volatile
  8202                           
  8203                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  8204  0059A4  013B               	movlb	59	; () banked
  8205  0059A6  9FFC               	bcf	252,7,b	;volatile
  8206                           
  8207                           ; BSR set to: 59
  8208                           ;eadog.c: 195:  DMA1SSZ = 1;
  8209  0059A8  0E00               	movlw	0
  8210  0059AA  6FF8               	movwf	248,b	;volatile
  8211  0059AC  0E01               	movlw	1
  8212  0059AE  6FF7               	movwf	247,b	;volatile
  8213                           
  8214                           ; BSR set to: 59
  8215                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  8216  0059B0  8FFC               	bsf	252,7,b	;volatile
  8217                           
  8218                           ; BSR set to: 59
  8219                           ;eadog.c: 197:  printf("%c", strPtr);
  8220                           ;stkvar	_strPtr @ sp[(0)+-1]
  8221  0059B2  0EFF               	movlw	-1
  8222  0059B4  50E3               	movf	plusw1,w,c
  8223  0059B6  6EE6               	movwf	postinc1,c
  8224  0059B8  0E00               	movlw	0
  8225  0059BA  6EE6               	movwf	postinc1,c
  8226  0059BC  0ECC               	movlw	STR_17& (0+255)
  8227  0059BE  6EE6               	movwf	postinc1,c
  8228  0059C0  0E03               	movlw	3
  8229  0059C2  6EE6               	movwf	postinc1,c
  8230  0059C4  EC07  F02C         	call	_printf	;wreg free
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;eadog.c: 198:  start_lcd();
  8234  0059C8  EC4C  F032         	call	_start_lcd	;wreg free
  8235                           
  8236                           ; BSR set to: 59
  8237                           ;eadog.c: 199:  wait_lcd_done();
  8238  0059CC  EC8A  F031         	call	_wait_lcd_done	;wreg free
  8239                           
  8240                           ; BSR set to: 0
  8241  0059D0  82BC               	bsf	16316,1,c	;volatile
  8242                           
  8243                           ; BSR set to: 0
  8244                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8245  0059D2  52E5               	movf	postdec1,f,c
  8246  0059D4  0012               	return		;funcret
  8247  0059D6                     __end_of_send_lcd_cmd_dma:
  8248                           	opt callstack 0
  8249                           
  8250 ;; *************** function _wait_lcd_set *****************
  8251 ;; Defined at:
  8252 ;;		line 114 in file "eadog.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1  [STACK] void 
  8259 ;; Registers used:
  8260 ;;		None
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 3F/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    3
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_eaDogM_WriteString
  8277 ;;		_send_lcd_cmd_dma
  8278 ;; This function uses a reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text32
  8282  006492                     __ptext32:
  8283                           	opt callstack 0
  8284  006492                     _wait_lcd_set:
  8285                           	opt callstack 25
  8286                           
  8287                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8288                           
  8289                           ; BSR set to: 0
  8290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8291                           ;incstack = 0
  8292  006492  0100               	movlb	0	; () banked
  8293  006494  87CB               	bsf	_spi_link& (0+255),3,b	;volatile
  8294                           
  8295                           ; BSR set to: 0
  8296                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8297  006496  0012               	return		;funcret
  8298  006498                     __end_of_wait_lcd_set:
  8299                           	opt callstack 0
  8300                           
  8301 ;; *************** function _wait_lcd_done *****************
  8302 ;; Defined at:
  8303 ;;		line 124 in file "eadog.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1  [STACK] void 
  8310 ;; Registers used:
  8311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8312 ;; Tracked objects:
  8313 ;;		On entry : 4/0
  8314 ;;		On exit  : 3F/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8321 ;;Total ram usage:        0 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    4
  8324 ;; This function calls:
  8325 ;;		_wdtdelay
  8326 ;; This function is called by:
  8327 ;;		_main
  8328 ;;		_send_lcd_cmd_dma
  8329 ;; This function uses a reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text33
  8333  006314                     __ptext33:
  8334                           	opt callstack 0
  8335  006314                     _wait_lcd_done:
  8336                           	opt callstack 26
  8337                           
  8338                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8339                           
  8340                           ; BSR set to: 0
  8341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8342                           ;incstack = 0
  8343  006314  0100               	movlb	0	; () banked
  8344  006316  B7CB               	btfsc	_spi_link& (0+255),3,b	;volatile
  8345  006318  D7FD               	goto	_wait_lcd_done
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;eadog.c: 127:  wdtdelay(50);
  8349  00631A  0E32               	movlw	50
  8350  00631C  6EE6               	movwf	postinc1,c
  8351  00631E  0E00               	movlw	0
  8352  006320  6EE6               	movwf	postinc1,c
  8353  006322  0E00               	movlw	0
  8354  006324  6EE6               	movwf	postinc1,c
  8355  006326  0E00               	movlw	0
  8356  006328  6EE6               	movwf	postinc1,c
  8357  00632A  EC96  F02C         	call	_wdtdelay	;wreg free
  8358                           
  8359                           ; BSR set to: 0
  8360                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8361  00632E  0012               	return		;funcret
  8362  006330                     __end_of_wait_lcd_done:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function _wdtdelay *****************
  8366 ;; Defined at:
  8367 ;;		line 21 in file "eadog.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  delay           4  [STACK] unsigned long 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1  [STACK] void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 3F/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;Total ram usage:        0 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    3
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_init_display
  8392 ;;		_send_lcd_cmd
  8393 ;;		_send_lcd_cmd_long
  8394 ;;		_wait_lcd_done
  8395 ;; This function uses a reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text34
  8399  00592C                     __ptext34:
  8400                           	opt callstack 0
  8401  00592C                     _wdtdelay:
  8402                           	opt callstack 26
  8403                           
  8404                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8405                           
  8406                           ; BSR set to: 0
  8407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8408                           ;incstack = 0
  8409  00592C  0100               	movlb	0	; () banked
  8410  00592E  6BEA               	clrf	wdtdelay@dcount& (0+255),b
  8411  005930  6BEB               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8412  005932  6BEC               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8413  005934  6BED               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8414  005936  D009               	goto	l5697
  8415  005938                     l1355:
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;eadog.c: 26:   __nop();
  8419  005938  F000               	nop	
  8420  00593A  0004               	clrwdt		;# 
  8421                           
  8422                           ;eadog.c: 28:  };
  8423  00593C  0E01               	movlw	1
  8424  00593E  0100               	movlb	0	; () banked
  8425  005940  27EA               	addwf	wdtdelay@dcount& (0+255),f,b
  8426  005942  0E00               	movlw	0
  8427  005944  23EB               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8428  005946  23EC               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8429  005948  23ED               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8430  00594A                     l5697:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;stkvar	_delay @ sp[(0)+-4]
  8434  00594A  0EFC               	movlw	-4
  8435  00594C  006F FF8C  F039    	movff	plusw1,btemp
  8436  005952  51EA               	movf	wdtdelay@dcount& (0+255),w,b
  8437  005954  5C39               	subwf	btemp,w,c
  8438  005956  0EFD               	movlw	-3
  8439  005958  006F FF8C  F039    	movff	plusw1,btemp
  8440  00595E  51EB               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8441  005960  5839               	subwfb	btemp,w,c
  8442  005962  0EFE               	movlw	-2
  8443  005964  006F FF8C  F039    	movff	plusw1,btemp
  8444  00596A  51EC               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8445  00596C  5839               	subwfb	btemp,w,c
  8446  00596E  0EFF               	movlw	-1
  8447  005970  006F FF8C  F039    	movff	plusw1,btemp
  8448  005976  51ED               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8449  005978  5839               	subwfb	btemp,w,c
  8450  00597A  B0D8               	btfsc	status,0,c
  8451  00597C  D7DD               	goto	l1355
  8452                           
  8453                           ; BSR set to: 0
  8454                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8455  00597E  52E5               	movf	postdec1,f,c
  8456  005980  52E5               	movf	postdec1,f,c
  8457  005982  52E5               	movf	postdec1,f,c
  8458  005984  52E5               	movf	postdec1,f,c
  8459  005986  0012               	return		;funcret
  8460  005988                     __end_of_wdtdelay:
  8461                           	opt callstack 0
  8462                           
  8463 ;; *************** function _start_lcd *****************
  8464 ;; Defined at:
  8465 ;;		line 109 in file "eadog.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;		None
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;		None
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1  [STACK] void 
  8472 ;; Registers used:
  8473 ;;		None
  8474 ;; Tracked objects:
  8475 ;;		On entry : 3F/0
  8476 ;;		On exit  : 3F/3B
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8483 ;;Total ram usage:        0 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:    3
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_eaDogM_WriteString
  8490 ;;		_send_lcd_cmd_dma
  8491 ;; This function uses a reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text35
  8495  006498                     __ptext35:
  8496                           	opt callstack 0
  8497  006498                     _start_lcd:
  8498                           	opt callstack 25
  8499                           
  8500                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8501                           
  8502                           ; BSR set to: 0
  8503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8504                           ;incstack = 0
  8505  006498  013B               	movlb	59	; () banked
  8506  00649A  8DFC               	bsf	252,6,b	;volatile
  8507                           
  8508                           ; BSR set to: 59
  8509                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8510  00649C  0012               	return		;funcret
  8511  00649E                     __end_of_start_lcd:
  8512                           	opt callstack 0
  8513                           
  8514 ;; *************** function _ringBufS_flush *****************
  8515 ;; Defined at:
  8516 ;;		line 76 in file "ringbufs.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8519 ;;		 -> ring_buf1(67), 
  8520 ;;  clearBuffer     1  [STACK] const char 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1  [STACK] void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8527 ;; Tracked objects:
  8528 ;;		On entry : 3F/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    4
  8539 ;; This function calls:
  8540 ;;		_memset
  8541 ;; This function is called by:
  8542 ;;		_eaDogM_WriteString
  8543 ;;		_send_lcd_cmd_dma
  8544 ;; This function uses a reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text36
  8548  0055C0                     __ptext36:
  8549                           	opt callstack 0
  8550  0055C0                     _ringBufS_flush:
  8551                           	opt callstack 24
  8552                           
  8553                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8554                           ;stkvar	__this @ sp[(0)+-2]
  8555                           
  8556                           ; BSR set to: 59
  8557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8558                           ;incstack = 0
  8559  0055C0  0EFE               	movlw	-2
  8560  0055C2  006F FF8C  F043    	movff	plusw1,btemp+10
  8561  0055C8  0EFF               	movlw	-1
  8562  0055CA  006F FF8C  F044    	movff	plusw1,btemp+11
  8563  0055D0  0E42               	movlw	66
  8564  0055D2  2443               	addwf	btemp+10,w,c
  8565  0055D4  6ED9               	movwf	fsr2l,c
  8566  0055D6  0E00               	movlw	0
  8567  0055D8  2044               	addwfc	btemp+11,w,c
  8568  0055DA  6EDA               	movwf	fsr2h,c
  8569  0055DC  0E00               	movlw	0
  8570  0055DE  6EDF               	movwf	indf2,c
  8571                           
  8572                           ;ringbufs.c: 79:  _this->head = 0;
  8573                           ;stkvar	__this @ sp[(0)+-2]
  8574  0055E0  0EFE               	movlw	-2
  8575  0055E2  006F FF8C  F043    	movff	plusw1,btemp+10
  8576  0055E8  0EFF               	movlw	-1
  8577  0055EA  006F FF8C  F044    	movff	plusw1,btemp+11
  8578  0055F0  0E40               	movlw	64
  8579  0055F2  2443               	addwf	btemp+10,w,c
  8580  0055F4  6ED9               	movwf	fsr2l,c
  8581  0055F6  0E00               	movlw	0
  8582  0055F8  2044               	addwfc	btemp+11,w,c
  8583  0055FA  6EDA               	movwf	fsr2h,c
  8584  0055FC  0E00               	movlw	0
  8585  0055FE  6EDF               	movwf	indf2,c
  8586                           
  8587                           ;ringbufs.c: 80:  _this->tail = 0;
  8588                           ;stkvar	__this @ sp[(0)+-2]
  8589  005600  0EFE               	movlw	-2
  8590  005602  006F FF8C  F043    	movff	plusw1,btemp+10
  8591  005608  0EFF               	movlw	-1
  8592  00560A  006F FF8C  F044    	movff	plusw1,btemp+11
  8593  005610  0E41               	movlw	65
  8594  005612  2443               	addwf	btemp+10,w,c
  8595  005614  6ED9               	movwf	fsr2l,c
  8596  005616  0E00               	movlw	0
  8597  005618  2044               	addwfc	btemp+11,w,c
  8598  00561A  6EDA               	movwf	fsr2h,c
  8599  00561C  0E00               	movlw	0
  8600  00561E  6EDF               	movwf	indf2,c
  8601                           
  8602                           ;ringbufs.c: 81:  if (clearBuffer) {
  8603                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8604  005620  0EFD               	movlw	-3
  8605  005622  50E3               	movf	plusw1,w,c
  8606  005624  B4D8               	btfsc	status,2,c
  8607  005626  D011               	goto	l1491
  8608                           
  8609                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8610  005628  0E40               	movlw	64
  8611  00562A  6EE6               	movwf	postinc1,c
  8612  00562C  0E00               	movlw	0
  8613  00562E  6EE6               	movwf	postinc1,c
  8614  005630  0E00               	movlw	0
  8615  005632  6EE6               	movwf	postinc1,c
  8616  005634  0E00               	movlw	0
  8617  005636  6EE6               	movwf	postinc1,c
  8618                           
  8619                           ;stkvar	__this @ sp[(-4)+-2]
  8620  005638  0EFA               	movlw	-6
  8621  00563A  006F FF8F FFE6     	movff	plusw1,postinc1
  8622  005640  006F FF8F FFE6     	movff	plusw1,postinc1
  8623  005646  ECCD  F01B         	call	_memset	;wreg free
  8624  00564A                     l1491:
  8625                           
  8626                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8627  00564A  52E5               	movf	postdec1,f,c
  8628  00564C  52E5               	movf	postdec1,f,c
  8629  00564E  52E5               	movf	postdec1,f,c
  8630  005650  0012               	return		;funcret
  8631  005652                     __end_of_ringBufS_flush:
  8632                           	opt callstack 0
  8633                           
  8634 ;; *************** function _memset *****************
  8635 ;; Defined at:
  8636 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  dest            2  [STACK] PTR void 
  8639 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8640 ;;  c               2  [STACK] int 
  8641 ;;  n               2  [STACK] unsigned int 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  s               2  [STACK] PTR unsigned char 
  8644 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8645 ;;  k               2  [STACK] unsigned int 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  2  [STACK] PTR void 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8659 ;;Total ram usage:        0 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    3
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_ringBufS_init
  8666 ;;		_ringBufS_flush
  8667 ;; This function uses a reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text37
  8671  00379A                     __ptext37:
  8672                           	opt callstack 0
  8673  00379A                     _memset:
  8674                           	opt callstack 0
  8675                           
  8676                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8677  00379A  52E6               	movf	postinc1,f,c
  8678  00379C  52E6               	movf	postinc1,f,c
  8679  00379E  52E6               	movf	postinc1,f,c
  8680  0037A0  52E6               	movf	postinc1,f,c
  8681                           
  8682                           ;stkvar	_dest @ sp[(-4)+-2]
  8683                           
  8684                           ;incstack = 0
  8685  0037A2  0EFA               	movlw	-6
  8686  0037A4  006F FF8C  F043    	movff	plusw1,btemp+10
  8687  0037AA  0EFB               	movlw	-5
  8688  0037AC  006F FF8C  F044    	movff	plusw1,btemp+11
  8689                           
  8690                           ;stkvar	_s @ sp[(-4)+0]
  8691  0037B2  0EFD               	movlw	-3
  8692  0037B4  0060  F113  FFE3   	movff	btemp+11,plusw1
  8693  0037BA  0EFC               	movlw	-4
  8694  0037BC  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8695                           
  8696                           ;stkvar	_n @ sp[(-4)+-6]
  8697  0037C2  0EF6               	movlw	-10
  8698  0037C4  006F FF8C  F039    	movff	plusw1,btemp
  8699  0037CA  0EF7               	movlw	-9
  8700  0037CC  50E3               	movf	plusw1,w,c
  8701  0037CE  1039               	iorwf	btemp,w,c
  8702  0037D0  B4D8               	btfsc	status,2,c
  8703  0037D2  D154               	goto	u5170
  8704                           
  8705                           ;stkvar	_c @ sp[(-4)+-4]
  8706                           ;stkvar	_s @ sp[(-4)+0]
  8707  0037D4  0EFC               	movlw	-4
  8708  0037D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8709  0037DC  0EFD               	movlw	-3
  8710  0037DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8711  0037E4  0EF8               	movlw	-8
  8712  0037E6  006F FF8F FFDF     	movff	plusw1,indf2
  8713                           
  8714                           ;stkvar	_c @ sp[(-4)+-4]
  8715                           ;stkvar	_n @ sp[(-4)+-6]
  8716                           ;stkvar	_s @ sp[(-4)+0]
  8717  0037EC  0EFC               	movlw	-4
  8718  0037EE  006F FF8C  F043    	movff	plusw1,btemp+10
  8719  0037F4  0EFD               	movlw	-3
  8720  0037F6  006F FF8C  F044    	movff	plusw1,btemp+11
  8721  0037FC  0EF6               	movlw	-10
  8722  0037FE  50E3               	movf	plusw1,w,c
  8723  003800  2643               	addwf	btemp+10,f,c
  8724  003802  0EF7               	movlw	-9
  8725  003804  50E3               	movf	plusw1,w,c
  8726  003806  2244               	addwfc	btemp+11,f,c
  8727  003808  0EFF               	movlw	255
  8728  00380A  2443               	addwf	btemp+10,w,c
  8729  00380C  6ED9               	movwf	fsr2l,c
  8730  00380E  0EFF               	movlw	255
  8731  003810  2044               	addwfc	btemp+11,w,c
  8732  003812  6EDA               	movwf	fsr2h,c
  8733  003814  0EF8               	movlw	-8
  8734  003816  006F FF8F FFDF     	movff	plusw1,indf2
  8735                           
  8736                           ;stkvar	_n @ sp[(-4)+-6]
  8737  00381C  0EF7               	movlw	-9
  8738  00381E  50E3               	movf	plusw1,w,c
  8739  003820  E108               	bnz	l8351
  8740  003822  0EF6               	movlw	-10
  8741  003824  006F FF8C  F039    	movff	plusw1,btemp
  8742  00382A  0E03               	movlw	3
  8743  00382C  5E39               	subwf	btemp,f,c
  8744  00382E  A0D8               	btfss	status,0,c
  8745  003830  D125               	goto	u5170
  8746  003832                     l8351:
  8747                           
  8748                           ;stkvar	_c @ sp[(-4)+-4]
  8749                           ;stkvar	_s @ sp[(-4)+0]
  8750  003832  0EFC               	movlw	-4
  8751  003834  006F FF8C  F043    	movff	plusw1,btemp+10
  8752  00383A  0EFD               	movlw	-3
  8753  00383C  006F FF8C  F044    	movff	plusw1,btemp+11
  8754  003842  0E01               	movlw	1
  8755  003844  2443               	addwf	btemp+10,w,c
  8756  003846  6ED9               	movwf	fsr2l,c
  8757  003848  0E00               	movlw	0
  8758  00384A  2044               	addwfc	btemp+11,w,c
  8759  00384C  6EDA               	movwf	fsr2h,c
  8760  00384E  0EF8               	movlw	-8
  8761  003850  006F FF8F FFDF     	movff	plusw1,indf2
  8762                           
  8763                           ;stkvar	_c @ sp[(-4)+-4]
  8764                           ;stkvar	_s @ sp[(-4)+0]
  8765  003856  0EFC               	movlw	-4
  8766  003858  006F FF8C  F043    	movff	plusw1,btemp+10
  8767  00385E  0EFD               	movlw	-3
  8768  003860  006F FF8C  F044    	movff	plusw1,btemp+11
  8769  003866  0E02               	movlw	2
  8770  003868  2443               	addwf	btemp+10,w,c
  8771  00386A  6ED9               	movwf	fsr2l,c
  8772  00386C  0E00               	movlw	0
  8773  00386E  2044               	addwfc	btemp+11,w,c
  8774  003870  6EDA               	movwf	fsr2h,c
  8775  003872  0EF8               	movlw	-8
  8776  003874  006F FF8F FFDF     	movff	plusw1,indf2
  8777                           
  8778                           ;stkvar	_c @ sp[(-4)+-4]
  8779                           ;stkvar	_n @ sp[(-4)+-6]
  8780                           ;stkvar	_s @ sp[(-4)+0]
  8781  00387A  0EFC               	movlw	-4
  8782  00387C  006F FF8C  F043    	movff	plusw1,btemp+10
  8783  003882  0EFD               	movlw	-3
  8784  003884  006F FF8C  F044    	movff	plusw1,btemp+11
  8785  00388A  0EF6               	movlw	-10
  8786  00388C  50E3               	movf	plusw1,w,c
  8787  00388E  2643               	addwf	btemp+10,f,c
  8788  003890  0EF7               	movlw	-9
  8789  003892  50E3               	movf	plusw1,w,c
  8790  003894  2244               	addwfc	btemp+11,f,c
  8791  003896  0EFE               	movlw	254
  8792  003898  2443               	addwf	btemp+10,w,c
  8793  00389A  6ED9               	movwf	fsr2l,c
  8794  00389C  0EFF               	movlw	255
  8795  00389E  2044               	addwfc	btemp+11,w,c
  8796  0038A0  6EDA               	movwf	fsr2h,c
  8797  0038A2  0EF8               	movlw	-8
  8798  0038A4  006F FF8F FFDF     	movff	plusw1,indf2
  8799                           
  8800                           ;stkvar	_c @ sp[(-4)+-4]
  8801                           ;stkvar	_n @ sp[(-4)+-6]
  8802                           ;stkvar	_s @ sp[(-4)+0]
  8803  0038AA  0EFC               	movlw	-4
  8804  0038AC  006F FF8C  F043    	movff	plusw1,btemp+10
  8805  0038B2  0EFD               	movlw	-3
  8806  0038B4  006F FF8C  F044    	movff	plusw1,btemp+11
  8807  0038BA  0EF6               	movlw	-10
  8808  0038BC  50E3               	movf	plusw1,w,c
  8809  0038BE  2643               	addwf	btemp+10,f,c
  8810  0038C0  0EF7               	movlw	-9
  8811  0038C2  50E3               	movf	plusw1,w,c
  8812  0038C4  2244               	addwfc	btemp+11,f,c
  8813  0038C6  0EFD               	movlw	253
  8814  0038C8  2443               	addwf	btemp+10,w,c
  8815  0038CA  6ED9               	movwf	fsr2l,c
  8816  0038CC  0EFF               	movlw	255
  8817  0038CE  2044               	addwfc	btemp+11,w,c
  8818  0038D0  6EDA               	movwf	fsr2h,c
  8819  0038D2  0EF8               	movlw	-8
  8820  0038D4  006F FF8F FFDF     	movff	plusw1,indf2
  8821                           
  8822                           ;stkvar	_n @ sp[(-4)+-6]
  8823  0038DA  0EF7               	movlw	-9
  8824  0038DC  50E3               	movf	plusw1,w,c
  8825  0038DE  E108               	bnz	l8357
  8826  0038E0  0EF6               	movlw	-10
  8827  0038E2  006F FF8C  F039    	movff	plusw1,btemp
  8828  0038E8  0E07               	movlw	7
  8829  0038EA  5E39               	subwf	btemp,f,c
  8830  0038EC  A0D8               	btfss	status,0,c
  8831  0038EE  D0C6               	goto	u5170
  8832  0038F0                     l8357:
  8833                           
  8834                           ;stkvar	_c @ sp[(-4)+-4]
  8835                           ;stkvar	_s @ sp[(-4)+0]
  8836  0038F0  0EFC               	movlw	-4
  8837  0038F2  006F FF8C  F043    	movff	plusw1,btemp+10
  8838  0038F8  0EFD               	movlw	-3
  8839  0038FA  006F FF8C  F044    	movff	plusw1,btemp+11
  8840  003900  0E03               	movlw	3
  8841  003902  2443               	addwf	btemp+10,w,c
  8842  003904  6ED9               	movwf	fsr2l,c
  8843  003906  0E00               	movlw	0
  8844  003908  2044               	addwfc	btemp+11,w,c
  8845  00390A  6EDA               	movwf	fsr2h,c
  8846  00390C  0EF8               	movlw	-8
  8847  00390E  006F FF8F FFDF     	movff	plusw1,indf2
  8848                           
  8849                           ;stkvar	_c @ sp[(-4)+-4]
  8850                           ;stkvar	_n @ sp[(-4)+-6]
  8851                           ;stkvar	_s @ sp[(-4)+0]
  8852  003914  0EFC               	movlw	-4
  8853  003916  006F FF8C  F043    	movff	plusw1,btemp+10
  8854  00391C  0EFD               	movlw	-3
  8855  00391E  006F FF8C  F044    	movff	plusw1,btemp+11
  8856  003924  0EF6               	movlw	-10
  8857  003926  50E3               	movf	plusw1,w,c
  8858  003928  2643               	addwf	btemp+10,f,c
  8859  00392A  0EF7               	movlw	-9
  8860  00392C  50E3               	movf	plusw1,w,c
  8861  00392E  2244               	addwfc	btemp+11,f,c
  8862  003930  0EFC               	movlw	252
  8863  003932  2443               	addwf	btemp+10,w,c
  8864  003934  6ED9               	movwf	fsr2l,c
  8865  003936  0EFF               	movlw	255
  8866  003938  2044               	addwfc	btemp+11,w,c
  8867  00393A  6EDA               	movwf	fsr2h,c
  8868  00393C  0EF8               	movlw	-8
  8869  00393E  006F FF8F FFDF     	movff	plusw1,indf2
  8870                           
  8871                           ;stkvar	_n @ sp[(-4)+-6]
  8872  003944  0EF7               	movlw	-9
  8873  003946  50E3               	movf	plusw1,w,c
  8874  003948  E108               	bnz	l8363
  8875  00394A  0EF6               	movlw	-10
  8876  00394C  006F FF8C  F039    	movff	plusw1,btemp
  8877  003952  0E09               	movlw	9
  8878  003954  5E39               	subwf	btemp,f,c
  8879  003956  A0D8               	btfss	status,0,c
  8880  003958  D091               	goto	u5170
  8881  00395A                     l8363:
  8882                           
  8883                           ;stkvar	_s @ sp[(-4)+0]
  8884  00395A  0EFC               	movlw	-4
  8885  00395C  006F FF8C  F043    	movff	plusw1,btemp+10
  8886  003962  1E43               	comf	btemp+10,f,c
  8887  003964  0EFD               	movlw	-3
  8888  003966  006F FF8C  F044    	movff	plusw1,btemp+11
  8889  00396C  1E44               	comf	btemp+11,f,c
  8890  00396E  2A43               	incf	btemp+10,f,c
  8891  003970  B4D8               	btfsc	status,2,c
  8892  003972  2A44               	incf	btemp+11,f,c
  8893  003974  0E03               	movlw	3
  8894  003976  1643               	andwf	btemp+10,f,c
  8895  003978  0E00               	movlw	0
  8896  00397A  1644               	andwf	btemp+11,f,c
  8897                           
  8898                           ;stkvar	_k @ sp[(-4)+2]
  8899  00397C  0EFE               	movlw	-2
  8900  00397E  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8901  003984  0EFF               	movlw	-1
  8902  003986  0060  F113  FFE3   	movff	btemp+11,plusw1
  8903                           
  8904                           ;stkvar	_k @ sp[(-4)+2]
  8905                           ;stkvar	_s @ sp[(-4)+0]
  8906  00398C  0EFC               	movlw	-4
  8907  00398E  50E3               	movf	plusw1,w,c
  8908  003990  6E39               	movwf	btemp,c
  8909  003992  0EFE               	movlw	-2
  8910  003994  50E3               	movf	plusw1,w,c
  8911  003996  2639               	addwf	btemp,f,c
  8912  003998  0EFC               	movlw	-4
  8913  00399A  0060  F0E7  FFE3   	movff	btemp,plusw1
  8914  0039A0  0EFD               	movlw	-3
  8915  0039A2  50E3               	movf	plusw1,w,c
  8916  0039A4  6E39               	movwf	btemp,c
  8917  0039A6  0EFF               	movlw	-1
  8918  0039A8  50E3               	movf	plusw1,w,c
  8919  0039AA  2239               	addwfc	btemp,f,c
  8920  0039AC  0EFD               	movlw	-3
  8921  0039AE  0060  F0E7  FFE3   	movff	btemp,plusw1
  8922                           
  8923                           ;stkvar	_k @ sp[(-4)+2]
  8924                           ;stkvar	_n @ sp[(-4)+-6]
  8925  0039B4  0EF6               	movlw	-10
  8926  0039B6  50E3               	movf	plusw1,w,c
  8927  0039B8  6E39               	movwf	btemp,c
  8928  0039BA  0EFE               	movlw	-2
  8929  0039BC  50E3               	movf	plusw1,w,c
  8930  0039BE  5E39               	subwf	btemp,f,c
  8931  0039C0  0EF6               	movlw	-10
  8932  0039C2  0060  F0E7  FFE3   	movff	btemp,plusw1
  8933  0039C8  0EF7               	movlw	-9
  8934  0039CA  50E3               	movf	plusw1,w,c
  8935  0039CC  6E39               	movwf	btemp,c
  8936  0039CE  0EFF               	movlw	-1
  8937  0039D0  50E3               	movf	plusw1,w,c
  8938  0039D2  5A39               	subwfb	btemp,f,c
  8939  0039D4  0EF7               	movlw	-9
  8940  0039D6  0060  F0E7  FFE3   	movff	btemp,plusw1
  8941  0039DC  0EFC               	movlw	252
  8942  0039DE  6E43               	movwf	btemp+10,c
  8943  0039E0  0EFF               	movlw	255
  8944  0039E2  6E44               	movwf	btemp+11,c
  8945                           
  8946                           ;stkvar	_n @ sp[(-4)+-6]
  8947  0039E4  0EF6               	movlw	-10
  8948  0039E6  006F FF8C  F039    	movff	plusw1,btemp
  8949  0039EC  5043               	movf	btemp+10,w,c
  8950  0039EE  1639               	andwf	btemp,f,c
  8951  0039F0  0EF6               	movlw	-10
  8952  0039F2  0060  F0E7  FFE3   	movff	btemp,plusw1
  8953  0039F8  0EF7               	movlw	-9
  8954  0039FA  006F FF8C  F039    	movff	plusw1,btemp
  8955  003A00  5044               	movf	btemp+11,w,c
  8956  003A02  1639               	andwf	btemp,f,c
  8957  003A04  0EF7               	movlw	-9
  8958  003A06  D02E               	goto	L23
  8959  003A08                     l8371:
  8960                           
  8961                           ;stkvar	_c @ sp[(-4)+-4]
  8962                           ;stkvar	_s @ sp[(-4)+0]
  8963  003A08  0EFC               	movlw	-4
  8964  003A0A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8965  003A10  0EFD               	movlw	-3
  8966  003A12  006F FF8F FFDA     	movff	plusw1,fsr2h
  8967  003A18  0EF8               	movlw	-8
  8968  003A1A  006F FF8F FFDF     	movff	plusw1,indf2
  8969                           
  8970                           ;stkvar	_n @ sp[(-4)+-6]
  8971  003A20  0EF6               	movlw	-10
  8972  003A22  006F FF8C  F039    	movff	plusw1,btemp
  8973  003A28  0E01               	movlw	1
  8974  003A2A  5E39               	subwf	btemp,f,c
  8975  003A2C  0EF6               	movlw	-10
  8976  003A2E  0060  F0E7  FFE3   	movff	btemp,plusw1
  8977  003A34  0EF7               	movlw	-9
  8978  003A36  006F FF8C  F039    	movff	plusw1,btemp
  8979  003A3C  0E00               	movlw	0
  8980  003A3E  5A39               	subwfb	btemp,f,c
  8981  003A40  0EF7               	movlw	-9
  8982  003A42  0060  F0E7  FFE3   	movff	btemp,plusw1
  8983                           
  8984                           ;stkvar	_s @ sp[(-4)+0]
  8985  003A48  0EFC               	movlw	-4
  8986  003A4A  50E3               	movf	plusw1,w,c
  8987  003A4C  0F01               	addlw	1
  8988  003A4E  6E39               	movwf	btemp,c
  8989  003A50  0EFC               	movlw	-4
  8990  003A52  0060  F0E7  FFE3   	movff	btemp,plusw1
  8991  003A58  6A39               	clrf	btemp,c
  8992  003A5A  0EFD               	movlw	-3
  8993  003A5C  50E3               	movf	plusw1,w,c
  8994  003A5E  2039               	addwfc	btemp,w,c
  8995  003A60  6E39               	movwf	btemp,c
  8996  003A62  0EFD               	movlw	-3
  8997  003A64                     L23:
  8998  003A64  0060  F0E7  FFE3   	movff	btemp,plusw1
  8999                           
  9000                           ;stkvar	_n @ sp[(-4)+-6]
  9001  003A6A  0EF6               	movlw	-10
  9002  003A6C  006F FF8C  F039    	movff	plusw1,btemp
  9003  003A72  0EF7               	movlw	-9
  9004  003A74  50E3               	movf	plusw1,w,c
  9005  003A76  1039               	iorwf	btemp,w,c
  9006  003A78  A4D8               	btfss	status,2,c
  9007  003A7A  D7C6               	goto	l8371
  9008  003A7C                     u5170:
  9009                           
  9010                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9011  003A7C  0EF6               	movlw	246
  9012  003A7E  26E1               	addwf	fsr1l,f,c
  9013  003A80  0EFF               	movlw	255
  9014  003A82  22E2               	addwfc	fsr1h,f,c
  9015  003A84  0012               	return		;funcret
  9016  003A86                     __end_of_memset:
  9017                           	opt callstack 0
  9018                           
  9019 ;; *************** function _printf *****************
  9020 ;; Defined at:
  9021 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  fmt             1  [STACK] PTR const unsigned char 
  9024 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  ap              2  [STACK] PTR void [1]
  9027 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9028 ;;  ret             2    0        int 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  2  [STACK] int 
  9031 ;; Registers used:
  9032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9033 ;; Tracked objects:
  9034 ;;		On entry : 3F/3B
  9035 ;;		On exit  : 3F/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:   11
  9045 ;; This function calls:
  9046 ;;		_vfprintf
  9047 ;; This function is called by:
  9048 ;;		_eaDogM_WriteString
  9049 ;;		_send_lcd_cmd_dma
  9050 ;; This function uses a reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text38
  9054  00580E                     __ptext38:
  9055                           	opt callstack 0
  9056  00580E                     _printf:
  9057                           	opt callstack 0
  9058                           
  9059                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9060  00580E  52E6               	movf	postinc1,f,c
  9061  005810  52E6               	movf	postinc1,f,c
  9062                           
  9063                           ;stkvar	?_printf @ sp[(-2)+-3]
  9064                           
  9065                           ;incstack = 0
  9066  005812  0EFB               	movlw	251
  9067  005814  24E1               	addwf	fsr1l,w,c
  9068  005816  6E43               	movwf	btemp+10,c
  9069  005818  0EFF               	movlw	255
  9070  00581A  20E2               	addwfc	fsr1h,w,c
  9071  00581C  6E44               	movwf	btemp+11,c
  9072  00581E  0E01               	movlw	1
  9073  005820  2643               	addwf	btemp+10,f,c
  9074  005822  0E00               	movlw	0
  9075  005824  2244               	addwfc	btemp+11,f,c
  9076                           
  9077                           ;stkvar	_ap @ sp[(-2)+0]
  9078  005826  0EFF               	movlw	-1
  9079  005828  0060  F113  FFE3   	movff	btemp+11,plusw1
  9080  00582E  0EFE               	movlw	-2
  9081  005830  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9082                           
  9083                           ;stkvar	_ap @ sp[(-2)+0]
  9084  005836  0EFE               	movlw	254
  9085  005838  24E1               	addwf	fsr1l,w,c
  9086  00583A  6E39               	movwf	btemp,c
  9087  00583C  0EFF               	movlw	255
  9088  00583E  20E2               	addwfc	fsr1h,w,c
  9089  005840  6E3A               	movwf	btemp+1,c
  9090  005842  0060  F0E7  FFE6   	movff	btemp,postinc1
  9091  005848  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9092                           
  9093                           ;stkvar	_fmt @ sp[(-4)+-2]
  9094  00584E  0EFA               	movlw	-6
  9095  005850  50E3               	movf	plusw1,w,c
  9096  005852  6EE6               	movwf	postinc1,c
  9097  005854  0E00               	movlw	0
  9098  005856  6EE6               	movwf	postinc1,c
  9099  005858  0E00               	movlw	0
  9100  00585A  6EE6               	movwf	postinc1,c
  9101  00585C  EC48  F02A         	call	_vfprintf	;wreg free
  9102                           
  9103                           ; BSR set to: 0
  9104                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9105  005860  52E5               	movf	postdec1,f,c
  9106  005862  52E5               	movf	postdec1,f,c
  9107  005864  52E5               	movf	postdec1,f,c
  9108  005866  50E7               	movf	indf1,w,c
  9109  005868  5EE1               	subwf	fsr1l,f,c
  9110  00586A  0E00               	movlw	0
  9111  00586C  5AE2               	subwfb	fsr1h,f,c
  9112  00586E  0012               	return		;funcret
  9113  005870                     __end_of_printf:
  9114                           	opt callstack 0
  9115                           
  9116 ;; *************** function _vfprintf *****************
  9117 ;; Defined at:
  9118 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9121 ;;		 -> f(5), NULL(0), 
  9122 ;;  fmt             1  [STACK] PTR const unsigned char 
  9123 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9124 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9125 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9126 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9127 ;;		 -> STR_1(17), 
  9128 ;;  ap              2  [STACK] PTR PTR void 
  9129 ;;		 -> ap(2), ap(2), 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  cfmt            1  [STACK] PTR unsigned char 
  9132 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9133 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9134 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9135 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9136 ;;		 -> STR_1(17), 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  2  [STACK] int 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 3F/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;Total ram usage:        0 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:   10
  9153 ;; This function calls:
  9154 ;;		_vfpfcnvrt
  9155 ;; This function is called by:
  9156 ;;		_sprintf
  9157 ;;		_printf
  9158 ;; This function uses a reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text39
  9162  005490                     __ptext39:
  9163                           	opt callstack 0
  9164  005490                     _vfprintf:
  9165                           	opt callstack 0
  9166                           
  9167                           ; BSR set to: 0
  9168                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9169  005490  52E6               	movf	postinc1,f,c
  9170                           
  9171                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9172                           ;stkvar	_fmt @ sp[(-1)+-3]
  9173                           
  9174                           ;incstack = 0
  9175  005492  0EFC               	movlw	-4
  9176  005494  006F FF8C  F044    	movff	plusw1,btemp+11
  9177                           
  9178                           ;stkvar	_cfmt @ sp[(-1)+0]
  9179  00549A  0EFF               	movlw	-1
  9180  00549C  0060  F113  FFE3   	movff	btemp+11,plusw1
  9181                           
  9182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9183  0054A2  0100               	movlb	0	; () banked
  9184  0054A4  6BF7               	clrf	_nout& (0+255),b
  9185  0054A6  6BF8               	clrf	(_nout+1)& (0+255),b
  9186                           
  9187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9188  0054A8  D021               	goto	l8385
  9189  0054AA                     l8383:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9193                           ;stkvar	_ap @ sp[(-1)+-5]
  9194  0054AA  0EFA               	movlw	-6
  9195  0054AC  006F FF8F FFE6     	movff	plusw1,postinc1
  9196  0054B2  006F FF8F FFE6     	movff	plusw1,postinc1
  9197                           
  9198                           ;stkvar	_cfmt @ sp[(-3)+0]
  9199  0054B8  0EFD               	movlw	253
  9200  0054BA  24E1               	addwf	fsr1l,w,c
  9201  0054BC  6E39               	movwf	btemp,c
  9202  0054BE  0EFF               	movlw	255
  9203  0054C0  20E2               	addwfc	fsr1h,w,c
  9204  0054C2  6E3A               	movwf	btemp+1,c
  9205  0054C4  0060  F0E7  FFE6   	movff	btemp,postinc1
  9206  0054CA  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9207                           
  9208                           ;stkvar	_fp @ sp[(-5)+-2]
  9209  0054D0  0EF9               	movlw	-7
  9210  0054D2  006F FF8F FFE6     	movff	plusw1,postinc1
  9211  0054D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9212  0054DE  EC92  F015         	call	_vfpfcnvrt	;wreg free
  9213  0054E2  5039               	movf	btemp,w,c
  9214  0054E4  0100               	movlb	0	; () banked
  9215  0054E6  27F7               	addwf	_nout& (0+255),f,b
  9216  0054E8  503A               	movf	btemp+1,w,c
  9217  0054EA  23F8               	addwfc	(_nout+1)& (0+255),f,b
  9218  0054EC                     l8385:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9222                           ;stkvar	_cfmt @ sp[(-1)+0]
  9223  0054EC  50E1               	movf	fsr1l,w,c
  9224  0054EE  0FFF               	addlw	-1
  9225  0054F0  6ED9               	movwf	fsr2l,c
  9226  0054F2  50E2               	movf	fsr1h,w,c
  9227  0054F4  6EDA               	movwf	fsr2h,c
  9228  0054F6  0EFF               	movlw	255
  9229  0054F8  22DA               	addwfc	fsr2h,f,c
  9230  0054FA  006F FF7F FFF6     	movff	indf2,tblptrl
  9231  005500                     	if	1	;There is more than 1 active tblptr byte
  9232  005500  0E20               	movlw	high __smallconst
  9233  005502  6EF7               	movwf	tblptrh,c
  9234  005504                     	endif
  9235  005504                     	if	0	;tblptru may be non-zero
  9236  005504                     	endif
  9237  005504                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9238  005504  0E00               	movlw	low (__smallconst shr (0+16))
  9239  005506  6EF8               	movwf	tblptru,c
  9240  005508                     	endif
  9241  005508  0008               	tblrd		*
  9242  00550A  50F5               	movf	tablat,w,c
  9243  00550C  0900               	iorlw	0
  9244  00550E  A4D8               	btfss	status,2,c
  9245  005510  D7CC               	goto	l8383
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9249  005512  0060  F3DC  F039   	movff	_nout,btemp
  9250  005518  0060  F3E0  F03A   	movff	_nout+1,btemp+1
  9251                           
  9252                           ; BSR set to: 0
  9253                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9254  00551E  0EFA               	movlw	250
  9255  005520  26E1               	addwf	fsr1l,f,c
  9256  005522  0EFF               	movlw	255
  9257  005524  22E2               	addwfc	fsr1h,f,c
  9258  005526  0012               	return		;funcret
  9259  005528                     __end_of_vfprintf:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function _vfpfcnvrt *****************
  9263 ;; Defined at:
  9264 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9267 ;;		 -> f(5), NULL(0), 
  9268 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9269 ;;		 -> cfmt(1), 
  9270 ;;  ap              2  [STACK] PTR PTR void 
  9271 ;;		 -> ap(2), ap(2), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  ll              8  [STACK] long long 
  9274 ;;  llu             8    0        unsigned long long 
  9275 ;;  f               4    0        unsigned long long 
  9276 ;;  vp              3    0        PTR void 
  9277 ;;  ct              3    0        unsigned char [3]
  9278 ;;  cp              2  [STACK] PTR unsigned char 
  9279 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(94), 
  9280 ;;  i               2    0        int 
  9281 ;;  done            2    0        int 
  9282 ;;  c               1  [STACK] unsigned char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2  [STACK] int 
  9285 ;; Registers used:
  9286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; Hardware stack levels required when called:    9
  9299 ;; This function calls:
  9300 ;;		_ctoa
  9301 ;;		_dtoa
  9302 ;;		_fputc
  9303 ;;		_stoa
  9304 ;;		_strncmp
  9305 ;; This function is called by:
  9306 ;;		_vfprintf
  9307 ;; This function uses a reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text40
  9311  002B24                     __ptext40:
  9312                           	opt callstack 0
  9313  002B24                     _vfpfcnvrt:
  9314                           	opt callstack 0
  9315                           
  9316                           ; BSR set to: 0
  9317                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9318  002B24  0E0B               	movlw	11
  9319  002B26  26E1               	addwf	fsr1l,f,c
  9320  002B28  0E00               	movlw	0
  9321  002B2A  22E2               	addwfc	fsr1h,f,c
  9322                           
  9323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9324                           ;stkvar	_fmt @ sp[(-11)+-4]
  9325                           
  9326                           ;incstack = 0
  9327  002B2C  0EF1               	movlw	-15
  9328  002B2E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9329  002B34  0EF2               	movlw	-14
  9330  002B36  006F FF8F FFDA     	movff	plusw1,fsr2h
  9331  002B3C  006F FF7F FFF6     	movff	indf2,tblptrl
  9332  002B42                     	if	1	;There is more than 1 active tblptr byte
  9333  002B42  0E20               	movlw	high __smallconst
  9334  002B44  6EF7               	movwf	tblptrh,c
  9335  002B46                     	endif
  9336  002B46                     	if	0	;tblptru may be non-zero
  9337  002B46                     	endif
  9338  002B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9339  002B46  0E00               	movlw	low (__smallconst shr (0+16))
  9340  002B48  6EF8               	movwf	tblptru,c
  9341  002B4A                     	endif
  9342  002B4A  0008               	tblrd		*
  9343  002B4C  50F5               	movf	tablat,w,c
  9344  002B4E  0A25               	xorlw	37
  9345  002B50  A4D8               	btfss	status,2,c
  9346  002B52  D213               	goto	l8329
  9347                           
  9348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9349                           ;stkvar	_fmt @ sp[(-11)+-4]
  9350  002B54  0EF1               	movlw	-15
  9351  002B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9352  002B5C  0EF2               	movlw	-14
  9353  002B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9354  002B64  2ADF               	incf	indf2,f,c
  9355                           
  9356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9357  002B66  6A1D               	clrf	_width,c
  9358  002B68  6A1E               	clrf	_width+1,c
  9359  002B6A  6A21               	clrf	_flags,c
  9360  002B6C  6A22               	clrf	_flags+1,c
  9361                           
  9362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9363  002B6E  681F               	setf	_prec,c
  9364  002B70  6820               	setf	_prec+1,c
  9365                           
  9366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9367                           ;stkvar	_fmt @ sp[(-11)+-4]
  9368  002B72  0EF1               	movlw	-15
  9369  002B74  006F FF8F FFD9     	movff	plusw1,fsr2l
  9370  002B7A  0EF2               	movlw	-14
  9371  002B7C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9372  002B82  006F FF7F FFF6     	movff	indf2,tblptrl
  9373  002B88                     	if	1	;There is more than 1 active tblptr byte
  9374  002B88  0E20               	movlw	high __smallconst
  9375  002B8A  6EF7               	movwf	tblptrh,c
  9376  002B8C                     	endif
  9377  002B8C                     	if	0	;tblptru may be non-zero
  9378  002B8C                     	endif
  9379  002B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9380  002B8C  0E00               	movlw	low (__smallconst shr (0+16))
  9381  002B8E  6EF8               	movwf	tblptru,c
  9382  002B90                     	endif
  9383  002B90  0008               	tblrd		*
  9384  002B92  50F5               	movf	tablat,w,c
  9385  002B94  0A63               	xorlw	99
  9386  002B96  A4D8               	btfss	status,2,c
  9387  002B98  D034               	goto	l8279
  9388                           
  9389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9390                           ;stkvar	_fmt @ sp[(-11)+-4]
  9391  002B9A  0EF1               	movlw	-15
  9392  002B9C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9393  002BA2  0EF2               	movlw	-14
  9394  002BA4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9395  002BAA  2ADF               	incf	indf2,f,c
  9396                           
  9397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9398                           ;stkvar	_ap @ sp[(-11)+-6]
  9399  002BAC  0EEF               	movlw	-17
  9400  002BAE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9401  002BB4  0EF0               	movlw	-16
  9402  002BB6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9403  002BBC  0E02               	movlw	2
  9404  002BBE  5EDE               	subwf	postinc2,f,c
  9405  002BC0  0E00               	movlw	0
  9406  002BC2  5ADD               	subwfb	postdec2,f,c
  9407  002BC4  006F FF78  F043    	movff	postinc2,btemp+10
  9408  002BCA  006F FF74  F044    	movff	postdec2,btemp+11
  9409  002BD0  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9410  002BD6  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9411  002BDC  50DF               	movf	indf2,w,c
  9412  002BDE  6E44               	movwf	btemp+11,c
  9413                           
  9414                           ;stkvar	_c @ sp[(-11)+10]
  9415  002BE0  0EFF               	movlw	-1
  9416  002BE2  0060  F113  FFE3   	movff	btemp+11,plusw1
  9417                           
  9418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9419                           ;stkvar	_c @ sp[(-11)+10]
  9420  002BE8  0EFF               	movlw	-1
  9421  002BEA  50E3               	movf	plusw1,w,c
  9422  002BEC  6EE6               	movwf	postinc1,c
  9423                           
  9424                           ;stkvar	_fp @ sp[(-12)+-2]
  9425  002BEE  0EF2               	movlw	-14
  9426  002BF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9427  002BF6  006F FF8F FFE6     	movff	plusw1,postinc1
  9428  002BFC  EC29  F02B         	call	_ctoa	;wreg free
  9429  002C00  D1E3               	goto	l1911
  9430  002C02                     l8279:
  9431                           
  9432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9433                           ;stkvar	_fmt @ sp[(-11)+-4]
  9434  002C02  0EF1               	movlw	-15
  9435  002C04  006F FF8F FFD9     	movff	plusw1,fsr2l
  9436  002C0A  0EF2               	movlw	-14
  9437  002C0C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9438  002C12  006F FF7F FFF6     	movff	indf2,tblptrl
  9439  002C18                     	if	1	;There is more than 1 active tblptr byte
  9440  002C18  0E20               	movlw	high __smallconst
  9441  002C1A  6EF7               	movwf	tblptrh,c
  9442  002C1C                     	endif
  9443  002C1C                     	if	0	;tblptru may be non-zero
  9444  002C1C                     	endif
  9445  002C1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9446  002C1C  0E00               	movlw	low (__smallconst shr (0+16))
  9447  002C1E  6EF8               	movwf	tblptru,c
  9448  002C20                     	endif
  9449  002C20  0008               	tblrd		*
  9450  002C22  50F5               	movf	tablat,w,c
  9451  002C24  0A64               	xorlw	100
  9452  002C26  B4D8               	btfsc	status,2,c
  9453  002C28  D014               	goto	u5080
  9454                           
  9455                           ;stkvar	_fmt @ sp[(-11)+-4]
  9456  002C2A  0EF1               	movlw	-15
  9457  002C2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9458  002C32  0EF2               	movlw	-14
  9459  002C34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9460  002C3A  006F FF7F FFF6     	movff	indf2,tblptrl
  9461  002C40                     	if	1	;There is more than 1 active tblptr byte
  9462  002C40  0E20               	movlw	high __smallconst
  9463  002C42  6EF7               	movwf	tblptrh,c
  9464  002C44                     	endif
  9465  002C44                     	if	0	;tblptru may be non-zero
  9466  002C44                     	endif
  9467  002C44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9468  002C44  0E00               	movlw	low (__smallconst shr (0+16))
  9469  002C46  6EF8               	movwf	tblptru,c
  9470  002C48                     	endif
  9471  002C48  0008               	tblrd		*
  9472  002C4A  50F5               	movf	tablat,w,c
  9473  002C4C  0A69               	xorlw	105
  9474  002C4E  A4D8               	btfss	status,2,c
  9475  002C50  D073               	goto	l8291
  9476  002C52                     u5080:
  9477                           
  9478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9479                           ;stkvar	_fmt @ sp[(-11)+-4]
  9480  002C52  0EF1               	movlw	-15
  9481  002C54  006F FF8F FFD9     	movff	plusw1,fsr2l
  9482  002C5A  0EF2               	movlw	-14
  9483  002C5C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9484  002C62  2ADF               	incf	indf2,f,c
  9485                           
  9486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9487                           ;stkvar	_ap @ sp[(-11)+-6]
  9488  002C64  0EEF               	movlw	-17
  9489  002C66  006F FF8F FFD9     	movff	plusw1,fsr2l
  9490  002C6C  0EF0               	movlw	-16
  9491  002C6E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9492  002C74  0E02               	movlw	2
  9493  002C76  5EDE               	subwf	postinc2,f,c
  9494  002C78  0E00               	movlw	0
  9495  002C7A  5ADD               	subwfb	postdec2,f,c
  9496  002C7C  006F FF78  F043    	movff	postinc2,btemp+10
  9497  002C82  006F FF74  F044    	movff	postdec2,btemp+11
  9498  002C88  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9499  002C8E  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9500  002C94  006F FF78  F043    	movff	postinc2,btemp+10
  9501  002C9A  006F FF74  F044    	movff	postdec2,btemp+11
  9502                           
  9503                           ;stkvar	_ll @ sp[(-11)+0]
  9504  002CA0  0EF5               	movlw	-11
  9505  002CA2  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9506  002CA8  0EF6               	movlw	-10
  9507  002CAA  0060  F113  FFE3   	movff	btemp+11,plusw1
  9508  002CB0  6A39               	clrf	btemp,c
  9509  002CB2  BEE3               	btfsc	plusw1,7,c
  9510  002CB4  6839               	setf	btemp,c
  9511  002CB6  0EF7               	movlw	-9
  9512  002CB8  0060  F0E7  FFE3   	movff	btemp,plusw1
  9513  002CBE  0EF8               	movlw	-8
  9514  002CC0  0060  F0E7  FFE3   	movff	btemp,plusw1
  9515  002CC6  0EF9               	movlw	-7
  9516  002CC8  0060  F0E7  FFE3   	movff	btemp,plusw1
  9517  002CCE  0EFA               	movlw	-6
  9518  002CD0  0060  F0E7  FFE3   	movff	btemp,plusw1
  9519  002CD6  0EFB               	movlw	-5
  9520  002CD8  0060  F0E7  FFE3   	movff	btemp,plusw1
  9521  002CDE  0EFC               	movlw	-4
  9522  002CE0  0060  F0E7  FFE3   	movff	btemp,plusw1
  9523  002CE6                     l8287:
  9524                           
  9525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9526                           ;stkvar	_ll @ sp[(-11)+0]
  9527  002CE6  50E1               	movf	fsr1l,w,c
  9528  002CE8  0FF5               	addlw	-11
  9529  002CEA  6ED9               	movwf	fsr2l,c
  9530  002CEC  50E2               	movf	fsr1h,w,c
  9531  002CEE  6EDA               	movwf	fsr2h,c
  9532  002CF0  0EFF               	movlw	255
  9533  002CF2  22DA               	addwfc	fsr2h,f,c
  9534  002CF4  006F FF7B FFE6     	movff	postinc2,postinc1
  9535  002CFA  006F FF7B FFE6     	movff	postinc2,postinc1
  9536  002D00  006F FF7B FFE6     	movff	postinc2,postinc1
  9537  002D06  006F FF7B FFE6     	movff	postinc2,postinc1
  9538  002D0C  006F FF7B FFE6     	movff	postinc2,postinc1
  9539  002D12  006F FF7B FFE6     	movff	postinc2,postinc1
  9540  002D18  006F FF7B FFE6     	movff	postinc2,postinc1
  9541  002D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  9542                           
  9543                           ;stkvar	_fp @ sp[(-19)+-2]
  9544  002D24  0EEB               	movlw	-21
  9545  002D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9546  002D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9547  002D32  ECE9  F017         	call	_dtoa	;wreg free
  9548  002D36  D148               	goto	l1911
  9549  002D38                     l8291:
  9550                           
  9551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9552  002D38  0E02               	movlw	2
  9553  002D3A  6EE6               	movwf	postinc1,c
  9554  002D3C  0E00               	movlw	0
  9555  002D3E  6EE6               	movwf	postinc1,c
  9556  002D40  0EC6               	movlw	STR_19& (0+255)
  9557  002D42  6EE6               	movwf	postinc1,c
  9558                           
  9559                           ;stkvar	_fmt @ sp[(-14)+-4]
  9560  002D44  0EEE               	movlw	-18
  9561  002D46  006F FF8F FFD9     	movff	plusw1,fsr2l
  9562  002D4C  0EEF               	movlw	-17
  9563  002D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9564  002D54  50DF               	movf	indf2,w,c
  9565  002D56  6EE6               	movwf	postinc1,c
  9566  002D58  ECA7  F024         	call	_strncmp	;wreg free
  9567  002D5C  5039               	movf	btemp,w,c
  9568  002D5E  103A               	iorwf	btemp+1,w,c
  9569  002D60  B4D8               	btfsc	status,2,c
  9570  002D62  D016               	goto	u5100
  9571  002D64  0E02               	movlw	2
  9572  002D66  6EE6               	movwf	postinc1,c
  9573  002D68  0E00               	movlw	0
  9574  002D6A  6EE6               	movwf	postinc1,c
  9575  002D6C  0EC9               	movlw	STR_23& (0+255)
  9576  002D6E  6EE6               	movwf	postinc1,c
  9577                           
  9578                           ;stkvar	_fmt @ sp[(-14)+-4]
  9579  002D70  0EEE               	movlw	-18
  9580  002D72  006F FF8F FFD9     	movff	plusw1,fsr2l
  9581  002D78  0EEF               	movlw	-17
  9582  002D7A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9583  002D80  50DF               	movf	indf2,w,c
  9584  002D82  6EE6               	movwf	postinc1,c
  9585  002D84  ECA7  F024         	call	_strncmp	;wreg free
  9586  002D88  5039               	movf	btemp,w,c
  9587  002D8A  103A               	iorwf	btemp+1,w,c
  9588  002D8C  A4D8               	btfss	status,2,c
  9589  002D8E  D067               	goto	l8303
  9590  002D90                     u5100:
  9591                           
  9592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9593                           ;stkvar	_fmt @ sp[(-11)+-4]
  9594  002D90  0EF1               	movlw	-15
  9595  002D92  006F FF8F FFD9     	movff	plusw1,fsr2l
  9596  002D98  0EF2               	movlw	-14
  9597  002D9A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9598  002DA0  0E02               	movlw	2
  9599  002DA2  26DF               	addwf	indf2,f,c
  9600                           
  9601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9602                           ;stkvar	_ap @ sp[(-11)+-6]
  9603  002DA4  0EEF               	movlw	-17
  9604  002DA6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9605  002DAC  0EF0               	movlw	-16
  9606  002DAE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9607  002DB4  0E04               	movlw	4
  9608  002DB6  5EDE               	subwf	postinc2,f,c
  9609  002DB8  0E00               	movlw	0
  9610  002DBA  5ADD               	subwfb	postdec2,f,c
  9611  002DBC  006F FF78  F043    	movff	postinc2,btemp+10
  9612  002DC2  006F FF74  F044    	movff	postdec2,btemp+11
  9613  002DC8  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9614  002DCE  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9615  002DD4  006F FF78  F041    	movff	postinc2,btemp+8
  9616  002DDA  006F FF78  F042    	movff	postinc2,btemp+9
  9617  002DE0  006F FF78  F043    	movff	postinc2,btemp+10
  9618  002DE6  006F FF78  F044    	movff	postinc2,btemp+11
  9619  002DEC  0060  F104  F049   	movff	btemp+8,btemp+16
  9620  002DF2  0060  F108  F04A   	movff	btemp+9,btemp+17
  9621  002DF8  0060  F10C  F04B   	movff	btemp+10,btemp+18
  9622  002DFE  0060  F110  F04C   	movff	btemp+11,btemp+19
  9623  002E04  6A4D               	clrf	btemp+20,c
  9624  002E06  BE4C               	btfsc	btemp+19,7,c
  9625  002E08  684D               	setf	btemp+20,c
  9626  002E0A  0060  F134  F04E   	movff	btemp+20,btemp+21
  9627  002E10  0060  F134  F04F   	movff	btemp+20,btemp+22
  9628  002E16  0060  F134  F050   	movff	btemp+20,btemp+23
  9629                           
  9630                           ;stkvar	_ll @ sp[(-11)+0]
  9631  002E1C  0EF5               	movlw	-11
  9632  002E1E  0060  F127  FFE3   	movff	btemp+16,plusw1
  9633  002E24  0EF6               	movlw	-10
  9634  002E26  0060  F12B  FFE3   	movff	btemp+17,plusw1
  9635  002E2C  0EF7               	movlw	-9
  9636  002E2E  0060  F12F  FFE3   	movff	btemp+18,plusw1
  9637  002E34  0EF8               	movlw	-8
  9638  002E36  0060  F133  FFE3   	movff	btemp+19,plusw1
  9639  002E3C  0EF9               	movlw	-7
  9640  002E3E  0060  F137  FFE3   	movff	btemp+20,plusw1
  9641  002E44  0EFA               	movlw	-6
  9642  002E46  0060  F13B  FFE3   	movff	btemp+21,plusw1
  9643  002E4C  0EFB               	movlw	-5
  9644  002E4E  0060  F13F  FFE3   	movff	btemp+22,plusw1
  9645  002E54  0EFC               	movlw	-4
  9646  002E56  0060  F143  FFE3   	movff	btemp+23,plusw1
  9647  002E5C  D744               	goto	l8287
  9648  002E5E                     l8303:
  9649                           
  9650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9651                           ;stkvar	_fmt @ sp[(-11)+-4]
  9652  002E5E  0EF1               	movlw	-15
  9653  002E60  006F FF8F FFD9     	movff	plusw1,fsr2l
  9654  002E66  0EF2               	movlw	-14
  9655  002E68  006F FF8F FFDA     	movff	plusw1,fsr2h
  9656  002E6E  006F FF7F FFF6     	movff	indf2,tblptrl
  9657  002E74                     	if	1	;There is more than 1 active tblptr byte
  9658  002E74  0E20               	movlw	high __smallconst
  9659  002E76  6EF7               	movwf	tblptrh,c
  9660  002E78                     	endif
  9661  002E78                     	if	0	;tblptru may be non-zero
  9662  002E78                     	endif
  9663  002E78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9664  002E78  0E00               	movlw	low (__smallconst shr (0+16))
  9665  002E7A  6EF8               	movwf	tblptru,c
  9666  002E7C                     	endif
  9667  002E7C  0008               	tblrd		*
  9668  002E7E  50F5               	movf	tablat,w,c
  9669  002E80  0A73               	xorlw	115
  9670  002E82  A4D8               	btfss	status,2,c
  9671  002E84  D040               	goto	l8313
  9672                           
  9673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9674                           ;stkvar	_fmt @ sp[(-11)+-4]
  9675  002E86  0EF1               	movlw	-15
  9676  002E88  006F FF8F FFD9     	movff	plusw1,fsr2l
  9677  002E8E  0EF2               	movlw	-14
  9678  002E90  006F FF8F FFDA     	movff	plusw1,fsr2h
  9679  002E96  2ADF               	incf	indf2,f,c
  9680                           
  9681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9682                           ;stkvar	_ap @ sp[(-11)+-6]
  9683  002E98  0EEF               	movlw	-17
  9684  002E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9685  002EA0  0EF0               	movlw	-16
  9686  002EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9687  002EA8  0E02               	movlw	2
  9688  002EAA  5EDE               	subwf	postinc2,f,c
  9689  002EAC  0E00               	movlw	0
  9690  002EAE  5ADD               	subwfb	postdec2,f,c
  9691  002EB0  006F FF78  F043    	movff	postinc2,btemp+10
  9692  002EB6  006F FF74  F044    	movff	postdec2,btemp+11
  9693  002EBC  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9694  002EC2  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9695  002EC8  006F FF78  F043    	movff	postinc2,btemp+10
  9696  002ECE  006F FF74  F044    	movff	postdec2,btemp+11
  9697                           
  9698                           ;stkvar	_cp @ sp[(-11)+8]
  9699  002ED4  0EFE               	movlw	-2
  9700  002ED6  0060  F113  FFE3   	movff	btemp+11,plusw1
  9701  002EDC  0EFD               	movlw	-3
  9702  002EDE  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9703                           
  9704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9705                           ;stkvar	_cp @ sp[(-11)+8]
  9706  002EE4  0EFD               	movlw	-3
  9707  002EE6  006F FF8F FFE6     	movff	plusw1,postinc1
  9708  002EEC  006F FF8F FFE6     	movff	plusw1,postinc1
  9709                           
  9710                           ;stkvar	_fp @ sp[(-13)+-2]
  9711  002EF2  0EF1               	movlw	-15
  9712  002EF4  006F FF8F FFE6     	movff	plusw1,postinc1
  9713  002EFA  006F FF8F FFE6     	movff	plusw1,postinc1
  9714  002F00  EC43  F01D         	call	_stoa	;wreg free
  9715  002F04  D061               	goto	l1911
  9716  002F06                     l8313:
  9717                           
  9718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9719                           ;stkvar	_fmt @ sp[(-11)+-4]
  9720  002F06  0EF1               	movlw	-15
  9721  002F08  006F FF8F FFD9     	movff	plusw1,fsr2l
  9722  002F0E  0EF2               	movlw	-14
  9723  002F10  006F FF8F FFDA     	movff	plusw1,fsr2h
  9724  002F16  006F FF7F FFF6     	movff	indf2,tblptrl
  9725  002F1C                     	if	1	;There is more than 1 active tblptr byte
  9726  002F1C  0E20               	movlw	high __smallconst
  9727  002F1E  6EF7               	movwf	tblptrh,c
  9728  002F20                     	endif
  9729  002F20                     	if	0	;tblptru may be non-zero
  9730  002F20                     	endif
  9731  002F20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9732  002F20  0E00               	movlw	low (__smallconst shr (0+16))
  9733  002F22  6EF8               	movwf	tblptru,c
  9734  002F24                     	endif
  9735  002F24  0008               	tblrd		*
  9736  002F26  50F5               	movf	tablat,w,c
  9737  002F28  0A25               	xorlw	37
  9738  002F2A  A4D8               	btfss	status,2,c
  9739  002F2C  D018               	goto	l8323
  9740                           
  9741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9742                           ;stkvar	_fmt @ sp[(-11)+-4]
  9743  002F2E  0EF1               	movlw	-15
  9744  002F30  006F FF8F FFD9     	movff	plusw1,fsr2l
  9745  002F36  0EF2               	movlw	-14
  9746  002F38  006F FF8F FFDA     	movff	plusw1,fsr2h
  9747  002F3E  2ADF               	incf	indf2,f,c
  9748                           
  9749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9750                           ;stkvar	_fp @ sp[(-11)+-2]
  9751  002F40  0EF3               	movlw	-13
  9752  002F42  006F FF8F FFE6     	movff	plusw1,postinc1
  9753  002F48  006F FF8F FFE6     	movff	plusw1,postinc1
  9754  002F4E  0E25               	movlw	37
  9755  002F50  6EE6               	movwf	postinc1,c
  9756  002F52  0E00               	movlw	0
  9757  002F54  6EE6               	movwf	postinc1,c
  9758  002F56  ECF9  F025         	call	_fputc	;wreg free
  9759  002F5A                     l8319:
  9760                           
  9761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9762  002F5A  0E01               	movlw	1
  9763  002F5C  D00A               	goto	L24
  9764  002F5E                     l8323:
  9765                           
  9766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9767                           ;stkvar	_fmt @ sp[(-11)+-4]
  9768  002F5E  0EF1               	movlw	-15
  9769  002F60  006F FF8F FFD9     	movff	plusw1,fsr2l
  9770  002F66  0EF2               	movlw	-14
  9771  002F68  006F FF8F FFDA     	movff	plusw1,fsr2h
  9772  002F6E  2ADF               	incf	indf2,f,c
  9773                           
  9774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9775  002F70  0E00               	movlw	0
  9776  002F72                     L24:
  9777  002F72  6E39               	movwf	btemp,c
  9778  002F74  0E00               	movlw	0
  9779  002F76  6E3A               	movwf	btemp+1,c
  9780  002F78  D027               	goto	l1911
  9781  002F7A                     l8329:
  9782                           
  9783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9784                           ;stkvar	_fp @ sp[(-11)+-2]
  9785  002F7A  0EF3               	movlw	-13
  9786  002F7C  006F FF8F FFE6     	movff	plusw1,postinc1
  9787  002F82  006F FF8F FFE6     	movff	plusw1,postinc1
  9788                           
  9789                           ;stkvar	_fmt @ sp[(-13)+-4]
  9790  002F88  0EEF               	movlw	-17
  9791  002F8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9792  002F90  0EF0               	movlw	-16
  9793  002F92  006F FF8F FFDA     	movff	plusw1,fsr2h
  9794  002F98  006F FF7F FFF6     	movff	indf2,tblptrl
  9795  002F9E                     	if	1	;There is more than 1 active tblptr byte
  9796  002F9E  0E20               	movlw	high __smallconst
  9797  002FA0  6EF7               	movwf	tblptrh,c
  9798  002FA2                     	endif
  9799  002FA2                     	if	0	;tblptru may be non-zero
  9800  002FA2                     	endif
  9801  002FA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9802  002FA2  0E00               	movlw	low (__smallconst shr (0+16))
  9803  002FA4  6EF8               	movwf	tblptru,c
  9804  002FA6                     	endif
  9805  002FA6  0008               	tblrd		*
  9806  002FA8  50F5               	movf	tablat,w,c
  9807  002FAA  6EE6               	movwf	postinc1,c
  9808  002FAC  0E00               	movlw	0
  9809  002FAE  6EE6               	movwf	postinc1,c
  9810  002FB0  ECF9  F025         	call	_fputc	;wreg free
  9811                           
  9812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9813                           ;stkvar	_fmt @ sp[(-11)+-4]
  9814  002FB4  0EF1               	movlw	-15
  9815  002FB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9816  002FBC  0EF2               	movlw	-14
  9817  002FBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9818  002FC4  2ADF               	incf	indf2,f,c
  9819  002FC6  D7C9               	goto	l8319
  9820  002FC8                     l1911:
  9821                           
  9822                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9823  002FC8  0EEF               	movlw	239
  9824  002FCA  26E1               	addwf	fsr1l,f,c
  9825  002FCC  0EFF               	movlw	255
  9826  002FCE  22E2               	addwfc	fsr1h,f,c
  9827  002FD0  0012               	return		;funcret
  9828  002FD2                     __end_of_vfpfcnvrt:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function _strncmp *****************
  9832 ;; Defined at:
  9833 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  _l              1  [STACK] PTR const unsigned char 
  9836 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9837 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9838 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9839 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9840 ;;		 -> STR_1(17), 
  9841 ;;  _r              1  [STACK] PTR const unsigned char 
  9842 ;;		 -> STR_25(3), STR_21(3), 
  9843 ;;  n               2  [STACK] unsigned int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  r               1  [STACK] PTR const unsigned char 
  9846 ;;		 -> STR_25(3), STR_21(3), 
  9847 ;;  l               1  [STACK] PTR const unsigned char 
  9848 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9849 ;;		 -> STR_14(21), STR_13(6), STR_12(17), STR_11(21), 
  9850 ;;		 -> STR_10(20), STR_9(23), STR_8(6), STR_7(6), 
  9851 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9852 ;;		 -> STR_1(17), 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  2  [STACK] int 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:    3
  9869 ;; This function calls:
  9870 ;;		Nothing
  9871 ;; This function is called by:
  9872 ;;		_vfpfcnvrt
  9873 ;; This function uses a reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text41
  9877  00494E                     __ptext41:
  9878                           	opt callstack 0
  9879  00494E                     _strncmp:
  9880                           	opt callstack 0
  9881                           
  9882                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9883  00494E  52E6               	movf	postinc1,f,c
  9884  004950  52E6               	movf	postinc1,f,c
  9885                           
  9886                           ;stkvar	__l @ sp[(-2)+-1]
  9887                           
  9888                           ;incstack = 0
  9889  004952  0EFD               	movlw	-3
  9890  004954  006F FF8C  F044    	movff	plusw1,btemp+11
  9891                           
  9892                           ;stkvar	_l @ sp[(-2)+1]
  9893  00495A  0EFF               	movlw	-1
  9894  00495C  0060  F113  FFE3   	movff	btemp+11,plusw1
  9895                           
  9896                           ;stkvar	__r @ sp[(-2)+-2]
  9897  004962  0EFC               	movlw	-4
  9898  004964  006F FF8C  F044    	movff	plusw1,btemp+11
  9899                           
  9900                           ;stkvar	_r @ sp[(-2)+0]
  9901  00496A  0EFE               	movlw	-2
  9902  00496C  0060  F113  FFE3   	movff	btemp+11,plusw1
  9903                           
  9904                           ;stkvar	_n @ sp[(-2)+-4]
  9905  004972  0EFA               	movlw	-6
  9906  004974  006F FF8C  F039    	movff	plusw1,btemp
  9907  00497A  0E01               	movlw	1
  9908  00497C  5E39               	subwf	btemp,f,c
  9909  00497E  0EFA               	movlw	-6
  9910  004980  0060  F0E7  FFE3   	movff	btemp,plusw1
  9911  004986  0EFB               	movlw	-5
  9912  004988  006F FF8C  F039    	movff	plusw1,btemp
  9913  00498E  0E00               	movlw	0
  9914  004990  5A39               	subwfb	btemp,f,c
  9915  004992  0EFB               	movlw	-5
  9916  004994  0060  F0E7  FFE3   	movff	btemp,plusw1
  9917  00499A  0EFA               	movlw	-6
  9918  00499C  28E3               	incf	plusw1,w,c
  9919  00499E  E121               	bnz	l5605
  9920  0049A0  0EFB               	movlw	-5
  9921  0049A2  28E3               	incf	plusw1,w,c
  9922  0049A4  A4D8               	btfss	status,2,c
  9923  0049A6  D01D               	goto	l5605
  9924  0049A8  0E00               	movlw	0
  9925  0049AA  6E39               	movwf	btemp,c
  9926  0049AC  0E00               	movlw	0
  9927  0049AE  6E3A               	movwf	btemp+1,c
  9928  0049B0  D091               	goto	l2660
  9929  0049B2                     l5601:
  9930                           
  9931                           ;stkvar	_l @ sp[(-2)+1]
  9932  0049B2  0EFF               	movlw	-1
  9933  0049B4  2AE3               	incf	plusw1,f,c
  9934                           
  9935                           ;stkvar	_r @ sp[(-2)+0]
  9936  0049B6  0EFE               	movlw	-2
  9937  0049B8  2AE3               	incf	plusw1,f,c
  9938                           
  9939                           ;stkvar	_n @ sp[(-2)+-4]
  9940  0049BA  0EFA               	movlw	-6
  9941  0049BC  006F FF8C  F039    	movff	plusw1,btemp
  9942  0049C2  0E01               	movlw	1
  9943  0049C4  5E39               	subwf	btemp,f,c
  9944  0049C6  0EFA               	movlw	-6
  9945  0049C8  0060  F0E7  FFE3   	movff	btemp,plusw1
  9946  0049CE  0EFB               	movlw	-5
  9947  0049D0  006F FF8C  F039    	movff	plusw1,btemp
  9948  0049D6  0E00               	movlw	0
  9949  0049D8  5A39               	subwfb	btemp,f,c
  9950  0049DA  0EFB               	movlw	-5
  9951  0049DC  0060  F0E7  FFE3   	movff	btemp,plusw1
  9952  0049E2                     l5605:
  9953                           
  9954                           ;stkvar	_l @ sp[(-2)+1]
  9955  0049E2  50E1               	movf	fsr1l,w,c
  9956  0049E4  0FFF               	addlw	-1
  9957  0049E6  6ED9               	movwf	fsr2l,c
  9958  0049E8  50E2               	movf	fsr1h,w,c
  9959  0049EA  6EDA               	movwf	fsr2h,c
  9960  0049EC  0EFF               	movlw	255
  9961  0049EE  22DA               	addwfc	fsr2h,f,c
  9962  0049F0  006F FF7F FFF6     	movff	indf2,tblptrl
  9963  0049F6                     	if	1	;There is more than 1 active tblptr byte
  9964  0049F6  0E20               	movlw	high __smallconst
  9965  0049F8  6EF7               	movwf	tblptrh,c
  9966  0049FA                     	endif
  9967  0049FA                     	if	0	;tblptru may be non-zero
  9968  0049FA                     	endif
  9969  0049FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9970  0049FA  0E00               	movlw	low (__smallconst shr (0+16))
  9971  0049FC  6EF8               	movwf	tblptru,c
  9972  0049FE                     	endif
  9973  0049FE  0008               	tblrd		*
  9974  004A00  50F5               	movf	tablat,w,c
  9975  004A02  0900               	iorlw	0
  9976  004A04  B4D8               	btfsc	status,2,c
  9977  004A06  D041               	goto	u3050
  9978                           
  9979                           ;stkvar	_r @ sp[(-2)+0]
  9980  004A08  50E1               	movf	fsr1l,w,c
  9981  004A0A  0FFE               	addlw	-2
  9982  004A0C  6ED9               	movwf	fsr2l,c
  9983  004A0E  50E2               	movf	fsr1h,w,c
  9984  004A10  6EDA               	movwf	fsr2h,c
  9985  004A12  0EFF               	movlw	255
  9986  004A14  22DA               	addwfc	fsr2h,f,c
  9987  004A16  006F FF7F FFF6     	movff	indf2,tblptrl
  9988  004A1C                     	if	1	;There is more than 1 active tblptr byte
  9989  004A1C  0E20               	movlw	high __smallconst
  9990  004A1E  6EF7               	movwf	tblptrh,c
  9991  004A20                     	endif
  9992  004A20                     	if	0	;tblptru may be non-zero
  9993  004A20                     	endif
  9994  004A20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9995  004A20  0E00               	movlw	low (__smallconst shr (0+16))
  9996  004A22  6EF8               	movwf	tblptru,c
  9997  004A24                     	endif
  9998  004A24  0008               	tblrd		*
  9999  004A26  50F5               	movf	tablat,w,c
 10000  004A28  0900               	iorlw	0
 10001  004A2A  B4D8               	btfsc	status,2,c
 10002  004A2C  D02E               	goto	u3050
 10003                           
 10004                           ;stkvar	_n @ sp[(-2)+-4]
 10005  004A2E  0EFA               	movlw	-6
 10006  004A30  006F FF8C  F039    	movff	plusw1,btemp
 10007  004A36  0EFB               	movlw	-5
 10008  004A38  50E3               	movf	plusw1,w,c
 10009  004A3A  1039               	iorwf	btemp,w,c
 10010  004A3C  B4D8               	btfsc	status,2,c
 10011  004A3E  D025               	goto	u3050
 10012                           
 10013                           ;stkvar	_l @ sp[(-2)+1]
 10014  004A40  50E1               	movf	fsr1l,w,c
 10015  004A42  0FFF               	addlw	-1
 10016  004A44  6ED9               	movwf	fsr2l,c
 10017  004A46  50E2               	movf	fsr1h,w,c
 10018  004A48  6EDA               	movwf	fsr2h,c
 10019  004A4A  0EFF               	movlw	255
 10020  004A4C  22DA               	addwfc	fsr2h,f,c
 10021  004A4E  006F FF7F FFF6     	movff	indf2,tblptrl
 10022  004A54                     	if	1	;There is more than 1 active tblptr byte
 10023  004A54  0E20               	movlw	high __smallconst
 10024  004A56  6EF7               	movwf	tblptrh,c
 10025  004A58                     	endif
 10026  004A58                     	if	0	;tblptru may be non-zero
 10027  004A58                     	endif
 10028  004A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10029  004A58  0E00               	movlw	low (__smallconst shr (0+16))
 10030  004A5A  6EF8               	movwf	tblptru,c
 10031  004A5C                     	endif
 10032  004A5C  0008               	tblrd		*
 10033  004A5E  006F FFD4  F044    	movff	tablat,btemp+11
 10034                           
 10035                           ;stkvar	_r @ sp[(-2)+0]
 10036  004A64  50E1               	movf	fsr1l,w,c
 10037  004A66  0FFE               	addlw	-2
 10038  004A68  6ED9               	movwf	fsr2l,c
 10039  004A6A  50E2               	movf	fsr1h,w,c
 10040  004A6C  6EDA               	movwf	fsr2h,c
 10041  004A6E  0EFF               	movlw	255
 10042  004A70  22DA               	addwfc	fsr2h,f,c
 10043  004A72  006F FF7F FFF6     	movff	indf2,tblptrl
 10044  004A78                     	if	1	;There is more than 1 active tblptr byte
 10045  004A78  0E20               	movlw	high __smallconst
 10046  004A7A  6EF7               	movwf	tblptrh,c
 10047  004A7C                     	endif
 10048  004A7C                     	if	0	;tblptru may be non-zero
 10049  004A7C                     	endif
 10050  004A7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10051  004A7C  0E00               	movlw	low (__smallconst shr (0+16))
 10052  004A7E  6EF8               	movwf	tblptru,c
 10053  004A80                     	endif
 10054  004A80  0008               	tblrd		*
 10055  004A82  50F5               	movf	tablat,w,c
 10056  004A84  1844               	xorwf	btemp+11,w,c
 10057  004A86  B4D8               	btfsc	status,2,c
 10058  004A88  D794               	goto	l5601
 10059  004A8A                     u3050:
 10060                           
 10061                           ;stkvar	_l @ sp[(-2)+1]
 10062  004A8A  50E1               	movf	fsr1l,w,c
 10063  004A8C  0FFF               	addlw	-1
 10064  004A8E  6ED9               	movwf	fsr2l,c
 10065  004A90  50E2               	movf	fsr1h,w,c
 10066  004A92  6EDA               	movwf	fsr2h,c
 10067  004A94  0EFF               	movlw	255
 10068  004A96  22DA               	addwfc	fsr2h,f,c
 10069  004A98  006F FF7F FFF6     	movff	indf2,tblptrl
 10070  004A9E                     	if	1	;There is more than 1 active tblptr byte
 10071  004A9E  0E20               	movlw	high __smallconst
 10072  004AA0  6EF7               	movwf	tblptrh,c
 10073  004AA2                     	endif
 10074  004AA2                     	if	0	;tblptru may be non-zero
 10075  004AA2                     	endif
 10076  004AA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10077  004AA2  0E00               	movlw	low (__smallconst shr (0+16))
 10078  004AA4  6EF8               	movwf	tblptru,c
 10079  004AA6                     	endif
 10080  004AA6  0008               	tblrd		*
 10081  004AA8  50F5               	movf	tablat,w,c
 10082  004AAA  6E39               	movwf	btemp,c
 10083  004AAC  6A3A               	clrf	btemp+1,c
 10084                           
 10085                           ;stkvar	_r @ sp[(-2)+0]
 10086  004AAE  50E1               	movf	fsr1l,w,c
 10087  004AB0  0FFE               	addlw	-2
 10088  004AB2  6ED9               	movwf	fsr2l,c
 10089  004AB4  50E2               	movf	fsr1h,w,c
 10090  004AB6  6EDA               	movwf	fsr2h,c
 10091  004AB8  0EFF               	movlw	255
 10092  004ABA  22DA               	addwfc	fsr2h,f,c
 10093  004ABC  006F FF7F FFF6     	movff	indf2,tblptrl
 10094  004AC2                     	if	1	;There is more than 1 active tblptr byte
 10095  004AC2  0E20               	movlw	high __smallconst
 10096  004AC4  6EF7               	movwf	tblptrh,c
 10097  004AC6                     	endif
 10098  004AC6                     	if	0	;tblptru may be non-zero
 10099  004AC6                     	endif
 10100  004AC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10101  004AC6  0E00               	movlw	low (__smallconst shr (0+16))
 10102  004AC8  6EF8               	movwf	tblptru,c
 10103  004ACA                     	endif
 10104  004ACA  0008               	tblrd		*
 10105  004ACC  50F5               	movf	tablat,w,c
 10106  004ACE  5E39               	subwf	btemp,f,c
 10107  004AD0  0E00               	movlw	0
 10108  004AD2  5A3A               	subwfb	btemp+1,f,c
 10109  004AD4                     l2660:
 10110                           
 10111                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10112  004AD4  0EFA               	movlw	250
 10113  004AD6  26E1               	addwf	fsr1l,f,c
 10114  004AD8  0EFF               	movlw	255
 10115  004ADA  22E2               	addwfc	fsr1h,f,c
 10116  004ADC  0012               	return		;funcret
 10117  004ADE                     __end_of_strncmp:
 10118                           	opt callstack 0
 10119                           
 10120 ;; *************** function _stoa *****************
 10121 ;; Defined at:
 10122 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10125 ;;		 -> f(5), NULL(0), 
 10126 ;;  s               2  [STACK] PTR unsigned char 
 10127 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(94), 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  nuls            7  [STACK] unsigned char [7]
 10130 ;;  l               2  [STACK] int 
 10131 ;;  p               2  [STACK] int 
 10132 ;;  cp              2  [STACK] PTR unsigned char 
 10133 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10134 ;;		 -> V(94), 
 10135 ;;  w               2  [STACK] int 
 10136 ;;  i               2  [STACK] int 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  2  [STACK] int 
 10139 ;; Registers used:
 10140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10150 ;;Total ram usage:        0 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; Hardware stack levels required when called:    6
 10153 ;; This function calls:
 10154 ;;		_fputc
 10155 ;;		_strlen
 10156 ;; This function is called by:
 10157 ;;		_vfpfcnvrt
 10158 ;; This function uses a reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text42
 10162  003A86                     __ptext42:
 10163                           	opt callstack 0
 10164  003A86                     _stoa:
 10165                           	opt callstack 0
 10166                           
 10167                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10168  003A86  0E11               	movlw	17
 10169  003A88  26E1               	addwf	fsr1l,f,c
 10170  003A8A  0E00               	movlw	0
 10171  003A8C  22E2               	addwfc	fsr1h,f,c
 10172                           
 10173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10174                           
 10175                           ;incstack = 0
 10176  003A8E  EE20  F100         	lfsr	2,stoa@F1144
 10177                           
 10178                           ;stkvar	_nuls @ sp[(-17)+0]
 10179  003A92  0E07               	movlw	7
 10180  003A94  6E39               	movwf	btemp,c
 10181  003A96  0EEF               	movlw	-17
 10182  003A98                     us495999:
 10183  003A98  006F FF7B FFE3     	movff	postinc2,plusw1
 10184  003A9E  28E8               	incf	wreg,w,c
 10185  003AA0  2E39               	decfsz	btemp,f,c
 10186  003AA2  D7FA               	bra	us495999
 10187                           
 10188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10189                           ;stkvar	_s @ sp[(-17)+-4]
 10190  003AA4  0EEB               	movlw	-21
 10191  003AA6  006F FF8C  F043    	movff	plusw1,btemp+10
 10192  003AAC  0EEC               	movlw	-20
 10193  003AAE  006F FF8C  F044    	movff	plusw1,btemp+11
 10194                           
 10195                           ;stkvar	_cp @ sp[(-17)+11]
 10196  003AB4  0EFB               	movlw	-5
 10197  003AB6  0060  F113  FFE3   	movff	btemp+11,plusw1
 10198  003ABC  0EFA               	movlw	-6
 10199  003ABE  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10200                           
 10201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10202                           ;stkvar	_cp @ sp[(-17)+11]
 10203  003AC4  0EFA               	movlw	-6
 10204  003AC6  006F FF8C  F039    	movff	plusw1,btemp
 10205  003ACC  0EFB               	movlw	-5
 10206  003ACE  50E3               	movf	plusw1,w,c
 10207  003AD0  1039               	iorwf	btemp,w,c
 10208  003AD2  A4D8               	btfss	status,2,c
 10209  003AD4  D00E               	goto	l8217
 10210                           
 10211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10212                           ;stkvar	_nuls @ sp[(-17)+0]
 10213  003AD6  0EEF               	movlw	239
 10214  003AD8  24E1               	addwf	fsr1l,w,c
 10215  003ADA  6E43               	movwf	btemp+10,c
 10216  003ADC  0EFF               	movlw	255
 10217  003ADE  20E2               	addwfc	fsr1h,w,c
 10218  003AE0  6E44               	movwf	btemp+11,c
 10219                           
 10220                           ;stkvar	_cp @ sp[(-17)+11]
 10221  003AE2  0EFB               	movlw	-5
 10222  003AE4  0060  F113  FFE3   	movff	btemp+11,plusw1
 10223  003AEA  0EFA               	movlw	-6
 10224  003AEC  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10225  003AF2                     l8217:
 10226                           
 10227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10228                           ;stkvar	_cp @ sp[(-17)+11]
 10229  003AF2  0EFA               	movlw	-6
 10230  003AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10231  003AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 10232  003B00  EC5A  F029         	call	_strlen	;wreg free
 10233                           
 10234                           ;stkvar	_l @ sp[(-17)+7]
 10235  003B04  0EF6               	movlw	-10
 10236  003B06  0060  F0E7  FFE3   	movff	btemp,plusw1
 10237  003B0C  0EF7               	movlw	-9
 10238  003B0E  0060  F0EB  FFE3   	movff	btemp+1,plusw1
 10239                           
 10240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10241                           ;stkvar	_p @ sp[(-17)+9]
 10242  003B14  0EF8               	movlw	-8
 10243  003B16  0060  F07F  FFE3   	movff	_prec,plusw1
 10244  003B1C  0EF9               	movlw	-7
 10245  003B1E  0060  F083  FFE3   	movff	_prec+1,plusw1
 10246                           
 10247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10248                           ;stkvar	_p @ sp[(-17)+9]
 10249  003B24  0EF9               	movlw	-7
 10250  003B26  BEE3               	btfsc	plusw1,7,c
 10251  003B28  D023               	goto	l1892
 10252                           
 10253                           ;stkvar	_l @ sp[(-17)+7]
 10254                           ;stkvar	_p @ sp[(-17)+9]
 10255  003B2A  50E1               	movf	fsr1l,w,c
 10256  003B2C  0FF8               	addlw	-8
 10257  003B2E  6ED9               	movwf	fsr2l,c
 10258  003B30  50E2               	movf	fsr1h,w,c
 10259  003B32  6EDA               	movwf	fsr2h,c
 10260  003B34  0EFF               	movlw	255
 10261  003B36  22DA               	addwfc	fsr2h,f,c
 10262  003B38  0EF6               	movlw	-10
 10263  003B3A  50E3               	movf	plusw1,w,c
 10264  003B3C  5CDE               	subwf	postinc2,w,c
 10265  003B3E  50DE               	movf	postinc2,w,c
 10266  003B40  0A80               	xorlw	128
 10267  003B42  6E39               	movwf	btemp,c
 10268  003B44  0EF7               	movlw	-9
 10269  003B46  50E3               	movf	plusw1,w,c
 10270  003B48  0A80               	xorlw	128
 10271  003B4A  5839               	subwfb	btemp,w,c
 10272  003B4C  B0D8               	btfsc	status,0,c
 10273  003B4E  D010               	goto	l1892
 10274                           
 10275                           ;stkvar	_p @ sp[(-17)+9]
 10276                           ;stkvar	_l @ sp[(-17)+7]
 10277  003B50  0EF8               	movlw	-8
 10278  003B52  006F FF8C  F039    	movff	plusw1,btemp
 10279  003B58  0EF6               	movlw	-10
 10280  003B5A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10281  003B60  0EF9               	movlw	-7
 10282  003B62  006F FF8C  F039    	movff	plusw1,btemp
 10283  003B68  0EF7               	movlw	-9
 10284  003B6A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10285  003B70                     l1892:
 10286                           
 10287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10288                           ;stkvar	_l @ sp[(-17)+7]
 10289                           ;stkvar	_p @ sp[(-17)+9]
 10290  003B70  0EF6               	movlw	-10
 10291  003B72  006F FF8C  F039    	movff	plusw1,btemp
 10292  003B78  0EF8               	movlw	-8
 10293  003B7A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10294  003B80  0EF7               	movlw	-9
 10295  003B82  006F FF8C  F039    	movff	plusw1,btemp
 10296  003B88  0EF9               	movlw	-7
 10297  003B8A  0060  F0E7  FFE3   	movff	btemp,plusw1
 10298                           
 10299                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10300                           ;stkvar	_w @ sp[(-17)+13]
 10301  003B90  0EFC               	movlw	-4
 10302  003B92  0060  F077  FFE3   	movff	_width,plusw1
 10303  003B98  0EFD               	movlw	-3
 10304  003B9A  0060  F07B  FFE3   	movff	_width+1,plusw1
 10305                           
 10306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10307  003BA0  A021               	btfss	_flags,0,c
 10308  003BA2  D01F               	goto	l8237
 10309  003BA4  D031               	goto	u5000
 10310  003BA6                     l8233:
 10311                           
 10312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10313                           ;stkvar	_fp @ sp[(-17)+-2]
 10314  003BA6  0EED               	movlw	-19
 10315  003BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 10316  003BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 10317  003BB4  0E20               	movlw	32
 10318  003BB6  6EE6               	movwf	postinc1,c
 10319  003BB8  0E00               	movlw	0
 10320  003BBA  6EE6               	movwf	postinc1,c
 10321  003BBC  ECF9  F025         	call	_fputc	;wreg free
 10322                           
 10323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10324                           ;stkvar	_l @ sp[(-17)+7]
 10325  003BC0  0EF6               	movlw	-10
 10326  003BC2  50E3               	movf	plusw1,w,c
 10327  003BC4  0F01               	addlw	1
 10328  003BC6  6E39               	movwf	btemp,c
 10329  003BC8  0EF6               	movlw	-10
 10330  003BCA  0060  F0E7  FFE3   	movff	btemp,plusw1
 10331  003BD0  6A39               	clrf	btemp,c
 10332  003BD2  0EF7               	movlw	-9
 10333  003BD4  50E3               	movf	plusw1,w,c
 10334  003BD6  2039               	addwfc	btemp,w,c
 10335  003BD8  6E39               	movwf	btemp,c
 10336  003BDA  0EF7               	movlw	-9
 10337  003BDC  0060  F0E7  FFE3   	movff	btemp,plusw1
 10338  003BE2                     l8237:
 10339                           
 10340                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10341                           ;stkvar	_w @ sp[(-17)+13]
 10342                           ;stkvar	_l @ sp[(-17)+7]
 10343  003BE2  50E1               	movf	fsr1l,w,c
 10344  003BE4  0FF6               	addlw	-10
 10345  003BE6  6ED9               	movwf	fsr2l,c
 10346  003BE8  50E2               	movf	fsr1h,w,c
 10347  003BEA  6EDA               	movwf	fsr2h,c
 10348  003BEC  0EFF               	movlw	255
 10349  003BEE  22DA               	addwfc	fsr2h,f,c
 10350  003BF0  0EFC               	movlw	-4
 10351  003BF2  50E3               	movf	plusw1,w,c
 10352  003BF4  5CDE               	subwf	postinc2,w,c
 10353  003BF6  50DE               	movf	postinc2,w,c
 10354  003BF8  0A80               	xorlw	128
 10355  003BFA  6E39               	movwf	btemp,c
 10356  003BFC  0EFD               	movlw	-3
 10357  003BFE  50E3               	movf	plusw1,w,c
 10358  003C00  0A80               	xorlw	128
 10359  003C02  5839               	subwfb	btemp,w,c
 10360  003C04  A0D8               	btfss	status,0,c
 10361  003C06  D7CF               	goto	l8233
 10362  003C08                     u5000:
 10363                           
 10364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10365                           ;stkvar	_i @ sp[(-17)+15]
 10366  003C08  0EFE               	movlw	-2
 10367  003C0A  6AE3               	clrf	plusw1,c
 10368  003C0C  0EFF               	movlw	-1
 10369  003C0E  6AE3               	clrf	plusw1,c
 10370                           
 10371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10372  003C10  D045               	goto	l8247
 10373  003C12                     l8241:
 10374                           
 10375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10376                           ;stkvar	_fp @ sp[(-17)+-2]
 10377  003C12  0EED               	movlw	-19
 10378  003C14  006F FF8F FFE6     	movff	plusw1,postinc1
 10379  003C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 10380                           
 10381                           ;stkvar	_cp @ sp[(-19)+11]
 10382  003C20  0EF8               	movlw	-8
 10383  003C22  006F FF8F FFF6     	movff	plusw1,tblptrl
 10384  003C28  0EF9               	movlw	-7
 10385  003C2A  006F FF8F FFF7     	movff	plusw1,tblptrh
 10386  003C30  0E00               	movlw	low (__smallconst shr (0+16))
 10387  003C32  6EF8               	movwf	tblptru,c
 10388  003C34  0E1F               	movlw	(high __ramtop+-1)
 10389  003C36  64F7               	cpfsgt	tblptrh,c
 10390  003C38  D003               	bra	u5017
 10391  003C3A  0008               	tblrd		*
 10392  003C3C  50F5               	movf	tablat,w,c
 10393  003C3E  D007               	bra	u5010
 10394  003C40                     u5017:
 10395  003C40  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10396  003C46  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10397  003C4C  50EF               	movf	indf0,w,c
 10398  003C4E                     u5010:
 10399  003C4E  6EE6               	movwf	postinc1,c
 10400  003C50  0E00               	movlw	0
 10401  003C52  6EE6               	movwf	postinc1,c
 10402  003C54  ECF9  F025         	call	_fputc	;wreg free
 10403                           
 10404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10405                           ;stkvar	_cp @ sp[(-17)+11]
 10406  003C58  0EFA               	movlw	-6
 10407  003C5A  50E3               	movf	plusw1,w,c
 10408  003C5C  0F01               	addlw	1
 10409  003C5E  6E39               	movwf	btemp,c
 10410  003C60  0EFA               	movlw	-6
 10411  003C62  0060  F0E7  FFE3   	movff	btemp,plusw1
 10412  003C68  6A39               	clrf	btemp,c
 10413  003C6A  0EFB               	movlw	-5
 10414  003C6C  50E3               	movf	plusw1,w,c
 10415  003C6E  2039               	addwfc	btemp,w,c
 10416  003C70  6E39               	movwf	btemp,c
 10417  003C72  0EFB               	movlw	-5
 10418  003C74  0060  F0E7  FFE3   	movff	btemp,plusw1
 10419                           
 10420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10421                           ;stkvar	_i @ sp[(-17)+15]
 10422  003C7A  0EFE               	movlw	-2
 10423  003C7C  50E3               	movf	plusw1,w,c
 10424  003C7E  0F01               	addlw	1
 10425  003C80  6E39               	movwf	btemp,c
 10426  003C82  0EFE               	movlw	-2
 10427  003C84  0060  F0E7  FFE3   	movff	btemp,plusw1
 10428  003C8A  6A39               	clrf	btemp,c
 10429  003C8C  0EFF               	movlw	-1
 10430  003C8E  50E3               	movf	plusw1,w,c
 10431  003C90  2039               	addwfc	btemp,w,c
 10432  003C92  6E39               	movwf	btemp,c
 10433  003C94  0EFF               	movlw	-1
 10434  003C96  0060  F0E7  FFE3   	movff	btemp,plusw1
 10435  003C9C                     l8247:
 10436                           
 10437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10438                           ;stkvar	_p @ sp[(-17)+9]
 10439                           ;stkvar	_i @ sp[(-17)+15]
 10440  003C9C  50E1               	movf	fsr1l,w,c
 10441  003C9E  0FFE               	addlw	-2
 10442  003CA0  6ED9               	movwf	fsr2l,c
 10443  003CA2  50E2               	movf	fsr1h,w,c
 10444  003CA4  6EDA               	movwf	fsr2h,c
 10445  003CA6  0EFF               	movlw	255
 10446  003CA8  22DA               	addwfc	fsr2h,f,c
 10447  003CAA  0EF8               	movlw	-8
 10448  003CAC  50E3               	movf	plusw1,w,c
 10449  003CAE  5CDE               	subwf	postinc2,w,c
 10450  003CB0  50DE               	movf	postinc2,w,c
 10451  003CB2  0A80               	xorlw	128
 10452  003CB4  6E39               	movwf	btemp,c
 10453  003CB6  0EF9               	movlw	-7
 10454  003CB8  50E3               	movf	plusw1,w,c
 10455  003CBA  0A80               	xorlw	128
 10456  003CBC  5839               	subwfb	btemp,w,c
 10457  003CBE  A0D8               	btfss	status,0,c
 10458  003CC0  D7A8               	goto	l8241
 10459                           
 10460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10461  003CC2  B021               	btfsc	_flags,0,c
 10462  003CC4  D01F               	goto	l8255
 10463  003CC6  D031               	goto	u5040
 10464  003CC8                     l8251:
 10465                           
 10466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10467                           ;stkvar	_fp @ sp[(-17)+-2]
 10468  003CC8  0EED               	movlw	-19
 10469  003CCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10470  003CD0  006F FF8F FFE6     	movff	plusw1,postinc1
 10471  003CD6  0E20               	movlw	32
 10472  003CD8  6EE6               	movwf	postinc1,c
 10473  003CDA  0E00               	movlw	0
 10474  003CDC  6EE6               	movwf	postinc1,c
 10475  003CDE  ECF9  F025         	call	_fputc	;wreg free
 10476                           
 10477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10478                           ;stkvar	_l @ sp[(-17)+7]
 10479  003CE2  0EF6               	movlw	-10
 10480  003CE4  50E3               	movf	plusw1,w,c
 10481  003CE6  0F01               	addlw	1
 10482  003CE8  6E39               	movwf	btemp,c
 10483  003CEA  0EF6               	movlw	-10
 10484  003CEC  0060  F0E7  FFE3   	movff	btemp,plusw1
 10485  003CF2  6A39               	clrf	btemp,c
 10486  003CF4  0EF7               	movlw	-9
 10487  003CF6  50E3               	movf	plusw1,w,c
 10488  003CF8  2039               	addwfc	btemp,w,c
 10489  003CFA  6E39               	movwf	btemp,c
 10490  003CFC  0EF7               	movlw	-9
 10491  003CFE  0060  F0E7  FFE3   	movff	btemp,plusw1
 10492  003D04                     l8255:
 10493                           
 10494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10495                           ;stkvar	_w @ sp[(-17)+13]
 10496                           ;stkvar	_l @ sp[(-17)+7]
 10497  003D04  50E1               	movf	fsr1l,w,c
 10498  003D06  0FF6               	addlw	-10
 10499  003D08  6ED9               	movwf	fsr2l,c
 10500  003D0A  50E2               	movf	fsr1h,w,c
 10501  003D0C  6EDA               	movwf	fsr2h,c
 10502  003D0E  0EFF               	movlw	255
 10503  003D10  22DA               	addwfc	fsr2h,f,c
 10504  003D12  0EFC               	movlw	-4
 10505  003D14  50E3               	movf	plusw1,w,c
 10506  003D16  5CDE               	subwf	postinc2,w,c
 10507  003D18  50DE               	movf	postinc2,w,c
 10508  003D1A  0A80               	xorlw	128
 10509  003D1C  6E39               	movwf	btemp,c
 10510  003D1E  0EFD               	movlw	-3
 10511  003D20  50E3               	movf	plusw1,w,c
 10512  003D22  0A80               	xorlw	128
 10513  003D24  5839               	subwfb	btemp,w,c
 10514  003D26  A0D8               	btfss	status,0,c
 10515  003D28  D7CF               	goto	l8251
 10516  003D2A                     u5040:
 10517                           
 10518                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10519                           ;stkvar	_l @ sp[(-17)+7]
 10520  003D2A  0EF6               	movlw	-10
 10521  003D2C  006F FF8C  F039    	movff	plusw1,btemp
 10522  003D32  0EF7               	movlw	-9
 10523  003D34  006F FF8C  F03A    	movff	plusw1,btemp+1
 10524                           
 10525                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10526  003D3A  0EEB               	movlw	235
 10527  003D3C  26E1               	addwf	fsr1l,f,c
 10528  003D3E  0EFF               	movlw	255
 10529  003D40  22E2               	addwfc	fsr1h,f,c
 10530  003D42  0012               	return		;funcret
 10531  003D44                     __end_of_stoa:
 10532                           	opt callstack 0
 10533                           
 10534 ;; *************** function _dtoa *****************
 10535 ;; Defined at:
 10536 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10539 ;;		 -> f(5), NULL(0), 
 10540 ;;  d               8  [STACK] long long 
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;  n               8  [STACK] long long 
 10543 ;;  i               2  [STACK] int 
 10544 ;;  s               2  [STACK] int 
 10545 ;;  w               2  [STACK] int 
 10546 ;;  p               2  [STACK] int 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  2  [STACK] int 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10560 ;;Total ram usage:        0 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; Hardware stack levels required when called:    8
 10563 ;; This function calls:
 10564 ;;		___aodiv
 10565 ;;		___aomod
 10566 ;;		_abs
 10567 ;;		_pad
 10568 ;; This function is called by:
 10569 ;;		_vfpfcnvrt
 10570 ;; This function uses a reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text43
 10574  002FD2                     __ptext43:
 10575                           	opt callstack 0
 10576  002FD2                     _dtoa:
 10577                           	opt callstack 0
 10578                           
 10579                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10580  002FD2  0E12               	movlw	18
 10581  002FD4  26E1               	addwf	fsr1l,f,c
 10582  002FD6  0E00               	movlw	0
 10583  002FD8  22E2               	addwfc	fsr1h,f,c
 10584                           
 10585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10586                           ;stkvar	_d @ sp[(-18)+-10]
 10587                           
 10588                           ;incstack = 0
 10589  002FDA  0EE4               	movlw	228
 10590  002FDC  24E1               	addwf	fsr1l,w,c
 10591  002FDE  6ED9               	movwf	fsr2l,c
 10592  002FE0  0EFF               	movlw	255
 10593  002FE2  20E2               	addwfc	fsr1h,w,c
 10594  002FE4  6EDA               	movwf	fsr2h,c
 10595                           
 10596                           ;stkvar	_n @ sp[(-18)+2]
 10597  002FE6  0E08               	movlw	8
 10598  002FE8  6E39               	movwf	btemp,c
 10599  002FEA  0EF0               	movlw	-16
 10600  002FEC                     us478999:
 10601  002FEC  006F FF7B FFE3     	movff	postinc2,plusw1
 10602  002FF2  28E8               	incf	wreg,w,c
 10603  002FF4  2E39               	decfsz	btemp,f,c
 10604  002FF6  D7FA               	bra	us478999
 10605                           
 10606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10607                           ;stkvar	_n @ sp[(-18)+2]
 10608  002FF8  0EF7               	movlw	-9
 10609  002FFA  AEE3               	btfss	plusw1,7,c
 10610  002FFC  D002               	goto	u4790
 10611  002FFE  0E01               	movlw	1
 10612  003000  D001               	goto	u4800
 10613  003002                     u4790:
 10614  003002  0E00               	movlw	0
 10615  003004                     u4800:
 10616  003004  6E43               	movwf	btemp+10,c
 10617  003006  6A44               	clrf	btemp+11,c
 10618                           
 10619                           ;stkvar	_s @ sp[(-18)+12]
 10620  003008  0EFA               	movlw	-6
 10621  00300A  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10622  003010  0EFB               	movlw	-5
 10623  003012  0060  F113  FFE3   	movff	btemp+11,plusw1
 10624                           
 10625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10626                           ;stkvar	_s @ sp[(-18)+12]
 10627  003018  0EFA               	movlw	-6
 10628  00301A  006F FF8C  F039    	movff	plusw1,btemp
 10629  003020  0EFB               	movlw	-5
 10630  003022  50E3               	movf	plusw1,w,c
 10631  003024  1039               	iorwf	btemp,w,c
 10632  003026  B4D8               	btfsc	status,2,c
 10633  003028  D025               	goto	u4820
 10634                           
 10635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10636                           ;stkvar	_n @ sp[(-18)+2]
 10637                           ;stkvar	_n @ sp[(-18)+2]
 10638  00302A  0EF0               	movlw	-16
 10639  00302C  6CE3               	negf	plusw1,c
 10640  00302E  0EF1               	movlw	-15
 10641  003030  1EE3               	comf	plusw1,f,c
 10642  003032  0EF2               	movlw	-14
 10643  003034  1EE3               	comf	plusw1,f,c
 10644  003036  0EF3               	movlw	-13
 10645  003038  1EE3               	comf	plusw1,f,c
 10646  00303A  0EF4               	movlw	-12
 10647  00303C  1EE3               	comf	plusw1,f,c
 10648  00303E  0EF5               	movlw	-11
 10649  003040  1EE3               	comf	plusw1,f,c
 10650  003042  0EF6               	movlw	-10
 10651  003044  1EE3               	comf	plusw1,f,c
 10652  003046  0EF7               	movlw	-9
 10653  003048  1EE3               	comf	plusw1,f,c
 10654  00304A  E314               	bnc	u4820
 10655  00304C  0EF1               	movlw	-15
 10656  00304E  2AE3               	incf	plusw1,f,c
 10657  003050  E311               	bnc	u4820
 10658  003052  0EF2               	movlw	-14
 10659  003054  2AE3               	incf	plusw1,f,c
 10660  003056  E30E               	bnc	u4820
 10661  003058  0EF3               	movlw	-13
 10662  00305A  2AE3               	incf	plusw1,f,c
 10663  00305C  E30B               	bnc	u4820
 10664  00305E  0EF4               	movlw	-12
 10665  003060  2AE3               	incf	plusw1,f,c
 10666  003062  E308               	bnc	u4820
 10667  003064  0EF5               	movlw	-11
 10668  003066  2AE3               	incf	plusw1,f,c
 10669  003068  E305               	bnc	u4820
 10670  00306A  0EF6               	movlw	-10
 10671  00306C  2AE3               	incf	plusw1,f,c
 10672  00306E  E302               	bnc	u4820
 10673  003070  0EF7               	movlw	-9
 10674  003072  2AE3               	incf	plusw1,f,c
 10675  003074                     u4820:
 10676                           
 10677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10678  003074  AE20               	btfss	_prec+1,7,c
 10679                           
 10680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10681  003076  9221               	bcf	_flags,1,c
 10682                           
 10683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10684  003078  BE20               	btfsc	_prec+1,7,c
 10685  00307A  D005               	goto	u4840
 10686  00307C  5020               	movf	_prec+1,w,c
 10687  00307E  E110               	bnz	l8159
 10688  003080  041F               	decf	_prec,w,c
 10689  003082  B0D8               	btfsc	status,0,c
 10690  003084  D00D               	goto	l8159
 10691  003086                     u4840:
 10692  003086  0E01               	movlw	1
 10693  003088  6E43               	movwf	btemp+10,c
 10694  00308A  0E00               	movlw	0
 10695  00308C  6E44               	movwf	btemp+11,c
 10696                           
 10697                           ;stkvar	_p @ sp[(-18)+16]
 10698  00308E  0EFE               	movlw	-2
 10699  003090  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10700  003096  0EFF               	movlw	-1
 10701  003098  0060  F113  FFE3   	movff	btemp+11,plusw1
 10702  00309E  D008               	goto	l1865
 10703  0030A0                     l8159:
 10704                           
 10705                           ;stkvar	_p @ sp[(-18)+16]
 10706  0030A0  0EFE               	movlw	-2
 10707  0030A2  0060  F07F  FFE3   	movff	_prec,plusw1
 10708  0030A8  0EFF               	movlw	-1
 10709  0030AA  0060  F083  FFE3   	movff	_prec+1,plusw1
 10710  0030B0                     l1865:
 10711                           
 10712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10713                           ;stkvar	_w @ sp[(-18)+14]
 10714  0030B0  0EFC               	movlw	-4
 10715  0030B2  0060  F077  FFE3   	movff	_width,plusw1
 10716  0030B8  0EFD               	movlw	-3
 10717  0030BA  0060  F07B  FFE3   	movff	_width+1,plusw1
 10718                           
 10719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10720                           ;stkvar	_s @ sp[(-18)+12]
 10721  0030C0  0EFA               	movlw	-6
 10722  0030C2  006F FF8C  F039    	movff	plusw1,btemp
 10723  0030C8  0EFB               	movlw	-5
 10724  0030CA  50E3               	movf	plusw1,w,c
 10725  0030CC  1039               	iorwf	btemp,w,c
 10726  0030CE  A4D8               	btfss	status,2,c
 10727  0030D0  D002               	goto	u4860
 10728  0030D2  A421               	btfss	_flags,2,c
 10729  0030D4  D00A               	goto	l8167
 10730  0030D6                     u4860:
 10731                           
 10732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10733                           ;stkvar	_w @ sp[(-18)+14]
 10734  0030D6  50E1               	movf	fsr1l,w,c
 10735  0030D8  0FFC               	addlw	-4
 10736  0030DA  6ED9               	movwf	fsr2l,c
 10737  0030DC  50E2               	movf	fsr1h,w,c
 10738  0030DE  6EDA               	movwf	fsr2h,c
 10739  0030E0  0EFF               	movlw	255
 10740  0030E2  22DA               	addwfc	fsr2h,f,c
 10741  0030E4  06DE               	decf	postinc2,f,c
 10742  0030E6  0E00               	movlw	0
 10743  0030E8  5ADD               	subwfb	postdec2,f,c
 10744  0030EA                     l8167:
 10745                           
 10746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10747  0030EA  0E1F               	movlw	31
 10748  0030EC  6E43               	movwf	btemp+10,c
 10749  0030EE  0E00               	movlw	0
 10750  0030F0  6E44               	movwf	btemp+11,c
 10751                           
 10752                           ;stkvar	_i @ sp[(-18)+10]
 10753  0030F2  0EF8               	movlw	-8
 10754  0030F4  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10755  0030FA  0EF9               	movlw	-7
 10756  0030FC  0060  F113  FFE3   	movff	btemp+11,plusw1
 10757                           
 10758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10759  003102  0101               	movlb	1	; () banked
 10760  003104  6BEF               	clrf	(_dbuf+31)& (0+255),b
 10761                           
 10762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10763  003106  D109               	goto	l8181
 10764  003108                     l8171:
 10765                           
 10766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10767                           ;stkvar	_i @ sp[(-18)+10]
 10768  003108  50E1               	movf	fsr1l,w,c
 10769  00310A  0FF8               	addlw	-8
 10770  00310C  6ED9               	movwf	fsr2l,c
 10771  00310E  50E2               	movf	fsr1h,w,c
 10772  003110  6EDA               	movwf	fsr2h,c
 10773  003112  0EFF               	movlw	255
 10774  003114  22DA               	addwfc	fsr2h,f,c
 10775  003116  06DE               	decf	postinc2,f,c
 10776  003118  0E00               	movlw	0
 10777  00311A  5ADD               	subwfb	postdec2,f,c
 10778                           
 10779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10780  00311C  0E0A               	movlw	10
 10781  00311E  6EE6               	movwf	postinc1,c
 10782  003120  0E00               	movlw	0
 10783  003122  6EE6               	movwf	postinc1,c
 10784  003124  0E00               	movlw	0
 10785  003126  6EE6               	movwf	postinc1,c
 10786  003128  0E00               	movlw	0
 10787  00312A  6EE6               	movwf	postinc1,c
 10788  00312C  0E00               	movlw	0
 10789  00312E  6EE6               	movwf	postinc1,c
 10790  003130  0E00               	movlw	0
 10791  003132  6EE6               	movwf	postinc1,c
 10792  003134  0E00               	movlw	0
 10793  003136  6EE6               	movwf	postinc1,c
 10794  003138  0E00               	movlw	0
 10795  00313A  6EE6               	movwf	postinc1,c
 10796                           
 10797                           ;stkvar	_n @ sp[(-26)+2]
 10798  00313C  50E1               	movf	fsr1l,w,c
 10799  00313E  0FE8               	addlw	-24
 10800  003140  6ED9               	movwf	fsr2l,c
 10801  003142  50E2               	movf	fsr1h,w,c
 10802  003144  6EDA               	movwf	fsr2h,c
 10803  003146  0EFF               	movlw	255
 10804  003148  22DA               	addwfc	fsr2h,f,c
 10805  00314A  006F FF7B FFE6     	movff	postinc2,postinc1
 10806  003150  006F FF7B FFE6     	movff	postinc2,postinc1
 10807  003156  006F FF7B FFE6     	movff	postinc2,postinc1
 10808  00315C  006F FF7B FFE6     	movff	postinc2,postinc1
 10809  003162  006F FF7B FFE6     	movff	postinc2,postinc1
 10810  003168  006F FF7B FFE6     	movff	postinc2,postinc1
 10811  00316E  006F FF7B FFE6     	movff	postinc2,postinc1
 10812  003174  006F FF7B FFE6     	movff	postinc2,postinc1
 10813  00317A  EC87  F023         	call	___aomod	;wreg free
 10814  00317E  52E5               	movf	postdec1,f,c
 10815  003180  006F FF9C  F050    	movff	indf1,btemp+23
 10816  003186  52E5               	movf	postdec1,f,c
 10817  003188  006F FF9C  F04F    	movff	indf1,btemp+22
 10818  00318E  52E5               	movf	postdec1,f,c
 10819  003190  006F FF9C  F04E    	movff	indf1,btemp+21
 10820  003196  52E5               	movf	postdec1,f,c
 10821  003198  006F FF9C  F04D    	movff	indf1,btemp+20
 10822  00319E  52E5               	movf	postdec1,f,c
 10823  0031A0  006F FF9C  F04C    	movff	indf1,btemp+19
 10824  0031A6  52E5               	movf	postdec1,f,c
 10825  0031A8  006F FF9C  F04B    	movff	indf1,btemp+18
 10826  0031AE  52E5               	movf	postdec1,f,c
 10827  0031B0  006F FF9C  F04A    	movff	indf1,btemp+17
 10828  0031B6  52E5               	movf	postdec1,f,c
 10829  0031B8  006F FF9C  F049    	movff	indf1,btemp+16
 10830  0031BE  0EF8               	movlw	248
 10831  0031C0  26E1               	addwf	fsr1l,f,c
 10832  0031C2  0EFF               	movlw	255
 10833  0031C4  22E2               	addwfc	fsr1h,f,c
 10834  0031C6  0060  F124  F043   	movff	btemp+16,btemp+10
 10835  0031CC  0060  F128  F044   	movff	btemp+17,btemp+11
 10836  0031D2  0060  F10F  FFE6   	movff	btemp+10,postinc1
 10837  0031D8  0060  F113  FFE6   	movff	btemp+11,postinc1
 10838  0031DE  EC5E  F02D         	call	_abs	;wreg free
 10839  0031E2  0E30               	movlw	48
 10840  0031E4  2639               	addwf	btemp,f,c
 10841                           
 10842                           ;stkvar	_i @ sp[(-18)+10]
 10843  0031E6  0EF8               	movlw	-8
 10844  0031E8  006F FF8C  F043    	movff	plusw1,btemp+10
 10845  0031EE  0EF9               	movlw	-7
 10846  0031F0  006F FF8C  F044    	movff	plusw1,btemp+11
 10847  0031F6  0ED0               	movlw	low _dbuf
 10848  0031F8  2443               	addwf	btemp+10,w,c
 10849  0031FA  6ED9               	movwf	fsr2l,c
 10850  0031FC  0E01               	movlw	high _dbuf
 10851  0031FE  2044               	addwfc	btemp+11,w,c
 10852  003200  6EDA               	movwf	fsr2h,c
 10853  003202  0060  F0E7  FFDF   	movff	btemp,indf2
 10854                           
 10855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10856                           ;stkvar	_p @ sp[(-18)+16]
 10857  003208  50E1               	movf	fsr1l,w,c
 10858  00320A  0FFE               	addlw	-2
 10859  00320C  6ED9               	movwf	fsr2l,c
 10860  00320E  50E2               	movf	fsr1h,w,c
 10861  003210  6EDA               	movwf	fsr2h,c
 10862  003212  0EFF               	movlw	255
 10863  003214  22DA               	addwfc	fsr2h,f,c
 10864  003216  06DE               	decf	postinc2,f,c
 10865  003218  0E00               	movlw	0
 10866  00321A  5ADD               	subwfb	postdec2,f,c
 10867                           
 10868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10869                           ;stkvar	_w @ sp[(-18)+14]
 10870  00321C  50E1               	movf	fsr1l,w,c
 10871  00321E  0FFC               	addlw	-4
 10872  003220  6ED9               	movwf	fsr2l,c
 10873  003222  50E2               	movf	fsr1h,w,c
 10874  003224  6EDA               	movwf	fsr2h,c
 10875  003226  0EFF               	movlw	255
 10876  003228  22DA               	addwfc	fsr2h,f,c
 10877  00322A  06DE               	decf	postinc2,f,c
 10878  00322C  0E00               	movlw	0
 10879  00322E  5ADD               	subwfb	postdec2,f,c
 10880                           
 10881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10882  003230  0E0A               	movlw	10
 10883  003232  6EE6               	movwf	postinc1,c
 10884  003234  0E00               	movlw	0
 10885  003236  6EE6               	movwf	postinc1,c
 10886  003238  0E00               	movlw	0
 10887  00323A  6EE6               	movwf	postinc1,c
 10888  00323C  0E00               	movlw	0
 10889  00323E  6EE6               	movwf	postinc1,c
 10890  003240  0E00               	movlw	0
 10891  003242  6EE6               	movwf	postinc1,c
 10892  003244  0E00               	movlw	0
 10893  003246  6EE6               	movwf	postinc1,c
 10894  003248  0E00               	movlw	0
 10895  00324A  6EE6               	movwf	postinc1,c
 10896  00324C  0E00               	movlw	0
 10897  00324E  6EE6               	movwf	postinc1,c
 10898                           
 10899                           ;stkvar	_n @ sp[(-26)+2]
 10900  003250  50E1               	movf	fsr1l,w,c
 10901  003252  0FE8               	addlw	-24
 10902  003254  6ED9               	movwf	fsr2l,c
 10903  003256  50E2               	movf	fsr1h,w,c
 10904  003258  6EDA               	movwf	fsr2h,c
 10905  00325A  0EFF               	movlw	255
 10906  00325C  22DA               	addwfc	fsr2h,f,c
 10907  00325E  006F FF7B FFE6     	movff	postinc2,postinc1
 10908  003264  006F FF7B FFE6     	movff	postinc2,postinc1
 10909  00326A  006F FF7B FFE6     	movff	postinc2,postinc1
 10910  003270  006F FF7B FFE6     	movff	postinc2,postinc1
 10911  003276  006F FF7B FFE6     	movff	postinc2,postinc1
 10912  00327C  006F FF7B FFE6     	movff	postinc2,postinc1
 10913  003282  006F FF7B FFE6     	movff	postinc2,postinc1
 10914  003288  006F FF7B FFE6     	movff	postinc2,postinc1
 10915  00328E  ECF2  F01F         	call	___aodiv	;wreg free
 10916  003292  52E5               	movf	postdec1,f,c
 10917  003294  006F FF9C  F050    	movff	indf1,btemp+23
 10918  00329A  52E5               	movf	postdec1,f,c
 10919  00329C  006F FF9C  F04F    	movff	indf1,btemp+22
 10920  0032A2  52E5               	movf	postdec1,f,c
 10921  0032A4  006F FF9C  F04E    	movff	indf1,btemp+21
 10922  0032AA  52E5               	movf	postdec1,f,c
 10923  0032AC  006F FF9C  F04D    	movff	indf1,btemp+20
 10924  0032B2  52E5               	movf	postdec1,f,c
 10925  0032B4  006F FF9C  F04C    	movff	indf1,btemp+19
 10926  0032BA  52E5               	movf	postdec1,f,c
 10927  0032BC  006F FF9C  F04B    	movff	indf1,btemp+18
 10928  0032C2  52E5               	movf	postdec1,f,c
 10929  0032C4  006F FF9C  F04A    	movff	indf1,btemp+17
 10930  0032CA  52E5               	movf	postdec1,f,c
 10931  0032CC  006F FF9C  F049    	movff	indf1,btemp+16
 10932  0032D2  0EF8               	movlw	248
 10933  0032D4  26E1               	addwf	fsr1l,f,c
 10934  0032D6  0EFF               	movlw	255
 10935  0032D8  22E2               	addwfc	fsr1h,f,c
 10936                           
 10937                           ;stkvar	_n @ sp[(-18)+2]
 10938  0032DA  0EF0               	movlw	-16
 10939  0032DC  0060  F127  FFE3   	movff	btemp+16,plusw1
 10940  0032E2  0EF1               	movlw	-15
 10941  0032E4  0060  F12B  FFE3   	movff	btemp+17,plusw1
 10942  0032EA  0EF2               	movlw	-14
 10943  0032EC  0060  F12F  FFE3   	movff	btemp+18,plusw1
 10944  0032F2  0EF3               	movlw	-13
 10945  0032F4  0060  F133  FFE3   	movff	btemp+19,plusw1
 10946  0032FA  0EF4               	movlw	-12
 10947  0032FC  0060  F137  FFE3   	movff	btemp+20,plusw1
 10948  003302  0EF5               	movlw	-11
 10949  003304  0060  F13B  FFE3   	movff	btemp+21,plusw1
 10950  00330A  0EF6               	movlw	-10
 10951  00330C  0060  F13F  FFE3   	movff	btemp+22,plusw1
 10952  003312  0EF7               	movlw	-9
 10953  003314  0060  F143  FFE3   	movff	btemp+23,plusw1
 10954  00331A                     l8181:
 10955                           
 10956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10957                           ;stkvar	_i @ sp[(-18)+10]
 10958  00331A  0EF9               	movlw	-7
 10959  00331C  BEE3               	btfsc	plusw1,7,c
 10960  00331E  D036               	goto	u4910
 10961  003320  0EF9               	movlw	-7
 10962  003322  50E3               	movf	plusw1,w,c
 10963  003324  E104               	bnz	u4870
 10964  003326  0EF8               	movlw	-8
 10965  003328  04E3               	decf	plusw1,w,c
 10966  00332A  A0D8               	btfss	status,0,c
 10967  00332C  D02F               	goto	u4910
 10968  00332E                     u4870:
 10969                           
 10970                           ;stkvar	_n @ sp[(-18)+2]
 10971  00332E  0EF0               	movlw	-16
 10972  003330  50E3               	movf	plusw1,w,c
 10973  003332  E115               	bnz	u4881
 10974  003334  0EF1               	movlw	-15
 10975  003336  50E3               	movf	plusw1,w,c
 10976  003338  E112               	bnz	u4881
 10977  00333A  0EF2               	movlw	-14
 10978  00333C  50E3               	movf	plusw1,w,c
 10979  00333E  E10F               	bnz	u4881
 10980  003340  0EF3               	movlw	-13
 10981  003342  50E3               	movf	plusw1,w,c
 10982  003344  E10C               	bnz	u4881
 10983  003346  0EF4               	movlw	-12
 10984  003348  50E3               	movf	plusw1,w,c
 10985  00334A  E109               	bnz	u4881
 10986  00334C  0EF5               	movlw	-11
 10987  00334E  50E3               	movf	plusw1,w,c
 10988  003350  E106               	bnz	u4881
 10989  003352  0EF6               	movlw	-10
 10990  003354  50E3               	movf	plusw1,w,c
 10991  003356  E103               	bnz	u4881
 10992  003358  0EF7               	movlw	-9
 10993  00335A  50E3               	movf	plusw1,w,c
 10994  00335C  A4D8               	btfss	status,2,c
 10995  00335E                     u4881:
 10996  00335E  D6D4               	goto	l8171
 10997                           
 10998                           ;stkvar	_p @ sp[(-18)+16]
 10999  003360  0EFF               	movlw	-1
 11000  003362  BEE3               	btfsc	plusw1,7,c
 11001  003364  D007               	goto	u4890
 11002  003366  0EFF               	movlw	-1
 11003  003368  50E3               	movf	plusw1,w,c
 11004  00336A  E103               	bnz	u4891
 11005  00336C  0EFE               	movlw	-2
 11006  00336E  04E3               	decf	plusw1,w,c
 11007  003370  B0D8               	btfsc	status,0,c
 11008  003372                     u4891:
 11009  003372  D6CA               	goto	l8171
 11010  003374                     u4890:
 11011                           
 11012                           ;stkvar	_w @ sp[(-18)+14]
 11013  003374  0EFD               	movlw	-3
 11014  003376  BEE3               	btfsc	plusw1,7,c
 11015  003378  D009               	goto	u4910
 11016  00337A  0EFD               	movlw	-3
 11017  00337C  50E3               	movf	plusw1,w,c
 11018  00337E  E104               	bnz	u4900
 11019  003380  0EFC               	movlw	-4
 11020  003382  04E3               	decf	plusw1,w,c
 11021  003384  A0D8               	btfss	status,0,c
 11022  003386  D002               	goto	u4910
 11023  003388                     u4900:
 11024  003388  B221               	btfsc	_flags,1,c
 11025  00338A  D6BE               	goto	l8171
 11026  00338C                     u4910:
 11027                           
 11028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 11029                           ;stkvar	_s @ sp[(-18)+12]
 11030  00338C  0EFA               	movlw	-6
 11031  00338E  006F FF8C  F039    	movff	plusw1,btemp
 11032  003394  0EFB               	movlw	-5
 11033  003396  50E3               	movf	plusw1,w,c
 11034  003398  1039               	iorwf	btemp,w,c
 11035  00339A  A4D8               	btfss	status,2,c
 11036  00339C  D002               	goto	u4930
 11037  00339E  A421               	btfss	_flags,2,c
 11038  0033A0  D033               	goto	l8205
 11039  0033A2                     u4930:
 11040                           
 11041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11042                           ;stkvar	_i @ sp[(-18)+10]
 11043  0033A2  50E1               	movf	fsr1l,w,c
 11044  0033A4  0FF8               	addlw	-8
 11045  0033A6  6ED9               	movwf	fsr2l,c
 11046  0033A8  50E2               	movf	fsr1h,w,c
 11047  0033AA  6EDA               	movwf	fsr2h,c
 11048  0033AC  0EFF               	movlw	255
 11049  0033AE  22DA               	addwfc	fsr2h,f,c
 11050  0033B0  06DE               	decf	postinc2,f,c
 11051  0033B2  0E00               	movlw	0
 11052  0033B4  5ADD               	subwfb	postdec2,f,c
 11053                           
 11054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11055                           ;stkvar	_s @ sp[(-18)+12]
 11056  0033B6  0EFA               	movlw	-6
 11057  0033B8  006F FF8C  F039    	movff	plusw1,btemp
 11058  0033BE  0EFB               	movlw	-5
 11059  0033C0  50E3               	movf	plusw1,w,c
 11060  0033C2  1039               	iorwf	btemp,w,c
 11061  0033C4  A4D8               	btfss	status,2,c
 11062  0033C6  D002               	goto	l8201
 11063  0033C8  0E2B               	movlw	43
 11064  0033CA  D001               	goto	L25
 11065  0033CC                     l8201:
 11066  0033CC  0E2D               	movlw	45
 11067  0033CE                     L25:
 11068  0033CE  6E43               	movwf	btemp+10,c
 11069  0033D0  0E00               	movlw	0
 11070  0033D2  6E44               	movwf	btemp+11,c
 11071                           
 11072                           ;stkvar	_dtoa$3935 @ sp[(-18)+0]
 11073  0033D4  0EEE               	movlw	-18
 11074  0033D6  0060  F10F  FFE3   	movff	btemp+10,plusw1
 11075  0033DC  0EEF               	movlw	-17
 11076  0033DE  0060  F113  FFE3   	movff	btemp+11,plusw1
 11077                           
 11078                           ;stkvar	_dtoa$3935 @ sp[(-18)+0]
 11079                           ;stkvar	_i @ sp[(-18)+10]
 11080  0033E4  0EF8               	movlw	-8
 11081  0033E6  006F FF8C  F043    	movff	plusw1,btemp+10
 11082  0033EC  0EF9               	movlw	-7
 11083  0033EE  006F FF8C  F044    	movff	plusw1,btemp+11
 11084  0033F4  0ED0               	movlw	low _dbuf
 11085  0033F6  2443               	addwf	btemp+10,w,c
 11086  0033F8  6ED9               	movwf	fsr2l,c
 11087  0033FA  0E01               	movlw	high _dbuf
 11088  0033FC  2044               	addwfc	btemp+11,w,c
 11089  0033FE  6EDA               	movwf	fsr2h,c
 11090  003400  0EEE               	movlw	-18
 11091  003402  006F FF8F FFDF     	movff	plusw1,indf2
 11092  003408                     l8205:
 11093                           
 11094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11095                           ;stkvar	_w @ sp[(-18)+14]
 11096  003408  0EFC               	movlw	-4
 11097  00340A  006F FF8F FFE6     	movff	plusw1,postinc1
 11098  003410  006F FF8F FFE6     	movff	plusw1,postinc1
 11099                           
 11100                           ;stkvar	_i @ sp[(-20)+10]
 11101  003416  0ED0               	movlw	low _dbuf
 11102  003418  6E43               	movwf	btemp+10,c
 11103  00341A  0E01               	movlw	high _dbuf
 11104  00341C  6E44               	movwf	btemp+11,c
 11105  00341E  0EF6               	movlw	-10
 11106  003420  50E3               	movf	plusw1,w,c
 11107  003422  2643               	addwf	btemp+10,f,c
 11108  003424  0EF7               	movlw	-9
 11109  003426  50E3               	movf	plusw1,w,c
 11110  003428  2244               	addwfc	btemp+11,f,c
 11111  00342A  0060  F10F  FFE6   	movff	btemp+10,postinc1
 11112  003430  0060  F113  FFE6   	movff	btemp+11,postinc1
 11113                           
 11114                           ;stkvar	_fp @ sp[(-22)+-2]
 11115  003436  0EE8               	movlw	-24
 11116  003438  006F FF8F FFE6     	movff	plusw1,postinc1
 11117  00343E  006F FF8F FFE6     	movff	plusw1,postinc1
 11118  003444  EC6F  F025         	call	_pad	;wreg free
 11119                           
 11120                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11121  003448  0EE4               	movlw	228
 11122  00344A  26E1               	addwf	fsr1l,f,c
 11123  00344C  0EFF               	movlw	255
 11124  00344E  22E2               	addwfc	fsr1h,f,c
 11125  003450  0012               	return		;funcret
 11126  003452                     __end_of_dtoa:
 11127                           	opt callstack 0
 11128                           
 11129 ;; *************** function _abs *****************
 11130 ;; Defined at:
 11131 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;  a               2  [STACK] int 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  2  [STACK] int 
 11138 ;; Registers used:
 11139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/1
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:    3
 11152 ;; This function calls:
 11153 ;;		Nothing
 11154 ;; This function is called by:
 11155 ;;		_dtoa
 11156 ;; This function uses a reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text44
 11160  005ABC                     __ptext44:
 11161                           	opt callstack 0
 11162  005ABC                     _abs:
 11163                           	opt callstack 23
 11164                           
 11165                           ;stkvar	_a @ sp[(0)+-2]
 11166                           
 11167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11168                           ;incstack = 0
 11169  005ABC  0EFF               	movlw	-1
 11170  005ABE  BEE3               	btfsc	plusw1,7,c
 11171  005AC0  D007               	goto	u2490
 11172  005AC2  0EFF               	movlw	-1
 11173  005AC4  50E3               	movf	plusw1,w,c
 11174  005AC6  E112               	bnz	l5377
 11175  005AC8  0EFE               	movlw	-2
 11176  005ACA  04E3               	decf	plusw1,w,c
 11177  005ACC  B0D8               	btfsc	status,0,c
 11178  005ACE  D00E               	goto	l5377
 11179  005AD0                     u2490:
 11180                           
 11181                           ;stkvar	_a @ sp[(0)+-2]
 11182  005AD0  0EFE               	movlw	-2
 11183  005AD2  006F FF8C  F039    	movff	plusw1,btemp
 11184  005AD8  1E39               	comf	btemp,f,c
 11185  005ADA  0EFF               	movlw	-1
 11186  005ADC  006F FF8C  F03A    	movff	plusw1,btemp+1
 11187  005AE2  1E3A               	comf	btemp+1,f,c
 11188  005AE4  2A39               	incf	btemp,f,c
 11189  005AE6  B4D8               	btfsc	status,2,c
 11190  005AE8  2A3A               	incf	btemp+1,f,c
 11191  005AEA  D008               	goto	l2606
 11192  005AEC                     l5377:
 11193                           
 11194                           ;stkvar	_a @ sp[(0)+-2]
 11195  005AEC  0EFE               	movlw	-2
 11196  005AEE  006F FF8C  F039    	movff	plusw1,btemp
 11197  005AF4  0EFF               	movlw	-1
 11198  005AF6  006F FF8C  F03A    	movff	plusw1,btemp+1
 11199  005AFC                     l2606:
 11200                           
 11201                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11202  005AFC  52E5               	movf	postdec1,f,c
 11203  005AFE  52E5               	movf	postdec1,f,c
 11204  005B00  0012               	return		;funcret
 11205  005B02                     __end_of_abs:
 11206                           	opt callstack 0
 11207                           
 11208 ;; *************** function ___aomod *****************
 11209 ;; Defined at:
 11210 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  dividend        8  [STACK] long long 
 11213 ;;  divisor         8  [STACK] long long 
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;  sign            1  [STACK] unsigned char 
 11216 ;;  counter         1  [STACK] unsigned char 
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  8  [STACK] long long 
 11219 ;; Registers used:
 11220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/1
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11230 ;;Total ram usage:        0 bytes
 11231 ;; Hardware stack levels used:    1
 11232 ;; Hardware stack levels required when called:    3
 11233 ;; This function calls:
 11234 ;;		Nothing
 11235 ;; This function is called by:
 11236 ;;		_dtoa
 11237 ;; This function uses a reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text45
 11241  00470E                     __ptext45:
 11242                           	opt callstack 0
 11243  00470E                     ___aomod:
 11244                           	opt callstack 0
 11245                           
 11246                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11247  00470E  52E6               	movf	postinc1,f,c
 11248  004710  52E6               	movf	postinc1,f,c
 11249                           
 11250                           ;stkvar	_sign @ sp[(-2)+0]
 11251                           
 11252                           ;incstack = 0
 11253  004712  0EFE               	movlw	-2
 11254  004714  6AE3               	clrf	plusw1,c
 11255                           
 11256                           ;stkvar	_dividend @ sp[(-2)+-8]
 11257  004716  0EFD               	movlw	-3
 11258  004718  AEE3               	btfss	plusw1,7,c
 11259  00471A  D028               	goto	l5433
 11260                           
 11261                           ;stkvar	_dividend @ sp[(-2)+-8]
 11262                           ;stkvar	_dividend @ sp[(-2)+-8]
 11263  00471C  0EF6               	movlw	-10
 11264  00471E  6CE3               	negf	plusw1,c
 11265  004720  0EF7               	movlw	-9
 11266  004722  1EE3               	comf	plusw1,f,c
 11267  004724  0EF8               	movlw	-8
 11268  004726  1EE3               	comf	plusw1,f,c
 11269  004728  0EF9               	movlw	-7
 11270  00472A  1EE3               	comf	plusw1,f,c
 11271  00472C  0EFA               	movlw	-6
 11272  00472E  1EE3               	comf	plusw1,f,c
 11273  004730  0EFB               	movlw	-5
 11274  004732  1EE3               	comf	plusw1,f,c
 11275  004734  0EFC               	movlw	-4
 11276  004736  1EE3               	comf	plusw1,f,c
 11277  004738  0EFD               	movlw	-3
 11278  00473A  1EE3               	comf	plusw1,f,c
 11279  00473C  E314               	bnc	u2630
 11280  00473E  0EF7               	movlw	-9
 11281  004740  2AE3               	incf	plusw1,f,c
 11282  004742  E311               	bnc	u2630
 11283  004744  0EF8               	movlw	-8
 11284  004746  2AE3               	incf	plusw1,f,c
 11285  004748  E30E               	bnc	u2630
 11286  00474A  0EF9               	movlw	-7
 11287  00474C  2AE3               	incf	plusw1,f,c
 11288  00474E  E30B               	bnc	u2630
 11289  004750  0EFA               	movlw	-6
 11290  004752  2AE3               	incf	plusw1,f,c
 11291  004754  E308               	bnc	u2630
 11292  004756  0EFB               	movlw	-5
 11293  004758  2AE3               	incf	plusw1,f,c
 11294  00475A  E305               	bnc	u2630
 11295  00475C  0EFC               	movlw	-4
 11296  00475E  2AE3               	incf	plusw1,f,c
 11297  004760  E302               	bnc	u2630
 11298  004762  0EFD               	movlw	-3
 11299  004764  2AE3               	incf	plusw1,f,c
 11300  004766                     u2630:
 11301                           
 11302                           ;stkvar	_sign @ sp[(-2)+0]
 11303  004766  0EFE               	movlw	-2
 11304  004768  6AE3               	clrf	plusw1,c
 11305  00476A  2AE3               	incf	plusw1,f,c
 11306  00476C                     l5433:
 11307                           
 11308                           ;stkvar	_divisor @ sp[(-2)+-16]
 11309  00476C  0EF5               	movlw	-11
 11310  00476E  AEE3               	btfss	plusw1,7,c
 11311  004770  D025               	goto	u2650
 11312                           
 11313                           ;stkvar	_divisor @ sp[(-2)+-16]
 11314                           ;stkvar	_divisor @ sp[(-2)+-16]
 11315  004772  0EEE               	movlw	-18
 11316  004774  6CE3               	negf	plusw1,c
 11317  004776  0EEF               	movlw	-17
 11318  004778  1EE3               	comf	plusw1,f,c
 11319  00477A  0EF0               	movlw	-16
 11320  00477C  1EE3               	comf	plusw1,f,c
 11321  00477E  0EF1               	movlw	-15
 11322  004780  1EE3               	comf	plusw1,f,c
 11323  004782  0EF2               	movlw	-14
 11324  004784  1EE3               	comf	plusw1,f,c
 11325  004786  0EF3               	movlw	-13
 11326  004788  1EE3               	comf	plusw1,f,c
 11327  00478A  0EF4               	movlw	-12
 11328  00478C  1EE3               	comf	plusw1,f,c
 11329  00478E  0EF5               	movlw	-11
 11330  004790  1EE3               	comf	plusw1,f,c
 11331  004792  E314               	bnc	u2650
 11332  004794  0EEF               	movlw	-17
 11333  004796  2AE3               	incf	plusw1,f,c
 11334  004798  E311               	bnc	u2650
 11335  00479A  0EF0               	movlw	-16
 11336  00479C  2AE3               	incf	plusw1,f,c
 11337  00479E  E30E               	bnc	u2650
 11338  0047A0  0EF1               	movlw	-15
 11339  0047A2  2AE3               	incf	plusw1,f,c
 11340  0047A4  E30B               	bnc	u2650
 11341  0047A6  0EF2               	movlw	-14
 11342  0047A8  2AE3               	incf	plusw1,f,c
 11343  0047AA  E308               	bnc	u2650
 11344  0047AC  0EF3               	movlw	-13
 11345  0047AE  2AE3               	incf	plusw1,f,c
 11346  0047B0  E305               	bnc	u2650
 11347  0047B2  0EF4               	movlw	-12
 11348  0047B4  2AE3               	incf	plusw1,f,c
 11349  0047B6  E302               	bnc	u2650
 11350  0047B8  0EF5               	movlw	-11
 11351  0047BA  2AE3               	incf	plusw1,f,c
 11352  0047BC                     u2650:
 11353                           
 11354                           ;stkvar	_divisor @ sp[(-2)+-16]
 11355  0047BC  0EEE               	movlw	-18
 11356  0047BE  50E3               	movf	plusw1,w,c
 11357  0047C0  E116               	bnz	u2660
 11358  0047C2  0EEF               	movlw	-17
 11359  0047C4  50E3               	movf	plusw1,w,c
 11360  0047C6  E113               	bnz	u2660
 11361  0047C8  0EF0               	movlw	-16
 11362  0047CA  50E3               	movf	plusw1,w,c
 11363  0047CC  E110               	bnz	u2660
 11364  0047CE  0EF1               	movlw	-15
 11365  0047D0  50E3               	movf	plusw1,w,c
 11366  0047D2  E10D               	bnz	u2660
 11367  0047D4  0EF2               	movlw	-14
 11368  0047D6  50E3               	movf	plusw1,w,c
 11369  0047D8  E10A               	bnz	u2660
 11370  0047DA  0EF3               	movlw	-13
 11371  0047DC  50E3               	movf	plusw1,w,c
 11372  0047DE  E107               	bnz	u2660
 11373  0047E0  0EF4               	movlw	-12
 11374  0047E2  50E3               	movf	plusw1,w,c
 11375  0047E4  E104               	bnz	u2660
 11376  0047E6  0EF5               	movlw	-11
 11377  0047E8  50E3               	movf	plusw1,w,c
 11378  0047EA  B4D8               	btfsc	status,2,c
 11379  0047EC  D075               	goto	u2690
 11380  0047EE                     u2660:
 11381                           
 11382                           ;stkvar	_counter @ sp[(-2)+1]
 11383  0047EE  0EFF               	movlw	-1
 11384  0047F0  6AE3               	clrf	plusw1,c
 11385  0047F2  D012               	goto	L26
 11386  0047F4                     l5441:
 11387                           
 11388                           ;stkvar	_divisor @ sp[(-2)+-16]
 11389  0047F4  90D8               	bcf	status,0,c
 11390  0047F6  0EEE               	movlw	-18
 11391  0047F8  36E3               	rlcf	plusw1,f,c
 11392  0047FA  0EEF               	movlw	-17
 11393  0047FC  36E3               	rlcf	plusw1,f,c
 11394  0047FE  0EF0               	movlw	-16
 11395  004800  36E3               	rlcf	plusw1,f,c
 11396  004802  0EF1               	movlw	-15
 11397  004804  36E3               	rlcf	plusw1,f,c
 11398  004806  0EF2               	movlw	-14
 11399  004808  36E3               	rlcf	plusw1,f,c
 11400  00480A  0EF3               	movlw	-13
 11401  00480C  36E3               	rlcf	plusw1,f,c
 11402  00480E  0EF4               	movlw	-12
 11403  004810  36E3               	rlcf	plusw1,f,c
 11404  004812  0EF5               	movlw	-11
 11405  004814  36E3               	rlcf	plusw1,f,c
 11406                           
 11407                           ;stkvar	_counter @ sp[(-2)+1]
 11408  004816  0EFF               	movlw	-1
 11409  004818                     L26:
 11410  004818  2AE3               	incf	plusw1,f,c
 11411                           
 11412                           ;stkvar	_divisor @ sp[(-2)+-16]
 11413  00481A  0EF5               	movlw	-11
 11414  00481C  AEE3               	btfss	plusw1,7,c
 11415  00481E  D7EA               	goto	l5441
 11416  004820                     u2670:
 11417                           
 11418                           ;stkvar	_divisor @ sp[(-2)+-16]
 11419                           ;stkvar	_dividend @ sp[(-2)+-8]
 11420  004820  50E1               	movf	fsr1l,w,c
 11421  004822  0FF6               	addlw	-10
 11422  004824  6ED9               	movwf	fsr2l,c
 11423  004826  50E2               	movf	fsr1h,w,c
 11424  004828  6EDA               	movwf	fsr2h,c
 11425  00482A  0EFF               	movlw	255
 11426  00482C  22DA               	addwfc	fsr2h,f,c
 11427  00482E  0EEE               	movlw	-18
 11428  004830  50E3               	movf	plusw1,w,c
 11429  004832  5CDE               	subwf	postinc2,w,c
 11430  004834  0EEF               	movlw	-17
 11431  004836  50E3               	movf	plusw1,w,c
 11432  004838  58DE               	subwfb	postinc2,w,c
 11433  00483A  0EF0               	movlw	-16
 11434  00483C  50E3               	movf	plusw1,w,c
 11435  00483E  58DE               	subwfb	postinc2,w,c
 11436  004840  0EF1               	movlw	-15
 11437  004842  50E3               	movf	plusw1,w,c
 11438  004844  58DE               	subwfb	postinc2,w,c
 11439  004846  0EF2               	movlw	-14
 11440  004848  50E3               	movf	plusw1,w,c
 11441  00484A  58DE               	subwfb	postinc2,w,c
 11442  00484C  0EF3               	movlw	-13
 11443  00484E  50E3               	movf	plusw1,w,c
 11444  004850  58DE               	subwfb	postinc2,w,c
 11445  004852  0EF4               	movlw	-12
 11446  004854  50E3               	movf	plusw1,w,c
 11447  004856  58DE               	subwfb	postinc2,w,c
 11448  004858  0EF5               	movlw	-11
 11449  00485A  50E3               	movf	plusw1,w,c
 11450  00485C  58DE               	subwfb	postinc2,w,c
 11451  00485E  A0D8               	btfss	status,0,c
 11452  004860  D01F               	goto	l5449
 11453                           
 11454                           ;stkvar	_divisor @ sp[(-2)+-16]
 11455                           ;stkvar	_dividend @ sp[(-2)+-8]
 11456  004862  50E1               	movf	fsr1l,w,c
 11457  004864  0FF6               	addlw	-10
 11458  004866  6ED9               	movwf	fsr2l,c
 11459  004868  50E2               	movf	fsr1h,w,c
 11460  00486A  6EDA               	movwf	fsr2h,c
 11461  00486C  0EFF               	movlw	255
 11462  00486E  22DA               	addwfc	fsr2h,f,c
 11463  004870  0EEE               	movlw	-18
 11464  004872  50E3               	movf	plusw1,w,c
 11465  004874  5EDE               	subwf	postinc2,f,c
 11466  004876  0EEF               	movlw	-17
 11467  004878  50E3               	movf	plusw1,w,c
 11468  00487A  5ADE               	subwfb	postinc2,f,c
 11469  00487C  0EF0               	movlw	-16
 11470  00487E  50E3               	movf	plusw1,w,c
 11471  004880  5ADE               	subwfb	postinc2,f,c
 11472  004882  0EF1               	movlw	-15
 11473  004884  50E3               	movf	plusw1,w,c
 11474  004886  5ADE               	subwfb	postinc2,f,c
 11475  004888  0EF2               	movlw	-14
 11476  00488A  50E3               	movf	plusw1,w,c
 11477  00488C  5ADE               	subwfb	postinc2,f,c
 11478  00488E  0EF3               	movlw	-13
 11479  004890  50E3               	movf	plusw1,w,c
 11480  004892  5ADE               	subwfb	postinc2,f,c
 11481  004894  0EF4               	movlw	-12
 11482  004896  50E3               	movf	plusw1,w,c
 11483  004898  5ADE               	subwfb	postinc2,f,c
 11484  00489A  0EF5               	movlw	-11
 11485  00489C  50E3               	movf	plusw1,w,c
 11486  00489E  5ADE               	subwfb	postinc2,f,c
 11487  0048A0                     l5449:
 11488                           
 11489                           ;stkvar	_divisor @ sp[(-2)+-16]
 11490  0048A0  90D8               	bcf	status,0,c
 11491  0048A2  0EF5               	movlw	-11
 11492  0048A4  32E3               	rrcf	plusw1,f,c
 11493  0048A6  0EF4               	movlw	-12
 11494  0048A8  32E3               	rrcf	plusw1,f,c
 11495  0048AA  0EF3               	movlw	-13
 11496  0048AC  32E3               	rrcf	plusw1,f,c
 11497  0048AE  0EF2               	movlw	-14
 11498  0048B0  32E3               	rrcf	plusw1,f,c
 11499  0048B2  0EF1               	movlw	-15
 11500  0048B4  32E3               	rrcf	plusw1,f,c
 11501  0048B6  0EF0               	movlw	-16
 11502  0048B8  32E3               	rrcf	plusw1,f,c
 11503  0048BA  0EEF               	movlw	-17
 11504  0048BC  32E3               	rrcf	plusw1,f,c
 11505  0048BE  0EEE               	movlw	-18
 11506  0048C0  32E3               	rrcf	plusw1,f,c
 11507                           
 11508                           ;stkvar	_counter @ sp[(-2)+1]
 11509  0048C2  0EFF               	movlw	-1
 11510  0048C4  50E3               	movf	plusw1,w,c
 11511  0048C6  6E39               	movwf	btemp,c
 11512  0048C8  0E01               	movlw	1
 11513  0048CA  5E39               	subwf	btemp,f,c
 11514  0048CC  0EFF               	movlw	-1
 11515  0048CE  0060  F0E7  FFE3   	movff	btemp,plusw1
 11516  0048D4  A4D8               	btfss	status,2,c
 11517  0048D6  D7A4               	goto	u2670
 11518  0048D8                     u2690:
 11519                           
 11520                           ;stkvar	_sign @ sp[(-2)+0]
 11521  0048D8  0EFE               	movlw	-2
 11522  0048DA  50E3               	movf	plusw1,w,c
 11523  0048DC  B4D8               	btfsc	status,2,c
 11524  0048DE  D025               	goto	u2710
 11525                           
 11526                           ;stkvar	_dividend @ sp[(-2)+-8]
 11527                           ;stkvar	_dividend @ sp[(-2)+-8]
 11528  0048E0  0EF6               	movlw	-10
 11529  0048E2  6CE3               	negf	plusw1,c
 11530  0048E4  0EF7               	movlw	-9
 11531  0048E6  1EE3               	comf	plusw1,f,c
 11532  0048E8  0EF8               	movlw	-8
 11533  0048EA  1EE3               	comf	plusw1,f,c
 11534  0048EC  0EF9               	movlw	-7
 11535  0048EE  1EE3               	comf	plusw1,f,c
 11536  0048F0  0EFA               	movlw	-6
 11537  0048F2  1EE3               	comf	plusw1,f,c
 11538  0048F4  0EFB               	movlw	-5
 11539  0048F6  1EE3               	comf	plusw1,f,c
 11540  0048F8  0EFC               	movlw	-4
 11541  0048FA  1EE3               	comf	plusw1,f,c
 11542  0048FC  0EFD               	movlw	-3
 11543  0048FE  1EE3               	comf	plusw1,f,c
 11544  004900  E314               	bnc	u2710
 11545  004902  0EF7               	movlw	-9
 11546  004904  2AE3               	incf	plusw1,f,c
 11547  004906  E311               	bnc	u2710
 11548  004908  0EF8               	movlw	-8
 11549  00490A  2AE3               	incf	plusw1,f,c
 11550  00490C  E30E               	bnc	u2710
 11551  00490E  0EF9               	movlw	-7
 11552  004910  2AE3               	incf	plusw1,f,c
 11553  004912  E30B               	bnc	u2710
 11554  004914  0EFA               	movlw	-6
 11555  004916  2AE3               	incf	plusw1,f,c
 11556  004918  E308               	bnc	u2710
 11557  00491A  0EFB               	movlw	-5
 11558  00491C  2AE3               	incf	plusw1,f,c
 11559  00491E  E305               	bnc	u2710
 11560  004920  0EFC               	movlw	-4
 11561  004922  2AE3               	incf	plusw1,f,c
 11562  004924  E302               	bnc	u2710
 11563  004926  0EFD               	movlw	-3
 11564  004928  2AE3               	incf	plusw1,f,c
 11565  00492A                     u2710:
 11566                           
 11567                           ;stkvar	_dividend @ sp[(-2)+-8]
 11568  00492A  0EF6               	movlw	246
 11569  00492C  24E1               	addwf	fsr1l,w,c
 11570  00492E  6ED9               	movwf	fsr2l,c
 11571  004930  0EFF               	movlw	255
 11572  004932  20E2               	addwfc	fsr1h,w,c
 11573  004934  6EDA               	movwf	fsr2h,c
 11574                           
 11575                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11576  004936  0E08               	movlw	8
 11577  004938  6E39               	movwf	btemp,c
 11578  00493A  0EF6               	movlw	-10
 11579  00493C                     us272999:
 11580  00493C  006F FF7B FFE3     	movff	postinc2,plusw1
 11581  004942  28E8               	incf	wreg,w,c
 11582  004944  2E39               	decfsz	btemp,f,c
 11583  004946  D7FA               	bra	us272999
 11584                           
 11585                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11586  004948  52E5               	movf	postdec1,f,c
 11587  00494A  52E5               	movf	postdec1,f,c
 11588  00494C  0012               	return		;funcret
 11589  00494E                     __end_of___aomod:
 11590                           	opt callstack 0
 11591                           
 11592 ;; *************** function ___aodiv *****************
 11593 ;; Defined at:
 11594 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  dividend        8  [STACK] long long 
 11597 ;;  divisor         8  [STACK] long long 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  quotient        8  [STACK] long long 
 11600 ;;  sign            1  [STACK] unsigned char 
 11601 ;;  counter         1  [STACK] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  8  [STACK] long long 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/1
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;Total ram usage:        0 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:    3
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_dtoa
 11622 ;; This function uses a reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text46
 11626  003FE4                     __ptext46:
 11627                           	opt callstack 0
 11628  003FE4                     ___aodiv:
 11629                           	opt callstack 0
 11630                           
 11631                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11632  003FE4  0E0A               	movlw	10
 11633  003FE6  26E1               	addwf	fsr1l,f,c
 11634  003FE8  0E00               	movlw	0
 11635  003FEA  22E2               	addwfc	fsr1h,f,c
 11636                           
 11637                           ;stkvar	_sign @ sp[(-10)+8]
 11638                           
 11639                           ;incstack = 0
 11640  003FEC  0EFE               	movlw	-2
 11641  003FEE  6AE3               	clrf	plusw1,c
 11642                           
 11643                           ;stkvar	_divisor @ sp[(-10)+-16]
 11644  003FF0  0EED               	movlw	-19
 11645  003FF2  AEE3               	btfss	plusw1,7,c
 11646  003FF4  D028               	goto	l5389
 11647                           
 11648                           ;stkvar	_divisor @ sp[(-10)+-16]
 11649                           ;stkvar	_divisor @ sp[(-10)+-16]
 11650  003FF6  0EE6               	movlw	-26
 11651  003FF8  6CE3               	negf	plusw1,c
 11652  003FFA  0EE7               	movlw	-25
 11653  003FFC  1EE3               	comf	plusw1,f,c
 11654  003FFE  0EE8               	movlw	-24
 11655  004000  1EE3               	comf	plusw1,f,c
 11656  004002  0EE9               	movlw	-23
 11657  004004  1EE3               	comf	plusw1,f,c
 11658  004006  0EEA               	movlw	-22
 11659  004008  1EE3               	comf	plusw1,f,c
 11660  00400A  0EEB               	movlw	-21
 11661  00400C  1EE3               	comf	plusw1,f,c
 11662  00400E  0EEC               	movlw	-20
 11663  004010  1EE3               	comf	plusw1,f,c
 11664  004012  0EED               	movlw	-19
 11665  004014  1EE3               	comf	plusw1,f,c
 11666  004016  E314               	bnc	u2510
 11667  004018  0EE7               	movlw	-25
 11668  00401A  2AE3               	incf	plusw1,f,c
 11669  00401C  E311               	bnc	u2510
 11670  00401E  0EE8               	movlw	-24
 11671  004020  2AE3               	incf	plusw1,f,c
 11672  004022  E30E               	bnc	u2510
 11673  004024  0EE9               	movlw	-23
 11674  004026  2AE3               	incf	plusw1,f,c
 11675  004028  E30B               	bnc	u2510
 11676  00402A  0EEA               	movlw	-22
 11677  00402C  2AE3               	incf	plusw1,f,c
 11678  00402E  E308               	bnc	u2510
 11679  004030  0EEB               	movlw	-21
 11680  004032  2AE3               	incf	plusw1,f,c
 11681  004034  E305               	bnc	u2510
 11682  004036  0EEC               	movlw	-20
 11683  004038  2AE3               	incf	plusw1,f,c
 11684  00403A  E302               	bnc	u2510
 11685  00403C  0EED               	movlw	-19
 11686  00403E  2AE3               	incf	plusw1,f,c
 11687  004040                     u2510:
 11688                           
 11689                           ;stkvar	_sign @ sp[(-10)+8]
 11690  004040  0EFE               	movlw	-2
 11691  004042  6AE3               	clrf	plusw1,c
 11692  004044  2AE3               	incf	plusw1,f,c
 11693  004046                     l5389:
 11694                           
 11695                           ;stkvar	_dividend @ sp[(-10)+-8]
 11696  004046  0EF5               	movlw	-11
 11697  004048  AEE3               	btfss	plusw1,7,c
 11698  00404A  D027               	goto	l5395
 11699                           
 11700                           ;stkvar	_dividend @ sp[(-10)+-8]
 11701                           ;stkvar	_dividend @ sp[(-10)+-8]
 11702  00404C  0EEE               	movlw	-18
 11703  00404E  6CE3               	negf	plusw1,c
 11704  004050  0EEF               	movlw	-17
 11705  004052  1EE3               	comf	plusw1,f,c
 11706  004054  0EF0               	movlw	-16
 11707  004056  1EE3               	comf	plusw1,f,c
 11708  004058  0EF1               	movlw	-15
 11709  00405A  1EE3               	comf	plusw1,f,c
 11710  00405C  0EF2               	movlw	-14
 11711  00405E  1EE3               	comf	plusw1,f,c
 11712  004060  0EF3               	movlw	-13
 11713  004062  1EE3               	comf	plusw1,f,c
 11714  004064  0EF4               	movlw	-12
 11715  004066  1EE3               	comf	plusw1,f,c
 11716  004068  0EF5               	movlw	-11
 11717  00406A  1EE3               	comf	plusw1,f,c
 11718  00406C  E314               	bnc	u2530
 11719  00406E  0EEF               	movlw	-17
 11720  004070  2AE3               	incf	plusw1,f,c
 11721  004072  E311               	bnc	u2530
 11722  004074  0EF0               	movlw	-16
 11723  004076  2AE3               	incf	plusw1,f,c
 11724  004078  E30E               	bnc	u2530
 11725  00407A  0EF1               	movlw	-15
 11726  00407C  2AE3               	incf	plusw1,f,c
 11727  00407E  E30B               	bnc	u2530
 11728  004080  0EF2               	movlw	-14
 11729  004082  2AE3               	incf	plusw1,f,c
 11730  004084  E308               	bnc	u2530
 11731  004086  0EF3               	movlw	-13
 11732  004088  2AE3               	incf	plusw1,f,c
 11733  00408A  E305               	bnc	u2530
 11734  00408C  0EF4               	movlw	-12
 11735  00408E  2AE3               	incf	plusw1,f,c
 11736  004090  E302               	bnc	u2530
 11737  004092  0EF5               	movlw	-11
 11738  004094  2AE3               	incf	plusw1,f,c
 11739  004096                     u2530:
 11740                           
 11741                           ;stkvar	_sign @ sp[(-10)+8]
 11742  004096  0EFE               	movlw	-2
 11743  004098  70E3               	btg	plusw1,0,c
 11744  00409A                     l5395:
 11745                           
 11746                           ;stkvar	_quotient @ sp[(-10)+0]
 11747  00409A  0E07               	movlw	7
 11748  00409C  6E39               	movwf	btemp,c
 11749  00409E  0EF6               	movlw	-10
 11750  0040A0                     u2541:
 11751  0040A0  6AE3               	clrf	plusw1,c
 11752  0040A2  2AE8               	incf	wreg,f,c
 11753  0040A4  0639               	decf	btemp,f,c
 11754  0040A6  E2FC               	bc	u2541
 11755                           
 11756                           ;stkvar	_divisor @ sp[(-10)+-16]
 11757  0040A8  0EE6               	movlw	-26
 11758  0040AA  50E3               	movf	plusw1,w,c
 11759  0040AC  E116               	bnz	u2550
 11760  0040AE  0EE7               	movlw	-25
 11761  0040B0  50E3               	movf	plusw1,w,c
 11762  0040B2  E113               	bnz	u2550
 11763  0040B4  0EE8               	movlw	-24
 11764  0040B6  50E3               	movf	plusw1,w,c
 11765  0040B8  E110               	bnz	u2550
 11766  0040BA  0EE9               	movlw	-23
 11767  0040BC  50E3               	movf	plusw1,w,c
 11768  0040BE  E10D               	bnz	u2550
 11769  0040C0  0EEA               	movlw	-22
 11770  0040C2  50E3               	movf	plusw1,w,c
 11771  0040C4  E10A               	bnz	u2550
 11772  0040C6  0EEB               	movlw	-21
 11773  0040C8  50E3               	movf	plusw1,w,c
 11774  0040CA  E107               	bnz	u2550
 11775  0040CC  0EEC               	movlw	-20
 11776  0040CE  50E3               	movf	plusw1,w,c
 11777  0040D0  E104               	bnz	u2550
 11778  0040D2  0EED               	movlw	-19
 11779  0040D4  50E3               	movf	plusw1,w,c
 11780  0040D6  B4D8               	btfsc	status,2,c
 11781  0040D8  D088               	goto	u2580
 11782  0040DA                     u2550:
 11783                           
 11784                           ;stkvar	_counter @ sp[(-10)+9]
 11785  0040DA  0EFF               	movlw	-1
 11786  0040DC  6AE3               	clrf	plusw1,c
 11787  0040DE  D012               	goto	L27
 11788  0040E0                     l5401:
 11789                           
 11790                           ;stkvar	_divisor @ sp[(-10)+-16]
 11791  0040E0  90D8               	bcf	status,0,c
 11792  0040E2  0EE6               	movlw	-26
 11793  0040E4  36E3               	rlcf	plusw1,f,c
 11794  0040E6  0EE7               	movlw	-25
 11795  0040E8  36E3               	rlcf	plusw1,f,c
 11796  0040EA  0EE8               	movlw	-24
 11797  0040EC  36E3               	rlcf	plusw1,f,c
 11798  0040EE  0EE9               	movlw	-23
 11799  0040F0  36E3               	rlcf	plusw1,f,c
 11800  0040F2  0EEA               	movlw	-22
 11801  0040F4  36E3               	rlcf	plusw1,f,c
 11802  0040F6  0EEB               	movlw	-21
 11803  0040F8  36E3               	rlcf	plusw1,f,c
 11804  0040FA  0EEC               	movlw	-20
 11805  0040FC  36E3               	rlcf	plusw1,f,c
 11806  0040FE  0EED               	movlw	-19
 11807  004100  36E3               	rlcf	plusw1,f,c
 11808                           
 11809                           ;stkvar	_counter @ sp[(-10)+9]
 11810  004102  0EFF               	movlw	-1
 11811  004104                     L27:
 11812  004104  2AE3               	incf	plusw1,f,c
 11813                           
 11814                           ;stkvar	_divisor @ sp[(-10)+-16]
 11815  004106  0EED               	movlw	-19
 11816  004108  AEE3               	btfss	plusw1,7,c
 11817  00410A  D7EA               	goto	l5401
 11818  00410C                     u2560:
 11819                           
 11820                           ;stkvar	_quotient @ sp[(-10)+0]
 11821  00410C  90D8               	bcf	status,0,c
 11822  00410E  0EF6               	movlw	-10
 11823  004110  36E3               	rlcf	plusw1,f,c
 11824  004112  0EF7               	movlw	-9
 11825  004114  36E3               	rlcf	plusw1,f,c
 11826  004116  0EF8               	movlw	-8
 11827  004118  36E3               	rlcf	plusw1,f,c
 11828  00411A  0EF9               	movlw	-7
 11829  00411C  36E3               	rlcf	plusw1,f,c
 11830  00411E  0EFA               	movlw	-6
 11831  004120  36E3               	rlcf	plusw1,f,c
 11832  004122  0EFB               	movlw	-5
 11833  004124  36E3               	rlcf	plusw1,f,c
 11834  004126  0EFC               	movlw	-4
 11835  004128  36E3               	rlcf	plusw1,f,c
 11836  00412A  0EFD               	movlw	-3
 11837  00412C  36E3               	rlcf	plusw1,f,c
 11838                           
 11839                           ;stkvar	_divisor @ sp[(-10)+-16]
 11840                           ;stkvar	_dividend @ sp[(-10)+-8]
 11841  00412E  50E1               	movf	fsr1l,w,c
 11842  004130  0FEE               	addlw	-18
 11843  004132  6ED9               	movwf	fsr2l,c
 11844  004134  50E2               	movf	fsr1h,w,c
 11845  004136  6EDA               	movwf	fsr2h,c
 11846  004138  0EFF               	movlw	255
 11847  00413A  22DA               	addwfc	fsr2h,f,c
 11848  00413C  0EE6               	movlw	-26
 11849  00413E  50E3               	movf	plusw1,w,c
 11850  004140  5CDE               	subwf	postinc2,w,c
 11851  004142  0EE7               	movlw	-25
 11852  004144  50E3               	movf	plusw1,w,c
 11853  004146  58DE               	subwfb	postinc2,w,c
 11854  004148  0EE8               	movlw	-24
 11855  00414A  50E3               	movf	plusw1,w,c
 11856  00414C  58DE               	subwfb	postinc2,w,c
 11857  00414E  0EE9               	movlw	-23
 11858  004150  50E3               	movf	plusw1,w,c
 11859  004152  58DE               	subwfb	postinc2,w,c
 11860  004154  0EEA               	movlw	-22
 11861  004156  50E3               	movf	plusw1,w,c
 11862  004158  58DE               	subwfb	postinc2,w,c
 11863  00415A  0EEB               	movlw	-21
 11864  00415C  50E3               	movf	plusw1,w,c
 11865  00415E  58DE               	subwfb	postinc2,w,c
 11866  004160  0EEC               	movlw	-20
 11867  004162  50E3               	movf	plusw1,w,c
 11868  004164  58DE               	subwfb	postinc2,w,c
 11869  004166  0EED               	movlw	-19
 11870  004168  50E3               	movf	plusw1,w,c
 11871  00416A  58DE               	subwfb	postinc2,w,c
 11872  00416C  A0D8               	btfss	status,0,c
 11873  00416E  D021               	goto	l5413
 11874                           
 11875                           ;stkvar	_divisor @ sp[(-10)+-16]
 11876                           ;stkvar	_dividend @ sp[(-10)+-8]
 11877  004170  50E1               	movf	fsr1l,w,c
 11878  004172  0FEE               	addlw	-18
 11879  004174  6ED9               	movwf	fsr2l,c
 11880  004176  50E2               	movf	fsr1h,w,c
 11881  004178  6EDA               	movwf	fsr2h,c
 11882  00417A  0EFF               	movlw	255
 11883  00417C  22DA               	addwfc	fsr2h,f,c
 11884  00417E  0EE6               	movlw	-26
 11885  004180  50E3               	movf	plusw1,w,c
 11886  004182  5EDE               	subwf	postinc2,f,c
 11887  004184  0EE7               	movlw	-25
 11888  004186  50E3               	movf	plusw1,w,c
 11889  004188  5ADE               	subwfb	postinc2,f,c
 11890  00418A  0EE8               	movlw	-24
 11891  00418C  50E3               	movf	plusw1,w,c
 11892  00418E  5ADE               	subwfb	postinc2,f,c
 11893  004190  0EE9               	movlw	-23
 11894  004192  50E3               	movf	plusw1,w,c
 11895  004194  5ADE               	subwfb	postinc2,f,c
 11896  004196  0EEA               	movlw	-22
 11897  004198  50E3               	movf	plusw1,w,c
 11898  00419A  5ADE               	subwfb	postinc2,f,c
 11899  00419C  0EEB               	movlw	-21
 11900  00419E  50E3               	movf	plusw1,w,c
 11901  0041A0  5ADE               	subwfb	postinc2,f,c
 11902  0041A2  0EEC               	movlw	-20
 11903  0041A4  50E3               	movf	plusw1,w,c
 11904  0041A6  5ADE               	subwfb	postinc2,f,c
 11905  0041A8  0EED               	movlw	-19
 11906  0041AA  50E3               	movf	plusw1,w,c
 11907  0041AC  5ADE               	subwfb	postinc2,f,c
 11908                           
 11909                           ;stkvar	_quotient @ sp[(-10)+0]
 11910  0041AE  0EF6               	movlw	-10
 11911  0041B0  80E3               	bsf	plusw1,0,c
 11912  0041B2                     l5413:
 11913                           
 11914                           ;stkvar	_divisor @ sp[(-10)+-16]
 11915  0041B2  90D8               	bcf	status,0,c
 11916  0041B4  0EED               	movlw	-19
 11917  0041B6  32E3               	rrcf	plusw1,f,c
 11918  0041B8  0EEC               	movlw	-20
 11919  0041BA  32E3               	rrcf	plusw1,f,c
 11920  0041BC  0EEB               	movlw	-21
 11921  0041BE  32E3               	rrcf	plusw1,f,c
 11922  0041C0  0EEA               	movlw	-22
 11923  0041C2  32E3               	rrcf	plusw1,f,c
 11924  0041C4  0EE9               	movlw	-23
 11925  0041C6  32E3               	rrcf	plusw1,f,c
 11926  0041C8  0EE8               	movlw	-24
 11927  0041CA  32E3               	rrcf	plusw1,f,c
 11928  0041CC  0EE7               	movlw	-25
 11929  0041CE  32E3               	rrcf	plusw1,f,c
 11930  0041D0  0EE6               	movlw	-26
 11931  0041D2  32E3               	rrcf	plusw1,f,c
 11932                           
 11933                           ;stkvar	_counter @ sp[(-10)+9]
 11934  0041D4  0EFF               	movlw	-1
 11935  0041D6  50E3               	movf	plusw1,w,c
 11936  0041D8  6E39               	movwf	btemp,c
 11937  0041DA  0E01               	movlw	1
 11938  0041DC  5E39               	subwf	btemp,f,c
 11939  0041DE  0EFF               	movlw	-1
 11940  0041E0  0060  F0E7  FFE3   	movff	btemp,plusw1
 11941  0041E6  A4D8               	btfss	status,2,c
 11942  0041E8  D791               	goto	u2560
 11943  0041EA                     u2580:
 11944                           
 11945                           ;stkvar	_sign @ sp[(-10)+8]
 11946  0041EA  0EFE               	movlw	-2
 11947  0041EC  50E3               	movf	plusw1,w,c
 11948  0041EE  B4D8               	btfsc	status,2,c
 11949  0041F0  D025               	goto	u2600
 11950                           
 11951                           ;stkvar	_quotient @ sp[(-10)+0]
 11952                           ;stkvar	_quotient @ sp[(-10)+0]
 11953  0041F2  0EF6               	movlw	-10
 11954  0041F4  6CE3               	negf	plusw1,c
 11955  0041F6  0EF7               	movlw	-9
 11956  0041F8  1EE3               	comf	plusw1,f,c
 11957  0041FA  0EF8               	movlw	-8
 11958  0041FC  1EE3               	comf	plusw1,f,c
 11959  0041FE  0EF9               	movlw	-7
 11960  004200  1EE3               	comf	plusw1,f,c
 11961  004202  0EFA               	movlw	-6
 11962  004204  1EE3               	comf	plusw1,f,c
 11963  004206  0EFB               	movlw	-5
 11964  004208  1EE3               	comf	plusw1,f,c
 11965  00420A  0EFC               	movlw	-4
 11966  00420C  1EE3               	comf	plusw1,f,c
 11967  00420E  0EFD               	movlw	-3
 11968  004210  1EE3               	comf	plusw1,f,c
 11969  004212  E314               	bnc	u2600
 11970  004214  0EF7               	movlw	-9
 11971  004216  2AE3               	incf	plusw1,f,c
 11972  004218  E311               	bnc	u2600
 11973  00421A  0EF8               	movlw	-8
 11974  00421C  2AE3               	incf	plusw1,f,c
 11975  00421E  E30E               	bnc	u2600
 11976  004220  0EF9               	movlw	-7
 11977  004222  2AE3               	incf	plusw1,f,c
 11978  004224  E30B               	bnc	u2600
 11979  004226  0EFA               	movlw	-6
 11980  004228  2AE3               	incf	plusw1,f,c
 11981  00422A  E308               	bnc	u2600
 11982  00422C  0EFB               	movlw	-5
 11983  00422E  2AE3               	incf	plusw1,f,c
 11984  004230  E305               	bnc	u2600
 11985  004232  0EFC               	movlw	-4
 11986  004234  2AE3               	incf	plusw1,f,c
 11987  004236  E302               	bnc	u2600
 11988  004238  0EFD               	movlw	-3
 11989  00423A  2AE3               	incf	plusw1,f,c
 11990  00423C                     u2600:
 11991                           
 11992                           ;stkvar	_quotient @ sp[(-10)+0]
 11993  00423C  0EF6               	movlw	246
 11994  00423E  24E1               	addwf	fsr1l,w,c
 11995  004240  6ED9               	movwf	fsr2l,c
 11996  004242  0EFF               	movlw	255
 11997  004244  20E2               	addwfc	fsr1h,w,c
 11998  004246  6EDA               	movwf	fsr2h,c
 11999                           
 12000                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 12001  004248  0E08               	movlw	8
 12002  00424A  6E39               	movwf	btemp,c
 12003  00424C  0EEE               	movlw	-18
 12004  00424E                     us261999:
 12005  00424E  006F FF7B FFE3     	movff	postinc2,plusw1
 12006  004254  28E8               	incf	wreg,w,c
 12007  004256  2E39               	decfsz	btemp,f,c
 12008  004258  D7FA               	bra	us261999
 12009                           
 12010                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12011  00425A  0EF6               	movlw	246
 12012  00425C  26E1               	addwf	fsr1l,f,c
 12013  00425E  0EFF               	movlw	255
 12014  004260  22E2               	addwfc	fsr1h,f,c
 12015  004262  0012               	return		;funcret
 12016  004264                     __end_of___aodiv:
 12017                           	opt callstack 0
 12018                           
 12019 ;; *************** function _ctoa *****************
 12020 ;; Defined at:
 12021 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12024 ;;		 -> f(5), NULL(0), 
 12025 ;;  c               1  [STACK] unsigned char 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  w               2  [STACK] int 
 12028 ;;  l               2    0        int 
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  2  [STACK] int 
 12031 ;; Registers used:
 12032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12042 ;;Total ram usage:        0 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    8
 12045 ;; This function calls:
 12046 ;;		_pad
 12047 ;; This function is called by:
 12048 ;;		_vfpfcnvrt
 12049 ;; This function uses a reentrant model
 12050 ;;
 12051                           
 12052                           	psect	text47
 12053  005652                     __ptext47:
 12054                           	opt callstack 0
 12055  005652                     _ctoa:
 12056                           	opt callstack 0
 12057                           
 12058                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12059  005652  52E6               	movf	postinc1,f,c
 12060  005654  52E6               	movf	postinc1,f,c
 12061                           
 12062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12063                           
 12064                           ;incstack = 0
 12065  005656  501D               	movf	_width,w,c
 12066  005658  101E               	iorwf	_width+1,w,c
 12067  00565A  A4D8               	btfss	status,2,c
 12068  00565C  D009               	goto	l8133
 12069                           
 12070                           ;stkvar	_w @ sp[(-2)+0]
 12071  00565E  0EFE               	movlw	-2
 12072  005660  0060  F077  FFE3   	movff	_width,plusw1
 12073  005666  0EFF               	movlw	-1
 12074  005668  0060  F07B  FFE3   	movff	_width+1,plusw1
 12075  00566E  D016               	goto	l8135
 12076  005670                     l8133:
 12077  005670  0EFF               	movlw	255
 12078  005672  6E43               	movwf	btemp+10,c
 12079  005674  0EFF               	movlw	255
 12080  005676  6E44               	movwf	btemp+11,c
 12081  005678  0060  F074  F041   	movff	_width,btemp+8
 12082  00567E  0060  F078  F042   	movff	_width+1,btemp+9
 12083  005684  5043               	movf	btemp+10,w,c
 12084  005686  2641               	addwf	btemp+8,f,c
 12085  005688  5044               	movf	btemp+11,w,c
 12086  00568A  2242               	addwfc	btemp+9,f,c
 12087                           
 12088                           ;stkvar	_w @ sp[(-2)+0]
 12089  00568C  0EFE               	movlw	-2
 12090  00568E  0060  F107  FFE3   	movff	btemp+8,plusw1
 12091  005694  0EFF               	movlw	-1
 12092  005696  0060  F10B  FFE3   	movff	btemp+9,plusw1
 12093  00569C                     l8135:
 12094                           
 12095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12096                           ;stkvar	_c @ sp[(-2)+-3]
 12097  00569C  0EFB               	movlw	-5
 12098  00569E  006F FF8C  F1D0    	movff	plusw1,_dbuf
 12099                           
 12100                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12101  0056A4  0101               	movlb	1	; () banked
 12102  0056A6  6BD1               	clrf	(_dbuf+1)& (0+255),b
 12103                           
 12104                           ; BSR set to: 1
 12105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12106                           ;stkvar	_w @ sp[(-2)+0]
 12107  0056A8  0EFE               	movlw	-2
 12108  0056AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12109  0056B0  006F FF8F FFE6     	movff	plusw1,postinc1
 12110  0056B6  0ED0               	movlw	low _dbuf
 12111  0056B8  6EE6               	movwf	postinc1,c
 12112  0056BA  0E01               	movlw	high _dbuf
 12113  0056BC  6EE6               	movwf	postinc1,c
 12114                           
 12115                           ;stkvar	_fp @ sp[(-6)+-2]
 12116  0056BE  0EF8               	movlw	-8
 12117  0056C0  006F FF8F FFE6     	movff	plusw1,postinc1
 12118  0056C6  006F FF8F FFE6     	movff	plusw1,postinc1
 12119  0056CC  EC6F  F025         	call	_pad	;wreg free
 12120                           
 12121                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12122  0056D0  0EFB               	movlw	251
 12123  0056D2  26E1               	addwf	fsr1l,f,c
 12124  0056D4  0EFF               	movlw	255
 12125  0056D6  22E2               	addwfc	fsr1h,f,c
 12126  0056D8  0012               	return		;funcret
 12127  0056DA                     __end_of_ctoa:
 12128                           	opt callstack 0
 12129                           
 12130 ;; *************** function _pad *****************
 12131 ;; Defined at:
 12132 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12135 ;;		 -> f(5), NULL(0), 
 12136 ;;  buf             2  [STACK] PTR unsigned char 
 12137 ;;		 -> dbuf(32), 
 12138 ;;  p               2  [STACK] int 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;  w               2  [STACK] int 
 12141 ;;  i               2  [STACK] int 
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  2  [STACK] int 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/1
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12155 ;;Total ram usage:        0 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    7
 12158 ;; This function calls:
 12159 ;;		_fputc
 12160 ;;		_fputs
 12161 ;;		_strlen
 12162 ;; This function is called by:
 12163 ;;		_ctoa
 12164 ;;		_dtoa
 12165 ;; This function uses a reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text48
 12169  004ADE                     __ptext48:
 12170                           	opt callstack 0
 12171  004ADE                     _pad:
 12172                           	opt callstack 0
 12173                           
 12174                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12175  004ADE  52E6               	movf	postinc1,f,c
 12176  004AE0  52E6               	movf	postinc1,f,c
 12177  004AE2  52E6               	movf	postinc1,f,c
 12178  004AE4  52E6               	movf	postinc1,f,c
 12179                           
 12180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12181                           
 12182                           ;incstack = 0
 12183  004AE6  A021               	btfss	_flags,0,c
 12184  004AE8  D010               	goto	l8111
 12185                           
 12186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12187                           ;stkvar	_fp @ sp[(-4)+-2]
 12188  004AEA  0EFA               	movlw	-6
 12189  004AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12190  004AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 12191                           
 12192                           ;stkvar	_buf @ sp[(-6)+-4]
 12193  004AF8  0EF6               	movlw	-10
 12194  004AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12195  004B00  006F FF8F FFE6     	movff	plusw1,postinc1
 12196  004B06  EC94  F02A         	call	_fputs	;wreg free
 12197  004B0A                     l8111:
 12198                           
 12199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12200                           ;stkvar	_p @ sp[(-4)+-6]
 12201  004B0A  0EF7               	movlw	-9
 12202  004B0C  BEE3               	btfsc	plusw1,7,c
 12203  004B0E  D011               	goto	l8115
 12204                           
 12205                           ;stkvar	_p @ sp[(-4)+-6]
 12206                           ;stkvar	_w @ sp[(-4)+0]
 12207  004B10  0EF6               	movlw	-10
 12208  004B12  006F FF8C  F039    	movff	plusw1,btemp
 12209  004B18  0EFC               	movlw	-4
 12210  004B1A  0060  F0E7  FFE3   	movff	btemp,plusw1
 12211  004B20  0EF7               	movlw	-9
 12212  004B22  006F FF8C  F039    	movff	plusw1,btemp
 12213  004B28  0EFD               	movlw	-3
 12214  004B2A  0060  F0E7  FFE3   	movff	btemp,plusw1
 12215  004B30  D004               	goto	l1845
 12216  004B32                     l8115:
 12217                           
 12218                           ;stkvar	_w @ sp[(-4)+0]
 12219  004B32  0EFC               	movlw	-4
 12220  004B34  6AE3               	clrf	plusw1,c
 12221  004B36  0EFD               	movlw	-3
 12222  004B38  6AE3               	clrf	plusw1,c
 12223  004B3A                     l1845:
 12224                           
 12225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12226                           ;stkvar	_i @ sp[(-4)+2]
 12227  004B3A  0EFE               	movlw	-2
 12228  004B3C  6AE3               	clrf	plusw1,c
 12229  004B3E  0EFF               	movlw	-1
 12230  004B40  6AE3               	clrf	plusw1,c
 12231                           
 12232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12233  004B42  D01E               	goto	l8121
 12234  004B44                     l8117:
 12235                           
 12236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12237                           ;stkvar	_fp @ sp[(-4)+-2]
 12238  004B44  0EFA               	movlw	-6
 12239  004B46  006F FF8F FFE6     	movff	plusw1,postinc1
 12240  004B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 12241  004B52  0E20               	movlw	32
 12242  004B54  6EE6               	movwf	postinc1,c
 12243  004B56  0E00               	movlw	0
 12244  004B58  6EE6               	movwf	postinc1,c
 12245  004B5A  ECF9  F025         	call	_fputc	;wreg free
 12246                           
 12247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12248                           ;stkvar	_i @ sp[(-4)+2]
 12249  004B5E  0EFE               	movlw	-2
 12250  004B60  50E3               	movf	plusw1,w,c
 12251  004B62  0F01               	addlw	1
 12252  004B64  6E39               	movwf	btemp,c
 12253  004B66  0EFE               	movlw	-2
 12254  004B68  0060  F0E7  FFE3   	movff	btemp,plusw1
 12255  004B6E  6A39               	clrf	btemp,c
 12256  004B70  0EFF               	movlw	-1
 12257  004B72  50E3               	movf	plusw1,w,c
 12258  004B74  2039               	addwfc	btemp,w,c
 12259  004B76  6E39               	movwf	btemp,c
 12260  004B78  0EFF               	movlw	-1
 12261  004B7A  0060  F0E7  FFE3   	movff	btemp,plusw1
 12262  004B80                     l8121:
 12263                           
 12264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12265                           ;stkvar	_w @ sp[(-4)+0]
 12266                           ;stkvar	_i @ sp[(-4)+2]
 12267  004B80  50E1               	movf	fsr1l,w,c
 12268  004B82  0FFE               	addlw	-2
 12269  004B84  6ED9               	movwf	fsr2l,c
 12270  004B86  50E2               	movf	fsr1h,w,c
 12271  004B88  6EDA               	movwf	fsr2h,c
 12272  004B8A  0EFF               	movlw	255
 12273  004B8C  22DA               	addwfc	fsr2h,f,c
 12274  004B8E  0EFC               	movlw	-4
 12275  004B90  50E3               	movf	plusw1,w,c
 12276  004B92  5CDE               	subwf	postinc2,w,c
 12277  004B94  50DE               	movf	postinc2,w,c
 12278  004B96  0A80               	xorlw	128
 12279  004B98  6E39               	movwf	btemp,c
 12280  004B9A  0EFD               	movlw	-3
 12281  004B9C  50E3               	movf	plusw1,w,c
 12282  004B9E  0A80               	xorlw	128
 12283  004BA0  5839               	subwfb	btemp,w,c
 12284  004BA2  A0D8               	btfss	status,0,c
 12285  004BA4  D7CF               	goto	l8117
 12286                           
 12287                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12288  004BA6  B021               	btfsc	_flags,0,c
 12289  004BA8  D010               	goto	l8125
 12290                           
 12291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12292                           ;stkvar	_fp @ sp[(-4)+-2]
 12293  004BAA  0EFA               	movlw	-6
 12294  004BAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12295  004BB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12296                           
 12297                           ;stkvar	_buf @ sp[(-6)+-4]
 12298  004BB8  0EF6               	movlw	-10
 12299  004BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12300  004BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 12301  004BC6  EC94  F02A         	call	_fputs	;wreg free
 12302  004BCA                     l8125:
 12303                           
 12304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12305                           ;stkvar	_w @ sp[(-4)+0]
 12306                           ;stkvar	_buf @ sp[(-4)+-4]
 12307  004BCA  0EF8               	movlw	-8
 12308  004BCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12309  004BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 12310  004BD8  EC5A  F029         	call	_strlen	;wreg free
 12311  004BDC  0EFC               	movlw	-4
 12312  004BDE  50E3               	movf	plusw1,w,c
 12313  004BE0  2639               	addwf	btemp,f,c
 12314  004BE2  0EFD               	movlw	-3
 12315  004BE4  50E3               	movf	plusw1,w,c
 12316  004BE6  223A               	addwfc	btemp+1,f,c
 12317                           
 12318                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12319  004BE8  0EF6               	movlw	246
 12320  004BEA  26E1               	addwf	fsr1l,f,c
 12321  004BEC  0EFF               	movlw	255
 12322  004BEE  22E2               	addwfc	fsr1h,f,c
 12323  004BF0  0012               	return		;funcret
 12324  004BF2                     __end_of_pad:
 12325                           	opt callstack 0
 12326                           
 12327 ;; *************** function _strlen *****************
 12328 ;; Defined at:
 12329 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;  s               2  [STACK] PTR const unsigned char 
 12332 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12333 ;;		 -> STR_3(6), V(94), 
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  a               2  [STACK] PTR const unsigned char 
 12336 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12337 ;;		 -> STR_3(6), V(94), 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  2  [STACK] unsigned int 
 12340 ;; Registers used:
 12341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12351 ;;Total ram usage:        0 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    3
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_eaDogM_WriteString
 12358 ;;		_pad
 12359 ;;		_stoa
 12360 ;; This function uses a reentrant model
 12361 ;;
 12362                           
 12363                           	psect	text49
 12364  0052B4                     __ptext49:
 12365                           	opt callstack 0
 12366  0052B4                     _strlen:
 12367                           	opt callstack 0
 12368                           
 12369                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12370  0052B4  52E6               	movf	postinc1,f,c
 12371  0052B6  52E6               	movf	postinc1,f,c
 12372                           
 12373                           ;stkvar	_s @ sp[(-2)+-2]
 12374                           
 12375                           ;incstack = 0
 12376  0052B8  0EFC               	movlw	-4
 12377  0052BA  006F FF8C  F043    	movff	plusw1,btemp+10
 12378  0052C0  0EFD               	movlw	-3
 12379  0052C2  006F FF8C  F044    	movff	plusw1,btemp+11
 12380                           
 12381                           ;stkvar	_a @ sp[(-2)+0]
 12382  0052C8  0EFF               	movlw	-1
 12383  0052CA  0060  F113  FFE3   	movff	btemp+11,plusw1
 12384  0052D0  0EFE               	movlw	-2
 12385  0052D2  0060  F10F  FFE3   	movff	btemp+10,plusw1
 12386  0052D8  D011               	goto	l8093
 12387  0052DA                     l8091:
 12388                           
 12389                           ;stkvar	_s @ sp[(-2)+-2]
 12390  0052DA  0EFC               	movlw	-4
 12391  0052DC  50E3               	movf	plusw1,w,c
 12392  0052DE  0F01               	addlw	1
 12393  0052E0  6E39               	movwf	btemp,c
 12394  0052E2  0EFC               	movlw	-4
 12395  0052E4  0060  F0E7  FFE3   	movff	btemp,plusw1
 12396  0052EA  6A39               	clrf	btemp,c
 12397  0052EC  0EFD               	movlw	-3
 12398  0052EE  50E3               	movf	plusw1,w,c
 12399  0052F0  2039               	addwfc	btemp,w,c
 12400  0052F2  6E39               	movwf	btemp,c
 12401  0052F4  0EFD               	movlw	-3
 12402  0052F6  0060  F0E7  FFE3   	movff	btemp,plusw1
 12403  0052FC                     l8093:
 12404                           
 12405                           ;stkvar	_s @ sp[(-2)+-2]
 12406  0052FC  0EFC               	movlw	-4
 12407  0052FE  006F FF8F FFF6     	movff	plusw1,tblptrl
 12408  005304  0EFD               	movlw	-3
 12409  005306  006F FF8F FFF7     	movff	plusw1,tblptrh
 12410  00530C  0E00               	movlw	low (__smallconst shr (0+16))
 12411  00530E  6EF8               	movwf	tblptru,c
 12412  005310  0E1F               	movlw	(high __ramtop+-1)
 12413  005312  64F7               	cpfsgt	tblptrh,c
 12414  005314  D003               	bra	u4707
 12415  005316  0008               	tblrd		*
 12416  005318  50F5               	movf	tablat,w,c
 12417  00531A  D007               	bra	u4700
 12418  00531C                     u4707:
 12419  00531C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12420  005322  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12421  005328  50EF               	movf	indf0,w,c
 12422  00532A                     u4700:
 12423  00532A  0900               	iorlw	0
 12424  00532C  A4D8               	btfss	status,2,c
 12425  00532E  D7D5               	goto	l8091
 12426                           
 12427                           ;stkvar	_a @ sp[(-2)+0]
 12428                           ;stkvar	_s @ sp[(-2)+-2]
 12429  005330  0EFC               	movlw	-4
 12430  005332  006F FF8C  F039    	movff	plusw1,btemp
 12431  005338  0EFD               	movlw	-3
 12432  00533A  006F FF8C  F03A    	movff	plusw1,btemp+1
 12433  005340  0EFE               	movlw	-2
 12434  005342  50E3               	movf	plusw1,w,c
 12435  005344  5E39               	subwf	btemp,f,c
 12436  005346  0EFF               	movlw	-1
 12437  005348  50E3               	movf	plusw1,w,c
 12438  00534A  5A3A               	subwfb	btemp+1,f,c
 12439                           
 12440                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12441  00534C  52E5               	movf	postdec1,f,c
 12442  00534E  52E5               	movf	postdec1,f,c
 12443  005350  52E5               	movf	postdec1,f,c
 12444  005352  52E5               	movf	postdec1,f,c
 12445  005354  0012               	return		;funcret
 12446  005356                     __end_of_strlen:
 12447                           	opt callstack 0
 12448                           
 12449 ;; *************** function _fputs *****************
 12450 ;; Defined at:
 12451 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  s               2  [STACK] PTR const unsigned char 
 12454 ;;		 -> dbuf(32), 
 12455 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12456 ;;		 -> f(5), NULL(0), 
 12457 ;; Auto vars:     Size  Location     Type
 12458 ;;  i               2  [STACK] int 
 12459 ;;  c               1  [STACK] unsigned char 
 12460 ;; Return value:  Size  Location     Type
 12461 ;;                  2  [STACK] int 
 12462 ;; Registers used:
 12463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12464 ;; Tracked objects:
 12465 ;;		On entry : 0/1
 12466 ;;		On exit  : 0/0
 12467 ;;		Unchanged: 0/0
 12468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12473 ;;Total ram usage:        0 bytes
 12474 ;; Hardware stack levels used:    1
 12475 ;; Hardware stack levels required when called:    6
 12476 ;; This function calls:
 12477 ;;		_fputc
 12478 ;; This function is called by:
 12479 ;;		_pad
 12480 ;; This function uses a reentrant model
 12481 ;;
 12482                           
 12483                           	psect	text50
 12484  005528                     __ptext50:
 12485                           	opt callstack 0
 12486  005528                     _fputs:
 12487                           	opt callstack 0
 12488                           
 12489                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12490  005528  52E6               	movf	postinc1,f,c
 12491  00552A  52E6               	movf	postinc1,f,c
 12492  00552C  52E6               	movf	postinc1,f,c
 12493                           
 12494                           ;stkvar	_i @ sp[(-3)+0]
 12495                           
 12496                           ;incstack = 0
 12497  00552E  0EFD               	movlw	-3
 12498  005530  6AE3               	clrf	plusw1,c
 12499  005532  0EFE               	movlw	-2
 12500  005534  6AE3               	clrf	plusw1,c
 12501  005536  D01F               	goto	l8105
 12502  005538                     l8101:
 12503                           
 12504                           ;stkvar	_fp @ sp[(-3)+-4]
 12505  005538  0EF9               	movlw	-7
 12506  00553A  006F FF8F FFE6     	movff	plusw1,postinc1
 12507  005540  006F FF8F FFE6     	movff	plusw1,postinc1
 12508                           
 12509                           ;stkvar	_c @ sp[(-5)+2]
 12510  005546  0EFD               	movlw	-3
 12511  005548  50E3               	movf	plusw1,w,c
 12512  00554A  6EE6               	movwf	postinc1,c
 12513  00554C  0E00               	movlw	0
 12514  00554E  6EE6               	movwf	postinc1,c
 12515  005550  ECF9  F025         	call	_fputc	;wreg free
 12516                           
 12517                           ;stkvar	_i @ sp[(-3)+0]
 12518  005554  0EFD               	movlw	-3
 12519  005556  50E3               	movf	plusw1,w,c
 12520  005558  0F01               	addlw	1
 12521  00555A  6E39               	movwf	btemp,c
 12522  00555C  0EFD               	movlw	-3
 12523  00555E  0060  F0E7  FFE3   	movff	btemp,plusw1
 12524  005564  6A39               	clrf	btemp,c
 12525  005566  0EFE               	movlw	-2
 12526  005568  50E3               	movf	plusw1,w,c
 12527  00556A  2039               	addwfc	btemp,w,c
 12528  00556C  6E39               	movwf	btemp,c
 12529  00556E  0EFE               	movlw	-2
 12530  005570  0060  F0E7  FFE3   	movff	btemp,plusw1
 12531  005576                     l8105:
 12532                           
 12533                           ;stkvar	_i @ sp[(-3)+0]
 12534  005576  0EFD               	movlw	-3
 12535  005578  006F FF8C  F043    	movff	plusw1,btemp+10
 12536  00557E  0EFE               	movlw	-2
 12537  005580  006F FF8C  F044    	movff	plusw1,btemp+11
 12538                           
 12539                           ;stkvar	_s @ sp[(-3)+-2]
 12540  005586  0EFB               	movlw	-5
 12541  005588  006F FF8C  F041    	movff	plusw1,btemp+8
 12542  00558E  0EFC               	movlw	-4
 12543  005590  006F FF8C  F042    	movff	plusw1,btemp+9
 12544  005596  5043               	movf	btemp+10,w,c
 12545  005598  2441               	addwf	btemp+8,w,c
 12546  00559A  6ED9               	movwf	fsr2l,c
 12547  00559C  5044               	movf	btemp+11,w,c
 12548  00559E  2042               	addwfc	btemp+9,w,c
 12549  0055A0  6EDA               	movwf	fsr2h,c
 12550  0055A2  50DF               	movf	indf2,w,c
 12551  0055A4  6E44               	movwf	btemp+11,c
 12552                           
 12553                           ;stkvar	_c @ sp[(-3)+2]
 12554  0055A6  0EFF               	movlw	-1
 12555  0055A8  0060  F113  FFE3   	movff	btemp+11,plusw1
 12556  0055AE  0EFF               	movlw	-1
 12557  0055B0  50E3               	movf	plusw1,w,c
 12558  0055B2  A4D8               	btfss	status,2,c
 12559  0055B4  D7C1               	goto	l8101
 12560                           
 12561                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12562  0055B6  0EF9               	movlw	249
 12563  0055B8  26E1               	addwf	fsr1l,f,c
 12564  0055BA  0EFF               	movlw	255
 12565  0055BC  22E2               	addwfc	fsr1h,f,c
 12566  0055BE  0012               	return		;funcret
 12567  0055C0                     __end_of_fputs:
 12568                           	opt callstack 0
 12569                           
 12570 ;; *************** function _fputc *****************
 12571 ;; Defined at:
 12572 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;  c               2  [STACK] int 
 12575 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12576 ;;		 -> f(5), NULL(0), 
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;		None
 12579 ;; Return value:  Size  Location     Type
 12580 ;;                  2  [STACK] int 
 12581 ;; Registers used:
 12582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;Total ram usage:        0 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    5
 12595 ;; This function calls:
 12596 ;;		_putch
 12597 ;; This function is called by:
 12598 ;;		_pad
 12599 ;;		_stoa
 12600 ;;		_vfpfcnvrt
 12601 ;;		_fputs
 12602 ;; This function uses a reentrant model
 12603 ;;
 12604                           
 12605                           	psect	text51
 12606  004BF2                     __ptext51:
 12607                           	opt callstack 0
 12608  004BF2                     _fputc:
 12609                           	opt callstack 21
 12610                           
 12611                           ;stkvar	_fp @ sp[(0)+-4]
 12612                           
 12613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12614                           ;incstack = 0
 12615  004BF2  0EFC               	movlw	-4
 12616  004BF4  006F FF8C  F039    	movff	plusw1,btemp
 12617  004BFA  0EFD               	movlw	-3
 12618  004BFC  50E3               	movf	plusw1,w,c
 12619  004BFE  1039               	iorwf	btemp,w,c
 12620  004C00  B4D8               	btfsc	status,2,c
 12621  004C02  D009               	goto	u4670
 12622                           
 12623                           ;stkvar	_fp @ sp[(0)+-4]
 12624  004C04  0EFC               	movlw	-4
 12625  004C06  006F FF8C  F039    	movff	plusw1,btemp
 12626  004C0C  0EFD               	movlw	-3
 12627  004C0E  50E3               	movf	plusw1,w,c
 12628  004C10  1039               	iorwf	btemp,w,c
 12629  004C12  A4D8               	btfss	status,2,c
 12630  004C14  D006               	goto	l8081
 12631  004C16                     u4670:
 12632                           
 12633                           ;stkvar	_c @ sp[(0)+-2]
 12634  004C16  0EFE               	movlw	-2
 12635  004C18  50E3               	movf	plusw1,w,c
 12636  004C1A  6EE6               	movwf	postinc1,c
 12637  004C1C  ECB4  F031         	call	_putch	;wreg free
 12638  004C20  D069               	goto	l2628
 12639  004C22                     l8081:
 12640                           
 12641                           ;stkvar	_fp @ sp[(0)+-4]
 12642  004C22  0EFC               	movlw	-4
 12643  004C24  006F FF8C  F043    	movff	plusw1,btemp+10
 12644  004C2A  0EFD               	movlw	-3
 12645  004C2C  006F FF8C  F044    	movff	plusw1,btemp+11
 12646  004C32  0E03               	movlw	3
 12647  004C34  2443               	addwf	btemp+10,w,c
 12648  004C36  6ED9               	movwf	fsr2l,c
 12649  004C38  0E00               	movlw	0
 12650  004C3A  2044               	addwfc	btemp+11,w,c
 12651  004C3C  6EDA               	movwf	fsr2h,c
 12652  004C3E  50DE               	movf	postinc2,w,c
 12653  004C40  10DE               	iorwf	postinc2,w,c
 12654  004C42  B4D8               	btfsc	status,2,c
 12655  004C44  D026               	goto	u4690
 12656                           
 12657                           ;stkvar	_fp @ sp[(0)+-4]
 12658  004C46  0EFC               	movlw	-4
 12659  004C48  006F FF8C  F043    	movff	plusw1,btemp+10
 12660  004C4E  0EFD               	movlw	-3
 12661  004C50  006F FF8C  F044    	movff	plusw1,btemp+11
 12662  004C56  0E03               	movlw	3
 12663  004C58  2443               	addwf	btemp+10,w,c
 12664  004C5A  6ED9               	movwf	fsr2l,c
 12665  004C5C  0E00               	movlw	0
 12666  004C5E  2044               	addwfc	btemp+11,w,c
 12667  004C60  6EDA               	movwf	fsr2h,c
 12668                           
 12669                           ;stkvar	_fp @ sp[(0)+-4]
 12670  004C62  0EFC               	movlw	-4
 12671  004C64  006F FF8C  F043    	movff	plusw1,btemp+10
 12672  004C6A  0EFD               	movlw	-3
 12673  004C6C  006F FF8C  F044    	movff	plusw1,btemp+11
 12674  004C72  0E01               	movlw	1
 12675  004C74  2443               	addwf	btemp+10,w,c
 12676  004C76  6EE9               	movwf	fsr0l,c
 12677  004C78  0E00               	movlw	0
 12678  004C7A  2044               	addwfc	btemp+11,w,c
 12679  004C7C  6EEA               	movwf	fsr0h,c
 12680  004C7E  50DE               	movf	postinc2,w,c
 12681  004C80  5CEE               	subwf	postinc0,w,c
 12682  004C82  50EE               	movf	postinc0,w,c
 12683  004C84  0A80               	xorlw	128
 12684  004C86  6E39               	movwf	btemp,c
 12685  004C88  50DE               	movf	postinc2,w,c
 12686  004C8A  0A80               	xorlw	128
 12687  004C8C  5839               	subwfb	btemp,w,c
 12688  004C8E  B0D8               	btfsc	status,0,c
 12689  004C90  D031               	goto	l2628
 12690  004C92                     u4690:
 12691                           
 12692                           ;stkvar	_c @ sp[(0)+-2]
 12693                           ;stkvar	_fp @ sp[(0)+-4]
 12694  004C92  0EFC               	movlw	-4
 12695  004C94  006F FF8C  F043    	movff	plusw1,btemp+10
 12696  004C9A  0EFD               	movlw	-3
 12697  004C9C  006F FF8C  F044    	movff	plusw1,btemp+11
 12698  004CA2  0E01               	movlw	1
 12699  004CA4  2443               	addwf	btemp+10,w,c
 12700  004CA6  6ED9               	movwf	fsr2l,c
 12701  004CA8  0E00               	movlw	0
 12702  004CAA  2044               	addwfc	btemp+11,w,c
 12703  004CAC  6EDA               	movwf	fsr2h,c
 12704  004CAE  50DF               	movf	indf2,w,c
 12705  004CB0  6E44               	movwf	btemp+11,c
 12706                           
 12707                           ;stkvar	_fp @ sp[(0)+-4]
 12708  004CB2  0EFC               	movlw	-4
 12709  004CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12710  004CBA  0EFD               	movlw	-3
 12711  004CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12712  004CC2  50DF               	movf	indf2,w,c
 12713  004CC4  2444               	addwf	btemp+11,w,c
 12714  004CC6  6ED9               	movwf	fsr2l,c
 12715  004CC8  6ADA               	clrf	fsr2h,c
 12716  004CCA  0EFE               	movlw	-2
 12717  004CCC  006F FF8F FFDF     	movff	plusw1,indf2
 12718                           
 12719                           ;stkvar	_fp @ sp[(0)+-4]
 12720  004CD2  0EFC               	movlw	-4
 12721  004CD4  006F FF8C  F043    	movff	plusw1,btemp+10
 12722  004CDA  0EFD               	movlw	-3
 12723  004CDC  006F FF8C  F044    	movff	plusw1,btemp+11
 12724  004CE2  0E01               	movlw	1
 12725  004CE4  2443               	addwf	btemp+10,w,c
 12726  004CE6  6ED9               	movwf	fsr2l,c
 12727  004CE8  0E00               	movlw	0
 12728  004CEA  2044               	addwfc	btemp+11,w,c
 12729  004CEC  6EDA               	movwf	fsr2h,c
 12730  004CEE  2ADE               	incf	postinc2,f,c
 12731  004CF0  0E00               	movlw	0
 12732  004CF2  22DD               	addwfc	postdec2,f,c
 12733  004CF4                     l2628:
 12734                           
 12735                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12736  004CF4  52E5               	movf	postdec1,f,c
 12737  004CF6  52E5               	movf	postdec1,f,c
 12738  004CF8  52E5               	movf	postdec1,f,c
 12739  004CFA  52E5               	movf	postdec1,f,c
 12740  004CFC  0012               	return		;funcret
 12741  004CFE                     __end_of_fputc:
 12742                           	opt callstack 0
 12743                           
 12744 ;; *************** function _putch *****************
 12745 ;; Defined at:
 12746 ;;		line 138 in file "eadog.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  c               1  [STACK] unsigned char 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;		None
 12751 ;; Return value:  Size  Location     Type
 12752 ;;                  1  [STACK] void 
 12753 ;; Registers used:
 12754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12755 ;; Tracked objects:
 12756 ;;		On entry : 0/0
 12757 ;;		On exit  : 0/0
 12758 ;;		Unchanged: 0/0
 12759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12764 ;;Total ram usage:        0 bytes
 12765 ;; Hardware stack levels used:    1
 12766 ;; Hardware stack levels required when called:    4
 12767 ;; This function calls:
 12768 ;;		_ringBufS_put_dma
 12769 ;; This function is called by:
 12770 ;;		_fputc
 12771 ;; This function uses a reentrant model
 12772 ;;
 12773                           
 12774                           	psect	text52
 12775  006368                     __ptext52:
 12776                           	opt callstack 0
 12777  006368                     _putch:
 12778                           	opt callstack 21
 12779                           
 12780                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12781                           ;stkvar	_c @ sp[(0)+-1]
 12782                           
 12783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12784                           ;incstack = 0
 12785  006368  0EFF               	movlw	-1
 12786  00636A  50E3               	movf	plusw1,w,c
 12787  00636C  6EE6               	movwf	postinc1,c
 12788  00636E  0060  F347  FFE6   	movff	_spi_link+6,postinc1
 12789  006374  0060  F34B  FFE6   	movff	_spi_link+7,postinc1
 12790  00637A  EC05  F029         	call	_ringBufS_put_dma	;wreg free
 12791                           
 12792                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12793  00637E  52E5               	movf	postdec1,f,c
 12794  006380  0012               	return		;funcret
 12795  006382                     __end_of_putch:
 12796                           	opt callstack 0
 12797                           
 12798 ;; *************** function _ringBufS_put_dma *****************
 12799 ;; Defined at:
 12800 ;;		line 67 in file "ringbufs.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12803 ;;		 -> ring_buf1(67), 
 12804 ;;  c               1  [STACK] const unsigned char 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1  [STACK] void 
 12809 ;; Registers used:
 12810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used:    1
 12822 ;; Hardware stack levels required when called:    3
 12823 ;; This function calls:
 12824 ;;		Nothing
 12825 ;; This function is called by:
 12826 ;;		_putch
 12827 ;; This function uses a reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text53
 12831  00520A                     __ptext53:
 12832                           	opt callstack 0
 12833  00520A                     _ringBufS_put_dma:
 12834                           	opt callstack 21
 12835                           
 12836                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12837                           ;stkvar	__this @ sp[(0)+-2]
 12838                           
 12839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12840                           ;incstack = 0
 12841  00520A  0EFE               	movlw	-2
 12842  00520C  006F FF8C  F043    	movff	plusw1,btemp+10
 12843  005212  0EFF               	movlw	-1
 12844  005214  006F FF8C  F044    	movff	plusw1,btemp+11
 12845  00521A  0E42               	movlw	66
 12846  00521C  2443               	addwf	btemp+10,w,c
 12847  00521E  6ED9               	movwf	fsr2l,c
 12848  005220  0E00               	movlw	0
 12849  005222  2044               	addwfc	btemp+11,w,c
 12850  005224  6EDA               	movwf	fsr2h,c
 12851  005226  0E40               	movlw	64
 12852  005228  60DF               	cpfslt	indf2,c
 12853  00522A  D040               	goto	l1487
 12854                           
 12855                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12856                           ;stkvar	_c @ sp[(0)+-3]
 12857                           ;stkvar	__this @ sp[(0)+-2]
 12858  00522C  0EFE               	movlw	-2
 12859  00522E  006F FF8C  F043    	movff	plusw1,btemp+10
 12860  005234  0EFF               	movlw	-1
 12861  005236  006F FF8C  F044    	movff	plusw1,btemp+11
 12862  00523C  0E40               	movlw	64
 12863  00523E  2443               	addwf	btemp+10,w,c
 12864  005240  6ED9               	movwf	fsr2l,c
 12865  005242  0E00               	movlw	0
 12866  005244  2044               	addwfc	btemp+11,w,c
 12867  005246  6EDA               	movwf	fsr2h,c
 12868  005248  50DF               	movf	indf2,w,c
 12869  00524A  6E44               	movwf	btemp+11,c
 12870                           
 12871                           ;stkvar	__this @ sp[(0)+-2]
 12872  00524C  0EFE               	movlw	-2
 12873  00524E  006F FF8C  F041    	movff	plusw1,btemp+8
 12874  005254  0EFF               	movlw	-1
 12875  005256  006F FF8C  F042    	movff	plusw1,btemp+9
 12876  00525C  5044               	movf	btemp+11,w,c
 12877  00525E  2441               	addwf	btemp+8,w,c
 12878  005260  6ED9               	movwf	fsr2l,c
 12879  005262  0E00               	movlw	0
 12880  005264  2042               	addwfc	btemp+9,w,c
 12881  005266  6EDA               	movwf	fsr2h,c
 12882  005268  0EFD               	movlw	-3
 12883  00526A  006F FF8F FFDF     	movff	plusw1,indf2
 12884                           
 12885                           ;ringbufs.c: 71:   ++_this->head;
 12886                           ;stkvar	__this @ sp[(0)+-2]
 12887  005270  0EFE               	movlw	-2
 12888  005272  006F FF8C  F043    	movff	plusw1,btemp+10
 12889  005278  0EFF               	movlw	-1
 12890  00527A  006F FF8C  F044    	movff	plusw1,btemp+11
 12891  005280  0E40               	movlw	64
 12892  005282  2443               	addwf	btemp+10,w,c
 12893  005284  6ED9               	movwf	fsr2l,c
 12894  005286  0E00               	movlw	0
 12895  005288  2044               	addwfc	btemp+11,w,c
 12896  00528A  6EDA               	movwf	fsr2h,c
 12897  00528C  2ADF               	incf	indf2,f,c
 12898                           
 12899                           ;ringbufs.c: 72:   ++_this->count;
 12900                           ;stkvar	__this @ sp[(0)+-2]
 12901  00528E  0EFE               	movlw	-2
 12902  005290  006F FF8C  F043    	movff	plusw1,btemp+10
 12903  005296  0EFF               	movlw	-1
 12904  005298  006F FF8C  F044    	movff	plusw1,btemp+11
 12905  00529E  0E42               	movlw	66
 12906  0052A0  2443               	addwf	btemp+10,w,c
 12907  0052A2  6ED9               	movwf	fsr2l,c
 12908  0052A4  0E00               	movlw	0
 12909  0052A6  2044               	addwfc	btemp+11,w,c
 12910  0052A8  6EDA               	movwf	fsr2h,c
 12911  0052AA  2ADF               	incf	indf2,f,c
 12912  0052AC                     l1487:
 12913                           
 12914                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12915  0052AC  52E5               	movf	postdec1,f,c
 12916  0052AE  52E5               	movf	postdec1,f,c
 12917  0052B0  52E5               	movf	postdec1,f,c
 12918  0052B2  0012               	return		;funcret
 12919  0052B4                     __end_of_ringBufS_put_dma:
 12920                           	opt callstack 0
 12921                           
 12922 ;; *************** function _SYSTEM_Initialize *****************
 12923 ;; Defined at:
 12924 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;		None
 12927 ;; Auto vars:     Size  Location     Type
 12928 ;;		None
 12929 ;; Return value:  Size  Location     Type
 12930 ;;                  1  [STACK] void 
 12931 ;; Registers used:
 12932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12933 ;; Tracked objects:
 12934 ;;		On entry : 0/0
 12935 ;;		On exit  : 3F/3C
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12942 ;;Total ram usage:        0 bytes
 12943 ;; Hardware stack levels used:    1
 12944 ;; Hardware stack levels required when called:    5
 12945 ;; This function calls:
 12946 ;;		_ADCC_Initialize
 12947 ;;		_CLC1_Initialize
 12948 ;;		_CLKREF_Initialize
 12949 ;;		_DMA1_Initialize
 12950 ;;		_DSM_Initialize
 12951 ;;		_EXT_INT_Initialize
 12952 ;;		_INTERRUPT_Initialize
 12953 ;;		_NCO1_Initialize
 12954 ;;		_OSCILLATOR_Initialize
 12955 ;;		_PIN_MANAGER_Initialize
 12956 ;;		_PMD_Initialize
 12957 ;;		_SPI1_Initialize
 12958 ;;		_TMR5_Initialize
 12959 ;;		_TMR6_Initialize
 12960 ;;		_UART1_Initialize
 12961 ;;		_UART2_Initialize
 12962 ;; This function is called by:
 12963 ;;		_main
 12964 ;; This function uses a reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text54
 12968  005B8E                     __ptext54:
 12969                           	opt callstack 0
 12970  005B8E                     _SYSTEM_Initialize:
 12971                           	opt callstack 25
 12972                           
 12973                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12974                           
 12975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12976                           ;incstack = 0
 12977  005B8E  ECA2  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12978                           
 12979                           ; BSR set to: 57
 12980                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12981  005B92  ECF2  F031         	call	_PMD_Initialize	;wreg free
 12982                           
 12983                           ; BSR set to: 57
 12984                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12985  005B96  ECAB  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 12986                           
 12987                           ; BSR set to: 58
 12988                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12989  005B9A  ECE7  F031         	call	_OSCILLATOR_Initialize	;wreg free
 12990                           
 12991                           ; BSR set to: 57
 12992                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12993  005B9E  EC39  F02D         	call	_ADCC_Initialize	;wreg free
 12994                           
 12995                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12996  005BA2  EC98  F031         	call	_NCO1_Initialize	;wreg free
 12997                           
 12998                           ; BSR set to: 63
 12999                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13000  005BA6  EC13  F02D         	call	_EXT_INT_Initialize	;wreg free
 13001                           
 13002                           ; BSR set to: 57
 13003                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 13004  005BAA  ECF7  F02F         	call	_TMR6_Initialize	;wreg free
 13005                           
 13006                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 13007  005BAE  EC08  F031         	call	_CLC1_Initialize	;wreg free
 13008                           
 13009                           ; BSR set to: 60
 13010                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13011  005BB2  EC81  F02D         	call	_TMR5_Initialize	;wreg free
 13012                           
 13013                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13014  005BB6  ECA6  F031         	call	_DSM_Initialize	;wreg free
 13015                           
 13016                           ; BSR set to: 60
 13017                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13018  005BBA  ECD5  F02B         	call	_UART1_Initialize	;wreg free
 13019                           
 13020                           ; BSR set to: 57
 13021                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 13022  005BBE  EC67  F02C         	call	_UART2_Initialize	;wreg free
 13023                           
 13024                           ; BSR set to: 57
 13025                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 13026  005BC2  ECDC  F031         	call	_SPI1_Initialize	;wreg free
 13027                           
 13028                           ; BSR set to: 61
 13029                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 13030  005BC6  EC6D  F02B         	call	_DMA1_Initialize	;wreg free
 13031                           
 13032                           ; BSR set to: 59
 13033                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 13034  005BCA  EC23  F032         	call	_CLKREF_Initialize	;wreg free
 13035                           
 13036                           ; BSR set to: 60
 13037                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13038  005BCE  0012               	return		;funcret
 13039  005BD0                     __end_of_SYSTEM_Initialize:
 13040                           	opt callstack 0
 13041                           
 13042 ;; *************** function _UART2_Initialize *****************
 13043 ;; Defined at:
 13044 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;		None
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1  [STACK] void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13053 ;; Tracked objects:
 13054 ;;		On entry : 3F/39
 13055 ;;		On exit  : 3F/39
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:    4
 13065 ;; This function calls:
 13066 ;;		_UART2_SetRxInterruptHandler
 13067 ;;		_UART2_SetTxInterruptHandler
 13068 ;; This function is called by:
 13069 ;;		_SYSTEM_Initialize
 13070 ;; This function uses a reentrant model
 13071 ;;
 13072                           
 13073                           	psect	text55
 13074  0058CE                     __ptext55:
 13075                           	opt callstack 0
 13076  0058CE                     _UART2_Initialize:
 13077                           	opt callstack 25
 13078                           
 13079                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13080                           
 13081                           ; BSR set to: 60
 13082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13083                           ;incstack = 0
 13084  0058CE  0139               	movlb	57	; () banked
 13085  0058D0  9596               	bcf	150,2,b	;volatile
 13086                           
 13087                           ; BSR set to: 57
 13088                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13089  0058D2  0EB8               	movlw	low _UART2_Receive_ISR
 13090  0058D4  6EE6               	movwf	postinc1,c
 13091  0058D6  0E62               	movlw	high _UART2_Receive_ISR
 13092  0058D8  6EE6               	movwf	postinc1,c
 13093  0058DA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13094  0058DC  6EE6               	movwf	postinc1,c
 13095  0058DE  ECBB  F02F         	call	_UART2_SetRxInterruptHandler	;wreg free
 13096                           
 13097                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13098  0058E2  0139               	movlb	57	; () banked
 13099  0058E4  9796               	bcf	150,3,b	;volatile
 13100                           
 13101                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13102  0058E6  0E2C               	movlw	low _UART2_Transmit_ISR
 13103  0058E8  6EE6               	movwf	postinc1,c
 13104  0058EA  0E5E               	movlw	high _UART2_Transmit_ISR
 13105  0058EC  6EE6               	movwf	postinc1,c
 13106  0058EE  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13107  0058F0  6EE6               	movwf	postinc1,c
 13108  0058F2  ECA7  F02F         	call	_UART2_SetTxInterruptHandler	;wreg free
 13109                           
 13110                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13111  0058F6  013D               	movlb	61	; () banked
 13112  0058F8  6BD4               	clrf	212,b	;volatile
 13113                           
 13114                           ; BSR set to: 61
 13115                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13116  0058FA  6BD6               	clrf	214,b	;volatile
 13117                           
 13118                           ; BSR set to: 61
 13119                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13120  0058FC  6BD8               	clrf	216,b	;volatile
 13121                           
 13122                           ; BSR set to: 61
 13123                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13124  0058FE  0EB0               	movlw	176
 13125  005900  6FDA               	movwf	218,b	;volatile
 13126                           
 13127                           ; BSR set to: 61
 13128                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13129  005902  0E80               	movlw	128
 13130  005904  6FDB               	movwf	219,b	;volatile
 13131                           
 13132                           ; BSR set to: 61
 13133                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13134  005906  6BDC               	clrf	220,b	;volatile
 13135                           
 13136                           ; BSR set to: 61
 13137                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13138  005908  0E82               	movlw	130
 13139  00590A  6FDD               	movwf	221,b	;volatile
 13140                           
 13141                           ; BSR set to: 61
 13142                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13143  00590C  0E06               	movlw	6
 13144  00590E  6FDE               	movwf	222,b	;volatile
 13145                           
 13146                           ; BSR set to: 61
 13147                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13148  005910  6BDF               	clrf	223,b	;volatile
 13149                           
 13150                           ; BSR set to: 61
 13151                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13152  005912  6BE0               	clrf	224,b	;volatile
 13153                           
 13154                           ; BSR set to: 61
 13155                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13156  005914  6BE1               	clrf	225,b	;volatile
 13157                           
 13158                           ; BSR set to: 61
 13159                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13160  005916  6BE2               	clrf	226,b	;volatile
 13161                           
 13162                           ; BSR set to: 61
 13163                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13164  005918  6A32               	clrf	_uart2TxHead,c	;volatile
 13165                           
 13166                           ; BSR set to: 61
 13167                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13168  00591A  6A31               	clrf	_uart2TxTail,c	;volatile
 13169                           
 13170                           ; BSR set to: 61
 13171                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13172  00591C  0E40               	movlw	64
 13173  00591E  6E30               	movwf	_uart2TxBufferRemaining,c	;volatile
 13174                           
 13175                           ; BSR set to: 61
 13176                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13177  005920  6A2F               	clrf	_uart2RxHead,c	;volatile
 13178                           
 13179                           ; BSR set to: 61
 13180                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13181  005922  6A2E               	clrf	_uart2RxTail,c	;volatile
 13182                           
 13183                           ; BSR set to: 61
 13184                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13185  005924  6A2D               	clrf	_uart2RxCount,c	;volatile
 13186                           
 13187                           ; BSR set to: 61
 13188                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13189  005926  0139               	movlb	57	; () banked
 13190  005928  8596               	bsf	150,2,b	;volatile
 13191                           
 13192                           ; BSR set to: 57
 13193                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13194  00592A  0012               	return		;funcret
 13195  00592C                     __end_of_UART2_Initialize:
 13196                           	opt callstack 0
 13197                           
 13198 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13199 ;; Defined at:
 13200 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13203 ;;		 -> UART2_Transmit_ISR(1), 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1  [STACK] void 
 13208 ;; Registers used:
 13209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13210 ;; Tracked objects:
 13211 ;;		On entry : 3F/39
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:    3
 13222 ;; This function calls:
 13223 ;;		Nothing
 13224 ;; This function is called by:
 13225 ;;		_UART2_Initialize
 13226 ;; This function uses a reentrant model
 13227 ;;
 13228                           
 13229                           	psect	text56
 13230  005F4E                     __ptext56:
 13231                           	opt callstack 0
 13232  005F4E                     _UART2_SetTxInterruptHandler:
 13233                           	opt callstack 25
 13234                           
 13235                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13236                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13237                           
 13238                           ; BSR set to: 57
 13239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13240                           ;incstack = 0
 13241  005F4E  50E1               	movf	fsr1l,w,c
 13242  005F50  0FFD               	addlw	-3
 13243  005F52  6ED9               	movwf	fsr2l,c
 13244  005F54  50E2               	movf	fsr1h,w,c
 13245  005F56  6EDA               	movwf	fsr2h,c
 13246  005F58  0EFF               	movlw	255
 13247  005F5A  22DA               	addwfc	fsr2h,f,c
 13248  005F5C  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13249  005F62  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13250  005F68  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13251                           
 13252                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13253  005F6E  52E5               	movf	postdec1,f,c
 13254  005F70  52E5               	movf	postdec1,f,c
 13255  005F72  52E5               	movf	postdec1,f,c
 13256  005F74  0012               	return		;funcret
 13257  005F76                     __end_of_UART2_SetTxInterruptHandler:
 13258                           	opt callstack 0
 13259                           
 13260 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13261 ;; Defined at:
 13262 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13265 ;;		 -> UART2_Receive_ISR(1), 
 13266 ;; Auto vars:     Size  Location     Type
 13267 ;;		None
 13268 ;; Return value:  Size  Location     Type
 13269 ;;                  1  [STACK] void 
 13270 ;; Registers used:
 13271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13272 ;; Tracked objects:
 13273 ;;		On entry : 3F/39
 13274 ;;		On exit  : 0/0
 13275 ;;		Unchanged: 0/0
 13276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13281 ;;Total ram usage:        0 bytes
 13282 ;; Hardware stack levels used:    1
 13283 ;; Hardware stack levels required when called:    3
 13284 ;; This function calls:
 13285 ;;		Nothing
 13286 ;; This function is called by:
 13287 ;;		_UART2_Initialize
 13288 ;; This function uses a reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text57
 13292  005F76                     __ptext57:
 13293                           	opt callstack 0
 13294  005F76                     _UART2_SetRxInterruptHandler:
 13295                           	opt callstack 25
 13296                           
 13297                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13298                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13299                           
 13300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13301                           ;incstack = 0
 13302  005F76  50E1               	movf	fsr1l,w,c
 13303  005F78  0FFD               	addlw	-3
 13304  005F7A  6ED9               	movwf	fsr2l,c
 13305  005F7C  50E2               	movf	fsr1h,w,c
 13306  005F7E  6EDA               	movwf	fsr2h,c
 13307  005F80  0EFF               	movlw	255
 13308  005F82  22DA               	addwfc	fsr2h,f,c
 13309  005F84  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13310  005F8A  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13311  005F90  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13312                           
 13313                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13314  005F96  52E5               	movf	postdec1,f,c
 13315  005F98  52E5               	movf	postdec1,f,c
 13316  005F9A  52E5               	movf	postdec1,f,c
 13317  005F9C  0012               	return		;funcret
 13318  005F9E                     __end_of_UART2_SetRxInterruptHandler:
 13319                           	opt callstack 0
 13320                           
 13321 ;; *************** function _UART1_Initialize *****************
 13322 ;; Defined at:
 13323 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;		None
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1  [STACK] void 
 13330 ;; Registers used:
 13331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13332 ;; Tracked objects:
 13333 ;;		On entry : 3F/3C
 13334 ;;		On exit  : 3F/39
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13341 ;;Total ram usage:        0 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    4
 13344 ;; This function calls:
 13345 ;;		_UART1_SetRxInterruptHandler
 13346 ;;		_UART1_SetTxInterruptHandler
 13347 ;; This function is called by:
 13348 ;;		_SYSTEM_Initialize
 13349 ;; This function uses a reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text58
 13353  0057AA                     __ptext58:
 13354                           	opt callstack 0
 13355  0057AA                     _UART1_Initialize:
 13356                           	opt callstack 25
 13357                           
 13358                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13359                           
 13360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13361                           ;incstack = 0
 13362  0057AA  0139               	movlb	57	; () banked
 13363  0057AC  9793               	bcf	147,3,b	;volatile
 13364                           
 13365                           ; BSR set to: 57
 13366                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13367  0057AE  0E98               	movlw	low _UART1_Receive_ISR
 13368  0057B0  6EE6               	movwf	postinc1,c
 13369  0057B2  0E62               	movlw	high _UART1_Receive_ISR
 13370  0057B4  6EE6               	movwf	postinc1,c
 13371  0057B6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13372  0057B8  6EE6               	movwf	postinc1,c
 13373  0057BA  ECE3  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13374                           
 13375                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13376  0057BE  0139               	movlb	57	; () banked
 13377  0057C0  9993               	bcf	147,4,b	;volatile
 13378                           
 13379                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13380  0057C2  0E00               	movlw	low _UART1_Transmit_ISR
 13381  0057C4  6EE6               	movwf	postinc1,c
 13382  0057C6  0E5E               	movlw	high _UART1_Transmit_ISR
 13383  0057C8  6EE6               	movwf	postinc1,c
 13384  0057CA  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13385  0057CC  6EE6               	movwf	postinc1,c
 13386  0057CE  ECCF  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13387                           
 13388                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13389  0057D2  013D               	movlb	61	; () banked
 13390  0057D4  6BEC               	clrf	236,b	;volatile
 13391                           
 13392                           ; BSR set to: 61
 13393                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13394  0057D6  6BED               	clrf	237,b	;volatile
 13395                           
 13396                           ; BSR set to: 61
 13397                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13398  0057D8  6BEE               	clrf	238,b	;volatile
 13399                           
 13400                           ; BSR set to: 61
 13401                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13402  0057DA  6BEF               	clrf	239,b	;volatile
 13403                           
 13404                           ; BSR set to: 61
 13405                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13406  0057DC  6BF0               	clrf	240,b	;volatile
 13407                           
 13408                           ; BSR set to: 61
 13409                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13410  0057DE  6BF1               	clrf	241,b	;volatile
 13411                           
 13412                           ; BSR set to: 61
 13413                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13414  0057E0  0EB0               	movlw	176
 13415  0057E2  6FF2               	movwf	242,b	;volatile
 13416                           
 13417                           ; BSR set to: 61
 13418                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13419  0057E4  0E80               	movlw	128
 13420  0057E6  6FF3               	movwf	243,b	;volatile
 13421                           
 13422                           ; BSR set to: 61
 13423                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13424  0057E8  6BF4               	clrf	244,b	;volatile
 13425                           
 13426                           ; BSR set to: 61
 13427                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13428  0057EA  0E82               	movlw	130
 13429  0057EC  6FF5               	movwf	245,b	;volatile
 13430                           
 13431                           ; BSR set to: 61
 13432                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13433  0057EE  0E06               	movlw	6
 13434  0057F0  6FF6               	movwf	246,b	;volatile
 13435                           
 13436                           ; BSR set to: 61
 13437                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13438  0057F2  6BF7               	clrf	247,b	;volatile
 13439                           
 13440                           ; BSR set to: 61
 13441                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13442  0057F4  6BF8               	clrf	248,b	;volatile
 13443                           
 13444                           ; BSR set to: 61
 13445                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13446  0057F6  6BF9               	clrf	249,b	;volatile
 13447                           
 13448                           ; BSR set to: 61
 13449                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13450  0057F8  6BFA               	clrf	250,b	;volatile
 13451                           
 13452                           ; BSR set to: 61
 13453                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13454  0057FA  6A38               	clrf	_uart1TxHead,c	;volatile
 13455                           
 13456                           ; BSR set to: 61
 13457                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13458  0057FC  6A37               	clrf	_uart1TxTail,c	;volatile
 13459                           
 13460                           ; BSR set to: 61
 13461                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13462  0057FE  0E40               	movlw	64
 13463  005800  6E36               	movwf	_uart1TxBufferRemaining,c	;volatile
 13464                           
 13465                           ; BSR set to: 61
 13466                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13467  005802  6A35               	clrf	_uart1RxHead,c	;volatile
 13468                           
 13469                           ; BSR set to: 61
 13470                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13471  005804  6A34               	clrf	_uart1RxTail,c	;volatile
 13472                           
 13473                           ; BSR set to: 61
 13474                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13475  005806  6A33               	clrf	_uart1RxCount,c	;volatile
 13476                           
 13477                           ; BSR set to: 61
 13478                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13479  005808  0139               	movlb	57	; () banked
 13480  00580A  8793               	bsf	147,3,b	;volatile
 13481                           
 13482                           ; BSR set to: 57
 13483                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13484  00580C  0012               	return		;funcret
 13485  00580E                     __end_of_UART1_Initialize:
 13486                           	opt callstack 0
 13487                           
 13488 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13489 ;; Defined at:
 13490 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13493 ;;		 -> UART1_Transmit_ISR(1), 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;		None
 13496 ;; Return value:  Size  Location     Type
 13497 ;;                  1  [STACK] void 
 13498 ;; Registers used:
 13499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13500 ;; Tracked objects:
 13501 ;;		On entry : 3F/39
 13502 ;;		On exit  : 0/0
 13503 ;;		Unchanged: 0/0
 13504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13509 ;;Total ram usage:        0 bytes
 13510 ;; Hardware stack levels used:    1
 13511 ;; Hardware stack levels required when called:    3
 13512 ;; This function calls:
 13513 ;;		Nothing
 13514 ;; This function is called by:
 13515 ;;		_UART1_Initialize
 13516 ;; This function uses a reentrant model
 13517 ;;
 13518                           
 13519                           	psect	text59
 13520  005F9E                     __ptext59:
 13521                           	opt callstack 0
 13522  005F9E                     _UART1_SetTxInterruptHandler:
 13523                           	opt callstack 25
 13524                           
 13525                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13526                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13527                           
 13528                           ; BSR set to: 57
 13529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13530                           ;incstack = 0
 13531  005F9E  50E1               	movf	fsr1l,w,c
 13532  005FA0  0FFD               	addlw	-3
 13533  005FA2  6ED9               	movwf	fsr2l,c
 13534  005FA4  50E2               	movf	fsr1h,w,c
 13535  005FA6  6EDA               	movwf	fsr2h,c
 13536  005FA8  0EFF               	movlw	255
 13537  005FAA  22DA               	addwfc	fsr2h,f,c
 13538  005FAC  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 13539  005FB2  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 13540  005FB8  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 13541                           
 13542                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13543  005FBE  52E5               	movf	postdec1,f,c
 13544  005FC0  52E5               	movf	postdec1,f,c
 13545  005FC2  52E5               	movf	postdec1,f,c
 13546  005FC4  0012               	return		;funcret
 13547  005FC6                     __end_of_UART1_SetTxInterruptHandler:
 13548                           	opt callstack 0
 13549                           
 13550 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13551 ;; Defined at:
 13552 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13555 ;;		 -> UART1_Receive_ISR(1), 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;		None
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  1  [STACK] void 
 13560 ;; Registers used:
 13561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13562 ;; Tracked objects:
 13563 ;;		On entry : 3F/39
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13571 ;;Total ram usage:        0 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:    3
 13574 ;; This function calls:
 13575 ;;		Nothing
 13576 ;; This function is called by:
 13577 ;;		_UART1_Initialize
 13578 ;; This function uses a reentrant model
 13579 ;;
 13580                           
 13581                           	psect	text60
 13582  005FC6                     __ptext60:
 13583                           	opt callstack 0
 13584  005FC6                     _UART1_SetRxInterruptHandler:
 13585                           	opt callstack 25
 13586                           
 13587                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13588                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13589                           
 13590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13591                           ;incstack = 0
 13592  005FC6  50E1               	movf	fsr1l,w,c
 13593  005FC8  0FFD               	addlw	-3
 13594  005FCA  6ED9               	movwf	fsr2l,c
 13595  005FCC  50E2               	movf	fsr1h,w,c
 13596  005FCE  6EDA               	movwf	fsr2h,c
 13597  005FD0  0EFF               	movlw	255
 13598  005FD2  22DA               	addwfc	fsr2h,f,c
 13599  005FD4  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 13600  005FDA  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 13601  005FE0  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 13602                           
 13603                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13604  005FE6  52E5               	movf	postdec1,f,c
 13605  005FE8  52E5               	movf	postdec1,f,c
 13606  005FEA  52E5               	movf	postdec1,f,c
 13607  005FEC  0012               	return		;funcret
 13608  005FEE                     __end_of_UART1_SetRxInterruptHandler:
 13609                           	opt callstack 0
 13610                           
 13611 ;; *************** function _TMR6_Initialize *****************
 13612 ;; Defined at:
 13613 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;		None
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1  [STACK] void 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13622 ;; Tracked objects:
 13623 ;;		On entry : 3F/39
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        0 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:    4
 13634 ;; This function calls:
 13635 ;;		_TMR6_SetInterruptHandler
 13636 ;; This function is called by:
 13637 ;;		_SYSTEM_Initialize
 13638 ;; This function uses a reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text61
 13642  005FEE                     __ptext61:
 13643                           	opt callstack 0
 13644  005FEE                     _TMR6_Initialize:
 13645                           	opt callstack 25
 13646                           
 13647                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13648                           
 13649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13650                           ;incstack = 0
 13651  005FEE  0E01               	movlw	1
 13652  005FF0  6E96               	movwf	16278,c	;volatile
 13653                           
 13654                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13655  005FF2  6A95               	clrf	16277,c	;volatile
 13656                           
 13657                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13658  005FF4  6A97               	clrf	16279,c	;volatile
 13659                           
 13660                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13661  005FF6  0E03               	movlw	3
 13662  005FF8  6E93               	movwf	16275,c	;volatile
 13663                           
 13664                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13665  005FFA  6A92               	clrf	16274,c	;volatile
 13666                           
 13667                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13668  005FFC  0139               	movlb	57	; () banked
 13669  005FFE  91A9               	bcf	169,0,b	;volatile
 13670                           
 13671                           ; BSR set to: 57
 13672                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13673  006000  8199               	bsf	153,0,b	;volatile
 13674                           
 13675                           ; BSR set to: 57
 13676                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13677  006002  0E48               	movlw	low _TMR6_DefaultInterruptHandler
 13678  006004  6EE6               	movwf	postinc1,c
 13679  006006  0E5B               	movlw	high _TMR6_DefaultInterruptHandler
 13680  006008  6EE6               	movwf	postinc1,c
 13681  00600A  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13682  00600C  6EE6               	movwf	postinc1,c
 13683  00600E  EC0B  F030         	call	_TMR6_SetInterruptHandler	;wreg free
 13684                           
 13685                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13686  006012  6894               	setf	16276,c	;volatile
 13687                           
 13688                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13689  006014  0012               	return		;funcret
 13690  006016                     __end_of_TMR6_Initialize:
 13691                           	opt callstack 0
 13692                           
 13693 ;; *************** function _TMR6_SetInterruptHandler *****************
 13694 ;; Defined at:
 13695 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13698 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;		None
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1  [STACK] void 
 13703 ;; Registers used:
 13704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13705 ;; Tracked objects:
 13706 ;;		On entry : 3F/39
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;Total ram usage:        0 bytes
 13715 ;; Hardware stack levels used:    1
 13716 ;; Hardware stack levels required when called:    3
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_TMR6_Initialize
 13721 ;; This function uses a reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text62
 13725  006016                     __ptext62:
 13726                           	opt callstack 0
 13727  006016                     _TMR6_SetInterruptHandler:
 13728                           	opt callstack 25
 13729                           
 13730                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13731                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13732                           
 13733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13734                           ;incstack = 0
 13735  006016  50E1               	movf	fsr1l,w,c
 13736  006018  0FFD               	addlw	-3
 13737  00601A  6ED9               	movwf	fsr2l,c
 13738  00601C  50E2               	movf	fsr1h,w,c
 13739  00601E  6EDA               	movwf	fsr2h,c
 13740  006020  0EFF               	movlw	255
 13741  006022  22DA               	addwfc	fsr2h,f,c
 13742  006024  006F FF78  F0F1    	movff	postinc2,_TMR6_InterruptHandler
 13743  00602A  006F FF78  F0F2    	movff	postinc2,_TMR6_InterruptHandler+1
 13744  006030  006F FF74  F0F3    	movff	postdec2,_TMR6_InterruptHandler+2
 13745                           
 13746                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13747  006036  52E5               	movf	postdec1,f,c
 13748  006038  52E5               	movf	postdec1,f,c
 13749  00603A  52E5               	movf	postdec1,f,c
 13750  00603C  0012               	return		;funcret
 13751  00603E                     __end_of_TMR6_SetInterruptHandler:
 13752                           	opt callstack 0
 13753                           
 13754 ;; *************** function _TMR5_Initialize *****************
 13755 ;; Defined at:
 13756 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13757 ;; Parameters:    Size  Location     Type
 13758 ;;		None
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;		None
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1  [STACK] void 
 13763 ;; Registers used:
 13764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13765 ;; Tracked objects:
 13766 ;;		On entry : 3F/3C
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13774 ;;Total ram usage:        0 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:    4
 13777 ;; This function calls:
 13778 ;;		_TMR5_SetInterruptHandler
 13779 ;; This function is called by:
 13780 ;;		_SYSTEM_Initialize
 13781 ;; This function uses a reentrant model
 13782 ;;
 13783                           
 13784                           	psect	text63
 13785  005B02                     __ptext63:
 13786                           	opt callstack 0
 13787  005B02                     _TMR5_Initialize:
 13788                           	opt callstack 25
 13789                           
 13790                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 13791                           
 13792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13793                           ;incstack = 0
 13794  005B02  6A9B               	clrf	16283,c	;volatile
 13795                           
 13796                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 13797  005B04  6A9C               	clrf	16284,c	;volatile
 13798                           
 13799                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 13800  005B06  0E01               	movlw	1
 13801  005B08  6E9D               	movwf	16285,c	;volatile
 13802                           
 13803                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 13804  005B0A  0E63               	movlw	99
 13805  005B0C  6E99               	movwf	16281,c	;volatile
 13806                           
 13807                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 13808  005B0E  0EC0               	movlw	192
 13809  005B10  6E98               	movwf	16280,c	;volatile
 13810                           
 13811                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13812  005B12  5098               	movf	16280,w,c	;volatile
 13813  005B14  006F FE64  F039    	movff	16281,btemp	;volatile
 13814  005B1A  6A3A               	clrf	btemp+1,c
 13815  005B1C  0060  F0E4  F03A   	movff	btemp,btemp+1
 13816  005B22  6A39               	clrf	btemp,c
 13817  005B24  1039               	iorwf	btemp,w,c
 13818  005B26  6E25               	movwf	_timer5ReloadVal,c	;volatile
 13819  005B28  503A               	movf	btemp+1,w,c
 13820  005B2A  6E26               	movwf	_timer5ReloadVal+1,c	;volatile
 13821                           
 13822                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 13823  005B2C  0139               	movlb	57	; () banked
 13824  005B2E  9DA8               	bcf	168,6,b	;volatile
 13825                           
 13826                           ; BSR set to: 57
 13827                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 13828  005B30  8D98               	bsf	152,6,b	;volatile
 13829                           
 13830                           ; BSR set to: 57
 13831                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13832  005B32  0E9E               	movlw	low _TMR5_DefaultInterruptHandler
 13833  005B34  6EE6               	movwf	postinc1,c
 13834  005B36  0E63               	movlw	high _TMR5_DefaultInterruptHandler
 13835  005B38  6EE6               	movwf	postinc1,c
 13836  005B3A  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13837  005B3C  6EE6               	movwf	postinc1,c
 13838  005B3E  EC1F  F030         	call	_TMR5_SetInterruptHandler	;wreg free
 13839                           
 13840                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 13841  005B42  0E31               	movlw	49
 13842  005B44  6E9A               	movwf	16282,c	;volatile
 13843                           
 13844                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13845  005B46  0012               	return		;funcret
 13846  005B48                     __end_of_TMR5_Initialize:
 13847                           	opt callstack 0
 13848                           
 13849 ;; *************** function _TMR5_SetInterruptHandler *****************
 13850 ;; Defined at:
 13851 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13854 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;		None
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  1  [STACK] void 
 13859 ;; Registers used:
 13860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13861 ;; Tracked objects:
 13862 ;;		On entry : 3F/39
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13870 ;;Total ram usage:        0 bytes
 13871 ;; Hardware stack levels used:    1
 13872 ;; Hardware stack levels required when called:    3
 13873 ;; This function calls:
 13874 ;;		Nothing
 13875 ;; This function is called by:
 13876 ;;		_TMR5_Initialize
 13877 ;; This function uses a reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text64
 13881  00603E                     __ptext64:
 13882                           	opt callstack 0
 13883  00603E                     _TMR5_SetInterruptHandler:
 13884                           	opt callstack 25
 13885                           
 13886                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13887                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13888                           
 13889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13890                           ;incstack = 0
 13891  00603E  50E1               	movf	fsr1l,w,c
 13892  006040  0FFD               	addlw	-3
 13893  006042  6ED9               	movwf	fsr2l,c
 13894  006044  50E2               	movf	fsr1h,w,c
 13895  006046  6EDA               	movwf	fsr2h,c
 13896  006048  0EFF               	movlw	255
 13897  00604A  22DA               	addwfc	fsr2h,f,c
 13898  00604C  006F FF78  F0EE    	movff	postinc2,_TMR5_InterruptHandler
 13899  006052  006F FF78  F0EF    	movff	postinc2,_TMR5_InterruptHandler+1
 13900  006058  006F FF74  F0F0    	movff	postdec2,_TMR5_InterruptHandler+2
 13901                           
 13902                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13903  00605E  52E5               	movf	postdec1,f,c
 13904  006060  52E5               	movf	postdec1,f,c
 13905  006062  52E5               	movf	postdec1,f,c
 13906  006064  0012               	return		;funcret
 13907  006066                     __end_of_TMR5_SetInterruptHandler:
 13908                           	opt callstack 0
 13909                           
 13910 ;; *************** function _SPI1_Initialize *****************
 13911 ;; Defined at:
 13912 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;		None
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;		None
 13917 ;; Return value:  Size  Location     Type
 13918 ;;                  1  [STACK] void 
 13919 ;; Registers used:
 13920 ;;		wreg, status,2
 13921 ;; Tracked objects:
 13922 ;;		On entry : 3F/39
 13923 ;;		On exit  : 3F/3D
 13924 ;;		Unchanged: 0/0
 13925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13930 ;;Total ram usage:        0 bytes
 13931 ;; Hardware stack levels used:    1
 13932 ;; Hardware stack levels required when called:    3
 13933 ;; This function calls:
 13934 ;;		Nothing
 13935 ;; This function is called by:
 13936 ;;		_SYSTEM_Initialize
 13937 ;; This function uses a reentrant model
 13938 ;;
 13939                           
 13940                           	psect	text65
 13941  0063B8                     __ptext65:
 13942                           	opt callstack 0
 13943  0063B8                     _SPI1_Initialize:
 13944                           	opt callstack 26
 13945                           
 13946                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13947                           
 13948                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13949                           ;incstack = 0
 13950  0063B8  0E40               	movlw	64
 13951  0063BA  013D               	movlb	61	; () banked
 13952  0063BC  6F15               	movwf	21,b	;volatile
 13953                           
 13954                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13955  0063BE  0E03               	movlw	3
 13956  0063C0  6F16               	movwf	22,b	;volatile
 13957                           
 13958                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13959  0063C2  0E4F               	movlw	79
 13960  0063C4  6F19               	movwf	25,b	;volatile
 13961                           
 13962                           ; BSR set to: 61
 13963                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13964  0063C6  6B1C               	clrf	28,b	;volatile
 13965                           
 13966                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13967  0063C8  0E83               	movlw	131
 13968  0063CA  6F14               	movwf	20,b	;volatile
 13969                           
 13970                           ; BSR set to: 61
 13971                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13972  0063CC  0012               	return		;funcret
 13973  0063CE                     __end_of_SPI1_Initialize:
 13974                           	opt callstack 0
 13975                           
 13976 ;; *************** function _PMD_Initialize *****************
 13977 ;; Defined at:
 13978 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13979 ;; Parameters:    Size  Location     Type
 13980 ;;		None
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;		None
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1  [STACK] void 
 13985 ;; Registers used:
 13986 ;;		None
 13987 ;; Tracked objects:
 13988 ;;		On entry : 3F/39
 13989 ;;		On exit  : 3F/39
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13996 ;;Total ram usage:        0 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    3
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_SYSTEM_Initialize
 14003 ;; This function uses a reentrant model
 14004 ;;
 14005                           
 14006                           	psect	text66
 14007  0063E4                     __ptext66:
 14008                           	opt callstack 0
 14009  0063E4                     _PMD_Initialize:
 14010                           	opt callstack 26
 14011                           
 14012                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14013                           
 14014                           ; BSR set to: 61
 14015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14016                           ;incstack = 0
 14017  0063E4  0139               	movlb	57	; () banked
 14018  0063E6  6BC0               	clrf	192,b	;volatile
 14019                           
 14020                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 14021  0063E8  6BC1               	clrf	193,b	;volatile
 14022                           
 14023                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 14024  0063EA  6BC2               	clrf	194,b	;volatile
 14025                           
 14026                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 14027  0063EC  6BC3               	clrf	195,b	;volatile
 14028                           
 14029                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 14030  0063EE  6BC4               	clrf	196,b	;volatile
 14031                           
 14032                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 14033  0063F0  6BC5               	clrf	197,b	;volatile
 14034                           
 14035                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14036  0063F2  6BC6               	clrf	198,b	;volatile
 14037                           
 14038                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14039  0063F4  6BC7               	clrf	199,b	;volatile
 14040                           
 14041                           ; BSR set to: 57
 14042                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14043  0063F6  0012               	return		;funcret
 14044  0063F8                     __end_of_PMD_Initialize:
 14045                           	opt callstack 0
 14046                           
 14047 ;; *************** function _PIN_MANAGER_Initialize *****************
 14048 ;; Defined at:
 14049 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14050 ;; Parameters:    Size  Location     Type
 14051 ;;		None
 14052 ;; Auto vars:     Size  Location     Type
 14053 ;;		None
 14054 ;; Return value:  Size  Location     Type
 14055 ;;                  1  [STACK] void 
 14056 ;; Registers used:
 14057 ;;		wreg, status,2
 14058 ;; Tracked objects:
 14059 ;;		On entry : 3F/39
 14060 ;;		On exit  : 3F/3A
 14061 ;;		Unchanged: 0/0
 14062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14067 ;;Total ram usage:        0 bytes
 14068 ;; Hardware stack levels used:    1
 14069 ;; Hardware stack levels required when called:    3
 14070 ;; This function calls:
 14071 ;;		Nothing
 14072 ;; This function is called by:
 14073 ;;		_SYSTEM_Initialize
 14074 ;; This function uses a reentrant model
 14075 ;;
 14076                           
 14077                           	psect	text67
 14078  005356                     __ptext67:
 14079                           	opt callstack 0
 14080  005356                     _PIN_MANAGER_Initialize:
 14081                           	opt callstack 26
 14082                           
 14083                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14084                           
 14085                           ; BSR set to: 57
 14086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14087                           ;incstack = 0
 14088  005356  0E07               	movlw	7
 14089  005358  6EBE               	movwf	16318,c	;volatile
 14090                           
 14091                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14092  00535A  6ABD               	clrf	16317,c	;volatile
 14093                           
 14094                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14095  00535C  6ABA               	clrf	16314,c	;volatile
 14096                           
 14097                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14098  00535E  6ABF               	clrf	16319,c	;volatile
 14099                           
 14100                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14101  005360  6ABB               	clrf	16315,c	;volatile
 14102                           
 14103                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14104  005362  0E06               	movlw	6
 14105  005364  6EBC               	movwf	16316,c	;volatile
 14106                           
 14107                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14108  005366  6AC6               	clrf	16326,c	;volatile
 14109                           
 14110                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14111  005368  68C7               	setf	16327,c	;volatile
 14112                           
 14113                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14114  00536A  0E8F               	movlw	143
 14115  00536C  6EC2               	movwf	16322,c	;volatile
 14116                           
 14117                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14118  00536E  0EBF               	movlw	191
 14119  005370  6EC3               	movwf	16323,c	;volatile
 14120                           
 14121                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14122  005372  0E91               	movlw	145
 14123  005374  6EC4               	movwf	16324,c	;volatile
 14124                           
 14125                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14126  005376  0E0C               	movlw	12
 14127  005378  6EC5               	movwf	16325,c	;volatile
 14128                           
 14129                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14130  00537A  013A               	movlb	58	; () banked
 14131  00537C  6B70               	clrf	112,b	;volatile
 14132                           
 14133                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14134  00537E  0E01               	movlw	1
 14135  005380  6F60               	movwf	96,b	;volatile
 14136                           
 14137                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14138  005382  0E38               	movlw	56
 14139  005384  6F50               	movwf	80,b	;volatile
 14140                           
 14141                           ; BSR set to: 58
 14142                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14143  005386  6B80               	clrf	128,b	;volatile
 14144                           
 14145                           ; BSR set to: 58
 14146                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14147  005388  6990               	setf	144,b	;volatile
 14148                           
 14149                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14150  00538A  0E8F               	movlw	143
 14151  00538C  6F40               	movwf	64,b	;volatile
 14152                           
 14153                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14154  00538E  0EFC               	movlw	252
 14155  005390  6F71               	movwf	113,b	;volatile
 14156                           
 14157                           ; BSR set to: 58
 14158                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14159  005392  6B91               	clrf	145,b	;volatile
 14160                           
 14161                           ; BSR set to: 58
 14162                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14163  005394  6B81               	clrf	129,b	;volatile
 14164                           
 14165                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14166  005396  0E87               	movlw	135
 14167  005398  6F51               	movwf	81,b	;volatile
 14168                           
 14169                           ; BSR set to: 58
 14170                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14171  00539A  6B41               	clrf	65,b	;volatile
 14172                           
 14173                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14174  00539C  0E90               	movlw	144
 14175  00539E  6F61               	movwf	97,b	;volatile
 14176                           
 14177                           ; BSR set to: 58
 14178                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14179  0053A0  6B82               	clrf	130,b	;volatile
 14180                           
 14181                           ; BSR set to: 58
 14182                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14183  0053A2  6B92               	clrf	146,b	;volatile
 14184                           
 14185                           ; BSR set to: 58
 14186                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14187  0053A4  6B42               	clrf	66,b	;volatile
 14188                           
 14189                           ; BSR set to: 58
 14190                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14191  0053A6  6B52               	clrf	82,b	;volatile
 14192                           
 14193                           ; BSR set to: 58
 14194                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14195  0053A8  6B62               	clrf	98,b	;volatile
 14196                           
 14197                           ; BSR set to: 58
 14198                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14199  0053AA  6B72               	clrf	114,b	;volatile
 14200                           
 14201                           ; BSR set to: 58
 14202                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14203  0053AC  6943               	setf	67,b	;volatile
 14204                           
 14205                           ; BSR set to: 58
 14206                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14207  0053AE  6953               	setf	83,b	;volatile
 14208                           
 14209                           ; BSR set to: 58
 14210                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14211  0053B0  6963               	setf	99,b	;volatile
 14212                           
 14213                           ; BSR set to: 58
 14214                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14215  0053B2  6973               	setf	115,b	;volatile
 14216                           
 14217                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14218  0053B4  0E07               	movlw	7
 14219  0053B6  6F83               	movwf	131,b	;volatile
 14220                           
 14221                           ; BSR set to: 58
 14222                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14223  0053B8  6993               	setf	147,b	;volatile
 14224                           
 14225                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14226  0053BA  0E0F               	movlw	15
 14227  0053BC  6FE8               	movwf	232,b	;volatile
 14228                           
 14229                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14230  0053BE  0E16               	movlw	22
 14231  0053C0  6F0E               	movwf	14,b	;volatile
 14232                           
 14233                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14234  0053C2  0E1E               	movlw	30
 14235  0053C4  6F13               	movwf	19,b	;volatile
 14236                           
 14237                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14238  0053C6  0E08               	movlw	8
 14239  0053C8  6FC0               	movwf	192,b	;volatile
 14240                           
 14241                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14242  0053CA  0E0A               	movlw	10
 14243  0053CC  6FC2               	movwf	194,b	;volatile
 14244                           
 14245                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14246  0053CE  0E09               	movlw	9
 14247  0053D0  6FC1               	movwf	193,b	;volatile
 14248                           
 14249                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14250  0053D2  0E17               	movlw	23
 14251  0053D4  6FE5               	movwf	229,b	;volatile
 14252                           
 14253                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14254  0053D6  0E13               	movlw	19
 14255  0053D8  6FDE               	movwf	222,b	;volatile
 14256                           
 14257                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14258  0053DA  0E01               	movlw	1
 14259  0053DC  6F04               	movwf	4,b	;volatile
 14260                           
 14261                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14262  0053DE  0E26               	movlw	38
 14263  0053E0  6F05               	movwf	5,b	;volatile
 14264                           
 14265                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14266  0053E2  0E28               	movlw	40
 14267  0053E4  6F06               	movwf	6,b	;volatile
 14268                           
 14269                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14270  0053E6  0E1F               	movlw	31
 14271  0053E8  6F15               	movwf	21,b	;volatile
 14272                           
 14273                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14274  0053EA  0E13               	movlw	19
 14275  0053EC  6F16               	movwf	22,b	;volatile
 14276                           
 14277                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14278  0053EE  0E14               	movlw	20
 14279  0053F0  6FDF               	movwf	223,b	;volatile
 14280                           
 14281                           ; BSR set to: 58
 14282                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14283  0053F2  0012               	return		;funcret
 14284  0053F4                     __end_of_PIN_MANAGER_Initialize:
 14285                           	opt callstack 0
 14286                           
 14287 ;; *************** function _OSCILLATOR_Initialize *****************
 14288 ;; Defined at:
 14289 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;		None
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1  [STACK] void 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2
 14298 ;; Tracked objects:
 14299 ;;		On entry : 3F/3A
 14300 ;;		On exit  : 3F/39
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;Total ram usage:        0 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:    3
 14310 ;; This function calls:
 14311 ;;		Nothing
 14312 ;; This function is called by:
 14313 ;;		_SYSTEM_Initialize
 14314 ;; This function uses a reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text68
 14318  0063CE                     __ptext68:
 14319                           	opt callstack 0
 14320  0063CE                     _OSCILLATOR_Initialize:
 14321                           	opt callstack 26
 14322                           
 14323                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14324                           
 14325                           ; BSR set to: 58
 14326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14327                           ;incstack = 0
 14328  0063CE  0E20               	movlw	32
 14329  0063D0  0139               	movlb	57	; () banked
 14330  0063D2  6FD9               	movwf	217,b	;volatile
 14331                           
 14332                           ; BSR set to: 57
 14333                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14334  0063D4  6BDB               	clrf	219,b	;volatile
 14335                           
 14336                           ; BSR set to: 57
 14337                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14338  0063D6  6BDD               	clrf	221,b	;volatile
 14339                           
 14340                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14341  0063D8  0E02               	movlw	2
 14342  0063DA  6FDF               	movwf	223,b	;volatile
 14343                           
 14344                           ; BSR set to: 57
 14345                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14346  0063DC  6BDE               	clrf	222,b	;volatile
 14347  0063DE                     l194:
 14348                           
 14349                           ; BSR set to: 57
 14350                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14351  0063DE  B1DC               	btfsc	220,0,b	;volatile
 14352  0063E0  0012               	return	
 14353  0063E2  D7FD               	goto	l194
 14354  0063E4                     __end_of_OSCILLATOR_Initialize:
 14355                           	opt callstack 0
 14356                           
 14357 ;; *************** function _NCO1_Initialize *****************
 14358 ;; Defined at:
 14359 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;		None
 14362 ;; Auto vars:     Size  Location     Type
 14363 ;;		None
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  1  [STACK] void 
 14366 ;; Registers used:
 14367 ;;		wreg, status,2
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/39
 14370 ;;		On exit  : 3F/3F
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14377 ;;Total ram usage:        0 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    3
 14380 ;; This function calls:
 14381 ;;		Nothing
 14382 ;; This function is called by:
 14383 ;;		_SYSTEM_Initialize
 14384 ;; This function uses a reentrant model
 14385 ;;
 14386                           
 14387                           	psect	text69
 14388  006330                     __ptext69:
 14389                           	opt callstack 0
 14390  006330                     _NCO1_Initialize:
 14391                           	opt callstack 26
 14392                           
 14393                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14394                           
 14395                           ; BSR set to: 57
 14396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14397                           ;incstack = 0
 14398  006330  013F               	movlb	63	; () banked
 14399  006332  6B3E               	clrf	62,b	;volatile
 14400                           
 14401                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14402  006334  6B3F               	clrf	63,b	;volatile
 14403                           
 14404                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14405  006336  6B3A               	clrf	58,b	;volatile
 14406                           
 14407                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14408  006338  6B39               	clrf	57,b	;volatile
 14409                           
 14410                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14411  00633A  6B38               	clrf	56,b	;volatile
 14412                           
 14413                           ; BSR set to: 63
 14414                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14415  00633C  0E06               	movlw	6
 14416  00633E  6F3D               	movwf	61,b	;volatile
 14417                           
 14418                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14419  006340  0EC7               	movlw	199
 14420  006342  6F3C               	movwf	60,b	;volatile
 14421                           
 14422                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14423  006344  0EAE               	movlw	174
 14424  006346  6F3B               	movwf	59,b	;volatile
 14425                           
 14426                           ; BSR set to: 63
 14427                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14428  006348  8F3E               	bsf	62,7,b	;volatile
 14429                           
 14430                           ; BSR set to: 63
 14431                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14432  00634A  0012               	return		;funcret
 14433  00634C                     __end_of_NCO1_Initialize:
 14434                           	opt callstack 0
 14435                           
 14436 ;; *************** function _INTERRUPT_Initialize *****************
 14437 ;; Defined at:
 14438 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;  state           1  [STACK] _Bool 
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1  [STACK] void 
 14445 ;; Registers used:
 14446 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 3F/39
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    3
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_SYSTEM_Initialize
 14463 ;; This function uses a reentrant model
 14464 ;;
 14465                           
 14466                           	psect	text70
 14467  005744                     __ptext70:
 14468                           	opt callstack 0
 14469  005744                     _INTERRUPT_Initialize:
 14470                           	opt callstack 0
 14471                           
 14472                           ; BSR set to: 63
 14473                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14474  005744  52E6               	movf	postinc1,f,c
 14475                           
 14476                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14477                           
 14478                           ;incstack = 0
 14479  005746  8AD2               	bsf	16338,5,c	;volatile
 14480                           
 14481                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14482  005748  AED2               	btfss	16338,7,c	;volatile
 14483  00574A  D003               	goto	u3340
 14484  00574C  6A44               	clrf	btemp+11,c
 14485  00574E  2A44               	incf	btemp+11,f,c
 14486  005750  D001               	goto	u3358
 14487  005752                     u3340:
 14488  005752  6A44               	clrf	btemp+11,c
 14489  005754                     u3358:
 14490                           
 14491                           ;stkvar	_state @ sp[(-1)+0]
 14492  005754  0EFF               	movlw	-1
 14493  005756  0060  F113  FFE3   	movff	btemp+11,plusw1
 14494                           
 14495                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14496  00575C  9ED2               	bcf	16338,7,c	;volatile
 14497                           
 14498                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14499  00575E  0E55               	movlw	85
 14500  005760  6ED4               	movwf	16340,c	;volatile
 14501                           
 14502                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14503  005762  0EAA               	movlw	170
 14504  005764  6ED4               	movwf	16340,c	;volatile
 14505                           
 14506                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14507  005766  90D4               	bcf	16340,0,c	;volatile
 14508                           
 14509                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14510  005768  0138               	movlb	56	; () banked
 14511  00576A  6B9F               	clrf	159,b	;volatile
 14512                           
 14513                           ; BSR set to: 56
 14514                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14515  00576C  6B9E               	clrf	158,b	;volatile
 14516                           
 14517                           ; BSR set to: 56
 14518                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14519  00576E  0E08               	movlw	8
 14520  005770  6F9D               	movwf	157,b	;volatile
 14521                           
 14522                           ; BSR set to: 56
 14523                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14524  005772  0E55               	movlw	85
 14525  005774  6ED4               	movwf	16340,c	;volatile
 14526                           
 14527                           ; BSR set to: 56
 14528                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14529  005776  0EAA               	movlw	170
 14530  005778  6ED4               	movwf	16340,c	;volatile
 14531                           
 14532                           ; BSR set to: 56
 14533                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14534  00577A  80D4               	bsf	16340,0,c	;volatile
 14535                           
 14536                           ; BSR set to: 56
 14537                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14538                           ;stkvar	_state @ sp[(-1)+0]
 14539  00577C  0EFF               	movlw	-1
 14540  00577E  B0E3               	btfsc	plusw1,0,c
 14541  005780  D002               	bra	u3365
 14542  005782  9ED2               	bcf	16338,7,c	;volatile
 14543  005784  D001               	bra	u3366
 14544  005786                     u3365:
 14545  005786  8ED2               	bsf	16338,7,c	;volatile
 14546  005788                     u3366:
 14547                           
 14548                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14549  005788  0139               	movlb	57	; () banked
 14550  00578A  8782               	bsf	130,3,b	;volatile
 14551                           
 14552                           ; BSR set to: 57
 14553                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14554  00578C  8382               	bsf	130,1,b	;volatile
 14555                           
 14556                           ; BSR set to: 57
 14557                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14558  00578E  8182               	bsf	130,0,b	;volatile
 14559                           
 14560                           ; BSR set to: 57
 14561                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14562  005790  8582               	bsf	130,2,b	;volatile
 14563                           
 14564                           ; BSR set to: 57
 14565                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14566  005792  8786               	bsf	134,3,b	;volatile
 14567                           
 14568                           ; BSR set to: 57
 14569                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14570  005794  8586               	bsf	134,2,b	;volatile
 14571                           
 14572                           ; BSR set to: 57
 14573                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14574  005796  8983               	bsf	131,4,b	;volatile
 14575                           
 14576                           ; BSR set to: 57
 14577                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14578  005798  8783               	bsf	131,3,b	;volatile
 14579                           
 14580                           ; BSR set to: 57
 14581                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14582  00579A  8181               	bsf	129,0,b	;volatile
 14583                           
 14584                           ; BSR set to: 57
 14585                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14586  00579C  8185               	bsf	133,0,b	;volatile
 14587                           
 14588                           ; BSR set to: 57
 14589                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14590  00579E  8B87               	bsf	135,5,b	;volatile
 14591                           
 14592                           ; BSR set to: 57
 14593                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14594  0057A0  8189               	bsf	137,0,b	;volatile
 14595                           
 14596                           ; BSR set to: 57
 14597                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14598  0057A2  8D88               	bsf	136,6,b	;volatile
 14599                           
 14600                           ; BSR set to: 57
 14601                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14602  0057A4  8581               	bsf	129,2,b	;volatile
 14603                           
 14604                           ; BSR set to: 57
 14605                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14606  0057A6  52E5               	movf	postdec1,f,c
 14607  0057A8  0012               	return		;funcret
 14608  0057AA                     __end_of_INTERRUPT_Initialize:
 14609                           	opt callstack 0
 14610                           
 14611 ;; *************** function _EXT_INT_Initialize *****************
 14612 ;; Defined at:
 14613 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14614 ;; Parameters:    Size  Location     Type
 14615 ;;		None
 14616 ;; Auto vars:     Size  Location     Type
 14617 ;;		None
 14618 ;; Return value:  Size  Location     Type
 14619 ;;                  1  [STACK] void 
 14620 ;; Registers used:
 14621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14622 ;; Tracked objects:
 14623 ;;		On entry : 3F/3F
 14624 ;;		On exit  : 3F/39
 14625 ;;		Unchanged: 0/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14631 ;;Total ram usage:        0 bytes
 14632 ;; Hardware stack levels used:    1
 14633 ;; Hardware stack levels required when called:    4
 14634 ;; This function calls:
 14635 ;;		_INT0_SetInterruptHandler
 14636 ;;		_INT1_SetInterruptHandler
 14637 ;;		_INT2_SetInterruptHandler
 14638 ;; This function is called by:
 14639 ;;		_SYSTEM_Initialize
 14640 ;; This function uses a reentrant model
 14641 ;;
 14642                           
 14643                           	psect	text71
 14644  005A26                     __ptext71:
 14645                           	opt callstack 0
 14646  005A26                     _EXT_INT_Initialize:
 14647                           	opt callstack 25
 14648                           
 14649                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14650                           
 14651                           ; BSR set to: 57
 14652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14653                           ;incstack = 0
 14654  005A26  0139               	movlb	57	; () banked
 14655  005A28  91A1               	bcf	161,0,b	;volatile
 14656                           
 14657                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14658  005A2A  90D2               	bcf	16338,0,c	;volatile
 14659                           
 14660                           ; BSR set to: 57
 14661                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14662  005A2C  0EA6               	movlw	low _INT0_DefaultInterruptHandler
 14663  005A2E  6EE6               	movwf	postinc1,c
 14664  005A30  0E64               	movlw	high _INT0_DefaultInterruptHandler
 14665  005A32  6EE6               	movwf	postinc1,c
 14666  005A34  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14667  005A36  6EE6               	movwf	postinc1,c
 14668  005A38  EC5B  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14669                           
 14670                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14671  005A3C  0139               	movlb	57	; () banked
 14672  005A3E  8191               	bsf	145,0,b	;volatile
 14673                           
 14674                           ; BSR set to: 57
 14675                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14676  005A40  91A5               	bcf	165,0,b	;volatile
 14677                           
 14678                           ; BSR set to: 57
 14679                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14680  005A42  92D2               	bcf	16338,1,c	;volatile
 14681                           
 14682                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14683  005A44  0EA8               	movlw	low _INT1_DefaultInterruptHandler
 14684  005A46  6EE6               	movwf	postinc1,c
 14685  005A48  0E64               	movlw	high _INT1_DefaultInterruptHandler
 14686  005A4A  6EE6               	movwf	postinc1,c
 14687  005A4C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14688  005A4E  6EE6               	movwf	postinc1,c
 14689  005A50  EC47  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14690                           
 14691                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14692  005A54  0139               	movlb	57	; () banked
 14693  005A56  8195               	bsf	149,0,b	;volatile
 14694                           
 14695                           ; BSR set to: 57
 14696                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14697  005A58  9BA7               	bcf	167,5,b	;volatile
 14698                           
 14699                           ; BSR set to: 57
 14700                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14701  005A5A  94D2               	bcf	16338,2,c	;volatile
 14702                           
 14703                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14704  005A5C  0EAA               	movlw	low _INT2_DefaultInterruptHandler
 14705  005A5E  6EE6               	movwf	postinc1,c
 14706  005A60  0E64               	movlw	high _INT2_DefaultInterruptHandler
 14707  005A62  6EE6               	movwf	postinc1,c
 14708  005A64  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14709  005A66  6EE6               	movwf	postinc1,c
 14710  005A68  EC33  F030         	call	_INT2_SetInterruptHandler	;wreg free
 14711                           
 14712                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14713  005A6C  0139               	movlb	57	; () banked
 14714  005A6E  8B97               	bsf	151,5,b	;volatile
 14715                           
 14716                           ; BSR set to: 57
 14717                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14718  005A70  0012               	return		;funcret
 14719  005A72                     __end_of_EXT_INT_Initialize:
 14720                           	opt callstack 0
 14721                           
 14722 ;; *************** function _INT2_SetInterruptHandler *****************
 14723 ;; Defined at:
 14724 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14725 ;; Parameters:    Size  Location     Type
 14726 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14727 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14728 ;; Auto vars:     Size  Location     Type
 14729 ;;		None
 14730 ;; Return value:  Size  Location     Type
 14731 ;;                  1  [STACK] void 
 14732 ;; Registers used:
 14733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14734 ;; Tracked objects:
 14735 ;;		On entry : 3F/39
 14736 ;;		On exit  : 0/0
 14737 ;;		Unchanged: 0/0
 14738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14743 ;;Total ram usage:        0 bytes
 14744 ;; Hardware stack levels used:    1
 14745 ;; Hardware stack levels required when called:    3
 14746 ;; This function calls:
 14747 ;;		Nothing
 14748 ;; This function is called by:
 14749 ;;		_EXT_INT_Initialize
 14750 ;; This function uses a reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text72
 14754  006066                     __ptext72:
 14755                           	opt callstack 0
 14756  006066                     _INT2_SetInterruptHandler:
 14757                           	opt callstack 25
 14758                           
 14759                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14760                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14761                           
 14762                           ; BSR set to: 57
 14763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14764                           ;incstack = 0
 14765  006066  50E1               	movf	fsr1l,w,c
 14766  006068  0FFD               	addlw	-3
 14767  00606A  6ED9               	movwf	fsr2l,c
 14768  00606C  50E2               	movf	fsr1h,w,c
 14769  00606E  6EDA               	movwf	fsr2h,c
 14770  006070  0EFF               	movlw	255
 14771  006072  22DA               	addwfc	fsr2h,f,c
 14772  006074  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 14773  00607A  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 14774  006080  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 14775                           
 14776                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14777  006086  52E5               	movf	postdec1,f,c
 14778  006088  52E5               	movf	postdec1,f,c
 14779  00608A  52E5               	movf	postdec1,f,c
 14780  00608C  0012               	return		;funcret
 14781  00608E                     __end_of_INT2_SetInterruptHandler:
 14782                           	opt callstack 0
 14783                           
 14784 ;; *************** function _INT1_SetInterruptHandler *****************
 14785 ;; Defined at:
 14786 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14789 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;		None
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  1  [STACK] void 
 14794 ;; Registers used:
 14795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14796 ;; Tracked objects:
 14797 ;;		On entry : 3F/39
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;Total ram usage:        0 bytes
 14806 ;; Hardware stack levels used:    1
 14807 ;; Hardware stack levels required when called:    3
 14808 ;; This function calls:
 14809 ;;		Nothing
 14810 ;; This function is called by:
 14811 ;;		_EXT_INT_Initialize
 14812 ;; This function uses a reentrant model
 14813 ;;
 14814                           
 14815                           	psect	text73
 14816  00608E                     __ptext73:
 14817                           	opt callstack 0
 14818  00608E                     _INT1_SetInterruptHandler:
 14819                           	opt callstack 25
 14820                           
 14821                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14822                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14823                           
 14824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14825                           ;incstack = 0
 14826  00608E  50E1               	movf	fsr1l,w,c
 14827  006090  0FFD               	addlw	-3
 14828  006092  6ED9               	movwf	fsr2l,c
 14829  006094  50E2               	movf	fsr1h,w,c
 14830  006096  6EDA               	movwf	fsr2h,c
 14831  006098  0EFF               	movlw	255
 14832  00609A  22DA               	addwfc	fsr2h,f,c
 14833  00609C  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 14834  0060A2  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 14835  0060A8  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 14836                           
 14837                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14838  0060AE  52E5               	movf	postdec1,f,c
 14839  0060B0  52E5               	movf	postdec1,f,c
 14840  0060B2  52E5               	movf	postdec1,f,c
 14841  0060B4  0012               	return		;funcret
 14842  0060B6                     __end_of_INT1_SetInterruptHandler:
 14843                           	opt callstack 0
 14844                           
 14845 ;; *************** function _INT0_SetInterruptHandler *****************
 14846 ;; Defined at:
 14847 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14850 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;		None
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1  [STACK] void 
 14855 ;; Registers used:
 14856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14857 ;; Tracked objects:
 14858 ;;		On entry : 3F/39
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14866 ;;Total ram usage:        0 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; Hardware stack levels required when called:    3
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_EXT_INT_Initialize
 14873 ;; This function uses a reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text74
 14877  0060B6                     __ptext74:
 14878                           	opt callstack 0
 14879  0060B6                     _INT0_SetInterruptHandler:
 14880                           	opt callstack 25
 14881                           
 14882                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14883                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14884                           
 14885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14886                           ;incstack = 0
 14887  0060B6  50E1               	movf	fsr1l,w,c
 14888  0060B8  0FFD               	addlw	-3
 14889  0060BA  6ED9               	movwf	fsr2l,c
 14890  0060BC  50E2               	movf	fsr1h,w,c
 14891  0060BE  6EDA               	movwf	fsr2h,c
 14892  0060C0  0EFF               	movlw	255
 14893  0060C2  22DA               	addwfc	fsr2h,f,c
 14894  0060C4  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 14895  0060CA  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 14896  0060D0  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 14897                           
 14898                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14899  0060D6  52E5               	movf	postdec1,f,c
 14900  0060D8  52E5               	movf	postdec1,f,c
 14901  0060DA  52E5               	movf	postdec1,f,c
 14902  0060DC  0012               	return		;funcret
 14903  0060DE                     __end_of_INT0_SetInterruptHandler:
 14904                           	opt callstack 0
 14905                           
 14906 ;; *************** function _DSM_Initialize *****************
 14907 ;; Defined at:
 14908 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;		None
 14911 ;; Auto vars:     Size  Location     Type
 14912 ;;		None
 14913 ;; Return value:  Size  Location     Type
 14914 ;;                  1  [STACK] void 
 14915 ;; Registers used:
 14916 ;;		wreg, status,2
 14917 ;; Tracked objects:
 14918 ;;		On entry : 0/3C
 14919 ;;		On exit  : 3F/3C
 14920 ;;		Unchanged: 0/0
 14921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14926 ;;Total ram usage:        0 bytes
 14927 ;; Hardware stack levels used:    1
 14928 ;; Hardware stack levels required when called:    3
 14929 ;; This function calls:
 14930 ;;		Nothing
 14931 ;; This function is called by:
 14932 ;;		_SYSTEM_Initialize
 14933 ;; This function uses a reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text75
 14937  00634C                     __ptext75:
 14938                           	opt callstack 0
 14939  00634C                     _DSM_Initialize:
 14940                           	opt callstack 26
 14941                           
 14942                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14943                           
 14944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14945                           ;incstack = 0
 14946  00634C  013C               	movlb	60	; () banked
 14947  00634E  99FA               	bcf	250,4,b	;volatile
 14948                           
 14949                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14950  006350  81FB               	bsf	251,0,b	;volatile
 14951                           
 14952                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14953  006352  93FB               	bcf	251,1,b	;volatile
 14954                           
 14955                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14956  006354  89FB               	bsf	251,4,b	;volatile
 14957                           
 14958                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14959  006356  9BFB               	bcf	251,5,b	;volatile
 14960                           
 14961                           ; BSR set to: 60
 14962                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14963  006358  0E13               	movlw	19
 14964  00635A  6FFC               	movwf	252,b	;volatile
 14965                           
 14966                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14967  00635C  0E0E               	movlw	14
 14968  00635E  6FFE               	movwf	254,b	;volatile
 14969                           
 14970                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14971  006360  0E04               	movlw	4
 14972  006362  6FFD               	movwf	253,b	;volatile
 14973                           
 14974                           ; BSR set to: 60
 14975                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14976  006364  8FFA               	bsf	250,7,b	;volatile
 14977                           
 14978                           ; BSR set to: 60
 14979                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14980  006366  0012               	return		;funcret
 14981  006368                     __end_of_DSM_Initialize:
 14982                           	opt callstack 0
 14983                           
 14984 ;; *************** function _DMA1_Initialize *****************
 14985 ;; Defined at:
 14986 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;		None
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;		None
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1  [STACK] void 
 14993 ;; Registers used:
 14994 ;;		wreg, status,2
 14995 ;; Tracked objects:
 14996 ;;		On entry : 3F/3D
 14997 ;;		On exit  : 3F/3B
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15004 ;;Total ram usage:        0 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; Hardware stack levels required when called:    3
 15007 ;; This function calls:
 15008 ;;		Nothing
 15009 ;; This function is called by:
 15010 ;;		_SYSTEM_Initialize
 15011 ;; This function uses a reentrant model
 15012 ;;
 15013                           
 15014                           	psect	text76
 15015  0056DA                     __ptext76:
 15016                           	opt callstack 0
 15017  0056DA                     _DMA1_Initialize:
 15018                           	opt callstack 26
 15019                           
 15020                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 15021                           
 15022                           ; BSR set to: 60
 15023                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15024                           ;incstack = 0
 15025  0056DA  0E00               	movlw	0
 15026  0056DC  013B               	movlb	59	; () banked
 15027  0056DE  6FF9               	movwf	249,b	;volatile
 15028  0056E0  0E10               	movlw	16
 15029  0056E2  6FFA               	movwf	250,b	;volatile
 15030  0056E4  0E00               	movlw	0
 15031  0056E6  6FFB               	movwf	251,b	;volatile
 15032                           
 15033                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 15034  0056E8  0E3D               	movlw	61
 15035  0056EA  6FF1               	movwf	241,b	;volatile
 15036  0056EC  0E11               	movlw	17
 15037  0056EE  6FF0               	movwf	240,b	;volatile
 15038                           
 15039                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15040  0056F0  0E03               	movlw	3
 15041  0056F2  6FFD               	movwf	253,b	;volatile
 15042                           
 15043                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15044  0056F4  0E00               	movlw	0
 15045  0056F6  6FF8               	movwf	248,b	;volatile
 15046  0056F8  0E01               	movlw	1
 15047  0056FA  6FF7               	movwf	247,b	;volatile
 15048                           
 15049                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15050  0056FC  0E00               	movlw	0
 15051  0056FE  6FEF               	movwf	239,b	;volatile
 15052  005700  0E01               	movlw	1
 15053  005702  6FEE               	movwf	238,b	;volatile
 15054                           
 15055                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15056  005704  0E15               	movlw	21
 15057  005706  6FFF               	movwf	255,b	;volatile
 15058                           
 15059                           ; BSR set to: 59
 15060                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15061  005708  6BFE               	clrf	254,b	;volatile
 15062                           
 15063                           ; BSR set to: 59
 15064                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15065  00570A  0139               	movlb	57	; () banked
 15066  00570C  93A2               	bcf	162,1,b	;volatile
 15067                           
 15068                           ; BSR set to: 57
 15069                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15070  00570E  91A2               	bcf	162,0,b	;volatile
 15071                           
 15072                           ; BSR set to: 57
 15073                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15074  005710  97A2               	bcf	162,3,b	;volatile
 15075                           
 15076                           ; BSR set to: 57
 15077                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15078  005712  95A2               	bcf	162,2,b	;volatile
 15079                           
 15080                           ; BSR set to: 57
 15081                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15082  005714  8392               	bsf	146,1,b	;volatile
 15083                           
 15084                           ; BSR set to: 57
 15085                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15086  005716  8192               	bsf	146,0,b	;volatile
 15087                           
 15088                           ; BSR set to: 57
 15089                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15090  005718  8792               	bsf	146,3,b	;volatile
 15091                           
 15092                           ; BSR set to: 57
 15093                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15094  00571A  8592               	bsf	146,2,b	;volatile
 15095                           
 15096                           ; BSR set to: 57
 15097                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15098  00571C  6BF1               	clrf	241,b	;volatile
 15099                           
 15100                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15101  00571E  0E01               	movlw	1
 15102  005720  6FF2               	movwf	242,b	;volatile
 15103                           
 15104                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15105  005722  0E04               	movlw	4
 15106  005724  6FF3               	movwf	243,b	;volatile
 15107                           
 15108                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15109  005726  0E02               	movlw	2
 15110  005728  6FF4               	movwf	244,b	;volatile
 15111                           
 15112                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15113  00572A  0E03               	movlw	3
 15114  00572C  6FF7               	movwf	247,b	;volatile
 15115  00572E  9ED2               	bcf	16338,7,c	;# 
 15116  005730  0139               	banksel	14831	;# 
 15117  005732  0E55               	movlw	85	;# 
 15118  005734  6FEF               	movwf	14831,b	;# 
 15119  005736  0EAA               	movlw	170	;# 
 15120  005738  6FEF               	movwf	14831,b	;# 
 15121  00573A  81EF               	bsf	14831,0,b	;# 
 15122  00573C  8ED2               	bsf	16338,7,c	;# 
 15123                           
 15124                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15125  00573E  013B               	movlb	59	; () banked
 15126  005740  6BFC               	clrf	252,b	;volatile
 15127                           
 15128                           ; BSR set to: 59
 15129                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15130  005742  0012               	return		;funcret
 15131  005744                     __end_of_DMA1_Initialize:
 15132                           	opt callstack 0
 15133                           
 15134 ;; *************** function _CLKREF_Initialize *****************
 15135 ;; Defined at:
 15136 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;		None
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;		None
 15141 ;; Return value:  Size  Location     Type
 15142 ;;                  1  [STACK] void 
 15143 ;; Registers used:
 15144 ;;		wreg, status,2
 15145 ;; Tracked objects:
 15146 ;;		On entry : 3F/3B
 15147 ;;		On exit  : 3F/3C
 15148 ;;		Unchanged: 0/0
 15149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15154 ;;Total ram usage:        0 bytes
 15155 ;; Hardware stack levels used:    1
 15156 ;; Hardware stack levels required when called:    3
 15157 ;; This function calls:
 15158 ;;		Nothing
 15159 ;; This function is called by:
 15160 ;;		_SYSTEM_Initialize
 15161 ;; This function uses a reentrant model
 15162 ;;
 15163                           
 15164                           	psect	text77
 15165  006446                     __ptext77:
 15166                           	opt callstack 0
 15167  006446                     _CLKREF_Initialize:
 15168                           	opt callstack 26
 15169                           
 15170                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15171                           
 15172                           ; BSR set to: 59
 15173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15174                           ;incstack = 0
 15175  006446  013C               	movlb	60	; () banked
 15176  006448  6BE6               	clrf	230,b	;volatile
 15177                           
 15178                           ; BSR set to: 60
 15179                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15180  00644A  0E94               	movlw	148
 15181  00644C  6FE5               	movwf	229,b	;volatile
 15182                           
 15183                           ; BSR set to: 60
 15184                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15185  00644E  0012               	return		;funcret
 15186  006450                     __end_of_CLKREF_Initialize:
 15187                           	opt callstack 0
 15188                           
 15189 ;; *************** function _CLC1_Initialize *****************
 15190 ;; Defined at:
 15191 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;		None
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;		None
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  1  [STACK] void 
 15198 ;; Registers used:
 15199 ;;		wreg, status,2
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/39
 15202 ;;		On exit  : 3F/3C
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15209 ;;Total ram usage:        0 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:    3
 15212 ;; This function calls:
 15213 ;;		Nothing
 15214 ;; This function is called by:
 15215 ;;		_SYSTEM_Initialize
 15216 ;; This function uses a reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text78
 15220  006210                     __ptext78:
 15221                           	opt callstack 0
 15222  006210                     _CLC1_Initialize:
 15223                           	opt callstack 26
 15224                           
 15225                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15226                           
 15227                           ; BSR set to: 60
 15228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15229                           ;incstack = 0
 15230  006210  013C               	movlb	60	; () banked
 15231  006212  6B75               	clrf	117,b	;volatile
 15232                           
 15233                           ; BSR set to: 60
 15234                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15235  006214  0E04               	movlw	4
 15236  006216  6F76               	movwf	118,b	;volatile
 15237                           
 15238                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15239  006218  0E04               	movlw	4
 15240  00621A  6F77               	movwf	119,b	;volatile
 15241                           
 15242                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15243  00621C  0E04               	movlw	4
 15244  00621E  6F78               	movwf	120,b	;volatile
 15245                           
 15246                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15247  006220  0E04               	movlw	4
 15248  006222  6F79               	movwf	121,b	;volatile
 15249                           
 15250                           ; BSR set to: 60
 15251                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15252  006224  6B7A               	clrf	122,b	;volatile
 15253                           
 15254                           ; BSR set to: 60
 15255                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15256  006226  6B7B               	clrf	123,b	;volatile
 15257                           
 15258                           ; BSR set to: 60
 15259                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15260  006228  6B7C               	clrf	124,b	;volatile
 15261                           
 15262                           ; BSR set to: 60
 15263                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15264  00622A  6B7D               	clrf	125,b	;volatile
 15265                           
 15266                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15267  00622C  0E81               	movlw	129
 15268  00622E  6F74               	movwf	116,b	;volatile
 15269                           
 15270                           ; BSR set to: 60
 15271                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15272  006230  0012               	return		;funcret
 15273  006232                     __end_of_CLC1_Initialize:
 15274                           	opt callstack 0
 15275                           
 15276 ;; *************** function _ADCC_Initialize *****************
 15277 ;; Defined at:
 15278 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;		None
 15281 ;; Auto vars:     Size  Location     Type
 15282 ;;		None
 15283 ;; Return value:  Size  Location     Type
 15284 ;;                  1  [STACK] void 
 15285 ;; Registers used:
 15286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15287 ;; Tracked objects:
 15288 ;;		On entry : 3F/39
 15289 ;;		On exit  : 0/0
 15290 ;;		Unchanged: 0/0
 15291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15296 ;;Total ram usage:        0 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; Hardware stack levels required when called:    4
 15299 ;; This function calls:
 15300 ;;		_ADCC_SetADIInterruptHandler
 15301 ;; This function is called by:
 15302 ;;		_SYSTEM_Initialize
 15303 ;; This function uses a reentrant model
 15304 ;;
 15305                           
 15306                           	psect	text79
 15307  005A72                     __ptext79:
 15308                           	opt callstack 0
 15309  005A72                     _ADCC_Initialize:
 15310                           	opt callstack 25
 15311                           
 15312                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15313                           
 15314                           ; BSR set to: 60
 15315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15316                           ;incstack = 0
 15317  005A72  013E               	movlb	62	; () banked
 15318  005A74  6BDE               	clrf	222,b	;volatile
 15319                           
 15320                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15321  005A76  6BDF               	clrf	223,b	;volatile
 15322                           
 15323                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15324  005A78  6BE0               	clrf	224,b	;volatile
 15325                           
 15326                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15327  005A7A  6BE1               	clrf	225,b	;volatile
 15328                           
 15329                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15330  005A7C  6BE4               	clrf	228,b	;volatile
 15331                           
 15332                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15333  005A7E  6BE5               	clrf	229,b	;volatile
 15334                           
 15335                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15336  005A80  6BEA               	clrf	234,b	;volatile
 15337                           
 15338                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15339  005A82  6BEC               	clrf	236,b	;volatile
 15340                           
 15341                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15342  005A84  6BF1               	clrf	241,b	;volatile
 15343                           
 15344                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15345  005A86  6BF3               	clrf	243,b	;volatile
 15346                           
 15347                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15348  005A88  6BF4               	clrf	244,b	;volatile
 15349                           
 15350                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15351  005A8A  6BF5               	clrf	245,b	;volatile
 15352                           
 15353                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15354  005A8C  6BF6               	clrf	246,b	;volatile
 15355                           
 15356                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15357  005A8E  6BF7               	clrf	247,b	;volatile
 15358                           
 15359                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15360  005A90  6BF9               	clrf	249,b	;volatile
 15361                           
 15362                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15363  005A92  6BFA               	clrf	250,b	;volatile
 15364                           
 15365                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15366  005A94  6BFB               	clrf	251,b	;volatile
 15367                           
 15368                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15369  005A96  6BFC               	clrf	252,b	;volatile
 15370                           
 15371                           ; BSR set to: 62
 15372                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15373  005A98  0E02               	movlw	2
 15374  005A9A  6FFD               	movwf	253,b	;volatile
 15375                           
 15376                           ; BSR set to: 62
 15377                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15378  005A9C  6BFE               	clrf	254,b	;volatile
 15379                           
 15380                           ; BSR set to: 62
 15381                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15382  005A9E  6BFF               	clrf	255,b	;volatile
 15383                           
 15384                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15385  005AA0  0E94               	movlw	148
 15386  005AA2  6FF8               	movwf	248,b	;volatile
 15387                           
 15388                           ; BSR set to: 62
 15389                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15390  005AA4  0139               	movlb	57	; () banked
 15391  005AA6  95A1               	bcf	161,2,b	;volatile
 15392                           
 15393                           ; BSR set to: 57
 15394                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15395  005AA8  8591               	bsf	145,2,b	;volatile
 15396                           
 15397                           ; BSR set to: 57
 15398                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15399  005AAA  0EAC               	movlw	low _ADCC_DefaultInterruptHandler
 15400  005AAC  6EE6               	movwf	postinc1,c
 15401  005AAE  0E64               	movlw	high _ADCC_DefaultInterruptHandler
 15402  005AB0  6EE6               	movwf	postinc1,c
 15403  005AB2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15404  005AB4  6EE6               	movwf	postinc1,c
 15405  005AB6  EC6F  F030         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15406                           
 15407                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15408  005ABA  0012               	return		;funcret
 15409  005ABC                     __end_of_ADCC_Initialize:
 15410                           	opt callstack 0
 15411                           
 15412 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15413 ;; Defined at:
 15414 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15415 ;; Parameters:    Size  Location     Type
 15416 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15417 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15418 ;; Auto vars:     Size  Location     Type
 15419 ;;		None
 15420 ;; Return value:  Size  Location     Type
 15421 ;;                  1  [STACK] void 
 15422 ;; Registers used:
 15423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15424 ;; Tracked objects:
 15425 ;;		On entry : 3F/39
 15426 ;;		On exit  : 0/0
 15427 ;;		Unchanged: 0/0
 15428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15433 ;;Total ram usage:        0 bytes
 15434 ;; Hardware stack levels used:    1
 15435 ;; Hardware stack levels required when called:    3
 15436 ;; This function calls:
 15437 ;;		Nothing
 15438 ;; This function is called by:
 15439 ;;		_ADCC_Initialize
 15440 ;; This function uses a reentrant model
 15441 ;;
 15442                           
 15443                           	psect	text80
 15444  0060DE                     __ptext80:
 15445                           	opt callstack 0
 15446  0060DE                     _ADCC_SetADIInterruptHandler:
 15447                           	opt callstack 25
 15448                           
 15449                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15450                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15451                           
 15452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15453                           ;incstack = 0
 15454  0060DE  50E1               	movf	fsr1l,w,c
 15455  0060E0  0FFD               	addlw	-3
 15456  0060E2  6ED9               	movwf	fsr2l,c
 15457  0060E4  50E2               	movf	fsr1h,w,c
 15458  0060E6  6EDA               	movwf	fsr2h,c
 15459  0060E8  0EFF               	movlw	255
 15460  0060EA  22DA               	addwfc	fsr2h,f,c
 15461  0060EC  006F FF78  F0F4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15462  0060F2  006F FF78  F0F5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15463  0060F8  006F FF74  F0F6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15464                           
 15465                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15466  0060FE  52E5               	movf	postdec1,f,c
 15467  006100  52E5               	movf	postdec1,f,c
 15468  006102  52E5               	movf	postdec1,f,c
 15469  006104  0012               	return		;funcret
 15470  006106                     __end_of_ADCC_SetADIInterruptHandler:
 15471                           	opt callstack 0
 15472                           
 15473 ;; *************** function _INT0_ISR *****************
 15474 ;; Defined at:
 15475 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15476 ;; Parameters:    Size  Location     Type
 15477 ;;		None
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;		None
 15480 ;; Return value:  Size  Location     Type
 15481 ;;                  1    wreg      void 
 15482 ;; Registers used:
 15483 ;;		wreg, status,2, status,0, pclath, tosl
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15493 ;;Total ram usage:        0 bytes
 15494 ;; Hardware stack levels used:    1
 15495 ;; Hardware stack levels required when called:    2
 15496 ;; This function calls:
 15497 ;;		_INT0_CallBack
 15498 ;; This function is called by:
 15499 ;;		Interrupt level 2
 15500 ;; This function uses a non-reentrant model
 15501 ;;
 15502                           
 15503                           	psect	text81
 15504  006408                     __ptext81:
 15505                           	opt callstack 0
 15506  006408                     _INT0_ISR:
 15507                           	opt callstack 17
 15508                           
 15509                           ;incstack = 0
 15510  006408  EE13  F154         	lfsr	1,___inthi_sp
 15511                           
 15512                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15513  00640C  0139               	movlb	57	; () banked
 15514  00640E  91A1               	bcf	161,0,b	;volatile
 15515                           
 15516                           ; BSR set to: 57
 15517                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15518  006410  EC19  F031         	call	_INT0_CallBack	;wreg free
 15519  006414  0011               	retfie		f
 15520  006416                     __end_of_INT0_ISR:
 15521                           	opt callstack 0
 15522                           
 15523 ;; *************** function _INT0_CallBack *****************
 15524 ;; Defined at:
 15525 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;		None
 15528 ;; Auto vars:     Size  Location     Type
 15529 ;;		None
 15530 ;; Return value:  Size  Location     Type
 15531 ;;                  1  [STACK] void 
 15532 ;; Registers used:
 15533 ;;		wreg, status,2, status,0, pclath, tosl
 15534 ;; Tracked objects:
 15535 ;;		On entry : 3F/39
 15536 ;;		On exit  : 0/0
 15537 ;;		Unchanged: 0/0
 15538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15543 ;;Total ram usage:        0 bytes
 15544 ;; Hardware stack levels used:    1
 15545 ;; Hardware stack levels required when called:    1
 15546 ;; This function calls:
 15547 ;;		Absolute function
 15548 ;;		_INT0_DefaultInterruptHandler
 15549 ;; This function is called by:
 15550 ;;		_INT0_ISR
 15551 ;; This function uses a reentrant model
 15552 ;;
 15553                           
 15554                           	psect	text82
 15555  006232                     __ptext82:
 15556                           	opt callstack 0
 15557  006232                     _INT0_CallBack:
 15558                           	opt callstack 17
 15559                           
 15560                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15561                           
 15562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15563                           ;incstack = 0
 15564  006232  501A               	movf	_INT0_InterruptHandler,w,c
 15565  006234  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 15566  006236  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 15567  006238  B4D8               	btfsc	status,2,c
 15568  00623A  0012               	return	
 15569                           
 15570                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15571  00623C  D801               	call	u125_48
 15572  00623E  0012               	return	
 15573  006240                     u125_48:
 15574  006240  0005               	push	
 15575  006242  6EFA               	movwf	pclath,c
 15576  006244  501A               	movf	_INT0_InterruptHandler,w,c
 15577  006246  6EFD               	movwf	tosl,c
 15578  006248  501B               	movf	_INT0_InterruptHandler+1,w,c
 15579  00624A  6EFE               	movwf	tosh,c
 15580  00624C  501C               	movf	_INT0_InterruptHandler+2,w,c
 15581  00624E  6EFF               	movwf	tosu,c
 15582  006250  50FA               	movf	pclath,w,c
 15583  006252  0012               	return		;indir
 15584  006254                     __end_of_INT0_CallBack:
 15585                           	opt callstack 0
 15586                           
 15587 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15588 ;; Defined at:
 15589 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;		None
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;		None
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  1  [STACK] void 
 15596 ;; Registers used:
 15597 ;;		None
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/39
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15607 ;;Total ram usage:        0 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; This function calls:
 15610 ;;		Nothing
 15611 ;; This function is called by:
 15612 ;;		_EXT_INT_Initialize
 15613 ;;		_INT0_CallBack
 15614 ;; This function uses a reentrant model
 15615 ;;
 15616                           
 15617                           	psect	text83
 15618  0064A6                     __ptext83:
 15619                           	opt callstack 0
 15620  0064A6                     _INT0_DefaultInterruptHandler:
 15621                           	opt callstack 17
 15622                           
 15623                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15624                           
 15625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15626                           ;incstack = 0
 15627  0064A6  0012               	return		;funcret
 15628  0064A8                     __end_of_INT0_DefaultInterruptHandler:
 15629                           	opt callstack 0
 15630                           
 15631 ;; *************** function _INT1_ISR *****************
 15632 ;; Defined at:
 15633 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15634 ;; Parameters:    Size  Location     Type
 15635 ;;		None
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;		None
 15638 ;; Return value:  Size  Location     Type
 15639 ;;                  1    wreg      void 
 15640 ;; Registers used:
 15641 ;;		wreg, status,2, status,0, pclath, tosl
 15642 ;; Tracked objects:
 15643 ;;		On entry : 0/0
 15644 ;;		On exit  : 0/0
 15645 ;;		Unchanged: 0/0
 15646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15651 ;;Total ram usage:        0 bytes
 15652 ;; Hardware stack levels used:    1
 15653 ;; Hardware stack levels required when called:    2
 15654 ;; This function calls:
 15655 ;;		_INT1_CallBack
 15656 ;; This function is called by:
 15657 ;;		Interrupt level 2
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661                           	psect	text84
 15662  006418                     __ptext84:
 15663                           	opt callstack 0
 15664  006418                     _INT1_ISR:
 15665                           	opt callstack 17
 15666                           
 15667                           ;incstack = 0
 15668  006418  EE13  F154         	lfsr	1,___inthi_sp
 15669                           
 15670                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15671  00641C  0139               	movlb	57	; () banked
 15672  00641E  91A5               	bcf	165,0,b	;volatile
 15673                           
 15674                           ; BSR set to: 57
 15675                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15676  006420  EC2A  F031         	call	_INT1_CallBack	;wreg free
 15677  006424  0011               	retfie		f
 15678  006426                     __end_of_INT1_ISR:
 15679                           	opt callstack 0
 15680                           
 15681 ;; *************** function _INT1_CallBack *****************
 15682 ;; Defined at:
 15683 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1  [STACK] void 
 15690 ;; Registers used:
 15691 ;;		wreg, status,2, status,0, pclath, tosl
 15692 ;; Tracked objects:
 15693 ;;		On entry : 3F/39
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:    1
 15704 ;; This function calls:
 15705 ;;		Absolute function
 15706 ;;		_INT1_DefaultInterruptHandler
 15707 ;; This function is called by:
 15708 ;;		_INT1_ISR
 15709 ;; This function uses a reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text85
 15713  006254                     __ptext85:
 15714                           	opt callstack 0
 15715  006254                     _INT1_CallBack:
 15716                           	opt callstack 17
 15717                           
 15718                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15719                           
 15720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15721                           ;incstack = 0
 15722  006254  5017               	movf	_INT1_InterruptHandler,w,c
 15723  006256  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 15724  006258  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 15725  00625A  B4D8               	btfsc	status,2,c
 15726  00625C  0012               	return	
 15727                           
 15728                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15729  00625E  D801               	call	u127_48
 15730  006260  0012               	return	
 15731  006262                     u127_48:
 15732  006262  0005               	push	
 15733  006264  6EFA               	movwf	pclath,c
 15734  006266  5017               	movf	_INT1_InterruptHandler,w,c
 15735  006268  6EFD               	movwf	tosl,c
 15736  00626A  5018               	movf	_INT1_InterruptHandler+1,w,c
 15737  00626C  6EFE               	movwf	tosh,c
 15738  00626E  5019               	movf	_INT1_InterruptHandler+2,w,c
 15739  006270  6EFF               	movwf	tosu,c
 15740  006272  50FA               	movf	pclath,w,c
 15741  006274  0012               	return		;indir
 15742  006276                     __end_of_INT1_CallBack:
 15743                           	opt callstack 0
 15744                           
 15745 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15746 ;; Defined at:
 15747 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;		None
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;		None
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  1  [STACK] void 
 15754 ;; Registers used:
 15755 ;;		None
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/39
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15765 ;;Total ram usage:        0 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; This function calls:
 15768 ;;		Nothing
 15769 ;; This function is called by:
 15770 ;;		_EXT_INT_Initialize
 15771 ;;		_INT1_CallBack
 15772 ;; This function uses a reentrant model
 15773 ;;
 15774                           
 15775                           	psect	text86
 15776  0064A8                     __ptext86:
 15777                           	opt callstack 0
 15778  0064A8                     _INT1_DefaultInterruptHandler:
 15779                           	opt callstack 17
 15780                           
 15781                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15782                           
 15783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15784                           ;incstack = 0
 15785  0064A8  0012               	return		;funcret
 15786  0064AA                     __end_of_INT1_DefaultInterruptHandler:
 15787                           	opt callstack 0
 15788                           
 15789 ;; *************** function _INT2_ISR *****************
 15790 ;; Defined at:
 15791 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;		None
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;		None
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  1    wreg      void 
 15798 ;; Registers used:
 15799 ;;		wreg, status,2, status,0, pclath, tosl
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15809 ;;Total ram usage:        0 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:    2
 15812 ;; This function calls:
 15813 ;;		_INT2_CallBack
 15814 ;; This function is called by:
 15815 ;;		Interrupt level 2
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text87
 15820  006428                     __ptext87:
 15821                           	opt callstack 0
 15822  006428                     _INT2_ISR:
 15823                           	opt callstack 17
 15824                           
 15825                           ;incstack = 0
 15826  006428  EE13  F154         	lfsr	1,___inthi_sp
 15827                           
 15828                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15829  00642C  0139               	movlb	57	; () banked
 15830  00642E  9BA7               	bcf	167,5,b	;volatile
 15831                           
 15832                           ; BSR set to: 57
 15833                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15834  006430  EC3B  F031         	call	_INT2_CallBack	;wreg free
 15835  006434  0011               	retfie		f
 15836  006436                     __end_of_INT2_ISR:
 15837                           	opt callstack 0
 15838                           
 15839 ;; *************** function _INT2_CallBack *****************
 15840 ;; Defined at:
 15841 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;		None
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;		None
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1  [STACK] void 
 15848 ;; Registers used:
 15849 ;;		wreg, status,2, status,0, pclath, tosl
 15850 ;; Tracked objects:
 15851 ;;		On entry : 3F/39
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15859 ;;Total ram usage:        0 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:    1
 15862 ;; This function calls:
 15863 ;;		Absolute function
 15864 ;;		_INT2_DefaultInterruptHandler
 15865 ;; This function is called by:
 15866 ;;		_INT2_ISR
 15867 ;; This function uses a reentrant model
 15868 ;;
 15869                           
 15870                           	psect	text88
 15871  006276                     __ptext88:
 15872                           	opt callstack 0
 15873  006276                     _INT2_CallBack:
 15874                           	opt callstack 17
 15875                           
 15876                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15877                           
 15878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15879                           ;incstack = 0
 15880  006276  5014               	movf	_INT2_InterruptHandler,w,c
 15881  006278  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 15882  00627A  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 15883  00627C  B4D8               	btfsc	status,2,c
 15884  00627E  0012               	return	
 15885                           
 15886                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15887  006280  D801               	call	u129_48
 15888  006282  0012               	return	
 15889  006284                     u129_48:
 15890  006284  0005               	push	
 15891  006286  6EFA               	movwf	pclath,c
 15892  006288  5014               	movf	_INT2_InterruptHandler,w,c
 15893  00628A  6EFD               	movwf	tosl,c
 15894  00628C  5015               	movf	_INT2_InterruptHandler+1,w,c
 15895  00628E  6EFE               	movwf	tosh,c
 15896  006290  5016               	movf	_INT2_InterruptHandler+2,w,c
 15897  006292  6EFF               	movwf	tosu,c
 15898  006294  50FA               	movf	pclath,w,c
 15899  006296  0012               	return		;indir
 15900  006298                     __end_of_INT2_CallBack:
 15901                           	opt callstack 0
 15902                           
 15903 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15904 ;; Defined at:
 15905 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;		None
 15908 ;; Auto vars:     Size  Location     Type
 15909 ;;		None
 15910 ;; Return value:  Size  Location     Type
 15911 ;;                  1  [STACK] void 
 15912 ;; Registers used:
 15913 ;;		None
 15914 ;; Tracked objects:
 15915 ;;		On entry : 0/39
 15916 ;;		On exit  : 0/0
 15917 ;;		Unchanged: 0/0
 15918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15923 ;;Total ram usage:        0 bytes
 15924 ;; Hardware stack levels used:    1
 15925 ;; This function calls:
 15926 ;;		Nothing
 15927 ;; This function is called by:
 15928 ;;		_EXT_INT_Initialize
 15929 ;;		_INT2_CallBack
 15930 ;; This function uses a reentrant model
 15931 ;;
 15932                           
 15933                           	psect	text89
 15934  0064AA                     __ptext89:
 15935                           	opt callstack 0
 15936  0064AA                     _INT2_DefaultInterruptHandler:
 15937                           	opt callstack 17
 15938                           
 15939                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15940                           
 15941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15942                           ;incstack = 0
 15943  0064AA  0012               	return		;funcret
 15944  0064AC                     __end_of_INT2_DefaultInterruptHandler:
 15945                           	opt callstack 0
 15946                           
 15947 ;; *************** function _Default_ISR *****************
 15948 ;; Defined at:
 15949 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;		None
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;		None
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      void 
 15956 ;; Registers used:
 15957 ;;		None
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15967 ;;Total ram usage:        0 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; This function calls:
 15970 ;;		Nothing
 15971 ;; This function is called by:
 15972 ;;		Interrupt level 2
 15973 ;; This function uses a non-reentrant model
 15974 ;;
 15975                           
 15976                           	psect	text90
 15977  0064A0                     __ptext90:
 15978                           	opt callstack 0
 15979  0064A0                     _Default_ISR:
 15980                           	opt callstack 19
 15981                           
 15982                           ;incstack = 0
 15983  0064A0  EE13  F154         	lfsr	1,___inthi_sp
 15984  0064A4  0011               	retfie		f
 15985  0064A6                     __end_of_Default_ISR:
 15986                           	opt callstack 0
 15987                           
 15988 ;; *************** function _ADCC_ISR *****************
 15989 ;; Defined at:
 15990 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;		None
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;		None
 15995 ;; Return value:  Size  Location     Type
 15996 ;;                  1    wreg      void 
 15997 ;; Registers used:
 15998 ;;		wreg, status,2, status,0, pclath, tosl
 15999 ;; Tracked objects:
 16000 ;;		On entry : 0/0
 16001 ;;		On exit  : 0/0
 16002 ;;		Unchanged: 0/0
 16003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16008 ;;Total ram usage:        0 bytes
 16009 ;; Hardware stack levels used:    1
 16010 ;; Hardware stack levels required when called:    1
 16011 ;; This function calls:
 16012 ;;		Absolute function
 16013 ;;		_ADCC_DefaultInterruptHandler
 16014 ;; This function is called by:
 16015 ;;		Interrupt level 2
 16016 ;; This function uses a non-reentrant model
 16017 ;;
 16018                           
 16019                           	psect	text91
 16020  005DD4                     __ptext91:
 16021                           	opt callstack 0
 16022  005DD4                     _ADCC_ISR:
 16023                           	opt callstack 18
 16024                           
 16025                           ;incstack = 0
 16026  005DD4  EE13  F154         	lfsr	1,___inthi_sp
 16027                           
 16028                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 16029  005DD8  0139               	movlb	57	; () banked
 16030  005DDA  95A1               	bcf	161,2,b	;volatile
 16031                           
 16032                           ; BSR set to: 57
 16033                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 16034  005DDC  0100               	movlb	0	; () banked
 16035  005DDE  51F4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16036  005DE0  11F5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16037  005DE2  11F6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16038  005DE4  B4D8               	btfsc	status,2,c
 16039  005DE6  0011               	retfie		f
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16043  005DE8  D801               	call	i2u595_48
 16044  005DEA  0011               	retfie		f
 16045  005DEC                     i2u595_48:
 16046  005DEC  0005               	push	
 16047  005DEE  6EFA               	movwf	pclath,c
 16048  005DF0  51F4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16049  005DF2  6EFD               	movwf	tosl,c
 16050  005DF4  51F5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16051  005DF6  6EFE               	movwf	tosh,c
 16052  005DF8  51F6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16053  005DFA  6EFF               	movwf	tosu,c
 16054  005DFC  50FA               	movf	pclath,w,c
 16055  005DFE  0012               	return		;indir
 16056  005E00                     __end_of_ADCC_ISR:
 16057                           	opt callstack 0
 16058                           
 16059 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16060 ;; Defined at:
 16061 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1  [STACK] void 
 16068 ;; Registers used:
 16069 ;;		None
 16070 ;; Tracked objects:
 16071 ;;		On entry : 3F/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; This function calls:
 16082 ;;		Nothing
 16083 ;; This function is called by:
 16084 ;;		_ADCC_Initialize
 16085 ;;		_ADCC_ISR
 16086 ;; This function uses a reentrant model
 16087 ;;
 16088                           
 16089                           	psect	text92
 16090  0064AC                     __ptext92:
 16091                           	opt callstack 0
 16092  0064AC                     _ADCC_DefaultInterruptHandler:
 16093                           	opt callstack 18
 16094                           
 16095                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16096                           
 16097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16098                           ;incstack = 0
 16099  0064AC  0012               	return		;funcret
 16100  0064AE                     __end_of_ADCC_DefaultInterruptHandler:
 16101                           	opt callstack 0
 16102                           
 16103 ;; *************** function _UART1_tx_vect_isr *****************
 16104 ;; Defined at:
 16105 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;		None
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;		None
 16110 ;; Return value:  Size  Location     Type
 16111 ;;                  1    wreg      void 
 16112 ;; Registers used:
 16113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16114 ;; Tracked objects:
 16115 ;;		On entry : 0/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16123 ;;Total ram usage:        0 bytes
 16124 ;; Hardware stack levels used:    1
 16125 ;; Hardware stack levels required when called:    1
 16126 ;; This function calls:
 16127 ;;		Absolute function
 16128 ;;		_UART1_Transmit_ISR
 16129 ;; This function is called by:
 16130 ;;		Interrupt level 2
 16131 ;; This function uses a non-reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text93
 16135  006108                     __ptext93:
 16136                           	opt callstack 0
 16137  006108                     _UART1_tx_vect_isr:
 16138                           	opt callstack 18
 16139                           
 16140                           ;incstack = 0
 16141  006108  EE13  F154         	lfsr	1,___inthi_sp
 16142                           
 16143                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16144  00610C  5008               	movf	_UART1_TxInterruptHandler,w,c
 16145  00610E  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16146  006110  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16147  006112  B4D8               	btfsc	status,2,c
 16148  006114  0011               	retfie		f
 16149                           
 16150                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16151  006116  D801               	call	i2u437_48
 16152  006118  0011               	retfie		f
 16153  00611A                     i2u437_48:
 16154  00611A  0005               	push	
 16155  00611C  6EFA               	movwf	pclath,c
 16156  00611E  5008               	movf	_UART1_TxInterruptHandler,w,c
 16157  006120  6EFD               	movwf	tosl,c
 16158  006122  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16159  006124  6EFE               	movwf	tosh,c
 16160  006126  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16161  006128  6EFF               	movwf	tosu,c
 16162  00612A  50FA               	movf	pclath,w,c
 16163  00612C  0012               	return		;indir
 16164  00612E                     __end_of_UART1_tx_vect_isr:
 16165                           	opt callstack 0
 16166                           
 16167 ;; *************** function _UART1_Transmit_ISR *****************
 16168 ;; Defined at:
 16169 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;		None
 16172 ;; Auto vars:     Size  Location     Type
 16173 ;;		None
 16174 ;; Return value:  Size  Location     Type
 16175 ;;                  1  [STACK] void 
 16176 ;; Registers used:
 16177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16178 ;; Tracked objects:
 16179 ;;		On entry : 0/0
 16180 ;;		On exit  : 3B/39
 16181 ;;		Unchanged: 0/0
 16182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16187 ;;Total ram usage:        0 bytes
 16188 ;; Hardware stack levels used:    1
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		_UART1_Initialize
 16193 ;;		_UART1_tx_vect_isr
 16194 ;; This function uses a reentrant model
 16195 ;;
 16196                           
 16197                           	psect	text94
 16198  005E00                     __ptext94:
 16199                           	opt callstack 0
 16200  005E00                     _UART1_Transmit_ISR:
 16201                           	opt callstack 18
 16202                           
 16203                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16204                           
 16205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16206                           ;incstack = 0
 16207  005E00  0E40               	movlw	64
 16208  005E02  6036               	cpfslt	_uart1TxBufferRemaining,c
 16209  005E04  D010               	goto	l597
 16210                           
 16211                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16212  005E06  0E80               	movlw	low _uart1TxBuffer
 16213  005E08  2437               	addwf	_uart1TxTail,w,c	;volatile
 16214  005E0A  6ED9               	movwf	fsr2l,c
 16215  005E0C  6ADA               	clrf	fsr2h,c
 16216  005E0E  0E02               	movlw	high _uart1TxBuffer
 16217  005E10  22DA               	addwfc	fsr2h,f,c
 16218  005E12  50DF               	movf	indf2,w,c
 16219  005E14  013D               	movlb	61	; () banked
 16220  005E16  6FEA               	movwf	234,b	;volatile
 16221                           
 16222                           ; BSR set to: 61
 16223  005E18  2A37               	incf	_uart1TxTail,f,c	;volatile
 16224                           
 16225                           ; BSR set to: 61
 16226                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16227  005E1A  0E3F               	movlw	63
 16228  005E1C  6437               	cpfsgt	_uart1TxTail,c
 16229  005E1E  D001               	goto	l6711
 16230                           
 16231                           ; BSR set to: 61
 16232                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16233  005E20  6A37               	clrf	_uart1TxTail,c	;volatile
 16234  005E22                     l6711:
 16235                           
 16236                           ; BSR set to: 61
 16237                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16238  005E22  2A36               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16239                           
 16240                           ;mcc_generated_files/uart1.c: 220:  } else {
 16241  005E24  0012               	return	
 16242  005E26                     l597:
 16243                           
 16244                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16245  005E26  0139               	movlb	57	; () banked
 16246  005E28  9993               	bcf	147,4,b	;volatile
 16247                           
 16248                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16249  005E2A  0012               	return		;funcret
 16250  005E2C                     __end_of_UART1_Transmit_ISR:
 16251                           	opt callstack 0
 16252                           
 16253 ;; *************** function _UART1_rx_vect_isr *****************
 16254 ;; Defined at:
 16255 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;                  1    wreg      void 
 16262 ;; Registers used:
 16263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16273 ;;Total ram usage:        0 bytes
 16274 ;; Hardware stack levels used:    1
 16275 ;; Hardware stack levels required when called:    1
 16276 ;; This function calls:
 16277 ;;		Absolute function
 16278 ;;		_UART1_Receive_ISR
 16279 ;; This function is called by:
 16280 ;;		Interrupt level 2
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284                           	psect	text95
 16285  006130                     __ptext95:
 16286                           	opt callstack 0
 16287  006130                     _UART1_rx_vect_isr:
 16288                           	opt callstack 18
 16289                           
 16290                           ;incstack = 0
 16291  006130  EE13  F154         	lfsr	1,___inthi_sp
 16292                           
 16293                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16294  006134  500B               	movf	_UART1_RxInterruptHandler,w,c
 16295  006136  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16296  006138  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16297  00613A  B4D8               	btfsc	status,2,c
 16298  00613C  0011               	retfie		f
 16299                           
 16300                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16301  00613E  D801               	call	i2u439_48
 16302  006140  0011               	retfie		f
 16303  006142                     i2u439_48:
 16304  006142  0005               	push	
 16305  006144  6EFA               	movwf	pclath,c
 16306  006146  500B               	movf	_UART1_RxInterruptHandler,w,c
 16307  006148  6EFD               	movwf	tosl,c
 16308  00614A  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16309  00614C  6EFE               	movwf	tosh,c
 16310  00614E  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16311  006150  6EFF               	movwf	tosu,c
 16312  006152  50FA               	movf	pclath,w,c
 16313  006154  0012               	return		;indir
 16314  006156                     __end_of_UART1_rx_vect_isr:
 16315                           	opt callstack 0
 16316                           
 16317 ;; *************** function _UART1_Receive_ISR *****************
 16318 ;; Defined at:
 16319 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;		None
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;		None
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1  [STACK] void 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16337 ;;Total ram usage:        0 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; This function calls:
 16340 ;;		Nothing
 16341 ;; This function is called by:
 16342 ;;		_UART1_Initialize
 16343 ;;		_UART1_rx_vect_isr
 16344 ;; This function uses a reentrant model
 16345 ;;
 16346                           
 16347                           	psect	text96
 16348  006298                     __ptext96:
 16349                           	opt callstack 0
 16350  006298                     _UART1_Receive_ISR:
 16351                           	opt callstack 18
 16352                           
 16353                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16354                           
 16355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16356                           ;incstack = 0
 16357  006298  0E40               	movlw	low _uart1RxBuffer
 16358  00629A  2435               	addwf	_uart1RxHead,w,c	;volatile
 16359  00629C  6ED9               	movwf	fsr2l,c
 16360  00629E  6ADA               	clrf	fsr2h,c
 16361  0062A0  0E02               	movlw	high _uart1RxBuffer
 16362  0062A2  22DA               	addwfc	fsr2h,f,c
 16363  0062A4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16364  0062AA  2A35               	incf	_uart1RxHead,f,c	;volatile
 16365                           
 16366                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16367  0062AC  0E3F               	movlw	63
 16368  0062AE  6435               	cpfsgt	_uart1RxHead,c
 16369  0062B0  D001               	goto	l6721
 16370                           
 16371                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16372  0062B2  6A35               	clrf	_uart1RxHead,c	;volatile
 16373  0062B4                     l6721:
 16374                           
 16375                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16376  0062B4  2A33               	incf	_uart1RxCount,f,c	;volatile
 16377                           
 16378                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16379  0062B6  0012               	return		;funcret
 16380  0062B8                     __end_of_UART1_Receive_ISR:
 16381                           	opt callstack 0
 16382                           
 16383 ;; *************** function _UART2_tx_vect_isr *****************
 16384 ;; Defined at:
 16385 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;		None
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;		None
 16390 ;; Return value:  Size  Location     Type
 16391 ;;                  1    wreg      void 
 16392 ;; Registers used:
 16393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16394 ;; Tracked objects:
 16395 ;;		On entry : 0/0
 16396 ;;		On exit  : 0/0
 16397 ;;		Unchanged: 0/0
 16398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16403 ;;Total ram usage:        0 bytes
 16404 ;; Hardware stack levels used:    1
 16405 ;; Hardware stack levels required when called:    1
 16406 ;; This function calls:
 16407 ;;		Absolute function
 16408 ;;		_UART2_Transmit_ISR
 16409 ;; This function is called by:
 16410 ;;		Interrupt level 2
 16411 ;; This function uses a non-reentrant model
 16412 ;;
 16413                           
 16414                           	psect	text97
 16415  006158                     __ptext97:
 16416                           	opt callstack 0
 16417  006158                     _UART2_tx_vect_isr:
 16418                           	opt callstack 18
 16419                           
 16420                           ;incstack = 0
 16421  006158  EE13  F154         	lfsr	1,___inthi_sp
 16422                           
 16423                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16424  00615C  500E               	movf	_UART2_TxInterruptHandler,w,c
 16425  00615E  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16426  006160  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16427  006162  B4D8               	btfsc	status,2,c
 16428  006164  0011               	retfie		f
 16429                           
 16430                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16431  006166  D801               	call	i2u441_48
 16432  006168  0011               	retfie		f
 16433  00616A                     i2u441_48:
 16434  00616A  0005               	push	
 16435  00616C  6EFA               	movwf	pclath,c
 16436  00616E  500E               	movf	_UART2_TxInterruptHandler,w,c
 16437  006170  6EFD               	movwf	tosl,c
 16438  006172  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 16439  006174  6EFE               	movwf	tosh,c
 16440  006176  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 16441  006178  6EFF               	movwf	tosu,c
 16442  00617A  50FA               	movf	pclath,w,c
 16443  00617C  0012               	return		;indir
 16444  00617E                     __end_of_UART2_tx_vect_isr:
 16445                           	opt callstack 0
 16446                           
 16447 ;; *************** function _UART2_Transmit_ISR *****************
 16448 ;; Defined at:
 16449 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16450 ;; Parameters:    Size  Location     Type
 16451 ;;		None
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;		None
 16454 ;; Return value:  Size  Location     Type
 16455 ;;                  1  [STACK] void 
 16456 ;; Registers used:
 16457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16458 ;; Tracked objects:
 16459 ;;		On entry : 0/0
 16460 ;;		On exit  : 3B/39
 16461 ;;		Unchanged: 0/0
 16462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16467 ;;Total ram usage:        0 bytes
 16468 ;; Hardware stack levels used:    1
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_UART2_Initialize
 16473 ;;		_UART2_tx_vect_isr
 16474 ;; This function uses a reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text98
 16478  005E2C                     __ptext98:
 16479                           	opt callstack 0
 16480  005E2C                     _UART2_Transmit_ISR:
 16481                           	opt callstack 18
 16482                           
 16483                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16484                           
 16485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16486                           ;incstack = 0
 16487  005E2C  0E40               	movlw	64
 16488  005E2E  6030               	cpfslt	_uart2TxBufferRemaining,c
 16489  005E30  D010               	goto	l717
 16490                           
 16491                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16492  005E32  0E00               	movlw	low _uart2TxBuffer
 16493  005E34  2431               	addwf	_uart2TxTail,w,c	;volatile
 16494  005E36  6ED9               	movwf	fsr2l,c
 16495  005E38  6ADA               	clrf	fsr2h,c
 16496  005E3A  0E03               	movlw	high _uart2TxBuffer
 16497  005E3C  22DA               	addwfc	fsr2h,f,c
 16498  005E3E  50DF               	movf	indf2,w,c
 16499  005E40  013D               	movlb	61	; () banked
 16500  005E42  6FD2               	movwf	210,b	;volatile
 16501                           
 16502                           ; BSR set to: 61
 16503  005E44  2A31               	incf	_uart2TxTail,f,c	;volatile
 16504                           
 16505                           ; BSR set to: 61
 16506                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16507  005E46  0E3F               	movlw	63
 16508  005E48  6431               	cpfsgt	_uart2TxTail,c
 16509  005E4A  D001               	goto	l6733
 16510                           
 16511                           ; BSR set to: 61
 16512                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16513  005E4C  6A31               	clrf	_uart2TxTail,c	;volatile
 16514  005E4E                     l6733:
 16515                           
 16516                           ; BSR set to: 61
 16517                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16518  005E4E  2A30               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16519                           
 16520                           ;mcc_generated_files/uart2.c: 224:     }
 16521  005E50  0012               	return	
 16522  005E52                     l717:
 16523                           
 16524                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16525  005E52  0139               	movlb	57	; () banked
 16526  005E54  9796               	bcf	150,3,b	;volatile
 16527                           
 16528                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16529  005E56  0012               	return		;funcret
 16530  005E58                     __end_of_UART2_Transmit_ISR:
 16531                           	opt callstack 0
 16532                           
 16533 ;; *************** function _UART2_rx_vect_isr *****************
 16534 ;; Defined at:
 16535 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;		None
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;		None
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  1    wreg      void 
 16542 ;; Registers used:
 16543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16544 ;; Tracked objects:
 16545 ;;		On entry : 0/0
 16546 ;;		On exit  : 0/0
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16553 ;;Total ram usage:        0 bytes
 16554 ;; Hardware stack levels used:    1
 16555 ;; Hardware stack levels required when called:    1
 16556 ;; This function calls:
 16557 ;;		Absolute function
 16558 ;;		_UART2_Receive_ISR
 16559 ;; This function is called by:
 16560 ;;		Interrupt level 2
 16561 ;; This function uses a non-reentrant model
 16562 ;;
 16563                           
 16564                           	psect	text99
 16565  006180                     __ptext99:
 16566                           	opt callstack 0
 16567  006180                     _UART2_rx_vect_isr:
 16568                           	opt callstack 18
 16569                           
 16570                           ;incstack = 0
 16571  006180  EE13  F154         	lfsr	1,___inthi_sp
 16572                           
 16573                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16574  006184  5011               	movf	_UART2_RxInterruptHandler,w,c
 16575  006186  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16576  006188  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16577  00618A  B4D8               	btfsc	status,2,c
 16578  00618C  0011               	retfie		f
 16579                           
 16580                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16581  00618E  D801               	call	i2u443_48
 16582  006190  0011               	retfie		f
 16583  006192                     i2u443_48:
 16584  006192  0005               	push	
 16585  006194  6EFA               	movwf	pclath,c
 16586  006196  5011               	movf	_UART2_RxInterruptHandler,w,c
 16587  006198  6EFD               	movwf	tosl,c
 16588  00619A  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 16589  00619C  6EFE               	movwf	tosh,c
 16590  00619E  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 16591  0061A0  6EFF               	movwf	tosu,c
 16592  0061A2  50FA               	movf	pclath,w,c
 16593  0061A4  0012               	return		;indir
 16594  0061A6                     __end_of_UART2_rx_vect_isr:
 16595                           	opt callstack 0
 16596                           
 16597 ;; *************** function _UART2_Receive_ISR *****************
 16598 ;; Defined at:
 16599 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16600 ;; Parameters:    Size  Location     Type
 16601 ;;		None
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;		None
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  1  [STACK] void 
 16606 ;; Registers used:
 16607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 0/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16617 ;;Total ram usage:        0 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; This function calls:
 16620 ;;		Nothing
 16621 ;; This function is called by:
 16622 ;;		_UART2_Initialize
 16623 ;;		_UART2_rx_vect_isr
 16624 ;; This function uses a reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text100
 16628  0062B8                     __ptext100:
 16629                           	opt callstack 0
 16630  0062B8                     _UART2_Receive_ISR:
 16631                           	opt callstack 18
 16632                           
 16633                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16634                           
 16635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16636                           ;incstack = 0
 16637  0062B8  0E00               	movlw	low _uart2RxBuffer
 16638  0062BA  242F               	addwf	_uart2RxHead,w,c	;volatile
 16639  0062BC  6ED9               	movwf	fsr2l,c
 16640  0062BE  6ADA               	clrf	fsr2h,c
 16641  0062C0  0E02               	movlw	high _uart2RxBuffer
 16642  0062C2  22DA               	addwfc	fsr2h,f,c
 16643  0062C4  006F F743 FFDF     	movff	15824,indf2	;volatile
 16644  0062CA  2A2F               	incf	_uart2RxHead,f,c	;volatile
 16645                           
 16646                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16647  0062CC  0E3F               	movlw	63
 16648  0062CE  642F               	cpfsgt	_uart2RxHead,c
 16649  0062D0  D001               	goto	l6743
 16650                           
 16651                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16652  0062D2  6A2F               	clrf	_uart2RxHead,c	;volatile
 16653  0062D4                     l6743:
 16654                           
 16655                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16656  0062D4  2A2D               	incf	_uart2RxCount,f,c	;volatile
 16657                           
 16658                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16659  0062D6  0012               	return		;funcret
 16660  0062D8                     __end_of_UART2_Receive_ISR:
 16661                           	opt callstack 0
 16662                           
 16663 ;; *************** function _TMR6_ISR *****************
 16664 ;; Defined at:
 16665 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;		None
 16668 ;; Auto vars:     Size  Location     Type
 16669 ;;		None
 16670 ;; Return value:  Size  Location     Type
 16671 ;;                  1    wreg      void 
 16672 ;; Registers used:
 16673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16674 ;; Tracked objects:
 16675 ;;		On entry : 0/0
 16676 ;;		On exit  : 0/0
 16677 ;;		Unchanged: 0/0
 16678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16683 ;;Total ram usage:        1 bytes
 16684 ;; Hardware stack levels used:    1
 16685 ;; Hardware stack levels required when called:    2
 16686 ;; This function calls:
 16687 ;;		_TMR6_CallBack
 16688 ;; This function is called by:
 16689 ;;		Interrupt level 2
 16690 ;; This function uses a non-reentrant model
 16691 ;;
 16692                           
 16693                           	psect	text101
 16694  006384                     __ptext101:
 16695                           	opt callstack 0
 16696  006384                     _TMR6_ISR:
 16697                           	opt callstack 17
 16698                           
 16699                           ;incstack = 0
 16700  006384  0060  F0E4  F059   	movff	btemp,??_TMR6_ISR
 16701  00638A  EE13  F154         	lfsr	1,___inthi_sp
 16702                           
 16703                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16704  00638E  0139               	movlb	57	; () banked
 16705  006390  91A9               	bcf	169,0,b	;volatile
 16706                           
 16707                           ; BSR set to: 57
 16708                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16709  006392  ECD3  F030         	call	_TMR6_CallBack	;wreg free
 16710  006396  0060  F164  F039   	movff	??_TMR6_ISR,btemp
 16711  00639C  0011               	retfie		f
 16712  00639E                     __end_of_TMR6_ISR:
 16713                           	opt callstack 0
 16714                           
 16715 ;; *************** function _TMR6_CallBack *****************
 16716 ;; Defined at:
 16717 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16718 ;; Parameters:    Size  Location     Type
 16719 ;;		None
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;		None
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  1  [STACK] void 
 16724 ;; Registers used:
 16725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16726 ;; Tracked objects:
 16727 ;;		On entry : 3F/39
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16735 ;;Total ram usage:        0 bytes
 16736 ;; Hardware stack levels used:    1
 16737 ;; Hardware stack levels required when called:    1
 16738 ;; This function calls:
 16739 ;;		Absolute function
 16740 ;;		_TMR6_DefaultInterruptHandler
 16741 ;; This function is called by:
 16742 ;;		_TMR6_ISR
 16743 ;; This function uses a reentrant model
 16744 ;;
 16745                           
 16746                           	psect	text102
 16747  0061A6                     __ptext102:
 16748                           	opt callstack 0
 16749  0061A6                     _TMR6_CallBack:
 16750                           	opt callstack 17
 16751                           
 16752                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16753                           
 16754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16755                           ;incstack = 0
 16756  0061A6  0100               	movlb	0	; () banked
 16757  0061A8  51F1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16758  0061AA  11F2               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16759  0061AC  11F3               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16760  0061AE  B4D8               	btfsc	status,2,c
 16761  0061B0  0012               	return	
 16762                           
 16763                           ; BSR set to: 0
 16764                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16765  0061B2  D801               	call	u367_48
 16766  0061B4  0012               	return	
 16767  0061B6                     u367_48:
 16768  0061B6  0005               	push	
 16769  0061B8  6EFA               	movwf	pclath,c
 16770  0061BA  51F1               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16771  0061BC  6EFD               	movwf	tosl,c
 16772  0061BE  51F2               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16773  0061C0  6EFE               	movwf	tosh,c
 16774  0061C2  51F3               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16775  0061C4  6EFF               	movwf	tosu,c
 16776  0061C6  50FA               	movf	pclath,w,c
 16777  0061C8  0012               	return		;indir
 16778  0061CA                     __end_of_TMR6_CallBack:
 16779                           	opt callstack 0
 16780                           
 16781 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16782 ;; Defined at:
 16783 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16784 ;; Parameters:    Size  Location     Type
 16785 ;;		None
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  i               1  [STACK] unsigned char 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  1  [STACK] void 
 16790 ;; Registers used:
 16791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16792 ;; Tracked objects:
 16793 ;;		On entry : 3F/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16801 ;;Total ram usage:        0 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; This function calls:
 16804 ;;		Nothing
 16805 ;; This function is called by:
 16806 ;;		_TMR6_Initialize
 16807 ;;		_TMR6_CallBack
 16808 ;; This function uses a reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text103
 16812  005B48                     __ptext103:
 16813                           	opt callstack 0
 16814  005B48                     _TMR6_DefaultInterruptHandler:
 16815                           	opt callstack 0
 16816                           
 16817                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16818  005B48  52E6               	movf	postinc1,f,c
 16819                           
 16820                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16821                           ;stkvar	_i @ sp[(-1)+0]
 16822                           
 16823                           ;incstack = 0
 16824  005B4A  0EFF               	movlw	-1
 16825  005B4C  6AE3               	clrf	plusw1,c
 16826  005B4E                     l6275:
 16827                           
 16828                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16829                           ;stkvar	_i @ sp[(-1)+0]
 16830  005B4E  0EFF               	movlw	-1
 16831  005B50  50E3               	movf	plusw1,w,c
 16832  005B52  0D02               	mullw	2
 16833  005B54  50F3               	movf	prodl,w,c
 16834  005B56  0FD7               	addlw	low _tickCount
 16835  005B58  6ED9               	movwf	fsr2l,c
 16836  005B5A  6ADA               	clrf	fsr2h,c
 16837  005B5C  50DE               	movf	postinc2,w,c
 16838  005B5E  10DE               	iorwf	postinc2,w,c
 16839  005B60  B4D8               	btfsc	status,2,c
 16840  005B62  D00A               	goto	l6279
 16841                           
 16842                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16843                           ;stkvar	_i @ sp[(-1)+0]
 16844  005B64  0EFF               	movlw	-1
 16845  005B66  50E3               	movf	plusw1,w,c
 16846  005B68  0D02               	mullw	2
 16847  005B6A  50F3               	movf	prodl,w,c
 16848  005B6C  0FD7               	addlw	low _tickCount
 16849  005B6E  6ED9               	movwf	fsr2l,c
 16850  005B70  6ADA               	clrf	fsr2h,c
 16851  005B72  06DE               	decf	postinc2,f,c
 16852  005B74  0E00               	movlw	0
 16853  005B76  5ADD               	subwfb	postdec2,f,c
 16854  005B78                     l6279:
 16855                           
 16856                           ;mcc_generated_files/tmr6.c: 207:  }
 16857                           ;stkvar	_i @ sp[(-1)+0]
 16858  005B78  0EFF               	movlw	-1
 16859  005B7A  2AE3               	incf	plusw1,f,c
 16860                           
 16861                           ;stkvar	_i @ sp[(-1)+0]
 16862  005B7C  0EFF               	movlw	-1
 16863  005B7E  006F FF8C  F039    	movff	plusw1,btemp
 16864  005B84  0E05               	movlw	5
 16865  005B86  6439               	cpfsgt	btemp,c
 16866  005B88  D7E2               	goto	l6275
 16867                           
 16868                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16869  005B8A  52E5               	movf	postdec1,f,c
 16870  005B8C  0012               	return		;funcret
 16871  005B8E                     __end_of_TMR6_DefaultInterruptHandler:
 16872                           	opt callstack 0
 16873                           
 16874 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16875 ;; Defined at:
 16876 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;		None
 16879 ;; Auto vars:     Size  Location     Type
 16880 ;;		None
 16881 ;; Return value:  Size  Location     Type
 16882 ;;                  1    wreg      void 
 16883 ;; Registers used:
 16884 ;;		None
 16885 ;; Tracked objects:
 16886 ;;		On entry : 0/0
 16887 ;;		On exit  : 3F/0
 16888 ;;		Unchanged: 0/0
 16889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16894 ;;Total ram usage:        0 bytes
 16895 ;; Hardware stack levels used:    1
 16896 ;; This function calls:
 16897 ;;		Nothing
 16898 ;; This function is called by:
 16899 ;;		Interrupt level 2
 16900 ;; This function uses a non-reentrant model
 16901 ;;
 16902                           
 16903                           	psect	text104
 16904  006438                     __ptext104:
 16905                           	opt callstack 0
 16906  006438                     _DMA1_DMASCNT_ISR:
 16907                           	opt callstack 19
 16908                           
 16909                           ;incstack = 0
 16910  006438  EE13  F154         	lfsr	1,___inthi_sp
 16911                           
 16912                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16913  00643C  0139               	movlb	57	; () banked
 16914  00643E  91A2               	bcf	162,0,b	;volatile
 16915                           
 16916                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16917  006440  0100               	movlb	0	; () banked
 16918  006442  97CB               	bcf	_spi_link& (0+255),3,b	;volatile
 16919                           
 16920                           ; BSR set to: 0
 16921  006444  0011               	retfie		f
 16922  006446                     __end_of_DMA1_DMASCNT_ISR:
 16923                           	opt callstack 0
 16924                           
 16925 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16926 ;; Defined at:
 16927 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;		None
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;		None
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  1    wreg      void 
 16934 ;; Registers used:
 16935 ;;		None
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 3F/39
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16945 ;;Total ram usage:        0 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; This function calls:
 16948 ;;		Nothing
 16949 ;; This function is called by:
 16950 ;;		Interrupt level 2
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text105
 16955  006450                     __ptext105:
 16956                           	opt callstack 0
 16957  006450                     _DMA1_DMADCNT_ISR:
 16958                           	opt callstack 19
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;incstack = 0
 16962  006450  EE13  F154         	lfsr	1,___inthi_sp
 16963                           
 16964                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16965  006454  0139               	movlb	57	; () banked
 16966  006456  93A2               	bcf	162,1,b	;volatile
 16967                           
 16968                           ; BSR set to: 57
 16969  006458  0011               	retfie		f
 16970  00645A                     __end_of_DMA1_DMADCNT_ISR:
 16971                           	opt callstack 0
 16972                           
 16973 ;; *************** function _DMA1_DMAA_ISR *****************
 16974 ;; Defined at:
 16975 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;		None
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;		None
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  1    wreg      void 
 16982 ;; Registers used:
 16983 ;;		None
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 3F/39
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16993 ;;Total ram usage:        0 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		Interrupt level 2
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           	psect	text106
 17003  00645C                     __ptext106:
 17004                           	opt callstack 0
 17005  00645C                     _DMA1_DMAA_ISR:
 17006                           	opt callstack 19
 17007                           
 17008                           ; BSR set to: 57
 17009                           ;incstack = 0
 17010  00645C  EE13  F154         	lfsr	1,___inthi_sp
 17011                           
 17012                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 17013  006460  0139               	movlb	57	; () banked
 17014  006462  97A2               	bcf	162,3,b	;volatile
 17015                           
 17016                           ; BSR set to: 57
 17017  006464  0011               	retfie		f
 17018  006466                     __end_of_DMA1_DMAA_ISR:
 17019                           	opt callstack 0
 17020                           
 17021 ;; *************** function _DMA1_DMAOR_ISR *****************
 17022 ;; Defined at:
 17023 ;;		line 154 in file "mcc_generated_files/dma1.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;		None
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;		None
 17028 ;; Return value:  Size  Location     Type
 17029 ;;                  1    wreg      void 
 17030 ;; Registers used:
 17031 ;;		None
 17032 ;; Tracked objects:
 17033 ;;		On entry : 0/0
 17034 ;;		On exit  : 3F/39
 17035 ;;		Unchanged: 0/0
 17036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17041 ;;Total ram usage:        0 bytes
 17042 ;; Hardware stack levels used:    1
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		Interrupt level 2
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text107
 17051  006468                     __ptext107:
 17052                           	opt callstack 0
 17053  006468                     _DMA1_DMAOR_ISR:
 17054                           	opt callstack 19
 17055                           
 17056                           ; BSR set to: 57
 17057                           ;incstack = 0
 17058  006468  EE13  F154         	lfsr	1,___inthi_sp
 17059                           
 17060                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 17061  00646C  0139               	movlb	57	; () banked
 17062  00646E  95A2               	bcf	162,2,b	;volatile
 17063                           
 17064                           ; BSR set to: 57
 17065  006470  0011               	retfie		f
 17066  006472                     __end_of_DMA1_DMAOR_ISR:
 17067                           	opt callstack 0
 17068                           
 17069 ;; *************** function _TMR5_ISR *****************
 17070 ;; Defined at:
 17071 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;		None
 17074 ;; Auto vars:     Size  Location     Type
 17075 ;;		None
 17076 ;; Return value:  Size  Location     Type
 17077 ;;                  1    wreg      void 
 17078 ;; Registers used:
 17079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17080 ;; Tracked objects:
 17081 ;;		On entry : 0/0
 17082 ;;		On exit  : 0/0
 17083 ;;		Unchanged: 0/0
 17084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17089 ;;Total ram usage:        3 bytes
 17090 ;; Hardware stack levels used:    1
 17091 ;; Hardware stack levels required when called:    2
 17092 ;; This function calls:
 17093 ;;		_TMR5_CallBack
 17094 ;;		_TMR5_WriteTimer
 17095 ;; This function is called by:
 17096 ;;		Interrupt level 2
 17097 ;; This function uses a non-reentrant model
 17098 ;;
 17099                           
 17100                           	psect	text108
 17101  0059D8                     __ptext108:
 17102                           	opt callstack 0
 17103  0059D8                     _TMR5_ISR:
 17104                           	opt callstack 17
 17105                           
 17106                           ; BSR set to: 57
 17107                           ;incstack = 0
 17108  0059D8  0060  F110  F05C   	movff	btemp+11,??_TMR5_ISR+2
 17109  0059DE  EE13  F154         	lfsr	1,___inthi_sp
 17110                           
 17111                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17112  0059E2  0139               	movlb	57	; () banked
 17113  0059E4  9DA8               	bcf	168,6,b	;volatile
 17114                           
 17115                           ; BSR set to: 57
 17116                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17117  0059E6  0060  F097  FFE6   	movff	_timer5ReloadVal,postinc1
 17118  0059EC  0060  F09B  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17119  0059F2  ECE8  F02D         	call	_TMR5_WriteTimer	;wreg free
 17120                           
 17121                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17122  0059F6  0100               	movlb	0	; () banked
 17123  0059F8  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
 17124  0059FA  6E5A               	movwf	??_TMR5_ISR& (0+255),c
 17125  0059FC  6A5B               	clrf	(??_TMR5_ISR+1)& (0+255),c
 17126  0059FE  0E05               	movlw	5
 17127  005A00  265A               	addwf	??_TMR5_ISR,f,c
 17128  005A02  0E00               	movlw	0
 17129  005A04  225B               	addwfc	??_TMR5_ISR+1,f,c
 17130  005A06  4A23               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17131  005A08  2A24               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17132  005A0A  505A               	movf	??_TMR5_ISR,w,c
 17133  005A0C  5C23               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17134  005A0E  505B               	movf	??_TMR5_ISR+1,w,c
 17135  005A10  5824               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17136  005A12  A0D8               	btfss	status,0,c
 17137  005A14  D004               	goto	i2l1141
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17141  005A16  ECE5  F030         	call	_TMR5_CallBack	;wreg free
 17142                           
 17143                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17144  005A1A  6A23               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17145  005A1C  6A24               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17146  005A1E                     i2l1141:
 17147  005A1E  0060  F170  F044   	movff	??_TMR5_ISR+2,btemp+11
 17148  005A24  0011               	retfie		f
 17149  005A26                     __end_of_TMR5_ISR:
 17150                           	opt callstack 0
 17151                           
 17152 ;; *************** function _TMR5_WriteTimer *****************
 17153 ;; Defined at:
 17154 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;  timerVal        2  [STACK] unsigned short 
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1  [STACK] void 
 17161 ;; Registers used:
 17162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17163 ;; Tracked objects:
 17164 ;;		On entry : 3F/39
 17165 ;;		On exit  : 0/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17172 ;;Total ram usage:        0 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; This function calls:
 17175 ;;		Nothing
 17176 ;; This function is called by:
 17177 ;;		_TMR5_ISR
 17178 ;; This function uses a reentrant model
 17179 ;;
 17180                           
 17181                           	psect	text109
 17182  005BD0                     __ptext109:
 17183                           	opt callstack 0
 17184  005BD0                     _TMR5_WriteTimer:
 17185                           	opt callstack 18
 17186                           
 17187                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17188                           
 17189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17190                           ;incstack = 0
 17191  005BD0  A49A               	btfss	16282,2,c	;volatile
 17192  005BD2  D00F               	goto	l6759
 17193                           
 17194                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17195  005BD4  909A               	bcf	16282,0,c	;volatile
 17196                           
 17197                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17198                           ;stkvar	_timerVal @ sp[(0)+-2]
 17199  005BD6  0EFF               	movlw	255
 17200  005BD8  24E1               	addwf	fsr1l,w,c
 17201  005BDA  6ED9               	movwf	fsr2l,c
 17202  005BDC  0EFF               	movlw	255
 17203  005BDE  20E2               	addwfc	fsr1h,w,c
 17204  005BE0  6EDA               	movwf	fsr2h,c
 17205  005BE2  50DF               	movf	indf2,w,c
 17206  005BE4  6E99               	movwf	16281,c	;volatile
 17207                           
 17208                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17209                           ;stkvar	_timerVal @ sp[(0)+-2]
 17210  005BE6  0EFE               	movlw	-2
 17211  005BE8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17212                           
 17213                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17214  005BEE  809A               	bsf	16282,0,c	;volatile
 17215                           
 17216                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17217  005BF0  D00C               	goto	l1124
 17218  005BF2                     l6759:
 17219                           
 17220                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17221                           ;stkvar	_timerVal @ sp[(0)+-2]
 17222  005BF2  0EFF               	movlw	255
 17223  005BF4  24E1               	addwf	fsr1l,w,c
 17224  005BF6  6ED9               	movwf	fsr2l,c
 17225  005BF8  0EFF               	movlw	255
 17226  005BFA  20E2               	addwfc	fsr1h,w,c
 17227  005BFC  6EDA               	movwf	fsr2h,c
 17228  005BFE  50DF               	movf	indf2,w,c
 17229  005C00  6E99               	movwf	16281,c	;volatile
 17230                           
 17231                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17232                           ;stkvar	_timerVal @ sp[(0)+-2]
 17233  005C02  0EFE               	movlw	-2
 17234  005C04  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17235  005C0A                     l1124:
 17236                           
 17237                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17238  005C0A  52E5               	movf	postdec1,f,c
 17239  005C0C  52E5               	movf	postdec1,f,c
 17240  005C0E  0012               	return		;funcret
 17241  005C10                     __end_of_TMR5_WriteTimer:
 17242                           	opt callstack 0
 17243                           
 17244 ;; *************** function _TMR5_CallBack *****************
 17245 ;; Defined at:
 17246 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;		None
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;		None
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  1  [STACK] void 
 17253 ;; Registers used:
 17254 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17255 ;; Tracked objects:
 17256 ;;		On entry : 3F/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17264 ;;Total ram usage:        0 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:    1
 17267 ;; This function calls:
 17268 ;;		Absolute function
 17269 ;;		_TMR5_DefaultInterruptHandler
 17270 ;; This function is called by:
 17271 ;;		_TMR5_ISR
 17272 ;; This function uses a reentrant model
 17273 ;;
 17274                           
 17275                           	psect	text110
 17276  0061CA                     __ptext110:
 17277                           	opt callstack 0
 17278  0061CA                     _TMR5_CallBack:
 17279                           	opt callstack 17
 17280                           
 17281                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17282                           
 17283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17284                           ;incstack = 0
 17285  0061CA  0100               	movlb	0	; () banked
 17286  0061CC  51EE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17287  0061CE  11EF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17288  0061D0  11F0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17289  0061D2  B4D8               	btfsc	status,2,c
 17290  0061D4  0012               	return	
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17294  0061D6  D801               	call	u370_48
 17295  0061D8  0012               	return	
 17296  0061DA                     u370_48:
 17297  0061DA  0005               	push	
 17298  0061DC  6EFA               	movwf	pclath,c
 17299  0061DE  51EE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17300  0061E0  6EFD               	movwf	tosl,c
 17301  0061E2  51EF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17302  0061E4  6EFE               	movwf	tosh,c
 17303  0061E6  51F0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17304  0061E8  6EFF               	movwf	tosu,c
 17305  0061EA  50FA               	movf	pclath,w,c
 17306  0061EC  0012               	return		;indir
 17307  0061EE                     __end_of_TMR5_CallBack:
 17308                           	opt callstack 0
 17309                           
 17310 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17311 ;; Defined at:
 17312 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;		None
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;		None
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1  [STACK] void 
 17319 ;; Registers used:
 17320 ;;		wreg, status,2, status,0, btemp+11
 17321 ;; Tracked objects:
 17322 ;;		On entry : 3F/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17330 ;;Total ram usage:        0 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; This function calls:
 17333 ;;		Nothing
 17334 ;; This function is called by:
 17335 ;;		_TMR5_Initialize
 17336 ;;		_TMR5_CallBack
 17337 ;; This function uses a reentrant model
 17338 ;;
 17339                           
 17340                           	psect	text111
 17341  00639E                     __ptext111:
 17342                           	opt callstack 0
 17343  00639E                     _TMR5_DefaultInterruptHandler:
 17344                           	opt callstack 17
 17345                           
 17346                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17347                           
 17348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17349                           ;incstack = 0
 17350  00639E  A0BE               	btfss	16318,0,c	;volatile
 17351  0063A0  D002               	goto	u344_40
 17352  0063A2  0E01               	movlw	1
 17353  0063A4  D001               	goto	u344_46
 17354  0063A6                     u344_40:
 17355  0063A6  0E00               	movlw	0
 17356  0063A8                     u344_46:
 17357  0063A8  0AFF               	xorlw	255
 17358  0063AA  6E44               	movwf	btemp+11,c
 17359  0063AC  50BE               	movf	16318,w,c	;volatile
 17360  0063AE  1844               	xorwf	btemp+11,w,c
 17361  0063B0  0BFE               	andlw	-2
 17362  0063B2  1844               	xorwf	btemp+11,w,c
 17363  0063B4  6EBE               	movwf	16318,c	;volatile
 17364                           
 17365                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17366  0063B6  0012               	return		;funcret
 17367  0063B8                     __end_of_TMR5_DefaultInterruptHandler:
 17368                           	opt callstack 0
 17369                           
 17370                           ;
 17371                           ; Interrupt Vector Table @ 0x8
 17372                           ;
 17373                           
 17374                           	psect	ivt0x8
 17375  000008                     __pivt0x8:
 17376                           	opt callstack 0
 17377  000008                     ivt0x8_base:
 17378                           	opt callstack 0
 17379                           
 17380                           ; Vector 0 : SWINT
 17381  000008  1928               	dw	_Default_ISR shr (0+2)
 17382                           
 17383                           ; Vector 1 : HLVD
 17384  00000A  1928               	dw	_Default_ISR shr (0+2)
 17385                           
 17386                           ; Vector 2 : OSF
 17387  00000C  1928               	dw	_Default_ISR shr (0+2)
 17388                           
 17389                           ; Vector 3 : CSW
 17390  00000E  1928               	dw	_Default_ISR shr (0+2)
 17391                           
 17392                           ; Vector 4 : NVM
 17393  000010  1928               	dw	_Default_ISR shr (0+2)
 17394                           
 17395                           ; Vector 5 : SCAN
 17396  000012  1928               	dw	_Default_ISR shr (0+2)
 17397                           
 17398                           ; Vector 6 : CRC
 17399  000014  1928               	dw	_Default_ISR shr (0+2)
 17400                           
 17401                           ; Vector 7 : IOC
 17402  000016  1928               	dw	_Default_ISR shr (0+2)
 17403                           
 17404                           ; Vector 8 : INT0
 17405  000018  1902               	dw	_INT0_ISR shr (0+2)
 17406                           
 17407                           ; Vector 9 : ZCD
 17408  00001A  1928               	dw	_Default_ISR shr (0+2)
 17409                           
 17410                           ; Vector 10 : AD
 17411  00001C  1775               	dw	_ADCC_ISR shr (0+2)
 17412                           
 17413                           ; Vector 11 : ADT
 17414  00001E  1928               	dw	_Default_ISR shr (0+2)
 17415                           
 17416                           ; Vector 12 : CMP1
 17417  000020  1928               	dw	_Default_ISR shr (0+2)
 17418                           
 17419                           ; Vector 13 : SMT1
 17420  000022  1928               	dw	_Default_ISR shr (0+2)
 17421                           
 17422                           ; Vector 14 : SMT1PRA
 17423  000024  1928               	dw	_Default_ISR shr (0+2)
 17424                           
 17425                           ; Vector 15 : SMT1PRW
 17426  000026  1928               	dw	_Default_ISR shr (0+2)
 17427                           
 17428                           ; Vector 16 : DMA1SCNT
 17429  000028  190E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17430                           
 17431                           ; Vector 17 : DMA1DCNT
 17432  00002A  1914               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17433                           
 17434                           ; Vector 18 : DMA1OR
 17435  00002C  191A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17436                           
 17437                           ; Vector 19 : DMA1A
 17438  00002E  1917               	dw	_DMA1_DMAA_ISR shr (0+2)
 17439                           
 17440                           ; Vector 20 : SPI1RX
 17441  000030  1928               	dw	_Default_ISR shr (0+2)
 17442                           
 17443                           ; Vector 21 : SPI1TX
 17444  000032  1928               	dw	_Default_ISR shr (0+2)
 17445                           
 17446                           ; Vector 22 : SPI1
 17447  000034  1928               	dw	_Default_ISR shr (0+2)
 17448                           
 17449                           ; Vector 23 : I2C1RX
 17450  000036  1928               	dw	_Default_ISR shr (0+2)
 17451                           
 17452                           ; Vector 24 : I2C1TX
 17453  000038  1928               	dw	_Default_ISR shr (0+2)
 17454                           
 17455                           ; Vector 25 : I2C1
 17456  00003A  1928               	dw	_Default_ISR shr (0+2)
 17457                           
 17458                           ; Vector 26 : I2C1E
 17459  00003C  1928               	dw	_Default_ISR shr (0+2)
 17460                           
 17461                           ; Vector 27 : U1RX
 17462  00003E  184C               	dw	_UART1_rx_vect_isr shr (0+2)
 17463                           
 17464                           ; Vector 28 : U1TX
 17465  000040  1842               	dw	_UART1_tx_vect_isr shr (0+2)
 17466                           
 17467                           ; Vector 29 : U1E
 17468  000042  1928               	dw	_Default_ISR shr (0+2)
 17469                           
 17470                           ; Vector 30 : U1
 17471  000044  1928               	dw	_Default_ISR shr (0+2)
 17472                           
 17473                           ; Vector 31 : TMR0
 17474  000046  1928               	dw	_Default_ISR shr (0+2)
 17475                           
 17476                           ; Vector 32 : TMR1
 17477  000048  1928               	dw	_Default_ISR shr (0+2)
 17478                           
 17479                           ; Vector 33 : TMR1G
 17480  00004A  1928               	dw	_Default_ISR shr (0+2)
 17481                           
 17482                           ; Vector 34 : TMR2
 17483  00004C  1928               	dw	_Default_ISR shr (0+2)
 17484                           
 17485                           ; Vector 35 : CCP1
 17486  00004E  1928               	dw	_Default_ISR shr (0+2)
 17487                           
 17488                           ; Vector 36 : Undefined
 17489  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17490                           
 17491                           ; Vector 37 : NCO1
 17492  000052  1928               	dw	_Default_ISR shr (0+2)
 17493                           
 17494                           ; Vector 38 : CWG1
 17495  000054  1928               	dw	_Default_ISR shr (0+2)
 17496                           
 17497                           ; Vector 39 : CLC1
 17498  000056  1928               	dw	_Default_ISR shr (0+2)
 17499                           
 17500                           ; Vector 40 : INT1
 17501  000058  1906               	dw	_INT1_ISR shr (0+2)
 17502                           
 17503                           ; Vector 41 : CMP2
 17504  00005A  1928               	dw	_Default_ISR shr (0+2)
 17505                           
 17506                           ; Vector 42 : DMA2SCNT
 17507  00005C  1928               	dw	_Default_ISR shr (0+2)
 17508                           
 17509                           ; Vector 43 : DMA2DCNT
 17510  00005E  1928               	dw	_Default_ISR shr (0+2)
 17511                           
 17512                           ; Vector 44 : DMA2OR
 17513  000060  1928               	dw	_Default_ISR shr (0+2)
 17514                           
 17515                           ; Vector 45 : DMA2A
 17516  000062  1928               	dw	_Default_ISR shr (0+2)
 17517                           
 17518                           ; Vector 46 : I2C2RX
 17519  000064  1928               	dw	_Default_ISR shr (0+2)
 17520                           
 17521                           ; Vector 47 : I2C2TX
 17522  000066  1928               	dw	_Default_ISR shr (0+2)
 17523                           
 17524                           ; Vector 48 : I2C2
 17525  000068  1928               	dw	_Default_ISR shr (0+2)
 17526                           
 17527                           ; Vector 49 : I2C2E
 17528  00006A  1928               	dw	_Default_ISR shr (0+2)
 17529                           
 17530                           ; Vector 50 : U2RX
 17531  00006C  1860               	dw	_UART2_rx_vect_isr shr (0+2)
 17532                           
 17533                           ; Vector 51 : U2TX
 17534  00006E  1856               	dw	_UART2_tx_vect_isr shr (0+2)
 17535                           
 17536                           ; Vector 52 : U2E
 17537  000070  1928               	dw	_Default_ISR shr (0+2)
 17538                           
 17539                           ; Vector 53 : U2
 17540  000072  1928               	dw	_Default_ISR shr (0+2)
 17541                           
 17542                           ; Vector 54 : TMR3
 17543  000074  1928               	dw	_Default_ISR shr (0+2)
 17544                           
 17545                           ; Vector 55 : TMR3G
 17546  000076  1928               	dw	_Default_ISR shr (0+2)
 17547                           
 17548                           ; Vector 56 : TMR4
 17549  000078  1928               	dw	_Default_ISR shr (0+2)
 17550                           
 17551                           ; Vector 57 : CCP2
 17552  00007A  1928               	dw	_Default_ISR shr (0+2)
 17553                           
 17554                           ; Vector 58 : Undefined
 17555  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17556                           
 17557                           ; Vector 59 : CWG2
 17558  00007E  1928               	dw	_Default_ISR shr (0+2)
 17559                           
 17560                           ; Vector 60 : CLC2
 17561  000080  1928               	dw	_Default_ISR shr (0+2)
 17562                           
 17563                           ; Vector 61 : INT2
 17564  000082  190A               	dw	_INT2_ISR shr (0+2)
 17565                           
 17566                           ; Vector 62 : Undefined
 17567  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17568                           
 17569                           ; Vector 63 : Undefined
 17570  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17571                           
 17572                           ; Vector 64 : Undefined
 17573  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17574                           
 17575                           ; Vector 65 : Undefined
 17576  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17577                           
 17578                           ; Vector 66 : Undefined
 17579  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17580                           
 17581                           ; Vector 67 : Undefined
 17582  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17583                           
 17584                           ; Vector 68 : Undefined
 17585  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17586                           
 17587                           ; Vector 69 : Undefined
 17588  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17589                           
 17590                           ; Vector 70 : TMR5
 17591  000094  1676               	dw	_TMR5_ISR shr (0+2)
 17592                           
 17593                           ; Vector 71 : TMR5G
 17594  000096  1928               	dw	_Default_ISR shr (0+2)
 17595                           
 17596                           ; Vector 72 : TMR6
 17597  000098  18E1               	dw	_TMR6_ISR shr (0+2)
 17598                           
 17599                           ; Vector 73 : CCP3
 17600  00009A  1928               	dw	_Default_ISR shr (0+2)
 17601                           
 17602                           ; Vector 74 : CWG3
 17603  00009C  1928               	dw	_Default_ISR shr (0+2)
 17604                           
 17605                           ; Vector 75 : CLC3
 17606  00009E  1928               	dw	_Default_ISR shr (0+2)
 17607                           
 17608                           ; Vector 76 : Undefined
 17609  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17610                           
 17611                           ; Vector 77 : Undefined
 17612  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17613                           
 17614                           ; Vector 78 : Undefined
 17615  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17616                           
 17617                           ; Vector 79 : Undefined
 17618  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17619                           
 17620                           ; Vector 80 : CCP4
 17621  0000A8  1928               	dw	_Default_ISR shr (0+2)
 17622                           
 17623                           ; Vector 81 : CLC4
 17624  0000AA  1928               	dw	_Default_ISR shr (0+2)
 17625  0000AC                     ivt0x8_undefint:
 17626                           	opt callstack 0
 17627  0000AC  00FF               	reset	
 17628                           
 17629                           	psect	text112
 17630  000000                     __ptext112:
 17631                           	opt callstack 0
 17632                           
 17633                           	psect	rparam
 17634  0000                     
 17635                           	psect	temp
 17636  000039                     btemp:
 17637                           	opt callstack 0
 17638  000039                     	ds	32
 17639  0000                     wtemp0	set	btemp
 17640  0000                     wtemp1	set	btemp+2
 17641  0000                     wtemp2	set	btemp+4
 17642  0000                     wtemp3	set	btemp+6
 17643  0000                     wtemp4	set	btemp+8
 17644  0000                     wtemp5	set	btemp+10
 17645  0000                     wtemp8	set	btemp+1
 17646  0000                     ttemp0	set	btemp
 17647  0000                     ttemp1	set	btemp+3
 17648  0000                     ttemp2	set	btemp+6
 17649  0000                     ttemp3	set	btemp+9
 17650  0000                     ttemp5	set	btemp+1
 17651  0000                     ttemp6	set	btemp+4
 17652  0000                     ttemp7	set	btemp+8
 17653  0000                     ltemp0	set	btemp
 17654  0000                     ltemp1	set	btemp+4
 17655  0000                     ltemp2	set	btemp+8
 17656  0000                     lltemp0	set	btemp
 17657  0000                     lltemp1	set	btemp+8
 17658  0000                     lltemp2	set	btemp+16
 17659  0000                     lltemp3	set	btemp+24
 17660                           tosu	equ	0x3FFF
 17661                           tosh	equ	0x3FFE
 17662                           tosl	equ	0x3FFD
 17663                           stkptr	equ	0x3FFC
 17664                           pclatu	equ	0x3FFB
 17665                           pclath	equ	0x3FFA
 17666                           pcl	equ	0x3FF9
 17667                           tblptru	equ	0x3FF8
 17668                           tblptrh	equ	0x3FF7
 17669                           tblptrl	equ	0x3FF6
 17670                           tablat	equ	0x3FF5
 17671                           prodh	equ	0x3FF4
 17672                           prodl	equ	0x3FF3
 17673                           indf0	equ	0x3FEF
 17674                           postinc0	equ	0x3FEE
 17675                           postdec0	equ	0x3FED
 17676                           preinc0	equ	0x3FEC
 17677                           plusw0	equ	0x3FEB
 17678                           fsr0h	equ	0x3FEA
 17679                           fsr0l	equ	0x3FE9
 17680                           wreg	equ	0x3FE8
 17681                           indf1	equ	0x3FE7
 17682                           postinc1	equ	0x3FE6
 17683                           postdec1	equ	0x3FE5
 17684                           preinc1	equ	0x3FE4
 17685                           plusw1	equ	0x3FE3
 17686                           fsr1h	equ	0x3FE2
 17687                           fsr1l	equ	0x3FE1
 17688                           bsr	equ	0x3FE0
 17689                           indf2	equ	0x3FDF
 17690                           postinc2	equ	0x3FDE
 17691                           postdec2	equ	0x3FDD
 17692                           preinc2	equ	0x3FDC
 17693                           plusw2	equ	0x3FDB
 17694                           fsr2h	equ	0x3FDA
 17695                           fsr2l	equ	0x3FD9
 17696                           status	equ	0x3FD8


Data Sizes:
    Strings     206
    Constant    0
    Data        389
    BSS         539
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      4      61
    BANK0           160      0     155
    BANK1           256      0     240
    BANK2           256      0     222
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 94
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[94]), 

    a	PTR const unsigned char  size(2) Largest target is 94
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[94]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4423_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[23]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[94]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[94]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16637.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16637.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    S3744response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16625.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3744response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16625.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    m_link	PTR enum E16173 size(1) Largest target is 94
		 -> V(BANK0[94]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    strPtr	PTR unsigned char  size(1) Largest target is 94
		 -> V(BANK0[94]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   45224
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2066
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8432
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2127
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2271
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   19158
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9633
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9463
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9432
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8207
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8108
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7869
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     252
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      31
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              1 COMRAM     3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DE       9       86.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9B       5       96.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      4      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A4      58        0.0%
DATA                 0      0     3A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 21 00:58:34 2019

                    _SPI1_Exchange8bit 62F6                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 6066              __end_of_UART2_is_rx_ready 648A  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 647A                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 01C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H27 02C0                                    _H53 03C6  
                                  l194 63DE                                    l572 5CF4  
                                  l717 5E52                                    l851 6304  
                                  l579 5C64                                    l692 5CB6  
                                  l597 5E26                                    l699 5C26  
                                  _GIE 01FE97                                    _abs 5ABC  
                                  _pad 4ADE                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 6232                           _run_checksum 5D7C  
                   _UART1_Transmit_ISR 5E00                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 6254                           __CFG_ZCD$OFF 000000  
                                 l1124 5C0A                                   l1260 2418  
                                 l1228 210C                                   l1254 2332  
                                 l1238 21BC                                   l1272 2570  
                                 l1256 2336                                   l1249 22C8  
                                 l1273 259C                                   l1282 25BC  
                                 l1355 5938                                   l1292 25D4  
                                 l1268 251A                                   l1634 348C  
                                 l1491 564A                                   l1709 44C2  
                                 l2606 5AFC                                   l1487 52AC  
                                 l1911 2FC8                                   l1674 3D48  
                                 l2628 4CF4                                   l2660 4AD4  
                                 l1845 4B3A                                   l1688 3EC2  
                                 l5401 40E0                                   l1865 30B0  
                                 l1892 3B70                                   l5413 41B2  
                                 l5441 47F4                                   l5433 476C  
                                 l5601 49B2                                   l6225 5CCC  
                                 l8101 5538                                   l5605 49E2  
                                 l8111 4B0A                                   l6423 5076  
                                 l6503 453A                                   l8105 5576  
                                 l8121 4B80                                   l5449 48A0  
                                 l5377 5AEC                                   l8201 33CC  
                                 l6249 5C8E                                   l6433 508C  
                                 l6275 5B4E                                   l8115 4B32  
                                 l5395 409A                                   l6443 5098  
                                 l6427 5080                                   l6603 46AA  
                                 l8125 4BCA                                   l8117 4B44  
                                 l8133 5670                                   l5389 4046  
                                 l8205 3408                                   l6349 5D8A  
                                 l6461 50FE                                   l6453 50EE  
                                 l6445 50DC                                   l6437 5090  
                                 l6429 5088                                   l9021 2906  
                                 l6517 4574                                   l6279 5B78  
                                 l6711 5E22                                   l8135 569C  
                                 l8303 2E5E                                   l6287 5EC2  
                                 l5823 5C46                                   l6527 4596  
                                 l6615 46C4                                   l6721 62B4  
                                 l8081 4C22                                   l8241 3C12  
                                 l8233 3BA6                                   l8217 3AF2  
                                 l8313 2F06                                   l5825 5C48  
                                 l9033 2974                                   l9025 2924  
                                 l9009 28D2                                   l6529 45BC  
                                 l6617 46F6                                   l9201 22B8  
                                 l8091 52DA                                   l8171 3108  
                                 l8251 3CC8                                   l8323 2F5E  
                                 l6467 5110                                   l8411 4F5E  
                                 l6547 45E0                                   l6483 44DE  
                                 l6733 5E4E                                   l8093 52FC  
                                 l8181 331A                                   l8237 3BE2  
                                 l6469 5136                                   l5837 5E7A  
                                 l9045 29F2                                   l9037 29A4  
                                 l9029 2948                                   l6565 4618  
                                 l6549 45FA                                   l9301 2574  
                                 l9125 20F6                                   l6743 62D4  
                                 l8167 30EA                                   l8159 30A0  
                                 l8255 3D04                                   l8247 3C9C  
                                 l8319 2F5A                                   l8351 3832  
                                 l5783 5C84                                   l8407 4EEC  
                                 l9047 29F6                                   l9215 2304  
                                 l9127 20FE                                   l8329 2F7A  
                                 l5697 594A                                   l5785 5C86  
                                 l8513 4420                                   l9081 2AA8  
                                 l9057 2A1A                                   l6577 4632  
                                 l6497 451C                                   l9241 23FE  
                                 l9233 238C                                   l9129 2112  
                                 l8291 2D38                                   l8371 3A08  
                                 l8363 395A                                   l8507 43F2  
                                 l9083 2AB0                                   l6579 4670  
                                 l9307 25C0                                   l9219 231A  
                                 l9235 23BE                                   l8357 38F0  
                                 l5893 6208                                   l5797 5EA4  
                                 l8525 4474                                   l8517 443A  
                                 l8509 441A                                   l8533 44A2  
                                 l9085 2AB4                                   l9077 2A96  
                                 l9093 2AD0                                   l8701 3576  
                                 l9309 25D8                                   l9261 2466  
                                 l9173 2228                                   l6759 5BF2  
                                 l8287 2CE6                                   l8279 2C02  
                                 l8383 54AA                                   l8527 449C  
                                 l9087 2ABC                                   l9079 2AA4  
                                 l9095 2B12                                   l9319 263A  
                                 l9263 2470                                   l9191 2294  
                                 l8385 54EC                                   l8465 5440  
                                 l9089 2AC2                                   l8721 35F6  
                                 l8713 35A6                                   l8705 3586  
                                 l9193 2298                                   l9169 2212  
                                 l9275 24DC                                   l9291 254A  
                                 l8733 3674                                   l8725 3626  
                                 l8717 35CA                                   l8709 3596  
                                 l8653 3456                                   l9197 22A0  
                                 l8495 439E                                   l8487 42EE  
                                 l8735 3678                                   l8831 3E26  
                                 l8815 3DBA                                   l8807 3D8A  
                                 l9279 24EC                                   l8745 369C  
                                 l8833 3E32                                   l8817 3DCC  
                                 l9289 251E                                   l8499 43B8  
                                 l8771 3732                                   l8683 3518  
                                 l8675 34E8                                   l8827 3E0E  
                                 l8925 269A                                   l8909 2642  
                                 l8765 3718                                   l8685 3524  
                                 l8781 3746                                   l8845 3E94  
                                 l8837 3E58                                   l8775 373E  
                                 l8783 3788                                   l8855 3EE2  
                                 l8863 3F00                                   l8961 277E  
                                 l8945 2712                                   l8769 372E  
                                 l8697 3558                                   l8873 3F32  
                                 l8955 2756                                   l8939 26E6  
                                 l8891 3F82                                   l8883 3F60  
                                 l8867 3F16                                   l8859 3EF8  
                                 l8981 27F4                                   l8973 27B2  
                                 l8949 2734                                   l8885 3F6E  
                                 l8887 3F72                                   l8895 3F90  
                                 STR_1 207A                                   STR_2 20A8  
                                 l8985 2820                                   l8977 27D0  
                                 l8889 3F7A                                   l8897 3FD2  
                                 STR_3 20C0                                   STR_4 208B  
                                 STR_5 2056                                   STR_6 209A  
                                 l8997 289E                                   l8989 2850  
                                 STR_7 20BA                                   STR_8 20B4  
                                 l8999 28A2                                   STR_9 2001  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u3050 4A8A  
                                 _LATF 003FBF                                   u2510 4040  
                                 u2600 423C                                   u5000 3C08  
                                 u2530 4096                                   u5010 3C4E  
                                 u3340 5752                                   u5100 2D90  
                                 u2541 40A0                                   u2550 40DA  
                                 u2710 492A                                   u2630 4766  
                                 u2560 410C                                   u5040 3D2A  
                                 u5017 3C40                                   u2650 47BC  
                                 u2490 5AD0                                   u5210 5430  
                                 u2580 41EA                                   u2660 47EE  
                                 u5220 42E8                                   u3365 5786  
                                 u3366 5788                                   u3358 5754  
                                 u2670 4820                                   u5080 2C52  
                                 u3560 50EA                                   u2690 48D8  
                                 u5170 3A7C                                   _T6PR 003F93  
                                 u4700 532A                                   u6060 22D4  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4800 3004                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u6066 22D6  
                                 _PMD6 0039C6                                   u4707 531C  
                                 _PMD7 0039C7                                   u4900 3388  
                                 u4820 3074                                   u4670 4C16  
                                 u4910 338C                                   u5455 36C6  
                                 u5551 3E4C                                   u4840 3086  
                                 u5465 36D6                                   u5457 36CA  
                                 u4690 4C92                                   u4930 33A2  
                                 u5475 36E6                                   u5467 36DA  
                                 u4860 30D6                                   u5477 36EA  
                                 u4870 332E                                   u4790 3002  
                                 u4881 335E                                   u5905 2A60  
                                 u4890 3374                                   u4891 3372  
                                 u5915 2A70                                   u5907 2A64  
                                 u5917 2A74                                   u5895 2A50  
                                 u5897 2A54                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 6276                       __end_of_ADCC_ISR 5E00  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01D0  
                                 _ctoa 5652                                   _main 20D0  
                                 _dtoa 2FD2                                   _prec 001F  
                                 _nout 00F7                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3A86                                   btemp 0039  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0025  
            __end_of_SPI1_Exchange8bit 6314                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 6130                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 0059  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 6416  
                     __end_of_INT1_ISR 6426                       __end_of_INT2_ISR 6436  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 52B4  
        __end_of_OSCILLATOR_Initialize 63E4                                  PRLOCK 0039EF  
                      __end_of___aodiv 4264                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 494E                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2042  
                                STR_11 2018                                  STR_12 2069  
                                STR_13 20B4                                  STR_21 20C6  
                                STR_14 2018                                  STR_23 20C9  
                                STR_15 202D                                  STR_16 20B1  
                                STR_25 20C9                                  STR_17 20CC  
                        __CFG_WDTE$OFF 000000                                  STR_19 20C6  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 0059  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 64A0      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 6108                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5A26                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 639E                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002A                                  _flags 0021  
                                _fputc 4BF2             __size_of_send_lcd_cmd_long 0028  
                                _fputs 5528                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0059                                  _width 001D  
                                _putch 6368               _INT1_SetInterruptHandler 608E  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 0039  
                                ltemp1 003D                                  ltemp2 0041  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0039  
                                ttemp1 003C                                  ttemp2 003F  
                                ttemp3 0042                                  ttemp5 003A  
                                ttemp6 003D                                  ttemp7 0041  
                       _secs_gem_state 5074                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5FEE            _UART1_SetRxInterruptHandler 5FC6  
                                wtemp0 0039                                  wtemp1 003B  
                                wtemp2 003D                                  wtemp3 003F  
                                wtemp4 0041                                  wtemp5 0043  
                                wtemp8 003A                        __end_of_sprintf 520A  
                      __end_of_strncmp 4ADE                    ??_UART1_tx_vect_isr 0059  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 6156  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 5B02  
                __end_of_ringBufS_init 5F4E                        __initialization 4CFE  
                    _UART2_rx_vect_isr 6180                           __end_of_ctoa 56DA  
                         __end_of_main 263E                           __end_of_dtoa 3452  
                         __end_of_stoa 3D44             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0059  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 603E  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 0059  
            __end_of_UART1_tx_vect_isr 612E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 5FEE                       _UART1_Initialize 57AA  
                    _UART2_tx_vect_isr 6158                     _UART2_Transmit_ISR 5E2C  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0059                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 5142                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1141 5A1E  
                       __CFG_WDTCCS$SC 000000                                 u125_48 6240  
                               u127_48 6262                                 u129_48 6284  
                               _SCANPR 0039F7                                 u344_40 63A6  
                               u344_46 63A8                                 u370_48 61DA  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u367_48 61B6  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 59D6                    ??_UART2_tx_vect_isr 0059  
            __end_of_UART2_rx_vect_isr 61A6             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 6446                       _UART2_Initialize 58CE  
                               _WaitMs 5EAC   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 55C0  
                               _memset 379A                                 clear_0 4DA0  
                               clear_1 4DAC                                 clear_2 4DB8  
                               clear_3 4DC4                                 clear_4 4DD0  
                               _printf 580E                     _eaDogM_WriteString 53F4  
                            ?_ADCC_ISR 0059                                 _strlen 52B4  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 5A72  
                       _PMD_Initialize 63E4   __end_of_INT2_DefaultInterruptHandler 64AC  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 64AA  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 617E  
                               lltemp0 0039                                 lltemp1 0041  
                               lltemp2 0049                                 lltemp3 0051  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 5988                       __end_of_vfprintf 5528  
                           _StartTimer 5D08                        _CLC1_Initialize 6210  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5B48  
                    _SYSTEM_Initialize 5B8E                             __accesstop 0060  
              __end_of__initialization 4DE2                              ?_INT0_ISR 0059  
                            ?_INT1_ISR 0059                              ?_INT2_ISR 0059  
            __end_of_CLKREF_Initialize 6450                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 5BD0  
               __end_of_ringBufS_flush 5652                         __pcstackCOMRAM 0059  
                           ___inthi_sp 0D54                           __pidataBANK0 5870  
                         __pidataBANK1 4FA4                           __pidataBANK2 62D8  
                         __pidataBANK3 5D44                              ?_TMR5_ISR 0059  
                            ?_TMR6_ISR 0059                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4CFE                          __end_of_fputs 55C0  
                __end_of_TMR5_CallBack 61EE                          __end_of_putch 6382  
              __end_of_TMR6_Initialize 6016                 __end_of_PMD_Initialize 63F8  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 0059  
                __end_of_TMR6_CallBack 61CA            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 645C  
     __end_of_INT2_SetInterruptHandler 608E               _UART2_RxInterruptHandler 0011  
            __end_of_SYSTEM_Initialize 5BD0                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 634C  
                           __pbssBANK0 00BE                             __pbssBANK1 01D0  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001A                             ??_INT0_ISR 0059  
                           ??_INT1_ISR 0059                             ??_INT2_ISR 0059  
                    __end_of_TimerDone 6210                       _DMA1_DMADCNT_ISR 6450  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 6330  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 603E  
              __end_of_ADCC_Initialize 5ABC                             ??_TMR5_ISR 005A  
                           ??_TMR6_ISR 0059                     __size_of_secs_send 0268  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 6298                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 0059                       _DMA1_DMASCNT_ISR 6438  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 6232  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 0059                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6368  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 5C10  
                   __end_of_UART1_Read 5D08                     __end_of_UART2_Read 5CCA  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 580E  
                      __size_of_WaitMs 002A                                ___aodiv 3FE4  
                              ___aomod 470E                             _m_protocol 263E  
            __end_of_UART1_Receive_ISR 62B8                           __psmallconst 2000  
                 __end_of_init_display 4ED2                                __pcinit 4CFE  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 63F8  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20D0  
                              __ptext1 3D44                                __ptext2 44CC  
                              __ptext3 5142                                __ptext4 3452  
                              __ptext5 263E                                __ptext6 4264  
                              __ptext7 4ED2                                __ptext8 5E58  
                              __ptext9 6472                      _UART2_Receive_ISR 62B8  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us261999 424E  
                              us272999 493C                  _OSCILLATOR_Initialize 63CE  
                              us359999 4700                           __size_of_abs 0046  
                              _r_block 00BE                           __size_of_pad 0114  
                              us478999 2FEC                                us495999 3A98  
                              _mode_sw 002C                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 592C  
                   m_protocol@rxData_l 002B             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 5142                                _strncmp 494E  
                 end_of_initialization 4DE2                      __end_of_secs_send 44CC  
             _INT2_SetInterruptHandler 6066               __size_of_secs_II_message 0242  
                           _r_protocol 3452    __end_of_UART1_SetTxInterruptHandler 5FC6  
          _UART1_SetTxInterruptHandler 5F9E    __end_of_UART2_SetRxInterruptHandler 5F9E  
          _UART2_SetRxInterruptHandler 5F76                             _t_protocol 3D44  
                    __end_of_vfpfcnvrt 2FD2                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 649E              __end_of_UART2_Receive_ISR 62D8  
                       wdtdelay@dcount 00EA                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005A                         _block_checksum 4ED2  
                _INT1_InterruptHandler 0017                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 6016                  _TMR5_InterruptHandler 00EE  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002C  
  __end_of_ADCC_SetADIInterruptHandler 6106            _ADCC_SetADIInterruptHandler 60DE  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 56DA                        _SPI1_Initialize 63B8  
                     _UART1_put_buffer 5E82                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5ED6           __end_of_INTERRUPT_Initialize 57AA  
               __end_of_block_checksum 4FA4   __end_of_INT0_DefaultInterruptHandler 64A8  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 64A6  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 64AE  
                    __size_of_TMR5_ISR 004E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3A86  
                       __end_of_printf 5870               __end_of_DMA1_DMADCNT_ISR 645A  
                     _UART2_put_buffer 5E58                  __end_of_INT0_CallBack 6254  
                       __end_of_strlen 5356                    start_initialization 4CFE  
 __end_of_TMR5_DefaultInterruptHandler 63B8  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 639E        __size_of_PIN_MANAGER_Initialize 009E  
                          __end_of_abs 5B02                  __end_of_INT1_CallBack 6276  
                          __end_of_pad 4BF2                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5F26                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 6298                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 6446  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 6468  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 61EE  
                        _ringBufS_init 5F26                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK2 02C0  
                          __pdataBANK3 03C6             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5A72                        run_checksum@sum 00F9  
      __end_of_eaDogM_WriteStringAtPos 5DD4                __end_of_DMA1_Initialize 5744  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 60DE  
              __end_of_SPI1_Initialize 63CE               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 04E6  
            __size_of_ringBufS_put_dma 00AA                           _init_display 4DE8  
               __end_of_DMA1_DMAOR_ISR 6472                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00F1  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 5356  
                 __end_of_wait_lcd_set 6498                              __ptext100 62B8  
                            __ptext101 6384                              __ptext110 61CA  
                            __ptext102 61A6                              __ptext111 639E  
                            __ptext103 5B48                              __ptext112 0000  
                            __ptext104 6438                              __ptext105 6450  
                            __ptext106 645C                              __ptext107 6468  
                            __ptext108 59D8                              __ptext109 5BD0  
                   __end_of_StartTimer 5D44                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5DD4  
                  __size_of_r_protocol 0348                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 02A0                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5744                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 0059  
                             _INT0_ISR 6408                               _INT1_ISR 6418  
                             _INT2_ISR 6428                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 4264  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00D7  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             _PIR1bits 0039A1                               i2u441_48 616A  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u443_48 6192                               i2u437_48 611A  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u439_48 6142  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
                             i2u595_48 5DEC               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5E2C                               _TMR5_ISR 59D8  
                             _TMR6_ISR 6384                              _vfpfcnvrt 2B24  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 61CA  
                            _start_lcd 6498              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 61A6               __end_of_UART1_put_buffer 5EAC  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5C8C                    __end_of_UART2_Write 5C4E  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4D12                              copy_data1 4D34  
                            copy_data2 4D56                              copy_data3 4D78  
             _INT0_SetInterruptHandler 60B6                 _uart1TxBufferRemaining 0036  
  __end_of_UART2_SetTxInterruptHandler 5F76            _UART2_SetTxInterruptHandler 5F4E  
                         _uart1RxCount 0033               __end_of_UART2_put_buffer 5E82  
                         _uart2RxCount 002D                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5DA8                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 6314  
                         _send_lcd_cmd 5EFE                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 6330  
                __end_of_DMA1_DMAA_ISR 6466   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 0059               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 6406                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005A                               __ptext10 5C10  
                             __ptext11 5E82                               __ptext20 5C8C  
                             __ptext12 647A                               __ptext21 648A  
                             __ptext13 5C4E                               __ptext30 63F8  
                             __ptext22 5CCA                               __ptext14 5074  
                             __ptext31 5988                               __ptext23 4DE8  
                             __ptext15 5D7C                               __ptext40 2B24  
                             __ptext32 6492                               __ptext24 5ED6  
                             __ptext16 5EAC                               __ptext41 494E  
                             __ptext33 6314                               __ptext25 5EFE  
                             __ptext17 61EE                               __ptext50 5528  
                             __ptext42 3A86                               __ptext34 592C  
                             __ptext26 62F6                               __ptext18 5D08  
                             __ptext51 4BF2                               __ptext43 2FD2  
                             __ptext35 6498                               __ptext27 5F26  
                             __ptext19 6482                               __ptext60 5FC6  
                             __ptext52 6368                               __ptext44 5ABC  
                             __ptext36 55C0                               __ptext28 5DA8  
                             __ptext61 5FEE                               __ptext53 520A  
                             __ptext45 470E                               __ptext37 379A  
                             __ptext29 53F4                               __ptext70 5744  
                             __ptext62 6016                               __ptext54 5B8E  
                             __ptext46 3FE4                               __ptext38 580E  
                             __ptext71 5A26                               __ptext63 5B02  
                             __ptext55 58CE                               __ptext47 5652  
                             __ptext39 5490                               __ptext80 60DE  
                             __ptext72 6066                               __ptext64 603E  
                             __ptext56 5F4E                               __ptext48 4ADE  
                             __ptext81 6408                               __ptext73 608E  
                             __ptext65 63B8                               __ptext57 5F76  
                             __ptext49 52B4                               __ptext90 64A0  
                             __ptext82 6232                               __ptext74 60B6  
                             __ptext66 63E4                               __ptext58 57AA  
                             __ptext91 5DD4                               __ptext83 64A6  
                             __ptext75 634C                               __ptext67 5356  
                             __ptext59 5F9E                               __ptext92 64AC  
                             __ptext84 6418                               __ptext76 56DA  
                             __ptext68 63CE                               __ptext93 6108  
                             __ptext85 6254                               __ptext77 6446  
                             __ptext69 6330                               __ptext94 5E00  
                             __ptext86 64A8                               __ptext78 6210  
                             __ptext95 6130                               __ptext87 6428  
                             __ptext79 5A72                               __ptext96 6298  
                             __ptext88 6276                               __ptext97 6158  
                             __ptext89 64AA                               __ptext98 5E2C  
                             __ptext99 6180                        _secs_II_message 44CC  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 520A  
                   __end_of_m_protocol 2B24                          __size_of_ctoa 0088  
                        __size_of_main 056E                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0059  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 00F4                              stoa@F1144 0100  
                   ??_DMA1_DMASCNT_ISR 005A                               _spi_link 00CB  
                             _wdtdelay 592C             __end_of_UART2_Transmit_ISR 5E58  
                             _vfprintf 5490                    secs_gem_state@block 0027  
                    _UART1_is_rx_ready 648A                            _UART1_Write 5C4E  
 __end_of_INT1_DefaultInterruptHandler 64AA  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 64A8                            _UART2_Write 5C10  
                    _UART1_is_tx_ready 647A                        r_protocol@retry 005D  
                    t_protocol@requeue 0028                          ??_Default_ISR 0059  
                   __end_of_r_protocol 379A                            _uart1RxHead 0035  
                          _uart1TxHead 0038                            _uart2RxHead 002F  
                          _uart1RxTail 0034                            _uart2TxHead 0032  
                          _uart1TxTail 0037                            _uart2RxTail 002E  
                          _uart2TxTail 0031                           _wait_lcd_set 6492  
                   _EXT_INT_Initialize 5A26   __end_of_TMR6_DefaultInterruptHandler 5B8E  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 5B48  
                   __end_of_t_protocol 3FE4   __end_of_ADCC_DefaultInterruptHandler 64AE  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 64AC  
                             intlevel2 0000                      _send_lcd_cmd_long 5ED6  
              __size_of_secs_gem_state 00CE                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 5490                __end_of_NCO1_Initialize 634C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 6492  
                           _UART1_Read 5CCA                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 5C8C              __end_of_UART1_is_tx_ready 6482  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 6482  
               _uart2TxBufferRemaining 0030                      _UART2_is_tx_ready 6472  
                     _send_lcd_cmd_dma 5988                  TMR5_ISR@CountCallBack 0023  
              __end_of_secs_II_message 470E       __end_of_INT1_SetInterruptHandler 60B6  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E3  
                     ??_DMA1_DMAOR_ISR 005A               _UART1_TxInterruptHandler 0008  
                      t_protocol@retry 0029              __end_of_send_lcd_cmd_long 5EFE  
                  __end_of_Default_ISR 64A6         __end_of_PIN_MANAGER_Initialize 53F4  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5DA8  
            __size_of_UART2_Initialize 005E  
