

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 04:12:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=4,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=4,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=4,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=4,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=4,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=4,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=4,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	text146,global,reloc=4,class=CODE,delta=1
   172                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   173                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   174                           	psect	text147,global,reloc=4,class=CODE,delta=1
   175                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   176                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   177  0000                     
   178                           ; Version 2.10
   179                           ; Generated 31/07/2019 GMT
   180                           ; 
   181                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC18F57K42 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     
   213 ;;_mode	offset	0
   214 ;;_channel	offset=-1 (param)
   215 ;;_s	offset=-2 (param)
   216 ;;_cmd	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_data	offset=-1 (param)
   219 ;;__this	offset=-2 (param)
   220 ;;_i	offset=-1 (param)
   221 ;;_cmd	offset=-1 (param)
   222 ;;_i	offset	0
   223 ;;_lp_speed	offset	0
   224 ;;_new	offset=-4 (param)
   225 ;;_bn	offset=-5 (param)
   226 ;;_slow	offset=-6 (param)
   227 ;;_chan	offset=-1 (param)
   228 ;;_to_what	offset=-2 (param)
   229 ;;_u	offset	0
   230 ;;_s	offset=-2 (param)
   231 ;;_index	offset=-1 (param)
   232 ;;_arg	offset	0
   233 ;;_exp	offset	4
   234 ;;_sign	offset=-1 (param)
   235 ;;_val	offset=-5 (param)
   236 ;;_flipper	offset=-1 (param)
   237 ;;_f	offset	0
   238 ;;_ap	offset	6
   239 ;;_s	offset=-3 (param)
   240 ;;_fmt	offset=-5 (param)
   241 ;;_line	offset=-1 (param)
   242 ;;_vterm	offset=-2 (param)
   243 ;;_numMilliseconds	offset=-2 (param)
   244 ;;_vterm	offset=-1 (param)
   245 ;;_r	offset=-1 (param)
   246 ;;_c	offset=-2 (param)
   247 ;;_strPtr	offset=-4 (param)
   248 ;;_strPtr	offset=-1 (param)
   249 ;;_delay	offset=-4 (param)
   250 ;;_strPtr	offset=-2 (param)
   251 ;;__this	offset=-2 (param)
   252 ;;_clearBuffer	offset=-3 (param)
   253 ;;_s	offset	0
   254 ;;_k	offset	2
   255 ;;_dest	offset=-2 (param)
   256 ;;_c	offset=-4 (param)
   257 ;;_n	offset=-6 (param)
   258 ;;_ap	offset	0
   259 ;;_fmt	offset=-3 (param)
   260 ;;_cfmt	offset	0
   261 ;;_fp	offset=-2 (param)
   262 ;;_fmt	offset=-4 (param)
   263 ;;_ap	offset=-6 (param)
   264 ;;_vfpfcnvrt$4425	offset	0
   265 ;;_vfpfcnvrt$4431	offset	2
   266 ;;_vfpfcnvrt$4424	offset	4
   267 ;;_llu	offset	6
   268 ;;_ll	offset	14
   269 ;;_f	offset	22
   270 ;;_ct	offset	26
   271 ;;_cp	offset	29
   272 ;;_c	offset	31
   273 ;;_fp	offset=-2 (param)
   274 ;;_fmt	offset=-4 (param)
   275 ;;_ap	offset=-6 (param)
   276 ;;_xtoa$4410	offset	0
   277 ;;_xtoa$4409	offset	2
   278 ;;_n	offset	4
   279 ;;_c	offset	12
   280 ;;_i	offset	14
   281 ;;_w	offset	16
   282 ;;_p	offset	18
   283 ;;_fp	offset=-2 (param)
   284 ;;_d	offset=-10 (param)
   285 ;;_x	offset=-11 (param)
   286 ;;_toupper$5070	offset	0
   287 ;;_c	offset=-2 (param)
   288 ;;_c	offset=-2 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_r	offset	0
   291 ;;_l	offset	2
   292 ;;__l	offset=-2 (param)
   293 ;;__r	offset=-4 (param)
   294 ;;_n	offset=-6 (param)
   295 ;;_nuls	offset	0
   296 ;;_l	offset	7
   297 ;;_p	offset	9
   298 ;;_cp	offset	11
   299 ;;_w	offset	13
   300 ;;_i	offset	15
   301 ;;_fp	offset=-2 (param)
   302 ;;_s	offset=-4 (param)
   303 ;;_efgtoa$4389	offset	0
   304 ;;_efgtoa$4388	offset	2
   305 ;;_efgtoa$4387	offset	4
   306 ;;_efgtoa$4383	offset	6
   307 ;;_efgtoa$4379	offset	8
   308 ;;_efgtoa$4378	offset	10
   309 ;;_u	offset	12
   310 ;;_g	offset	16
   311 ;;_l	offset	20
   312 ;;_h	offset	24
   313 ;;_ou	offset	28
   314 ;;_n	offset	32
   315 ;;_e	offset	34
   316 ;;_i	offset	36
   317 ;;_w	offset	38
   318 ;;_p	offset	40
   319 ;;_sign	offset	42
   320 ;;_d	offset	44
   321 ;;_ne	offset	46
   322 ;;_m	offset	48
   323 ;;_pp	offset	50
   324 ;;_t	offset	52
   325 ;;_mode	offset	54
   326 ;;_nmode	offset	55
   327 ;;_fp	offset=-2 (param)
   328 ;;_f	offset=-6 (param)
   329 ;;_c	offset=-7 (param)
   330 ;;_tolower$5055	offset	0
   331 ;;_c	offset=-2 (param)
   332 ;;_c	offset=-2 (param)
   333 ;;_d	offset	0
   334 ;;_s	offset	2
   335 ;;_dest	offset=-2 (param)
   336 ;;_src	offset=-4 (param)
   337 ;;_u	offset	0
   338 ;;_m	offset	4
   339 ;;_e	offset	8
   340 ;;_x	offset=-4 (param)
   341 ;;_u	offset	0
   342 ;;_e	offset	4
   343 ;;_x	offset=-4 (param)
   344 ;;_exp1	offset	0
   345 ;;_sign1	offset	1
   346 ;;_f1	offset=-4 (param)
   347 ;;_b	offset=-4 (param)
   348 ;;_a	offset=-8 (param)
   349 ;;_grs	offset	0
   350 ;;_bexp	offset	1
   351 ;;_aexp	offset	2
   352 ;;_signs	offset	3
   353 ;;_b	offset=-4 (param)
   354 ;;_a	offset=-8 (param)
   355 ;;_f1	offset=-4 (param)
   356 ;;_prod	offset	0
   357 ;;_grs	offset	4
   358 ;;_temp	offset	8
   359 ;;_bexp	offset	10
   360 ;;_aexp	offset	11
   361 ;;_sign	offset	12
   362 ;;_b	offset=-4 (param)
   363 ;;_a	offset=-8 (param)
   364 ;;_ff1	offset=-4 (param)
   365 ;;_ff2	offset=-8 (param)
   366 ;;_ff1	offset=-4 (param)
   367 ;;_ff2	offset=-8 (param)
   368 ;;_grs	offset	0
   369 ;;_rem	offset	4
   370 ;;_new_exp	offset	8
   371 ;;_aexp	offset	10
   372 ;;_bexp	offset	11
   373 ;;_sign	offset	12
   374 ;;_b	offset=-4 (param)
   375 ;;_a	offset=-8 (param)
   376 ;;_sign	offset	0
   377 ;;_counter	offset	1
   378 ;;_dividend	offset=-2 (param)
   379 ;;_divisor	offset=-4 (param)
   380 ;;_quotient	offset	0
   381 ;;_sign	offset	2
   382 ;;_counter	offset	3
   383 ;;_dividend	offset=-2 (param)
   384 ;;_divisor	offset=-4 (param)
   385 ;;_dtoa$4355	offset	0
   386 ;;_n	offset	2
   387 ;;_i	offset	10
   388 ;;_s	offset	12
   389 ;;_w	offset	14
   390 ;;_p	offset	16
   391 ;;_fp	offset=-2 (param)
   392 ;;_d	offset=-10 (param)
   393 ;;_a	offset=-2 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-8 (param)
   397 ;;_divisor	offset=-16 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	8
   400 ;;_counter	offset	9
   401 ;;_dividend	offset=-8 (param)
   402 ;;_divisor	offset=-16 (param)
   403 ;;_w	offset	0
   404 ;;_fp	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_w	offset	0
   407 ;;_i	offset	2
   408 ;;_fp	offset=-2 (param)
   409 ;;_buf	offset=-4 (param)
   410 ;;_p	offset=-6 (param)
   411 ;;_a	offset	0
   412 ;;_s	offset=-2 (param)
   413 ;;_i	offset	0
   414 ;;_c	offset	2
   415 ;;_s	offset=-2 (param)
   416 ;;_fp	offset=-4 (param)
   417 ;;_c	offset=-2 (param)
   418 ;;_fp	offset=-4 (param)
   419 ;;_c	offset=-1 (param)
   420 ;;__this	offset=-2 (param)
   421 ;;_c	offset=-3 (param)
   422 ;;_atoi$4908	offset	0
   423 ;;_atoi$4906	offset	2
   424 ;;_atoi$4907	offset	4
   425 ;;_n	offset	5
   426 ;;_neg	offset	7
   427 ;;_s	offset=-2 (param)
   428 ;;_isspace$4946	offset	0
   429 ;;_c	offset=-2 (param)
   430 ;;_c	offset=-2 (param)
   431 ;;_vterm	offset=-1 (param)
   432 ;;_new_response_info	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_level	offset=-2 (param)
   435 ;;_dutyValue	offset=-2 (param)
   436 ;;_timer	offset=-1 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_count	offset=-3 (param)
   439 ;;_InterruptHandler	offset=-3 (param)
   440 ;;_InterruptHandler	offset=-3 (param)
   441 ;;_InterruptHandler	offset=-3 (param)
   442 ;;_InterruptHandler	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_state	offset	0
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_i	offset	0
   451 ;;_sw_value	offset	1
   452 ;;_timerVal	offset=-2 (param)
   453 ;;_channel	offset=-1 (param)
   454 ;;_i	offset	0
   455                           
   456                           	psect	idataBANK0
   457  017E22                     __pidataBANK0:
   458                           	opt callstack 0
   459                           
   460                           ;initializer for _R
   461  017E22  0000               	dw	0
   462  017E24  0000               	dw	0
   463  017E26  0000               	dw	0
   464  017E28  0000               	dw	0
   465  017E2A  0000               	dw	0
   466  017E2C  0000               	dw	0
   467  017E2E  0000               	dw	0
   468  017E30  0000               	dw	0
   469  017E32  0000               	dw	0
   470  017E34  0000               	dw	0
   471  017E36  0000               	dw	0
   472  017E38  0000               	dw	0
   473  017E3A  0000               	dw	0
   474  017E3C  0000               	dw	0
   475  017E3E  0000               	dw	0
   476  017E40  0000               	dw	0
   477  017E42  0F6C               	dw	3948
   478  017E44  0F99               	dw	3993
   479  017E46  00                 	db	0
   480  017E47  0000               	dw	0
   481  017E49  00                 	db	0
   482                           
   483                           ;initializer for stoa@F1166
   484  017E4A  28                 	db	40
   485  017E4B  6E                 	db	110
   486  017E4C  75                 	db	117
   487  017E4D  6C                 	db	108
   488  017E4E  6C                 	db	108
   489  017E4F  29                 	db	41
   490  017E50  00                 	db	0
   491                           
   492                           	psect	idataBANK1
   493  016CC4                     __pidataBANK1:
   494                           	opt callstack 0
   495                           
   496                           ;initializer for _V
   497  016CC4  00                 	db	0
   498  016CC5  00                 	db	0
   499  016CC6  00                 	db	0
   500  016CC7  00                 	db	0
   501  016CC8  00                 	db	0
   502  016CC9  00                 	db	0
   503  016CCA  00                 	db	0
   504  016CCB  00                 	db	0
   505  016CCC  00                 	db	0
   506  016CCD  00                 	db	0
   507  016CCE  00                 	db	0
   508  016CCF  00                 	db	0
   509  016CD0  00                 	db	0
   510  016CD1  00                 	db	0
   511  016CD2  00                 	db	0
   512  016CD3  00                 	db	0
   513  016CD4  00                 	db	0
   514  016CD5  00                 	db	0
   515  016CD6  00                 	db	0
   516  016CD7  00                 	db	0
   517  016CD8  00                 	db	0
   518  016CD9  00                 	db	0
   519  016CDA  00                 	db	0
   520  016CDB  00                 	db	0
   521  016CDC  00                 	db	0
   522  016CDD  00                 	db	0
   523  016CDE  00                 	db	0
   524  016CDF  00                 	db	0
   525  016CE0  00                 	db	0
   526  016CE1  00                 	db	0
   527  016CE2  00                 	db	0
   528  016CE3  00                 	db	0
   529  016CE4  00                 	db	0
   530  016CE5  00                 	db	0
   531  016CE6  00                 	db	0
   532  016CE7  00                 	db	0
   533  016CE8  00                 	db	0
   534  016CE9  00                 	db	0
   535  016CEA  00                 	db	0
   536  016CEB  00                 	db	0
   537  016CEC  00                 	db	0
   538  016CED  00                 	db	0
   539  016CEE  00                 	db	0
   540  016CEF  00                 	db	0
   541  016CF0  00                 	db	0
   542  016CF1  00                 	db	0
   543  016CF2  00                 	db	0
   544  016CF3  00                 	db	0
   545  016CF4  00                 	db	0
   546  016CF5  00                 	db	0
   547  016CF6  00                 	db	0
   548  016CF7  00                 	db	0
   549  016CF8  00                 	db	0
   550  016CF9  00                 	db	0
   551  016CFA  00                 	db	0
   552  016CFB  00                 	db	0
   553  016CFC  00                 	db	0
   554  016CFD  00                 	db	0
   555  016CFE  00                 	db	0
   556  016CFF  00                 	db	0
   557  016D00  00                 	db	0
   558  016D01  00                 	db	0
   559  016D02  00                 	db	0
   560  016D03  00                 	db	0
   561  016D04  00                 	db	0
   562  016D05  00                 	db	0
   563  016D06  00                 	db	0
   564  016D07  00                 	db	0
   565  016D08  00                 	db	0
   566  016D09  00                 	db	0
   567  016D0A  00                 	db	0
   568  016D0B  00                 	db	0
   569  016D0C  00                 	db	0
   570  016D0D  00                 	db	0
   571  016D0E  00                 	db	0
   572  016D0F  00                 	db	0
   573  016D10  00                 	db	0
   574  016D11  00                 	db	0
   575  016D12  00                 	db	0
   576  016D13  00                 	db	0
   577  016D14  00                 	db	0
   578  016D15  00                 	db	0
   579  016D16  00                 	db	0
   580  016D17  00                 	db	0
   581  016D18  00                 	db	0
   582  016D19  00                 	db	0
   583  016D1A  00                 	db	0
   584  016D1B  00                 	db	0
   585  016D1C  00                 	db	0
   586  016D1D  00                 	db	0
   587  016D1E  00                 	db	0
   588  016D1F  00                 	db	0
   589  016D20  00                 	db	0
   590  016D21  00                 	db	0
   591  016D22  00                 	db	0
   592  016D23  00                 	db	0
   593  016D24  00                 	db	0
   594  016D25  00                 	db	0
   595  016D26  00                 	db	0
   596  016D27  00                 	db	0
   597  016D28  00                 	db	0
   598  016D29  00                 	db	0
   599  016D2A  00                 	db	0
   600  016D2B  00                 	db	0
   601  016D2C  00                 	db	0
   602  016D2D  00                 	db	0
   603  016D2E  00                 	db	0
   604  016D2F  00                 	db	0
   605  016D30  00                 	db	0
   606  016D31  00                 	db	0
   607  016D32  00                 	db	0
   608  016D33  00                 	db	0
   609  016D34  00                 	db	0
   610  016D35  00                 	db	0
   611  016D36  00                 	db	0
   612  016D37  00                 	db	0
   613  016D38  00                 	db	0
   614  016D39  00                 	db	0
   615  016D3A  00                 	db	0
   616  016D3B  00                 	db	0
   617  016D3C  00                 	db	0
   618  016D3D  00                 	db	0
   619  016D3E  00                 	db	0
   620  016D3F  00                 	db	0
   621  016D40  00                 	db	0
   622  016D41  00                 	db	0
   623  016D42  00                 	db	0
   624  016D43  00                 	db	0
   625  016D44  00                 	db	0
   626  016D45  0000               	dw	0
   627  016D47  0000               	dw	0
   628  016D49  0000               	dw	0
   629  016D4B  0000               	dw	0
   630  016D4D  00                 	db	0
   631  016D4E  00                 	db	0
   632  016D4F  00                 	db	0
   633  016D50  00                 	db	0
   634  016D51  00                 	db	0
   635  016D52  00                 	db	0
   636  016D53  0000               	dw	0
   637  016D55  0000               	dw	0
   638  016D57  0000               	dw	0
   639  016D59  0000               	dw	0
   640  016D5B  0000               	dw	0
   641  016D5D  0000               	dw	0
   642  016D5F  00                 	db	0
   643  016D60  00                 	db	0
   644  016D61  00                 	db	0
   645  016D62  00                 	db	0
   646  016D63  00                 	db	0
   647  016D64  00                 	db	0
   648  016D65  00                 	db	0
   649  016D66  00                 	db	0
   650  016D67  00                 	db	0
   651  016D68  00                 	db	0
   652  016D69  0000               	dw	0
   653  016D6B  0000               	dw	0
   654  016D6D  2D                 	db	45
   655  016D6E  00                 	db	0
   656  016D6F  0000               	dw	0
   657  016D71  0000               	dw	0
   658  016D73  0000               	dw	0
   659  016D75  0000               	dw	0
   660  016D77  0000               	dw	0
   661  016D79  0000               	dw	0
   662  016D7B  0000               	dw	0
   663  016D7D  0000               	dw	0
   664                           
   665                           	psect	idataBANK2
   666  018492                     __pidataBANK2:
   667                           	opt callstack 0
   668                           
   669                           ;initializer for _port_data
   670  018492  FF                 	db	255
   671  018493  00                 	db	0
   672  018494  FF                 	db	255
   673  018495  00                 	db	0
   674  018496  FF                 	db	255
   675  018497  00                 	db	0
   676  018498  FF                 	db	255
   677  018499  00                 	db	0
   678  01849A  FF                 	db	255
   679  01849B  00                 	db	0
   680  01849C  FF                 	db	255
   681  01849D  00                 	db	0
   682  01849E  FF                 	db	255
   683  01849F  00                 	db	0
   684  0184A0  FF                 	db	255
   685  0184A1  00                 	db	0
   686                           
   687                           	psect	mediumconst
   688  00FE5E                     __pmediumconst:
   689                           	opt callstack 0
   690  00FE5E  00                 	db	0
   691  00FE5F                     _T:
   692                           	opt callstack 0
   693  00FE5F  63                 	db	99
   694  00FE60  6F                 	db	111
   695  00FE61  6D                 	db	109
   696  00FE62  6D                 	db	109
   697  00FE63  61                 	db	97
   698  00FE64  6E                 	db	110
   699  00FE65  64                 	db	100
   700  00FE66  73                 	db	115
   701  00FE67  20                 	db	32
   702  00FE68  31                 	db	49
   703  00FE69  00                 	db	0
   704  00FE6A  00                 	db	0
   705  00FE6B  00                 	db	0
   706  00FE6C  00                 	db	0
   707  00FE6D  00                 	db	0
   708  00FE6E  00                 	db	0
   709  00FE6F  00                 	db	0
   710  00FE70  00                 	db	0
   711  00FE71  64                 	db	100
   712  00FE72  69                 	db	105
   713  00FE73  73                 	db	115
   714  00FE74  70                 	db	112
   715  00FE75  6C                 	db	108
   716  00FE76  61                 	db	97
   717  00FE77  79                 	db	121
   718  00FE78  73                 	db	115
   719  00FE79  20                 	db	32
   720  00FE7A  31                 	db	49
   721  00FE7B  00                 	db	0
   722  00FE7C  00                 	db	0
   723  00FE7D  00                 	db	0
   724  00FE7E  00                 	db	0
   725  00FE7F  00                 	db	0
   726  00FE80  00                 	db	0
   727  00FE81  00                 	db	0
   728  00FE82  00                 	db	0
   729  00FE83  63                 	db	99
   730  00FE84  6F                 	db	111
   731  00FE85  6D                 	db	109
   732  00FE86  6D                 	db	109
   733  00FE87  61                 	db	97
   734  00FE88  6E                 	db	110
   735  00FE89  64                 	db	100
   736  00FE8A  73                 	db	115
   737  00FE8B  20                 	db	32
   738  00FE8C  32                 	db	50
   739  00FE8D  00                 	db	0
   740  00FE8E  00                 	db	0
   741  00FE8F  00                 	db	0
   742  00FE90  00                 	db	0
   743  00FE91  00                 	db	0
   744  00FE92  00                 	db	0
   745  00FE93  00                 	db	0
   746  00FE94  00                 	db	0
   747  00FE95  64                 	db	100
   748  00FE96  69                 	db	105
   749  00FE97  73                 	db	115
   750  00FE98  70                 	db	112
   751  00FE99  6C                 	db	108
   752  00FE9A  61                 	db	97
   753  00FE9B  79                 	db	121
   754  00FE9C  73                 	db	115
   755  00FE9D  20                 	db	32
   756  00FE9E  32                 	db	50
   757  00FE9F  00                 	db	0
   758  00FEA0  00                 	db	0
   759  00FEA1  00                 	db	0
   760  00FEA2  00                 	db	0
   761  00FEA3  00                 	db	0
   762  00FEA4  00                 	db	0
   763  00FEA5  00                 	db	0
   764  00FEA6  00                 	db	0
   765  00FEA7  63                 	db	99
   766  00FEA8  6F                 	db	111
   767  00FEA9  6D                 	db	109
   768  00FEAA  6D                 	db	109
   769  00FEAB  61                 	db	97
   770  00FEAC  6E                 	db	110
   771  00FEAD  64                 	db	100
   772  00FEAE  73                 	db	115
   773  00FEAF  20                 	db	32
   774  00FEB0  33                 	db	51
   775  00FEB1  00                 	db	0
   776  00FEB2  00                 	db	0
   777  00FEB3  00                 	db	0
   778  00FEB4  00                 	db	0
   779  00FEB5  00                 	db	0
   780  00FEB6  00                 	db	0
   781  00FEB7  00                 	db	0
   782  00FEB8  00                 	db	0
   783  00FEB9  64                 	db	100
   784  00FEBA  69                 	db	105
   785  00FEBB  73                 	db	115
   786  00FEBC  70                 	db	112
   787  00FEBD  6C                 	db	108
   788  00FEBE  61                 	db	97
   789  00FEBF  79                 	db	121
   790  00FEC0  73                 	db	115
   791  00FEC1  20                 	db	32
   792  00FEC2  33                 	db	51
   793  00FEC3  00                 	db	0
   794  00FEC4  00                 	db	0
   795  00FEC5  00                 	db	0
   796  00FEC6  00                 	db	0
   797  00FEC7  00                 	db	0
   798  00FEC8  00                 	db	0
   799  00FEC9  00                 	db	0
   800  00FECA  00                 	db	0
   801  00FECB  63                 	db	99
   802  00FECC  6F                 	db	111
   803  00FECD  6D                 	db	109
   804  00FECE  6D                 	db	109
   805  00FECF  61                 	db	97
   806  00FED0  6E                 	db	110
   807  00FED1  64                 	db	100
   808  00FED2  73                 	db	115
   809  00FED3  20                 	db	32
   810  00FED4  34                 	db	52
   811  00FED5  00                 	db	0
   812  00FED6  00                 	db	0
   813  00FED7  00                 	db	0
   814  00FED8  00                 	db	0
   815  00FED9  00                 	db	0
   816  00FEDA  00                 	db	0
   817  00FEDB  00                 	db	0
   818  00FEDC  00                 	db	0
   819  00FEDD  64                 	db	100
   820  00FEDE  69                 	db	105
   821  00FEDF  73                 	db	115
   822  00FEE0  70                 	db	112
   823  00FEE1  6C                 	db	108
   824  00FEE2  61                 	db	97
   825  00FEE3  79                 	db	121
   826  00FEE4  73                 	db	115
   827  00FEE5  20                 	db	32
   828  00FEE6  34                 	db	52
   829  00FEE7  00                 	db	0
   830  00FEE8  00                 	db	0
   831  00FEE9  00                 	db	0
   832  00FEEA  00                 	db	0
   833  00FEEB  00                 	db	0
   834  00FEEC  00                 	db	0
   835  00FEED  00                 	db	0
   836  00FEEE  00                 	db	0
   837  00FEEF                     __end_of_T:
   838                           	opt callstack 0
   839  0000                     _IVTADL	set	14493
   840  0000                     _IVTADH	set	14494
   841  0000                     _IVTADU	set	14495
   842  0000                     _PIR4bits	set	14756
   843  0000                     _PIE8bits	set	14744
   844  0000                     _PIR8bits	set	14760
   845  0000                     _SCANPR	set	14839
   846  0000                     _DMA2PR	set	14836
   847  0000                     _DMA1PR	set	14835
   848  0000                     _MAINPR	set	14834
   849  0000                     _ISRPR	set	14833
   850  0000                     _PIE2bits	set	14738
   851  0000                     _PIR2bits	set	14754
   852  0000                     _PIE9bits	set	14745
   853  0000                     _PIR9bits	set	14761
   854  0000                     _PIE6bits	set	14742
   855  0000                     _PIE3bits	set	14739
   856  0000                     _PMD7	set	14791
   857  0000                     _PMD6	set	14790
   858  0000                     _PMD5	set	14789
   859  0000                     _PMD4	set	14788
   860  0000                     _PMD3	set	14787
   861  0000                     _PMD2	set	14786
   862  0000                     _PMD1	set	14785
   863  0000                     _PMD0	set	14784
   864  0000                     _OSCTUNE	set	14814
   865  0000                     _OSCFRQ	set	14815
   866  0000                     _OSCEN	set	14813
   867  0000                     _OSCCON3	set	14811
   868  0000                     _OSCCON1	set	14809
   869  0000                     _IPR8bits	set	14728
   870  0000                     _IPR9bits	set	14729
   871  0000                     _IPR5bits	set	14725
   872  0000                     _IPR1bits	set	14721
   873  0000                     _IPR3bits	set	14723
   874  0000                     _IPR6bits	set	14726
   875  0000                     _IPR2bits	set	14722
   876  0000                     _PIE5bits	set	14741
   877  0000                     _PIE1bits	set	14737
   878  0000                     _PIR5bits	set	14757
   879  0000                     _PIR1bits	set	14753
   880  0000                     _PLLR	set	118496
   881  0000                     _SPI1SDIPPS	set	15071
   882  0000                     _U1RXPPS	set	15077
   883  0000                     _RC6PPS	set	14870
   884  0000                     _RC5PPS	set	14869
   885  0000                     _INT1PPS	set	15041
   886  0000                     _RD1PPS	set	14873
   887  0000                     _INT0PPS	set	15040
   888  0000                     _RC3PPS	set	14867
   889  0000                     _RB6PPS	set	14862
   890  0000                     _SPI1SCKPPS	set	15070
   891  0000                     _U2RXPPS	set	15080
   892  0000                     _SLRCONF	set	14995
   893  0000                     _SLRCONE	set	14979
   894  0000                     _SLRCOND	set	14963
   895  0000                     _SLRCONC	set	14947
   896  0000                     _SLRCONB	set	14931
   897  0000                     _SLRCONA	set	14915
   898  0000                     _ODCOND	set	14962
   899  0000                     _ODCONC	set	14946
   900  0000                     _ODCONB	set	14930
   901  0000                     _ODCONA	set	14914
   902  0000                     _ODCONF	set	14994
   903  0000                     _ODCONE	set	14978
   904  0000                     _WPUC	set	14945
   905  0000                     _WPUA	set	14913
   906  0000                     _WPUB	set	14929
   907  0000                     _WPUE	set	14977
   908  0000                     _WPUF	set	14993
   909  0000                     _WPUD	set	14961
   910  0000                     _ANSELA	set	14912
   911  0000                     _ANSELF	set	14992
   912  0000                     _ANSELE	set	14976
   913  0000                     _ANSELB	set	14928
   914  0000                     _ANSELC	set	14944
   915  0000                     _ANSELD	set	14960
   916  0000                     _DMA2SSA	set	15321
   917  0000                     _DMA1SSA	set	15353
   918  0000                     _DMA2DSZ	set	15310
   919  0000                     _DMA2SSZ	set	15319
   920  0000                     _DMA2DSA	set	15312
   921  0000                     _DMA1DSZ	set	15342
   922  0000                     _DMA1SSZ	set	15351
   923  0000                     _DMA1DSA	set	15344
   924  0000                     _DMA1CON0bits	set	15356
   925  0000                     _DMA1CON1bits	set	15357
   926  0000                     _DMA2CON0	set	15324
   927  0000                     _DMA2AIRQ	set	15326
   928  0000                     _DMA2SIRQ	set	15327
   929  0000                     _DMA2CON1	set	15325
   930  0000                     _DMA1CON0	set	15356
   931  0000                     _DMA1AIRQ	set	15358
   932  0000                     _DMA1SIRQ	set	15359
   933  0000                     _DMA1CON1	set	15357
   934  0000                     _CLKRCON	set	15589
   935  0000                     _CLKRCLK	set	15590
   936  0000                     _SPI1INTFbits	set	15642
   937  0000                     _SPI1RXB	set	15632
   938  0000                     _SPI1TXB	set	15633
   939  0000                     _SPI1TCNTL	set	15634
   940  0000                     _SPI1CON0	set	15636
   941  0000                     _SPI1CLK	set	15644
   942  0000                     _SPI1BAUD	set	15641
   943  0000                     _SPI1CON2	set	15638
   944  0000                     _SPI1CON1	set	15637
   945  0000                     _U2RXB	set	15824
   946  0000                     _U2TXB	set	15826
   947  0000                     _U2ERRIE	set	15842
   948  0000                     _U2ERRIR	set	15841
   949  0000                     _U2UIR	set	15840
   950  0000                     _U2FIFO	set	15839
   951  0000                     _U2BRGH	set	15838
   952  0000                     _U2BRGL	set	15837
   953  0000                     _U2CON2	set	15836
   954  0000                     _U2CON1	set	15835
   955  0000                     _U2CON0	set	15834
   956  0000                     _U2P3L	set	15832
   957  0000                     _U2P2L	set	15830
   958  0000                     _U2P1L	set	15828
   959  0000                     _U1RXB	set	15848
   960  0000                     _U1TXB	set	15850
   961  0000                     _U1ERRIE	set	15866
   962  0000                     _U1ERRIR	set	15865
   963  0000                     _U1UIR	set	15864
   964  0000                     _U1FIFO	set	15863
   965  0000                     _U1BRGH	set	15862
   966  0000                     _U1BRGL	set	15861
   967  0000                     _U1CON2	set	15860
   968  0000                     _U1CON1	set	15859
   969  0000                     _U1CON0	set	15858
   970  0000                     _U1P3H	set	15857
   971  0000                     _U1P3L	set	15856
   972  0000                     _U1P2H	set	15855
   973  0000                     _U1P2L	set	15854
   974  0000                     _U1P1H	set	15853
   975  0000                     _U1P1L	set	15852
   976  0000                     _FVRCON	set	16065
   977  0000                     _ADFLTRL	set	16102
   978  0000                     _ADFLTRH	set	16103
   979  0000                     _ADCON0bits	set	16120
   980  0000                     _ADCON0	set	16120
   981  0000                     _ADCLK	set	16127
   982  0000                     _ADACT	set	16126
   983  0000                     _ADREF	set	16125
   984  0000                     _ADSTAT	set	16124
   985  0000                     _ADCON3	set	16123
   986  0000                     _ADCON2	set	16122
   987  0000                     _ADCON1	set	16121
   988  0000                     _ADPREH	set	16119
   989  0000                     _ADPREL	set	16118
   990  0000                     _ADCAP	set	16117
   991  0000                     _ADACQH	set	16116
   992  0000                     _ADACQL	set	16115
   993  0000                     _ADPCH	set	16113
   994  0000                     _ADRPT	set	16108
   995  0000                     _ADACCU	set	16106
   996  0000                     _ADSTPTH	set	16101
   997  0000                     _ADSTPTL	set	16100
   998  0000                     _ADUTHH	set	16097
   999  0000                     _ADUTHL	set	16096
  1000  0000                     _ADLTHH	set	16095
  1001  0000                     _ADLTHL	set	16094
  1002  0000                     _CCPTMRS1bits	set	16223
  1003  0000                     _PORTFbits	set	16335
  1004  0000                     _LATCbits	set	16316
  1005  0000                     _LATDbits	set	16317
  1006  0000                     _PORTBbits	set	16331
  1007  0000                     _T2CON	set	16300
  1008  0000                     _T2TMR	set	16298
  1009  0000                     _T2PR	set	16299
  1010  0000                     _T2RST	set	16303
  1011  0000                     _T2HLT	set	16301
  1012  0000                     _T2CLKCON	set	16302
  1013  0000                     _PWM8DCL	set	16224
  1014  0000                     _PWM8DCH	set	16225
  1015  0000                     _PWM8CON	set	16226
  1016  0000                     _LATEbits	set	16318
  1017  0000                     _T5CONbits	set	16282
  1018  0000                     _T5CON	set	16282
  1019  0000                     _TMR5L	set	16280
  1020  0000                     _TMR5H	set	16281
  1021  0000                     _T5CLK	set	16285
  1022  0000                     _T5GATE	set	16284
  1023  0000                     _T5GCON	set	16283
  1024  0000                     _T6CON	set	16276
  1025  0000                     _T6TMR	set	16274
  1026  0000                     _T6PR	set	16275
  1027  0000                     _T6RST	set	16279
  1028  0000                     _T6HLT	set	16277
  1029  0000                     _T6CLKCON	set	16278
  1030  0000                     _TRISD	set	16325
  1031  0000                     _TRISC	set	16324
  1032  0000                     _TRISB	set	16323
  1033  0000                     _TRISA	set	16322
  1034  0000                     _TRISF	set	16327
  1035  0000                     _TRISE	set	16326
  1036  0000                     _LATC	set	16316
  1037  0000                     _LATB	set	16315
  1038  0000                     _LATF	set	16319
  1039  0000                     _LATA	set	16314
  1040  0000                     _LATD	set	16317
  1041  0000                     _LATE	set	16318
  1042  0000                     _IVTLOCKbits	set	16340
  1043  0000                     _IVTLOCK	set	16340
  1044  0000                     _INTCON0bits	set	16338
  1045  0000                     _GIE	set	130711
  1046  00FEEF                     
  1047                           ; BSR set to: 57
  1048  00FEEF  20                 	db	32
  1049  00FEF0  4D                 	db	77	;'M'
  1050  00FEF1  65                 	db	101	;'e'
  1051  00FEF2  73                 	db	115	;'s'
  1052  00FEF3  67                 	db	103	;'g'
  1053  00FEF4  20                 	db	32
  1054  00FEF5  25                 	db	37
  1055  00FEF6  64                 	db	100	;'d'
  1056  00FEF7  20                 	db	32
  1057  00FEF8  53                 	db	83	;'S'
  1058  00FEF9  74                 	db	116	;'t'
  1059  00FEFA  61                 	db	97	;'a'
  1060  00FEFB  63                 	db	99	;'c'
  1061  00FEFC  6B                 	db	107	;'k'
  1062  00FEFD  20                 	db	32
  1063  00FEFE  25                 	db	37
  1064  00FEFF  64                 	db	100	;'d'
  1065  00FF00  20                 	db	32
  1066  00FF01  20                 	db	32
  1067  00FF02  20                 	db	32
  1068  00FF03  20                 	db	32
  1069  00FF04  20                 	db	32
  1070  00FF05  20                 	db	32
  1071  00FF06  00                 	db	0
  1072  00FF07                     STR_27:
  1073                           
  1074                           ; BSR set to: 57
  1075  00FF07  20                 	db	32
  1076  00FF08  20                 	db	32
  1077  00FF09  20                 	db	32
  1078  00FF0A  20                 	db	32
  1079  00FF0B  20                 	db	32
  1080  00FF0C  20                 	db	32
  1081  00FF0D  20                 	db	32
  1082  00FF0E  20                 	db	32
  1083  00FF0F  20                 	db	32
  1084  00FF10  20                 	db	32
  1085  00FF11  20                 	db	32
  1086  00FF12  20                 	db	32
  1087  00FF13  20                 	db	32
  1088  00FF14  20                 	db	32
  1089  00FF15  20                 	db	32
  1090  00FF16  20                 	db	32
  1091  00FF17  20                 	db	32
  1092  00FF18  20                 	db	32
  1093  00FF19  00                 	db	0
  1094  00FF1A                     STR_17:
  1095                           
  1096                           ; BSR set to: 57
  1097  00FF1A  48                 	db	72	;'H'
  1098  00FF1B  45                 	db	69	;'E'
  1099  00FF1C  4C                 	db	76	;'L'
  1100  00FF1D  50                 	db	80	;'P'
  1101  00FF1E  20                 	db	32
  1102  00FF1F  25                 	db	37
  1103  00FF20  73                 	db	115	;'s'
  1104  00FF21  20                 	db	32
  1105  00FF22  20                 	db	32
  1106  00FF23  20                 	db	32
  1107  00FF24  20                 	db	32
  1108  00FF25  20                 	db	32
  1109  00FF26  20                 	db	32
  1110  00FF27  20                 	db	32
  1111  00FF28  20                 	db	32
  1112  00FF29  20                 	db	32
  1113  00FF2A  20                 	db	32
  1114  00FF2B  20                 	db	32
  1115  00FF2C  00                 	db	0
  1116  00FF2D                     
  1117                           ; BSR set to: 57
  1118  00FF2D  44                 	db	68	;'D'
  1119  00FF2E  49                 	db	73	;'I'
  1120  00FF2F  53                 	db	83	;'S'
  1121  00FF30  50                 	db	80	;'P'
  1122  00FF31  4C                 	db	76	;'L'
  1123  00FF32  41                 	db	65	;'A'
  1124  00FF33  59                 	db	89	;'Y'
  1125  00FF34  20                 	db	32
  1126  00FF35  25                 	db	37
  1127  00FF36  73                 	db	115	;'s'
  1128  00FF37  20                 	db	32
  1129  00FF38  20                 	db	32
  1130  00FF39  20                 	db	32
  1131  00FF3A  20                 	db	32
  1132  00FF3B  20                 	db	32
  1133  00FF3C  20                 	db	32
  1134  00FF3D  20                 	db	32
  1135  00FF3E  20                 	db	32
  1136  00FF3F  00                 	db	0
  1137  00FF40                     STR_8:
  1138                           
  1139                           ; BSR set to: 57
  1140  00FF40  20                 	db	32
  1141  00FF41  56                 	db	86	;'V'
  1142  00FF42  54                 	db	84	;'T'
  1143  00FF43  45                 	db	69	;'E'
  1144  00FF44  52                 	db	82	;'R'
  1145  00FF45  4D                 	db	77	;'M'
  1146  00FF46  20                 	db	32
  1147  00FF47  23                 	db	35
  1148  00FF48  32                 	db	50	;'2'
  1149  00FF49  20                 	db	32
  1150  00FF4A  20                 	db	32
  1151  00FF4B  20                 	db	32
  1152  00FF4C  20                 	db	32
  1153  00FF4D  20                 	db	32
  1154  00FF4E  20                 	db	32
  1155  00FF4F  20                 	db	32
  1156  00FF50  00                 	db	0
  1157  00FF51                     STR_4:
  1158                           
  1159                           ; BSR set to: 57
  1160  00FF51  20                 	db	32
  1161  00FF52  4E                 	db	78	;'N'
  1162  00FF53  53                 	db	83	;'S'
  1163  00FF54  41                 	db	65	;'A'
  1164  00FF55  53                 	db	83	;'S'
  1165  00FF56  50                 	db	80	;'P'
  1166  00FF57  4F                 	db	79	;'O'
  1167  00FF58  4F                 	db	79	;'O'
  1168  00FF59  4B                 	db	75	;'K'
  1169  00FF5A  20                 	db	32
  1170  00FF5B  20                 	db	32
  1171  00FF5C  20                 	db	32
  1172  00FF5D  20                 	db	32
  1173  00FF5E  20                 	db	32
  1174  00FF5F  20                 	db	32
  1175  00FF60  20                 	db	32
  1176  00FF61  00                 	db	0
  1177  00FF62                     STR_1:
  1178                           
  1179                           ; BSR set to: 57
  1180  00FF62  20                 	db	32
  1181  00FF63  4D                 	db	77	;'M'
  1182  00FF64  42                 	db	66	;'B'
  1183  00FF65  4D                 	db	77	;'M'
  1184  00FF66  43                 	db	67	;'C'
  1185  00FF67  20                 	db	32
  1186  00FF68  53                 	db	83	;'S'
  1187  00FF69  4F                 	db	79	;'O'
  1188  00FF6A  4C                 	db	76	;'L'
  1189  00FF6B  41                 	db	65	;'A'
  1190  00FF6C  52                 	db	82	;'R'
  1191  00FF6D  4D                 	db	77	;'M'
  1192  00FF6E  4F                 	db	79	;'O'
  1193  00FF6F  4E                 	db	78	;'N'
  1194  00FF70  20                 	db	32
  1195  00FF71  20                 	db	32
  1196  00FF72  00                 	db	0
  1197  00FF73                     STR_5:
  1198                           
  1199                           ; BSR set to: 57
  1200  00FF73  20                 	db	32
  1201  00FF74  53                 	db	83	;'S'
  1202  00FF75  45                 	db	69	;'E'
  1203  00FF76  51                 	db	81	;'Q'
  1204  00FF77  55                 	db	85	;'U'
  1205  00FF78  45                 	db	69	;'E'
  1206  00FF79  4E                 	db	78	;'N'
  1207  00FF7A  43                 	db	67	;'C'
  1208  00FF7B  45                 	db	69	;'E'
  1209  00FF7C  20                 	db	32
  1210  00FF7D  54                 	db	84	;'T'
  1211  00FF7E  45                 	db	69	;'E'
  1212  00FF7F  53                 	db	83	;'S'
  1213  00FF80  54                 	db	84	;'T'
  1214  00FF81  20                 	db	32
  1215  00FF82  20                 	db	32
  1216  00FF83  00                 	db	0
  1217  00FF84                     STR_11:
  1218                           
  1219                           ; BSR set to: 57
  1220  00FF84  25                 	db	37
  1221  00FF85  64                 	db	100	;'d'
  1222  00FF86  20                 	db	32
  1223  00FF87  25                 	db	37
  1224  00FF88  32                 	db	50	;'2'
  1225  00FF89  2E                 	db	46
  1226  00FF8A  34                 	db	52	;'4'
  1227  00FF8B  66                 	db	102	;'f'
  1228  00FF8C  2C                 	db	44
  1229  00FF8D  20                 	db	32
  1230  00FF8E  25                 	db	37
  1231  00FF8F  64                 	db	100	;'d'
  1232  00FF90  20                 	db	32
  1233  00FF91  20                 	db	32
  1234  00FF92  20                 	db	32
  1235  00FF93  23                 	db	35
  1236  00FF94  00                 	db	0
  1237  00FF95                     STR_21:
  1238                           
  1239                           ; BSR set to: 57
  1240  00FF95  76                 	db	118	;'v'
  1241  00FF96  74                 	db	116	;'t'
  1242  00FF97  65                 	db	101	;'e'
  1243  00FF98  72                 	db	114	;'r'
  1244  00FF99  6D                 	db	109	;'m'
  1245  00FF9A  20                 	db	32
  1246  00FF9B  25                 	db	37
  1247  00FF9C  78                 	db	120	;'x'
  1248  00FF9D  3A                 	db	58	;':'
  1249  00FF9E  25                 	db	37
  1250  00FF9F  78                 	db	120	;'x'
  1251  00FFA0  20                 	db	32
  1252  00FFA1  20                 	db	32
  1253  00FFA2  20                 	db	32
  1254  00FFA3  00                 	db	0
  1255  00FFA4                     STR_2:
  1256                           
  1257                           ; BSR set to: 57
  1258  00FFA4  20                 	db	32
  1259  00FFA5  56                 	db	86	;'V'
  1260  00FFA6  65                 	db	101	;'e'
  1261  00FFA7  72                 	db	114	;'r'
  1262  00FFA8  73                 	db	115	;'s'
  1263  00FFA9  69                 	db	105	;'i'
  1264  00FFAA  6F                 	db	111	;'o'
  1265  00FFAB  6E                 	db	110	;'n'
  1266  00FFAC  20                 	db	32
  1267  00FFAD  25                 	db	37
  1268  00FFAE  73                 	db	115	;'s'
  1269  00FFAF  20                 	db	32
  1270  00FFB0  20                 	db	32
  1271  00FFB1  20                 	db	32
  1272  00FFB2  00                 	db	0
  1273  00FFB3                     STR_9:
  1274                           
  1275                           ; BSR set to: 57
  1276  00FFB3  25                 	db	37
  1277  00FFB4  64                 	db	100	;'d'
  1278  00FFB5  20                 	db	32
  1279  00FFB6  25                 	db	37
  1280  00FFB7  32                 	db	50	;'2'
  1281  00FFB8  2E                 	db	46
  1282  00FFB9  34                 	db	52	;'4'
  1283  00FFBA  66                 	db	102	;'f'
  1284  00FFBB  20                 	db	32
  1285  00FFBC  20                 	db	32
  1286  00FFBD  20                 	db	32
  1287  00FFBE  25                 	db	37
  1288  00FFBF  64                 	db	100	;'d'
  1289  00FFC0  00                 	db	0
  1290  00FFC1                     STR_15:
  1291                           
  1292                           ; BSR set to: 57
  1293  00FFC1  4E                 	db	78	;'N'
  1294  00FFC2  6F                 	db	111	;'o'
  1295  00FFC3  76                 	db	118	;'v'
  1296  00FFC4  20                 	db	32
  1297  00FFC5  32                 	db	50	;'2'
  1298  00FFC6  34                 	db	52	;'4'
  1299  00FFC7  20                 	db	32
  1300  00FFC8  32                 	db	50	;'2'
  1301  00FFC9  30                 	db	48	;'0'
  1302  00FFCA  31                 	db	49	;'1'
  1303  00FFCB  39                 	db	57	;'9'
  1304  00FFCC  00                 	db	0
  1305  00FFCD                     STR_19:
  1306                           
  1307                           ; BSR set to: 57
  1308  00FFCD  25                 	db	37
  1309  00FFCE  73                 	db	115	;'s'
  1310  00FFCF  20                 	db	32
  1311  00FFD0  20                 	db	32
  1312  00FFD1  20                 	db	32
  1313  00FFD2  20                 	db	32
  1314  00FFD3  20                 	db	32
  1315  00FFD4  20                 	db	32
  1316  00FFD5  20                 	db	32
  1317  00FFD6  00                 	db	0
  1318  00FFD7                     STR_16:
  1319                           
  1320                           ; BSR set to: 57
  1321  00FFD7  31                 	db	49	;'1'
  1322  00FFD8  39                 	db	57	;'9'
  1323  00FFD9  3A                 	db	58	;':'
  1324  00FFDA  32                 	db	50	;'2'
  1325  00FFDB  37                 	db	55	;'7'
  1326  00FFDC  3A                 	db	58	;':'
  1327  00FFDD  33                 	db	51	;'3'
  1328  00FFDE  36                 	db	54	;'6'
  1329  00FFDF  00                 	db	0
  1330  00FFE0                     STR_3:
  1331                           
  1332                           ; BSR set to: 57
  1333  00FFE0  30                 	db	48	;'0'
  1334  00FFE1  2E                 	db	46
  1335  00FFE2  39                 	db	57	;'9'
  1336  00FFE3  36                 	db	54	;'6'
  1337  00FFE4  00                 	db	0
  1338  00FFE5                     STR_34:
  1339                           
  1340                           ; BSR set to: 57
  1341  00FFE5  49                 	db	73	;'I'
  1342  00FFE6  4E                 	db	78	;'N'
  1343  00FFE7  46                 	db	70	;'F'
  1344  00FFE8  00                 	db	0
  1345  00FFE9                     STR_38:
  1346                           
  1347                           ; BSR set to: 57
  1348  00FFE9  4E                 	db	78	;'N'
  1349  00FFEA  41                 	db	65	;'A'
  1350  00FFEB  4E                 	db	78	;'N'
  1351  00FFEC  00                 	db	0
  1352  00FFED                     STR_35:
  1353                           
  1354                           ; BSR set to: 57
  1355  00FFED  69                 	db	105	;'i'
  1356  00FFEE  6E                 	db	110	;'n'
  1357  00FFEF  66                 	db	102	;'f'
  1358  00FFF0  00                 	db	0
  1359  00FFF1                     STR_39:
  1360                           
  1361                           ; BSR set to: 57
  1362  00FFF1  6E                 	db	110	;'n'
  1363  00FFF2  61                 	db	97	;'a'
  1364  00FFF3  6E                 	db	110	;'n'
  1365  00FFF4  00                 	db	0
  1366  00FFF5                     STR_42:
  1367                           
  1368                           ; BSR set to: 57
  1369  00FFF5  6C                 	db	108	;'l'
  1370  00FFF6  66                 	db	102	;'f'
  1371  00FFF7  00                 	db	0
  1372  00FFF8                     STR_13:
  1373                           
  1374                           ; BSR set to: 57
  1375  00FFF8  25                 	db	37
  1376  00FFF9  63                 	db	99	;'c'
  1377  00FFFA  00                 	db	0
  1378  00FFFB                     STR_12:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FFFB  25                 	db	37
  1382  00FFFC  73                 	db	115	;'s'
  1383  00FFFD  00                 	db	0
  1384  0000                     
  1385                           ; #config settings
  1386  00FFFE  00                 	db	0	; dummy byte at the end
  1387  0000                     
  1388                           	psect	cinit
  1389  01694E                     __pcinit:
  1390                           	opt callstack 0
  1391  01694E                     start_initialization:
  1392                           	opt callstack 0
  1393  01694E                     __initialization:
  1394                           	opt callstack 0
  1395                           
  1396                           ; Initialize objects allocated to BANK2 (16 bytes)
  1397                           ; load TBLPTR registers with __pidataBANK2
  1398  01694E  0E92               	movlw	low __pidataBANK2
  1399  016950  6EF6               	movwf	tblptrl,c
  1400  016952  0E84               	movlw	high __pidataBANK2
  1401  016954  6EF7               	movwf	tblptrh,c
  1402  016956  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1403  016958  6EF8               	movwf	tblptru,c
  1404  01695A  EE00  F290         	lfsr	0,__pdataBANK2
  1405  01695E  EE20 F010          	lfsr	2,16
  1406  016962                     copy_data0:
  1407  016962  0009               	tblrd		*+
  1408  016964  006F FFD7 FFEE     	movff	tablat,postinc0
  1409  01696A  50DD               	movf	postdec2,w,c
  1410  01696C  50D9               	movf	fsr2l,w,c
  1411  01696E  E1F9               	bnz	copy_data0
  1412                           
  1413                           ; Initialize objects allocated to BANK1 (187 bytes)
  1414                           ; load TBLPTR registers with __pidataBANK1
  1415  016970  0EC4               	movlw	low __pidataBANK1
  1416  016972  6EF6               	movwf	tblptrl,c
  1417  016974  0E6C               	movlw	high __pidataBANK1
  1418  016976  6EF7               	movwf	tblptrh,c
  1419  016978  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1420  01697A  6EF8               	movwf	tblptru,c
  1421  01697C  EE00  F100         	lfsr	0,__pdataBANK1
  1422  016980  EE20 F0BB          	lfsr	2,187
  1423  016984                     copy_data1:
  1424  016984  0009               	tblrd		*+
  1425  016986  006F FFD7 FFEE     	movff	tablat,postinc0
  1426  01698C  50DD               	movf	postdec2,w,c
  1427  01698E  50D9               	movf	fsr2l,w,c
  1428  016990  E1F9               	bnz	copy_data1
  1429                           
  1430                           ; Initialize objects allocated to BANK0 (47 bytes)
  1431                           ; load TBLPTR registers with __pidataBANK0
  1432  016992  0E22               	movlw	low __pidataBANK0
  1433  016994  6EF6               	movwf	tblptrl,c
  1434  016996  0E7E               	movlw	high __pidataBANK0
  1435  016998  6EF7               	movwf	tblptrh,c
  1436  01699A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1437  01699C  6EF8               	movwf	tblptru,c
  1438  01699E  EE00  F0C7         	lfsr	0,__pdataBANK0
  1439  0169A2  EE20 F02F          	lfsr	2,47
  1440  0169A6                     copy_data2:
  1441  0169A6  0009               	tblrd		*+
  1442  0169A8  006F FFD7 FFEE     	movff	tablat,postinc0
  1443  0169AE  50DD               	movf	postdec2,w,c
  1444  0169B0  50D9               	movf	fsr2l,w,c
  1445  0169B2  E1F9               	bnz	copy_data2
  1446                           
  1447                           ; Clear objects allocated to BANK7 (255 bytes)
  1448  0169B4  EE01  F300         	lfsr	0,__pbssBANK7
  1449  0169B8  EE20 F0FF          	lfsr	2,255
  1450  0169BC                     clear_0:
  1451  0169BC  6AEE               	clrf	postinc0,c
  1452  0169BE  50DD               	movf	postdec2,w,c
  1453  0169C0  50D9               	movf	fsr2l,w,c
  1454  0169C2  E1FC               	bnz	clear_0
  1455  0169C4  50DA               	movf	fsr2h,w,c
  1456  0169C6  E1FA               	bnz	clear_0
  1457                           
  1458                           ; Clear objects allocated to BANK6 (255 bytes)
  1459  0169C8  EE01  F200         	lfsr	0,__pbssBANK6
  1460  0169CC  EE20 F0FF          	lfsr	2,255
  1461  0169D0                     clear_1:
  1462  0169D0  6AEE               	clrf	postinc0,c
  1463  0169D2  50DD               	movf	postdec2,w,c
  1464  0169D4  50D9               	movf	fsr2l,w,c
  1465  0169D6  E1FC               	bnz	clear_1
  1466  0169D8  50DA               	movf	fsr2h,w,c
  1467  0169DA  E1FA               	bnz	clear_1
  1468                           
  1469                           ; Clear objects allocated to BANK5 (218 bytes)
  1470  0169DC  EE01  F100         	lfsr	0,__pbssBANK5
  1471  0169E0  0EDA               	movlw	218
  1472  0169E2                     clear_2:
  1473  0169E2  6AEE               	clrf	postinc0,c
  1474  0169E4  06E8               	decf	wreg,f,c
  1475  0169E6  E1FD               	bnz	clear_2
  1476                           
  1477                           ; Clear objects allocated to BANK4 (134 bytes)
  1478  0169E8  EE01  F000         	lfsr	0,__pbssBANK4
  1479  0169EC  0E86               	movlw	134
  1480  0169EE                     clear_3:
  1481  0169EE  6AEE               	clrf	postinc0,c
  1482  0169F0  06E8               	decf	wreg,f,c
  1483  0169F2  E1FD               	bnz	clear_3
  1484                           
  1485                           ; Clear objects allocated to BANK3 (236 bytes)
  1486  0169F4  EE00  F300         	lfsr	0,__pbssBANK3
  1487  0169F8  0EEC               	movlw	236
  1488  0169FA                     clear_4:
  1489  0169FA  6AEE               	clrf	postinc0,c
  1490  0169FC  06E8               	decf	wreg,f,c
  1491  0169FE  E1FD               	bnz	clear_4
  1492                           
  1493                           ; Clear objects allocated to BANK2 (144 bytes)
  1494  016A00  EE00  F200         	lfsr	0,__pbssBANK2
  1495  016A04  0E90               	movlw	144
  1496  016A06                     clear_5:
  1497  016A06  6AEE               	clrf	postinc0,c
  1498  016A08  06E8               	decf	wreg,f,c
  1499  016A0A  E1FD               	bnz	clear_5
  1500                           
  1501                           ; Clear objects allocated to BANK1 (8 bytes)
  1502  016A0C  EE00  F1BB         	lfsr	0,__pbssBANK1
  1503  016A10  0E08               	movlw	8
  1504  016A12                     clear_6:
  1505  016A12  6AEE               	clrf	postinc0,c
  1506  016A14  06E8               	decf	wreg,f,c
  1507  016A16  E1FD               	bnz	clear_6
  1508                           
  1509                           ; Clear objects allocated to BANK0 (103 bytes)
  1510  016A18  EE00  F060         	lfsr	0,__pbssBANK0
  1511  016A1C  0E67               	movlw	103
  1512  016A1E                     clear_7:
  1513  016A1E  6AEE               	clrf	postinc0,c
  1514  016A20  06E8               	decf	wreg,f,c
  1515  016A22  E1FD               	bnz	clear_7
  1516                           
  1517                           ; Clear objects allocated to COMRAM (49 bytes)
  1518  016A24  EE00  F001         	lfsr	0,__pbssCOMRAM
  1519  016A28  0E31               	movlw	49
  1520  016A2A                     clear_8:
  1521  016A2A  6AEE               	clrf	postinc0,c
  1522  016A2C  06E8               	decf	wreg,f,c
  1523  016A2E  E1FD               	bnz	clear_8
  1524                           
  1525                           ;
  1526                           ; Setup IVTBASE
  1527                           ;
  1528  016A30  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1529  016A32  6ED5               	movwf	213,c
  1530  016A34  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1531  016A36  6ED6               	movwf	214,c
  1532  016A38  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1533  016A3A  6ED7               	movwf	215,c
  1534  016A3C                     end_of_initialization:
  1535                           	opt callstack 0
  1536  016A3C                     __end_of__initialization:
  1537                           	opt callstack 0
  1538  016A3C  0100               	movlb	0
  1539  016A3E  EF06  F09E         	goto	_main	;jump to C main() function
  1540                           
  1541                           	psect	bssCOMRAM
  1542  000001                     __pbssCOMRAM:
  1543                           	opt callstack 0
  1544  000001                     _ADCC_ADTI_InterruptHandler:
  1545                           	opt callstack 0
  1546  000001                     	ds	3
  1547  000004                     _ADCC_ADI_InterruptHandler:
  1548                           	opt callstack 0
  1549  000004                     	ds	3
  1550  000007                     _UART1_TxInterruptHandler:
  1551                           	opt callstack 0
  1552  000007                     	ds	3
  1553  00000A                     _UART1_RxInterruptHandler:
  1554                           	opt callstack 0
  1555  00000A                     	ds	3
  1556  00000D                     _UART2_TxInterruptHandler:
  1557                           	opt callstack 0
  1558  00000D                     	ds	3
  1559  000010                     _UART2_RxInterruptHandler:
  1560                           	opt callstack 0
  1561  000010                     	ds	3
  1562  000013                     _INT1_InterruptHandler:
  1563                           	opt callstack 0
  1564  000013                     	ds	3
  1565  000016                     _INT0_InterruptHandler:
  1566                           	opt callstack 0
  1567  000016                     	ds	3
  1568  000019                     _nout:
  1569                           	opt callstack 0
  1570  000019                     	ds	2
  1571  00001B                     _width:
  1572                           	opt callstack 0
  1573  00001B                     	ds	2
  1574  00001D                     _prec:
  1575                           	opt callstack 0
  1576  00001D                     	ds	2
  1577  00001F                     _flags:
  1578                           	opt callstack 0
  1579  00001F                     	ds	2
  1580  000021                     TMR5_ISR@CountCallBack:
  1581                           	opt callstack 0
  1582  000021                     	ds	2
  1583  000023                     _timer5ReloadVal:
  1584                           	opt callstack 0
  1585  000023                     	ds	2
  1586  000025                     _mode_sw:
  1587                           	opt callstack 0
  1588  000025                     	ds	1
  1589  000026                     _uart2RxCount:
  1590                           	opt callstack 0
  1591  000026                     	ds	1
  1592  000027                     _uart2RxTail:
  1593                           	opt callstack 0
  1594  000027                     	ds	1
  1595  000028                     _uart2RxHead:
  1596                           	opt callstack 0
  1597  000028                     	ds	1
  1598  000029                     _uart2TxBufferRemaining:
  1599                           	opt callstack 0
  1600  000029                     	ds	1
  1601  00002A                     _uart2TxTail:
  1602                           	opt callstack 0
  1603  00002A                     	ds	1
  1604  00002B                     _uart2TxHead:
  1605                           	opt callstack 0
  1606  00002B                     	ds	1
  1607  00002C                     _uart1RxCount:
  1608                           	opt callstack 0
  1609  00002C                     	ds	1
  1610  00002D                     _uart1RxTail:
  1611                           	opt callstack 0
  1612  00002D                     	ds	1
  1613  00002E                     _uart1RxHead:
  1614                           	opt callstack 0
  1615  00002E                     	ds	1
  1616  00002F                     _uart1TxBufferRemaining:
  1617                           	opt callstack 0
  1618  00002F                     	ds	1
  1619  000030                     _uart1TxTail:
  1620                           	opt callstack 0
  1621  000030                     	ds	1
  1622  000031                     _uart1TxHead:
  1623                           	opt callstack 0
  1624  000031                     	ds	1
  1625                           
  1626                           	psect	bssBANK0
  1627  000060                     __pbssBANK0:
  1628                           	opt callstack 0
  1629  000060                     _S:
  1630                           	opt callstack 0
  1631  000060                     	ds	41
  1632  000089                     _tickCount:
  1633                           	opt callstack 0
  1634  000089                     	ds	24
  1635  0000A1                     _spi_link:
  1636                           	opt callstack 0
  1637  0000A1                     	ds	12
  1638  0000AD                     floorf@F524:
  1639                           	opt callstack 0
  1640  0000AD                     	ds	4
  1641  0000B1                     ___fpclassifyf@F463:
  1642                           	opt callstack 0
  1643  0000B1                     	ds	4
  1644  0000B5                     _utctime:
  1645                           	opt callstack 0
  1646  0000B5                     	ds	4
  1647  0000B9                     wdtdelay@dcount:
  1648                           	opt callstack 0
  1649  0000B9                     	ds	4
  1650  0000BD                     _P:
  1651                           	opt callstack 0
  1652  0000BD                     	ds	4
  1653  0000C1                     _TMR5_InterruptHandler:
  1654                           	opt callstack 0
  1655  0000C1                     	ds	3
  1656  0000C4                     _TMR6_InterruptHandler:
  1657                           	opt callstack 0
  1658  0000C4                     	ds	3
  1659                           
  1660                           	psect	dataBANK0
  1661  0000C7                     __pdataBANK0:
  1662                           	opt callstack 0
  1663  0000C7                     _R:
  1664                           	opt callstack 0
  1665  0000C7                     	ds	40
  1666  0000EF                     stoa@F1166:
  1667                           	opt callstack 0
  1668  0000EF                     	ds	7
  1669                           
  1670                           	psect	bssBANK1
  1671  0001BB                     __pbssBANK1:
  1672                           	opt callstack 0
  1673  0001BB                     _seed:
  1674                           	opt callstack 0
  1675  0001BB                     	ds	8
  1676                           
  1677                           	psect	dataBANK1
  1678  000100                     __pdataBANK1:
  1679                           	opt callstack 0
  1680  000100                     _V:
  1681                           	opt callstack 0
  1682  000100                     	ds	187
  1683                           
  1684                           	psect	bssBANK2
  1685  000200                     __pbssBANK2:
  1686                           	opt callstack 0
  1687  000200                     lp_filter@smooth:
  1688                           	opt callstack 0
  1689  000200                     	ds	64
  1690  000240                     _dbuf:
  1691                           	opt callstack 0
  1692  000240                     	ds	80
  1693                           
  1694                           	psect	dataBANK2
  1695  000290                     __pdataBANK2:
  1696                           	opt callstack 0
  1697  000290                     _port_data:
  1698                           	opt callstack 0
  1699  000290                     	ds	16
  1700                           
  1701                           	psect	bssBANK3
  1702  000300                     __pbssBANK3:
  1703                           	opt callstack 0
  1704  000300                     _C:
  1705                           	opt callstack 0
  1706  000300                     	ds	108
  1707  00036C                     _uart2TxBuffer:
  1708                           	opt callstack 0
  1709  00036C                     	ds	64
  1710  0003AC                     _uart1TxBuffer:
  1711                           	opt callstack 0
  1712  0003AC                     	ds	64
  1713                           
  1714                           	psect	bssBANK4
  1715  000400                     __pbssBANK4:
  1716                           	opt callstack 0
  1717  000400                     _ring_buf2:
  1718                           	opt callstack 0
  1719  000400                     	ds	67
  1720  000443                     _ring_buf1:
  1721                           	opt callstack 0
  1722  000443                     	ds	67
  1723                           
  1724                           	psect	bssBANK5
  1725  000500                     __pbssBANK5:
  1726                           	opt callstack 0
  1727  000500                     _D:
  1728                           	opt callstack 0
  1729  000500                     	ds	218
  1730                           
  1731                           	psect	bssBANK6
  1732  000600                     __pbssBANK6:
  1733                           	opt callstack 0
  1734  000600                     _uart1RxBuffer:
  1735                           	opt callstack 0
  1736  000600                     	ds	255
  1737                           
  1738                           	psect	bssBANK7
  1739  000700                     __pbssBANK7:
  1740                           	opt callstack 0
  1741  000700                     _uart2RxBuffer:
  1742                           	opt callstack 0
  1743  000700                     	ds	255
  1744                           
  1745                           	psect	cstackBANK1
  1746  0001C3                     __pcstackBANK1:
  1747                           	opt callstack 0
  1748  0001C3                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x0
  1751  0001C3                     	ds	4
  1752                           
  1753                           	psect	cstackBANK0
  1754  0000F6                     __pcstackBANK0:
  1755                           	opt callstack 0
  1756  0000F6                     ??_INT1_ISR:
  1757                           
  1758                           ; 1 bytes @ 0x0
  1759  0000F6                     	ds	4
  1760                           
  1761                           	psect	cstackCOMRAM
  1762  000052                     __pcstackCOMRAM:
  1763                           	opt callstack 0
  1764  000052                     ??_ADCC_ThresholdISR:
  1765  000052                     
  1766                           ; 1 bytes @ 0x0
  1767  000052                     	ds	5
  1768  000057                     ??_TMR6_ISR:
  1769                           
  1770                           ; 1 bytes @ 0x5
  1771  000057                     	ds	1
  1772  000058                     
  1773                           ; 1 bytes @ 0x6
  1774 ;;
  1775 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1776 ;;
  1777 ;; *************** function _main *****************
  1778 ;; Defined at:
  1779 ;;		line 158 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  mode            1  [STACK] enum E17005
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1  [STACK] void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 1/1
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels required when called:   19
  1799 ;; This function calls:
  1800 ;;		_SYSTEM_Initialize
  1801 ;;		_StartTimer
  1802 ;;		_TimerDone
  1803 ;;		_WaitMs
  1804 ;;		_check_adc_scan
  1805 ;;		_check_help
  1806 ;;		_check_switches
  1807 ;;		_clear_adc_scan
  1808 ;;		_convert_adc_data
  1809 ;;		_eaDogM_WriteCommand
  1810 ;;		_get_raw_result
  1811 ;;		_get_switch
  1812 ;;		_get_vterm_ptr
  1813 ;;		_init_display
  1814 ;;		_mode_lamp_dim
  1815 ;;		_set_display_info
  1816 ;;		_set_vterm
  1817 ;;		_sprintf
  1818 ;;		_srand
  1819 ;;		_start_adc_scan
  1820 ;;		_start_switch_handler
  1821 ;;		_update_lcd
  1822 ;; This function is called by:
  1823 ;;		Startup code after reset
  1824 ;; This function uses a reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text0
  1828  013C0C                     __ptext0:
  1829                           	opt callstack 0
  1830  013C0C                     _main:
  1831                           	opt callstack 0
  1832                           
  1833                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1834  013C0C  52E6               	movf	postinc1,f,c
  1835                           
  1836                           ;main.c: 160:  UI_STATES mode;;main.c: 163:  SYSTEM_Initialize();
  1837                           
  1838                           ;incstack = 0
  1839  013C0E  EC39  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1840                           
  1841                           ; BSR set to: 60
  1842                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1843  013C12  8ED2               	bsf	210,7,c	;volatile
  1844                           
  1845                           ; BSR set to: 60
  1846                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1847  013C14  8CD2               	bsf	210,6,c	;volatile
  1848                           
  1849                           ; BSR set to: 60
  1850                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1851  013C16  0101               	movlb	1	; () banked
  1852  013C18  6B00               	clrf	_V& (0+255),b	;volatile
  1853                           
  1854                           ; BSR set to: 1
  1855                           ;main.c: 176:  WaitMs(300);
  1856  013C1A  0E2C               	movlw	44
  1857  013C1C  6EE6               	movwf	postinc1,c
  1858  013C1E  0E01               	movlw	1
  1859  013C20  6EE6               	movwf	postinc1,c
  1860  013C22  EC5F  F0BE         	call	_WaitMs	;wreg free
  1861                           
  1862                           ;main.c: 177:  if (PORTBbits.RB0) {
  1863  013C26  A0CB               	btfss	203,0,c	;volatile
  1864  013C28  D004               	goto	l11961
  1865                           
  1866                           ;main.c: 178:   mode = UI_STATE_HOST;
  1867                           ;stkvar	_mode @ sp[(-1)+0]
  1868  013C2A  0EFF               	movlw	-1
  1869  013C2C  6AE3               	clrf	plusw1,c
  1870  013C2E  2AE3               	incf	plusw1,f,c
  1871                           
  1872                           ;main.c: 179:  } else {
  1873  013C30  D004               	goto	l11963
  1874  013C32                     l11961:
  1875                           
  1876                           ;main.c: 180:   mode = UI_STATE_LOG;
  1877                           ;stkvar	_mode @ sp[(-1)+0]
  1878  013C32  0EFF               	movlw	-1
  1879  013C34  6AE3               	clrf	plusw1,c
  1880  013C36  80E3               	bsf	plusw1,0,c
  1881  013C38  82E3               	bsf	plusw1,1,c	;indir
  1882  013C3A                     l11963:
  1883                           
  1884                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1885                           ;stkvar	_mode @ sp[(-1)+0]
  1886  013C3A  0EFF               	movlw	-1
  1887  013C3C  04E3               	decf	plusw1,w,c
  1888  013C3E  A4D8               	btfss	status,2,c
  1889  013C40  D007               	goto	l1248
  1890                           
  1891                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1892  013C42  80BD               	bsf	189,0,c	;volatile
  1893                           
  1894                           ;main.c: 185:   V.mode_pwm = 70;
  1895  013C44  0E00               	movlw	0
  1896  013C46  0101               	movlb	1	; () banked
  1897  013C48  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1898  013C4A  0E46               	movlw	70
  1899  013C4C  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1900                           
  1901                           ;main.c: 186:  } else {
  1902  013C4E  D004               	goto	l11967
  1903  013C50                     l1248:
  1904  013C50  90BD               	bcf	189,0,c	;volatile
  1905                           
  1906                           ;main.c: 188:   V.mode_pwm = 0;
  1907  013C52  0101               	movlb	1	; () banked
  1908  013C54  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1909  013C56  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1910  013C58                     l11967:
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1914  013C58  0060  F657  FFE6   	movff	_V+149,postinc1
  1915  013C5E  0060  F65B  FFE6   	movff	_V+150,postinc1
  1916  013C64  ECFD  F0C1         	call	_mode_lamp_dim	;wreg free
  1917  013C68  D0D0               	goto	l12011
  1918  013C6A                     l11969:
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;main.c: 201:    init_display();
  1922  013C6A  EC21  F0B5         	call	_init_display	;wreg free
  1923                           
  1924                           ; BSR set to: 61
  1925                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1926  013C6E  0E0C               	movlw	12
  1927  013C70  6EE6               	movwf	postinc1,c
  1928  013C72  EC59  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 204:    V.ui_state = mode;
  1932                           ;stkvar	_mode @ sp[(-1)+0]
  1933  013C76  0EFF               	movlw	-1
  1934  013C78  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 205:    srand(1957);
  1938  013C7E  0EA5               	movlw	165
  1939  013C80  6EE6               	movwf	postinc1,c
  1940  013C82  0E07               	movlw	7
  1941  013C84  6EE6               	movwf	postinc1,c
  1942  013C86  EC95  F0BE         	call	_srand	;wreg free
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;main.c: 206:    set_vterm(0);
  1946  013C8A  0E00               	movlw	0
  1947  013C8C  6EE6               	movwf	postinc1,c
  1948  013C8E  ECD4  F0C1         	call	_set_vterm	;wreg free
  1949                           
  1950                           ; BSR set to: 5
  1951                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1952  013C92  0E62               	movlw	low STR_1
  1953  013C94  6EE6               	movwf	postinc1,c
  1954  013C96  0EFF               	movlw	high STR_1
  1955  013C98  6EE6               	movwf	postinc1,c
  1956  013C9A  0E00               	movlw	0
  1957  013C9C  6EE6               	movwf	postinc1,c
  1958  013C9E  0E00               	movlw	0
  1959  013CA0  6EE6               	movwf	postinc1,c
  1960  013CA2  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  1961  013CA6  0060  F0CB  FFE6   	movff	btemp,postinc1
  1962  013CAC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1963  013CB2  0E04               	movlw	4
  1964  013CB4  6EE6               	movwf	postinc1,c
  1965  013CB6  EC22  F0B4         	call	_sprintf	;wreg free
  1966                           
  1967                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.96");
  1968  013CBA  0EE0               	movlw	low STR_3
  1969  013CBC  6EE6               	movwf	postinc1,c
  1970  013CBE  0EFF               	movlw	high STR_3
  1971  013CC0  6EE6               	movwf	postinc1,c
  1972  013CC2  0EA4               	movlw	low STR_2
  1973  013CC4  6EE6               	movwf	postinc1,c
  1974  013CC6  0EFF               	movlw	high STR_2
  1975  013CC8  6EE6               	movwf	postinc1,c
  1976  013CCA  0E00               	movlw	0
  1977  013CCC  6EE6               	movwf	postinc1,c
  1978  013CCE  0E01               	movlw	1
  1979  013CD0  6EE6               	movwf	postinc1,c
  1980  013CD2  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  1981  013CD6  0060  F0CB  FFE6   	movff	btemp,postinc1
  1982  013CDC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1983  013CE2  0E06               	movlw	6
  1984  013CE4  6EE6               	movwf	postinc1,c
  1985  013CE6  EC22  F0B4         	call	_sprintf	;wreg free
  1986                           
  1987                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1988  013CEA  0E51               	movlw	low STR_4
  1989  013CEC  6EE6               	movwf	postinc1,c
  1990  013CEE  0EFF               	movlw	high STR_4
  1991  013CF0  6EE6               	movwf	postinc1,c
  1992  013CF2  0E00               	movlw	0
  1993  013CF4  6EE6               	movwf	postinc1,c
  1994  013CF6  0E02               	movlw	2
  1995  013CF8  6EE6               	movwf	postinc1,c
  1996  013CFA  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  1997  013CFE  0060  F0CB  FFE6   	movff	btemp,postinc1
  1998  013D04  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1999  013D0A  0E04               	movlw	4
  2000  013D0C  6EE6               	movwf	postinc1,c
  2001  013D0E  EC22  F0B4         	call	_sprintf	;wreg free
  2002                           
  2003                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2004  013D12  0E73               	movlw	low STR_5
  2005  013D14  6EE6               	movwf	postinc1,c
  2006  013D16  0EFF               	movlw	high STR_5
  2007  013D18  6EE6               	movwf	postinc1,c
  2008  013D1A  0E02               	movlw	2
  2009  013D1C  6EE6               	movwf	postinc1,c
  2010  013D1E  0E00               	movlw	0
  2011  013D20  6EE6               	movwf	postinc1,c
  2012  013D22  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2013  013D26  0060  F0CB  FFE6   	movff	btemp,postinc1
  2014  013D2C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2015  013D32  0E04               	movlw	4
  2016  013D34  6EE6               	movwf	postinc1,c
  2017  013D36  EC22  F0B4         	call	_sprintf	;wreg free
  2018                           
  2019                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.96");
  2020  013D3A  0EE0               	movlw	low STR_3
  2021  013D3C  6EE6               	movwf	postinc1,c
  2022  013D3E  0EFF               	movlw	high STR_3
  2023  013D40  6EE6               	movwf	postinc1,c
  2024  013D42  0EA4               	movlw	low STR_2
  2025  013D44  6EE6               	movwf	postinc1,c
  2026  013D46  0EFF               	movlw	high STR_2
  2027  013D48  6EE6               	movwf	postinc1,c
  2028  013D4A  0E02               	movlw	2
  2029  013D4C  6EE6               	movwf	postinc1,c
  2030  013D4E  0E01               	movlw	1
  2031  013D50  6EE6               	movwf	postinc1,c
  2032  013D52  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2033  013D56  0060  F0CB  FFE6   	movff	btemp,postinc1
  2034  013D5C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2035  013D62  0E06               	movlw	6
  2036  013D64  6EE6               	movwf	postinc1,c
  2037  013D66  EC22  F0B4         	call	_sprintf	;wreg free
  2038                           
  2039                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2040  013D6A  0E40               	movlw	low STR_8
  2041  013D6C  6EE6               	movwf	postinc1,c
  2042  013D6E  0EFF               	movlw	high STR_8
  2043  013D70  6EE6               	movwf	postinc1,c
  2044  013D72  0E02               	movlw	2
  2045  013D74  6EE6               	movwf	postinc1,c
  2046  013D76  0E02               	movlw	2
  2047  013D78  6EE6               	movwf	postinc1,c
  2048  013D7A  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2049  013D7E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2050  013D84  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2051  013D8A  0E04               	movlw	4
  2052  013D8C  6EE6               	movwf	postinc1,c
  2053  013D8E  EC22  F0B4         	call	_sprintf	;wreg free
  2054                           
  2055                           ;main.c: 213:    update_lcd(0);
  2056  013D92  0E00               	movlw	0
  2057  013D94  6EE6               	movwf	postinc1,c
  2058  013D96  EC9B  F0B3         	call	_update_lcd	;wreg free
  2059                           
  2060                           ;main.c: 214:    WaitMs(3000);
  2061  013D9A  0EB8               	movlw	184
  2062  013D9C  6EE6               	movwf	postinc1,c
  2063  013D9E  0E0B               	movlw	11
  2064  013DA0  6EE6               	movwf	postinc1,c
  2065  013DA2  EC5F  F0BE         	call	_WaitMs	;wreg free
  2066                           
  2067                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2068  013DA6  0EFA               	movlw	250
  2069  013DA8  6EE6               	movwf	postinc1,c
  2070  013DAA  0E00               	movlw	0
  2071  013DAC  6EE6               	movwf	postinc1,c
  2072  013DAE  0E0A               	movlw	10
  2073  013DB0  6EE6               	movwf	postinc1,c
  2074  013DB2  EC25  F0BE         	call	_StartTimer	;wreg free
  2075                           
  2076                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2077  013DB6  0EC8               	movlw	200
  2078  013DB8  6EE6               	movwf	postinc1,c
  2079  013DBA  0E00               	movlw	0
  2080  013DBC  6EE6               	movwf	postinc1,c
  2081  013DBE  0E01               	movlw	1
  2082  013DC0  6EE6               	movwf	postinc1,c
  2083  013DC2  EC25  F0BE         	call	_StartTimer	;wreg free
  2084                           
  2085                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2086  013DC6  0EB8               	movlw	184
  2087  013DC8  6EE6               	movwf	postinc1,c
  2088  013DCA  0E0B               	movlw	11
  2089  013DCC  6EE6               	movwf	postinc1,c
  2090  013DCE  0E07               	movlw	7
  2091  013DD0  6EE6               	movwf	postinc1,c
  2092  013DD2  EC25  F0BE         	call	_StartTimer	;wreg free
  2093                           
  2094                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2095  013DD6  0EDC               	movlw	220
  2096  013DD8  6EE6               	movwf	postinc1,c
  2097  013DDA  0E05               	movlw	5
  2098  013DDC  6EE6               	movwf	postinc1,c
  2099  013DDE  0E0B               	movlw	11
  2100  013DE0  6EE6               	movwf	postinc1,c
  2101  013DE2  EC25  F0BE         	call	_StartTimer	;wreg free
  2102                           
  2103                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2104  013DE6  0EB8               	movlw	184
  2105  013DE8  6EE6               	movwf	postinc1,c
  2106  013DEA  0E0B               	movlw	11
  2107  013DEC  6EE6               	movwf	postinc1,c
  2108  013DEE  0E09               	movlw	9
  2109  013DF0  6EE6               	movwf	postinc1,c
  2110  013DF2  EC25  F0BE         	call	_StartTimer	;wreg free
  2111                           
  2112                           ;main.c: 221:    start_adc_scan();
  2113  013DF6  EC01  F0BB         	call	_start_adc_scan	;wreg free
  2114                           
  2115                           ;main.c: 222:    start_switch_handler();
  2116  013DFA  EC6B  F0C1         	call	_start_switch_handler	;wreg free
  2117                           
  2118                           ;main.c: 224:    break;
  2119  013DFE  D01C               	goto	l12013
  2120  013E00                     l1256:
  2121                           
  2122                           ; BSR set to: 1
  2123                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2124  013E00  0100               	movlb	0	; () banked
  2125  013E02  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2126                           
  2127                           ;main.c: 231:    break;
  2128  013E04  D019               	goto	l12013
  2129  013E06                     l1258:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2133  013E06  6B00               	clrf	_V& (0+255),b	;volatile
  2134                           
  2135                           ;main.c: 235:    break;
  2136  013E08  D017               	goto	l12013
  2137  013E0A                     l12011:
  2138  013E0A  0101               	movlb	1	; () banked
  2139  013E0C  5100               	movf	_V& (0+255),w,b	;volatile
  2140  013E0E  6E3C               	movwf	(btemp+10)^0,c
  2141  013E10  6A3D               	clrf	(btemp+11)^0,c
  2142                           
  2143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 1, Range of values is 0 to 0
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte            4     3 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  013E12  503D               	movf	(btemp+11)^0,w,c
  2151  013E14  0A00               	xorlw	0	; case 0
  2152  013E16  A4D8               	btfss	status,2,c
  2153  013E18  D7F6               	goto	l1258
  2154                           
  2155                           ; BSR set to: 1
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 5, Range of values is 0 to 5
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           16     9 (average)
  2161                           ;	Chosen strategy is simple_byte
  2162  013E1A  503C               	movf	(btemp+10)^0,w,c
  2163  013E1C  0A00               	xorlw	0	; case 0
  2164  013E1E  B4D8               	btfsc	status,2,c
  2165  013E20  D724               	goto	l11969
  2166  013E22  0A01               	xorlw	1	; case 1
  2167  013E24  B4D8               	btfsc	status,2,c
  2168  013E26  D008               	goto	l12013
  2169  013E28  0A02               	xorlw	2	; case 3
  2170  013E2A  B4D8               	btfsc	status,2,c
  2171  013E2C  D005               	goto	l12013
  2172  013E2E  0A07               	xorlw	7	; case 4
  2173  013E30  B4D8               	btfsc	status,2,c
  2174  013E32  D7E6               	goto	l1256
  2175  013E34  0A01               	xorlw	1	; case 5
  2176  013E36  D7E7               	goto	l1258
  2177  013E38                     l12013:
  2178                           
  2179                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2180  013E38  0E01               	movlw	1
  2181  013E3A  6EE6               	movwf	postinc1,c
  2182  013E3C  EC13  F0C1         	call	_TimerDone	;wreg free
  2183  013E40  5032               	movf	btemp^0,w,c
  2184  013E42  B4D8               	btfsc	status,2,c
  2185  013E44  D013               	goto	l12025
  2186  013E46  EC9D  F0C2         	call	_check_adc_scan	;wreg free
  2187  013E4A  5032               	movf	btemp^0,w,c
  2188  013E4C  B4D8               	btfsc	status,2,c
  2189  013E4E  D00E               	goto	l12025
  2190                           
  2191                           ;main.c: 242:    convert_adc_data();
  2192  013E50  ECF2  F0B9         	call	_convert_adc_data	;wreg free
  2193                           
  2194                           ;main.c: 246:    clear_adc_scan();
  2195  013E54  ECA5  F0C2         	call	_clear_adc_scan	;wreg free
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;main.c: 247:    start_adc_scan();
  2199  013E58  EC01  F0BB         	call	_start_adc_scan	;wreg free
  2200                           
  2201                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2202  013E5C  0EC8               	movlw	200
  2203  013E5E  6EE6               	movwf	postinc1,c
  2204  013E60  0E00               	movlw	0
  2205  013E62  6EE6               	movwf	postinc1,c
  2206  013E64  0E01               	movlw	1
  2207  013E66  6EE6               	movwf	postinc1,c
  2208  013E68  EC25  F0BE         	call	_StartTimer	;wreg free
  2209  013E6C                     l12025:
  2210                           
  2211                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2212                           
  2213                           ;main.c: 251:   if (V.ticks) {
  2214  013E6C  0E0A               	movlw	10
  2215  013E6E  6EE6               	movwf	postinc1,c
  2216  013E70  EC13  F0C1         	call	_TimerDone	;wreg free
  2217  013E74  5032               	movf	btemp^0,w,c
  2218  013E76  B4D8               	btfsc	status,2,c
  2219  013E78  D0AB               	goto	l12043
  2220                           
  2221                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2222  013E7A  0E09               	movlw	9
  2223  013E7C  6EE6               	movwf	postinc1,c
  2224  013E7E  EC13  F0C1         	call	_TimerDone	;wreg free
  2225  013E82  5032               	movf	btemp^0,w,c
  2226  013E84  B4D8               	btfsc	status,2,c
  2227  013E86  D004               	goto	l12033
  2228                           
  2229                           ;main.c: 257:     set_display_info(DIS_STR);
  2230  013E88  0E00               	movlw	0
  2231  013E8A  6EE6               	movwf	postinc1,c
  2232  013E8C  EC99  F0C1         	call	_set_display_info	;wreg free
  2233  013E90                     l12033:
  2234                           
  2235                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d", get_raw_result(C_BATT), C
      +                          .calc[C_BATT], get_switch(SSELECT));
  2236  013E90  0E02               	movlw	2
  2237  013E92  6EE6               	movwf	postinc1,c
  2238  013E94  ECD3  F0BF         	call	_get_switch	;wreg free
  2239  013E98  5032               	movf	btemp^0,w,c
  2240  013E9A  6EE6               	movwf	postinc1,c
  2241  013E9C  0E00               	movlw	0
  2242  013E9E  6EE6               	movwf	postinc1,c
  2243  013EA0  0060  FC03  FFE6   	movff	_C,postinc1
  2244  013EA6  0060  FC07  FFE6   	movff	_C+1,postinc1
  2245  013EAC  0060  FC0B  FFE6   	movff	_C+2,postinc1
  2246  013EB2  0060  FC0F  FFE6   	movff	_C+3,postinc1
  2247  013EB8  0E00               	movlw	0
  2248  013EBA  6EE6               	movwf	postinc1,c
  2249  013EBC  EC8A  F0C1         	call	_get_raw_result	;wreg free
  2250  013EC0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2251  013EC6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2252  013ECC  0EB3               	movlw	low STR_9
  2253  013ECE  6EE6               	movwf	postinc1,c
  2254  013ED0  0EFF               	movlw	high STR_9
  2255  013ED2  6EE6               	movwf	postinc1,c
  2256  013ED4  0E00               	movlw	0
  2257  013ED6  6EE6               	movwf	postinc1,c
  2258  013ED8  0E00               	movlw	0
  2259  013EDA  6EE6               	movwf	postinc1,c
  2260  013EDC  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2261  013EE0  0060  F0CB  FFE6   	movff	btemp,postinc1
  2262  013EE6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2263  013EEC  0E0C               	movlw	12
  2264  013EEE  6EE6               	movwf	postinc1,c
  2265  013EF0  EC22  F0B4         	call	_sprintf	;wreg free
  2266                           
  2267                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d", get_raw_result(C_PV), C.c
      +                          alc[C_PV], get_switch(SENTER));
  2268  013EF4  0E03               	movlw	3
  2269  013EF6  6EE6               	movwf	postinc1,c
  2270  013EF8  ECD3  F0BF         	call	_get_switch	;wreg free
  2271  013EFC  5032               	movf	btemp^0,w,c
  2272  013EFE  6EE6               	movwf	postinc1,c
  2273  013F00  0E00               	movlw	0
  2274  013F02  6EE6               	movwf	postinc1,c
  2275  013F04  0060  FC13  FFE6   	movff	_C+4,postinc1
  2276  013F0A  0060  FC17  FFE6   	movff	_C+5,postinc1
  2277  013F10  0060  FC1B  FFE6   	movff	_C+6,postinc1
  2278  013F16  0060  FC1F  FFE6   	movff	_C+7,postinc1
  2279  013F1C  0E01               	movlw	1
  2280  013F1E  6EE6               	movwf	postinc1,c
  2281  013F20  EC8A  F0C1         	call	_get_raw_result	;wreg free
  2282  013F24  0060  F0CB  FFE6   	movff	btemp,postinc1
  2283  013F2A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2284  013F30  0EB3               	movlw	low STR_9
  2285  013F32  6EE6               	movwf	postinc1,c
  2286  013F34  0EFF               	movlw	high STR_9
  2287  013F36  6EE6               	movwf	postinc1,c
  2288  013F38  0E00               	movlw	0
  2289  013F3A  6EE6               	movwf	postinc1,c
  2290  013F3C  0E01               	movlw	1
  2291  013F3E  6EE6               	movwf	postinc1,c
  2292  013F40  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2293  013F44  0060  F0CB  FFE6   	movff	btemp,postinc1
  2294  013F4A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2295  013F50  0E0C               	movlw	12
  2296  013F52  6EE6               	movwf	postinc1,c
  2297  013F54  EC22  F0B4         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 262:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(V_CC), 
      +                          C.calc[V_CC], check_switches());
  2300  013F58  EC91  F0C2         	call	_check_switches	;wreg free
  2301  013F5C  5032               	movf	btemp^0,w,c
  2302  013F5E  6EE6               	movwf	postinc1,c
  2303  013F60  0E00               	movlw	0
  2304  013F62  6EE6               	movwf	postinc1,c
  2305  013F64  0060  FC23  FFE6   	movff	_C+8,postinc1
  2306  013F6A  0060  FC27  FFE6   	movff	_C+9,postinc1
  2307  013F70  0060  FC2B  FFE6   	movff	_C+10,postinc1
  2308  013F76  0060  FC2F  FFE6   	movff	_C+11,postinc1
  2309  013F7C  0E02               	movlw	2
  2310  013F7E  6EE6               	movwf	postinc1,c
  2311  013F80  EC8A  F0C1         	call	_get_raw_result	;wreg free
  2312  013F84  0060  F0CB  FFE6   	movff	btemp,postinc1
  2313  013F8A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2314  013F90  0E84               	movlw	low STR_11
  2315  013F92  6EE6               	movwf	postinc1,c
  2316  013F94  0EFF               	movlw	high STR_11
  2317  013F96  6EE6               	movwf	postinc1,c
  2318  013F98  0E00               	movlw	0
  2319  013F9A  6EE6               	movwf	postinc1,c
  2320  013F9C  0E02               	movlw	2
  2321  013F9E  6EE6               	movwf	postinc1,c
  2322  013FA0  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  2323  013FA4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2324  013FAA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2325  013FB0  0E0C               	movlw	12
  2326  013FB2  6EE6               	movwf	postinc1,c
  2327  013FB4  EC22  F0B4         	call	_sprintf	;wreg free
  2328                           
  2329                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  2330  013FB8  0EFA               	movlw	250
  2331  013FBA  6EE6               	movwf	postinc1,c
  2332  013FBC  0E00               	movlw	0
  2333  013FBE  6EE6               	movwf	postinc1,c
  2334  013FC0  0E0A               	movlw	10
  2335  013FC2  6EE6               	movwf	postinc1,c
  2336  013FC4  EC25  F0BE         	call	_StartTimer	;wreg free
  2337                           
  2338                           ;main.c: 264:    update_lcd(0);
  2339  013FC8  0E00               	movlw	0
  2340  013FCA  6EE6               	movwf	postinc1,c
  2341  013FCC  EC9B  F0B3         	call	_update_lcd	;wreg free
  2342  013FD0                     l12043:
  2343                           
  2344                           ;main.c: 270:   check_help(V.flipper);
  2345  013FD0  0101               	movlb	1	; () banked
  2346  013FD2  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2347  013FD4  6EE6               	movwf	postinc1,c
  2348  013FD6  EC0D  F0AA         	call	_check_help	;wreg free
  2349                           
  2350                           ;main.c: 275:   if (V.set_sequ) {
  2351  013FDA  0101               	movlb	1	; () banked
  2352  013FDC  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2353  013FDE  D715               	goto	l12011
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;main.c: 276:    if (TimerDone(TMR_INFO)) {
  2357  013FE0  0E07               	movlw	7
  2358  013FE2  6EE6               	movwf	postinc1,c
  2359  013FE4  EC13  F0C1         	call	_TimerDone	;wreg free
  2360  013FE8  5032               	movf	btemp^0,w,c
  2361  013FEA  B4D8               	btfsc	status,2,c
  2362  013FEC  D00B               	goto	l12055
  2363                           
  2364                           ;main.c: 277:     V.set_sequ = 0;
  2365  013FEE  0101               	movlb	1	; () banked
  2366  013FF0  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 278:     set_vterm(0);
  2370  013FF2  0E00               	movlw	0
  2371  013FF4  6EE6               	movwf	postinc1,c
  2372  013FF6  ECD4  F0C1         	call	_set_vterm	;wreg free
  2373                           
  2374                           ; BSR set to: 5
  2375                           ;main.c: 279:     update_lcd(0);
  2376  013FFA  0E00               	movlw	0
  2377  013FFC  6EE6               	movwf	postinc1,c
  2378  013FFE  EC9B  F0B3         	call	_update_lcd	;wreg free
  2379                           
  2380                           ;main.c: 280:    } else {
  2381  014002  D703               	goto	l12011
  2382  014004                     l12055:
  2383                           
  2384                           ;main.c: 281:     set_vterm(2);
  2385  014004  0E02               	movlw	2
  2386  014006  6EE6               	movwf	postinc1,c
  2387  014008  ECD4  F0C1         	call	_set_vterm	;wreg free
  2388                           
  2389                           ; BSR set to: 5
  2390                           ;main.c: 282:     update_lcd(2);
  2391  01400C  0E02               	movlw	2
  2392  01400E  6EE6               	movwf	postinc1,c
  2393  014010  EC9B  F0B3         	call	_update_lcd	;wreg free
  2394  014014  D6FA               	goto	l12011
  2395  014016                     __end_of_main:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _start_switch_handler *****************
  2399 ;; Defined at:
  2400 ;;		line 119 in file "dio.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1  [STACK] void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 1/4
  2411 ;;		On exit  : 3F/39
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    7
  2421 ;; This function calls:
  2422 ;;		_INT1_SetInterruptHandler
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text1
  2429  0182D6                     __ptext1:
  2430                           	opt callstack 0
  2431  0182D6                     _start_switch_handler:
  2432                           	opt callstack 23
  2433                           
  2434                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2435                           
  2436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2437                           ;incstack = 0
  2438  0182D6  0139               	movlb	57	; () banked
  2439  0182D8  9195               	bcf	149,0,b	;volatile
  2440                           
  2441                           ; BSR set to: 57
  2442                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2443  0182DA  0E70               	movlw	low _switch_handler
  2444  0182DC  6EE6               	movwf	postinc1,c
  2445  0182DE  0E61               	movlw	high _switch_handler
  2446  0182E0  6EE6               	movwf	postinc1,c
  2447  0182E2  0E01               	movlw	low (_switch_handler shr (0+16))
  2448  0182E4  6EE6               	movwf	postinc1,c
  2449  0182E6  EC5F  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2450                           
  2451                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2452  0182EA  0E02               	movlw	2
  2453  0182EC  0100               	movlb	0	; () banked
  2454  0182EE  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2458  0182F0  0139               	movlb	57	; () banked
  2459  0182F2  8195               	bsf	149,0,b	;volatile
  2460                           
  2461                           ; BSR set to: 57
  2462                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2463  0182F4  0012               	return		;funcret
  2464  0182F6                     __end_of_start_switch_handler:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _start_adc_scan *****************
  2468 ;; Defined at:
  2469 ;;		line 33 in file "daq.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1  [STACK] _Bool 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/5
  2480 ;;		On exit  : 1/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    7
  2490 ;; This function calls:
  2491 ;;		_ADCC_DischargeSampleCapacitor
  2492 ;;		_ADCC_SetADIInterruptHandler
  2493 ;;		_ADCC_SetADTIInterruptHandler
  2494 ;;		_ADCC_StartConversion
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text2
  2501  017602                     __ptext2:
  2502                           	opt callstack 0
  2503  017602                     _start_adc_scan:
  2504                           	opt callstack 23
  2505                           
  2506                           ;daq.c: 35:  if (R.done)
  2507                           
  2508                           ; BSR set to: 57
  2509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2510                           ;incstack = 0
  2511  017602  0100               	movlb	0	; () banked
  2512  017604  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2513  017606  A4D8               	btfss	status,2,c
  2514  017608  0012               	return	
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;daq.c: 38:  R.scan_index = 0;
  2518  01760A  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2522  01760C  013A               	movlb	58	; () banked
  2523  01760E  5140               	movf	64,w,b	;volatile
  2524  017610  006E F940  F032    	movff	14928,btemp	;volatile
  2525  017616  6A33               	clrf	(btemp+1)^0,c
  2526  017618  0060  F0C8  F033   	movff	btemp,btemp+1
  2527  01761E  6A32               	clrf	btemp^0,c
  2528  017620  2632               	addwf	btemp^0,f,c
  2529  017622  0E00               	movlw	0
  2530  017624  2233               	addwfc	(btemp+1)^0,f,c
  2531  017626  0E77               	movlw	119
  2532  017628  1432               	andwf	btemp^0,w,c
  2533  01762A  0100               	movlb	0	; () banked
  2534  01762C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2535  01762E  0E3C               	movlw	60
  2536  017630  1433               	andwf	(btemp+1)^0,w,c
  2537  017632  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2541  017634  0E68               	movlw	low _adc_int_handler
  2542  017636  6EE6               	movwf	postinc1,c
  2543  017638  0E85               	movlw	high _adc_int_handler
  2544  01763A  6EE6               	movwf	postinc1,c
  2545  01763C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2546  01763E  6EE6               	movwf	postinc1,c
  2547  017640  EC9B  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2548                           
  2549                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2550  017644  0E66               	movlw	low _adc_int_t_handler
  2551  017646  6EE6               	movwf	postinc1,c
  2552  017648  0E73               	movlw	high _adc_int_t_handler
  2553  01764A  6EE6               	movwf	postinc1,c
  2554  01764C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2555  01764E  6EE6               	movwf	postinc1,c
  2556  017650  EC87  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2557                           
  2558                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2559  017654  EC8D  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2560                           
  2561                           ; BSR set to: 62
  2562                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2563  017658  0100               	movlb	0	; () banked
  2564  01765A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2565  01765C  0B0F               	andlw	15
  2566  01765E  6EE6               	movwf	postinc1,c
  2567  017660  EC40  F0C2         	call	_ADCC_StartConversion	;wreg free
  2568                           
  2569                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2570  017664  0012               	return		;funcret
  2571  017666                     __end_of_start_adc_scan:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _ADCC_StartConversion *****************
  2575 ;; Defined at:
  2576 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  channel         1  [STACK] enum E16136
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1  [STACK] void 
  2583 ;; Registers used:
  2584 ;;		fsr1l, fsr1h
  2585 ;; Tracked objects:
  2586 ;;		On entry : 3F/0
  2587 ;;		On exit  : 3F/3E
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    6
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_start_adc_scan
  2601 ;;		_adc_int_t_handler
  2602 ;; This function uses a reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text3
  2606  018480                     __ptext3:
  2607                           	opt callstack 0
  2608  018480                     _ADCC_StartConversion:
  2609                           	opt callstack 6
  2610                           
  2611                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2612                           ;stkvar	_channel @ sp[(0)+-1]
  2613                           
  2614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2615                           ;incstack = 0
  2616  018480  0EFF               	movlw	-1
  2617  018482  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2618                           
  2619                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2620  018488  013E               	movlb	62	; () banked
  2621  01848A  8FF8               	bsf	248,7,b	;volatile
  2622                           
  2623                           ; BSR set to: 62
  2624                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2625  01848C  81F8               	bsf	248,0,b	;volatile
  2626                           
  2627                           ; BSR set to: 62
  2628                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2629  01848E  52E5               	movf	postdec1,f,c
  2630  018490  0012               	return		;funcret
  2631  018492                     __end_of_ADCC_StartConversion:
  2632                           	opt callstack 0
  2633                           
  2634 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2635 ;; Defined at:
  2636 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1  [STACK] void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 3F/3E
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    6
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_start_adc_scan
  2661 ;;		_adc_int_t_handler
  2662 ;; This function uses a reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text4
  2666  01851A                     __ptext4:
  2667                           	opt callstack 0
  2668  01851A                     _ADCC_DischargeSampleCapacitor:
  2669                           	opt callstack 6
  2670                           
  2671                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2672                           
  2673                           ; BSR set to: 62
  2674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2675                           ;incstack = 0
  2676  01851A  0E3B               	movlw	59
  2677  01851C  013E               	movlb	62	; () banked
  2678  01851E  6FF1               	movwf	241,b	;volatile
  2679                           
  2680                           ; BSR set to: 62
  2681                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2682  018520  0012               	return		;funcret
  2683  018522                     __end_of_ADCC_DischargeSampleCapacitor:
  2684                           	opt callstack 0
  2685                           
  2686 ;; *************** function _srand *****************
  2687 ;; Defined at:
  2688 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  s               2  [STACK] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1  [STACK] void 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2697 ;; Tracked objects:
  2698 ;;		On entry : 3F/0
  2699 ;;		On exit  : 3F/1
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    6
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text5
  2717  017D2A                     __ptext5:
  2718                           	opt callstack 0
  2719  017D2A                     _srand:
  2720                           	opt callstack 24
  2721                           
  2722                           ;stkvar	_s @ sp[(0)+-2]
  2723                           
  2724                           ; BSR set to: 62
  2725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2726                           ;incstack = 0
  2727  017D2A  0EFE               	movlw	-2
  2728  017D2C  50E3               	movf	plusw1,w,c
  2729  017D2E  0FFF               	addlw	255
  2730  017D30  6E3C               	movwf	(btemp+10)^0,c
  2731  017D32  0EFF               	movlw	-1
  2732  017D34  006F FF8C  F03D    	movff	plusw1,btemp+11
  2733  017D3A  0EFF               	movlw	255
  2734  017D3C  223D               	addwfc	(btemp+11)^0,f,c
  2735  017D3E  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2736  017D44  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2737  017D4A  0101               	movlb	1	; () banked
  2738  017D4C  6BBD               	clrf	(_seed+2)& (0+255),b
  2739  017D4E  6BBE               	clrf	(_seed+3)& (0+255),b
  2740  017D50  6BBF               	clrf	(_seed+4)& (0+255),b
  2741  017D52  6BC0               	clrf	(_seed+5)& (0+255),b
  2742  017D54  6BC1               	clrf	(_seed+6)& (0+255),b
  2743  017D56  6BC2               	clrf	(_seed+7)& (0+255),b
  2744                           
  2745                           ; BSR set to: 1
  2746                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2747  017D58  52E5               	movf	postdec1,f,c
  2748  017D5A  52E5               	movf	postdec1,f,c
  2749  017D5C  0012               	return		;funcret
  2750  017D5E                     __end_of_srand:
  2751                           	opt callstack 0
  2752                           
  2753 ;; *************** function _init_display *****************
  2754 ;; Defined at:
  2755 ;;		line 37 in file "eadog.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1  [STACK] void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/1
  2766 ;;		On exit  : 3F/3D
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    8
  2776 ;; This function calls:
  2777 ;;		_ringBufS_init
  2778 ;;		_send_lcd_cmd
  2779 ;;		_send_lcd_cmd_long
  2780 ;;		_wdtdelay
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;; This function uses a reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text6
  2787  016A42                     __ptext6:
  2788                           	opt callstack 0
  2789  016A42                     _init_display:
  2790                           	opt callstack 22
  2791                           
  2792                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2793                           
  2794                           ; BSR set to: 1
  2795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2796                           ;incstack = 0
  2797  016A42  0E43               	movlw	low _ring_buf1
  2798  016A44  0100               	movlb	0	; () banked
  2799  016A46  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2800  016A48  0E04               	movlw	high _ring_buf1
  2801  016A4A  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2802                           
  2803                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2804  016A4C  0E00               	movlw	low _ring_buf2
  2805  016A4E  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2806  016A50  0E04               	movlw	high _ring_buf2
  2807  016A52  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2811  016A54  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  2812  016A5A  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  2813  016A60  ECBF  F0BF         	call	_ringBufS_init	;wreg free
  2814                           
  2815                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2816  016A64  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  2817  016A6A  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  2818  016A70  ECBF  F0BF         	call	_ringBufS_init	;wreg free
  2819                           
  2820                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2821  016A74  84BE               	bsf	190,2,c	;volatile
  2822  016A76  84BC               	bsf	188,2,c	;volatile
  2823                           
  2824                           ;eadog.c: 46:  wdtdelay(350000);
  2825  016A78  0E30               	movlw	48
  2826  016A7A  6EE6               	movwf	postinc1,c
  2827  016A7C  0E57               	movlw	87
  2828  016A7E  6EE6               	movwf	postinc1,c
  2829  016A80  0E05               	movlw	5
  2830  016A82  6EE6               	movwf	postinc1,c
  2831  016A84  0E00               	movlw	0
  2832  016A86  6EE6               	movwf	postinc1,c
  2833  016A88  ECF6  F0BB         	call	_wdtdelay	;wreg free
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2837  016A8C  0E39               	movlw	57
  2838  016A8E  6EE6               	movwf	postinc1,c
  2839  016A90  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2843  016A94  0E1D               	movlw	29
  2844  016A96  6EE6               	movwf	postinc1,c
  2845  016A98  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2849  016A9C  0E50               	movlw	80
  2850  016A9E  6EE6               	movwf	postinc1,c
  2851  016AA0  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2855  016AA4  0E6C               	movlw	108
  2856  016AA6  6EE6               	movwf	postinc1,c
  2857  016AA8  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2861  016AAC  0E76               	movlw	118
  2862  016AAE  6EE6               	movwf	postinc1,c
  2863  016AB0  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2867  016AB4  0E38               	movlw	56
  2868  016AB6  6EE6               	movwf	postinc1,c
  2869  016AB8  EC97  F0BF         	call	_send_lcd_cmd_long	;wreg free
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2873  016ABC  0E0F               	movlw	15
  2874  016ABE  6EE6               	movwf	postinc1,c
  2875  016AC0  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2879  016AC4  0E01               	movlw	1
  2880  016AC6  6EE6               	movwf	postinc1,c
  2881  016AC8  EC97  F0BF         	call	_send_lcd_cmd_long	;wreg free
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2885  016ACC  0E02               	movlw	2
  2886  016ACE  6EE6               	movwf	postinc1,c
  2887  016AD0  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2891  016AD4  0E06               	movlw	6
  2892  016AD6  6EE6               	movwf	postinc1,c
  2893  016AD8  ECAB  F0BF         	call	_send_lcd_cmd	;wreg free
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;eadog.c: 57:  wdtdelay(30);
  2897  016ADC  0E1E               	movlw	30
  2898  016ADE  6EE6               	movwf	postinc1,c
  2899  016AE0  0E00               	movlw	0
  2900  016AE2  6EE6               	movwf	postinc1,c
  2901  016AE4  0E00               	movlw	0
  2902  016AE6  6EE6               	movwf	postinc1,c
  2903  016AE8  0E00               	movlw	0
  2904  016AEA  6EE6               	movwf	postinc1,c
  2905  016AEC  ECF6  F0BB         	call	_wdtdelay	;wreg free
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2909  016AF0  0E02               	movlw	2
  2910  016AF2  013D               	movlb	61	; () banked
  2911  016AF4  6F16               	movwf	22,b	;volatile
  2912                           
  2913                           ; BSR set to: 61
  2914                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2915  016AF6  0E40               	movlw	64
  2916  016AF8  6F15               	movwf	21,b	;volatile
  2917                           
  2918                           ; BSR set to: 61
  2919                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2920  016AFA  0E83               	movlw	131
  2921  016AFC  6F14               	movwf	20,b	;volatile
  2922                           
  2923                           ; BSR set to: 61
  2924                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2925  016AFE  931A               	bcf	26,1,b	;volatile
  2926                           
  2927                           ; BSR set to: 61
  2928                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2929  016B00  0E3F               	movlw	-193
  2930  016B02  013B               	movlb	59	; () banked
  2931  016B04  17FD               	andwf	253,f,b	;volatile
  2932                           
  2933                           ; BSR set to: 59
  2934                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2935  016B06  9BFD               	bcf	253,5,b	;volatile
  2936                           
  2937                           ; BSR set to: 59
  2938                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2939  016B08  51FD               	movf	253,w,b	;volatile
  2940  016B0A  0BF9               	andlw	-7
  2941  016B0C  0902               	iorlw	2
  2942  016B0E  6FFD               	movwf	253,b	;volatile
  2943                           
  2944                           ; BSR set to: 59
  2945                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2946  016B10  0EE7               	movlw	-25
  2947  016B12  17FD               	andwf	253,f,b	;volatile
  2948                           
  2949                           ; BSR set to: 59
  2950                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2951  016B14  81FD               	bsf	253,0,b	;volatile
  2952                           
  2953                           ; BSR set to: 59
  2954                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2955  016B16  0E43               	movlw	low _ring_buf1
  2956  016B18  6FF9               	movwf	249,b	;volatile
  2957  016B1A  0E04               	movlw	high _ring_buf1
  2958  016B1C  6FFA               	movwf	250,b	;volatile
  2959  016B1E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2960  016B20  6FFB               	movwf	251,b	;volatile
  2961                           
  2962                           ; BSR set to: 59
  2963                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2964  016B22  9BFC               	bcf	252,5,b	;volatile
  2965                           
  2966                           ; BSR set to: 59
  2967                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2968  016B24  013D               	movlb	61	; () banked
  2969  016B26  831A               	bsf	26,1,b	;volatile
  2970                           
  2971                           ; BSR set to: 61
  2972                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2973  016B28  94BE               	bcf	190,2,c	;volatile
  2974                           
  2975                           ; BSR set to: 61
  2976                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2977  016B2A  0012               	return		;funcret
  2978  016B2C                     __end_of_init_display:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _send_lcd_cmd_long *****************
  2982 ;; Defined at:
  2983 ;;		line 114 in file "eadog.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  cmd             1  [STACK] const unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1  [STACK] void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2992 ;; Tracked objects:
  2993 ;;		On entry : 3F/0
  2994 ;;		On exit  : 3F/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    7
  3004 ;; This function calls:
  3005 ;;		_SPI1_Exchange8bit
  3006 ;;		_wdtdelay
  3007 ;; This function is called by:
  3008 ;;		_init_display
  3009 ;; This function uses a reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text7
  3013  017F2E                     __ptext7:
  3014                           	opt callstack 0
  3015  017F2E                     _send_lcd_cmd_long:
  3016                           	opt callstack 22
  3017                           
  3018                           ; BSR set to: 61
  3019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3020                           ;incstack = 0
  3021                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3022  017F2E  92BC               	bcf	188,1,c	;volatile
  3023                           
  3024                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3025  017F30  94BC               	bcf	188,2,c	;volatile
  3026                           
  3027                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3028                           ;stkvar	_cmd @ sp[(0)+-1]
  3029  017F32  0EFF               	movlw	-1
  3030  017F34  50E3               	movf	plusw1,w,c
  3031  017F36  6EE6               	movwf	postinc1,c
  3032  017F38  EC7B  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3033                           
  3034                           ; BSR set to: 57
  3035                           ;eadog.c: 119:  wdtdelay(800);
  3036  017F3C  0E20               	movlw	32
  3037  017F3E  6EE6               	movwf	postinc1,c
  3038  017F40  0E03               	movlw	3
  3039  017F42  6EE6               	movwf	postinc1,c
  3040  017F44  0E00               	movlw	0
  3041  017F46  6EE6               	movwf	postinc1,c
  3042  017F48  0E00               	movlw	0
  3043  017F4A  6EE6               	movwf	postinc1,c
  3044  017F4C  ECF6  F0BB         	call	_wdtdelay	;wreg free
  3045                           
  3046                           ; BSR set to: 0
  3047  017F50  82BC               	bsf	188,1,c	;volatile
  3048                           
  3049                           ; BSR set to: 0
  3050                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3051  017F52  52E5               	movf	postdec1,f,c
  3052  017F54  0012               	return		;funcret
  3053  017F56                     __end_of_send_lcd_cmd_long:
  3054                           	opt callstack 0
  3055                           
  3056 ;; *************** function _send_lcd_cmd *****************
  3057 ;; Defined at:
  3058 ;;		line 102 in file "eadog.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  cmd             1  [STACK] const unsigned char 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1  [STACK] void 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3067 ;; Tracked objects:
  3068 ;;		On entry : 3F/0
  3069 ;;		On exit  : 3F/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    7
  3079 ;; This function calls:
  3080 ;;		_SPI1_Exchange8bit
  3081 ;;		_wdtdelay
  3082 ;; This function is called by:
  3083 ;;		_init_display
  3084 ;; This function uses a reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text8
  3088  017F56                     __ptext8:
  3089                           	opt callstack 0
  3090  017F56                     _send_lcd_cmd:
  3091                           	opt callstack 22
  3092                           
  3093                           ; BSR set to: 0
  3094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3095                           ;incstack = 0
  3096                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3097  017F56  92BC               	bcf	188,1,c	;volatile
  3098                           
  3099                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3100  017F58  94BC               	bcf	188,2,c	;volatile
  3101                           
  3102                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3103                           ;stkvar	_cmd @ sp[(0)+-1]
  3104  017F5A  0EFF               	movlw	-1
  3105  017F5C  50E3               	movf	plusw1,w,c
  3106  017F5E  6EE6               	movwf	postinc1,c
  3107  017F60  EC7B  F0C1         	call	_SPI1_Exchange8bit	;wreg free
  3108                           
  3109                           ; BSR set to: 57
  3110                           ;eadog.c: 107:  wdtdelay(30);
  3111  017F64  0E1E               	movlw	30
  3112  017F66  6EE6               	movwf	postinc1,c
  3113  017F68  0E00               	movlw	0
  3114  017F6A  6EE6               	movwf	postinc1,c
  3115  017F6C  0E00               	movlw	0
  3116  017F6E  6EE6               	movwf	postinc1,c
  3117  017F70  0E00               	movlw	0
  3118  017F72  6EE6               	movwf	postinc1,c
  3119  017F74  ECF6  F0BB         	call	_wdtdelay	;wreg free
  3120                           
  3121                           ; BSR set to: 0
  3122  017F78  82BC               	bsf	188,1,c	;volatile
  3123                           
  3124                           ; BSR set to: 0
  3125                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3126  017F7A  52E5               	movf	postdec1,f,c
  3127  017F7C  0012               	return		;funcret
  3128  017F7E                     __end_of_send_lcd_cmd:
  3129                           	opt callstack 0
  3130                           
  3131 ;; *************** function _SPI1_Exchange8bit *****************
  3132 ;; Defined at:
  3133 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  data            1  [STACK] unsigned char 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1  [STACK] unsigned char 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 3F/39
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    6
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_send_lcd_cmd
  3158 ;;		_send_lcd_cmd_long
  3159 ;; This function uses a reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text9
  3163  0182F6                     __ptext9:
  3164                           	opt callstack 0
  3165  0182F6                     _SPI1_Exchange8bit:
  3166                           	opt callstack 22
  3167                           
  3168                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3169                           
  3170                           ; BSR set to: 0
  3171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3172                           ;incstack = 0
  3173  0182F6  0E01               	movlw	1
  3174  0182F8  013D               	movlb	61	; () banked
  3175  0182FA  6F12               	movwf	18,b	;volatile
  3176                           
  3177                           ; BSR set to: 61
  3178                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3179                           ;stkvar	_data @ sp[(0)+-1]
  3180  0182FC  0EFF               	movlw	-1
  3181  0182FE  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3182  018304                     l835:
  3183                           
  3184                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3185  018304  0139               	movlb	57	; () banked
  3186  018306  A9A2               	btfss	162,4,b	;volatile
  3187  018308  D7FD               	goto	l835
  3188                           
  3189                           ; BSR set to: 57
  3190                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3191  01830A  006F F440  F032    	movff	15632,btemp	;volatile
  3192                           
  3193                           ; BSR set to: 57
  3194                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3195  018310  52E5               	movf	postdec1,f,c
  3196  018312  0012               	return		;funcret
  3197  018314                     __end_of_SPI1_Exchange8bit:
  3198                           	opt callstack 0
  3199                           
  3200 ;; *************** function _ringBufS_init *****************
  3201 ;; Defined at:
  3202 ;;		line 22 in file "ringbufs.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  _this           2  [STACK] PTR volatile struct ring
  3205 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1  [STACK] void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    7
  3224 ;; This function calls:
  3225 ;;		_memset
  3226 ;; This function is called by:
  3227 ;;		_init_display
  3228 ;; This function uses a reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text10
  3232  017F7E                     __ptext10:
  3233                           	opt callstack 0
  3234  017F7E                     _ringBufS_init:
  3235                           	opt callstack 22
  3236                           
  3237                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3238                           
  3239                           ; BSR set to: 57
  3240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3241                           ;incstack = 0
  3242  017F7E  0E43               	movlw	67
  3243  017F80  6EE6               	movwf	postinc1,c
  3244  017F82  0E00               	movlw	0
  3245  017F84  6EE6               	movwf	postinc1,c
  3246  017F86  0E00               	movlw	0
  3247  017F88  6EE6               	movwf	postinc1,c
  3248  017F8A  0E00               	movlw	0
  3249  017F8C  6EE6               	movwf	postinc1,c
  3250                           
  3251                           ;stkvar	__this @ sp[(-4)+-2]
  3252  017F8E  0EFA               	movlw	-6
  3253  017F90  006F FF8F FFE6     	movff	plusw1,postinc1
  3254  017F96  006F FF8F FFE6     	movff	plusw1,postinc1
  3255  017F9C  EC9E  F0A3         	call	_memset	;wreg free
  3256                           
  3257                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3258  017FA0  52E5               	movf	postdec1,f,c
  3259  017FA2  52E5               	movf	postdec1,f,c
  3260  017FA4  0012               	return		;funcret
  3261  017FA6                     __end_of_ringBufS_init:
  3262                           	opt callstack 0
  3263                           
  3264 ;; *************** function _get_switch *****************
  3265 ;; Defined at:
  3266 ;;		line 18 in file "dio.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  i               1  [STACK] unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1  [STACK] enum E17013
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/39
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    6
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text11
  3295  017FA6                     __ptext11:
  3296                           	opt callstack 0
  3297  017FA6                     _get_switch:
  3298                           	opt callstack 24
  3299                           
  3300                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3301                           ;stkvar	_i @ sp[(0)+-1]
  3302                           
  3303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3304                           ;incstack = 0
  3305  017FA6  0EFF               	movlw	-1
  3306  017FA8  006F FF8C  F032    	movff	plusw1,btemp
  3307  017FAE  0E03               	movlw	3
  3308  017FB0  6432               	cpfsgt	btemp^0,c
  3309  017FB2  D002               	goto	l11857
  3310                           
  3311                           ;dio.c: 21:   return SW_OFF;
  3312  017FB4  0E00               	movlw	0
  3313  017FB6  D008               	goto	L1
  3314  017FB8                     l11857:
  3315                           
  3316                           ;dio.c: 23:  return S.button[i].sw;
  3317                           ;stkvar	_i @ sp[(0)+-1]
  3318  017FB8  0EFF               	movlw	-1
  3319  017FBA  50E3               	movf	plusw1,w,c
  3320  017FBC  0D05               	mullw	5
  3321  017FBE  50F3               	movf	243,w,c
  3322  017FC0  0F60               	addlw	low _S
  3323  017FC2  6ED9               	movwf	fsr2l,c
  3324  017FC4  6ADA               	clrf	fsr2h,c
  3325  017FC6  50DF               	movf	indf2,w,c
  3326  017FC8                     L1:
  3327  017FC8  6E32               	movwf	btemp^0,c
  3328                           
  3329                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3330  017FCA  52E5               	movf	postdec1,f,c
  3331  017FCC  0012               	return		;funcret
  3332  017FCE                     __end_of_get_switch:
  3333                           	opt callstack 0
  3334                           
  3335 ;; *************** function _eaDogM_WriteCommand *****************
  3336 ;; Defined at:
  3337 ;;		line 160 in file "eadog.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  cmd             1  [STACK] const unsigned char 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1  [STACK] void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3346 ;; Tracked objects:
  3347 ;;		On entry : 3F/3D
  3348 ;;		On exit  : 3F/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:   16
  3358 ;; This function calls:
  3359 ;;		_send_lcd_cmd_dma
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text12
  3366  0184B2                     __ptext12:
  3367                           	opt callstack 0
  3368  0184B2                     _eaDogM_WriteCommand:
  3369                           	opt callstack 14
  3370                           
  3371                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3372                           ;stkvar	_cmd @ sp[(0)+-1]
  3373                           
  3374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3375                           ;incstack = 0
  3376  0184B2  0EFF               	movlw	-1
  3377  0184B4  50E3               	movf	plusw1,w,c
  3378  0184B6  6EE6               	movwf	postinc1,c
  3379  0184B8  EC7D  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  3380                           
  3381                           ; BSR set to: 0
  3382                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3383  0184BC  52E5               	movf	postdec1,f,c
  3384  0184BE  0012               	return		;funcret
  3385  0184C0                     __end_of_eaDogM_WriteCommand:
  3386                           	opt callstack 0
  3387                           
  3388 ;; *************** function _convert_adc_data *****************
  3389 ;; Defined at:
  3390 ;;		line 38 in file "mbmc.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  i               1  [STACK] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1  [STACK] void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/39
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    9
  3411 ;; This function calls:
  3412 ;;		_conv_raw_result
  3413 ;;		_lp_filter
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text13
  3420  0173E4                     __ptext13:
  3421                           	opt callstack 0
  3422  0173E4                     _convert_adc_data:
  3423                           	opt callstack 0
  3424                           
  3425                           ; BSR set to: 0
  3426                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3427  0173E4  52E6               	movf	postinc1,f,c
  3428                           
  3429                           ;mbmc.c: 40:  uint8_t i = 0;
  3430                           ;stkvar	_i @ sp[(-1)+0]
  3431                           
  3432                           ;incstack = 0
  3433  0173E6  0EFF               	movlw	-1
  3434  0173E8  6AE3               	clrf	plusw1,c
  3435  0173EA                     l11845:
  3436                           
  3437                           ;mbmc.c: 44:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3438  0173EA  0E01               	movlw	1
  3439  0173EC  6EE6               	movwf	postinc1,c
  3440                           
  3441                           ;stkvar	_i @ sp[(-2)+0]
  3442  0173EE  0EFE               	movlw	-2
  3443  0173F0  50E3               	movf	plusw1,w,c
  3444  0173F2  6EE6               	movwf	postinc1,c
  3445  0173F4  0E01               	movlw	1
  3446  0173F6  6EE6               	movwf	postinc1,c
  3447                           
  3448                           ;stkvar	_i @ sp[(-4)+0]
  3449  0173F8  0EFC               	movlw	-4
  3450  0173FA  50E3               	movf	plusw1,w,c
  3451  0173FC  6EE6               	movwf	postinc1,c
  3452  0173FE  EC71  F099         	call	_conv_raw_result	;wreg free
  3453  017402  0060  F0CB  FFE6   	movff	btemp,postinc1
  3454  017408  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3455  01740E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3456  017414  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3457  01741A  ECFC  F0AC         	call	_lp_filter	;wreg free
  3458                           
  3459                           ;stkvar	_i @ sp[(-1)+0]
  3460  01741E  0EFF               	movlw	-1
  3461  017420  50E3               	movf	plusw1,w,c
  3462  017422  0D04               	mullw	4
  3463  017424  0E00               	movlw	low _C
  3464  017426  24F3               	addwf	243,w,c
  3465  017428  6ED9               	movwf	fsr2l,c
  3466  01742A  0E03               	movlw	high _C
  3467  01742C  20F4               	addwfc	prodh,w,c
  3468  01742E  6EDA               	movwf	fsr2h,c
  3469  017430  0060  F0CB  FFDE   	movff	btemp,postinc2
  3470  017436  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3471  01743C  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3472  017442  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3473                           
  3474                           ;mbmc.c: 48:  } while (++i < 16);
  3475                           ;stkvar	_i @ sp[(-1)+0]
  3476  017448  0EFF               	movlw	-1
  3477  01744A  2AE3               	incf	plusw1,f,c
  3478  01744C  0EFF               	movlw	-1
  3479  01744E  006F FF8C  F032    	movff	plusw1,btemp
  3480  017454  0E0F               	movlw	15
  3481  017456  6432               	cpfsgt	btemp^0,c
  3482  017458  D7C8               	goto	l11845
  3483                           
  3484                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3485  01745A  52E5               	movf	postdec1,f,c
  3486  01745C  0012               	return		;funcret
  3487  01745E                     __end_of_convert_adc_data:
  3488                           	opt callstack 0
  3489                           
  3490 ;; *************** function _lp_filter *****************
  3491 ;; Defined at:
  3492 ;;		line 16 in file "mbmc.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  new             4  [STACK] const float 
  3495 ;;  bn              1  [STACK] const unsigned char 
  3496 ;;  slow            1  [STACK] const char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  lp_speed        4  [STACK] float 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  4  [STACK] float 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/39
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    8
  3515 ;; This function calls:
  3516 ;;		___fladd
  3517 ;;		___flmul
  3518 ;;		___flsub
  3519 ;; This function is called by:
  3520 ;;		_convert_adc_data
  3521 ;; This function uses a reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text14
  3525  0159F8                     __ptext14:
  3526                           	opt callstack 0
  3527  0159F8                     _lp_filter:
  3528                           	opt callstack 0
  3529                           
  3530                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3531  0159F8  52E6               	movf	postinc1,f,c
  3532  0159FA  52E6               	movf	postinc1,f,c
  3533  0159FC  52E6               	movf	postinc1,f,c
  3534  0159FE  52E6               	movf	postinc1,f,c
  3535                           
  3536                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3537                           ;stkvar	_bn @ sp[(-4)+-5]
  3538                           
  3539                           ;incstack = 0
  3540  015A00  0EF7               	movlw	-9
  3541  015A02  006F FF8C  F032    	movff	plusw1,btemp
  3542  015A08  0E0F               	movlw	15
  3543  015A0A  6432               	cpfsgt	btemp^0,c
  3544  015A0C  D011               	goto	l11699
  3545  015A0E                     u12480:
  3546                           
  3547                           ;mbmc.c: 22:   return new;
  3548                           ;stkvar	_new @ sp[(-4)+-4]
  3549  015A0E  0EF8               	movlw	-8
  3550  015A10  006F FF8C  F032    	movff	plusw1,btemp
  3551  015A16  0EF9               	movlw	-7
  3552  015A18  006F FF8C  F033    	movff	plusw1,btemp+1
  3553  015A1E  0EFA               	movlw	-6
  3554  015A20  006F FF8C  F034    	movff	plusw1,btemp+2
  3555  015A26  0EFB               	movlw	-5
  3556  015A28  006F FF8C  F035    	movff	plusw1,btemp+3
  3557  015A2E  D0BF               	goto	l1693
  3558  015A30                     l11699:
  3559                           
  3560                           ;mbmc.c: 24:  if (slow == (-1)) {
  3561                           ;stkvar	_slow @ sp[(-4)+-6]
  3562  015A30  0EF6               	movlw	-10
  3563  015A32  28E3               	incf	plusw1,w,c
  3564  015A34  A4D8               	btfss	status,2,c
  3565  015A36  D012               	goto	l11707
  3566                           
  3567                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3568                           ;stkvar	_bn @ sp[(-4)+-5]
  3569  015A38  0EF7               	movlw	-9
  3570  015A3A  50E3               	movf	plusw1,w,c
  3571  015A3C  0D04               	mullw	4
  3572  015A3E  0E00               	movlw	low lp_filter@smooth
  3573  015A40  24F3               	addwf	243,w,c
  3574  015A42  6ED9               	movwf	fsr2l,c
  3575  015A44  0E02               	movlw	high lp_filter@smooth
  3576  015A46  20F4               	addwfc	prodh,w,c
  3577  015A48  6EDA               	movwf	fsr2h,c
  3578  015A4A  0E00               	movlw	0
  3579  015A4C  6EDE               	movwf	postinc2,c
  3580  015A4E  0E00               	movlw	0
  3581  015A50  6EDE               	movwf	postinc2,c
  3582  015A52  0E00               	movlw	0
  3583  015A54  6EDE               	movwf	postinc2,c
  3584  015A56  0E00               	movlw	0
  3585  015A58  6EDD               	movwf	postdec2,c
  3586  015A5A  D7D9               	goto	u12480
  3587  015A5C                     l11707:
  3588                           
  3589                           ;mbmc.c: 29:  if (slow) {
  3590                           ;stkvar	_slow @ sp[(-4)+-6]
  3591  015A5C  0EF6               	movlw	-10
  3592  015A5E  50E3               	movf	plusw1,w,c
  3593  015A60  B4D8               	btfsc	status,2,c
  3594  015A62  D008               	goto	l11711
  3595                           
  3596                           ;mbmc.c: 30:   lp_speed = 0.066;
  3597  015A64  0E02               	movlw	2
  3598  015A66  6E3A               	movwf	(btemp+8)^0,c
  3599  015A68  0E2B               	movlw	43
  3600  015A6A  6E3B               	movwf	(btemp+9)^0,c
  3601  015A6C  0E87               	movlw	135
  3602  015A6E  6E3C               	movwf	(btemp+10)^0,c
  3603  015A70  0E3D               	movlw	61
  3604  015A72  D007               	goto	L2
  3605  015A74                     l11711:
  3606                           
  3607                           ;mbmc.c: 32:   lp_speed = 0.125;
  3608  015A74  0E00               	movlw	0
  3609  015A76  6E3A               	movwf	(btemp+8)^0,c
  3610  015A78  0E00               	movlw	0
  3611  015A7A  6E3B               	movwf	(btemp+9)^0,c
  3612  015A7C  0E00               	movlw	0
  3613  015A7E  6E3C               	movwf	(btemp+10)^0,c
  3614  015A80  0E3E               	movlw	62
  3615  015A82                     L2:
  3616  015A82  6E3D               	movwf	(btemp+11)^0,c
  3617                           
  3618                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3619  015A84  0EFC               	movlw	-4
  3620  015A86  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3621  015A8C  0EFD               	movlw	-3
  3622  015A8E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3623  015A94  0EFE               	movlw	-2
  3624  015A96  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3625  015A9C  0EFF               	movlw	-1
  3626  015A9E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3627                           
  3628                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3629                           ;stkvar	_bn @ sp[(-4)+-5]
  3630  015AA4  0EF7               	movlw	-9
  3631  015AA6  50E3               	movf	plusw1,w,c
  3632  015AA8  0D04               	mullw	4
  3633  015AAA  0E00               	movlw	low lp_filter@smooth
  3634  015AAC  24F3               	addwf	243,w,c
  3635  015AAE  6ED9               	movwf	fsr2l,c
  3636  015AB0  0E02               	movlw	high lp_filter@smooth
  3637  015AB2  20F4               	addwfc	prodh,w,c
  3638  015AB4  6EDA               	movwf	fsr2h,c
  3639  015AB6  006F FF7B FFE6     	movff	postinc2,postinc1
  3640  015ABC  006F FF7B FFE6     	movff	postinc2,postinc1
  3641  015AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  3642  015AC8  006F FF7B FFE6     	movff	postinc2,postinc1
  3643                           
  3644                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3645  015ACE  0EF8               	movlw	-8
  3646  015AD0  006F FF8F FFE6     	movff	plusw1,postinc1
  3647  015AD6  006F FF8F FFE6     	movff	plusw1,postinc1
  3648  015ADC  006F FF8F FFE6     	movff	plusw1,postinc1
  3649  015AE2  006F FF8F FFE6     	movff	plusw1,postinc1
  3650                           
  3651                           ;stkvar	_bn @ sp[(-12)+-5]
  3652  015AE8  0EEF               	movlw	-17
  3653  015AEA  50E3               	movf	plusw1,w,c
  3654  015AEC  0D04               	mullw	4
  3655  015AEE  0E00               	movlw	low lp_filter@smooth
  3656  015AF0  24F3               	addwf	243,w,c
  3657  015AF2  6ED9               	movwf	fsr2l,c
  3658  015AF4  0E02               	movlw	high lp_filter@smooth
  3659  015AF6  20F4               	addwfc	prodh,w,c
  3660  015AF8  6EDA               	movwf	fsr2h,c
  3661  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
  3662  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
  3663  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
  3664  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
  3665                           
  3666                           ;stkvar	_new @ sp[(-16)+-4]
  3667  015B12  0EEC               	movlw	-20
  3668  015B14  006F FF8F FFE6     	movff	plusw1,postinc1
  3669  015B1A  006F FF8F FFE6     	movff	plusw1,postinc1
  3670  015B20  006F FF8F FFE6     	movff	plusw1,postinc1
  3671  015B26  006F FF8F FFE6     	movff	plusw1,postinc1
  3672  015B2C  ECF3  F0BC         	call	___flsub	;wreg free
  3673  015B30  0060  F0CB  FFE6   	movff	btemp,postinc1
  3674  015B36  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3675  015B3C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3676  015B42  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3677  015B48  ECC1  F08E         	call	___flmul	;wreg free
  3678  015B4C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3679  015B52  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3680  015B58  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3681  015B5E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3682  015B64  ECD6  F092         	call	___fladd	;wreg free
  3683                           
  3684                           ;stkvar	_bn @ sp[(-4)+-5]
  3685  015B68  0EF7               	movlw	-9
  3686  015B6A  50E3               	movf	plusw1,w,c
  3687  015B6C  0D04               	mullw	4
  3688  015B6E  0E00               	movlw	low lp_filter@smooth
  3689  015B70  24F3               	addwf	243,w,c
  3690  015B72  6ED9               	movwf	fsr2l,c
  3691  015B74  0E02               	movlw	high lp_filter@smooth
  3692  015B76  20F4               	addwfc	prodh,w,c
  3693  015B78  6EDA               	movwf	fsr2h,c
  3694  015B7A  0060  F0CB  FFDE   	movff	btemp,postinc2
  3695  015B80  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3696  015B86  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3697  015B8C  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3698  015B92  52DD               	movf	postdec2,f,c
  3699  015B94  52DD               	movf	postdec2,f,c
  3700  015B96  006F FF78  F032    	movff	postinc2,btemp
  3701  015B9C  006F FF78  F033    	movff	postinc2,btemp+1
  3702  015BA2  006F FF78  F034    	movff	postinc2,btemp+2
  3703  015BA8  006F FF78  F035    	movff	postinc2,btemp+3
  3704  015BAE                     l1693:
  3705                           
  3706                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3707  015BAE  0EF6               	movlw	246
  3708  015BB0  26E1               	addwf	fsr1l,f,c
  3709  015BB2  0EFF               	movlw	255
  3710  015BB4  22E2               	addwfc	fsr1h,f,c
  3711  015BB6  0012               	return		;funcret
  3712  015BB8                     __end_of_lp_filter:
  3713                           	opt callstack 0
  3714                           
  3715 ;; *************** function _conv_raw_result *****************
  3716 ;; Defined at:
  3717 ;;		line 80 in file "daq.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  chan            1  [STACK] const enum E16136
  3720 ;;  to_what         1  [STACK] const enum E16198
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  4  [STACK] float 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/39
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    8
  3739 ;; This function calls:
  3740 ;;		___fldiv
  3741 ;;		___flmul
  3742 ;;		___flsub
  3743 ;;		___xxtofl
  3744 ;;		_get_raw_result
  3745 ;;		_nanf
  3746 ;; This function is called by:
  3747 ;;		_convert_adc_data
  3748 ;; This function uses a reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text15
  3752  0132E2                     __ptext15:
  3753                           	opt callstack 0
  3754  0132E2                     _conv_raw_result:
  3755                           	opt callstack 21
  3756                           
  3757                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3758                           ;stkvar	_chan @ sp[(0)+-1]
  3759                           
  3760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3761                           ;incstack = 0
  3762  0132E2  0EFF               	movlw	-1
  3763  0132E4  006F FF8C  F03D    	movff	plusw1,btemp+11
  3764  0132EA  0E77               	movlw	119
  3765  0132EC  6E3A               	movwf	(btemp+8)^0,c
  3766  0132EE  0E3C               	movlw	60
  3767  0132F0  6E3B               	movwf	(btemp+9)^0,c
  3768  0132F2  2A3D               	incf	(btemp+11)^0,f,c
  3769  0132F4  D003               	goto	u12364
  3770  0132F6                     u12365:
  3771  0132F6  343B               	rlcf	(btemp+9)^0,w,c
  3772  0132F8  323B               	rrcf	(btemp+9)^0,f,c
  3773  0132FA  323A               	rrcf	(btemp+8)^0,f,c
  3774  0132FC                     u12364:
  3775  0132FC  2E3D               	decfsz	(btemp+11)^0,f,c
  3776  0132FE  D7FB               	goto	u12365
  3777  013300  B03A               	btfsc	(btemp+8)^0,0,c
  3778  013302  D231               	goto	l11683
  3779                           
  3780                           ;daq.c: 83:   return nanf("");
  3781  013304  0E19               	movlw	low (STR_27+18)
  3782  013306  6EE6               	movwf	postinc1,c
  3783  013308  0EFF               	movlw	high (STR_27+18)
  3784  01330A  6EE6               	movwf	postinc1,c
  3785  01330C  EC65  F0BB         	call	_nanf	;wreg free
  3786  013310  D23A               	goto	l1654
  3787  013312                     l11635:
  3788                           
  3789                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3790                           ;stkvar	_chan @ sp[(0)+-1]
  3791  013312  0EFF               	movlw	-1
  3792  013314  006F FF8C  F03D    	movff	plusw1,btemp+11
  3793  01331A  0E03               	movlw	3
  3794  01331C  6E3A               	movwf	(btemp+8)^0,c
  3795  01331E  0E00               	movlw	0
  3796  013320  6E3B               	movwf	(btemp+9)^0,c
  3797  013322  2A3D               	incf	(btemp+11)^0,f,c
  3798  013324  D003               	goto	u12384
  3799  013326                     u12385:
  3800  013326  343B               	rlcf	(btemp+9)^0,w,c
  3801  013328  323B               	rrcf	(btemp+9)^0,f,c
  3802  01332A  323A               	rrcf	(btemp+8)^0,f,c
  3803  01332C                     u12384:
  3804  01332C  2E3D               	decfsz	(btemp+11)^0,f,c
  3805  01332E  D7FB               	goto	u12385
  3806  013330  A03A               	btfss	(btemp+8)^0,0,c
  3807  013332  D0EB               	goto	l11649
  3808                           
  3809                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3810                           ;stkvar	_chan @ sp[(0)+-1]
  3811  013334  0EFF               	movlw	-1
  3812  013336  006F FF8C  F03D    	movff	plusw1,btemp+11
  3813  01333C  0E01               	movlw	1
  3814  01333E  6E3A               	movwf	(btemp+8)^0,c
  3815  013340  0E00               	movlw	0
  3816  013342  6E3B               	movwf	(btemp+9)^0,c
  3817  013344  2A3D               	incf	(btemp+11)^0,f,c
  3818  013346  D003               	goto	u12404
  3819  013348                     u12405:
  3820  013348  343B               	rlcf	(btemp+9)^0,w,c
  3821  01334A  323B               	rrcf	(btemp+9)^0,f,c
  3822  01334C  323A               	rrcf	(btemp+8)^0,f,c
  3823  01334E                     u12404:
  3824  01334E  2E3D               	decfsz	(btemp+11)^0,f,c
  3825  013350  D7FB               	goto	u12405
  3826  013352  A03A               	btfss	(btemp+8)^0,0,c
  3827  013354  D06D               	goto	l11645
  3828                           
  3829                           ;daq.c: 89:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.14385
      +                          00;
  3830  013356  0E6A               	movlw	106
  3831  013358  6EE6               	movwf	postinc1,c
  3832  01335A  0E4D               	movlw	77
  3833  01335C  6EE6               	movwf	postinc1,c
  3834  01335E  0E13               	movlw	19
  3835  013360  6EE6               	movwf	postinc1,c
  3836  013362  0E3E               	movlw	62
  3837  013364  6EE6               	movwf	postinc1,c
  3838  013366  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  3839  01336C  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  3840  013372  0E00               	movlw	0
  3841  013374  BE3B               	btfsc	(btemp+9)^0,7,c
  3842  013376  0EFF               	movlw	255
  3843  013378  6E3C               	movwf	(btemp+10)^0,c
  3844  01337A  6E3D               	movwf	(btemp+11)^0,c
  3845  01337C  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3846  013382  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3847  013388  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3848  01338E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3849  013394  0E01               	movlw	1
  3850  013396  6EE6               	movwf	postinc1,c
  3851  013398  EC16  F0AB         	call	___xxtofl	;wreg free
  3852  01339C  0060  F0CB  FFE6   	movff	btemp,postinc1
  3853  0133A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3854  0133A8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3855  0133AE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3856                           
  3857                           ;stkvar	_chan @ sp[(-8)+-1]
  3858  0133B4  0EF7               	movlw	-9
  3859  0133B6  50E3               	movf	plusw1,w,c
  3860  0133B8  6EE6               	movwf	postinc1,c
  3861  0133BA  EC8A  F0C1         	call	_get_raw_result	;wreg free
  3862  0133BE  0060  F0C8  F03C   	movff	btemp,btemp+10
  3863  0133C4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3864  0133CA  503C               	movf	(btemp+10)^0,w,c
  3865  0133CC  6E36               	movwf	(btemp+4)^0,c
  3866  0133CE  503D               	movf	(btemp+11)^0,w,c
  3867  0133D0  6E37               	movwf	(btemp+5)^0,c
  3868  0133D2  6A38               	clrf	(btemp+6)^0,c
  3869  0133D4  6A39               	clrf	(btemp+7)^0,c
  3870  0133D6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3871  0133DC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3872  0133E2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3873  0133E8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3874  0133EE  0E00               	movlw	0
  3875  0133F0  6EE6               	movwf	postinc1,c
  3876  0133F2  EC16  F0AB         	call	___xxtofl	;wreg free
  3877  0133F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  3878  0133FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3879  013402  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3880  013408  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3881  01340E  ECF3  F0BC         	call	___flsub	;wreg free
  3882  013412  0060  F0CB  FFE6   	movff	btemp,postinc1
  3883  013418  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3884  01341E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3885  013424  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3886  01342A  ECC1  F08E         	call	___flmul	;wreg free
  3887  01342E  D1AB               	goto	l1654
  3888  013430                     l11645:
  3889                           
  3890                           ;daq.c: 91:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.06010
      +                          00;
  3891  013430  0E6B               	movlw	107
  3892  013432  6EE6               	movwf	postinc1,c
  3893  013434  0E2B               	movlw	43
  3894  013436  6EE6               	movwf	postinc1,c
  3895  013438  0E76               	movlw	118
  3896  01343A  6EE6               	movwf	postinc1,c
  3897  01343C  0E3D               	movlw	61
  3898  01343E  6EE6               	movwf	postinc1,c
  3899  013440  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  3900  013446  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  3901  01344C  0E00               	movlw	0
  3902  01344E  BE3B               	btfsc	(btemp+9)^0,7,c
  3903  013450  0EFF               	movlw	255
  3904  013452  6E3C               	movwf	(btemp+10)^0,c
  3905  013454  6E3D               	movwf	(btemp+11)^0,c
  3906  013456  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  3907  01345C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  3908  013462  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  3909  013468  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  3910  01346E  0E01               	movlw	1
  3911  013470  6EE6               	movwf	postinc1,c
  3912  013472  EC16  F0AB         	call	___xxtofl	;wreg free
  3913  013476  0060  F0CB  FFE6   	movff	btemp,postinc1
  3914  01347C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3915  013482  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3916  013488  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3917                           
  3918                           ;stkvar	_chan @ sp[(-8)+-1]
  3919  01348E  0EF7               	movlw	-9
  3920  013490  50E3               	movf	plusw1,w,c
  3921  013492  6EE6               	movwf	postinc1,c
  3922  013494  EC8A  F0C1         	call	_get_raw_result	;wreg free
  3923  013498  0060  F0C8  F03C   	movff	btemp,btemp+10
  3924  01349E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  3925  0134A4  503C               	movf	(btemp+10)^0,w,c
  3926  0134A6  6E36               	movwf	(btemp+4)^0,c
  3927  0134A8  503D               	movf	(btemp+11)^0,w,c
  3928  0134AA  6E37               	movwf	(btemp+5)^0,c
  3929  0134AC  6A38               	clrf	(btemp+6)^0,c
  3930  0134AE  6A39               	clrf	(btemp+7)^0,c
  3931  0134B0  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  3932  0134B6  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  3933  0134BC  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  3934  0134C2  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  3935  0134C8  0E00               	movlw	0
  3936  0134CA  6EE6               	movwf	postinc1,c
  3937  0134CC  EC16  F0AB         	call	___xxtofl	;wreg free
  3938  0134D0  0060  F0CB  FFE6   	movff	btemp,postinc1
  3939  0134D6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3940  0134DC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3941  0134E2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3942  0134E8  ECF3  F0BC         	call	___flsub	;wreg free
  3943  0134EC  0060  F0CB  FFE6   	movff	btemp,postinc1
  3944  0134F2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3945  0134F8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3946  0134FE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3947  013504  ECC1  F08E         	call	___flmul	;wreg free
  3948  013508  D13E               	goto	l1654
  3949  01350A                     l11649:
  3950                           
  3951                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3952                           ;stkvar	_chan @ sp[(0)+-1]
  3953  01350A  0EFF               	movlw	-1
  3954  01350C  006F FF8C  F03D    	movff	plusw1,btemp+11
  3955  013512  0E00               	movlw	0
  3956  013514  6E3A               	movwf	(btemp+8)^0,c
  3957  013516  0E08               	movlw	8
  3958  013518  6E3B               	movwf	(btemp+9)^0,c
  3959  01351A  2A3D               	incf	(btemp+11)^0,f,c
  3960  01351C  D003               	goto	u12424
  3961  01351E                     u12425:
  3962  01351E  343B               	rlcf	(btemp+9)^0,w,c
  3963  013520  323B               	rrcf	(btemp+9)^0,f,c
  3964  013522  323A               	rrcf	(btemp+8)^0,f,c
  3965  013524                     u12424:
  3966  013524  2E3D               	decfsz	(btemp+11)^0,f,c
  3967  013526  D7FB               	goto	u12425
  3968  013528  A03A               	btfss	(btemp+8)^0,0,c
  3969  01352A  D008               	goto	l11657
  3970                           
  3971                           ;daq.c: 95:     return 25.0;
  3972  01352C  0E00               	movlw	0
  3973  01352E  6E32               	movwf	btemp^0,c
  3974  013530  0E00               	movlw	0
  3975  013532  6E33               	movwf	(btemp+1)^0,c
  3976  013534  0EC8               	movlw	200
  3977  013536  6E34               	movwf	(btemp+2)^0,c
  3978  013538  0E41               	movlw	65
  3979  01353A  D113               	goto	L3
  3980  01353C                     l11657:
  3981                           
  3982                           ;daq.c: 97:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  3983  01353C  0E00               	movlw	0
  3984  01353E  6EE6               	movwf	postinc1,c
  3985  013540  0E00               	movlw	0
  3986  013542  6EE6               	movwf	postinc1,c
  3987  013544  0E7A               	movlw	122
  3988  013546  6EE6               	movwf	postinc1,c
  3989  013548  0E44               	movlw	68
  3990  01354A  6EE6               	movwf	postinc1,c
  3991  01354C  0E61               	movlw	97
  3992  01354E  6EE6               	movwf	postinc1,c
  3993  013550  0E03               	movlw	3
  3994  013552  6EE6               	movwf	postinc1,c
  3995  013554  0E84               	movlw	132
  3996  013556  6EE6               	movwf	postinc1,c
  3997  013558  0E40               	movlw	64
  3998  01355A  6EE6               	movwf	postinc1,c
  3999                           
  4000                           ;stkvar	_chan @ sp[(-8)+-1]
  4001  01355C  0EF7               	movlw	-9
  4002  01355E  50E3               	movf	plusw1,w,c
  4003  013560  6EE6               	movwf	postinc1,c
  4004  013562  EC8A  F0C1         	call	_get_raw_result	;wreg free
  4005  013566  0060  F0C8  F03C   	movff	btemp,btemp+10
  4006  01356C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4007  013572  503C               	movf	(btemp+10)^0,w,c
  4008  013574  6E36               	movwf	(btemp+4)^0,c
  4009  013576  503D               	movf	(btemp+11)^0,w,c
  4010  013578  6E37               	movwf	(btemp+5)^0,c
  4011  01357A  6A38               	clrf	(btemp+6)^0,c
  4012  01357C  6A39               	clrf	(btemp+7)^0,c
  4013  01357E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4014  013584  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4015  01358A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4016  013590  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4017  013596  0E00               	movlw	0
  4018  013598  6EE6               	movwf	postinc1,c
  4019  01359A  EC16  F0AB         	call	___xxtofl	;wreg free
  4020  01359E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4021  0135A4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4022  0135AA  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4023  0135B0  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4024  0135B6  ECC1  F08E         	call	___flmul	;wreg free
  4025  0135BA  0060  F0CB  FFE6   	movff	btemp,postinc1
  4026  0135C0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4027  0135C6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4028  0135CC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4029  0135D2  ECB4  F096         	call	___fldiv	;wreg free
  4030  0135D6  D0D7               	goto	l1654
  4031  0135D8                     l11661:
  4032                           
  4033                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4034                           ;stkvar	_chan @ sp[(0)+-1]
  4035  0135D8  0EFF               	movlw	-1
  4036  0135DA  006F FF8C  F03D    	movff	plusw1,btemp+11
  4037  0135E0  0E03               	movlw	3
  4038  0135E2  6E3A               	movwf	(btemp+8)^0,c
  4039  0135E4  0E00               	movlw	0
  4040  0135E6  6E3B               	movwf	(btemp+9)^0,c
  4041  0135E8  2A3D               	incf	(btemp+11)^0,f,c
  4042  0135EA  D003               	goto	u12444
  4043  0135EC                     u12445:
  4044  0135EC  343B               	rlcf	(btemp+9)^0,w,c
  4045  0135EE  323B               	rrcf	(btemp+9)^0,f,c
  4046  0135F0  323A               	rrcf	(btemp+8)^0,f,c
  4047  0135F2                     u12444:
  4048  0135F2  2E3D               	decfsz	(btemp+11)^0,f,c
  4049  0135F4  D7FB               	goto	u12445
  4050  0135F6  B03A               	btfsc	(btemp+8)^0,0,c
  4051  0135F8  D011               	goto	u12470
  4052                           
  4053                           ;stkvar	_chan @ sp[(0)+-1]
  4054  0135FA  0EFF               	movlw	-1
  4055  0135FC  006F FF8C  F03D    	movff	plusw1,btemp+11
  4056  013602  0E00               	movlw	0
  4057  013604  6E3A               	movwf	(btemp+8)^0,c
  4058  013606  0E08               	movlw	8
  4059  013608  6E3B               	movwf	(btemp+9)^0,c
  4060  01360A  2A3D               	incf	(btemp+11)^0,f,c
  4061  01360C  D003               	goto	u12464
  4062  01360E                     u12465:
  4063  01360E  343B               	rlcf	(btemp+9)^0,w,c
  4064  013610  323B               	rrcf	(btemp+9)^0,f,c
  4065  013612  323A               	rrcf	(btemp+8)^0,f,c
  4066  013614                     u12464:
  4067  013614  2E3D               	decfsz	(btemp+11)^0,f,c
  4068  013616  D7FB               	goto	u12465
  4069  013618  A03A               	btfss	(btemp+8)^0,0,c
  4070  01361A  D04E               	goto	l11669
  4071  01361C                     u12470:
  4072                           
  4073                           ;daq.c: 103:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4074  01361C  0E00               	movlw	0
  4075  01361E  6EE6               	movwf	postinc1,c
  4076  013620  0E00               	movlw	0
  4077  013622  6EE6               	movwf	postinc1,c
  4078  013624  0E7A               	movlw	122
  4079  013626  6EE6               	movwf	postinc1,c
  4080  013628  0E44               	movlw	68
  4081  01362A  6EE6               	movwf	postinc1,c
  4082  01362C  0E00               	movlw	0
  4083  01362E  6EE6               	movwf	postinc1,c
  4084  013630  0E00               	movlw	0
  4085  013632  6EE6               	movwf	postinc1,c
  4086  013634  0E20               	movlw	32
  4087  013636  6EE6               	movwf	postinc1,c
  4088  013638  0E3F               	movlw	63
  4089  01363A  6EE6               	movwf	postinc1,c
  4090                           
  4091                           ;stkvar	_chan @ sp[(-8)+-1]
  4092  01363C  0EF7               	movlw	-9
  4093  01363E  50E3               	movf	plusw1,w,c
  4094  013640  6EE6               	movwf	postinc1,c
  4095  013642  EC8A  F0C1         	call	_get_raw_result	;wreg free
  4096  013646  0060  F0C8  F03C   	movff	btemp,btemp+10
  4097  01364C  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4098  013652  503C               	movf	(btemp+10)^0,w,c
  4099  013654  6E36               	movwf	(btemp+4)^0,c
  4100  013656  503D               	movf	(btemp+11)^0,w,c
  4101  013658  6E37               	movwf	(btemp+5)^0,c
  4102  01365A  6A38               	clrf	(btemp+6)^0,c
  4103  01365C  6A39               	clrf	(btemp+7)^0,c
  4104  01365E  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4105  013664  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4106  01366A  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4107  013670  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4108  013676  0E00               	movlw	0
  4109  013678  6EE6               	movwf	postinc1,c
  4110  01367A  EC16  F0AB         	call	___xxtofl	;wreg free
  4111  01367E  0060  F0CB  FFE6   	movff	btemp,postinc1
  4112  013684  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4113  01368A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4114  013690  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4115  013696  ECC1  F08E         	call	___flmul	;wreg free
  4116  01369A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4117  0136A0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4118  0136A6  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4119  0136AC  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4120  0136B2  ECB4  F096         	call	___fldiv	;wreg free
  4121  0136B6  D067               	goto	l1654
  4122  0136B8                     l11669:
  4123                           
  4124                           ;daq.c: 105:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4125  0136B8  0E00               	movlw	0
  4126  0136BA  6EE6               	movwf	postinc1,c
  4127  0136BC  0E00               	movlw	0
  4128  0136BE  6EE6               	movwf	postinc1,c
  4129  0136C0  0E7A               	movlw	122
  4130  0136C2  6EE6               	movwf	postinc1,c
  4131  0136C4  0E44               	movlw	68
  4132  0136C6  6EE6               	movwf	postinc1,c
  4133  0136C8  0E61               	movlw	97
  4134  0136CA  6EE6               	movwf	postinc1,c
  4135  0136CC  0E03               	movlw	3
  4136  0136CE  6EE6               	movwf	postinc1,c
  4137  0136D0  0E84               	movlw	132
  4138  0136D2  6EE6               	movwf	postinc1,c
  4139  0136D4  0E40               	movlw	64
  4140  0136D6  6EE6               	movwf	postinc1,c
  4141                           
  4142                           ;stkvar	_chan @ sp[(-8)+-1]
  4143  0136D8  0EF7               	movlw	-9
  4144  0136DA  50E3               	movf	plusw1,w,c
  4145  0136DC  6EE6               	movwf	postinc1,c
  4146  0136DE  EC8A  F0C1         	call	_get_raw_result	;wreg free
  4147  0136E2  0060  F0C8  F03C   	movff	btemp,btemp+10
  4148  0136E8  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4149  0136EE  503C               	movf	(btemp+10)^0,w,c
  4150  0136F0  6E36               	movwf	(btemp+4)^0,c
  4151  0136F2  503D               	movf	(btemp+11)^0,w,c
  4152  0136F4  6E37               	movwf	(btemp+5)^0,c
  4153  0136F6  6A38               	clrf	(btemp+6)^0,c
  4154  0136F8  6A39               	clrf	(btemp+7)^0,c
  4155  0136FA  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4156  013700  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4157  013706  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4158  01370C  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4159  013712  0E00               	movlw	0
  4160  013714  6EE6               	movwf	postinc1,c
  4161  013716  EC16  F0AB         	call	___xxtofl	;wreg free
  4162  01371A  0060  F0CB  FFE6   	movff	btemp,postinc1
  4163  013720  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4164  013726  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4165  01372C  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4166  013732  ECC1  F08E         	call	___flmul	;wreg free
  4167  013736  0060  F0CB  FFE6   	movff	btemp,postinc1
  4168  01373C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4169  013742  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4170  013748  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4171  01374E  ECB4  F096         	call	___fldiv	;wreg free
  4172  013752  D019               	goto	l1654
  4173  013754                     l11675:
  4174                           
  4175                           ;daq.c: 108:   return 0.0;
  4176  013754  0E00               	movlw	0
  4177  013756  6E32               	movwf	btemp^0,c
  4178  013758  0E00               	movlw	0
  4179  01375A  6E33               	movwf	(btemp+1)^0,c
  4180  01375C  0E00               	movlw	0
  4181  01375E  6E34               	movwf	(btemp+2)^0,c
  4182  013760  0E00               	movlw	0
  4183  013762                     L3:
  4184  013762  6E35               	movwf	(btemp+3)^0,c
  4185  013764  D010               	goto	l1654
  4186  013766                     l11683:
  4187                           
  4188                           ;stkvar	_to_what @ sp[(0)+-2]
  4189  013766  0EFE               	movlw	-2
  4190  013768  50E3               	movf	plusw1,w,c
  4191  01376A  6E3C               	movwf	(btemp+10)^0,c
  4192  01376C  6A3D               	clrf	(btemp+11)^0,c
  4193                           
  4194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4195                           ; Switch size 1, requested type "simple"
  4196                           ; Number of cases is 1, Range of values is 0 to 0
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte            4     3 (average)
  4200                           ;	Chosen strategy is simple_byte
  4201  01376E  503D               	movf	(btemp+11)^0,w,c
  4202  013770  0A00               	xorlw	0	; case 0
  4203  013772  A4D8               	btfss	status,2,c
  4204  013774  D7EF               	goto	l11675
  4205                           
  4206                           ; Switch size 1, requested type "simple"
  4207                           ; Number of cases is 2, Range of values is 0 to 1
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; simple_byte            7     4 (average)
  4211                           ;	Chosen strategy is simple_byte
  4212  013776  503C               	movf	(btemp+10)^0,w,c
  4213  013778  0A00               	xorlw	0	; case 0
  4214  01377A  B4D8               	btfsc	status,2,c
  4215  01377C  D5CA               	goto	l11635
  4216  01377E  0A01               	xorlw	1	; case 1
  4217  013780  B4D8               	btfsc	status,2,c
  4218  013782  D72A               	goto	l11661
  4219  013784  D7E7               	goto	l11675
  4220  013786                     l1654:
  4221                           
  4222                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4223  013786  52E5               	movf	postdec1,f,c
  4224  013788  52E5               	movf	postdec1,f,c
  4225  01378A  0012               	return		;funcret
  4226  01378C                     __end_of_conv_raw_result:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _nanf *****************
  4230 ;; Defined at:
  4231 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  s               2  [STACK] PTR const unsigned char 
  4234 ;;		 -> STR_33(1), 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  u               4  [STACK] struct .
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  4  [STACK] float 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/39
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    6
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_conv_raw_result
  4257 ;; This function uses a reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text16
  4261  0176CA                     __ptext16:
  4262                           	opt callstack 0
  4263  0176CA                     _nanf:
  4264                           	opt callstack 0
  4265                           
  4266                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4267  0176CA  52E6               	movf	postinc1,f,c
  4268  0176CC  52E6               	movf	postinc1,f,c
  4269  0176CE  52E6               	movf	postinc1,f,c
  4270  0176D0  52E6               	movf	postinc1,f,c
  4271                           
  4272                           ;incstack = 0
  4273  0176D2  0EFF               	movlw	255
  4274  0176D4  6E3A               	movwf	(btemp+8)^0,c
  4275  0176D6  0EFF               	movlw	255
  4276  0176D8  6E3B               	movwf	(btemp+9)^0,c
  4277  0176DA  0EFF               	movlw	255
  4278  0176DC  6E3C               	movwf	(btemp+10)^0,c
  4279  0176DE  0E7F               	movlw	127
  4280  0176E0  6E3D               	movwf	(btemp+11)^0,c
  4281                           
  4282                           ;stkvar	_u @ sp[(-4)+0]
  4283  0176E2  0EFC               	movlw	-4
  4284  0176E4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4285  0176EA  0EFD               	movlw	-3
  4286  0176EC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4287  0176F2  0EFE               	movlw	-2
  4288  0176F4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4289  0176FA  0EFF               	movlw	-1
  4290  0176FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4291                           
  4292                           ;stkvar	_u @ sp[(-4)+0]
  4293  017702  0EFC               	movlw	-4
  4294  017704  006F FF8C  F032    	movff	plusw1,btemp
  4295  01770A  0EFD               	movlw	-3
  4296  01770C  006F FF8C  F033    	movff	plusw1,btemp+1
  4297  017712  0EFE               	movlw	-2
  4298  017714  006F FF8C  F034    	movff	plusw1,btemp+2
  4299  01771A  0EFF               	movlw	-1
  4300  01771C  006F FF8C  F035    	movff	plusw1,btemp+3
  4301                           
  4302                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4303  017722  0EFA               	movlw	250
  4304  017724  26E1               	addwf	fsr1l,f,c
  4305  017726  0EFF               	movlw	255
  4306  017728  22E2               	addwfc	fsr1h,f,c
  4307  01772A  0012               	return		;funcret
  4308  01772C                     __end_of_nanf:
  4309                           	opt callstack 0
  4310                           
  4311 ;; *************** function _get_raw_result *****************
  4312 ;; Defined at:
  4313 ;;		line 72 in file "daq.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  index           1  [STACK] const enum E16136
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2  [STACK] unsigned short 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/39
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    6
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;;		_conv_raw_result
  4339 ;; This function uses a reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text17
  4343  018314                     __ptext17:
  4344                           	opt callstack 0
  4345  018314                     _get_raw_result:
  4346                           	opt callstack 24
  4347                           
  4348                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4349                           ;stkvar	_index @ sp[(0)+-1]
  4350                           
  4351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4352                           ;incstack = 0
  4353  018314  0EFF               	movlw	-1
  4354  018316  50E3               	movf	plusw1,w,c
  4355  018318  0D02               	mullw	2
  4356  01831A  50F3               	movf	243,w,c
  4357  01831C  0FC7               	addlw	low _R
  4358  01831E  6ED9               	movwf	fsr2l,c
  4359  018320  6ADA               	clrf	fsr2h,c
  4360  018322  006F FF78  F032    	movff	postinc2,btemp
  4361  018328  006F FF74  F033    	movff	postdec2,btemp+1
  4362                           
  4363                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4364  01832E  52E5               	movf	postdec1,f,c
  4365  018330  0012               	return		;funcret
  4366  018332                     __end_of_get_raw_result:
  4367                           	opt callstack 0
  4368                           
  4369 ;; *************** function ___xxtofl *****************
  4370 ;; Defined at:
  4371 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  sign            1  [STACK] unsigned char 
  4374 ;;  val             4  [STACK] long 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  arg             4  [STACK] unsigned long 
  4377 ;;  exp             1  [STACK] unsigned char 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  4  [STACK] unsigned char 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/39
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    6
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_conv_raw_result
  4398 ;; This function uses a reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text18
  4402  01562C                     __ptext18:
  4403                           	opt callstack 0
  4404  01562C                     ___xxtofl:
  4405                           	opt callstack 0
  4406                           
  4407                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4408  01562C  0E05               	movlw	5
  4409  01562E  26E1               	addwf	fsr1l,f,c
  4410  015630  0E00               	movlw	0
  4411  015632  22E2               	addwfc	fsr1h,f,c
  4412                           
  4413                           ;stkvar	_sign @ sp[(-5)+-1]
  4414                           
  4415                           ;incstack = 0
  4416  015634  0EFA               	movlw	-6
  4417  015636  50E3               	movf	plusw1,w,c
  4418  015638  B4D8               	btfsc	status,2,c
  4419  01563A  D01D               	goto	l11127
  4420                           
  4421                           ;stkvar	_val @ sp[(-5)+-5]
  4422  01563C  0EF9               	movlw	-7
  4423  01563E  AEE3               	btfss	plusw1,7,c
  4424  015640  D01A               	goto	l11127
  4425                           
  4426                           ;stkvar	_val @ sp[(-5)+-5]
  4427  015642  0EF6               	movlw	-10
  4428  015644  006F FF8C  F03A    	movff	plusw1,btemp+8
  4429  01564A  0EF7               	movlw	-9
  4430  01564C  006F FF8C  F03B    	movff	plusw1,btemp+9
  4431  015652  0EF8               	movlw	-8
  4432  015654  006F FF8C  F03C    	movff	plusw1,btemp+10
  4433  01565A  0EF9               	movlw	-7
  4434  01565C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4435  015662  1E3A               	comf	(btemp+8)^0,f,c
  4436  015664  1E3B               	comf	(btemp+9)^0,f,c
  4437  015666  1E3C               	comf	(btemp+10)^0,f,c
  4438  015668  1E3D               	comf	(btemp+11)^0,f,c
  4439  01566A  2A3A               	incf	(btemp+8)^0,f,c
  4440  01566C  0E00               	movlw	0
  4441  01566E  223B               	addwfc	(btemp+9)^0,f,c
  4442  015670  223C               	addwfc	(btemp+10)^0,f,c
  4443  015672  223D               	addwfc	(btemp+11)^0,f,c
  4444  015674  D010               	goto	L4
  4445  015676                     l11127:
  4446                           
  4447                           ;stkvar	_val @ sp[(-5)+-5]
  4448  015676  0EF6               	movlw	-10
  4449  015678  006F FF8C  F03A    	movff	plusw1,btemp+8
  4450  01567E  0EF7               	movlw	-9
  4451  015680  006F FF8C  F03B    	movff	plusw1,btemp+9
  4452  015686  0EF8               	movlw	-8
  4453  015688  006F FF8C  F03C    	movff	plusw1,btemp+10
  4454  01568E  0EF9               	movlw	-7
  4455  015690  006F FF8C  F03D    	movff	plusw1,btemp+11
  4456  015696                     L4:
  4457                           
  4458                           ;stkvar	_arg @ sp[(-5)+0]
  4459  015696  0EFB               	movlw	-5
  4460  015698  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4461  01569E  0EFC               	movlw	-4
  4462  0156A0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4463  0156A6  0EFD               	movlw	-3
  4464  0156A8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4465  0156AE  0EFE               	movlw	-2
  4466  0156B0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4467                           
  4468                           ;stkvar	_val @ sp[(-5)+-5]
  4469  0156B6  0EF6               	movlw	-10
  4470  0156B8  50E3               	movf	plusw1,w,c
  4471  0156BA  E113               	bnz	l11135
  4472  0156BC  0EF7               	movlw	-9
  4473  0156BE  50E3               	movf	plusw1,w,c
  4474  0156C0  E110               	bnz	l11135
  4475  0156C2  0EF8               	movlw	-8
  4476  0156C4  50E3               	movf	plusw1,w,c
  4477  0156C6  E10D               	bnz	l11135
  4478  0156C8  0EF9               	movlw	-7
  4479  0156CA  50E3               	movf	plusw1,w,c
  4480  0156CC  A4D8               	btfss	status,2,c
  4481  0156CE  D009               	goto	l11135
  4482  0156D0  0E00               	movlw	0
  4483  0156D2  6E32               	movwf	btemp^0,c
  4484  0156D4  0E00               	movlw	0
  4485  0156D6  6E33               	movwf	(btemp+1)^0,c
  4486  0156D8  0E00               	movlw	0
  4487  0156DA  6E34               	movwf	(btemp+2)^0,c
  4488  0156DC  0E00               	movlw	0
  4489  0156DE  6E35               	movwf	(btemp+3)^0,c
  4490  0156E0  D0A2               	goto	l2700
  4491  0156E2                     l11135:
  4492  0156E2  0E96               	movlw	150
  4493  0156E4  6E3D               	movwf	(btemp+11)^0,c
  4494                           
  4495                           ;stkvar	_exp @ sp[(-5)+4]
  4496  0156E6  0EFF               	movlw	-1
  4497  0156E8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4498  0156EE  D00B               	goto	l11139
  4499  0156F0                     l11137:
  4500                           
  4501                           ;stkvar	_exp @ sp[(-5)+4]
  4502  0156F0  0EFF               	movlw	-1
  4503  0156F2  2AE3               	incf	plusw1,f,c
  4504                           
  4505                           ;stkvar	_arg @ sp[(-5)+0]
  4506  0156F4  90D8               	bcf	status,0,c
  4507  0156F6  0EFE               	movlw	-2
  4508  0156F8  32E3               	rrcf	plusw1,f,c
  4509  0156FA  0EFD               	movlw	-3
  4510  0156FC  32E3               	rrcf	plusw1,f,c
  4511  0156FE  0EFC               	movlw	-4
  4512  015700  32E3               	rrcf	plusw1,f,c
  4513  015702  0EFB               	movlw	-5
  4514  015704  32E3               	rrcf	plusw1,f,c
  4515  015706                     l11139:
  4516                           
  4517                           ;stkvar	_arg @ sp[(-5)+0]
  4518  015706  50E1               	movf	fsr1l,w,c
  4519  015708  0FFB               	addlw	-5
  4520  01570A  6ED9               	movwf	fsr2l,c
  4521  01570C  50E2               	movf	fsr1h,w,c
  4522  01570E  6EDA               	movwf	fsr2h,c
  4523  015710  0EFF               	movlw	255
  4524  015712  22DA               	addwfc	fsr2h,f,c
  4525  015714  52DE               	movf	postinc2,f,c
  4526  015716  52DE               	movf	postinc2,f,c
  4527  015718  52DE               	movf	postinc2,f,c
  4528  01571A  0EFE               	movlw	254
  4529  01571C  14DD               	andwf	postdec2,w,c
  4530  01571E  B4D8               	btfsc	status,2,c
  4531  015720  D018               	goto	l11147
  4532  015722  D7E6               	goto	l11137
  4533  015724                     l11141:
  4534                           
  4535                           ;stkvar	_exp @ sp[(-5)+4]
  4536  015724  0EFF               	movlw	-1
  4537  015726  2AE3               	incf	plusw1,f,c
  4538                           
  4539                           ;stkvar	_arg @ sp[(-5)+0]
  4540  015728  50E1               	movf	fsr1l,w,c
  4541  01572A  0FFB               	addlw	-5
  4542  01572C  6ED9               	movwf	fsr2l,c
  4543  01572E  50E2               	movf	fsr1h,w,c
  4544  015730  6EDA               	movwf	fsr2h,c
  4545  015732  0EFF               	movlw	255
  4546  015734  22DA               	addwfc	fsr2h,f,c
  4547  015736  2ADE               	incf	postinc2,f,c
  4548  015738  0E00               	movlw	0
  4549  01573A  22DE               	addwfc	postinc2,f,c
  4550  01573C  22DE               	addwfc	postinc2,f,c
  4551  01573E  22DE               	addwfc	postinc2,f,c
  4552                           
  4553                           ;stkvar	_arg @ sp[(-5)+0]
  4554  015740  90D8               	bcf	status,0,c
  4555  015742  0EFE               	movlw	-2
  4556  015744  32E3               	rrcf	plusw1,f,c
  4557  015746  0EFD               	movlw	-3
  4558  015748  32E3               	rrcf	plusw1,f,c
  4559  01574A  0EFC               	movlw	-4
  4560  01574C  32E3               	rrcf	plusw1,f,c
  4561  01574E  0EFB               	movlw	-5
  4562  015750  32E3               	rrcf	plusw1,f,c
  4563  015752                     l11147:
  4564                           
  4565                           ;stkvar	_arg @ sp[(-5)+0]
  4566  015752  50E1               	movf	fsr1l,w,c
  4567  015754  0FFB               	addlw	-5
  4568  015756  6ED9               	movwf	fsr2l,c
  4569  015758  50E2               	movf	fsr1h,w,c
  4570  01575A  6EDA               	movwf	fsr2h,c
  4571  01575C  0EFF               	movlw	255
  4572  01575E  22DA               	addwfc	fsr2h,f,c
  4573  015760  52DE               	movf	postinc2,f,c
  4574  015762  52DE               	movf	postinc2,f,c
  4575  015764  52DE               	movf	postinc2,f,c
  4576  015766  0EFF               	movlw	255
  4577  015768  14DD               	andwf	postdec2,w,c
  4578  01576A  B4D8               	btfsc	status,2,c
  4579  01576C  D00C               	goto	l11151
  4580  01576E  D7DA               	goto	l11141
  4581  015770                     l11149:
  4582                           
  4583                           ;stkvar	_exp @ sp[(-5)+4]
  4584  015770  0EFF               	movlw	-1
  4585  015772  06E3               	decf	plusw1,f,c
  4586                           
  4587                           ;stkvar	_arg @ sp[(-5)+0]
  4588  015774  90D8               	bcf	status,0,c
  4589  015776  0EFB               	movlw	-5
  4590  015778  36E3               	rlcf	plusw1,f,c
  4591  01577A  0EFC               	movlw	-4
  4592  01577C  36E3               	rlcf	plusw1,f,c
  4593  01577E  0EFD               	movlw	-3
  4594  015780  36E3               	rlcf	plusw1,f,c
  4595  015782  0EFE               	movlw	-2
  4596  015784  36E3               	rlcf	plusw1,f,c
  4597  015786                     l11151:
  4598                           
  4599                           ;stkvar	_arg @ sp[(-5)+0]
  4600  015786  0EFD               	movlw	-3
  4601  015788  BEE3               	btfsc	plusw1,7,c
  4602  01578A  D007               	goto	u12220
  4603                           
  4604                           ;stkvar	_exp @ sp[(-5)+4]
  4605  01578C  0EFF               	movlw	-1
  4606  01578E  006F FF8C  F032    	movff	plusw1,btemp
  4607  015794  0E02               	movlw	2
  4608  015796  6032               	cpfslt	btemp^0,c
  4609  015798  D7EB               	goto	l11149
  4610  01579A                     u12220:
  4611                           
  4612                           ;stkvar	_exp @ sp[(-5)+4]
  4613  01579A  0EFF               	movlw	-1
  4614  01579C  B0E3               	btfsc	plusw1,0,c
  4615  01579E  D002               	goto	l11159
  4616                           
  4617                           ;stkvar	_arg @ sp[(-5)+0]
  4618  0157A0  0EFD               	movlw	-3
  4619  0157A2  9EE3               	bcf	plusw1,7,c
  4620  0157A4                     l11159:
  4621                           
  4622                           ;stkvar	_exp @ sp[(-5)+4]
  4623  0157A4  50E1               	movf	fsr1l,w,c
  4624  0157A6  0FFF               	addlw	-1
  4625  0157A8  6ED9               	movwf	fsr2l,c
  4626  0157AA  50E2               	movf	fsr1h,w,c
  4627  0157AC  6EDA               	movwf	fsr2h,c
  4628  0157AE  0EFF               	movlw	255
  4629  0157B0  22DA               	addwfc	fsr2h,f,c
  4630  0157B2  90D8               	bcf	status,0,c
  4631  0157B4  32DF               	rrcf	indf2,f,c
  4632                           
  4633                           ;stkvar	_exp @ sp[(-5)+4]
  4634  0157B6  0EFF               	movlw	-1
  4635  0157B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  4636  0157BE  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4637  0157C4  6A37               	clrf	(btemp+5)^0,c
  4638  0157C6  6A38               	clrf	(btemp+6)^0,c
  4639  0157C8  6A39               	clrf	(btemp+7)^0,c
  4640  0157CA  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4641  0157D0  6A38               	clrf	(btemp+6)^0,c
  4642  0157D2  6A37               	clrf	(btemp+5)^0,c
  4643  0157D4  6A36               	clrf	(btemp+4)^0,c
  4644                           
  4645                           ;stkvar	_arg @ sp[(-5)+0]
  4646  0157D6  50E1               	movf	fsr1l,w,c
  4647  0157D8  0FFB               	addlw	-5
  4648  0157DA  6ED9               	movwf	fsr2l,c
  4649  0157DC  50E2               	movf	fsr1h,w,c
  4650  0157DE  6EDA               	movwf	fsr2h,c
  4651  0157E0  0EFF               	movlw	255
  4652  0157E2  22DA               	addwfc	fsr2h,f,c
  4653  0157E4  5036               	movf	(btemp+4)^0,w,c
  4654  0157E6  12DE               	iorwf	postinc2,f,c
  4655  0157E8  5037               	movf	(btemp+5)^0,w,c
  4656  0157EA  12DE               	iorwf	postinc2,f,c
  4657  0157EC  5038               	movf	(btemp+6)^0,w,c
  4658  0157EE  12DE               	iorwf	postinc2,f,c
  4659  0157F0  5039               	movf	(btemp+7)^0,w,c
  4660  0157F2  12DE               	iorwf	postinc2,f,c
  4661                           
  4662                           ;stkvar	_sign @ sp[(-5)+-1]
  4663  0157F4  0EFA               	movlw	-6
  4664  0157F6  50E3               	movf	plusw1,w,c
  4665  0157F8  B4D8               	btfsc	status,2,c
  4666  0157FA  D005               	goto	l11169
  4667                           
  4668                           ;stkvar	_val @ sp[(-5)+-5]
  4669  0157FC  0EF9               	movlw	-7
  4670  0157FE  AEE3               	btfss	plusw1,7,c
  4671  015800  D002               	goto	l11169
  4672                           
  4673                           ;stkvar	_arg @ sp[(-5)+0]
  4674  015802  0EFE               	movlw	-2
  4675  015804  8EE3               	bsf	plusw1,7,c
  4676  015806                     l11169:
  4677                           
  4678                           ;stkvar	_arg @ sp[(-5)+0]
  4679  015806  0EFB               	movlw	-5
  4680  015808  006F FF8C  F032    	movff	plusw1,btemp
  4681  01580E  0EFC               	movlw	-4
  4682  015810  006F FF8C  F033    	movff	plusw1,btemp+1
  4683  015816  0EFD               	movlw	-3
  4684  015818  006F FF8C  F034    	movff	plusw1,btemp+2
  4685  01581E  0EFE               	movlw	-2
  4686  015820  006F FF8C  F035    	movff	plusw1,btemp+3
  4687  015826                     l2700:
  4688                           
  4689                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4690  015826  0EF6               	movlw	246
  4691  015828  26E1               	addwf	fsr1l,f,c
  4692  01582A  0EFF               	movlw	255
  4693  01582C  22E2               	addwfc	fsr1h,f,c
  4694  01582E  0012               	return		;funcret
  4695  015830                     __end_of___xxtofl:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _clear_adc_scan *****************
  4699 ;; Defined at:
  4700 ;;		line 64 in file "daq.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1  [STACK] void 
  4707 ;; Registers used:
  4708 ;;		None
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/39
  4711 ;;		On exit  : 3F/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    6
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;; This function uses a reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text19
  4729  01854A                     __ptext19:
  4730                           	opt callstack 0
  4731  01854A                     _clear_adc_scan:
  4732                           	opt callstack 24
  4733                           
  4734                           ;daq.c: 66:  R.done = 0;
  4735                           
  4736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4737                           ;incstack = 0
  4738  01854A  0100               	movlb	0	; () banked
  4739  01854C  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4740                           
  4741                           ; BSR set to: 0
  4742                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4743  01854E  0012               	return		;funcret
  4744  018550                     __end_of_clear_adc_scan:
  4745                           	opt callstack 0
  4746                           
  4747 ;; *************** function _check_switches *****************
  4748 ;; Defined at:
  4749 ;;		line 41 in file "dio.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1  [STACK] unsigned char 
  4756 ;; Registers used:
  4757 ;;		btemp
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/39
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    6
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text20
  4778  018522                     __ptext20:
  4779                           	opt callstack 0
  4780  018522                     _check_switches:
  4781                           	opt callstack 24
  4782                           
  4783                           ;dio.c: 43:  return S.sw_bitmap;
  4784                           
  4785                           ; BSR set to: 0
  4786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4787                           ;incstack = 0
  4788  018522  0060  F220  F032   	movff	_S+40,btemp	;volatile
  4789                           
  4790                           ; _check_switches: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4791  018528  0012               	return		;funcret
  4792  01852A                     __end_of_check_switches:
  4793                           	opt callstack 0
  4794                           
  4795 ;; *************** function _check_help *****************
  4796 ;; Defined at:
  4797 ;;		line 40 in file "mconfig.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  flipper         1  [STACK] const _Bool 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1  [STACK] void 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4806 ;; Tracked objects:
  4807 ;;		On entry : 3F/1
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:   18
  4818 ;; This function calls:
  4819 ;;		_StartTimer
  4820 ;;		_TimerDone
  4821 ;;		_display_help
  4822 ;;		_display_info
  4823 ;;		_get_vterm_ptr
  4824 ;;		_help_button
  4825 ;;		_mode_lamp_bright
  4826 ;;		_mode_lamp_dim
  4827 ;;		_set_display_info
  4828 ;;		_set_temp_display_help
  4829 ;;		_set_vterm
  4830 ;;		_sprintf
  4831 ;;		_update_lcd
  4832 ;;		_vterm_dump
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text21
  4839  01541A                     __ptext21:
  4840                           	opt callstack 0
  4841  01541A                     _check_help:
  4842                           	opt callstack 12
  4843                           
  4844                           ;mconfig.c: 40: void check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if
      +                           (help_button() && display_info() != DIS_HELP) {
  4845                           
  4846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4847                           ;incstack = 0
  4848  01541A  EC43  F0BE         	call	_help_button	;wreg free
  4849  01541E  5032               	movf	btemp^0,w,c
  4850  015420  B4D8               	btfsc	status,2,c
  4851  015422  D0D0               	goto	l11897
  4852  015424  EC95  F0C2         	call	_display_info	;wreg free
  4853  015428  0432               	decf	btemp^0,w,c
  4854  01542A  B4D8               	btfsc	status,2,c
  4855  01542C  D0CB               	goto	l11897
  4856                           
  4857                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4858  01542E  0EDC               	movlw	220
  4859  015430  6EE6               	movwf	postinc1,c
  4860  015432  0E05               	movlw	5
  4861  015434  6EE6               	movwf	postinc1,c
  4862  015436  0E0B               	movlw	11
  4863  015438  6EE6               	movwf	postinc1,c
  4864  01543A  EC25  F0BE         	call	_StartTimer	;wreg free
  4865                           
  4866                           ;mconfig.c: 47:   if (V.debug)
  4867  01543E  0101               	movlb	1	; () banked
  4868  015440  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4869                           
  4870                           ; BSR set to: 1
  4871                           ;mconfig.c: 48:    vterm_dump();
  4872  015442  EC5C  F0B1         	call	_vterm_dump	;wreg free
  4873                           
  4874                           ;mconfig.c: 50:   set_vterm(1);
  4875  015446  0E01               	movlw	1
  4876  015448  6EE6               	movwf	postinc1,c
  4877  01544A  ECD4  F0C1         	call	_set_vterm	;wreg free
  4878                           
  4879                           ; BSR set to: 5
  4880                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4881  01544E  EC95  F0C2         	call	_display_info	;wreg free
  4882  015452  5032               	movf	btemp^0,w,c
  4883  015454  6EE6               	movwf	postinc1,c
  4884  015456  EC51  F0C2         	call	_set_temp_display_help	;wreg free
  4885                           
  4886                           ; BSR set to: 1
  4887                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4888  01545A  0E01               	movlw	1
  4889  01545C  6EE6               	movwf	postinc1,c
  4890  01545E  EC99  F0C1         	call	_set_display_info	;wreg free
  4891                           
  4892                           ;mconfig.c: 53:   if (flipper) {
  4893                           ;stkvar	_flipper @ sp[(0)+-1]
  4894  015462  0EFF               	movlw	-1
  4895  015464  50E3               	movf	plusw1,w,c
  4896  015466  B4D8               	btfsc	status,2,c
  4897  015468  D019               	goto	l11885
  4898                           
  4899                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4900  01546A  0EC1               	movlw	low STR_15
  4901  01546C  6EE6               	movwf	postinc1,c
  4902  01546E  0EFF               	movlw	high STR_15
  4903  015470  6EE6               	movwf	postinc1,c
  4904  015472  0E1A               	movlw	low STR_17
  4905  015474  6EE6               	movwf	postinc1,c
  4906  015476  0EFF               	movlw	high STR_17
  4907  015478  6EE6               	movwf	postinc1,c
  4908  01547A  0E01               	movlw	1
  4909  01547C  6EE6               	movwf	postinc1,c
  4910  01547E  0E00               	movlw	0
  4911  015480  6EE6               	movwf	postinc1,c
  4912  015482  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  4913  015486  0060  F0CB  FFE6   	movff	btemp,postinc1
  4914  01548C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4915  015492  0E06               	movlw	6
  4916  015494  6EE6               	movwf	postinc1,c
  4917  015496  EC22  F0B4         	call	_sprintf	;wreg free
  4918                           
  4919                           ;mconfig.c: 55:   } else {
  4920  01549A  D018               	goto	l1560
  4921  01549C                     l11885:
  4922                           
  4923                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4924  01549C  0ED7               	movlw	low STR_16
  4925  01549E  6EE6               	movwf	postinc1,c
  4926  0154A0  0EFF               	movlw	high STR_16
  4927  0154A2  6EE6               	movwf	postinc1,c
  4928  0154A4  0E1A               	movlw	low STR_17
  4929  0154A6  6EE6               	movwf	postinc1,c
  4930  0154A8  0EFF               	movlw	high STR_17
  4931  0154AA  6EE6               	movwf	postinc1,c
  4932  0154AC  0E01               	movlw	1
  4933  0154AE  6EE6               	movwf	postinc1,c
  4934  0154B0  0E00               	movlw	0
  4935  0154B2  6EE6               	movwf	postinc1,c
  4936  0154B4  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  4937  0154B8  0060  F0CB  FFE6   	movff	btemp,postinc1
  4938  0154BE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4939  0154C4  0E06               	movlw	6
  4940  0154C6  6EE6               	movwf	postinc1,c
  4941  0154C8  EC22  F0B4         	call	_sprintf	;wreg free
  4942  0154CC                     l1560:
  4943                           
  4944                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4945  0154CC  0101               	movlb	1	; () banked
  4946  0154CE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4947  0154D0  32E8               	rrcf	wreg,f,c
  4948  0154D2  32E8               	rrcf	wreg,f,c
  4949  0154D4  0B03               	andlw	3
  4950  0154D6  0D24               	mullw	36
  4951  0154D8  0E12               	movlw	18
  4952  0154DA  26F3               	addwf	243,f,c
  4953  0154DC  0E00               	movlw	0
  4954  0154DE  22F4               	addwfc	244,f,c
  4955  0154E0  0E5F               	movlw	low _T
  4956  0154E2  6E3C               	movwf	(btemp+10)^0,c
  4957  0154E4  0EFE               	movlw	high _T
  4958  0154E6  6E3D               	movwf	(btemp+11)^0,c
  4959  0154E8  50F3               	movf	243,w,c
  4960  0154EA  263C               	addwf	(btemp+10)^0,f,c
  4961  0154EC  50F4               	movf	244,w,c
  4962  0154EE  223D               	addwfc	(btemp+11)^0,f,c
  4963  0154F0  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4964  0154F6  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4965  0154FC  0ECD               	movlw	low STR_19
  4966  0154FE  6EE6               	movwf	postinc1,c
  4967  015500  0EFF               	movlw	high STR_19
  4968  015502  6EE6               	movwf	postinc1,c
  4969  015504  0E01               	movlw	1
  4970  015506  6EE6               	movwf	postinc1,c
  4971  015508  0E01               	movlw	1
  4972  01550A  6EE6               	movwf	postinc1,c
  4973  01550C  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  4974  015510  0060  F0CB  FFE6   	movff	btemp,postinc1
  4975  015516  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4976  01551C  0E06               	movlw	6
  4977  01551E  6EE6               	movwf	postinc1,c
  4978  015520  EC22  F0B4         	call	_sprintf	;wreg free
  4979                           
  4980                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4981  015524  0101               	movlb	1	; () banked
  4982  015526  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4983  015528  32E8               	rrcf	wreg,f,c
  4984  01552A  32E8               	rrcf	wreg,f,c
  4985  01552C  0B03               	andlw	3
  4986  01552E  0D24               	mullw	36
  4987  015530  0E5F               	movlw	low _T
  4988  015532  6E3C               	movwf	(btemp+10)^0,c
  4989  015534  0EFE               	movlw	high _T
  4990  015536  6E3D               	movwf	(btemp+11)^0,c
  4991  015538  50F3               	movf	243,w,c
  4992  01553A  263C               	addwf	(btemp+10)^0,f,c
  4993  01553C  50F4               	movf	244,w,c
  4994  01553E  223D               	addwfc	(btemp+11)^0,f,c
  4995  015540  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4996  015546  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4997  01554C  0ECD               	movlw	low STR_19
  4998  01554E  6EE6               	movwf	postinc1,c
  4999  015550  0EFF               	movlw	high STR_19
  5000  015552  6EE6               	movwf	postinc1,c
  5001  015554  0E01               	movlw	1
  5002  015556  6EE6               	movwf	postinc1,c
  5003  015558  0E02               	movlw	2
  5004  01555A  6EE6               	movwf	postinc1,c
  5005  01555C  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5006  015560  0060  F0CB  FFE6   	movff	btemp,postinc1
  5007  015566  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5008  01556C  0E06               	movlw	6
  5009  01556E  6EE6               	movwf	postinc1,c
  5010  015570  EC22  F0B4         	call	_sprintf	;wreg free
  5011                           
  5012                           ;mconfig.c: 60:   V.help_id++;
  5013  015574  EE20  F19B         	lfsr	2,_V+155	;volatile
  5014  015578  38DF               	swapf	223,w,c
  5015  01557A  6E3D               	movwf	(btemp+11)^0,c
  5016  01557C  323D               	rrcf	(btemp+11)^0,f,c
  5017  01557E  303D               	rrcf	(btemp+11)^0,w,c
  5018  015580  0B03               	andlw	3
  5019  015582  6E3D               	movwf	(btemp+11)^0,c
  5020  015584  2A3D               	incf	(btemp+11)^0,f,c
  5021  015586  3A3D               	swapf	(btemp+11)^0,f,c
  5022  015588  363D               	rlcf	(btemp+11)^0,f,c
  5023  01558A  363D               	rlcf	(btemp+11)^0,f,c
  5024  01558C  50DF               	movf	223,w,c
  5025  01558E  183D               	xorwf	(btemp+11)^0,w,c
  5026  015590  0B3F               	andlw	-193
  5027  015592  183D               	xorwf	(btemp+11)^0,w,c
  5028  015594  6EDF               	movwf	223,c
  5029                           
  5030                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  5031  015596  0EB8               	movlw	184
  5032  015598  6EE6               	movwf	postinc1,c
  5033  01559A  0E0B               	movlw	11
  5034  01559C  6EE6               	movwf	postinc1,c
  5035  01559E  0E09               	movlw	9
  5036  0155A0  6EE6               	movwf	postinc1,c
  5037  0155A2  EC25  F0BE         	call	_StartTimer	;wreg free
  5038                           
  5039                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  5040  0155A6  0EB8               	movlw	184
  5041  0155A8  6EE6               	movwf	postinc1,c
  5042  0155AA  0E0B               	movlw	11
  5043  0155AC  6EE6               	movwf	postinc1,c
  5044  0155AE  0E07               	movlw	7
  5045  0155B0  6EE6               	movwf	postinc1,c
  5046  0155B2  EC25  F0BE         	call	_StartTimer	;wreg free
  5047                           
  5048                           ;mconfig.c: 63:   mode_lamp_bright();
  5049  0155B6  EC60  F0C2         	call	_mode_lamp_bright	;wreg free
  5050                           
  5051                           ;mconfig.c: 64:   update_lcd(1);
  5052  0155BA  0E01               	movlw	1
  5053  0155BC  6EE6               	movwf	postinc1,c
  5054  0155BE  EC9B  F0B3         	call	_update_lcd	;wreg free
  5055                           
  5056                           ;mconfig.c: 65:  } else {
  5057  0155C2  D032               	goto	l1564
  5058  0155C4                     l11897:
  5059                           
  5060                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  5061  0155C4  0E09               	movlw	9
  5062  0155C6  6EE6               	movwf	postinc1,c
  5063  0155C8  EC13  F0C1         	call	_TimerDone	;wreg free
  5064  0155CC  5032               	movf	btemp^0,w,c
  5065  0155CE  B4D8               	btfsc	status,2,c
  5066  0155D0  D02B               	goto	l1564
  5067                           
  5068                           ;mconfig.c: 67:    set_vterm(0);
  5069  0155D2  0E00               	movlw	0
  5070  0155D4  6EE6               	movwf	postinc1,c
  5071  0155D6  ECD4  F0C1         	call	_set_vterm	;wreg free
  5072                           
  5073                           ; BSR set to: 5
  5074                           ;mconfig.c: 68:    V.help = 0;
  5075  0155DA  0101               	movlb	1	; () banked
  5076  0155DC  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5077                           
  5078                           ; BSR set to: 1
  5079                           ;mconfig.c: 69:    set_display_info(display_help());
  5080  0155DE  EC99  F0C2         	call	_display_help	;wreg free
  5081  0155E2  5032               	movf	btemp^0,w,c
  5082  0155E4  6EE6               	movwf	postinc1,c
  5083  0155E6  EC99  F0C1         	call	_set_display_info	;wreg free
  5084                           
  5085                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  5086  0155EA  0060  F657  FFE6   	movff	_V+149,postinc1
  5087  0155F0  0060  F65B  FFE6   	movff	_V+150,postinc1
  5088  0155F6  ECFD  F0C1         	call	_mode_lamp_dim	;wreg free
  5089                           
  5090                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  5091  0155FA  0E0B               	movlw	11
  5092  0155FC  6EE6               	movwf	postinc1,c
  5093  0155FE  EC13  F0C1         	call	_TimerDone	;wreg free
  5094  015602  5032               	movf	btemp^0,w,c
  5095  015604  B4D8               	btfsc	status,2,c
  5096  015606  D010               	goto	l1564
  5097                           
  5098                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  5099  015608  0101               	movlb	1	; () banked
  5100  01560A  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5101  01560C  A4D8               	btfss	status,2,c
  5102  01560E  D002               	goto	u12600
  5103  015610  0E01               	movlw	1
  5104  015612  D001               	goto	u12610
  5105  015614                     u12600:
  5106  015614  0E00               	movlw	0
  5107  015616                     u12610:
  5108  015616  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  5112  015618  0EDC               	movlw	220
  5113  01561A  6EE6               	movwf	postinc1,c
  5114  01561C  0E05               	movlw	5
  5115  01561E  6EE6               	movwf	postinc1,c
  5116  015620  0E0B               	movlw	11
  5117  015622  6EE6               	movwf	postinc1,c
  5118  015624  EC25  F0BE         	call	_StartTimer	;wreg free
  5119  015628                     l1564:
  5120                           
  5121                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5122  015628  52E5               	movf	postdec1,f,c
  5123  01562A  0012               	return		;funcret
  5124  01562C                     __end_of_check_help:
  5125                           	opt callstack 0
  5126                           
  5127 ;; *************** function _vterm_dump *****************
  5128 ;; Defined at:
  5129 ;;		line 118 in file "mconfig.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1  [STACK] void 
  5136 ;; Registers used:
  5137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5138 ;; Tracked objects:
  5139 ;;		On entry : 3F/1
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:   17
  5150 ;; This function calls:
  5151 ;;		_WaitMs
  5152 ;;		_eaDogM_WriteStringAtPos
  5153 ;;		_get_vterm_ptr
  5154 ;;		_sprintf
  5155 ;;		_wait_lcd_done
  5156 ;; This function is called by:
  5157 ;;		_check_help
  5158 ;; This function uses a reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text22
  5162  0162B8                     __ptext22:
  5163                           	opt callstack 0
  5164  0162B8                     _vterm_dump:
  5165                           	opt callstack 12
  5166                           
  5167                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5168                           
  5169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5170                           ;incstack = 0
  5171  0162B8  0E01               	movlw	1
  5172  0162BA  6EE6               	movwf	postinc1,c
  5173  0162BC  0E00               	movlw	0
  5174  0162BE  6EE6               	movwf	postinc1,c
  5175  0162C0  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5176  0162C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  5177  0162CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5178  0162D0  0E00               	movlw	0
  5179  0162D2  6EE6               	movwf	postinc1,c
  5180  0162D4  0E00               	movlw	0
  5181  0162D6  6EE6               	movwf	postinc1,c
  5182  0162D8  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5183  0162DC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5184  0162E2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5185  0162E8  0E95               	movlw	low STR_21
  5186  0162EA  6EE6               	movwf	postinc1,c
  5187  0162EC  0EFF               	movlw	high STR_21
  5188  0162EE  6EE6               	movwf	postinc1,c
  5189  0162F0  0E01               	movlw	low (_V+1)
  5190  0162F2  6EE6               	movwf	postinc1,c
  5191  0162F4  0E01               	movlw	high (_V+1)
  5192  0162F6  6EE6               	movwf	postinc1,c
  5193  0162F8  0E08               	movlw	8
  5194  0162FA  6EE6               	movwf	postinc1,c
  5195  0162FC  EC22  F0B4         	call	_sprintf	;wreg free
  5196                           
  5197                           ;mconfig.c: 121:  wait_lcd_done();
  5198  016300  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5202  016304  0E01               	movlw	low (_V+1)
  5203  016306  6EE6               	movwf	postinc1,c
  5204  016308  0E01               	movlw	high (_V+1)
  5205  01630A  6EE6               	movwf	postinc1,c
  5206  01630C  0E00               	movlw	0
  5207  01630E  6EE6               	movwf	postinc1,c
  5208  016310  0E00               	movlw	0
  5209  016312  6EE6               	movwf	postinc1,c
  5210  016314  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5211                           
  5212                           ; BSR set to: 59
  5213                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5214  016318  0E01               	movlw	1
  5215  01631A  6EE6               	movwf	postinc1,c
  5216  01631C  0E01               	movlw	1
  5217  01631E  6EE6               	movwf	postinc1,c
  5218  016320  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5219  016324  0060  F0CB  FFE6   	movff	btemp,postinc1
  5220  01632A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5221  016330  0E00               	movlw	0
  5222  016332  6EE6               	movwf	postinc1,c
  5223  016334  0E01               	movlw	1
  5224  016336  6EE6               	movwf	postinc1,c
  5225  016338  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5226  01633C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5227  016342  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5228  016348  0E95               	movlw	low STR_21
  5229  01634A  6EE6               	movwf	postinc1,c
  5230  01634C  0EFF               	movlw	high STR_21
  5231  01634E  6EE6               	movwf	postinc1,c
  5232  016350  0E01               	movlw	low (_V+1)
  5233  016352  6EE6               	movwf	postinc1,c
  5234  016354  0E01               	movlw	high (_V+1)
  5235  016356  6EE6               	movwf	postinc1,c
  5236  016358  0E08               	movlw	8
  5237  01635A  6EE6               	movwf	postinc1,c
  5238  01635C  EC22  F0B4         	call	_sprintf	;wreg free
  5239                           
  5240                           ;mconfig.c: 124:  wait_lcd_done();
  5241  016360  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5242                           
  5243                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5244  016364  0E01               	movlw	low (_V+1)
  5245  016366  6EE6               	movwf	postinc1,c
  5246  016368  0E01               	movlw	high (_V+1)
  5247  01636A  6EE6               	movwf	postinc1,c
  5248  01636C  0E00               	movlw	0
  5249  01636E  6EE6               	movwf	postinc1,c
  5250  016370  0E01               	movlw	1
  5251  016372  6EE6               	movwf	postinc1,c
  5252  016374  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5253                           
  5254                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5255  016378  0E01               	movlw	1
  5256  01637A  6EE6               	movwf	postinc1,c
  5257  01637C  0E02               	movlw	2
  5258  01637E  6EE6               	movwf	postinc1,c
  5259  016380  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5260  016384  0060  F0CB  FFE6   	movff	btemp,postinc1
  5261  01638A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5262  016390  0E00               	movlw	0
  5263  016392  6EE6               	movwf	postinc1,c
  5264  016394  0E02               	movlw	2
  5265  016396  6EE6               	movwf	postinc1,c
  5266  016398  EC29  F0BF         	call	_get_vterm_ptr	;wreg free
  5267  01639C  0060  F0CB  FFE6   	movff	btemp,postinc1
  5268  0163A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5269  0163A8  0E95               	movlw	low STR_21
  5270  0163AA  6EE6               	movwf	postinc1,c
  5271  0163AC  0EFF               	movlw	high STR_21
  5272  0163AE  6EE6               	movwf	postinc1,c
  5273  0163B0  0E01               	movlw	low (_V+1)
  5274  0163B2  6EE6               	movwf	postinc1,c
  5275  0163B4  0E01               	movlw	high (_V+1)
  5276  0163B6  6EE6               	movwf	postinc1,c
  5277  0163B8  0E08               	movlw	8
  5278  0163BA  6EE6               	movwf	postinc1,c
  5279  0163BC  EC22  F0B4         	call	_sprintf	;wreg free
  5280                           
  5281                           ;mconfig.c: 127:  wait_lcd_done();
  5282  0163C0  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5286  0163C4  0E01               	movlw	low (_V+1)
  5287  0163C6  6EE6               	movwf	postinc1,c
  5288  0163C8  0E01               	movlw	high (_V+1)
  5289  0163CA  6EE6               	movwf	postinc1,c
  5290  0163CC  0E00               	movlw	0
  5291  0163CE  6EE6               	movwf	postinc1,c
  5292  0163D0  0E02               	movlw	2
  5293  0163D2  6EE6               	movwf	postinc1,c
  5294  0163D4  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5295                           
  5296                           ; BSR set to: 59
  5297                           ;mconfig.c: 129:  WaitMs(3000);
  5298  0163D8  0EB8               	movlw	184
  5299  0163DA  6EE6               	movwf	postinc1,c
  5300  0163DC  0E0B               	movlw	11
  5301  0163DE  6EE6               	movwf	postinc1,c
  5302  0163E0  EC5F  F0BE         	call	_WaitMs	;wreg free
  5303                           
  5304                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5305  0163E4  0012               	return		;funcret
  5306  0163E6                     __end_of_vterm_dump:
  5307                           	opt callstack 0
  5308                           
  5309 ;; *************** function _sprintf *****************
  5310 ;; Defined at:
  5311 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  s               2  [STACK] PTR unsigned char 
  5314 ;;		 -> D.lcd(216), D(218), V(187), 
  5315 ;;  fmt             2  [STACK] PTR const unsigned char 
  5316 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5317 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5318 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5319 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5320 ;;		 -> STR_11(17), STR_10(14), STR_9(14), STR_8(17), 
  5321 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5322 ;;		 -> STR_1(17), 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  f               6  [STACK] struct _IO_FILE
  5325 ;;  ap              2  [STACK] PTR void [1]
  5326 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5327 ;;  ret             2    0        int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2  [STACK] int 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/5
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:   14
  5344 ;; This function calls:
  5345 ;;		_vfprintf
  5346 ;; This function is called by:
  5347 ;;		_main
  5348 ;;		_check_help
  5349 ;;		_vterm_dump
  5350 ;; This function uses a reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text23
  5354  016844                     __ptext23:
  5355                           	opt callstack 0
  5356  016844                     _sprintf:
  5357                           	opt callstack 0
  5358                           
  5359                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5360  016844  0E08               	movlw	8
  5361  016846  26E1               	addwf	fsr1l,f,c
  5362  016848  0E00               	movlw	0
  5363  01684A  22E2               	addwfc	fsr1h,f,c
  5364                           
  5365                           ;incstack = 0
  5366  01684C  0EFE               	movlw	254
  5367  01684E  6E3C               	movwf	(btemp+10)^0,c
  5368  016850  0EFF               	movlw	255
  5369  016852  6E3D               	movwf	(btemp+11)^0,c
  5370                           
  5371                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5372  016854  0EF5               	movlw	245
  5373  016856  24E1               	addwf	fsr1l,w,c
  5374  016858  6E3A               	movwf	(btemp+8)^0,c
  5375  01685A  0EFF               	movlw	255
  5376  01685C  20E2               	addwfc	fsr1h,w,c
  5377  01685E  6E3B               	movwf	(btemp+9)^0,c
  5378  016860  503C               	movf	(btemp+10)^0,w,c
  5379  016862  263A               	addwf	(btemp+8)^0,f,c
  5380  016864  503D               	movf	(btemp+11)^0,w,c
  5381  016866  223B               	addwfc	(btemp+9)^0,f,c
  5382                           
  5383                           ;stkvar	_ap @ sp[(-8)+6]
  5384  016868  0EFF               	movlw	-1
  5385  01686A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5386  016870  0EFE               	movlw	-2
  5387  016872  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5388                           
  5389                           ;stkvar	_s @ sp[(-8)+-3]
  5390  016878  0EF5               	movlw	-11
  5391  01687A  006F FF8C  F03C    	movff	plusw1,btemp+10
  5392  016880  0EF6               	movlw	-10
  5393  016882  006F FF8C  F03D    	movff	plusw1,btemp+11
  5394                           
  5395                           ;stkvar	_f @ sp[(-8)+0]
  5396  016888  0EF9               	movlw	-7
  5397  01688A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5398  016890  0EF8               	movlw	-8
  5399  016892  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5400                           
  5401                           ;stkvar	_f @ sp[(-8)+0]
  5402  016898  0EFA               	movlw	250
  5403  01689A  24E1               	addwf	fsr1l,w,c
  5404  01689C  6ED9               	movwf	fsr2l,c
  5405  01689E  0EFF               	movlw	255
  5406  0168A0  20E2               	addwfc	fsr1h,w,c
  5407  0168A2  6EDA               	movwf	fsr2h,c
  5408  0168A4  0E00               	movlw	0
  5409  0168A6  6EDE               	movwf	postinc2,c
  5410  0168A8  0E00               	movlw	0
  5411  0168AA  6EDD               	movwf	postdec2,c
  5412                           
  5413                           ;stkvar	_f @ sp[(-8)+0]
  5414  0168AC  0EFC               	movlw	252
  5415  0168AE  24E1               	addwf	fsr1l,w,c
  5416  0168B0  6ED9               	movwf	fsr2l,c
  5417  0168B2  0EFF               	movlw	255
  5418  0168B4  20E2               	addwfc	fsr1h,w,c
  5419  0168B6  6EDA               	movwf	fsr2h,c
  5420  0168B8  0E00               	movlw	0
  5421  0168BA  6EDE               	movwf	postinc2,c
  5422  0168BC  0E00               	movlw	0
  5423  0168BE  6EDD               	movwf	postdec2,c
  5424                           
  5425                           ;stkvar	_ap @ sp[(-8)+6]
  5426  0168C0  0EFE               	movlw	254
  5427  0168C2  24E1               	addwf	fsr1l,w,c
  5428  0168C4  6E32               	movwf	btemp^0,c
  5429  0168C6  0EFF               	movlw	255
  5430  0168C8  20E2               	addwfc	fsr1h,w,c
  5431  0168CA  6E33               	movwf	(btemp+1)^0,c
  5432  0168CC  0060  F0CB  FFE6   	movff	btemp,postinc1
  5433  0168D2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5434                           
  5435                           ;stkvar	_fmt @ sp[(-10)+-5]
  5436  0168D8  0EF1               	movlw	-15
  5437  0168DA  006F FF8F FFE6     	movff	plusw1,postinc1
  5438  0168E0  006F FF8F FFE6     	movff	plusw1,postinc1
  5439                           
  5440                           ;stkvar	_f @ sp[(-12)+0]
  5441  0168E6  0EF4               	movlw	244
  5442  0168E8  24E1               	addwf	fsr1l,w,c
  5443  0168EA  6E32               	movwf	btemp^0,c
  5444  0168EC  0EFF               	movlw	255
  5445  0168EE  20E2               	addwfc	fsr1h,w,c
  5446  0168F0  6E33               	movwf	(btemp+1)^0,c
  5447  0168F2  0060  F0CB  FFE6   	movff	btemp,postinc1
  5448  0168F8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5449  0168FE  EC15  F0B7         	call	_vfprintf	;wreg free
  5450                           
  5451                           ;stkvar	_f @ sp[(-8)+0]
  5452  016902  0EFA               	movlw	250
  5453  016904  24E1               	addwf	fsr1l,w,c
  5454  016906  6ED9               	movwf	fsr2l,c
  5455  016908  0EFF               	movlw	255
  5456  01690A  20E2               	addwfc	fsr1h,w,c
  5457  01690C  6EDA               	movwf	fsr2h,c
  5458  01690E  006F FF78  F03C    	movff	postinc2,btemp+10
  5459  016914  006F FF74  F03D    	movff	postdec2,btemp+11
  5460                           
  5461                           ;stkvar	_s @ sp[(-8)+-3]
  5462  01691A  0EF5               	movlw	-11
  5463  01691C  006F FF8C  F03A    	movff	plusw1,btemp+8
  5464  016922  0EF6               	movlw	-10
  5465  016924  006F FF8C  F03B    	movff	plusw1,btemp+9
  5466  01692A  503C               	movf	(btemp+10)^0,w,c
  5467  01692C  243A               	addwf	(btemp+8)^0,w,c
  5468  01692E  6ED9               	movwf	fsr2l,c
  5469  016930  503D               	movf	(btemp+11)^0,w,c
  5470  016932  203B               	addwfc	(btemp+9)^0,w,c
  5471  016934  6EDA               	movwf	fsr2h,c
  5472  016936  0E00               	movlw	0
  5473  016938  6EDF               	movwf	indf2,c
  5474                           
  5475                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5476  01693A  0EF8               	movlw	248
  5477  01693C  26E1               	addwf	fsr1l,f,c
  5478  01693E  0EFF               	movlw	255
  5479  016940  22E2               	addwfc	fsr1h,f,c
  5480  016942  52E5               	movf	postdec1,f,c
  5481  016944  50E7               	movf	indf1,w,c
  5482  016946  5EE1               	subwf	fsr1l,f,c
  5483  016948  0E00               	movlw	0
  5484  01694A  5AE2               	subwfb	fsr1h,f,c
  5485  01694C  0012               	return		;funcret
  5486  01694E                     __end_of_sprintf:
  5487                           	opt callstack 0
  5488                           
  5489 ;; *************** function _get_vterm_ptr *****************
  5490 ;; Defined at:
  5491 ;;		line 113 in file "mconfig.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  line            1  [STACK] const unsigned char 
  5494 ;;  vterm           1  [STACK] const unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  2  [STACK] PTR unsigned char 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/5
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    6
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_main
  5517 ;;		_check_help
  5518 ;;		_vterm_dump
  5519 ;; This function uses a reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text24
  5523  017E52                     __ptext24:
  5524                           	opt callstack 0
  5525  017E52                     _get_vterm_ptr:
  5526                           	opt callstack 24
  5527                           
  5528                           ;mconfig.c: 113: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 114: {;mconfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5529                           ;stkvar	_vterm @ sp[(0)+-2]
  5530                           
  5531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5532                           ;incstack = 0
  5533  017E52  0EFE               	movlw	-2
  5534  017E54  50E3               	movf	plusw1,w,c
  5535  017E56  0B03               	andlw	3
  5536  017E58  0D36               	mullw	54
  5537  017E5A  0E00               	movlw	low _D
  5538  017E5C  6E32               	movwf	btemp^0,c
  5539  017E5E  0E05               	movlw	high _D
  5540  017E60  6E33               	movwf	(btemp+1)^0,c
  5541  017E62  50F3               	movf	243,w,c
  5542  017E64  2632               	addwf	btemp^0,f,c
  5543  017E66  50F4               	movf	244,w,c
  5544  017E68  2233               	addwfc	(btemp+1)^0,f,c
  5545                           
  5546                           ;stkvar	_line @ sp[(0)+-1]
  5547  017E6A  0EFF               	movlw	-1
  5548  017E6C  50E3               	movf	plusw1,w,c
  5549  017E6E  0B03               	andlw	3
  5550  017E70  0D12               	mullw	18
  5551  017E72  50F3               	movf	243,w,c
  5552  017E74  2632               	addwf	btemp^0,f,c
  5553  017E76  50F4               	movf	244,w,c
  5554  017E78  2233               	addwfc	(btemp+1)^0,f,c
  5555                           
  5556                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5557  017E7A  52E5               	movf	postdec1,f,c
  5558  017E7C  52E5               	movf	postdec1,f,c
  5559  017E7E  0012               	return		;funcret
  5560  017E80                     __end_of_get_vterm_ptr:
  5561                           	opt callstack 0
  5562                           
  5563 ;; *************** function _WaitMs *****************
  5564 ;; Defined at:
  5565 ;;		line 32 in file "timers.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  numMilliseco    2  [STACK] const unsigned short 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1  [STACK] void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5574 ;; Tracked objects:
  5575 ;;		On entry : 1/1
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    7
  5586 ;; This function calls:
  5587 ;;		_StartTimer
  5588 ;;		_TimerDone
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;;		_vterm_dump
  5592 ;; This function uses a reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text25
  5596  017CBE                     __ptext25:
  5597                           	opt callstack 0
  5598  017CBE                     _WaitMs:
  5599                           	opt callstack 21
  5600                           
  5601                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5602                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5603                           
  5604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5605                           ;incstack = 0
  5606  017CBE  0EFE               	movlw	-2
  5607  017CC0  006F FF8F FFE6     	movff	plusw1,postinc1
  5608  017CC6  006F FF8F FFE6     	movff	plusw1,postinc1
  5609  017CCC  0E00               	movlw	0
  5610  017CCE  6EE6               	movwf	postinc1,c
  5611  017CD0  EC25  F0BE         	call	_StartTimer	;wreg free
  5612                           
  5613                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5614  017CD4  D005               	goto	l11089
  5615  017CD6                     l1490:
  5616                           
  5617                           ;timers.c: 36:   __nop();
  5618  017CD6  F000               	nop	
  5619                           
  5620                           ;timers.c: 37:   __nop();
  5621  017CD8  F000               	nop	
  5622                           
  5623                           ;timers.c: 38:   __nop();
  5624  017CDA  F000               	nop	
  5625                           
  5626                           ;timers.c: 39:   __nop();
  5627  017CDC  F000               	nop	
  5628  017CDE  0004               	clrwdt		;# 
  5629  017CE0                     l11089:
  5630                           
  5631                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5632  017CE0  0E00               	movlw	0
  5633  017CE2  6EE6               	movwf	postinc1,c
  5634  017CE4  EC13  F0C1         	call	_TimerDone	;wreg free
  5635  017CE8  5032               	movf	btemp^0,w,c
  5636  017CEA  B4D8               	btfsc	status,2,c
  5637  017CEC  D7F4               	goto	l1490
  5638                           
  5639                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5640  017CEE  52E5               	movf	postdec1,f,c
  5641  017CF0  52E5               	movf	postdec1,f,c
  5642  017CF2  0012               	return		;funcret
  5643  017CF4                     __end_of_WaitMs:
  5644                           	opt callstack 0
  5645                           
  5646 ;; *************** function _update_lcd *****************
  5647 ;; Defined at:
  5648 ;;		line 82 in file "mconfig.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  vterm           1  [STACK] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1  [STACK] unsigned char 
  5655 ;; Registers used:
  5656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/5
  5659 ;;		On exit  : 1/1
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:   17
  5669 ;; This function calls:
  5670 ;;		_eaDogM_WriteStringAtPos
  5671 ;;		_wait_lcd_done
  5672 ;; This function is called by:
  5673 ;;		_main
  5674 ;;		_check_help
  5675 ;; This function uses a reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text26
  5679  016736                     __ptext26:
  5680                           	opt callstack 0
  5681  016736                     _update_lcd:
  5682                           	opt callstack 13
  5683                           
  5684                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5685                           ;stkvar	_vterm @ sp[(0)+-1]
  5686                           
  5687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5688                           ;incstack = 0
  5689  016736  0EFF               	movlw	-1
  5690  016738  006F FF8C  F032    	movff	plusw1,btemp
  5691  01673E  0E03               	movlw	3
  5692  016740  1632               	andwf	btemp^0,f,c
  5693  016742  0EFF               	movlw	-1
  5694  016744  0060  F0CB  FFE3   	movff	btemp,plusw1
  5695                           
  5696                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5697  01674A  0105               	movlb	5	; () banked
  5698  01674C  A1D8               	btfss	(_D+216)& (0+255),0,b
  5699  01674E  D004               	goto	l11543
  5700                           
  5701                           ; BSR set to: 5
  5702                           ;stkvar	_vterm @ sp[(0)+-1]
  5703  016750  0EFF               	movlw	-1
  5704  016752  50E3               	movf	plusw1,w,c
  5705  016754  B4D8               	btfsc	status,2,c
  5706  016756  D074               	goto	l1568
  5707  016758                     l11543:
  5708                           
  5709                           ; BSR set to: 5
  5710                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5711                           ;stkvar	_vterm @ sp[(0)+-1]
  5712  016758  0EFF               	movlw	-1
  5713  01675A  50E3               	movf	plusw1,w,c
  5714  01675C  0D36               	mullw	54
  5715  01675E  0E10               	movlw	low (_D+16)
  5716  016760  24F3               	addwf	243,w,c
  5717  016762  6ED9               	movwf	fsr2l,c
  5718  016764  0E05               	movlw	high (_D+16)
  5719  016766  20F4               	addwfc	prodh,w,c
  5720  016768  6EDA               	movwf	fsr2h,c
  5721  01676A  0E00               	movlw	0
  5722  01676C  6EDF               	movwf	indf2,c
  5723                           
  5724                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5725                           ;stkvar	_vterm @ sp[(0)+-1]
  5726  01676E  0EFF               	movlw	-1
  5727  016770  50E3               	movf	plusw1,w,c
  5728  016772  0D36               	mullw	54
  5729  016774  0E22               	movlw	low (_D+34)
  5730  016776  24F3               	addwf	243,w,c
  5731  016778  6ED9               	movwf	fsr2l,c
  5732  01677A  0E05               	movlw	high (_D+34)
  5733  01677C  20F4               	addwfc	prodh,w,c
  5734  01677E  6EDA               	movwf	fsr2h,c
  5735  016780  0E00               	movlw	0
  5736  016782  6EDF               	movwf	indf2,c
  5737                           
  5738                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5739                           ;stkvar	_vterm @ sp[(0)+-1]
  5740  016784  0EFF               	movlw	-1
  5741  016786  50E3               	movf	plusw1,w,c
  5742  016788  0D36               	mullw	54
  5743  01678A  0E34               	movlw	low (_D+52)
  5744  01678C  24F3               	addwf	243,w,c
  5745  01678E  6ED9               	movwf	fsr2l,c
  5746  016790  0E05               	movlw	high (_D+52)
  5747  016792  20F4               	addwfc	prodh,w,c
  5748  016794  6EDA               	movwf	fsr2h,c
  5749  016796  0E00               	movlw	0
  5750  016798  6EDF               	movwf	indf2,c
  5751                           
  5752                           ; BSR set to: 5
  5753                           ;mconfig.c: 92:  wait_lcd_done();
  5754  01679A  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5758                           ;stkvar	_vterm @ sp[(0)+-1]
  5759  01679E  0EFF               	movlw	-1
  5760  0167A0  50E3               	movf	plusw1,w,c
  5761  0167A2  0D36               	mullw	54
  5762  0167A4  0E00               	movlw	low _D
  5763  0167A6  6E3C               	movwf	(btemp+10)^0,c
  5764  0167A8  0E05               	movlw	high _D
  5765  0167AA  6E3D               	movwf	(btemp+11)^0,c
  5766  0167AC  50F3               	movf	243,w,c
  5767  0167AE  263C               	addwf	(btemp+10)^0,f,c
  5768  0167B0  50F4               	movf	244,w,c
  5769  0167B2  223D               	addwfc	(btemp+11)^0,f,c
  5770  0167B4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5771  0167BA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5772  0167C0  0E00               	movlw	0
  5773  0167C2  6EE6               	movwf	postinc1,c
  5774  0167C4  0E00               	movlw	0
  5775  0167C6  6EE6               	movwf	postinc1,c
  5776  0167C8  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5777                           
  5778                           ; BSR set to: 59
  5779                           ;mconfig.c: 94:  wait_lcd_done();
  5780  0167CC  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5784                           ;stkvar	_vterm @ sp[(0)+-1]
  5785  0167D0  0EFF               	movlw	-1
  5786  0167D2  50E3               	movf	plusw1,w,c
  5787  0167D4  0D36               	mullw	54
  5788  0167D6  0E00               	movlw	low _D
  5789  0167D8  6E3C               	movwf	(btemp+10)^0,c
  5790  0167DA  0E05               	movlw	high _D
  5791  0167DC  6E3D               	movwf	(btemp+11)^0,c
  5792  0167DE  0E12               	movlw	18
  5793  0167E0  263C               	addwf	(btemp+10)^0,f,c
  5794  0167E2  0E00               	movlw	0
  5795  0167E4  223D               	addwfc	(btemp+11)^0,f,c
  5796  0167E6  50F3               	movf	243,w,c
  5797  0167E8  263C               	addwf	(btemp+10)^0,f,c
  5798  0167EA  50F4               	movf	244,w,c
  5799  0167EC  223D               	addwfc	(btemp+11)^0,f,c
  5800  0167EE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5801  0167F4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5802  0167FA  0E00               	movlw	0
  5803  0167FC  6EE6               	movwf	postinc1,c
  5804  0167FE  0E01               	movlw	1
  5805  016800  6EE6               	movwf	postinc1,c
  5806  016802  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5807                           
  5808                           ; BSR set to: 59
  5809                           ;mconfig.c: 96:  wait_lcd_done();
  5810  016806  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5814                           ;stkvar	_vterm @ sp[(0)+-1]
  5815  01680A  0EFF               	movlw	-1
  5816  01680C  50E3               	movf	plusw1,w,c
  5817  01680E  0D36               	mullw	54
  5818  016810  0E00               	movlw	low _D
  5819  016812  6E3C               	movwf	(btemp+10)^0,c
  5820  016814  0E05               	movlw	high _D
  5821  016816  6E3D               	movwf	(btemp+11)^0,c
  5822  016818  0E24               	movlw	36
  5823  01681A  263C               	addwf	(btemp+10)^0,f,c
  5824  01681C  0E00               	movlw	0
  5825  01681E  223D               	addwfc	(btemp+11)^0,f,c
  5826  016820  50F3               	movf	243,w,c
  5827  016822  263C               	addwf	(btemp+10)^0,f,c
  5828  016824  50F4               	movf	244,w,c
  5829  016826  223D               	addwfc	(btemp+11)^0,f,c
  5830  016828  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5831  01682E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5832  016834  0E00               	movlw	0
  5833  016836  6EE6               	movwf	postinc1,c
  5834  016838  0E02               	movlw	2
  5835  01683A  6EE6               	movwf	postinc1,c
  5836  01683C  EC7A  F0BE         	call	_eaDogM_WriteStringAtPos	;wreg free
  5837  016840                     l1568:
  5838                           
  5839                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5840  016840  52E5               	movf	postdec1,f,c
  5841  016842  0012               	return		;funcret
  5842  016844                     __end_of_update_lcd:
  5843                           	opt callstack 0
  5844                           
  5845 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5846 ;; Defined at:
  5847 ;;		line 252 in file "eadog.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  r               1  [STACK] const unsigned char 
  5850 ;;  c               1  [STACK] const unsigned char 
  5851 ;;  strPtr          2  [STACK] PTR unsigned char 
  5852 ;;		 -> D.lcd(216), D(218), V(187), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1  [STACK] void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5859 ;; Tracked objects:
  5860 ;;		On entry : 3F/0
  5861 ;;		On exit  : 3F/3B
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5868 ;;Total ram usage:        0 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:   16
  5871 ;; This function calls:
  5872 ;;		_eaDogM_WriteString
  5873 ;;		_send_lcd_cmd_dma
  5874 ;; This function is called by:
  5875 ;;		_update_lcd
  5876 ;;		_vterm_dump
  5877 ;; This function uses a reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text27
  5881  017CF4                     __ptext27:
  5882                           	opt callstack 0
  5883  017CF4                     _eaDogM_WriteStringAtPos:
  5884                           	opt callstack 13
  5885                           
  5886                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5887                           ;stkvar	_c @ sp[(0)+-2]
  5888                           
  5889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5890                           ;incstack = 0
  5891  017CF4  0EFE               	movlw	-2
  5892  017CF6  006F FF8C  F03D    	movff	plusw1,btemp+11
  5893                           
  5894                           ;stkvar	_r @ sp[(0)+-1]
  5895  017CFC  0EFF               	movlw	-1
  5896  017CFE  50E3               	movf	plusw1,w,c
  5897  017D00  0D10               	mullw	16
  5898  017D02  50F3               	movf	243,w,c
  5899  017D04  243D               	addwf	(btemp+11)^0,w,c
  5900  017D06  0F80               	addlw	128
  5901  017D08  6EE6               	movwf	postinc1,c
  5902  017D0A  EC7D  F0BC         	call	_send_lcd_cmd_dma	;wreg free
  5903                           
  5904                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5905                           ;stkvar	_strPtr @ sp[(0)+-4]
  5906  017D0E  0EFC               	movlw	-4
  5907  017D10  006F FF8F FFE6     	movff	plusw1,postinc1
  5908  017D16  006F FF8F FFE6     	movff	plusw1,postinc1
  5909  017D1C  EC69  F0B7         	call	_eaDogM_WriteString	;wreg free
  5910                           
  5911                           ; BSR set to: 59
  5912                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5913  017D20  52E5               	movf	postdec1,f,c
  5914  017D22  52E5               	movf	postdec1,f,c
  5915  017D24  52E5               	movf	postdec1,f,c
  5916  017D26  52E5               	movf	postdec1,f,c
  5917  017D28  0012               	return		;funcret
  5918  017D2A                     __end_of_eaDogM_WriteStringAtPos:
  5919                           	opt callstack 0
  5920                           
  5921 ;; *************** function _send_lcd_cmd_dma *****************
  5922 ;; Defined at:
  5923 ;;		line 205 in file "eadog.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  strPtr          1  [STACK] unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1  [STACK] void 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/3D
  5934 ;;		On exit  : 3F/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:   15
  5944 ;; This function calls:
  5945 ;;		_printf
  5946 ;;		_ringBufS_flush
  5947 ;;		_start_lcd
  5948 ;;		_wait_lcd_done
  5949 ;;		_wait_lcd_set
  5950 ;; This function is called by:
  5951 ;;		_eaDogM_WriteCommand
  5952 ;;		_eaDogM_WriteStringAtPos
  5953 ;; This function uses a reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text28
  5957  0178FA                     __ptext28:
  5958                           	opt callstack 0
  5959  0178FA                     _send_lcd_cmd_dma:
  5960                           	opt callstack 13
  5961                           
  5962                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5963                           
  5964                           ; BSR set to: 59
  5965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5966                           ;incstack = 0
  5967  0178FA  ECA8  F0C2         	call	_wait_lcd_set	;wreg free
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5971  0178FE  0E00               	movlw	0
  5972  017900  6EE6               	movwf	postinc1,c
  5973  017902  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  5974  017908  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  5975  01790E  EC59  F0B8         	call	_ringBufS_flush	;wreg free
  5976  017912  92BC               	bcf	188,1,c	;volatile
  5977  017914  94BC               	bcf	188,2,c	;volatile
  5978                           
  5979                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5980  017916  013B               	movlb	59	; () banked
  5981  017918  9FFC               	bcf	252,7,b	;volatile
  5982                           
  5983                           ; BSR set to: 59
  5984                           ;eadog.c: 214:  DMA1SSZ = 1;
  5985  01791A  0E00               	movlw	0
  5986  01791C  6FF8               	movwf	248,b	;volatile
  5987  01791E  0E01               	movlw	1
  5988  017920  6FF7               	movwf	247,b	;volatile
  5989                           
  5990                           ; BSR set to: 59
  5991                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5992  017922  8FFC               	bsf	252,7,b	;volatile
  5993                           
  5994                           ; BSR set to: 59
  5995                           ;eadog.c: 216:  printf("%c", strPtr);
  5996                           ;stkvar	_strPtr @ sp[(0)+-1]
  5997  017924  0EFF               	movlw	-1
  5998  017926  50E3               	movf	plusw1,w,c
  5999  017928  6EE6               	movwf	postinc1,c
  6000  01792A  0E00               	movlw	0
  6001  01792C  6EE6               	movwf	postinc1,c
  6002  01792E  0EF8               	movlw	low STR_13
  6003  017930  6EE6               	movwf	postinc1,c
  6004  017932  0EFF               	movlw	high STR_13
  6005  017934  6EE6               	movwf	postinc1,c
  6006  017936  0E04               	movlw	4
  6007  017938  6EE6               	movwf	postinc1,c
  6008  01793A  EC96  F0BB         	call	_printf	;wreg free
  6009                           
  6010                           ;eadog.c: 217:  start_lcd();
  6011  01793E  ECAB  F0C2         	call	_start_lcd	;wreg free
  6012                           
  6013                           ; BSR set to: 59
  6014                           ;eadog.c: 218:  wait_lcd_done();
  6015  017942  ECC6  F0C1         	call	_wait_lcd_done	;wreg free
  6016                           
  6017                           ; BSR set to: 0
  6018  017946  82BC               	bsf	188,1,c	;volatile
  6019                           
  6020                           ; BSR set to: 0
  6021                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6022  017948  52E5               	movf	postdec1,f,c
  6023  01794A  0012               	return		;funcret
  6024  01794C                     __end_of_send_lcd_cmd_dma:
  6025                           	opt callstack 0
  6026                           
  6027 ;; *************** function _wait_lcd_done *****************
  6028 ;; Defined at:
  6029 ;;		line 141 in file "eadog.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1  [STACK] void 
  6036 ;; Registers used:
  6037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/1
  6040 ;;		On exit  : 3F/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    7
  6050 ;; This function calls:
  6051 ;;		_wdtdelay
  6052 ;; This function is called by:
  6053 ;;		_send_lcd_cmd_dma
  6054 ;;		_update_lcd
  6055 ;;		_vterm_dump
  6056 ;; This function uses a reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text29
  6060  01838C                     __ptext29:
  6061                           	opt callstack 0
  6062  01838C                     _wait_lcd_done:
  6063                           	opt callstack 22
  6064                           
  6065                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6066                           
  6067                           ; BSR set to: 0
  6068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6069                           ;incstack = 0
  6070  01838C  0100               	movlb	0	; () banked
  6071  01838E  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6072  018390  D7FD               	goto	_wait_lcd_done
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;eadog.c: 144:  wdtdelay(50);
  6076  018392  0E32               	movlw	50
  6077  018394  6EE6               	movwf	postinc1,c
  6078  018396  0E00               	movlw	0
  6079  018398  6EE6               	movwf	postinc1,c
  6080  01839A  0E00               	movlw	0
  6081  01839C  6EE6               	movwf	postinc1,c
  6082  01839E  0E00               	movlw	0
  6083  0183A0  6EE6               	movwf	postinc1,c
  6084  0183A2  ECF6  F0BB         	call	_wdtdelay	;wreg free
  6085                           
  6086                           ; BSR set to: 0
  6087                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6088  0183A6  0012               	return		;funcret
  6089  0183A8                     __end_of_wait_lcd_done:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _wdtdelay *****************
  6093 ;; Defined at:
  6094 ;;		line 22 in file "eadog.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  delay           4  [STACK] const unsigned long 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1  [STACK] void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 3F/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    6
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_init_display
  6119 ;;		_send_lcd_cmd
  6120 ;;		_send_lcd_cmd_long
  6121 ;;		_wait_lcd_done
  6122 ;; This function uses a reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text30
  6126  0177EC                     __ptext30:
  6127                           	opt callstack 0
  6128  0177EC                     _wdtdelay:
  6129                           	opt callstack 22
  6130                           
  6131                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6132                           
  6133                           ; BSR set to: 0
  6134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6135                           ;incstack = 0
  6136  0177EC  0100               	movlb	0	; () banked
  6137  0177EE  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6138  0177F0  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6139  0177F2  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6140  0177F4  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6141  0177F6                     l1335:
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;eadog.c: 27:   __nop();
  6145  0177F6  F000               	nop	
  6146  0177F8  0004               	clrwdt		;# 
  6147                           
  6148                           ;eadog.c: 29:  };
  6149  0177FA  0E01               	movlw	1
  6150  0177FC  0100               	movlb	0	; () banked
  6151  0177FE  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6152  017800  0E00               	movlw	0
  6153  017802  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6154  017804  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6155  017806  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;stkvar	_delay @ sp[(0)+-4]
  6159  017808  0EFC               	movlw	-4
  6160  01780A  006F FF8C  F032    	movff	plusw1,btemp
  6161  017810  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6162  017812  5C32               	subwf	btemp^0,w,c
  6163  017814  0EFD               	movlw	-3
  6164  017816  006F FF8C  F032    	movff	plusw1,btemp
  6165  01781C  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6166  01781E  5832               	subwfb	btemp^0,w,c
  6167  017820  0EFE               	movlw	-2
  6168  017822  006F FF8C  F032    	movff	plusw1,btemp
  6169  017828  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6170  01782A  5832               	subwfb	btemp^0,w,c
  6171  01782C  0EFF               	movlw	-1
  6172  01782E  006F FF8C  F032    	movff	plusw1,btemp
  6173  017834  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6174  017836  5832               	subwfb	btemp^0,w,c
  6175  017838  B0D8               	btfsc	status,0,c
  6176  01783A  D7DD               	goto	l1335
  6177                           
  6178                           ; BSR set to: 0
  6179                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6180  01783C  52E5               	movf	postdec1,f,c
  6181  01783E  52E5               	movf	postdec1,f,c
  6182  017840  52E5               	movf	postdec1,f,c
  6183  017842  52E5               	movf	postdec1,f,c
  6184  017844  0012               	return		;funcret
  6185  017846                     __end_of_wdtdelay:
  6186                           	opt callstack 0
  6187                           
  6188 ;; *************** function _eaDogM_WriteString *****************
  6189 ;; Defined at:
  6190 ;;		line 184 in file "eadog.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  strPtr          2  [STACK] PTR unsigned char 
  6193 ;;		 -> D.lcd(216), D(218), V(187), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1  [STACK] void 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6200 ;; Tracked objects:
  6201 ;;		On entry : 3F/0
  6202 ;;		On exit  : 3F/3B
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:   15
  6212 ;; This function calls:
  6213 ;;		_printf
  6214 ;;		_ringBufS_flush
  6215 ;;		_start_lcd
  6216 ;;		_strlen
  6217 ;;		_wait_lcd_set
  6218 ;; This function is called by:
  6219 ;;		_eaDogM_WriteStringAtPos
  6220 ;; This function uses a reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text31
  6224  016ED2                     __ptext31:
  6225                           	opt callstack 0
  6226  016ED2                     _eaDogM_WriteString:
  6227                           	opt callstack 13
  6228                           
  6229                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6230                           
  6231                           ; BSR set to: 0
  6232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6233                           ;incstack = 0
  6234  016ED2  ECA8  F0C2         	call	_wait_lcd_set	;wreg free
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6238  016ED6  0E00               	movlw	0
  6239  016ED8  6EE6               	movwf	postinc1,c
  6240  016EDA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6241  016EE0  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6242  016EE6  EC59  F0B8         	call	_ringBufS_flush	;wreg free
  6243  016EEA  94BC               	bcf	188,2,c	;volatile
  6244                           
  6245                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6246                           ;stkvar	_strPtr @ sp[(0)+-2]
  6247  016EEC  0EFE               	movlw	-2
  6248  016EEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6249  016EF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6250  016EFA  ECBC  F0B7         	call	_strlen	;wreg free
  6251  016EFE  5033               	movf	(btemp+1)^0,w,c
  6252  016F00  E104               	bnz	u12120
  6253  016F02  0E41               	movlw	65
  6254  016F04  5C32               	subwf	btemp^0,w,c
  6255  016F06  A0D8               	btfss	status,0,c
  6256  016F08  D010               	goto	l11045
  6257  016F0A                     u12120:
  6258                           
  6259                           ;stkvar	_strPtr @ sp[(0)+-2]
  6260  016F0A  0EFE               	movlw	-2
  6261  016F0C  006F FF8C  F03C    	movff	plusw1,btemp+10
  6262  016F12  0EFF               	movlw	-1
  6263  016F14  006F FF8C  F03D    	movff	plusw1,btemp+11
  6264  016F1A  0E40               	movlw	64
  6265  016F1C  243C               	addwf	(btemp+10)^0,w,c
  6266  016F1E  6ED9               	movwf	fsr2l,c
  6267  016F20  0E00               	movlw	0
  6268  016F22  203D               	addwfc	(btemp+11)^0,w,c
  6269  016F24  6EDA               	movwf	fsr2h,c
  6270  016F26  0E00               	movlw	0
  6271  016F28  6EDF               	movwf	indf2,c
  6272  016F2A                     l11045:
  6273                           
  6274                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6275  016F2A  013B               	movlb	59	; () banked
  6276  016F2C  9FFC               	bcf	252,7,b	;volatile
  6277                           
  6278                           ; BSR set to: 59
  6279                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6280                           ;stkvar	_strPtr @ sp[(0)+-2]
  6281  016F2E  0EFE               	movlw	-2
  6282  016F30  006F FF8F FFE6     	movff	plusw1,postinc1
  6283  016F36  006F FF8F FFE6     	movff	plusw1,postinc1
  6284  016F3C  ECBC  F0B7         	call	_strlen	;wreg free
  6285  016F40  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6286  016F46  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6287                           
  6288                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6289  016F4C  013B               	movlb	59	; () banked
  6290  016F4E  8FFC               	bsf	252,7,b	;volatile
  6291                           
  6292                           ; BSR set to: 59
  6293                           ;eadog.c: 195:  printf("%s", strPtr);
  6294                           ;stkvar	_strPtr @ sp[(0)+-2]
  6295  016F50  0EFE               	movlw	-2
  6296  016F52  006F FF8F FFE6     	movff	plusw1,postinc1
  6297  016F58  006F FF8F FFE6     	movff	plusw1,postinc1
  6298  016F5E  0EFB               	movlw	low STR_12
  6299  016F60  6EE6               	movwf	postinc1,c
  6300  016F62  0EFF               	movlw	high STR_12
  6301  016F64  6EE6               	movwf	postinc1,c
  6302  016F66  0E04               	movlw	4
  6303  016F68  6EE6               	movwf	postinc1,c
  6304  016F6A  EC96  F0BB         	call	_printf	;wreg free
  6305                           
  6306                           ;eadog.c: 196:  start_lcd();
  6307  016F6E  ECAB  F0C2         	call	_start_lcd	;wreg free
  6308                           
  6309                           ; BSR set to: 59
  6310                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6311  016F72  52E5               	movf	postdec1,f,c
  6312  016F74  52E5               	movf	postdec1,f,c
  6313  016F76  0012               	return		;funcret
  6314  016F78                     __end_of_eaDogM_WriteString:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _wait_lcd_set *****************
  6318 ;; Defined at:
  6319 ;;		line 131 in file "eadog.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1  [STACK] void 
  6326 ;; Registers used:
  6327 ;;		None
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/3D
  6330 ;;		On exit  : 3F/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    6
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_eaDogM_WriteString
  6344 ;;		_send_lcd_cmd_dma
  6345 ;; This function uses a reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text32
  6349  018550                     __ptext32:
  6350                           	opt callstack 0
  6351  018550                     _wait_lcd_set:
  6352                           	opt callstack 21
  6353                           
  6354                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6355                           
  6356                           ; BSR set to: 59
  6357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6358                           ;incstack = 0
  6359  018550  0100               	movlb	0	; () banked
  6360  018552  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6361                           
  6362                           ; BSR set to: 0
  6363                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6364  018554  0012               	return		;funcret
  6365  018556                     __end_of_wait_lcd_set:
  6366                           	opt callstack 0
  6367                           
  6368 ;; *************** function _start_lcd *****************
  6369 ;; Defined at:
  6370 ;;		line 126 in file "eadog.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;		None
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1  [STACK] void 
  6377 ;; Registers used:
  6378 ;;		None
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/3B
  6381 ;;		On exit  : 3F/3B
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6388 ;;Total ram usage:        0 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    6
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_eaDogM_WriteString
  6395 ;;		_send_lcd_cmd_dma
  6396 ;; This function uses a reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text33
  6400  018556                     __ptext33:
  6401                           	opt callstack 0
  6402  018556                     _start_lcd:
  6403                           	opt callstack 21
  6404                           
  6405                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6406                           
  6407                           ; BSR set to: 0
  6408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6409                           ;incstack = 0
  6410  018556  013B               	movlb	59	; () banked
  6411  018558  8DFC               	bsf	252,6,b	;volatile
  6412                           
  6413                           ; BSR set to: 59
  6414                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6415  01855A  0012               	return		;funcret
  6416  01855C                     __end_of_start_lcd:
  6417                           	opt callstack 0
  6418                           
  6419 ;; *************** function _ringBufS_flush *****************
  6420 ;; Defined at:
  6421 ;;		line 76 in file "ringbufs.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6424 ;;		 -> ring_buf1(67), 
  6425 ;;  clearBuffer     1  [STACK] const char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1  [STACK] void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6432 ;; Tracked objects:
  6433 ;;		On entry : 3F/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    7
  6444 ;; This function calls:
  6445 ;;		_memset
  6446 ;; This function is called by:
  6447 ;;		_eaDogM_WriteString
  6448 ;;		_send_lcd_cmd_dma
  6449 ;; This function uses a reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text34
  6453  0170B2                     __ptext34:
  6454                           	opt callstack 0
  6455  0170B2                     _ringBufS_flush:
  6456                           	opt callstack 20
  6457                           
  6458                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6459                           ;stkvar	__this @ sp[(0)+-2]
  6460                           
  6461                           ; BSR set to: 59
  6462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6463                           ;incstack = 0
  6464  0170B2  0EFE               	movlw	-2
  6465  0170B4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6466  0170BA  0EFF               	movlw	-1
  6467  0170BC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6468  0170C2  0E42               	movlw	66
  6469  0170C4  243C               	addwf	(btemp+10)^0,w,c
  6470  0170C6  6ED9               	movwf	fsr2l,c
  6471  0170C8  0E00               	movlw	0
  6472  0170CA  203D               	addwfc	(btemp+11)^0,w,c
  6473  0170CC  6EDA               	movwf	fsr2h,c
  6474  0170CE  0E00               	movlw	0
  6475  0170D0  6EDF               	movwf	indf2,c
  6476                           
  6477                           ;ringbufs.c: 79:  _this->head = 0;
  6478                           ;stkvar	__this @ sp[(0)+-2]
  6479  0170D2  0EFE               	movlw	-2
  6480  0170D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6481  0170DA  0EFF               	movlw	-1
  6482  0170DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6483  0170E2  0E40               	movlw	64
  6484  0170E4  243C               	addwf	(btemp+10)^0,w,c
  6485  0170E6  6ED9               	movwf	fsr2l,c
  6486  0170E8  0E00               	movlw	0
  6487  0170EA  203D               	addwfc	(btemp+11)^0,w,c
  6488  0170EC  6EDA               	movwf	fsr2h,c
  6489  0170EE  0E00               	movlw	0
  6490  0170F0  6EDF               	movwf	indf2,c
  6491                           
  6492                           ;ringbufs.c: 80:  _this->tail = 0;
  6493                           ;stkvar	__this @ sp[(0)+-2]
  6494  0170F2  0EFE               	movlw	-2
  6495  0170F4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6496  0170FA  0EFF               	movlw	-1
  6497  0170FC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6498  017102  0E41               	movlw	65
  6499  017104  243C               	addwf	(btemp+10)^0,w,c
  6500  017106  6ED9               	movwf	fsr2l,c
  6501  017108  0E00               	movlw	0
  6502  01710A  203D               	addwfc	(btemp+11)^0,w,c
  6503  01710C  6EDA               	movwf	fsr2h,c
  6504  01710E  0E00               	movlw	0
  6505  017110  6EDF               	movwf	indf2,c
  6506                           
  6507                           ;ringbufs.c: 81:  if (clearBuffer) {
  6508                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6509  017112  0EFD               	movlw	-3
  6510  017114  50E3               	movf	plusw1,w,c
  6511  017116  B4D8               	btfsc	status,2,c
  6512  017118  D011               	goto	l1475
  6513                           
  6514                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6515  01711A  0E40               	movlw	64
  6516  01711C  6EE6               	movwf	postinc1,c
  6517  01711E  0E00               	movlw	0
  6518  017120  6EE6               	movwf	postinc1,c
  6519  017122  0E00               	movlw	0
  6520  017124  6EE6               	movwf	postinc1,c
  6521  017126  0E00               	movlw	0
  6522  017128  6EE6               	movwf	postinc1,c
  6523                           
  6524                           ;stkvar	__this @ sp[(-4)+-2]
  6525  01712A  0EFA               	movlw	-6
  6526  01712C  006F FF8F FFE6     	movff	plusw1,postinc1
  6527  017132  006F FF8F FFE6     	movff	plusw1,postinc1
  6528  017138  EC9E  F0A3         	call	_memset	;wreg free
  6529  01713C                     l1475:
  6530                           
  6531                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6532  01713C  52E5               	movf	postdec1,f,c
  6533  01713E  52E5               	movf	postdec1,f,c
  6534  017140  52E5               	movf	postdec1,f,c
  6535  017142  0012               	return		;funcret
  6536  017144                     __end_of_ringBufS_flush:
  6537                           	opt callstack 0
  6538                           
  6539 ;; *************** function _memset *****************
  6540 ;; Defined at:
  6541 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  dest            2  [STACK] PTR void 
  6544 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6545 ;;  c               2  [STACK] int 
  6546 ;;  n               2  [STACK] unsigned int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  s               2  [STACK] PTR unsigned char 
  6549 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6550 ;;  k               2  [STACK] unsigned int 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  2  [STACK] PTR void 
  6553 ;; Registers used:
  6554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6564 ;;Total ram usage:        0 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    6
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_ringBufS_init
  6571 ;;		_ringBufS_flush
  6572 ;; This function uses a reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text35
  6576  01473C                     __ptext35:
  6577                           	opt callstack 0
  6578  01473C                     _memset:
  6579                           	opt callstack 0
  6580                           
  6581                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6582  01473C  52E6               	movf	postinc1,f,c
  6583  01473E  52E6               	movf	postinc1,f,c
  6584  014740  52E6               	movf	postinc1,f,c
  6585  014742  52E6               	movf	postinc1,f,c
  6586                           
  6587                           ;stkvar	_dest @ sp[(-4)+-2]
  6588                           
  6589                           ;incstack = 0
  6590  014744  0EFA               	movlw	-6
  6591  014746  006F FF8C  F03C    	movff	plusw1,btemp+10
  6592  01474C  0EFB               	movlw	-5
  6593  01474E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6594                           
  6595                           ;stkvar	_s @ sp[(-4)+0]
  6596  014754  0EFD               	movlw	-3
  6597  014756  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6598  01475C  0EFC               	movlw	-4
  6599  01475E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6600                           
  6601                           ;stkvar	_n @ sp[(-4)+-6]
  6602  014764  0EF6               	movlw	-10
  6603  014766  006F FF8C  F032    	movff	plusw1,btemp
  6604  01476C  0EF7               	movlw	-9
  6605  01476E  50E3               	movf	plusw1,w,c
  6606  014770  1032               	iorwf	btemp^0,w,c
  6607  014772  B4D8               	btfsc	status,2,c
  6608  014774  D154               	goto	u12070
  6609                           
  6610                           ;stkvar	_c @ sp[(-4)+-4]
  6611                           ;stkvar	_s @ sp[(-4)+0]
  6612  014776  0EFC               	movlw	-4
  6613  014778  006F FF8F FFD9     	movff	plusw1,fsr2l
  6614  01477E  0EFD               	movlw	-3
  6615  014780  006F FF8F FFDA     	movff	plusw1,fsr2h
  6616  014786  0EF8               	movlw	-8
  6617  014788  006F FF8F FFDF     	movff	plusw1,indf2
  6618                           
  6619                           ;stkvar	_c @ sp[(-4)+-4]
  6620                           ;stkvar	_n @ sp[(-4)+-6]
  6621                           ;stkvar	_s @ sp[(-4)+0]
  6622  01478E  0EFC               	movlw	-4
  6623  014790  006F FF8C  F03C    	movff	plusw1,btemp+10
  6624  014796  0EFD               	movlw	-3
  6625  014798  006F FF8C  F03D    	movff	plusw1,btemp+11
  6626  01479E  0EF6               	movlw	-10
  6627  0147A0  50E3               	movf	plusw1,w,c
  6628  0147A2  263C               	addwf	(btemp+10)^0,f,c
  6629  0147A4  0EF7               	movlw	-9
  6630  0147A6  50E3               	movf	plusw1,w,c
  6631  0147A8  223D               	addwfc	(btemp+11)^0,f,c
  6632  0147AA  0EFF               	movlw	255
  6633  0147AC  243C               	addwf	(btemp+10)^0,w,c
  6634  0147AE  6ED9               	movwf	fsr2l,c
  6635  0147B0  0EFF               	movlw	255
  6636  0147B2  203D               	addwfc	(btemp+11)^0,w,c
  6637  0147B4  6EDA               	movwf	fsr2h,c
  6638  0147B6  0EF8               	movlw	-8
  6639  0147B8  006F FF8F FFDF     	movff	plusw1,indf2
  6640                           
  6641                           ;stkvar	_n @ sp[(-4)+-6]
  6642  0147BE  0EF7               	movlw	-9
  6643  0147C0  50E3               	movf	plusw1,w,c
  6644  0147C2  E108               	bnz	l10939
  6645  0147C4  0EF6               	movlw	-10
  6646  0147C6  006F FF8C  F032    	movff	plusw1,btemp
  6647  0147CC  0E03               	movlw	3
  6648  0147CE  5E32               	subwf	btemp^0,f,c
  6649  0147D0  A0D8               	btfss	status,0,c
  6650  0147D2  D125               	goto	u12070
  6651  0147D4                     l10939:
  6652                           
  6653                           ;stkvar	_c @ sp[(-4)+-4]
  6654                           ;stkvar	_s @ sp[(-4)+0]
  6655  0147D4  0EFC               	movlw	-4
  6656  0147D6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6657  0147DC  0EFD               	movlw	-3
  6658  0147DE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6659  0147E4  0E01               	movlw	1
  6660  0147E6  243C               	addwf	(btemp+10)^0,w,c
  6661  0147E8  6ED9               	movwf	fsr2l,c
  6662  0147EA  0E00               	movlw	0
  6663  0147EC  203D               	addwfc	(btemp+11)^0,w,c
  6664  0147EE  6EDA               	movwf	fsr2h,c
  6665  0147F0  0EF8               	movlw	-8
  6666  0147F2  006F FF8F FFDF     	movff	plusw1,indf2
  6667                           
  6668                           ;stkvar	_c @ sp[(-4)+-4]
  6669                           ;stkvar	_s @ sp[(-4)+0]
  6670  0147F8  0EFC               	movlw	-4
  6671  0147FA  006F FF8C  F03C    	movff	plusw1,btemp+10
  6672  014800  0EFD               	movlw	-3
  6673  014802  006F FF8C  F03D    	movff	plusw1,btemp+11
  6674  014808  0E02               	movlw	2
  6675  01480A  243C               	addwf	(btemp+10)^0,w,c
  6676  01480C  6ED9               	movwf	fsr2l,c
  6677  01480E  0E00               	movlw	0
  6678  014810  203D               	addwfc	(btemp+11)^0,w,c
  6679  014812  6EDA               	movwf	fsr2h,c
  6680  014814  0EF8               	movlw	-8
  6681  014816  006F FF8F FFDF     	movff	plusw1,indf2
  6682                           
  6683                           ;stkvar	_c @ sp[(-4)+-4]
  6684                           ;stkvar	_n @ sp[(-4)+-6]
  6685                           ;stkvar	_s @ sp[(-4)+0]
  6686  01481C  0EFC               	movlw	-4
  6687  01481E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6688  014824  0EFD               	movlw	-3
  6689  014826  006F FF8C  F03D    	movff	plusw1,btemp+11
  6690  01482C  0EF6               	movlw	-10
  6691  01482E  50E3               	movf	plusw1,w,c
  6692  014830  263C               	addwf	(btemp+10)^0,f,c
  6693  014832  0EF7               	movlw	-9
  6694  014834  50E3               	movf	plusw1,w,c
  6695  014836  223D               	addwfc	(btemp+11)^0,f,c
  6696  014838  0EFE               	movlw	254
  6697  01483A  243C               	addwf	(btemp+10)^0,w,c
  6698  01483C  6ED9               	movwf	fsr2l,c
  6699  01483E  0EFF               	movlw	255
  6700  014840  203D               	addwfc	(btemp+11)^0,w,c
  6701  014842  6EDA               	movwf	fsr2h,c
  6702  014844  0EF8               	movlw	-8
  6703  014846  006F FF8F FFDF     	movff	plusw1,indf2
  6704                           
  6705                           ;stkvar	_c @ sp[(-4)+-4]
  6706                           ;stkvar	_n @ sp[(-4)+-6]
  6707                           ;stkvar	_s @ sp[(-4)+0]
  6708  01484C  0EFC               	movlw	-4
  6709  01484E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6710  014854  0EFD               	movlw	-3
  6711  014856  006F FF8C  F03D    	movff	plusw1,btemp+11
  6712  01485C  0EF6               	movlw	-10
  6713  01485E  50E3               	movf	plusw1,w,c
  6714  014860  263C               	addwf	(btemp+10)^0,f,c
  6715  014862  0EF7               	movlw	-9
  6716  014864  50E3               	movf	plusw1,w,c
  6717  014866  223D               	addwfc	(btemp+11)^0,f,c
  6718  014868  0EFD               	movlw	253
  6719  01486A  243C               	addwf	(btemp+10)^0,w,c
  6720  01486C  6ED9               	movwf	fsr2l,c
  6721  01486E  0EFF               	movlw	255
  6722  014870  203D               	addwfc	(btemp+11)^0,w,c
  6723  014872  6EDA               	movwf	fsr2h,c
  6724  014874  0EF8               	movlw	-8
  6725  014876  006F FF8F FFDF     	movff	plusw1,indf2
  6726                           
  6727                           ;stkvar	_n @ sp[(-4)+-6]
  6728  01487C  0EF7               	movlw	-9
  6729  01487E  50E3               	movf	plusw1,w,c
  6730  014880  E108               	bnz	l10945
  6731  014882  0EF6               	movlw	-10
  6732  014884  006F FF8C  F032    	movff	plusw1,btemp
  6733  01488A  0E07               	movlw	7
  6734  01488C  5E32               	subwf	btemp^0,f,c
  6735  01488E  A0D8               	btfss	status,0,c
  6736  014890  D0C6               	goto	u12070
  6737  014892                     l10945:
  6738                           
  6739                           ;stkvar	_c @ sp[(-4)+-4]
  6740                           ;stkvar	_s @ sp[(-4)+0]
  6741  014892  0EFC               	movlw	-4
  6742  014894  006F FF8C  F03C    	movff	plusw1,btemp+10
  6743  01489A  0EFD               	movlw	-3
  6744  01489C  006F FF8C  F03D    	movff	plusw1,btemp+11
  6745  0148A2  0E03               	movlw	3
  6746  0148A4  243C               	addwf	(btemp+10)^0,w,c
  6747  0148A6  6ED9               	movwf	fsr2l,c
  6748  0148A8  0E00               	movlw	0
  6749  0148AA  203D               	addwfc	(btemp+11)^0,w,c
  6750  0148AC  6EDA               	movwf	fsr2h,c
  6751  0148AE  0EF8               	movlw	-8
  6752  0148B0  006F FF8F FFDF     	movff	plusw1,indf2
  6753                           
  6754                           ;stkvar	_c @ sp[(-4)+-4]
  6755                           ;stkvar	_n @ sp[(-4)+-6]
  6756                           ;stkvar	_s @ sp[(-4)+0]
  6757  0148B6  0EFC               	movlw	-4
  6758  0148B8  006F FF8C  F03C    	movff	plusw1,btemp+10
  6759  0148BE  0EFD               	movlw	-3
  6760  0148C0  006F FF8C  F03D    	movff	plusw1,btemp+11
  6761  0148C6  0EF6               	movlw	-10
  6762  0148C8  50E3               	movf	plusw1,w,c
  6763  0148CA  263C               	addwf	(btemp+10)^0,f,c
  6764  0148CC  0EF7               	movlw	-9
  6765  0148CE  50E3               	movf	plusw1,w,c
  6766  0148D0  223D               	addwfc	(btemp+11)^0,f,c
  6767  0148D2  0EFC               	movlw	252
  6768  0148D4  243C               	addwf	(btemp+10)^0,w,c
  6769  0148D6  6ED9               	movwf	fsr2l,c
  6770  0148D8  0EFF               	movlw	255
  6771  0148DA  203D               	addwfc	(btemp+11)^0,w,c
  6772  0148DC  6EDA               	movwf	fsr2h,c
  6773  0148DE  0EF8               	movlw	-8
  6774  0148E0  006F FF8F FFDF     	movff	plusw1,indf2
  6775                           
  6776                           ;stkvar	_n @ sp[(-4)+-6]
  6777  0148E6  0EF7               	movlw	-9
  6778  0148E8  50E3               	movf	plusw1,w,c
  6779  0148EA  E108               	bnz	l10951
  6780  0148EC  0EF6               	movlw	-10
  6781  0148EE  006F FF8C  F032    	movff	plusw1,btemp
  6782  0148F4  0E09               	movlw	9
  6783  0148F6  5E32               	subwf	btemp^0,f,c
  6784  0148F8  A0D8               	btfss	status,0,c
  6785  0148FA  D091               	goto	u12070
  6786  0148FC                     l10951:
  6787                           
  6788                           ;stkvar	_s @ sp[(-4)+0]
  6789  0148FC  0EFC               	movlw	-4
  6790  0148FE  006F FF8C  F03C    	movff	plusw1,btemp+10
  6791  014904  1E3C               	comf	(btemp+10)^0,f,c
  6792  014906  0EFD               	movlw	-3
  6793  014908  006F FF8C  F03D    	movff	plusw1,btemp+11
  6794  01490E  1E3D               	comf	(btemp+11)^0,f,c
  6795  014910  2A3C               	incf	(btemp+10)^0,f,c
  6796  014912  B4D8               	btfsc	status,2,c
  6797  014914  2A3D               	incf	(btemp+11)^0,f,c
  6798  014916  0E03               	movlw	3
  6799  014918  163C               	andwf	(btemp+10)^0,f,c
  6800  01491A  0E00               	movlw	0
  6801  01491C  163D               	andwf	(btemp+11)^0,f,c
  6802                           
  6803                           ;stkvar	_k @ sp[(-4)+2]
  6804  01491E  0EFE               	movlw	-2
  6805  014920  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6806  014926  0EFF               	movlw	-1
  6807  014928  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6808                           
  6809                           ;stkvar	_k @ sp[(-4)+2]
  6810                           ;stkvar	_s @ sp[(-4)+0]
  6811  01492E  0EFC               	movlw	-4
  6812  014930  50E3               	movf	plusw1,w,c
  6813  014932  6E32               	movwf	btemp^0,c
  6814  014934  0EFE               	movlw	-2
  6815  014936  50E3               	movf	plusw1,w,c
  6816  014938  2632               	addwf	btemp^0,f,c
  6817  01493A  0EFC               	movlw	-4
  6818  01493C  0060  F0CB  FFE3   	movff	btemp,plusw1
  6819  014942  0EFD               	movlw	-3
  6820  014944  50E3               	movf	plusw1,w,c
  6821  014946  6E32               	movwf	btemp^0,c
  6822  014948  0EFF               	movlw	-1
  6823  01494A  50E3               	movf	plusw1,w,c
  6824  01494C  2232               	addwfc	btemp^0,f,c
  6825  01494E  0EFD               	movlw	-3
  6826  014950  0060  F0CB  FFE3   	movff	btemp,plusw1
  6827                           
  6828                           ;stkvar	_k @ sp[(-4)+2]
  6829                           ;stkvar	_n @ sp[(-4)+-6]
  6830  014956  0EF6               	movlw	-10
  6831  014958  50E3               	movf	plusw1,w,c
  6832  01495A  6E32               	movwf	btemp^0,c
  6833  01495C  0EFE               	movlw	-2
  6834  01495E  50E3               	movf	plusw1,w,c
  6835  014960  5E32               	subwf	btemp^0,f,c
  6836  014962  0EF6               	movlw	-10
  6837  014964  0060  F0CB  FFE3   	movff	btemp,plusw1
  6838  01496A  0EF7               	movlw	-9
  6839  01496C  50E3               	movf	plusw1,w,c
  6840  01496E  6E32               	movwf	btemp^0,c
  6841  014970  0EFF               	movlw	-1
  6842  014972  50E3               	movf	plusw1,w,c
  6843  014974  5A32               	subwfb	btemp^0,f,c
  6844  014976  0EF7               	movlw	-9
  6845  014978  0060  F0CB  FFE3   	movff	btemp,plusw1
  6846  01497E  0EFC               	movlw	252
  6847  014980  6E3C               	movwf	(btemp+10)^0,c
  6848  014982  0EFF               	movlw	255
  6849  014984  6E3D               	movwf	(btemp+11)^0,c
  6850                           
  6851                           ;stkvar	_n @ sp[(-4)+-6]
  6852  014986  0EF6               	movlw	-10
  6853  014988  006F FF8C  F032    	movff	plusw1,btemp
  6854  01498E  503C               	movf	(btemp+10)^0,w,c
  6855  014990  1632               	andwf	btemp^0,f,c
  6856  014992  0EF6               	movlw	-10
  6857  014994  0060  F0CB  FFE3   	movff	btemp,plusw1
  6858  01499A  0EF7               	movlw	-9
  6859  01499C  006F FF8C  F032    	movff	plusw1,btemp
  6860  0149A2  503D               	movf	(btemp+11)^0,w,c
  6861  0149A4  1632               	andwf	btemp^0,f,c
  6862  0149A6  0EF7               	movlw	-9
  6863  0149A8  D02E               	goto	L5
  6864  0149AA                     l10959:
  6865                           
  6866                           ;stkvar	_c @ sp[(-4)+-4]
  6867                           ;stkvar	_s @ sp[(-4)+0]
  6868  0149AA  0EFC               	movlw	-4
  6869  0149AC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6870  0149B2  0EFD               	movlw	-3
  6871  0149B4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6872  0149BA  0EF8               	movlw	-8
  6873  0149BC  006F FF8F FFDF     	movff	plusw1,indf2
  6874                           
  6875                           ;stkvar	_n @ sp[(-4)+-6]
  6876  0149C2  0EF6               	movlw	-10
  6877  0149C4  006F FF8C  F032    	movff	plusw1,btemp
  6878  0149CA  0E01               	movlw	1
  6879  0149CC  5E32               	subwf	btemp^0,f,c
  6880  0149CE  0EF6               	movlw	-10
  6881  0149D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  6882  0149D6  0EF7               	movlw	-9
  6883  0149D8  006F FF8C  F032    	movff	plusw1,btemp
  6884  0149DE  0E00               	movlw	0
  6885  0149E0  5A32               	subwfb	btemp^0,f,c
  6886  0149E2  0EF7               	movlw	-9
  6887  0149E4  0060  F0CB  FFE3   	movff	btemp,plusw1
  6888                           
  6889                           ;stkvar	_s @ sp[(-4)+0]
  6890  0149EA  0EFC               	movlw	-4
  6891  0149EC  50E3               	movf	plusw1,w,c
  6892  0149EE  0F01               	addlw	1
  6893  0149F0  6E32               	movwf	btemp^0,c
  6894  0149F2  0EFC               	movlw	-4
  6895  0149F4  0060  F0CB  FFE3   	movff	btemp,plusw1
  6896  0149FA  6A32               	clrf	btemp^0,c
  6897  0149FC  0EFD               	movlw	-3
  6898  0149FE  50E3               	movf	plusw1,w,c
  6899  014A00  2032               	addwfc	btemp^0,w,c
  6900  014A02  6E32               	movwf	btemp^0,c
  6901  014A04  0EFD               	movlw	-3
  6902  014A06                     L5:
  6903  014A06  0060  F0CB  FFE3   	movff	btemp,plusw1
  6904                           
  6905                           ;stkvar	_n @ sp[(-4)+-6]
  6906  014A0C  0EF6               	movlw	-10
  6907  014A0E  006F FF8C  F032    	movff	plusw1,btemp
  6908  014A14  0EF7               	movlw	-9
  6909  014A16  50E3               	movf	plusw1,w,c
  6910  014A18  1032               	iorwf	btemp^0,w,c
  6911  014A1A  A4D8               	btfss	status,2,c
  6912  014A1C  D7C6               	goto	l10959
  6913  014A1E                     u12070:
  6914                           
  6915                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6916  014A1E  0EF6               	movlw	246
  6917  014A20  26E1               	addwf	fsr1l,f,c
  6918  014A22  0EFF               	movlw	255
  6919  014A24  22E2               	addwfc	fsr1h,f,c
  6920  014A26  0012               	return		;funcret
  6921  014A28                     __end_of_memset:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function _printf *****************
  6925 ;; Defined at:
  6926 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  fmt             2  [STACK] PTR const unsigned char 
  6929 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  ap              2  [STACK] PTR void [1]
  6932 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6933 ;;  ret             2    0        int 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  2  [STACK] int 
  6936 ;; Registers used:
  6937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6938 ;; Tracked objects:
  6939 ;;		On entry : 3F/3B
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:   14
  6950 ;; This function calls:
  6951 ;;		_vfprintf
  6952 ;; This function is called by:
  6953 ;;		_eaDogM_WriteString
  6954 ;;		_send_lcd_cmd_dma
  6955 ;; This function uses a reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text36
  6959  01772C                     __ptext36:
  6960                           	opt callstack 0
  6961  01772C                     _printf:
  6962                           	opt callstack 0
  6963                           
  6964                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6965  01772C  52E6               	movf	postinc1,f,c
  6966  01772E  52E6               	movf	postinc1,f,c
  6967                           
  6968                           ;stkvar	?_printf @ sp[(-2)+-3]
  6969                           
  6970                           ;incstack = 0
  6971  017730  0EFB               	movlw	251
  6972  017732  24E1               	addwf	fsr1l,w,c
  6973  017734  6E3C               	movwf	(btemp+10)^0,c
  6974  017736  0EFF               	movlw	255
  6975  017738  20E2               	addwfc	fsr1h,w,c
  6976  01773A  6E3D               	movwf	(btemp+11)^0,c
  6977                           
  6978                           ;stkvar	_ap @ sp[(-2)+0]
  6979  01773C  0EFF               	movlw	-1
  6980  01773E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6981  017744  0EFE               	movlw	-2
  6982  017746  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6983                           
  6984                           ;stkvar	_ap @ sp[(-2)+0]
  6985  01774C  0EFE               	movlw	254
  6986  01774E  24E1               	addwf	fsr1l,w,c
  6987  017750  6E32               	movwf	btemp^0,c
  6988  017752  0EFF               	movlw	255
  6989  017754  20E2               	addwfc	fsr1h,w,c
  6990  017756  6E33               	movwf	(btemp+1)^0,c
  6991  017758  0060  F0CB  FFE6   	movff	btemp,postinc1
  6992  01775E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  6993                           
  6994                           ;stkvar	_fmt @ sp[(-4)+-3]
  6995  017764  0EF9               	movlw	-7
  6996  017766  006F FF8F FFE6     	movff	plusw1,postinc1
  6997  01776C  006F FF8F FFE6     	movff	plusw1,postinc1
  6998  017772  0E00               	movlw	0
  6999  017774  6EE6               	movwf	postinc1,c
  7000  017776  0E00               	movlw	0
  7001  017778  6EE6               	movwf	postinc1,c
  7002  01777A  EC15  F0B7         	call	_vfprintf	;wreg free
  7003                           
  7004                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7005  01777E  52E5               	movf	postdec1,f,c
  7006  017780  52E5               	movf	postdec1,f,c
  7007  017782  52E5               	movf	postdec1,f,c
  7008  017784  50E7               	movf	indf1,w,c
  7009  017786  5EE1               	subwf	fsr1l,f,c
  7010  017788  0E00               	movlw	0
  7011  01778A  5AE2               	subwfb	fsr1h,f,c
  7012  01778C  0012               	return		;funcret
  7013  01778E                     __end_of_printf:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _vfprintf *****************
  7017 ;; Defined at:
  7018 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7021 ;;		 -> f(6), NULL(0), 
  7022 ;;  fmt             2  [STACK] PTR const unsigned char 
  7023 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7024 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7025 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7026 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7027 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7028 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7029 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7030 ;;  ap              2  [STACK] PTR PTR void 
  7031 ;;		 -> ap(2), ap(2), 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  cfmt            2  [STACK] PTR unsigned char 
  7034 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7035 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7036 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7037 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7038 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7039 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
  7040 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  2  [STACK] int 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/5
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7054 ;;Total ram usage:        0 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:   13
  7057 ;; This function calls:
  7058 ;;		_vfpfcnvrt
  7059 ;; This function is called by:
  7060 ;;		_sprintf
  7061 ;;		_printf
  7062 ;; This function uses a reentrant model
  7063 ;;
  7064                           
  7065                           	psect	text37
  7066  016E2A                     __ptext37:
  7067                           	opt callstack 0
  7068  016E2A                     _vfprintf:
  7069                           	opt callstack 0
  7070                           
  7071                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7072  016E2A  52E6               	movf	postinc1,f,c
  7073  016E2C  52E6               	movf	postinc1,f,c
  7074                           
  7075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7076                           ;stkvar	_fmt @ sp[(-2)+-4]
  7077                           
  7078                           ;incstack = 0
  7079  016E2E  0EFA               	movlw	-6
  7080  016E30  006F FF8C  F03C    	movff	plusw1,btemp+10
  7081  016E36  0EFB               	movlw	-5
  7082  016E38  006F FF8C  F03D    	movff	plusw1,btemp+11
  7083                           
  7084                           ;stkvar	_cfmt @ sp[(-2)+0]
  7085  016E3E  0EFF               	movlw	-1
  7086  016E40  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7087  016E46  0EFE               	movlw	-2
  7088  016E48  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7089                           
  7090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7091  016E4E  6A19               	clrf	_nout^0,c
  7092  016E50  6A1A               	clrf	(_nout+1)^0,c
  7093                           
  7094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7095  016E52  D020               	goto	l10973
  7096  016E54                     l10971:
  7097                           
  7098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7099                           ;stkvar	_ap @ sp[(-2)+-6]
  7100  016E54  0EF8               	movlw	-8
  7101  016E56  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  016E5C  006F FF8F FFE6     	movff	plusw1,postinc1
  7103                           
  7104                           ;stkvar	_cfmt @ sp[(-4)+0]
  7105  016E62  0EFC               	movlw	252
  7106  016E64  24E1               	addwf	fsr1l,w,c
  7107  016E66  6E32               	movwf	btemp^0,c
  7108  016E68  0EFF               	movlw	255
  7109  016E6A  20E2               	addwfc	fsr1h,w,c
  7110  016E6C  6E33               	movwf	(btemp+1)^0,c
  7111  016E6E  0060  F0CB  FFE6   	movff	btemp,postinc1
  7112  016E74  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7113                           
  7114                           ;stkvar	_fp @ sp[(-6)+-2]
  7115  016E7A  0EF8               	movlw	-8
  7116  016E7C  006F FF8F FFE6     	movff	plusw1,postinc1
  7117  016E82  006F FF8F FFE6     	movff	plusw1,postinc1
  7118  016E88  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7119  016E8C  5032               	movf	btemp^0,w,c
  7120  016E8E  2619               	addwf	_nout^0,f,c
  7121  016E90  5033               	movf	(btemp+1)^0,w,c
  7122  016E92  221A               	addwfc	(_nout+1)^0,f,c
  7123  016E94                     l10973:
  7124                           
  7125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7126                           ;stkvar	_cfmt @ sp[(-2)+0]
  7127  016E94  50E1               	movf	fsr1l,w,c
  7128  016E96  0FFE               	addlw	-2
  7129  016E98  6ED9               	movwf	fsr2l,c
  7130  016E9A  50E2               	movf	fsr1h,w,c
  7131  016E9C  6EDA               	movwf	fsr2h,c
  7132  016E9E  0EFF               	movlw	255
  7133  016EA0  22DA               	addwfc	fsr2h,f,c
  7134  016EA2  006F FF7B FFF6     	movff	postinc2,tblptrl
  7135  016EA8  006F FF77 FFF7     	movff	postdec2,tblptrh
  7136  016EAE                     	if	0	;tblptru may be non-zero
  7137  016EAE                     	endif
  7138  016EAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7139  016EAE  0E00               	movlw	low (__mediumconst shr (0+16))
  7140  016EB0  6EF8               	movwf	tblptru,c
  7141  016EB2                     	endif
  7142  016EB2  0008               	tblrd		*
  7143  016EB4  50F5               	movf	tablat,w,c
  7144  016EB6  0900               	iorlw	0
  7145  016EB8  A4D8               	btfss	status,2,c
  7146  016EBA  D7CC               	goto	l10971
  7147                           
  7148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7149  016EBC  0060  F064  F032   	movff	_nout,btemp
  7150  016EC2  0060  F068  F033   	movff	_nout+1,btemp+1
  7151                           
  7152                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7153  016EC8  0EF8               	movlw	248
  7154  016ECA  26E1               	addwf	fsr1l,f,c
  7155  016ECC  0EFF               	movlw	255
  7156  016ECE  22E2               	addwfc	fsr1h,f,c
  7157  016ED0  0012               	return		;funcret
  7158  016ED2                     __end_of_vfprintf:
  7159                           	opt callstack 0
  7160                           
  7161 ;; *************** function _vfpfcnvrt *****************
  7162 ;; Defined at:
  7163 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7166 ;;		 -> f(6), NULL(0), 
  7167 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7168 ;;		 -> cfmt(2), 
  7169 ;;  ap              2  [STACK] PTR PTR void 
  7170 ;;		 -> ap(2), ap(2), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  llu             8  [STACK] unsigned long long 
  7173 ;;  ll              8  [STACK] long long 
  7174 ;;  f               4  [STACK] long long 
  7175 ;;  ct              3  [STACK] unsigned char [3]
  7176 ;;  vp              3    0        PTR void 
  7177 ;;  cp              2  [STACK] PTR unsigned char 
  7178 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7179 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7180 ;;		 -> STR_3(5), V(187), 
  7181 ;;  i               2    0        int 
  7182 ;;  done            2    0        int 
  7183 ;;  c               1  [STACK] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  2  [STACK] int 
  7186 ;; Registers used:
  7187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/5
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:   12
  7200 ;; This function calls:
  7201 ;;		_atoi
  7202 ;;		_ctoa
  7203 ;;		_dtoa
  7204 ;;		_efgtoa
  7205 ;;		_fputc
  7206 ;;		_isdigit
  7207 ;;		_isupper
  7208 ;;		_stoa
  7209 ;;		_strncmp
  7210 ;;		_tolower
  7211 ;;		_xtoa
  7212 ;; This function is called by:
  7213 ;;		_vfprintf
  7214 ;; This function uses a reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text38
  7218  011244                     __ptext38:
  7219                           	opt callstack 0
  7220  011244                     _vfpfcnvrt:
  7221                           	opt callstack 0
  7222                           
  7223                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7224  011244  0E20               	movlw	32
  7225  011246  26E1               	addwf	fsr1l,f,c
  7226  011248  0E00               	movlw	0
  7227  01124A  22E2               	addwfc	fsr1h,f,c
  7228                           
  7229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7230                           ;stkvar	_fmt @ sp[(-32)+-4]
  7231                           
  7232                           ;incstack = 0
  7233  01124C  0EDC               	movlw	-36
  7234  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7235  011254  0EDD               	movlw	-35
  7236  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7237  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7238  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7239  011268                     	if	0	;tblptru may be non-zero
  7240  011268                     	endif
  7241  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7242  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7243  01126A  6EF8               	movwf	tblptru,c
  7244  01126C                     	endif
  7245  01126C  0008               	tblrd		*
  7246  01126E  50F5               	movf	tablat,w,c
  7247  011270  0A25               	xorlw	37
  7248  011272  A4D8               	btfss	status,2,c
  7249  011274  EF92  F08E         	goto	l10907
  7250                           
  7251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7252                           ;stkvar	_fmt @ sp[(-32)+-4]
  7253  011278  0EDC               	movlw	-36
  7254  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7255  011280  0EDD               	movlw	-35
  7256  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7257  011288  2ADE               	incf	postinc2,f,c
  7258  01128A  0E00               	movlw	0
  7259  01128C  22DD               	addwfc	postdec2,f,c
  7260                           
  7261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7262  01128E  6A1B               	clrf	_width^0,c
  7263  011290  6A1C               	clrf	(_width+1)^0,c
  7264  011292  6A1F               	clrf	_flags^0,c
  7265  011294  6A20               	clrf	(_flags+1)^0,c
  7266                           
  7267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7268  011296  681D               	setf	_prec^0,c
  7269  011298  681E               	setf	(_prec+1)^0,c
  7270                           
  7271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7272                           ;stkvar	_fmt @ sp[(-32)+-4]
  7273  01129A  0EDC               	movlw	-36
  7274  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7275  0112A2  0EDD               	movlw	-35
  7276  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7277  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7278  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7279  0112B6                     	if	0	;tblptru may be non-zero
  7280  0112B6                     	endif
  7281  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7282  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7283  0112B8  6EF8               	movwf	tblptru,c
  7284  0112BA                     	endif
  7285  0112BA  0008               	tblrd		*
  7286  0112BC  50F5               	movf	tablat,w,c
  7287  0112BE  0A2A               	xorlw	42
  7288  0112C0  A4D8               	btfss	status,2,c
  7289  0112C2  D031               	goto	l10771
  7290                           
  7291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7292                           ;stkvar	_fmt @ sp[(-32)+-4]
  7293  0112C4  0EDC               	movlw	-36
  7294  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7295  0112CC  0EDD               	movlw	-35
  7296  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7297  0112D4  2ADE               	incf	postinc2,f,c
  7298  0112D6  0E00               	movlw	0
  7299  0112D8  22DD               	addwfc	postdec2,f,c
  7300                           
  7301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7302                           ;stkvar	_ap @ sp[(-32)+-6]
  7303  0112DA  0EDA               	movlw	-38
  7304  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7305  0112E2  0EDB               	movlw	-37
  7306  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7307  0112EA  0E02               	movlw	2
  7308  0112EC  5EDE               	subwf	postinc2,f,c
  7309  0112EE  0E00               	movlw	0
  7310  0112F0  5ADD               	subwfb	postdec2,f,c
  7311  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7312  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7313  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7314  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7315  01130A  006F FF78  F01B    	movff	postinc2,_width
  7316  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7317                           
  7318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7319  011316  AE1C               	btfss	(_width+1)^0,7,c
  7320  011318  D066               	goto	u11820
  7321                           
  7322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7323  01131A  801F               	bsf	_flags^0,0,c
  7324                           
  7325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7326  01131C  6C1B               	negf	_width^0,c
  7327  01131E  1E1C               	comf	(_width+1)^0,f,c
  7328  011320  B0D8               	btfsc	status,0,c
  7329  011322  2A1C               	incf	(_width+1)^0,f,c
  7330  011324  D060               	goto	u11820
  7331  011326                     l10771:
  7332                           
  7333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7334                           ;stkvar	_fmt @ sp[(-32)+-4]
  7335  011326  0EDC               	movlw	-36
  7336  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7337  01132E  0EDD               	movlw	-35
  7338  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7339  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7340  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7341  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7342  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7343  01134E  ECB3  F0A7         	call	_atoi	;wreg free
  7344  011352  0060  F0C8  F01B   	movff	btemp,_width
  7345  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7346                           
  7347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7348  01135E  D00B               	goto	l10775
  7349  011360                     l10773:
  7350                           
  7351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7352                           ;stkvar	_fmt @ sp[(-32)+-4]
  7353  011360  0EDC               	movlw	-36
  7354  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7355  011368  0EDD               	movlw	-35
  7356  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7357  011370  2ADE               	incf	postinc2,f,c
  7358  011372  0E00               	movlw	0
  7359  011374  22DD               	addwfc	postdec2,f,c
  7360  011376                     l10775:
  7361  011376  0ED0               	movlw	208
  7362  011378  6E3C               	movwf	(btemp+10)^0,c
  7363  01137A  0EFF               	movlw	255
  7364  01137C  6E3D               	movwf	(btemp+11)^0,c
  7365                           
  7366                           ;stkvar	_fmt @ sp[(-32)+-4]
  7367  01137E  0EDC               	movlw	-36
  7368  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7369  011386  0EDD               	movlw	-35
  7370  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7371  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7372  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7373  01139A                     	if	0	;tblptru may be non-zero
  7374  01139A                     	endif
  7375  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7376  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7377  01139C  6EF8               	movwf	tblptru,c
  7378  01139E                     	endif
  7379  01139E  0008               	tblrd		*
  7380  0113A0  50F5               	movf	tablat,w,c
  7381  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7382  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7383  0113A6  503C               	movf	(btemp+10)^0,w,c
  7384  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7385  0113AA  503D               	movf	(btemp+11)^0,w,c
  7386  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7387  0113AE  503B               	movf	(btemp+9)^0,w,c
  7388  0113B0  E106               	bnz	u11800
  7389  0113B2  0E0A               	movlw	10
  7390  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7391  0113B6  B0D8               	btfsc	status,0,c
  7392  0113B8  D002               	goto	u11800
  7393  0113BA  0E01               	movlw	1
  7394  0113BC  D001               	goto	u11810
  7395  0113BE                     u11800:
  7396  0113BE  0E00               	movlw	0
  7397  0113C0                     u11810:
  7398  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7399  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7400                           
  7401                           ;stkvar	_vfpfcnvrt$4424 @ sp[(-32)+4]
  7402  0113C4  0EE4               	movlw	-28
  7403  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7404  0113CC  0EE5               	movlw	-27
  7405  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7406                           
  7407                           ;stkvar	_vfpfcnvrt$4424 @ sp[(-32)+4]
  7408  0113D4  0EE4               	movlw	-28
  7409  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7410  0113DC  0EE5               	movlw	-27
  7411  0113DE  50E3               	movf	plusw1,w,c
  7412  0113E0  1032               	iorwf	btemp^0,w,c
  7413  0113E2  A4D8               	btfss	status,2,c
  7414  0113E4  D7BD               	goto	l10773
  7415  0113E6                     u11820:
  7416                           
  7417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7418                           ;stkvar	_fmt @ sp[(-32)+-4]
  7419  0113E6  0EDC               	movlw	-36
  7420  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7421  0113EE  0EDD               	movlw	-35
  7422  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7423  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7424  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7425  011402                     	if	0	;tblptru may be non-zero
  7426  011402                     	endif
  7427  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7428  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7429  011404  6EF8               	movwf	tblptru,c
  7430  011406                     	endif
  7431  011406  0008               	tblrd		*
  7432  011408  50F5               	movf	tablat,w,c
  7433  01140A  0A2E               	xorlw	46
  7434  01140C  A4D8               	btfss	status,2,c
  7435  01140E  D0AC               	goto	u11870
  7436                           
  7437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7438  011410  6A1D               	clrf	_prec^0,c
  7439  011412  6A1E               	clrf	(_prec+1)^0,c
  7440                           
  7441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7442                           ;stkvar	_fmt @ sp[(-32)+-4]
  7443  011414  0EDC               	movlw	-36
  7444  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7445  01141C  0EDD               	movlw	-35
  7446  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7447  011424  2ADE               	incf	postinc2,f,c
  7448  011426  0E00               	movlw	0
  7449  011428  22DD               	addwfc	postdec2,f,c
  7450                           
  7451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7452                           ;stkvar	_fmt @ sp[(-32)+-4]
  7453  01142A  0EDC               	movlw	-36
  7454  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7455  011432  0EDD               	movlw	-35
  7456  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7457  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7458  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7459  011446                     	if	0	;tblptru may be non-zero
  7460  011446                     	endif
  7461  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7462  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7463  011448  6EF8               	movwf	tblptru,c
  7464  01144A                     	endif
  7465  01144A  0008               	tblrd		*
  7466  01144C  50F5               	movf	tablat,w,c
  7467  01144E  0A2A               	xorlw	42
  7468  011450  A4D8               	btfss	status,2,c
  7469  011452  D02A               	goto	l10793
  7470                           
  7471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7472                           ;stkvar	_fmt @ sp[(-32)+-4]
  7473  011454  0EDC               	movlw	-36
  7474  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7475  01145C  0EDD               	movlw	-35
  7476  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7477  011464  2ADE               	incf	postinc2,f,c
  7478  011466  0E00               	movlw	0
  7479  011468  22DD               	addwfc	postdec2,f,c
  7480                           
  7481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7482                           ;stkvar	_ap @ sp[(-32)+-6]
  7483  01146A  0EDA               	movlw	-38
  7484  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7485  011472  0EDB               	movlw	-37
  7486  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7487  01147A  0E02               	movlw	2
  7488  01147C  5EDE               	subwf	postinc2,f,c
  7489  01147E  0E00               	movlw	0
  7490  011480  5ADD               	subwfb	postdec2,f,c
  7491  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7492  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7493  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7494  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7495  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7496  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7497                           
  7498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7499  0114A6  D060               	goto	u11870
  7500  0114A8                     l10793:
  7501                           
  7502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7503                           ;stkvar	_fmt @ sp[(-32)+-4]
  7504  0114A8  0EDC               	movlw	-36
  7505  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7506  0114B0  0EDD               	movlw	-35
  7507  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7508  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7509  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7510  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7511  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7512  0114D0  ECB3  F0A7         	call	_atoi	;wreg free
  7513  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7514  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7515                           
  7516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7517  0114E0  D00B               	goto	l10797
  7518  0114E2                     l10795:
  7519                           
  7520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7521                           ;stkvar	_fmt @ sp[(-32)+-4]
  7522  0114E2  0EDC               	movlw	-36
  7523  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7524  0114EA  0EDD               	movlw	-35
  7525  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7526  0114F2  2ADE               	incf	postinc2,f,c
  7527  0114F4  0E00               	movlw	0
  7528  0114F6  22DD               	addwfc	postdec2,f,c
  7529  0114F8                     l10797:
  7530  0114F8  0ED0               	movlw	208
  7531  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7532  0114FC  0EFF               	movlw	255
  7533  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7534                           
  7535                           ;stkvar	_fmt @ sp[(-32)+-4]
  7536  011500  0EDC               	movlw	-36
  7537  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7538  011508  0EDD               	movlw	-35
  7539  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7540  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7541  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7542  01151C                     	if	0	;tblptru may be non-zero
  7543  01151C                     	endif
  7544  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7545  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7546  01151E  6EF8               	movwf	tblptru,c
  7547  011520                     	endif
  7548  011520  0008               	tblrd		*
  7549  011522  50F5               	movf	tablat,w,c
  7550  011524  6E3A               	movwf	(btemp+8)^0,c
  7551  011526  6A3B               	clrf	(btemp+9)^0,c
  7552  011528  503C               	movf	(btemp+10)^0,w,c
  7553  01152A  263A               	addwf	(btemp+8)^0,f,c
  7554  01152C  503D               	movf	(btemp+11)^0,w,c
  7555  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7556  011530  503B               	movf	(btemp+9)^0,w,c
  7557  011532  E106               	bnz	u11850
  7558  011534  0E0A               	movlw	10
  7559  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7560  011538  B0D8               	btfsc	status,0,c
  7561  01153A  D002               	goto	u11850
  7562  01153C  0E01               	movlw	1
  7563  01153E  D001               	goto	u11860
  7564  011540                     u11850:
  7565  011540  0E00               	movlw	0
  7566  011542                     u11860:
  7567  011542  6E3C               	movwf	(btemp+10)^0,c
  7568  011544  6A3D               	clrf	(btemp+11)^0,c
  7569                           
  7570                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+0]
  7571  011546  0EE0               	movlw	-32
  7572  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7573  01154E  0EE1               	movlw	-31
  7574  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7575                           
  7576                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+0]
  7577  011556  0EE0               	movlw	-32
  7578  011558  006F FF8C  F032    	movff	plusw1,btemp
  7579  01155E  0EE1               	movlw	-31
  7580  011560  50E3               	movf	plusw1,w,c
  7581  011562  1032               	iorwf	btemp^0,w,c
  7582  011564  A4D8               	btfss	status,2,c
  7583  011566  D7BD               	goto	l10795
  7584  011568                     u11870:
  7585                           
  7586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7587                           ;stkvar	_fmt @ sp[(-32)+-4]
  7588  011568  0EDC               	movlw	-36
  7589  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7590  011570  0EDD               	movlw	-35
  7591  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7592  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7593  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7594  011584                     	if	0	;tblptru may be non-zero
  7595  011584                     	endif
  7596  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7597  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7598  011586  6EF8               	movwf	tblptru,c
  7599  011588                     	endif
  7600  011588  0008               	tblrd		*
  7601  01158A  50F5               	movf	tablat,w,c
  7602  01158C  6EE6               	movwf	postinc1,c
  7603  01158E  0E00               	movlw	0
  7604  011590  6EE6               	movwf	postinc1,c
  7605  011592  EC71  F0B9         	call	_tolower	;wreg free
  7606                           
  7607                           ;stkvar	_ct @ sp[(-32)+26]
  7608  011596  0EFA               	movlw	-6
  7609  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7610                           
  7611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7612                           ;stkvar	_ct @ sp[(-32)+26]
  7613  01159E  0EFA               	movlw	-6
  7614  0115A0  50E3               	movf	plusw1,w,c
  7615  0115A2  B4D8               	btfsc	status,2,c
  7616  0115A4  D05B               	goto	l10813
  7617                           
  7618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7619                           ;stkvar	_ct @ sp[(-32)+26]
  7620  0115A6  0EFB               	movlw	251
  7621  0115A8  24E1               	addwf	fsr1l,w,c
  7622  0115AA  6ED9               	movwf	fsr2l,c
  7623  0115AC  0EFF               	movlw	255
  7624  0115AE  20E2               	addwfc	fsr1h,w,c
  7625  0115B0  6EDA               	movwf	fsr2h,c
  7626                           
  7627                           ;stkvar	_fmt @ sp[(-32)+-4]
  7628  0115B2  0EDC               	movlw	-36
  7629  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7630  0115BA  0EDD               	movlw	-35
  7631  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7632  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7633  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7634  0115CE  0E01               	movlw	1
  7635  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7636  0115D2  0E00               	movlw	0
  7637  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7638  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7639  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7640  0115E2                     	if	0	;tblptru may be non-zero
  7641  0115E2                     	endif
  7642  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7643  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7644  0115E4  6EF8               	movwf	tblptru,c
  7645  0115E6                     	endif
  7646  0115E6  0008               	tblrd		*
  7647  0115E8  50F5               	movf	tablat,w,c
  7648  0115EA  6EE6               	movwf	postinc1,c
  7649  0115EC  0E00               	movlw	0
  7650  0115EE  6EE6               	movwf	postinc1,c
  7651  0115F0  EC71  F0B9         	call	_tolower	;wreg free
  7652  0115F4  5032               	movf	btemp^0,w,c
  7653  0115F6  6EDF               	movwf	indf2,c
  7654                           
  7655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7656                           ;stkvar	_ct @ sp[(-32)+26]
  7657  0115F8  0EFB               	movlw	251
  7658  0115FA  24E1               	addwf	fsr1l,w,c
  7659  0115FC  6ED9               	movwf	fsr2l,c
  7660  0115FE  0EFF               	movlw	255
  7661  011600  20E2               	addwfc	fsr1h,w,c
  7662  011602  6EDA               	movwf	fsr2h,c
  7663  011604  50DF               	movf	indf2,w,c
  7664  011606  B4D8               	btfsc	status,2,c
  7665  011608  D029               	goto	l10813
  7666                           
  7667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7668                           ;stkvar	_ct @ sp[(-32)+26]
  7669  01160A  0EFC               	movlw	252
  7670  01160C  24E1               	addwf	fsr1l,w,c
  7671  01160E  6ED9               	movwf	fsr2l,c
  7672  011610  0EFF               	movlw	255
  7673  011612  20E2               	addwfc	fsr1h,w,c
  7674  011614  6EDA               	movwf	fsr2h,c
  7675                           
  7676                           ;stkvar	_fmt @ sp[(-32)+-4]
  7677  011616  0EDC               	movlw	-36
  7678  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7679  01161E  0EDD               	movlw	-35
  7680  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7681  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7682  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7683  011632  0E02               	movlw	2
  7684  011634  263C               	addwf	(btemp+10)^0,f,c
  7685  011636  0E00               	movlw	0
  7686  011638  223D               	addwfc	(btemp+11)^0,f,c
  7687  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7688  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7689  011646                     	if	0	;tblptru may be non-zero
  7690  011646                     	endif
  7691  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7692  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7693  011648  6EF8               	movwf	tblptru,c
  7694  01164A                     	endif
  7695  01164A  0008               	tblrd		*
  7696  01164C  50F5               	movf	tablat,w,c
  7697  01164E  6EE6               	movwf	postinc1,c
  7698  011650  0E00               	movlw	0
  7699  011652  6EE6               	movwf	postinc1,c
  7700  011654  EC71  F0B9         	call	_tolower	;wreg free
  7701  011658  5032               	movf	btemp^0,w,c
  7702  01165A  6EDF               	movwf	indf2,c
  7703  01165C                     l10813:
  7704                           
  7705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7706                           ;stkvar	_fmt @ sp[(-32)+-4]
  7707  01165C  0EDC               	movlw	-36
  7708  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7709  011664  0EDD               	movlw	-35
  7710  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7711  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7712  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7713  011678                     	if	0	;tblptru may be non-zero
  7714  011678                     	endif
  7715  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7716  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7717  01167A  6EF8               	movwf	tblptru,c
  7718  01167C                     	endif
  7719  01167C  0008               	tblrd		*
  7720  01167E  50F5               	movf	tablat,w,c
  7721  011680  0A63               	xorlw	99
  7722  011682  A4D8               	btfss	status,2,c
  7723  011684  D036               	goto	l10823
  7724                           
  7725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7726                           ;stkvar	_fmt @ sp[(-32)+-4]
  7727  011686  0EDC               	movlw	-36
  7728  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7729  01168E  0EDD               	movlw	-35
  7730  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7731  011696  2ADE               	incf	postinc2,f,c
  7732  011698  0E00               	movlw	0
  7733  01169A  22DD               	addwfc	postdec2,f,c
  7734                           
  7735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7736                           ;stkvar	_ap @ sp[(-32)+-6]
  7737  01169C  0EDA               	movlw	-38
  7738  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7739  0116A4  0EDB               	movlw	-37
  7740  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7741  0116AC  0E02               	movlw	2
  7742  0116AE  5EDE               	subwf	postinc2,f,c
  7743  0116B0  0E00               	movlw	0
  7744  0116B2  5ADD               	subwfb	postdec2,f,c
  7745  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7746  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7747  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7748  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7749  0116CC  50DF               	movf	indf2,w,c
  7750  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7751                           
  7752                           ;stkvar	_c @ sp[(-32)+31]
  7753  0116D0  0EFF               	movlw	-1
  7754  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7755                           
  7756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7757                           ;stkvar	_c @ sp[(-32)+31]
  7758  0116D8  0EFF               	movlw	-1
  7759  0116DA  50E3               	movf	plusw1,w,c
  7760  0116DC  6EE6               	movwf	postinc1,c
  7761                           
  7762                           ;stkvar	_fp @ sp[(-33)+-2]
  7763  0116DE  0EDD               	movlw	-35
  7764  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7765  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7766  0116EC  ECEB  F0B8         	call	_ctoa	;wreg free
  7767  0116F0  D343               	goto	l2017
  7768  0116F2                     l10823:
  7769                           
  7770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7771                           ;stkvar	_fmt @ sp[(-32)+-4]
  7772  0116F2  0EDC               	movlw	-36
  7773  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7774  0116FA  0EDD               	movlw	-35
  7775  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7776  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7777  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7778  01170E                     	if	0	;tblptru may be non-zero
  7779  01170E                     	endif
  7780  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7781  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7782  011710  6EF8               	movwf	tblptru,c
  7783  011712                     	endif
  7784  011712  0008               	tblrd		*
  7785  011714  50F5               	movf	tablat,w,c
  7786  011716  0A64               	xorlw	100
  7787  011718  B4D8               	btfsc	status,2,c
  7788  01171A  D015               	goto	u11920
  7789                           
  7790                           ;stkvar	_fmt @ sp[(-32)+-4]
  7791  01171C  0EDC               	movlw	-36
  7792  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7793  011724  0EDD               	movlw	-35
  7794  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7795  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7796  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7797  011738                     	if	0	;tblptru may be non-zero
  7798  011738                     	endif
  7799  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7800  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7801  01173A  6EF8               	movwf	tblptru,c
  7802  01173C                     	endif
  7803  01173C  0008               	tblrd		*
  7804  01173E  50F5               	movf	tablat,w,c
  7805  011740  0A69               	xorlw	105
  7806  011742  A4D8               	btfss	status,2,c
  7807  011744  D075               	goto	l10835
  7808  011746                     u11920:
  7809                           
  7810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7811                           ;stkvar	_fmt @ sp[(-32)+-4]
  7812  011746  0EDC               	movlw	-36
  7813  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7814  01174E  0EDD               	movlw	-35
  7815  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7816  011756  2ADE               	incf	postinc2,f,c
  7817  011758  0E00               	movlw	0
  7818  01175A  22DD               	addwfc	postdec2,f,c
  7819                           
  7820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7821                           ;stkvar	_ap @ sp[(-32)+-6]
  7822  01175C  0EDA               	movlw	-38
  7823  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7824  011764  0EDB               	movlw	-37
  7825  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7826  01176C  0E02               	movlw	2
  7827  01176E  5EDE               	subwf	postinc2,f,c
  7828  011770  0E00               	movlw	0
  7829  011772  5ADD               	subwfb	postdec2,f,c
  7830  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  7831  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  7832  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7833  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7834  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  7835  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  7836                           
  7837                           ;stkvar	_ll @ sp[(-32)+14]
  7838  011798  0EEE               	movlw	-18
  7839  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7840  0117A0  0EEF               	movlw	-17
  7841  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7842  0117A8  6A32               	clrf	btemp^0,c
  7843  0117AA  BEE3               	btfsc	plusw1,7,c
  7844  0117AC  6832               	setf	btemp^0,c
  7845  0117AE  0EF0               	movlw	-16
  7846  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7847  0117B6  0EF1               	movlw	-15
  7848  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7849  0117BE  0EF2               	movlw	-14
  7850  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7851  0117C6  0EF3               	movlw	-13
  7852  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7853  0117CE  0EF4               	movlw	-12
  7854  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7855  0117D6  0EF5               	movlw	-11
  7856  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  7857                           
  7858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7859                           ;stkvar	_ll @ sp[(-32)+14]
  7860  0117DE  50E1               	movf	fsr1l,w,c
  7861  0117E0  0FEE               	addlw	-18
  7862  0117E2  6ED9               	movwf	fsr2l,c
  7863  0117E4  50E2               	movf	fsr1h,w,c
  7864  0117E6  6EDA               	movwf	fsr2h,c
  7865  0117E8  0EFF               	movlw	255
  7866  0117EA  22DA               	addwfc	fsr2h,f,c
  7867  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7868  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7869  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7870  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7871  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7872  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7873  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7874  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7875                           
  7876                           ;stkvar	_fp @ sp[(-40)+-2]
  7877  01181C  0ED6               	movlw	-42
  7878  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7879  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7880  01182A  ECC6  F09B         	call	_dtoa	;wreg free
  7881  01182E  D2A4               	goto	l2017
  7882  011830                     l10835:
  7883                           
  7884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7885                           ;stkvar	_ct @ sp[(-32)+26]
  7886  011830  0EFA               	movlw	-6
  7887  011832  006F FF8C  F032    	movff	plusw1,btemp
  7888  011838  0E66               	movlw	102
  7889  01183A  1832               	xorwf	btemp^0,w,c
  7890  01183C  A4D8               	btfss	status,2,c
  7891  01183E  D06E               	goto	l10847
  7892                           
  7893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7894                           ;stkvar	_fmt @ sp[(-32)+-4]
  7895  011840  0EDC               	movlw	-36
  7896  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7897  011848  0EDD               	movlw	-35
  7898  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7899  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7900  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7901  01185C                     	if	0	;tblptru may be non-zero
  7902  01185C                     	endif
  7903  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7904  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7905  01185E  6EF8               	movwf	tblptru,c
  7906  011860                     	endif
  7907                           
  7908                           ;stkvar	_c @ sp[(-32)+31]
  7909  011860  0008               	tblrd		*
  7910  011862  0EFF               	movlw	-1
  7911  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7912                           
  7913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7914                           ;stkvar	_fmt @ sp[(-32)+-4]
  7915  01186A  0EDC               	movlw	-36
  7916  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7917  011872  0EDD               	movlw	-35
  7918  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7919  01187A  2ADE               	incf	postinc2,f,c
  7920  01187C  0E00               	movlw	0
  7921  01187E  22DD               	addwfc	postdec2,f,c
  7922                           
  7923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7924                           ;stkvar	_ap @ sp[(-32)+-6]
  7925  011880  0EDA               	movlw	-38
  7926  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7927  011888  0EDB               	movlw	-37
  7928  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7929  011890  0E04               	movlw	4
  7930  011892  5EDE               	subwf	postinc2,f,c
  7931  011894  0E00               	movlw	0
  7932  011896  5ADD               	subwfb	postdec2,f,c
  7933  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  7934  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  7935  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7936  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7937  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  7938  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  7939  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  7940  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  7941                           
  7942                           ;stkvar	_f @ sp[(-32)+22]
  7943  0118C8  0EF6               	movlw	-10
  7944  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  7945  0118D0  0EF7               	movlw	-9
  7946  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  7947  0118D8  0EF8               	movlw	-8
  7948  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7949  0118E0  0EF9               	movlw	-7
  7950  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7951  0118E8                     l10843:
  7952                           
  7953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7954                           ;stkvar	_c @ sp[(-32)+31]
  7955  0118E8  0EFF               	movlw	-1
  7956  0118EA  50E3               	movf	plusw1,w,c
  7957  0118EC  6EE6               	movwf	postinc1,c
  7958                           
  7959                           ;stkvar	_f @ sp[(-33)+22]
  7960  0118EE  0EF5               	movlw	-11
  7961  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7962  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7963  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7964  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7965                           
  7966                           ;stkvar	_fp @ sp[(-37)+-2]
  7967  011908  0ED9               	movlw	-39
  7968  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7969  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7970  011916  EC00  F080         	call	_efgtoa	;wreg free
  7971  01191A  D22E               	goto	l2017
  7972  01191C                     l10847:
  7973                           
  7974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7975  01191C  0E02               	movlw	2
  7976  01191E  6EE6               	movwf	postinc1,c
  7977  011920  0E00               	movlw	0
  7978  011922  6EE6               	movwf	postinc1,c
  7979  011924  0EF5               	movlw	low STR_42
  7980  011926  6EE6               	movwf	postinc1,c
  7981  011928  0EFF               	movlw	high STR_42
  7982  01192A  6EE6               	movwf	postinc1,c
  7983                           
  7984                           ;stkvar	_ct @ sp[(-36)+26]
  7985  01192C  0EF6               	movlw	246
  7986  01192E  24E1               	addwf	fsr1l,w,c
  7987  011930  6E32               	movwf	btemp^0,c
  7988  011932  0EFF               	movlw	255
  7989  011934  20E2               	addwfc	fsr1h,w,c
  7990  011936  6E33               	movwf	(btemp+1)^0,c
  7991  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  7992  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7993  011944  EC18  F0AC         	call	_strncmp	;wreg free
  7994  011948  5032               	movf	btemp^0,w,c
  7995  01194A  1033               	iorwf	(btemp+1)^0,w,c
  7996  01194C  A4D8               	btfss	status,2,c
  7997  01194E  D096               	goto	l10867
  7998                           
  7999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8000                           ;stkvar	_fmt @ sp[(-32)+-4]
  8001  011950  0EDC               	movlw	-36
  8002  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8003  011958  0EDD               	movlw	-35
  8004  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8005  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8006  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8007  01196C  0E01               	movlw	1
  8008  01196E  263C               	addwf	(btemp+10)^0,f,c
  8009  011970  0E00               	movlw	0
  8010  011972  223D               	addwfc	(btemp+11)^0,f,c
  8011  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8012  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8013  011980                     	if	0	;tblptru may be non-zero
  8014  011980                     	endif
  8015  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8016  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8017  011982  6EF8               	movwf	tblptru,c
  8018  011984                     	endif
  8019                           
  8020                           ;stkvar	_c @ sp[(-32)+31]
  8021  011984  0008               	tblrd		*
  8022  011986  0EFF               	movlw	-1
  8023  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8024  01198E  0EBF               	movlw	191
  8025  011990  6E3C               	movwf	(btemp+10)^0,c
  8026  011992  0EFF               	movlw	255
  8027  011994  6E3D               	movwf	(btemp+11)^0,c
  8028                           
  8029                           ;stkvar	_fmt @ sp[(-32)+-4]
  8030  011996  0EDC               	movlw	-36
  8031  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8032  01199E  0EDD               	movlw	-35
  8033  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8034  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8035  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8036  0119B2                     	if	0	;tblptru may be non-zero
  8037  0119B2                     	endif
  8038  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8039  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8040  0119B4  6EF8               	movwf	tblptru,c
  8041  0119B6                     	endif
  8042  0119B6  0008               	tblrd		*
  8043  0119B8  50F5               	movf	tablat,w,c
  8044  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8045  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8046  0119BE  503C               	movf	(btemp+10)^0,w,c
  8047  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8048  0119C2  503D               	movf	(btemp+11)^0,w,c
  8049  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8050  0119C6  503B               	movf	(btemp+9)^0,w,c
  8051  0119C8  E106               	bnz	u11950
  8052  0119CA  0E1A               	movlw	26
  8053  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8054  0119CE  B0D8               	btfsc	status,0,c
  8055  0119D0  D002               	goto	u11950
  8056  0119D2  0E01               	movlw	1
  8057  0119D4  D001               	goto	u11960
  8058  0119D6                     u11950:
  8059  0119D6  0E00               	movlw	0
  8060  0119D8                     u11960:
  8061  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8062  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8063                           
  8064                           ;stkvar	_vfpfcnvrt$4431 @ sp[(-32)+2]
  8065  0119DC  0EE2               	movlw	-30
  8066  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8067  0119E4  0EE3               	movlw	-29
  8068  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8069                           
  8070                           ;stkvar	_vfpfcnvrt$4431 @ sp[(-32)+2]
  8071  0119EC  0EE2               	movlw	-30
  8072  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8073  0119F4  0EE3               	movlw	-29
  8074  0119F6  50E3               	movf	plusw1,w,c
  8075  0119F8  1032               	iorwf	btemp^0,w,c
  8076                           
  8077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8078                           ;stkvar	_ap @ sp[(-32)+-6]
  8079                           
  8080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8081                           
  8082                           ;stkvar	_f @ sp[(-32)+22]
  8083                           
  8084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8085                           ;stkvar	_ap @ sp[(-32)+-6]
  8086  0119FA  0EDA               	movlw	-38
  8087  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8088  011A02  0EDB               	movlw	-37
  8089  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8090  011A0A  0E04               	movlw	4
  8091  011A0C  5EDE               	subwf	postinc2,f,c
  8092  011A0E  0E00               	movlw	0
  8093  011A10  5ADD               	subwfb	postdec2,f,c
  8094  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8095  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8096  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8097  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8098  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8099  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8100  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8101  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8102                           
  8103                           ;stkvar	_f @ sp[(-32)+22]
  8104  011A42  0EF6               	movlw	-10
  8105  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8106  011A4A  0EF7               	movlw	-9
  8107  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8108  011A52  0EF8               	movlw	-8
  8109  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8110  011A5A  0EF9               	movlw	-7
  8111  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8112                           
  8113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8114                           ;stkvar	_fmt @ sp[(-32)+-4]
  8115  011A62  0EDC               	movlw	-36
  8116  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8117  011A6A  0EDD               	movlw	-35
  8118  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8119  011A72  0E02               	movlw	2
  8120  011A74  26DE               	addwf	postinc2,f,c
  8121  011A76  0E00               	movlw	0
  8122  011A78  22DD               	addwfc	postdec2,f,c
  8123  011A7A  D736               	goto	l10843
  8124  011A7C                     l10867:
  8125                           
  8126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8127                           ;stkvar	_fmt @ sp[(-32)+-4]
  8128  011A7C  0EDC               	movlw	-36
  8129  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8130  011A84  0EDD               	movlw	-35
  8131  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8132  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8133  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8134  011A98                     	if	0	;tblptru may be non-zero
  8135  011A98                     	endif
  8136  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8137  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8138  011A9A  6EF8               	movwf	tblptru,c
  8139  011A9C                     	endif
  8140  011A9C  0008               	tblrd		*
  8141  011A9E  50F5               	movf	tablat,w,c
  8142  011AA0  0A73               	xorlw	115
  8143  011AA2  A4D8               	btfss	status,2,c
  8144  011AA4  D042               	goto	l10877
  8145                           
  8146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8147                           ;stkvar	_fmt @ sp[(-32)+-4]
  8148  011AA6  0EDC               	movlw	-36
  8149  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8150  011AAE  0EDD               	movlw	-35
  8151  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8152  011AB6  2ADE               	incf	postinc2,f,c
  8153  011AB8  0E00               	movlw	0
  8154  011ABA  22DD               	addwfc	postdec2,f,c
  8155                           
  8156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8157                           ;stkvar	_ap @ sp[(-32)+-6]
  8158  011ABC  0EDA               	movlw	-38
  8159  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8160  011AC4  0EDB               	movlw	-37
  8161  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8162  011ACC  0E02               	movlw	2
  8163  011ACE  5EDE               	subwf	postinc2,f,c
  8164  011AD0  0E00               	movlw	0
  8165  011AD2  5ADD               	subwfb	postdec2,f,c
  8166  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8167  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8168  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8169  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8170  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8171  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8172                           
  8173                           ;stkvar	_cp @ sp[(-32)+29]
  8174  011AF8  0EFE               	movlw	-2
  8175  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8176  011B00  0EFD               	movlw	-3
  8177  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8178                           
  8179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8180                           ;stkvar	_cp @ sp[(-32)+29]
  8181  011B08  0EFD               	movlw	-3
  8182  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8183  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8184                           
  8185                           ;stkvar	_fp @ sp[(-34)+-2]
  8186  011B16  0EDC               	movlw	-36
  8187  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8188  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8189  011B24  EC14  F0A5         	call	_stoa	;wreg free
  8190  011B28  D127               	goto	l2017
  8191  011B2A                     l10877:
  8192                           
  8193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8194                           ;stkvar	_fmt @ sp[(-32)+-4]
  8195  011B2A  0EDC               	movlw	-36
  8196  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8197  011B32  0EDD               	movlw	-35
  8198  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8199  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8200  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8201  011B46                     	if	0	;tblptru may be non-zero
  8202  011B46                     	endif
  8203  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8204  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8205  011B48  6EF8               	movwf	tblptru,c
  8206  011B4A                     	endif
  8207  011B4A  0008               	tblrd		*
  8208  011B4C  50F5               	movf	tablat,w,c
  8209  011B4E  0A78               	xorlw	120
  8210  011B50  B4D8               	btfsc	status,2,c
  8211  011B52  D015               	goto	u12000
  8212                           
  8213                           ;stkvar	_fmt @ sp[(-32)+-4]
  8214  011B54  0EDC               	movlw	-36
  8215  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8216  011B5C  0EDD               	movlw	-35
  8217  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8218  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8219  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8220  011B70                     	if	0	;tblptru may be non-zero
  8221  011B70                     	endif
  8222  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8223  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8224  011B72  6EF8               	movwf	tblptru,c
  8225  011B74                     	endif
  8226  011B74  0008               	tblrd		*
  8227  011B76  50F5               	movf	tablat,w,c
  8228  011B78  0A58               	xorlw	88
  8229  011B7A  A4D8               	btfss	status,2,c
  8230  011B7C  D094               	goto	l10891
  8231  011B7E                     u12000:
  8232                           
  8233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8234                           ;stkvar	_fmt @ sp[(-32)+-4]
  8235  011B7E  0EDC               	movlw	-36
  8236  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8237  011B86  0EDD               	movlw	-35
  8238  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8239  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8240  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8241  011B9A                     	if	0	;tblptru may be non-zero
  8242  011B9A                     	endif
  8243  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8244  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8245  011B9C  6EF8               	movwf	tblptru,c
  8246  011B9E                     	endif
  8247                           
  8248                           ;stkvar	_c @ sp[(-32)+31]
  8249  011B9E  0008               	tblrd		*
  8250  011BA0  0EFF               	movlw	-1
  8251  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8252                           
  8253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8254                           ;stkvar	_fmt @ sp[(-32)+-4]
  8255  011BA8  0EDC               	movlw	-36
  8256  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8257  011BB0  0EDD               	movlw	-35
  8258  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8259  011BB8  2ADE               	incf	postinc2,f,c
  8260  011BBA  0E00               	movlw	0
  8261  011BBC  22DD               	addwfc	postdec2,f,c
  8262                           
  8263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8264                           ;stkvar	_ap @ sp[(-32)+-6]
  8265  011BBE  0EDA               	movlw	-38
  8266  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8267  011BC6  0EDB               	movlw	-37
  8268  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8269  011BCE  0E02               	movlw	2
  8270  011BD0  5EDE               	subwf	postinc2,f,c
  8271  011BD2  0E00               	movlw	0
  8272  011BD4  5ADD               	subwfb	postdec2,f,c
  8273  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8274  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8275  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8276  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8277  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8278  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8279  011BFA  503C               	movf	(btemp+10)^0,w,c
  8280  011BFC  6E42               	movwf	(btemp+16)^0,c
  8281  011BFE  503D               	movf	(btemp+11)^0,w,c
  8282  011C00  6E43               	movwf	(btemp+17)^0,c
  8283  011C02  6A44               	clrf	(btemp+18)^0,c
  8284  011C04  6A45               	clrf	(btemp+19)^0,c
  8285  011C06  6A46               	clrf	(btemp+20)^0,c
  8286  011C08  6A47               	clrf	(btemp+21)^0,c
  8287  011C0A  6A48               	clrf	(btemp+22)^0,c
  8288  011C0C  6A49               	clrf	(btemp+23)^0,c
  8289                           
  8290                           ;stkvar	_llu @ sp[(-32)+6]
  8291  011C0E  0EE6               	movlw	-26
  8292  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8293  011C16  0EE7               	movlw	-25
  8294  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8295  011C1E  0EE8               	movlw	-24
  8296  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8297  011C26  0EE9               	movlw	-23
  8298  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8299  011C2E  0EEA               	movlw	-22
  8300  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8301  011C36  0EEB               	movlw	-21
  8302  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8303  011C3E  0EEC               	movlw	-20
  8304  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8305  011C46  0EED               	movlw	-19
  8306  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8307                           
  8308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8309                           ;stkvar	_c @ sp[(-32)+31]
  8310  011C4E  0EFF               	movlw	-1
  8311  011C50  50E3               	movf	plusw1,w,c
  8312  011C52  6EE6               	movwf	postinc1,c
  8313                           
  8314                           ;stkvar	_llu @ sp[(-33)+6]
  8315  011C54  50E1               	movf	fsr1l,w,c
  8316  011C56  0FE5               	addlw	-27
  8317  011C58  6ED9               	movwf	fsr2l,c
  8318  011C5A  50E2               	movf	fsr1h,w,c
  8319  011C5C  6EDA               	movwf	fsr2h,c
  8320  011C5E  0EFF               	movlw	255
  8321  011C60  22DA               	addwfc	fsr2h,f,c
  8322  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8323  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8324  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8325  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8326  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8327  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8328  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8329  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8330                           
  8331                           ;stkvar	_fp @ sp[(-41)+-2]
  8332  011C92  0ED5               	movlw	-43
  8333  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8334  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8335  011CA0  EC0B  F0A0         	call	_xtoa	;wreg free
  8336  011CA4  D069               	goto	l2017
  8337  011CA6                     l10891:
  8338                           
  8339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8340                           ;stkvar	_fmt @ sp[(-32)+-4]
  8341  011CA6  0EDC               	movlw	-36
  8342  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8343  011CAE  0EDD               	movlw	-35
  8344  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8345  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8346  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8347  011CC2                     	if	0	;tblptru may be non-zero
  8348  011CC2                     	endif
  8349  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8350  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8351  011CC4  6EF8               	movwf	tblptru,c
  8352  011CC6                     	endif
  8353  011CC6  0008               	tblrd		*
  8354  011CC8  50F5               	movf	tablat,w,c
  8355  011CCA  0A25               	xorlw	37
  8356  011CCC  A4D8               	btfss	status,2,c
  8357  011CCE  D01A               	goto	l10901
  8358                           
  8359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8360                           ;stkvar	_fmt @ sp[(-32)+-4]
  8361  011CD0  0EDC               	movlw	-36
  8362  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8363  011CD8  0EDD               	movlw	-35
  8364  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8365  011CE0  2ADE               	incf	postinc2,f,c
  8366  011CE2  0E00               	movlw	0
  8367  011CE4  22DD               	addwfc	postdec2,f,c
  8368                           
  8369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8370                           ;stkvar	_fp @ sp[(-32)+-2]
  8371  011CE6  0EDE               	movlw	-34
  8372  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8373  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8374  011CF4  0E25               	movlw	37
  8375  011CF6  6EE6               	movwf	postinc1,c
  8376  011CF8  0E00               	movlw	0
  8377  011CFA  6EE6               	movwf	postinc1,c
  8378  011CFC  ECF3  F0B1         	call	_fputc	;wreg free
  8379  011D00                     l10897:
  8380                           
  8381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8382  011D00  0E01               	movlw	1
  8383  011D02  D00C               	goto	L6
  8384  011D04                     l10901:
  8385                           
  8386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8387                           ;stkvar	_fmt @ sp[(-32)+-4]
  8388  011D04  0EDC               	movlw	-36
  8389  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8390  011D0C  0EDD               	movlw	-35
  8391  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8392  011D14  2ADE               	incf	postinc2,f,c
  8393  011D16  0E00               	movlw	0
  8394  011D18  22DD               	addwfc	postdec2,f,c
  8395                           
  8396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8397  011D1A  0E00               	movlw	0
  8398  011D1C                     L6:
  8399  011D1C  6E32               	movwf	btemp^0,c
  8400  011D1E  0E00               	movlw	0
  8401  011D20  6E33               	movwf	(btemp+1)^0,c
  8402  011D22  D02A               	goto	l2017
  8403  011D24                     l10907:
  8404                           
  8405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8406                           ;stkvar	_fp @ sp[(-32)+-2]
  8407  011D24  0EDE               	movlw	-34
  8408  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8409  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8410                           
  8411                           ;stkvar	_fmt @ sp[(-34)+-4]
  8412  011D32  0EDA               	movlw	-38
  8413  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8414  011D3A  0EDB               	movlw	-37
  8415  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8416  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8417  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8418  011D4E                     	if	0	;tblptru may be non-zero
  8419  011D4E                     	endif
  8420  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8421  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8422  011D50  6EF8               	movwf	tblptru,c
  8423  011D52                     	endif
  8424  011D52  0008               	tblrd		*
  8425  011D54  50F5               	movf	tablat,w,c
  8426  011D56  6EE6               	movwf	postinc1,c
  8427  011D58  0E00               	movlw	0
  8428  011D5A  6EE6               	movwf	postinc1,c
  8429  011D5C  ECF3  F0B1         	call	_fputc	;wreg free
  8430                           
  8431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8432                           ;stkvar	_fmt @ sp[(-32)+-4]
  8433  011D60  0EDC               	movlw	-36
  8434  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8435  011D68  0EDD               	movlw	-35
  8436  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8437  011D70  2ADE               	incf	postinc2,f,c
  8438  011D72  0E00               	movlw	0
  8439  011D74  22DD               	addwfc	postdec2,f,c
  8440  011D76  D7C4               	goto	l10897
  8441  011D78                     l2017:
  8442                           
  8443                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8444  011D78  0EDA               	movlw	218
  8445  011D7A  26E1               	addwf	fsr1l,f,c
  8446  011D7C  0EFF               	movlw	255
  8447  011D7E  22E2               	addwfc	fsr1h,f,c
  8448  011D80  0012               	return		;funcret
  8449  011D82                     __end_of_vfpfcnvrt:
  8450                           	opt callstack 0
  8451                           
  8452 ;; *************** function _xtoa *****************
  8453 ;; Defined at:
  8454 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8457 ;;		 -> f(6), NULL(0), 
  8458 ;;  d               8  [STACK] unsigned long long 
  8459 ;;  x               1  [STACK] unsigned char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  n               8  [STACK] unsigned long long 
  8462 ;;  c               2  [STACK] int 
  8463 ;;  i               2  [STACK] int 
  8464 ;;  w               2  [STACK] int 
  8465 ;;  p               2  [STACK] int 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  2  [STACK] int 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/5
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;Total ram usage:        0 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:   11
  8482 ;; This function calls:
  8483 ;;		_isalpha
  8484 ;;		_isupper
  8485 ;;		_pad
  8486 ;;		_toupper
  8487 ;; This function is called by:
  8488 ;;		_vfpfcnvrt
  8489 ;; This function uses a reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text39
  8493  014016                     __ptext39:
  8494                           	opt callstack 0
  8495  014016                     _xtoa:
  8496                           	opt callstack 0
  8497                           
  8498                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8499  014016  0E14               	movlw	20
  8500  014018  26E1               	addwf	fsr1l,f,c
  8501  01401A  0E00               	movlw	0
  8502  01401C  22E2               	addwfc	fsr1h,f,c
  8503                           
  8504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8505                           
  8506                           ;incstack = 0
  8507  01401E  AE1E               	btfss	(_prec+1)^0,7,c
  8508                           
  8509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8510  014020  921F               	bcf	_flags^0,1,c
  8511                           
  8512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8513  014022  BE1E               	btfsc	(_prec+1)^0,7,c
  8514  014024  D005               	goto	u11480
  8515  014026  501E               	movf	(_prec+1)^0,w,c
  8516  014028  E110               	bnz	l10621
  8517  01402A  041D               	decf	_prec^0,w,c
  8518  01402C  B0D8               	btfsc	status,0,c
  8519  01402E  D00D               	goto	l10621
  8520  014030                     u11480:
  8521  014030  0E01               	movlw	1
  8522  014032  6E3C               	movwf	(btemp+10)^0,c
  8523  014034  0E00               	movlw	0
  8524  014036  6E3D               	movwf	(btemp+11)^0,c
  8525                           
  8526                           ;stkvar	_p @ sp[(-20)+18]
  8527  014038  0EFE               	movlw	-2
  8528  01403A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8529  014040  0EFF               	movlw	-1
  8530  014042  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8531  014048  D008               	goto	l1967
  8532  01404A                     l10621:
  8533                           
  8534                           ;stkvar	_p @ sp[(-20)+18]
  8535  01404A  0EFE               	movlw	-2
  8536  01404C  0060  F077  FFE3   	movff	_prec,plusw1
  8537  014052  0EFF               	movlw	-1
  8538  014054  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8539  01405A                     l1967:
  8540                           
  8541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8542                           ;stkvar	_w @ sp[(-20)+16]
  8543  01405A  0EFC               	movlw	-4
  8544  01405C  0060  F06F  FFE3   	movff	_width,plusw1
  8545  014062  0EFD               	movlw	-3
  8546  014064  0060  F073  FFE3   	movff	_width+1,plusw1
  8547                           
  8548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8549  01406A  A81F               	btfss	_flags^0,4,c
  8550  01406C  D00B               	goto	l10627
  8551                           
  8552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8553                           ;stkvar	_w @ sp[(-20)+16]
  8554  01406E  50E1               	movf	fsr1l,w,c
  8555  014070  0FFC               	addlw	-4
  8556  014072  6ED9               	movwf	fsr2l,c
  8557  014074  50E2               	movf	fsr1h,w,c
  8558  014076  6EDA               	movwf	fsr2h,c
  8559  014078  0EFF               	movlw	255
  8560  01407A  22DA               	addwfc	fsr2h,f,c
  8561  01407C  0EFE               	movlw	254
  8562  01407E  26DE               	addwf	postinc2,f,c
  8563  014080  0EFF               	movlw	255
  8564  014082  22DD               	addwfc	postdec2,f,c
  8565  014084                     l10627:
  8566                           
  8567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8568                           ;stkvar	_d @ sp[(-20)+-10]
  8569  014084  0EE2               	movlw	226
  8570  014086  24E1               	addwf	fsr1l,w,c
  8571  014088  6ED9               	movwf	fsr2l,c
  8572  01408A  0EFF               	movlw	255
  8573  01408C  20E2               	addwfc	fsr1h,w,c
  8574  01408E  6EDA               	movwf	fsr2h,c
  8575                           
  8576                           ;stkvar	_n @ sp[(-20)+4]
  8577  014090  0E08               	movlw	8
  8578  014092  6E32               	movwf	btemp^0,c
  8579  014094  0EF0               	movlw	-16
  8580  014096                     us1150999:
  8581  014096  006F FF7B FFE3     	movff	postinc2,plusw1
  8582  01409C  28E8               	incf	wreg,w,c
  8583  01409E  2E32               	decfsz	btemp^0,f,c
  8584  0140A0  D7FA               	bra	us1150999
  8585                           
  8586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8587  0140A2  0E4F               	movlw	79
  8588  0140A4  6E3C               	movwf	(btemp+10)^0,c
  8589  0140A6  0E00               	movlw	0
  8590  0140A8  6E3D               	movwf	(btemp+11)^0,c
  8591                           
  8592                           ;stkvar	_i @ sp[(-20)+14]
  8593  0140AA  0EFA               	movlw	-6
  8594  0140AC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8595  0140B2  0EFB               	movlw	-5
  8596  0140B4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8597                           
  8598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8599  0140BA  0102               	movlb	2	; () banked
  8600  0140BC  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8601                           
  8602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8603  0140BE  D0EE               	goto	l10665
  8604  0140C0                     l10633:
  8605                           
  8606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8607                           ;stkvar	_i @ sp[(-20)+14]
  8608  0140C0  50E1               	movf	fsr1l,w,c
  8609  0140C2  0FFA               	addlw	-6
  8610  0140C4  6ED9               	movwf	fsr2l,c
  8611  0140C6  50E2               	movf	fsr1h,w,c
  8612  0140C8  6EDA               	movwf	fsr2h,c
  8613  0140CA  0EFF               	movlw	255
  8614  0140CC  22DA               	addwfc	fsr2h,f,c
  8615  0140CE  06DE               	decf	postinc2,f,c
  8616  0140D0  0E00               	movlw	0
  8617  0140D2  5ADD               	subwfb	postdec2,f,c
  8618                           
  8619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8620                           ;stkvar	_n @ sp[(-20)+4]
  8621  0140D4  0EF0               	movlw	-16
  8622  0140D6  006F FF8C  F03C    	movff	plusw1,btemp+10
  8623  0140DC  0EF1               	movlw	-15
  8624  0140DE  006F FF8C  F03D    	movff	plusw1,btemp+11
  8625  0140E4  0E0F               	movlw	15
  8626  0140E6  163C               	andwf	(btemp+10)^0,f,c
  8627  0140E8  0E00               	movlw	0
  8628  0140EA  163D               	andwf	(btemp+11)^0,f,c
  8629                           
  8630                           ;stkvar	_c @ sp[(-20)+12]
  8631  0140EC  0EF8               	movlw	-8
  8632  0140EE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8633  0140F4  0EF9               	movlw	-7
  8634  0140F6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8635                           
  8636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8637                           ;stkvar	_c @ sp[(-20)+12]
  8638  0140FC  0EF9               	movlw	-7
  8639  0140FE  BEE3               	btfsc	plusw1,7,c
  8640  014100  D00F               	goto	l10641
  8641  014102  0EF9               	movlw	-7
  8642  014104  50E3               	movf	plusw1,w,c
  8643  014106  E108               	bnz	u11510
  8644  014108  0EF8               	movlw	-8
  8645  01410A  006F FF8C  F032    	movff	plusw1,btemp
  8646  014110  0E0A               	movlw	10
  8647  014112  5E32               	subwf	btemp^0,f,c
  8648  014114  A0D8               	btfss	status,0,c
  8649  014116  D004               	goto	l10641
  8650  014118                     u11510:
  8651                           
  8652                           ;stkvar	_c @ sp[(-20)+12]
  8653  014118  0EF8               	movlw	-8
  8654  01411A  50E3               	movf	plusw1,w,c
  8655  01411C  0F57               	addlw	87
  8656  01411E  D003               	goto	L7
  8657  014120                     l10641:
  8658                           
  8659                           ;stkvar	_c @ sp[(-20)+12]
  8660  014120  0EF8               	movlw	-8
  8661  014122  50E3               	movf	plusw1,w,c
  8662  014124  0F30               	addlw	48
  8663  014126                     L7:
  8664  014126  6E3C               	movwf	(btemp+10)^0,c
  8665  014128  0EF9               	movlw	-7
  8666  01412A  006F FF8C  F03D    	movff	plusw1,btemp+11
  8667  014130  0E00               	movlw	0
  8668  014132  223D               	addwfc	(btemp+11)^0,f,c
  8669                           
  8670                           ;stkvar	_c @ sp[(-20)+12]
  8671  014134  0EF8               	movlw	-8
  8672  014136  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8673  01413C  0EF9               	movlw	-7
  8674  01413E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8675  014144  0EBF               	movlw	191
  8676  014146  6E3C               	movwf	(btemp+10)^0,c
  8677  014148  0EFF               	movlw	255
  8678  01414A  6E3D               	movwf	(btemp+11)^0,c
  8679                           
  8680                           ;stkvar	_x @ sp[(-20)+-11]
  8681  01414C  0EE1               	movlw	-31
  8682  01414E  50E3               	movf	plusw1,w,c
  8683  014150  6E3A               	movwf	(btemp+8)^0,c
  8684  014152  6A3B               	clrf	(btemp+9)^0,c
  8685  014154  503C               	movf	(btemp+10)^0,w,c
  8686  014156  263A               	addwf	(btemp+8)^0,f,c
  8687  014158  503D               	movf	(btemp+11)^0,w,c
  8688  01415A  223B               	addwfc	(btemp+9)^0,f,c
  8689  01415C  503B               	movf	(btemp+9)^0,w,c
  8690  01415E  E106               	bnz	u11520
  8691  014160  0E1A               	movlw	26
  8692  014162  5C3A               	subwf	(btemp+8)^0,w,c
  8693  014164  B0D8               	btfsc	status,0,c
  8694  014166  D002               	goto	u11520
  8695  014168  0E01               	movlw	1
  8696  01416A  D001               	goto	u11530
  8697  01416C                     u11520:
  8698  01416C  0E00               	movlw	0
  8699  01416E                     u11530:
  8700  01416E  6E3C               	movwf	(btemp+10)^0,c
  8701  014170  6A3D               	clrf	(btemp+11)^0,c
  8702                           
  8703                           ;stkvar	_xtoa$4409 @ sp[(-20)+2]
  8704  014172  0EEE               	movlw	-18
  8705  014174  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8706  01417A  0EEF               	movlw	-17
  8707  01417C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8708                           
  8709                           ;stkvar	_xtoa$4409 @ sp[(-20)+2]
  8710  014182  0EEE               	movlw	-18
  8711  014184  006F FF8C  F032    	movff	plusw1,btemp
  8712  01418A  0EEF               	movlw	-17
  8713  01418C  50E3               	movf	plusw1,w,c
  8714  01418E  1032               	iorwf	btemp^0,w,c
  8715  014190  B4D8               	btfsc	status,2,c
  8716  014192  D041               	goto	l10657
  8717  014194  0E9F               	movlw	159
  8718  014196  6E3C               	movwf	(btemp+10)^0,c
  8719  014198  0EFF               	movlw	255
  8720  01419A  6E3D               	movwf	(btemp+11)^0,c
  8721                           
  8722                           ;stkvar	_c @ sp[(-20)+12]
  8723  01419C  0EF8               	movlw	-8
  8724  01419E  006F FF8C  F03A    	movff	plusw1,btemp+8
  8725  0141A4  0EF9               	movlw	-7
  8726  0141A6  006F FF8C  F03B    	movff	plusw1,btemp+9
  8727  0141AC  0E20               	movlw	32
  8728  0141AE  123A               	iorwf	(btemp+8)^0,f,c
  8729  0141B0  0E00               	movlw	0
  8730  0141B2  123B               	iorwf	(btemp+9)^0,f,c
  8731  0141B4  503C               	movf	(btemp+10)^0,w,c
  8732  0141B6  263A               	addwf	(btemp+8)^0,f,c
  8733  0141B8  503D               	movf	(btemp+11)^0,w,c
  8734  0141BA  223B               	addwfc	(btemp+9)^0,f,c
  8735  0141BC  503B               	movf	(btemp+9)^0,w,c
  8736  0141BE  E106               	bnz	u11550
  8737  0141C0  0E1A               	movlw	26
  8738  0141C2  5C3A               	subwf	(btemp+8)^0,w,c
  8739  0141C4  B0D8               	btfsc	status,0,c
  8740  0141C6  D002               	goto	u11550
  8741  0141C8  0E01               	movlw	1
  8742  0141CA  D001               	goto	u11560
  8743  0141CC                     u11550:
  8744  0141CC  0E00               	movlw	0
  8745  0141CE                     u11560:
  8746  0141CE  6E3C               	movwf	(btemp+10)^0,c
  8747  0141D0  6A3D               	clrf	(btemp+11)^0,c
  8748                           
  8749                           ;stkvar	_xtoa$4410 @ sp[(-20)+0]
  8750  0141D2  0EEC               	movlw	-20
  8751  0141D4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8752  0141DA  0EED               	movlw	-19
  8753  0141DC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8754                           
  8755                           ;stkvar	_xtoa$4410 @ sp[(-20)+0]
  8756  0141E2  0EEC               	movlw	-20
  8757  0141E4  006F FF8C  F032    	movff	plusw1,btemp
  8758  0141EA  0EED               	movlw	-19
  8759  0141EC  50E3               	movf	plusw1,w,c
  8760  0141EE  1032               	iorwf	btemp^0,w,c
  8761  0141F0  B4D8               	btfsc	status,2,c
  8762  0141F2  D011               	goto	l10657
  8763                           
  8764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8765                           ;stkvar	_c @ sp[(-20)+12]
  8766  0141F4  0EF8               	movlw	-8
  8767  0141F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8768  0141FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8769  014202  EC2F  F0B9         	call	_toupper	;wreg free
  8770                           
  8771                           ;stkvar	_c @ sp[(-20)+12]
  8772  014206  0EF8               	movlw	-8
  8773  014208  0060  F0CB  FFE3   	movff	btemp,plusw1
  8774  01420E  0EF9               	movlw	-7
  8775  014210  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8776  014216                     l10657:
  8777                           
  8778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8779                           ;stkvar	_c @ sp[(-20)+12]
  8780                           ;stkvar	_i @ sp[(-20)+14]
  8781  014216  0EFA               	movlw	-6
  8782  014218  006F FF8C  F03C    	movff	plusw1,btemp+10
  8783  01421E  0EFB               	movlw	-5
  8784  014220  006F FF8C  F03D    	movff	plusw1,btemp+11
  8785  014226  0E40               	movlw	low _dbuf
  8786  014228  243C               	addwf	(btemp+10)^0,w,c
  8787  01422A  6ED9               	movwf	fsr2l,c
  8788  01422C  0E02               	movlw	high _dbuf
  8789  01422E  203D               	addwfc	(btemp+11)^0,w,c
  8790  014230  6EDA               	movwf	fsr2h,c
  8791  014232  0EF8               	movlw	-8
  8792  014234  006F FF8F FFDF     	movff	plusw1,indf2
  8793                           
  8794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8795                           ;stkvar	_p @ sp[(-20)+18]
  8796  01423A  50E1               	movf	fsr1l,w,c
  8797  01423C  0FFE               	addlw	-2
  8798  01423E  6ED9               	movwf	fsr2l,c
  8799  014240  50E2               	movf	fsr1h,w,c
  8800  014242  6EDA               	movwf	fsr2h,c
  8801  014244  0EFF               	movlw	255
  8802  014246  22DA               	addwfc	fsr2h,f,c
  8803  014248  06DE               	decf	postinc2,f,c
  8804  01424A  0E00               	movlw	0
  8805  01424C  5ADD               	subwfb	postdec2,f,c
  8806                           
  8807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8808                           ;stkvar	_w @ sp[(-20)+16]
  8809  01424E  50E1               	movf	fsr1l,w,c
  8810  014250  0FFC               	addlw	-4
  8811  014252  6ED9               	movwf	fsr2l,c
  8812  014254  50E2               	movf	fsr1h,w,c
  8813  014256  6EDA               	movwf	fsr2h,c
  8814  014258  0EFF               	movlw	255
  8815  01425A  22DA               	addwfc	fsr2h,f,c
  8816  01425C  06DE               	decf	postinc2,f,c
  8817  01425E  0E00               	movlw	0
  8818  014260  5ADD               	subwfb	postdec2,f,c
  8819                           
  8820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8821  014262  0E04               	movlw	4
  8822  014264  6E3D               	movwf	(btemp+11)^0,c
  8823                           
  8824                           ;stkvar	_n @ sp[(-20)+4]
  8825  014266  50E1               	movf	fsr1l,w,c
  8826  014268  0FF0               	addlw	-16
  8827  01426A  6ED9               	movwf	fsr2l,c
  8828  01426C  50E2               	movf	fsr1h,w,c
  8829  01426E  6EDA               	movwf	fsr2h,c
  8830  014270  0EFF               	movlw	255
  8831  014272  22DA               	addwfc	fsr2h,f,c
  8832  014274  283D               	incf	(btemp+11)^0,w,c
  8833  014276  52DE               	movf	postinc2,f,c
  8834  014278  D00F               	goto	u11580
  8835  01427A                     u11585:
  8836  01427A  52DE               	movf	postinc2,f,c
  8837  01427C  52DE               	movf	postinc2,f,c
  8838  01427E  52DE               	movf	postinc2,f,c
  8839  014280  52DE               	movf	postinc2,f,c
  8840  014282  52DE               	movf	postinc2,f,c
  8841  014284  52DE               	movf	postinc2,f,c
  8842  014286  90D8               	bcf	status,0,c
  8843  014288  32DD               	rrcf	postdec2,f,c
  8844  01428A  32DD               	rrcf	postdec2,f,c
  8845  01428C  32DD               	rrcf	postdec2,f,c
  8846  01428E  32DD               	rrcf	postdec2,f,c
  8847  014290  32DD               	rrcf	postdec2,f,c
  8848  014292  32DD               	rrcf	postdec2,f,c
  8849  014294  32DD               	rrcf	postdec2,f,c
  8850  014296  32DE               	rrcf	postinc2,f,c
  8851  014298                     u11580:
  8852  014298  2EE8               	decfsz	wreg,f,c
  8853  01429A  D7EF               	goto	u11585
  8854  01429C                     l10665:
  8855                           
  8856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8857                           ;stkvar	_i @ sp[(-20)+14]
  8858  01429C  0EFB               	movlw	-5
  8859  01429E  BEE3               	btfsc	plusw1,7,c
  8860  0142A0  D03A               	goto	u11630
  8861  0142A2  0EFB               	movlw	-5
  8862  0142A4  50E3               	movf	plusw1,w,c
  8863  0142A6  E108               	bnz	u11590
  8864  0142A8  0EFA               	movlw	-6
  8865  0142AA  006F FF8C  F032    	movff	plusw1,btemp
  8866  0142B0  0E02               	movlw	2
  8867  0142B2  5E32               	subwf	btemp^0,f,c
  8868  0142B4  A0D8               	btfss	status,0,c
  8869  0142B6  D02F               	goto	u11630
  8870  0142B8                     u11590:
  8871                           
  8872                           ;stkvar	_n @ sp[(-20)+4]
  8873  0142B8  0EF0               	movlw	-16
  8874  0142BA  50E3               	movf	plusw1,w,c
  8875  0142BC  E115               	bnz	u11601
  8876  0142BE  0EF1               	movlw	-15
  8877  0142C0  50E3               	movf	plusw1,w,c
  8878  0142C2  E112               	bnz	u11601
  8879  0142C4  0EF2               	movlw	-14
  8880  0142C6  50E3               	movf	plusw1,w,c
  8881  0142C8  E10F               	bnz	u11601
  8882  0142CA  0EF3               	movlw	-13
  8883  0142CC  50E3               	movf	plusw1,w,c
  8884  0142CE  E10C               	bnz	u11601
  8885  0142D0  0EF4               	movlw	-12
  8886  0142D2  50E3               	movf	plusw1,w,c
  8887  0142D4  E109               	bnz	u11601
  8888  0142D6  0EF5               	movlw	-11
  8889  0142D8  50E3               	movf	plusw1,w,c
  8890  0142DA  E106               	bnz	u11601
  8891  0142DC  0EF6               	movlw	-10
  8892  0142DE  50E3               	movf	plusw1,w,c
  8893  0142E0  E103               	bnz	u11601
  8894  0142E2  0EF7               	movlw	-9
  8895  0142E4  50E3               	movf	plusw1,w,c
  8896  0142E6  A4D8               	btfss	status,2,c
  8897  0142E8                     u11601:
  8898  0142E8  D6EB               	goto	l10633
  8899                           
  8900                           ;stkvar	_p @ sp[(-20)+18]
  8901  0142EA  0EFF               	movlw	-1
  8902  0142EC  BEE3               	btfsc	plusw1,7,c
  8903  0142EE  D007               	goto	u11610
  8904  0142F0  0EFF               	movlw	-1
  8905  0142F2  50E3               	movf	plusw1,w,c
  8906  0142F4  E103               	bnz	u11611
  8907  0142F6  0EFE               	movlw	-2
  8908  0142F8  04E3               	decf	plusw1,w,c
  8909  0142FA  B0D8               	btfsc	status,0,c
  8910  0142FC                     u11611:
  8911  0142FC  D6E1               	goto	l10633
  8912  0142FE                     u11610:
  8913                           
  8914                           ;stkvar	_w @ sp[(-20)+16]
  8915  0142FE  0EFD               	movlw	-3
  8916  014300  BEE3               	btfsc	plusw1,7,c
  8917  014302  D009               	goto	u11630
  8918  014304  0EFD               	movlw	-3
  8919  014306  50E3               	movf	plusw1,w,c
  8920  014308  E104               	bnz	u11620
  8921  01430A  0EFC               	movlw	-4
  8922  01430C  04E3               	decf	plusw1,w,c
  8923  01430E  A0D8               	btfss	status,0,c
  8924  014310  D002               	goto	u11630
  8925  014312                     u11620:
  8926  014312  B21F               	btfsc	_flags^0,1,c
  8927  014314  D6D5               	goto	l10633
  8928  014316                     u11630:
  8929                           
  8930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8931  014316  A81F               	btfss	_flags^0,4,c
  8932  014318  D036               	goto	l10681
  8933                           
  8934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8935                           ;stkvar	_i @ sp[(-20)+14]
  8936  01431A  50E1               	movf	fsr1l,w,c
  8937  01431C  0FFA               	addlw	-6
  8938  01431E  6ED9               	movwf	fsr2l,c
  8939  014320  50E2               	movf	fsr1h,w,c
  8940  014322  6EDA               	movwf	fsr2h,c
  8941  014324  0EFF               	movlw	255
  8942  014326  22DA               	addwfc	fsr2h,f,c
  8943  014328  06DE               	decf	postinc2,f,c
  8944  01432A  0E00               	movlw	0
  8945  01432C  5ADD               	subwfb	postdec2,f,c
  8946                           
  8947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8948                           ;stkvar	_x @ sp[(-20)+-11]
  8949                           ;stkvar	_i @ sp[(-20)+14]
  8950  01432E  0EFA               	movlw	-6
  8951  014330  006F FF8C  F03C    	movff	plusw1,btemp+10
  8952  014336  0EFB               	movlw	-5
  8953  014338  006F FF8C  F03D    	movff	plusw1,btemp+11
  8954  01433E  0E40               	movlw	low _dbuf
  8955  014340  243C               	addwf	(btemp+10)^0,w,c
  8956  014342  6ED9               	movwf	fsr2l,c
  8957  014344  0E02               	movlw	high _dbuf
  8958  014346  203D               	addwfc	(btemp+11)^0,w,c
  8959  014348  6EDA               	movwf	fsr2h,c
  8960  01434A  0EE1               	movlw	-31
  8961  01434C  006F FF8F FFDF     	movff	plusw1,indf2
  8962                           
  8963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8964                           ;stkvar	_i @ sp[(-20)+14]
  8965  014352  50E1               	movf	fsr1l,w,c
  8966  014354  0FFA               	addlw	-6
  8967  014356  6ED9               	movwf	fsr2l,c
  8968  014358  50E2               	movf	fsr1h,w,c
  8969  01435A  6EDA               	movwf	fsr2h,c
  8970  01435C  0EFF               	movlw	255
  8971  01435E  22DA               	addwfc	fsr2h,f,c
  8972  014360  06DE               	decf	postinc2,f,c
  8973  014362  0E00               	movlw	0
  8974  014364  5ADD               	subwfb	postdec2,f,c
  8975                           
  8976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8977                           ;stkvar	_i @ sp[(-20)+14]
  8978  014366  0EFA               	movlw	-6
  8979  014368  006F FF8C  F03C    	movff	plusw1,btemp+10
  8980  01436E  0EFB               	movlw	-5
  8981  014370  006F FF8C  F03D    	movff	plusw1,btemp+11
  8982  014376  0E40               	movlw	low _dbuf
  8983  014378  243C               	addwf	(btemp+10)^0,w,c
  8984  01437A  6ED9               	movwf	fsr2l,c
  8985  01437C  0E02               	movlw	high _dbuf
  8986  01437E  203D               	addwfc	(btemp+11)^0,w,c
  8987  014380  6EDA               	movwf	fsr2h,c
  8988  014382  0E30               	movlw	48
  8989  014384  6EDF               	movwf	indf2,c
  8990  014386                     l10681:
  8991                           
  8992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8993                           ;stkvar	_w @ sp[(-20)+16]
  8994  014386  0EFC               	movlw	-4
  8995  014388  006F FF8F FFE6     	movff	plusw1,postinc1
  8996  01438E  006F FF8F FFE6     	movff	plusw1,postinc1
  8997                           
  8998                           ;stkvar	_i @ sp[(-22)+14]
  8999  014394  0E40               	movlw	low _dbuf
  9000  014396  6E3C               	movwf	(btemp+10)^0,c
  9001  014398  0E02               	movlw	high _dbuf
  9002  01439A  6E3D               	movwf	(btemp+11)^0,c
  9003  01439C  0EF8               	movlw	-8
  9004  01439E  50E3               	movf	plusw1,w,c
  9005  0143A0  263C               	addwf	(btemp+10)^0,f,c
  9006  0143A2  0EF9               	movlw	-7
  9007  0143A4  50E3               	movf	plusw1,w,c
  9008  0143A6  223D               	addwfc	(btemp+11)^0,f,c
  9009  0143A8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9010  0143AE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9011                           
  9012                           ;stkvar	_fp @ sp[(-24)+-2]
  9013  0143B4  0EE6               	movlw	-26
  9014  0143B6  006F FF8F FFE6     	movff	plusw1,postinc1
  9015  0143BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9016  0143C2  EC11  F0B3         	call	_pad	;wreg free
  9017                           
  9018                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9019  0143C6  0EE1               	movlw	225
  9020  0143C8  26E1               	addwf	fsr1l,f,c
  9021  0143CA  0EFF               	movlw	255
  9022  0143CC  22E2               	addwfc	fsr1h,f,c
  9023  0143CE  0012               	return		;funcret
  9024  0143D0                     __end_of_xtoa:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function _toupper *****************
  9028 ;; Defined at:
  9029 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  c               2  [STACK] int 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2  [STACK] int 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/2
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    7
  9050 ;; This function calls:
  9051 ;;		_islower
  9052 ;; This function is called by:
  9053 ;;		_xtoa
  9054 ;; This function uses a reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text40
  9058  01725E                     __ptext40:
  9059                           	opt callstack 0
  9060  01725E                     _toupper:
  9061                           	opt callstack 0
  9062                           
  9063                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9064  01725E  52E6               	movf	postinc1,f,c
  9065  017260  52E6               	movf	postinc1,f,c
  9066                           
  9067                           ;stkvar	_c @ sp[(-2)+-2]
  9068                           
  9069                           ;incstack = 0
  9070  017262  0EFC               	movlw	-4
  9071  017264  50E3               	movf	plusw1,w,c
  9072  017266  0F9F               	addlw	159
  9073  017268  6E3C               	movwf	(btemp+10)^0,c
  9074  01726A  0EFD               	movlw	-3
  9075  01726C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9076  017272  0EFF               	movlw	255
  9077  017274  223D               	addwfc	(btemp+11)^0,f,c
  9078  017276  503D               	movf	(btemp+11)^0,w,c
  9079  017278  E106               	bnz	u9580
  9080  01727A  0E1A               	movlw	26
  9081  01727C  5C3C               	subwf	(btemp+10)^0,w,c
  9082  01727E  B0D8               	btfsc	status,0,c
  9083  017280  D002               	goto	u9580
  9084  017282  0E01               	movlw	1
  9085  017284  D001               	goto	u9590
  9086  017286                     u9580:
  9087  017286  0E00               	movlw	0
  9088  017288                     u9590:
  9089  017288  6E3C               	movwf	(btemp+10)^0,c
  9090  01728A  6A3D               	clrf	(btemp+11)^0,c
  9091                           
  9092                           ;stkvar	_toupper$5070 @ sp[(-2)+0]
  9093  01728C  0EFE               	movlw	-2
  9094  01728E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9095  017294  0EFF               	movlw	-1
  9096  017296  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9097                           
  9098                           ;stkvar	_toupper$5070 @ sp[(-2)+0]
  9099  01729C  0EFE               	movlw	-2
  9100  01729E  006F FF8C  F032    	movff	plusw1,btemp
  9101  0172A4  0EFF               	movlw	-1
  9102  0172A6  50E3               	movf	plusw1,w,c
  9103  0172A8  1032               	iorwf	btemp^0,w,c
  9104  0172AA  B4D8               	btfsc	status,2,c
  9105  0172AC  D00D               	goto	l9583
  9106                           
  9107                           ;stkvar	_c @ sp[(-2)+-2]
  9108  0172AE  0EFC               	movlw	-4
  9109  0172B0  006F FF8C  F032    	movff	plusw1,btemp
  9110  0172B6  0EFD               	movlw	-3
  9111  0172B8  006F FF8C  F033    	movff	plusw1,btemp+1
  9112  0172BE  0E5F               	movlw	95
  9113  0172C0  1632               	andwf	btemp^0,f,c
  9114  0172C2  0E00               	movlw	0
  9115  0172C4  1633               	andwf	(btemp+1)^0,f,c
  9116  0172C6  D008               	goto	l2900
  9117  0172C8                     l9583:
  9118                           
  9119                           ;stkvar	_c @ sp[(-2)+-2]
  9120  0172C8  0EFC               	movlw	-4
  9121  0172CA  006F FF8C  F032    	movff	plusw1,btemp
  9122  0172D0  0EFD               	movlw	-3
  9123  0172D2  006F FF8C  F033    	movff	plusw1,btemp+1
  9124  0172D8                     l2900:
  9125                           
  9126                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9127  0172D8  52E5               	movf	postdec1,f,c
  9128  0172DA  52E5               	movf	postdec1,f,c
  9129  0172DC  52E5               	movf	postdec1,f,c
  9130  0172DE  52E5               	movf	postdec1,f,c
  9131  0172E0  0012               	return		;funcret
  9132  0172E2                     __end_of_toupper:
  9133                           	opt callstack 0
  9134                           
  9135 ;; *************** function _islower *****************
  9136 ;; Defined at:
  9137 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  c               2  [STACK] int 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;		None
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  2  [STACK] int 
  9144 ;; Registers used:
  9145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;Total ram usage:        0 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    6
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_toupper
  9162 ;; This function uses a reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text41
  9166  017D92                     __ptext41:
  9167                           	opt callstack 0
  9168  017D92                     _islower:
  9169                           	opt callstack 16
  9170                           
  9171                           ;stkvar	_c @ sp[(0)+-2]
  9172                           
  9173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9174                           ;incstack = 0
  9175  017D92  0EFE               	movlw	-2
  9176  017D94  50E3               	movf	plusw1,w,c
  9177  017D96  0F9F               	addlw	159
  9178  017D98  6E3C               	movwf	(btemp+10)^0,c
  9179  017D9A  0EFF               	movlw	-1
  9180  017D9C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9181  017DA2  0EFF               	movlw	255
  9182  017DA4  223D               	addwfc	(btemp+11)^0,f,c
  9183  017DA6  503D               	movf	(btemp+11)^0,w,c
  9184  017DA8  E106               	bnz	u9270
  9185  017DAA  0E1A               	movlw	26
  9186  017DAC  5C3C               	subwf	(btemp+10)^0,w,c
  9187  017DAE  B0D8               	btfsc	status,0,c
  9188  017DB0  D002               	goto	u9270
  9189  017DB2  0E01               	movlw	1
  9190  017DB4  D001               	goto	u9280
  9191  017DB6                     u9270:
  9192  017DB6  0E00               	movlw	0
  9193  017DB8                     u9280:
  9194  017DB8  6E32               	movwf	btemp^0,c
  9195  017DBA  6A33               	clrf	(btemp+1)^0,c
  9196                           
  9197                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9198  017DBC  52E5               	movf	postdec1,f,c
  9199  017DBE  52E5               	movf	postdec1,f,c
  9200  017DC0  0012               	return		;funcret
  9201  017DC2                     __end_of_islower:
  9202                           	opt callstack 0
  9203                           
  9204 ;; *************** function _isalpha *****************
  9205 ;; Defined at:
  9206 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  c               2  [STACK] int 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  2  [STACK] int 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9224 ;;Total ram usage:        0 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    6
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_xtoa
  9231 ;; This function uses a reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text42
  9235  017B44                     __ptext42:
  9236                           	opt callstack 0
  9237  017B44                     _isalpha:
  9238                           	opt callstack 17
  9239                           
  9240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9241                           ;incstack = 0
  9242  017B44  0E9F               	movlw	159
  9243  017B46  6E3C               	movwf	(btemp+10)^0,c
  9244  017B48  0EFF               	movlw	255
  9245  017B4A  6E3D               	movwf	(btemp+11)^0,c
  9246                           
  9247                           ;stkvar	_c @ sp[(0)+-2]
  9248  017B4C  0EFE               	movlw	-2
  9249  017B4E  006F FF8C  F03A    	movff	plusw1,btemp+8
  9250  017B54  0EFF               	movlw	-1
  9251  017B56  006F FF8C  F03B    	movff	plusw1,btemp+9
  9252  017B5C  0E20               	movlw	32
  9253  017B5E  123A               	iorwf	(btemp+8)^0,f,c
  9254  017B60  0E00               	movlw	0
  9255  017B62  123B               	iorwf	(btemp+9)^0,f,c
  9256  017B64  503C               	movf	(btemp+10)^0,w,c
  9257  017B66  263A               	addwf	(btemp+8)^0,f,c
  9258  017B68  503D               	movf	(btemp+11)^0,w,c
  9259  017B6A  223B               	addwfc	(btemp+9)^0,f,c
  9260  017B6C  503B               	movf	(btemp+9)^0,w,c
  9261  017B6E  E106               	bnz	u9560
  9262  017B70  0E1A               	movlw	26
  9263  017B72  5C3A               	subwf	(btemp+8)^0,w,c
  9264  017B74  B0D8               	btfsc	status,0,c
  9265  017B76  D002               	goto	u9560
  9266  017B78  0E01               	movlw	1
  9267  017B7A  D001               	goto	u9570
  9268  017B7C                     u9560:
  9269  017B7C  0E00               	movlw	0
  9270  017B7E                     u9570:
  9271  017B7E  6E32               	movwf	btemp^0,c
  9272  017B80  6A33               	clrf	(btemp+1)^0,c
  9273                           
  9274                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9275  017B82  52E5               	movf	postdec1,f,c
  9276  017B84  52E5               	movf	postdec1,f,c
  9277  017B86  0012               	return		;funcret
  9278  017B88                     __end_of_isalpha:
  9279                           	opt callstack 0
  9280                           
  9281 ;; *************** function _strncmp *****************
  9282 ;; Defined at:
  9283 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  _l              2  [STACK] PTR const unsigned char 
  9286 ;;		 -> ct(3), 
  9287 ;;  _r              2  [STACK] PTR const unsigned char 
  9288 ;;		 -> STR_44(3), 
  9289 ;;  n               2  [STACK] unsigned int 
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;  r               2  [STACK] PTR const unsigned char 
  9292 ;;		 -> STR_44(3), 
  9293 ;;  l               2  [STACK] PTR const unsigned char 
  9294 ;;		 -> ct(3), 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  2  [STACK] int 
  9297 ;; Registers used:
  9298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/5
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;Total ram usage:        0 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    6
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_vfpfcnvrt
  9315 ;; This function uses a reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text43
  9319  015830                     __ptext43:
  9320                           	opt callstack 0
  9321  015830                     _strncmp:
  9322                           	opt callstack 0
  9323                           
  9324                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9325  015830  52E6               	movf	postinc1,f,c
  9326  015832  52E6               	movf	postinc1,f,c
  9327  015834  52E6               	movf	postinc1,f,c
  9328  015836  52E6               	movf	postinc1,f,c
  9329                           
  9330                           ;stkvar	__l @ sp[(-4)+-2]
  9331                           
  9332                           ;incstack = 0
  9333  015838  0EFA               	movlw	-6
  9334  01583A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9335  015840  0EFB               	movlw	-5
  9336  015842  006F FF8C  F03D    	movff	plusw1,btemp+11
  9337                           
  9338                           ;stkvar	_l @ sp[(-4)+2]
  9339  015848  0EFF               	movlw	-1
  9340  01584A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9341  015850  0EFE               	movlw	-2
  9342  015852  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9343                           
  9344                           ;stkvar	__r @ sp[(-4)+-4]
  9345  015858  0EF8               	movlw	-8
  9346  01585A  006F FF8C  F03C    	movff	plusw1,btemp+10
  9347  015860  0EF9               	movlw	-7
  9348  015862  006F FF8C  F03D    	movff	plusw1,btemp+11
  9349                           
  9350                           ;stkvar	_r @ sp[(-4)+0]
  9351  015868  0EFD               	movlw	-3
  9352  01586A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9353  015870  0EFC               	movlw	-4
  9354  015872  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9355                           
  9356                           ;stkvar	_n @ sp[(-4)+-6]
  9357  015878  0EF6               	movlw	-10
  9358  01587A  006F FF8C  F032    	movff	plusw1,btemp
  9359  015880  0E01               	movlw	1
  9360  015882  5E32               	subwf	btemp^0,f,c
  9361  015884  0EF6               	movlw	-10
  9362  015886  0060  F0CB  FFE3   	movff	btemp,plusw1
  9363  01588C  0EF7               	movlw	-9
  9364  01588E  006F FF8C  F032    	movff	plusw1,btemp
  9365  015894  0E00               	movlw	0
  9366  015896  5A32               	subwfb	btemp^0,f,c
  9367  015898  0EF7               	movlw	-9
  9368  01589A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9369  0158A0  0EF6               	movlw	-10
  9370  0158A2  28E3               	incf	plusw1,w,c
  9371  0158A4  E13F               	bnz	l10741
  9372  0158A6  0EF7               	movlw	-9
  9373  0158A8  28E3               	incf	plusw1,w,c
  9374  0158AA  A4D8               	btfss	status,2,c
  9375  0158AC  D03B               	goto	l10741
  9376  0158AE  0E00               	movlw	0
  9377  0158B0  6E32               	movwf	btemp^0,c
  9378  0158B2  0E00               	movlw	0
  9379  0158B4  6E33               	movwf	(btemp+1)^0,c
  9380  0158B6  D09B               	goto	l2872
  9381  0158B8                     l10739:
  9382                           
  9383                           ;stkvar	_l @ sp[(-4)+2]
  9384  0158B8  0EFE               	movlw	-2
  9385  0158BA  50E3               	movf	plusw1,w,c
  9386  0158BC  0F01               	addlw	1
  9387  0158BE  6E32               	movwf	btemp^0,c
  9388  0158C0  0EFE               	movlw	-2
  9389  0158C2  0060  F0CB  FFE3   	movff	btemp,plusw1
  9390  0158C8  6A32               	clrf	btemp^0,c
  9391  0158CA  0EFF               	movlw	-1
  9392  0158CC  50E3               	movf	plusw1,w,c
  9393  0158CE  2032               	addwfc	btemp^0,w,c
  9394  0158D0  6E32               	movwf	btemp^0,c
  9395  0158D2  0EFF               	movlw	-1
  9396  0158D4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9397                           
  9398                           ;stkvar	_r @ sp[(-4)+0]
  9399  0158DA  0EFC               	movlw	-4
  9400  0158DC  50E3               	movf	plusw1,w,c
  9401  0158DE  0F01               	addlw	1
  9402  0158E0  6E32               	movwf	btemp^0,c
  9403  0158E2  0EFC               	movlw	-4
  9404  0158E4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9405  0158EA  6A32               	clrf	btemp^0,c
  9406  0158EC  0EFD               	movlw	-3
  9407  0158EE  50E3               	movf	plusw1,w,c
  9408  0158F0  2032               	addwfc	btemp^0,w,c
  9409  0158F2  6E32               	movwf	btemp^0,c
  9410  0158F4  0EFD               	movlw	-3
  9411  0158F6  0060  F0CB  FFE3   	movff	btemp,plusw1
  9412                           
  9413                           ;stkvar	_n @ sp[(-4)+-6]
  9414  0158FC  0EF6               	movlw	-10
  9415  0158FE  006F FF8C  F032    	movff	plusw1,btemp
  9416  015904  0E01               	movlw	1
  9417  015906  5E32               	subwf	btemp^0,f,c
  9418  015908  0EF6               	movlw	-10
  9419  01590A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9420  015910  0EF7               	movlw	-9
  9421  015912  006F FF8C  F032    	movff	plusw1,btemp
  9422  015918  0E00               	movlw	0
  9423  01591A  5A32               	subwfb	btemp^0,f,c
  9424  01591C  0EF7               	movlw	-9
  9425  01591E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9426  015924                     l10741:
  9427                           
  9428                           ;stkvar	_l @ sp[(-4)+2]
  9429  015924  0EFE               	movlw	-2
  9430  015926  006F FF8F FFD9     	movff	plusw1,fsr2l
  9431  01592C  0EFF               	movlw	-1
  9432  01592E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9433  015934  50DF               	movf	indf2,w,c
  9434  015936  B4D8               	btfsc	status,2,c
  9435  015938  D03B               	goto	u11760
  9436                           
  9437                           ;stkvar	_r @ sp[(-4)+0]
  9438  01593A  50E1               	movf	fsr1l,w,c
  9439  01593C  0FFC               	addlw	-4
  9440  01593E  6ED9               	movwf	fsr2l,c
  9441  015940  50E2               	movf	fsr1h,w,c
  9442  015942  6EDA               	movwf	fsr2h,c
  9443  015944  0EFF               	movlw	255
  9444  015946  22DA               	addwfc	fsr2h,f,c
  9445  015948  006F FF7B FFF6     	movff	postinc2,tblptrl
  9446  01594E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9447  015954                     	if	0	;tblptru may be non-zero
  9448  015954                     	endif
  9449  015954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9450  015954  0E00               	movlw	low (__mediumconst shr (0+16))
  9451  015956  6EF8               	movwf	tblptru,c
  9452  015958                     	endif
  9453  015958  0008               	tblrd		*
  9454  01595A  50F5               	movf	tablat,w,c
  9455  01595C  0900               	iorlw	0
  9456  01595E  B4D8               	btfsc	status,2,c
  9457  015960  D027               	goto	u11760
  9458                           
  9459                           ;stkvar	_n @ sp[(-4)+-6]
  9460  015962  0EF6               	movlw	-10
  9461  015964  006F FF8C  F032    	movff	plusw1,btemp
  9462  01596A  0EF7               	movlw	-9
  9463  01596C  50E3               	movf	plusw1,w,c
  9464  01596E  1032               	iorwf	btemp^0,w,c
  9465  015970  B4D8               	btfsc	status,2,c
  9466  015972  D01E               	goto	u11760
  9467                           
  9468                           ;stkvar	_l @ sp[(-4)+2]
  9469  015974  0EFE               	movlw	-2
  9470  015976  006F FF8F FFD9     	movff	plusw1,fsr2l
  9471  01597C  0EFF               	movlw	-1
  9472  01597E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9473  015984  50DF               	movf	indf2,w,c
  9474  015986  6E3D               	movwf	(btemp+11)^0,c
  9475                           
  9476                           ;stkvar	_r @ sp[(-4)+0]
  9477  015988  50E1               	movf	fsr1l,w,c
  9478  01598A  0FFC               	addlw	-4
  9479  01598C  6ED9               	movwf	fsr2l,c
  9480  01598E  50E2               	movf	fsr1h,w,c
  9481  015990  6EDA               	movwf	fsr2h,c
  9482  015992  0EFF               	movlw	255
  9483  015994  22DA               	addwfc	fsr2h,f,c
  9484  015996  006F FF7B FFF6     	movff	postinc2,tblptrl
  9485  01599C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9486  0159A2                     	if	0	;tblptru may be non-zero
  9487  0159A2                     	endif
  9488  0159A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9489  0159A2  0E00               	movlw	low (__mediumconst shr (0+16))
  9490  0159A4  6EF8               	movwf	tblptru,c
  9491  0159A6                     	endif
  9492  0159A6  0008               	tblrd		*
  9493  0159A8  50F5               	movf	tablat,w,c
  9494  0159AA  183D               	xorwf	(btemp+11)^0,w,c
  9495  0159AC  B4D8               	btfsc	status,2,c
  9496  0159AE  D784               	goto	l10739
  9497  0159B0                     u11760:
  9498                           
  9499                           ;stkvar	_l @ sp[(-4)+2]
  9500  0159B0  0EFE               	movlw	-2
  9501  0159B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9502  0159B8  0EFF               	movlw	-1
  9503  0159BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9504  0159C0  50DF               	movf	indf2,w,c
  9505  0159C2  6E32               	movwf	btemp^0,c
  9506  0159C4  6A33               	clrf	(btemp+1)^0,c
  9507                           
  9508                           ;stkvar	_r @ sp[(-4)+0]
  9509  0159C6  50E1               	movf	fsr1l,w,c
  9510  0159C8  0FFC               	addlw	-4
  9511  0159CA  6ED9               	movwf	fsr2l,c
  9512  0159CC  50E2               	movf	fsr1h,w,c
  9513  0159CE  6EDA               	movwf	fsr2h,c
  9514  0159D0  0EFF               	movlw	255
  9515  0159D2  22DA               	addwfc	fsr2h,f,c
  9516  0159D4  006F FF7B FFF6     	movff	postinc2,tblptrl
  9517  0159DA  006F FF77 FFF7     	movff	postdec2,tblptrh
  9518  0159E0                     	if	0	;tblptru may be non-zero
  9519  0159E0                     	endif
  9520  0159E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9521  0159E0  0E00               	movlw	low (__mediumconst shr (0+16))
  9522  0159E2  6EF8               	movwf	tblptru,c
  9523  0159E4                     	endif
  9524  0159E4  0008               	tblrd		*
  9525  0159E6  50F5               	movf	tablat,w,c
  9526  0159E8  5E32               	subwf	btemp^0,f,c
  9527  0159EA  0E00               	movlw	0
  9528  0159EC  5A33               	subwfb	(btemp+1)^0,f,c
  9529  0159EE                     l2872:
  9530                           
  9531                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9532  0159EE  0EF6               	movlw	246
  9533  0159F0  26E1               	addwf	fsr1l,f,c
  9534  0159F2  0EFF               	movlw	255
  9535  0159F4  22E2               	addwfc	fsr1h,f,c
  9536  0159F6  0012               	return		;funcret
  9537  0159F8                     __end_of_strncmp:
  9538                           	opt callstack 0
  9539                           
  9540 ;; *************** function _stoa *****************
  9541 ;; Defined at:
  9542 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9545 ;;		 -> f(6), NULL(0), 
  9546 ;;  s               2  [STACK] PTR unsigned char 
  9547 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9548 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9549 ;;		 -> STR_3(5), V(187), 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  nuls            7  [STACK] unsigned char [7]
  9552 ;;  l               2  [STACK] int 
  9553 ;;  p               2  [STACK] int 
  9554 ;;  cp              2  [STACK] PTR unsigned char 
  9555 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9556 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9557 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9558 ;;  w               2  [STACK] int 
  9559 ;;  i               2  [STACK] int 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  2  [STACK] int 
  9562 ;; Registers used:
  9563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/5
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9573 ;;Total ram usage:        0 bytes
  9574 ;; Hardware stack levels used:    1
  9575 ;; Hardware stack levels required when called:    9
  9576 ;; This function calls:
  9577 ;;		_fputc
  9578 ;;		_strlen
  9579 ;; This function is called by:
  9580 ;;		_vfpfcnvrt
  9581 ;; This function uses a reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text44
  9585  014A28                     __ptext44:
  9586                           	opt callstack 0
  9587  014A28                     _stoa:
  9588                           	opt callstack 0
  9589                           
  9590                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9591  014A28  0E11               	movlw	17
  9592  014A2A  26E1               	addwf	fsr1l,f,c
  9593  014A2C  0E00               	movlw	0
  9594  014A2E  22E2               	addwfc	fsr1h,f,c
  9595                           
  9596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9597                           
  9598                           ;incstack = 0
  9599  014A30  EE20  F0EF         	lfsr	2,stoa@F1166
  9600                           
  9601                           ;stkvar	_nuls @ sp[(-17)+0]
  9602  014A34  0E07               	movlw	7
  9603  014A36  6E32               	movwf	btemp^0,c
  9604  014A38  0EEF               	movlw	-17
  9605  014A3A                     us1137999:
  9606  014A3A  006F FF7B FFE3     	movff	postinc2,plusw1
  9607  014A40  28E8               	incf	wreg,w,c
  9608  014A42  2E32               	decfsz	btemp^0,f,c
  9609  014A44  D7FA               	bra	us1137999
  9610                           
  9611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9612                           ;stkvar	_s @ sp[(-17)+-4]
  9613  014A46  0EEB               	movlw	-21
  9614  014A48  006F FF8C  F03C    	movff	plusw1,btemp+10
  9615  014A4E  0EEC               	movlw	-20
  9616  014A50  006F FF8C  F03D    	movff	plusw1,btemp+11
  9617                           
  9618                           ;stkvar	_cp @ sp[(-17)+11]
  9619  014A56  0EFB               	movlw	-5
  9620  014A58  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9621  014A5E  0EFA               	movlw	-6
  9622  014A60  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9623                           
  9624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9625                           ;stkvar	_cp @ sp[(-17)+11]
  9626  014A66  0EFA               	movlw	-6
  9627  014A68  006F FF8C  F032    	movff	plusw1,btemp
  9628  014A6E  0EFB               	movlw	-5
  9629  014A70  50E3               	movf	plusw1,w,c
  9630  014A72  1032               	iorwf	btemp^0,w,c
  9631  014A74  A4D8               	btfss	status,2,c
  9632  014A76  D00E               	goto	l10569
  9633                           
  9634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9635                           ;stkvar	_nuls @ sp[(-17)+0]
  9636  014A78  0EEF               	movlw	239
  9637  014A7A  24E1               	addwf	fsr1l,w,c
  9638  014A7C  6E3C               	movwf	(btemp+10)^0,c
  9639  014A7E  0EFF               	movlw	255
  9640  014A80  20E2               	addwfc	fsr1h,w,c
  9641  014A82  6E3D               	movwf	(btemp+11)^0,c
  9642                           
  9643                           ;stkvar	_cp @ sp[(-17)+11]
  9644  014A84  0EFB               	movlw	-5
  9645  014A86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9646  014A8C  0EFA               	movlw	-6
  9647  014A8E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9648  014A94                     l10569:
  9649                           
  9650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9651                           ;stkvar	_cp @ sp[(-17)+11]
  9652  014A94  0EFA               	movlw	-6
  9653  014A96  006F FF8F FFE6     	movff	plusw1,postinc1
  9654  014A9C  006F FF8F FFE6     	movff	plusw1,postinc1
  9655  014AA2  ECBC  F0B7         	call	_strlen	;wreg free
  9656                           
  9657                           ;stkvar	_l @ sp[(-17)+7]
  9658  014AA6  0EF6               	movlw	-10
  9659  014AA8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9660  014AAE  0EF7               	movlw	-9
  9661  014AB0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9662                           
  9663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9664                           ;stkvar	_p @ sp[(-17)+9]
  9665  014AB6  0EF8               	movlw	-8
  9666  014AB8  0060  F077  FFE3   	movff	_prec,plusw1
  9667  014ABE  0EF9               	movlw	-7
  9668  014AC0  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9669                           
  9670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9671                           ;stkvar	_p @ sp[(-17)+9]
  9672  014AC6  0EF9               	movlw	-7
  9673  014AC8  BEE3               	btfsc	plusw1,7,c
  9674  014ACA  D023               	goto	l1946
  9675                           
  9676                           ;stkvar	_l @ sp[(-17)+7]
  9677                           ;stkvar	_p @ sp[(-17)+9]
  9678  014ACC  50E1               	movf	fsr1l,w,c
  9679  014ACE  0FF8               	addlw	-8
  9680  014AD0  6ED9               	movwf	fsr2l,c
  9681  014AD2  50E2               	movf	fsr1h,w,c
  9682  014AD4  6EDA               	movwf	fsr2h,c
  9683  014AD6  0EFF               	movlw	255
  9684  014AD8  22DA               	addwfc	fsr2h,f,c
  9685  014ADA  0EF6               	movlw	-10
  9686  014ADC  50E3               	movf	plusw1,w,c
  9687  014ADE  5CDE               	subwf	postinc2,w,c
  9688  014AE0  50DE               	movf	postinc2,w,c
  9689  014AE2  0A80               	xorlw	128
  9690  014AE4  6E32               	movwf	btemp^0,c
  9691  014AE6  0EF7               	movlw	-9
  9692  014AE8  50E3               	movf	plusw1,w,c
  9693  014AEA  0A80               	xorlw	128
  9694  014AEC  5832               	subwfb	btemp^0,w,c
  9695  014AEE  B0D8               	btfsc	status,0,c
  9696  014AF0  D010               	goto	l1946
  9697                           
  9698                           ;stkvar	_p @ sp[(-17)+9]
  9699                           ;stkvar	_l @ sp[(-17)+7]
  9700  014AF2  0EF8               	movlw	-8
  9701  014AF4  006F FF8C  F032    	movff	plusw1,btemp
  9702  014AFA  0EF6               	movlw	-10
  9703  014AFC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9704  014B02  0EF9               	movlw	-7
  9705  014B04  006F FF8C  F032    	movff	plusw1,btemp
  9706  014B0A  0EF7               	movlw	-9
  9707  014B0C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9708  014B12                     l1946:
  9709                           
  9710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9711                           ;stkvar	_l @ sp[(-17)+7]
  9712                           ;stkvar	_p @ sp[(-17)+9]
  9713  014B12  0EF6               	movlw	-10
  9714  014B14  006F FF8C  F032    	movff	plusw1,btemp
  9715  014B1A  0EF8               	movlw	-8
  9716  014B1C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9717  014B22  0EF7               	movlw	-9
  9718  014B24  006F FF8C  F032    	movff	plusw1,btemp
  9719  014B2A  0EF9               	movlw	-7
  9720  014B2C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9721                           
  9722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9723                           ;stkvar	_w @ sp[(-17)+13]
  9724  014B32  0EFC               	movlw	-4
  9725  014B34  0060  F06F  FFE3   	movff	_width,plusw1
  9726  014B3A  0EFD               	movlw	-3
  9727  014B3C  0060  F073  FFE3   	movff	_width+1,plusw1
  9728                           
  9729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9730  014B42  A01F               	btfss	_flags^0,0,c
  9731  014B44  D01F               	goto	l10589
  9732  014B46  D031               	goto	u11420
  9733  014B48                     l10585:
  9734                           
  9735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9736                           ;stkvar	_fp @ sp[(-17)+-2]
  9737  014B48  0EED               	movlw	-19
  9738  014B4A  006F FF8F FFE6     	movff	plusw1,postinc1
  9739  014B50  006F FF8F FFE6     	movff	plusw1,postinc1
  9740  014B56  0E20               	movlw	32
  9741  014B58  6EE6               	movwf	postinc1,c
  9742  014B5A  0E00               	movlw	0
  9743  014B5C  6EE6               	movwf	postinc1,c
  9744  014B5E  ECF3  F0B1         	call	_fputc	;wreg free
  9745                           
  9746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9747                           ;stkvar	_l @ sp[(-17)+7]
  9748  014B62  0EF6               	movlw	-10
  9749  014B64  50E3               	movf	plusw1,w,c
  9750  014B66  0F01               	addlw	1
  9751  014B68  6E32               	movwf	btemp^0,c
  9752  014B6A  0EF6               	movlw	-10
  9753  014B6C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9754  014B72  6A32               	clrf	btemp^0,c
  9755  014B74  0EF7               	movlw	-9
  9756  014B76  50E3               	movf	plusw1,w,c
  9757  014B78  2032               	addwfc	btemp^0,w,c
  9758  014B7A  6E32               	movwf	btemp^0,c
  9759  014B7C  0EF7               	movlw	-9
  9760  014B7E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9761  014B84                     l10589:
  9762                           
  9763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9764                           ;stkvar	_w @ sp[(-17)+13]
  9765                           ;stkvar	_l @ sp[(-17)+7]
  9766  014B84  50E1               	movf	fsr1l,w,c
  9767  014B86  0FF6               	addlw	-10
  9768  014B88  6ED9               	movwf	fsr2l,c
  9769  014B8A  50E2               	movf	fsr1h,w,c
  9770  014B8C  6EDA               	movwf	fsr2h,c
  9771  014B8E  0EFF               	movlw	255
  9772  014B90  22DA               	addwfc	fsr2h,f,c
  9773  014B92  0EFC               	movlw	-4
  9774  014B94  50E3               	movf	plusw1,w,c
  9775  014B96  5CDE               	subwf	postinc2,w,c
  9776  014B98  50DE               	movf	postinc2,w,c
  9777  014B9A  0A80               	xorlw	128
  9778  014B9C  6E32               	movwf	btemp^0,c
  9779  014B9E  0EFD               	movlw	-3
  9780  014BA0  50E3               	movf	plusw1,w,c
  9781  014BA2  0A80               	xorlw	128
  9782  014BA4  5832               	subwfb	btemp^0,w,c
  9783  014BA6  A0D8               	btfss	status,0,c
  9784  014BA8  D7CF               	goto	l10585
  9785  014BAA                     u11420:
  9786                           
  9787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9788                           ;stkvar	_i @ sp[(-17)+15]
  9789  014BAA  0EFE               	movlw	-2
  9790  014BAC  6AE3               	clrf	plusw1,c
  9791  014BAE  0EFF               	movlw	-1
  9792  014BB0  6AE3               	clrf	plusw1,c
  9793                           
  9794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9795  014BB2  D045               	goto	l10599
  9796  014BB4                     l10593:
  9797                           
  9798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9799                           ;stkvar	_fp @ sp[(-17)+-2]
  9800  014BB4  0EED               	movlw	-19
  9801  014BB6  006F FF8F FFE6     	movff	plusw1,postinc1
  9802  014BBC  006F FF8F FFE6     	movff	plusw1,postinc1
  9803                           
  9804                           ;stkvar	_cp @ sp[(-19)+11]
  9805  014BC2  0EF8               	movlw	-8
  9806  014BC4  006F FF8F FFF6     	movff	plusw1,tblptrl
  9807  014BCA  0EF9               	movlw	-7
  9808  014BCC  006F FF8F FFF7     	movff	plusw1,tblptrh
  9809  014BD2  0E00               	movlw	low (__mediumconst shr (0+16))
  9810  014BD4  6EF8               	movwf	tblptru,c
  9811  014BD6  0E1F               	movlw	(high __ramtop+-1)
  9812  014BD8  64F7               	cpfsgt	tblptrh,c
  9813  014BDA  D003               	bra	u11437
  9814  014BDC  0008               	tblrd		*
  9815  014BDE  50F5               	movf	tablat,w,c
  9816  014BE0  D007               	bra	u11430
  9817  014BE2                     u11437:
  9818  014BE2  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9819  014BE8  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9820  014BEE  50EF               	movf	indf0,w,c
  9821  014BF0                     u11430:
  9822  014BF0  6EE6               	movwf	postinc1,c
  9823  014BF2  0E00               	movlw	0
  9824  014BF4  6EE6               	movwf	postinc1,c
  9825  014BF6  ECF3  F0B1         	call	_fputc	;wreg free
  9826                           
  9827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9828                           ;stkvar	_cp @ sp[(-17)+11]
  9829  014BFA  0EFA               	movlw	-6
  9830  014BFC  50E3               	movf	plusw1,w,c
  9831  014BFE  0F01               	addlw	1
  9832  014C00  6E32               	movwf	btemp^0,c
  9833  014C02  0EFA               	movlw	-6
  9834  014C04  0060  F0CB  FFE3   	movff	btemp,plusw1
  9835  014C0A  6A32               	clrf	btemp^0,c
  9836  014C0C  0EFB               	movlw	-5
  9837  014C0E  50E3               	movf	plusw1,w,c
  9838  014C10  2032               	addwfc	btemp^0,w,c
  9839  014C12  6E32               	movwf	btemp^0,c
  9840  014C14  0EFB               	movlw	-5
  9841  014C16  0060  F0CB  FFE3   	movff	btemp,plusw1
  9842                           
  9843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9844                           ;stkvar	_i @ sp[(-17)+15]
  9845  014C1C  0EFE               	movlw	-2
  9846  014C1E  50E3               	movf	plusw1,w,c
  9847  014C20  0F01               	addlw	1
  9848  014C22  6E32               	movwf	btemp^0,c
  9849  014C24  0EFE               	movlw	-2
  9850  014C26  0060  F0CB  FFE3   	movff	btemp,plusw1
  9851  014C2C  6A32               	clrf	btemp^0,c
  9852  014C2E  0EFF               	movlw	-1
  9853  014C30  50E3               	movf	plusw1,w,c
  9854  014C32  2032               	addwfc	btemp^0,w,c
  9855  014C34  6E32               	movwf	btemp^0,c
  9856  014C36  0EFF               	movlw	-1
  9857  014C38  0060  F0CB  FFE3   	movff	btemp,plusw1
  9858  014C3E                     l10599:
  9859                           
  9860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9861                           ;stkvar	_p @ sp[(-17)+9]
  9862                           ;stkvar	_i @ sp[(-17)+15]
  9863  014C3E  50E1               	movf	fsr1l,w,c
  9864  014C40  0FFE               	addlw	-2
  9865  014C42  6ED9               	movwf	fsr2l,c
  9866  014C44  50E2               	movf	fsr1h,w,c
  9867  014C46  6EDA               	movwf	fsr2h,c
  9868  014C48  0EFF               	movlw	255
  9869  014C4A  22DA               	addwfc	fsr2h,f,c
  9870  014C4C  0EF8               	movlw	-8
  9871  014C4E  50E3               	movf	plusw1,w,c
  9872  014C50  5CDE               	subwf	postinc2,w,c
  9873  014C52  50DE               	movf	postinc2,w,c
  9874  014C54  0A80               	xorlw	128
  9875  014C56  6E32               	movwf	btemp^0,c
  9876  014C58  0EF9               	movlw	-7
  9877  014C5A  50E3               	movf	plusw1,w,c
  9878  014C5C  0A80               	xorlw	128
  9879  014C5E  5832               	subwfb	btemp^0,w,c
  9880  014C60  A0D8               	btfss	status,0,c
  9881  014C62  D7A8               	goto	l10593
  9882                           
  9883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9884  014C64  B01F               	btfsc	_flags^0,0,c
  9885  014C66  D01F               	goto	l10607
  9886  014C68  D031               	goto	u11460
  9887  014C6A                     l10603:
  9888                           
  9889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9890                           ;stkvar	_fp @ sp[(-17)+-2]
  9891  014C6A  0EED               	movlw	-19
  9892  014C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9893  014C72  006F FF8F FFE6     	movff	plusw1,postinc1
  9894  014C78  0E20               	movlw	32
  9895  014C7A  6EE6               	movwf	postinc1,c
  9896  014C7C  0E00               	movlw	0
  9897  014C7E  6EE6               	movwf	postinc1,c
  9898  014C80  ECF3  F0B1         	call	_fputc	;wreg free
  9899                           
  9900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9901                           ;stkvar	_l @ sp[(-17)+7]
  9902  014C84  0EF6               	movlw	-10
  9903  014C86  50E3               	movf	plusw1,w,c
  9904  014C88  0F01               	addlw	1
  9905  014C8A  6E32               	movwf	btemp^0,c
  9906  014C8C  0EF6               	movlw	-10
  9907  014C8E  0060  F0CB  FFE3   	movff	btemp,plusw1
  9908  014C94  6A32               	clrf	btemp^0,c
  9909  014C96  0EF7               	movlw	-9
  9910  014C98  50E3               	movf	plusw1,w,c
  9911  014C9A  2032               	addwfc	btemp^0,w,c
  9912  014C9C  6E32               	movwf	btemp^0,c
  9913  014C9E  0EF7               	movlw	-9
  9914  014CA0  0060  F0CB  FFE3   	movff	btemp,plusw1
  9915  014CA6                     l10607:
  9916                           
  9917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9918                           ;stkvar	_w @ sp[(-17)+13]
  9919                           ;stkvar	_l @ sp[(-17)+7]
  9920  014CA6  50E1               	movf	fsr1l,w,c
  9921  014CA8  0FF6               	addlw	-10
  9922  014CAA  6ED9               	movwf	fsr2l,c
  9923  014CAC  50E2               	movf	fsr1h,w,c
  9924  014CAE  6EDA               	movwf	fsr2h,c
  9925  014CB0  0EFF               	movlw	255
  9926  014CB2  22DA               	addwfc	fsr2h,f,c
  9927  014CB4  0EFC               	movlw	-4
  9928  014CB6  50E3               	movf	plusw1,w,c
  9929  014CB8  5CDE               	subwf	postinc2,w,c
  9930  014CBA  50DE               	movf	postinc2,w,c
  9931  014CBC  0A80               	xorlw	128
  9932  014CBE  6E32               	movwf	btemp^0,c
  9933  014CC0  0EFD               	movlw	-3
  9934  014CC2  50E3               	movf	plusw1,w,c
  9935  014CC4  0A80               	xorlw	128
  9936  014CC6  5832               	subwfb	btemp^0,w,c
  9937  014CC8  A0D8               	btfss	status,0,c
  9938  014CCA  D7CF               	goto	l10603
  9939  014CCC                     u11460:
  9940                           
  9941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9942                           ;stkvar	_l @ sp[(-17)+7]
  9943  014CCC  0EF6               	movlw	-10
  9944  014CCE  006F FF8C  F032    	movff	plusw1,btemp
  9945  014CD4  0EF7               	movlw	-9
  9946  014CD6  006F FF8C  F033    	movff	plusw1,btemp+1
  9947                           
  9948                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9949  014CDC  0EEB               	movlw	235
  9950  014CDE  26E1               	addwf	fsr1l,f,c
  9951  014CE0  0EFF               	movlw	255
  9952  014CE2  22E2               	addwfc	fsr1h,f,c
  9953  014CE4  0012               	return		;funcret
  9954  014CE6                     __end_of_stoa:
  9955                           	opt callstack 0
  9956                           
  9957 ;; *************** function _efgtoa *****************
  9958 ;; Defined at:
  9959 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9962 ;;		 -> f(6), NULL(0), 
  9963 ;;  f               4  [STACK] PTR struct _IO_FILE
  9964 ;;  c               1  [STACK] unsigned char 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  u               4  [STACK] unsigned char 
  9967 ;;  g               4  [STACK] unsigned char 
  9968 ;;  l               4  [STACK] unsigned char 
  9969 ;;  h               4  [STACK] unsigned char 
  9970 ;;  ou              4  [STACK] unsigned char 
  9971 ;;  n               2  [STACK] int 
  9972 ;;  e               2  [STACK] int 
  9973 ;;  i               2  [STACK] int 
  9974 ;;  w               2  [STACK] int 
  9975 ;;  p               2  [STACK] int 
  9976 ;;  sign            2  [STACK] int 
  9977 ;;  d               2  [STACK] int 
  9978 ;;  ne              2  [STACK] int 
  9979 ;;  m               2  [STACK] int 
  9980 ;;  pp              2  [STACK] int 
  9981 ;;  t               2  [STACK] int 
  9982 ;;  mode            1  [STACK] unsigned char 
  9983 ;;  nmode           1  [STACK] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  2  [STACK] int 
  9986 ;; Registers used:
  9987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/5
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9997 ;;Total ram usage:        0 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:   11
 10000 ;; This function calls:
 10001 ;;		___awdiv
 10002 ;;		___awmod
 10003 ;;		___fladd
 10004 ;;		___fldiv
 10005 ;;		___fleq
 10006 ;;		___flge
 10007 ;;		___flmul
 10008 ;;		___flneg
 10009 ;;		___flsub
 10010 ;;		___fltol
 10011 ;;		___fpclassifyf
 10012 ;;		_floorf
 10013 ;;		_isupper
 10014 ;;		_pad
 10015 ;;		_strcpy
 10016 ;;		_tolower
 10017 ;; This function is called by:
 10018 ;;		_vfpfcnvrt
 10019 ;; This function uses a reentrant model
 10020 ;;
 10021                           
 10022                           	psect	text45
 10023  010000                     __ptext45:
 10024                           	opt callstack 0
 10025  010000                     _efgtoa:
 10026                           	opt callstack 0
 10027                           
 10028                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10029  010000  0E38               	movlw	56
 10030  010002  26E1               	addwf	fsr1l,f,c
 10031  010004  0E00               	movlw	0
 10032  010006  22E2               	addwfc	fsr1h,f,c
 10033                           
 10034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10035                           ;stkvar	_sign @ sp[(-56)+42]
 10036                           
 10037                           ;incstack = 0
 10038  010008  0EF2               	movlw	-14
 10039  01000A  6AE3               	clrf	plusw1,c
 10040  01000C  0EF3               	movlw	-13
 10041  01000E  6AE3               	clrf	plusw1,c
 10042                           
 10043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10044                           ;stkvar	_f @ sp[(-56)+-6]
 10045  010010  0EC2               	movlw	-62
 10046  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10047  010018  0EC3               	movlw	-61
 10048  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10049  010020  0EC4               	movlw	-60
 10050  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10051  010028  0EC5               	movlw	-59
 10052  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10053                           
 10054                           ;stkvar	_g @ sp[(-56)+16]
 10055  010030  0ED8               	movlw	-40
 10056  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10057  010038  0ED9               	movlw	-39
 10058  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10059  010040  0EDA               	movlw	-38
 10060  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10061  010048  0EDB               	movlw	-37
 10062  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10063                           
 10064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10065                           ;stkvar	_g @ sp[(-56)+16]
 10066  010050  0EDB               	movlw	-37
 10067  010052  AEE3               	btfss	plusw1,7,c
 10068  010054  D02B               	goto	l10267
 10069                           
 10070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10071  010056  0E01               	movlw	1
 10072  010058  6E3C               	movwf	(btemp+10)^0,c
 10073  01005A  0E00               	movlw	0
 10074  01005C  6E3D               	movwf	(btemp+11)^0,c
 10075                           
 10076                           ;stkvar	_sign @ sp[(-56)+42]
 10077  01005E  0EF2               	movlw	-14
 10078  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10079  010066  0EF3               	movlw	-13
 10080  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10081                           
 10082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10083                           ;stkvar	_g @ sp[(-56)+16]
 10084  01006E  0ED8               	movlw	-40
 10085  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10086  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10087  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10088  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10089  010088  ECCF  F0BC         	call	___flneg	;wreg free
 10090                           
 10091                           ;stkvar	_g @ sp[(-56)+16]
 10092  01008C  0ED8               	movlw	-40
 10093  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10094  010094  0ED9               	movlw	-39
 10095  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10096  01009C  0EDA               	movlw	-38
 10097  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10098  0100A4  0EDB               	movlw	-37
 10099  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10100  0100AC                     l10267:
 10101                           
 10102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10103                           ;stkvar	_n @ sp[(-56)+32]
 10104  0100AC  0EE8               	movlw	-24
 10105  0100AE  6AE3               	clrf	plusw1,c
 10106  0100B0  0EE9               	movlw	-23
 10107  0100B2  6AE3               	clrf	plusw1,c
 10108                           
 10109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10110                           ;stkvar	_w @ sp[(-56)+38]
 10111  0100B4  0EEE               	movlw	-18
 10112  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10113  0100BC  0EEF               	movlw	-17
 10114  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10115                           
 10116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10117                           ;stkvar	_sign @ sp[(-56)+42]
 10118  0100C4  0EF2               	movlw	-14
 10119  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10120  0100CC  0EF3               	movlw	-13
 10121  0100CE  50E3               	movf	plusw1,w,c
 10122  0100D0  1032               	iorwf	btemp^0,w,c
 10123  0100D2  A4D8               	btfss	status,2,c
 10124  0100D4  D002               	goto	u10870
 10125  0100D6  A41F               	btfss	_flags^0,2,c
 10126  0100D8  D036               	goto	l10287
 10127  0100DA                     u10870:
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10130                           ;stkvar	_sign @ sp[(-56)+42]
 10131  0100DA  0EF2               	movlw	-14
 10132  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10133  0100E2  0EF3               	movlw	-13
 10134  0100E4  50E3               	movf	plusw1,w,c
 10135  0100E6  1032               	iorwf	btemp^0,w,c
 10136  0100E8  A4D8               	btfss	status,2,c
 10137  0100EA  D002               	goto	l10279
 10138  0100EC  0E2B               	movlw	43
 10139  0100EE  D001               	goto	L8
 10140  0100F0                     l10279:
 10141  0100F0  0E2D               	movlw	45
 10142  0100F2                     L8:
 10143  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10144  0100F4  0E00               	movlw	0
 10145  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10146                           
 10147                           ;stkvar	_efgtoa$4378 @ sp[(-56)+10]
 10148  0100F8  0ED2               	movlw	-46
 10149  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10150  010100  0ED3               	movlw	-45
 10151  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10152                           
 10153                           ;stkvar	_efgtoa$4378 @ sp[(-56)+10]
 10154  010108  0ED2               	movlw	-46
 10155  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10156                           
 10157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10158                           ;stkvar	_n @ sp[(-56)+32]
 10159  010110  0EE8               	movlw	-24
 10160  010112  50E3               	movf	plusw1,w,c
 10161  010114  0F01               	addlw	1
 10162  010116  6E32               	movwf	btemp^0,c
 10163  010118  0EE8               	movlw	-24
 10164  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10165  010120  6A32               	clrf	btemp^0,c
 10166  010122  0EE9               	movlw	-23
 10167  010124  50E3               	movf	plusw1,w,c
 10168  010126  2032               	addwfc	btemp^0,w,c
 10169  010128  6E32               	movwf	btemp^0,c
 10170  01012A  0EE9               	movlw	-23
 10171  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10172                           
 10173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10174                           ;stkvar	_w @ sp[(-56)+38]
 10175  010132  50E1               	movf	fsr1l,w,c
 10176  010134  0FEE               	addlw	-18
 10177  010136  6ED9               	movwf	fsr2l,c
 10178  010138  50E2               	movf	fsr1h,w,c
 10179  01013A  6EDA               	movwf	fsr2h,c
 10180  01013C  0EFF               	movlw	255
 10181  01013E  22DA               	addwfc	fsr2h,f,c
 10182  010140  06DE               	decf	postinc2,f,c
 10183  010142  0E00               	movlw	0
 10184  010144  5ADD               	subwfb	postdec2,f,c
 10185  010146                     l10287:
 10186                           
 10187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10188                           ;stkvar	_g @ sp[(-56)+16]
 10189  010146  0ED8               	movlw	-40
 10190  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10191  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10192  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10193  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10194  010160  ECDC  F0AD         	call	___fpclassifyf	;wreg free
 10195  010164  0432               	decf	btemp^0,w,c
 10196  010166  1033               	iorwf	(btemp+1)^0,w,c
 10197  010168  A4D8               	btfss	status,2,c
 10198  01016A  D076               	goto	l10305
 10199  01016C  0EBF               	movlw	191
 10200  01016E  6E3C               	movwf	(btemp+10)^0,c
 10201  010170  0EFF               	movlw	255
 10202  010172  6E3D               	movwf	(btemp+11)^0,c
 10203                           
 10204                           ;stkvar	_c @ sp[(-56)+-7]
 10205  010174  0EC1               	movlw	-63
 10206  010176  50E3               	movf	plusw1,w,c
 10207  010178  6E3A               	movwf	(btemp+8)^0,c
 10208  01017A  6A3B               	clrf	(btemp+9)^0,c
 10209  01017C  503C               	movf	(btemp+10)^0,w,c
 10210  01017E  263A               	addwf	(btemp+8)^0,f,c
 10211  010180  503D               	movf	(btemp+11)^0,w,c
 10212  010182  223B               	addwfc	(btemp+9)^0,f,c
 10213  010184  503B               	movf	(btemp+9)^0,w,c
 10214  010186  E106               	bnz	u10900
 10215  010188  0E1A               	movlw	26
 10216  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10217  01018C  B0D8               	btfsc	status,0,c
 10218  01018E  D002               	goto	u10900
 10219  010190  0E01               	movlw	1
 10220  010192  D001               	goto	u10910
 10221  010194                     u10900:
 10222  010194  0E00               	movlw	0
 10223  010196                     u10910:
 10224  010196  6E3C               	movwf	(btemp+10)^0,c
 10225  010198  6A3D               	clrf	(btemp+11)^0,c
 10226                           
 10227                           ;stkvar	_efgtoa$4379 @ sp[(-56)+8]
 10228  01019A  0ED0               	movlw	-48
 10229  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10230  0101A2  0ED1               	movlw	-47
 10231  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10232                           
 10233                           ;stkvar	_efgtoa$4379 @ sp[(-56)+8]
 10234  0101AA  0ED0               	movlw	-48
 10235  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10236  0101B2  0ED1               	movlw	-47
 10237  0101B4  50E3               	movf	plusw1,w,c
 10238  0101B6  1032               	iorwf	btemp^0,w,c
 10239  0101B8  B4D8               	btfsc	status,2,c
 10240  0101BA  D017               	goto	l10297
 10241                           
 10242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10243  0101BC  0EE5               	movlw	low STR_34
 10244  0101BE  6EE6               	movwf	postinc1,c
 10245  0101C0  0EFF               	movlw	high STR_34
 10246  0101C2  6EE6               	movwf	postinc1,c
 10247                           
 10248                           ;stkvar	_n @ sp[(-58)+32]
 10249  0101C4  0E40               	movlw	low _dbuf
 10250  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10251  0101C8  0E02               	movlw	high _dbuf
 10252  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10253  0101CC  0EE6               	movlw	-26
 10254  0101CE  50E3               	movf	plusw1,w,c
 10255  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10256  0101D2  0EE7               	movlw	-25
 10257  0101D4  50E3               	movf	plusw1,w,c
 10258  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10259  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10260  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10261  0101E4  EC96  F0B5         	call	_strcpy	;wreg free
 10262                           
 10263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10264  0101E8  D016               	goto	l10299
 10265  0101EA                     l10297:
 10266                           
 10267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10268  0101EA  0EED               	movlw	low STR_35
 10269  0101EC  6EE6               	movwf	postinc1,c
 10270  0101EE  0EFF               	movlw	high STR_35
 10271  0101F0  6EE6               	movwf	postinc1,c
 10272                           
 10273                           ;stkvar	_n @ sp[(-58)+32]
 10274  0101F2  0E40               	movlw	low _dbuf
 10275  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10276  0101F6  0E02               	movlw	high _dbuf
 10277  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10278  0101FA  0EE6               	movlw	-26
 10279  0101FC  50E3               	movf	plusw1,w,c
 10280  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10281  010200  0EE7               	movlw	-25
 10282  010202  50E3               	movf	plusw1,w,c
 10283  010204  223D               	addwfc	(btemp+11)^0,f,c
 10284  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10285  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10286  010212  EC96  F0B5         	call	_strcpy	;wreg free
 10287  010216                     l10299:
 10288                           
 10289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10290                           ;stkvar	_w @ sp[(-56)+38]
 10291  010216  50E1               	movf	fsr1l,w,c
 10292  010218  0FEE               	addlw	-18
 10293  01021A  6ED9               	movwf	fsr2l,c
 10294  01021C  50E2               	movf	fsr1h,w,c
 10295  01021E  6EDA               	movwf	fsr2h,c
 10296  010220  0EFF               	movlw	255
 10297  010222  22DA               	addwfc	fsr2h,f,c
 10298  010224  0EFD               	movlw	253
 10299  010226  26DE               	addwf	postinc2,f,c
 10300  010228  0EFF               	movlw	255
 10301  01022A  22DD               	addwfc	postdec2,f,c
 10302  01022C                     l10301:
 10303                           
 10304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10305                           ;stkvar	_w @ sp[(-56)+38]
 10306  01022C  0EEE               	movlw	-18
 10307  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10308  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10309  01023A  0E40               	movlw	low _dbuf
 10310  01023C  6EE6               	movwf	postinc1,c
 10311  01023E  0E02               	movlw	high _dbuf
 10312  010240  6EE6               	movwf	postinc1,c
 10313                           
 10314                           ;stkvar	_fp @ sp[(-60)+-2]
 10315  010242  0EC2               	movlw	-62
 10316  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10317  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10318  010250  EC11  F0B3         	call	_pad	;wreg free
 10319  010254  EF1D  F089         	goto	l1864
 10320  010258                     l10305:
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10323                           ;stkvar	_g @ sp[(-56)+16]
 10324  010258  0ED8               	movlw	-40
 10325  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10326  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10327  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10328  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10329  010272  ECDC  F0AD         	call	___fpclassifyf	;wreg free
 10330  010276  5032               	movf	btemp^0,w,c
 10331  010278  1033               	iorwf	(btemp+1)^0,w,c
 10332  01027A  A4D8               	btfss	status,2,c
 10333  01027C  D056               	goto	l10323
 10334  01027E  0EBF               	movlw	191
 10335  010280  6E3C               	movwf	(btemp+10)^0,c
 10336  010282  0EFF               	movlw	255
 10337  010284  6E3D               	movwf	(btemp+11)^0,c
 10338                           
 10339                           ;stkvar	_c @ sp[(-56)+-7]
 10340  010286  0EC1               	movlw	-63
 10341  010288  50E3               	movf	plusw1,w,c
 10342  01028A  6E3A               	movwf	(btemp+8)^0,c
 10343  01028C  6A3B               	clrf	(btemp+9)^0,c
 10344  01028E  503C               	movf	(btemp+10)^0,w,c
 10345  010290  263A               	addwf	(btemp+8)^0,f,c
 10346  010292  503D               	movf	(btemp+11)^0,w,c
 10347  010294  223B               	addwfc	(btemp+9)^0,f,c
 10348  010296  503B               	movf	(btemp+9)^0,w,c
 10349  010298  E106               	bnz	u10940
 10350  01029A  0E1A               	movlw	26
 10351  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10352  01029E  B0D8               	btfsc	status,0,c
 10353  0102A0  D002               	goto	u10940
 10354  0102A2  0E01               	movlw	1
 10355  0102A4  D001               	goto	u10950
 10356  0102A6                     u10940:
 10357  0102A6  0E00               	movlw	0
 10358  0102A8                     u10950:
 10359  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10360  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10361                           
 10362                           ;stkvar	_efgtoa$4383 @ sp[(-56)+6]
 10363  0102AC  0ECE               	movlw	-50
 10364  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10365  0102B4  0ECF               	movlw	-49
 10366  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10367                           
 10368                           ;stkvar	_efgtoa$4383 @ sp[(-56)+6]
 10369  0102BC  0ECE               	movlw	-50
 10370  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10371  0102C4  0ECF               	movlw	-49
 10372  0102C6  50E3               	movf	plusw1,w,c
 10373  0102C8  1032               	iorwf	btemp^0,w,c
 10374  0102CA  B4D8               	btfsc	status,2,c
 10375  0102CC  D017               	goto	l10315
 10376                           
 10377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10378  0102CE  0EE9               	movlw	low STR_38
 10379  0102D0  6EE6               	movwf	postinc1,c
 10380  0102D2  0EFF               	movlw	high STR_38
 10381  0102D4  6EE6               	movwf	postinc1,c
 10382                           
 10383                           ;stkvar	_n @ sp[(-58)+32]
 10384  0102D6  0E40               	movlw	low _dbuf
 10385  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10386  0102DA  0E02               	movlw	high _dbuf
 10387  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10388  0102DE  0EE6               	movlw	-26
 10389  0102E0  50E3               	movf	plusw1,w,c
 10390  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10391  0102E4  0EE7               	movlw	-25
 10392  0102E6  50E3               	movf	plusw1,w,c
 10393  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10394  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10395  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10396  0102F6  EC96  F0B5         	call	_strcpy	;wreg free
 10397                           
 10398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10399  0102FA  D78D               	goto	l10299
 10400  0102FC                     l10315:
 10401                           
 10402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10403  0102FC  0EF1               	movlw	low STR_39
 10404  0102FE  6EE6               	movwf	postinc1,c
 10405  010300  0EFF               	movlw	high STR_39
 10406  010302  6EE6               	movwf	postinc1,c
 10407                           
 10408                           ;stkvar	_n @ sp[(-58)+32]
 10409  010304  0E40               	movlw	low _dbuf
 10410  010306  6E3C               	movwf	(btemp+10)^0,c
 10411  010308  0E02               	movlw	high _dbuf
 10412  01030A  6E3D               	movwf	(btemp+11)^0,c
 10413  01030C  0EE6               	movlw	-26
 10414  01030E  50E3               	movf	plusw1,w,c
 10415  010310  263C               	addwf	(btemp+10)^0,f,c
 10416  010312  0EE7               	movlw	-25
 10417  010314  50E3               	movf	plusw1,w,c
 10418  010316  223D               	addwfc	(btemp+11)^0,f,c
 10419  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10420  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10421  010324  EC96  F0B5         	call	_strcpy	;wreg free
 10422  010328  D776               	goto	l10299
 10423  01032A                     l10323:
 10424                           
 10425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10426  01032A  0E00               	movlw	0
 10427  01032C  6E3A               	movwf	(btemp+8)^0,c
 10428  01032E  0E00               	movlw	0
 10429  010330  6E3B               	movwf	(btemp+9)^0,c
 10430  010332  0E80               	movlw	128
 10431  010334  6E3C               	movwf	(btemp+10)^0,c
 10432  010336  0E3F               	movlw	63
 10433  010338  6E3D               	movwf	(btemp+11)^0,c
 10434                           
 10435                           ;stkvar	_u @ sp[(-56)+12]
 10436  01033A  0ED4               	movlw	-44
 10437  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10438  010342  0ED5               	movlw	-43
 10439  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10440  01034A  0ED6               	movlw	-42
 10441  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10442  010352  0ED7               	movlw	-41
 10443  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10444                           
 10445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10446                           ;stkvar	_e @ sp[(-56)+34]
 10447  01035A  0EEA               	movlw	-22
 10448  01035C  6AE3               	clrf	plusw1,c
 10449  01035E  0EEB               	movlw	-21
 10450  010360  6AE3               	clrf	plusw1,c
 10451                           
 10452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10453  010362  0E00               	movlw	0
 10454  010364  6EE6               	movwf	postinc1,c
 10455  010366  0E00               	movlw	0
 10456  010368  6EE6               	movwf	postinc1,c
 10457  01036A  0E00               	movlw	0
 10458  01036C  6EE6               	movwf	postinc1,c
 10459  01036E  0E00               	movlw	0
 10460  010370  6EE6               	movwf	postinc1,c
 10461                           
 10462                           ;stkvar	_g @ sp[(-60)+16]
 10463  010372  0ED4               	movlw	-44
 10464  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10465  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10466  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10467  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10468  01038C  EC00  F0B6         	call	___fleq	;wreg free
 10469  010390  A032               	btfss	btemp& (0+255),0,c
 10470  010392  D039               	goto	l10335
 10471  010394  D0BC               	goto	u10990
 10472  010396                     l10331:
 10473                           
 10474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10475  010396  0E00               	movlw	0
 10476  010398  6EE6               	movwf	postinc1,c
 10477  01039A  0E00               	movlw	0
 10478  01039C  6EE6               	movwf	postinc1,c
 10479  01039E  0E20               	movlw	32
 10480  0103A0  6EE6               	movwf	postinc1,c
 10481  0103A2  0E41               	movlw	65
 10482  0103A4  6EE6               	movwf	postinc1,c
 10483                           
 10484                           ;stkvar	_u @ sp[(-60)+12]
 10485  0103A6  0ED0               	movlw	-48
 10486  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10487  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10488  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10489  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10490  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10491                           
 10492                           ;stkvar	_u @ sp[(-56)+12]
 10493  0103C4  0ED4               	movlw	-44
 10494  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10495  0103CC  0ED5               	movlw	-43
 10496  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10497  0103D4  0ED6               	movlw	-42
 10498  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10499  0103DC  0ED7               	movlw	-41
 10500  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10501                           
 10502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10503                           ;stkvar	_e @ sp[(-56)+34]
 10504  0103E4  0EEA               	movlw	-22
 10505  0103E6  50E3               	movf	plusw1,w,c
 10506  0103E8  0F01               	addlw	1
 10507  0103EA  6E32               	movwf	btemp^0,c
 10508  0103EC  0EEA               	movlw	-22
 10509  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10510  0103F4  6A32               	clrf	btemp^0,c
 10511  0103F6  0EEB               	movlw	-21
 10512  0103F8  50E3               	movf	plusw1,w,c
 10513  0103FA  2032               	addwfc	btemp^0,w,c
 10514  0103FC  6E32               	movwf	btemp^0,c
 10515  0103FE  0EEB               	movlw	-21
 10516  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10517  010406                     l10335:
 10518                           
 10519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10520  010406  0E00               	movlw	0
 10521  010408  6EE6               	movwf	postinc1,c
 10522  01040A  0E00               	movlw	0
 10523  01040C  6EE6               	movwf	postinc1,c
 10524  01040E  0E20               	movlw	32
 10525  010410  6EE6               	movwf	postinc1,c
 10526  010412  0E41               	movlw	65
 10527  010414  6EE6               	movwf	postinc1,c
 10528                           
 10529                           ;stkvar	_u @ sp[(-60)+12]
 10530  010416  0ED0               	movlw	-48
 10531  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10532  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10534  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10535  010430  ECC1  F08E         	call	___flmul	;wreg free
 10536  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10537  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10538  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10539  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10540                           
 10541                           ;stkvar	_g @ sp[(-60)+16]
 10542  01044C  0ED4               	movlw	-44
 10543  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10544  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10545  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10546  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10547  010466  EC60  F0AF         	call	___flge	;wreg free
 10548  01046A  A032               	btfss	btemp& (0+255),0,c
 10549  01046C  D032               	goto	l10341
 10550  01046E  D793               	goto	l10331
 10551  010470                     l10337:
 10552                           
 10553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10554  010470  0E00               	movlw	0
 10555  010472  6EE6               	movwf	postinc1,c
 10556  010474  0E00               	movlw	0
 10557  010476  6EE6               	movwf	postinc1,c
 10558  010478  0E20               	movlw	32
 10559  01047A  6EE6               	movwf	postinc1,c
 10560  01047C  0E41               	movlw	65
 10561  01047E  6EE6               	movwf	postinc1,c
 10562                           
 10563                           ;stkvar	_u @ sp[(-60)+12]
 10564  010480  0ED0               	movlw	-48
 10565  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10566  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10567  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10568  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10569  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10570                           
 10571                           ;stkvar	_u @ sp[(-56)+12]
 10572  01049E  0ED4               	movlw	-44
 10573  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10574  0104A6  0ED5               	movlw	-43
 10575  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10576  0104AE  0ED6               	movlw	-42
 10577  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10578  0104B6  0ED7               	movlw	-41
 10579  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10580                           
 10581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10582                           ;stkvar	_e @ sp[(-56)+34]
 10583  0104BE  50E1               	movf	fsr1l,w,c
 10584  0104C0  0FEA               	addlw	-22
 10585  0104C2  6ED9               	movwf	fsr2l,c
 10586  0104C4  50E2               	movf	fsr1h,w,c
 10587  0104C6  6EDA               	movwf	fsr2h,c
 10588  0104C8  0EFF               	movlw	255
 10589  0104CA  22DA               	addwfc	fsr2h,f,c
 10590  0104CC  06DE               	decf	postinc2,f,c
 10591  0104CE  0E00               	movlw	0
 10592  0104D0  5ADD               	subwfb	postdec2,f,c
 10593  0104D2                     l10341:
 10594                           
 10595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10596                           ;stkvar	_u @ sp[(-56)+12]
 10597  0104D2  0ED4               	movlw	-44
 10598  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10599  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10600  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10601  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10602                           
 10603                           ;stkvar	_g @ sp[(-60)+16]
 10604  0104EC  0ED4               	movlw	-44
 10605  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10606  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10607  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10608  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10609  010506  EC60  F0AF         	call	___flge	;wreg free
 10610  01050A  A032               	btfss	btemp& (0+255),0,c
 10611  01050C  D7B1               	goto	l10337
 10612  01050E                     u10990:
 10613                           
 10614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10615                           ;stkvar	_c @ sp[(-56)+-7]
 10616  01050E  0EC1               	movlw	-63
 10617  010510  50E3               	movf	plusw1,w,c
 10618  010512  6EE6               	movwf	postinc1,c
 10619  010514  0E00               	movlw	0
 10620  010516  6EE6               	movwf	postinc1,c
 10621  010518  EC71  F0B9         	call	_tolower	;wreg free
 10622                           
 10623                           ;stkvar	_mode @ sp[(-56)+54]
 10624  01051C  0EFE               	movlw	-2
 10625  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10626                           
 10627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10628                           ;stkvar	_mode @ sp[(-56)+54]
 10629                           ;stkvar	_nmode @ sp[(-56)+55]
 10630  010524  0EFE               	movlw	-2
 10631  010526  006F FF8C  F032    	movff	plusw1,btemp
 10632  01052C  0EFF               	movlw	-1
 10633  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10634                           
 10635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10636                           ;stkvar	_mode @ sp[(-56)+54]
 10637  010534  0EFE               	movlw	-2
 10638  010536  006F FF8C  F032    	movff	plusw1,btemp
 10639  01053C  0E67               	movlw	103
 10640  01053E  1832               	xorwf	btemp^0,w,c
 10641  010540  A4D8               	btfss	status,2,c
 10642  010542  D025               	goto	l10359
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10645  010544  501D               	movf	_prec^0,w,c
 10646  010546  101E               	iorwf	(_prec+1)^0,w,c
 10647  010548  A4D8               	btfss	status,2,c
 10648  01054A  D004               	goto	l10353
 10649                           
 10650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10651  01054C  0E00               	movlw	0
 10652  01054E  6E1E               	movwf	(_prec+1)^0,c
 10653  010550  0E01               	movlw	1
 10654  010552  6E1D               	movwf	_prec^0,c
 10655  010554                     l10353:
 10656                           
 10657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10658  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10659  010556  D005               	goto	u11020
 10660  010558  501E               	movf	(_prec+1)^0,w,c
 10661  01055A  E110               	bnz	l10357
 10662  01055C  041D               	decf	_prec^0,w,c
 10663  01055E  B0D8               	btfsc	status,0,c
 10664  010560  D00D               	goto	l10357
 10665  010562                     u11020:
 10666  010562  0E06               	movlw	6
 10667  010564  6E3C               	movwf	(btemp+10)^0,c
 10668  010566  0E00               	movlw	0
 10669  010568  6E3D               	movwf	(btemp+11)^0,c
 10670                           
 10671                           ;stkvar	_p @ sp[(-56)+40]
 10672  01056A  0EF0               	movlw	-16
 10673  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10674  010572  0EF1               	movlw	-15
 10675  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10676  01057A  D00C               	goto	l10365
 10677  01057C                     l10357:
 10678                           
 10679                           ;stkvar	_p @ sp[(-56)+40]
 10680  01057C  0EF0               	movlw	-16
 10681  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10682  010584  0EF1               	movlw	-15
 10683  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10684  01058C  D003               	goto	l10365
 10685  01058E                     l10359:
 10686                           
 10687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10688  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10689  010590  D7F5               	goto	l10357
 10690  010592  D7E7               	goto	u11020
 10691  010594                     l10365:
 10692                           
 10693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10694                           ;stkvar	_mode @ sp[(-56)+54]
 10695  010594  0EFE               	movlw	-2
 10696  010596  006F FF8C  F032    	movff	plusw1,btemp
 10697  01059C  0E67               	movlw	103
 10698  01059E  1832               	xorwf	btemp^0,w,c
 10699  0105A0  A4D8               	btfss	status,2,c
 10700  0105A2  D02F               	goto	l10375
 10701                           
 10702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10703                           ;stkvar	_e @ sp[(-56)+34]
 10704  0105A4  0EEB               	movlw	-21
 10705  0105A6  AEE3               	btfss	plusw1,7,c
 10706  0105A8  D00E               	goto	u11050
 10707  0105AA  0EEA               	movlw	-22
 10708  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10709  0105B2  0EFC               	movlw	252
 10710  0105B4  5E32               	subwf	btemp^0,f,c
 10711  0105B6  0EEB               	movlw	-21
 10712  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10713  0105BE  0EFF               	movlw	255
 10714  0105C0  5A32               	subwfb	btemp^0,f,c
 10715  0105C2  A0D8               	btfss	status,0,c
 10716  0105C4  D018               	goto	l10373
 10717  0105C6                     u11050:
 10718                           
 10719                           ;stkvar	_e @ sp[(-56)+34]
 10720                           ;stkvar	_p @ sp[(-56)+40]
 10721  0105C6  0EF0               	movlw	-16
 10722  0105C8  50E3               	movf	plusw1,w,c
 10723  0105CA  0FFF               	addlw	255
 10724  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10725  0105CE  0EF1               	movlw	-15
 10726  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10727  0105D6  0EFF               	movlw	255
 10728  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10729  0105DA  0EEA               	movlw	-22
 10730  0105DC  50E3               	movf	plusw1,w,c
 10731  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10732  0105E0  503D               	movf	(btemp+11)^0,w,c
 10733  0105E2  0A80               	xorlw	128
 10734  0105E4  6E32               	movwf	btemp^0,c
 10735  0105E6  0EEB               	movlw	-21
 10736  0105E8  50E3               	movf	plusw1,w,c
 10737  0105EA  0A80               	xorlw	128
 10738  0105EC  5832               	subwfb	btemp^0,w,c
 10739  0105EE  A0D8               	btfss	status,0,c
 10740  0105F0  D002               	goto	l10373
 10741                           
 10742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10743  0105F2  0E66               	movlw	102
 10744  0105F4  D001               	goto	L9
 10745  0105F6                     l10373:
 10746                           
 10747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10748  0105F6  0E65               	movlw	101
 10749  0105F8                     L9:
 10750  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10751                           
 10752                           ;stkvar	_nmode @ sp[(-56)+55]
 10753  0105FA  0EFF               	movlw	-1
 10754  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10755  010602                     l10375:
 10756                           
 10757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10758                           ;stkvar	_p @ sp[(-56)+40]
 10759                           ;stkvar	_m @ sp[(-56)+48]
 10760  010602  0EF0               	movlw	-16
 10761  010604  006F FF8C  F032    	movff	plusw1,btemp
 10762  01060A  0EF8               	movlw	-8
 10763  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10764  010612  0EF1               	movlw	-15
 10765  010614  006F FF8C  F032    	movff	plusw1,btemp
 10766  01061A  0EF9               	movlw	-7
 10767  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10768                           
 10769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10770                           ;stkvar	_mode @ sp[(-56)+54]
 10771  010622  0EFE               	movlw	-2
 10772  010624  006F FF8C  F032    	movff	plusw1,btemp
 10773  01062A  0E67               	movlw	103
 10774  01062C  1832               	xorwf	btemp^0,w,c
 10775  01062E  A4D8               	btfss	status,2,c
 10776  010630  D00B               	goto	u11090
 10777                           
 10778                           ;stkvar	_nmode @ sp[(-56)+55]
 10779  010632  0EFF               	movlw	-1
 10780  010634  006F FF8C  F032    	movff	plusw1,btemp
 10781  01063A  0E66               	movlw	102
 10782  01063C  1832               	xorwf	btemp^0,w,c
 10783  01063E  A4D8               	btfss	status,2,c
 10784  010640  D014               	goto	l1893
 10785                           
 10786                           ;stkvar	_e @ sp[(-56)+34]
 10787  010642  0EEB               	movlw	-21
 10788  010644  AEE3               	btfss	plusw1,7,c
 10789  010646  D011               	goto	l1893
 10790  010648                     u11090:
 10791                           
 10792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10793                           ;stkvar	_m @ sp[(-56)+48]
 10794  010648  0EF8               	movlw	-8
 10795  01064A  50E3               	movf	plusw1,w,c
 10796  01064C  0F01               	addlw	1
 10797  01064E  6E32               	movwf	btemp^0,c
 10798  010650  0EF8               	movlw	-8
 10799  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 10800  010658  6A32               	clrf	btemp^0,c
 10801  01065A  0EF9               	movlw	-7
 10802  01065C  50E3               	movf	plusw1,w,c
 10803  01065E  2032               	addwfc	btemp^0,w,c
 10804  010660  6E32               	movwf	btemp^0,c
 10805  010662  0EF9               	movlw	-7
 10806  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 10807  01066A                     l1893:
 10808                           
 10809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10810                           ;stkvar	_nmode @ sp[(-56)+55]
 10811  01066A  0EFF               	movlw	-1
 10812  01066C  006F FF8C  F032    	movff	plusw1,btemp
 10813  010672  0E66               	movlw	102
 10814  010674  1832               	xorwf	btemp^0,w,c
 10815  010676  A4D8               	btfss	status,2,c
 10816  010678  D03B               	goto	l10395
 10817                           
 10818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10819                           ;stkvar	_e @ sp[(-56)+34]
 10820  01067A  0EEB               	movlw	-21
 10821  01067C  AEE3               	btfss	plusw1,7,c
 10822  01067E  D01C               	goto	l10391
 10823                           
 10824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10825  010680  0E00               	movlw	0
 10826  010682  6E3A               	movwf	(btemp+8)^0,c
 10827  010684  0E00               	movlw	0
 10828  010686  6E3B               	movwf	(btemp+9)^0,c
 10829  010688  0E80               	movlw	128
 10830  01068A  6E3C               	movwf	(btemp+10)^0,c
 10831  01068C  0E3F               	movlw	63
 10832  01068E  6E3D               	movwf	(btemp+11)^0,c
 10833                           
 10834                           ;stkvar	_u @ sp[(-56)+12]
 10835  010690  0ED4               	movlw	-44
 10836  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10837  010698  0ED5               	movlw	-43
 10838  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10839  0106A0  0ED6               	movlw	-42
 10840  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10841  0106A8  0ED7               	movlw	-41
 10842  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10843                           
 10844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10845                           ;stkvar	_e @ sp[(-56)+34]
 10846  0106B0  0EEA               	movlw	-22
 10847  0106B2  6AE3               	clrf	plusw1,c
 10848  0106B4  0EEB               	movlw	-21
 10849  0106B6  6AE3               	clrf	plusw1,c
 10850  0106B8                     l10391:
 10851                           
 10852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10853                           ;stkvar	_mode @ sp[(-56)+54]
 10854  0106B8  0EFE               	movlw	-2
 10855  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 10856  0106C0  0E67               	movlw	103
 10857  0106C2  1832               	xorwf	btemp^0,w,c
 10858  0106C4  B4D8               	btfsc	status,2,c
 10859  0106C6  D014               	goto	l10395
 10860                           
 10861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10862                           ;stkvar	_e @ sp[(-56)+34]
 10863                           ;stkvar	_m @ sp[(-56)+48]
 10864  0106C8  0EF8               	movlw	-8
 10865  0106CA  50E3               	movf	plusw1,w,c
 10866  0106CC  6E32               	movwf	btemp^0,c
 10867  0106CE  0EEA               	movlw	-22
 10868  0106D0  50E3               	movf	plusw1,w,c
 10869  0106D2  2632               	addwf	btemp^0,f,c
 10870  0106D4  0EF8               	movlw	-8
 10871  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10872  0106DC  0EF9               	movlw	-7
 10873  0106DE  50E3               	movf	plusw1,w,c
 10874  0106E0  6E32               	movwf	btemp^0,c
 10875  0106E2  0EEB               	movlw	-21
 10876  0106E4  50E3               	movf	plusw1,w,c
 10877  0106E6  2232               	addwfc	btemp^0,f,c
 10878  0106E8  0EF9               	movlw	-7
 10879  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10880  0106F0                     l10395:
 10881                           
 10882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10883                           ;stkvar	_i @ sp[(-56)+36]
 10884  0106F0  0EEC               	movlw	-20
 10885  0106F2  6AE3               	clrf	plusw1,c
 10886  0106F4  0EED               	movlw	-19
 10887  0106F6  6AE3               	clrf	plusw1,c
 10888                           
 10889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10890                           ;stkvar	_g @ sp[(-56)+16]
 10891  0106F8  0ED8               	movlw	-40
 10892  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 10893  010700  0ED9               	movlw	-39
 10894  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 10895  010708  0EDA               	movlw	-38
 10896  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10897  010710  0EDB               	movlw	-37
 10898  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 10899                           
 10900                           ;stkvar	_h @ sp[(-56)+24]
 10901  010718  0EE0               	movlw	-32
 10902  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10903  010720  0EE1               	movlw	-31
 10904  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10905  010728  0EE2               	movlw	-30
 10906  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10907  010730  0EE3               	movlw	-29
 10908  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10909                           
 10910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10911                           ;stkvar	_u @ sp[(-56)+12]
 10912  010738  0ED4               	movlw	-44
 10913  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 10914  010740  0ED5               	movlw	-43
 10915  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 10916  010748  0ED6               	movlw	-42
 10917  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 10918  010750  0ED7               	movlw	-41
 10919  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 10920                           
 10921                           ;stkvar	_ou @ sp[(-56)+28]
 10922  010758  0EE4               	movlw	-28
 10923  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10924  010760  0EE5               	movlw	-27
 10925  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10926  010768  0EE6               	movlw	-26
 10927  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10928  010770  0EE7               	movlw	-25
 10929  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10930                           
 10931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10932  010778  D0D6               	goto	l10411
 10933  01077A                     l10401:
 10934                           
 10935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10936                           ;stkvar	_u @ sp[(-56)+12]
 10937  01077A  0ED4               	movlw	-44
 10938  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10939  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10940  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10941  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10942                           
 10943                           ;stkvar	_h @ sp[(-60)+24]
 10944  010794  0EDC               	movlw	-36
 10945  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10946  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10947  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10948  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10949  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10950  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 10951  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10952  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10953  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10954  0107CA  ECE8  F0A1         	call	_floorf	;wreg free
 10955                           
 10956                           ;stkvar	_l @ sp[(-56)+20]
 10957  0107CE  0EDC               	movlw	-36
 10958  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10959  0107D6  0EDD               	movlw	-35
 10960  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10961  0107DE  0EDE               	movlw	-34
 10962  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10963  0107E6  0EDF               	movlw	-33
 10964  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10965                           
 10966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10967                           ;stkvar	_l @ sp[(-56)+20]
 10968  0107EE  0EDC               	movlw	-36
 10969  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10970  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10971  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10972  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10973  010808  ECA7  F0AE         	call	___fltol	;wreg free
 10974  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 10975  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 10976                           
 10977                           ;stkvar	_d @ sp[(-56)+44]
 10978  010818  0EF4               	movlw	-12
 10979  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10980  010820  0EF5               	movlw	-11
 10981  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10982                           
 10983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10984                           ;stkvar	_u @ sp[(-56)+12]
 10985  010828  0ED4               	movlw	-44
 10986  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10987  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10988  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10989  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10990                           
 10991                           ;stkvar	_l @ sp[(-60)+20]
 10992  010842  0ED8               	movlw	-40
 10993  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10994  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10995  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10996  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10997  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10998  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 10999  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11000  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11001  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11002                           
 11003                           ;stkvar	_h @ sp[(-60)+24]
 11004  010878  0EDC               	movlw	-36
 11005  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11006  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11007  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11008  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11009  010892  ECF3  F0BC         	call	___flsub	;wreg free
 11010                           
 11011                           ;stkvar	_h @ sp[(-56)+24]
 11012  010896  0EE0               	movlw	-32
 11013  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11014  01089E  0EE1               	movlw	-31
 11015  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11016  0108A6  0EE2               	movlw	-30
 11017  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11018  0108AE  0EE3               	movlw	-29
 11019  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11020                           
 11021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11022  0108B6  0E00               	movlw	0
 11023  0108B8  6EE6               	movwf	postinc1,c
 11024  0108BA  0E00               	movlw	0
 11025  0108BC  6EE6               	movwf	postinc1,c
 11026  0108BE  0E20               	movlw	32
 11027  0108C0  6EE6               	movwf	postinc1,c
 11028  0108C2  0E41               	movlw	65
 11029  0108C4  6EE6               	movwf	postinc1,c
 11030                           
 11031                           ;stkvar	_u @ sp[(-60)+12]
 11032  0108C6  0ED0               	movlw	-48
 11033  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11036  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11037  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11038                           
 11039                           ;stkvar	_u @ sp[(-56)+12]
 11040  0108E4  0ED4               	movlw	-44
 11041  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11042  0108EC  0ED5               	movlw	-43
 11043  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11044  0108F4  0ED6               	movlw	-42
 11045  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11046  0108FC  0ED7               	movlw	-41
 11047  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11050                           ;stkvar	_i @ sp[(-56)+36]
 11051  010904  0EEC               	movlw	-20
 11052  010906  50E3               	movf	plusw1,w,c
 11053  010908  0F01               	addlw	1
 11054  01090A  6E32               	movwf	btemp^0,c
 11055  01090C  0EEC               	movlw	-20
 11056  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11057  010914  6A32               	clrf	btemp^0,c
 11058  010916  0EED               	movlw	-19
 11059  010918  50E3               	movf	plusw1,w,c
 11060  01091A  2032               	addwfc	btemp^0,w,c
 11061  01091C  6E32               	movwf	btemp^0,c
 11062  01091E  0EED               	movlw	-19
 11063  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11064  010926                     l10411:
 11065                           
 11066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11067                           ;stkvar	_m @ sp[(-56)+48]
 11068                           ;stkvar	_i @ sp[(-56)+36]
 11069  010926  50E1               	movf	fsr1l,w,c
 11070  010928  0FEC               	addlw	-20
 11071  01092A  6ED9               	movwf	fsr2l,c
 11072  01092C  50E2               	movf	fsr1h,w,c
 11073  01092E  6EDA               	movwf	fsr2h,c
 11074  010930  0EFF               	movlw	255
 11075  010932  22DA               	addwfc	fsr2h,f,c
 11076  010934  0EF8               	movlw	-8
 11077  010936  50E3               	movf	plusw1,w,c
 11078  010938  5CDE               	subwf	postinc2,w,c
 11079  01093A  50DE               	movf	postinc2,w,c
 11080  01093C  0A80               	xorlw	128
 11081  01093E  6E32               	movwf	btemp^0,c
 11082  010940  0EF9               	movlw	-7
 11083  010942  50E3               	movf	plusw1,w,c
 11084  010944  0A80               	xorlw	128
 11085  010946  5832               	subwfb	btemp^0,w,c
 11086  010948  A0D8               	btfss	status,0,c
 11087  01094A  D717               	goto	l10401
 11088                           
 11089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11090  01094C  0E00               	movlw	0
 11091  01094E  6EE6               	movwf	postinc1,c
 11092  010950  0E00               	movlw	0
 11093  010952  6EE6               	movwf	postinc1,c
 11094  010954  0EA0               	movlw	160
 11095  010956  6EE6               	movwf	postinc1,c
 11096  010958  0E40               	movlw	64
 11097  01095A  6EE6               	movwf	postinc1,c
 11098                           
 11099                           ;stkvar	_u @ sp[(-60)+12]
 11100  01095C  0ED0               	movlw	-48
 11101  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11103  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11104  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11105  010976  ECC1  F08E         	call	___flmul	;wreg free
 11106                           
 11107                           ;stkvar	_l @ sp[(-56)+20]
 11108  01097A  0EDC               	movlw	-36
 11109  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11110  010982  0EDD               	movlw	-35
 11111  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11112  01098A  0EDE               	movlw	-34
 11113  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11114  010992  0EDF               	movlw	-33
 11115  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11116                           
 11117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11118                           ;stkvar	_l @ sp[(-56)+20]
 11119  01099A  0EDC               	movlw	-36
 11120  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11121  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11122  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11123  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11124                           
 11125                           ;stkvar	_h @ sp[(-60)+24]
 11126  0109B4  0EDC               	movlw	-36
 11127  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11128  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11129  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11130  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11131  0109CE  EC60  F0AF         	call	___flge	;wreg free
 11132  0109D2  A032               	btfss	btemp& (0+255),0,c
 11133  0109D4  D021               	goto	u11160
 11134                           
 11135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11136                           ;stkvar	_l @ sp[(-56)+20]
 11137                           
 11138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11139                           
 11140                           ;stkvar	_l @ sp[(-56)+20]
 11141                           
 11142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11143  0109D6  0EDC               	movlw	-36
 11144  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11145  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11146  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11147  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11148                           
 11149                           ;stkvar	_h @ sp[(-60)+24]
 11150  0109F0  0EDC               	movlw	-36
 11151  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11152  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11153  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11154  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  010A0A  EC00  F0B6         	call	___fleq	;wreg free
 11156  010A0E  A032               	btfss	btemp& (0+255),0,c
 11157  010A10  D01B               	goto	l10425
 11158                           
 11159                           ;stkvar	_d @ sp[(-56)+44]
 11160  010A12  0EF4               	movlw	-12
 11161  010A14  B0E3               	btfsc	plusw1,0,c
 11162  010A16  D018               	goto	l10425
 11163  010A18                     u11160:
 11164                           
 11165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11166  010A18  0E00               	movlw	0
 11167  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11168  010A1C  0E00               	movlw	0
 11169  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11170  010A20  0E00               	movlw	0
 11171  010A22  6E3C               	movwf	(btemp+10)^0,c
 11172  010A24  0E00               	movlw	0
 11173  010A26  6E3D               	movwf	(btemp+11)^0,c
 11174                           
 11175                           ;stkvar	_l @ sp[(-56)+20]
 11176  010A28  0EDC               	movlw	-36
 11177  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11178  010A30  0EDD               	movlw	-35
 11179  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11180  010A38  0EDE               	movlw	-34
 11181  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11182  010A40  0EDF               	movlw	-33
 11183  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11184  010A48                     l10425:
 11185                           
 11186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11187                           ;stkvar	_l @ sp[(-56)+20]
 11188  010A48  0EDC               	movlw	-36
 11189  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11190  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11191  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11192  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11193                           
 11194                           ;stkvar	_g @ sp[(-60)+16]
 11195  010A62  0ED4               	movlw	-44
 11196  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11197  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11198  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11199  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11201                           
 11202                           ;stkvar	_h @ sp[(-56)+24]
 11203  010A80  0EE0               	movlw	-32
 11204  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11205  010A88  0EE1               	movlw	-31
 11206  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11207  010A90  0EE2               	movlw	-30
 11208  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11209  010A98  0EE3               	movlw	-29
 11210  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11211                           
 11212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11213                           ;stkvar	_ou @ sp[(-56)+28]
 11214  010AA0  0EE4               	movlw	-28
 11215  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11216  010AA8  0EE5               	movlw	-27
 11217  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11218  010AB0  0EE6               	movlw	-26
 11219  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11220  010AB8  0EE7               	movlw	-25
 11221  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11222                           
 11223                           ;stkvar	_u @ sp[(-56)+12]
 11224  010AC0  0ED4               	movlw	-44
 11225  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11226  010AC8  0ED5               	movlw	-43
 11227  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11228  010AD0  0ED6               	movlw	-42
 11229  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11230  010AD8  0ED7               	movlw	-41
 11231  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11232                           
 11233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11234                           ;stkvar	_nmode @ sp[(-56)+55]
 11235  010AE0  0EFF               	movlw	-1
 11236  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11237  010AE8  0E65               	movlw	101
 11238  010AEA  1832               	xorwf	btemp^0,w,c
 11239  010AEC  B4D8               	btfsc	status,2,c
 11240  010AEE  D011               	goto	l10433
 11241                           
 11242                           ;stkvar	_e @ sp[(-56)+34]
 11243                           ;stkvar	_ne @ sp[(-56)+46]
 11244  010AF0  0EEA               	movlw	-22
 11245  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11246  010AF8  0EF6               	movlw	-10
 11247  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11248  010B00  0EEB               	movlw	-21
 11249  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11250  010B08  0EF7               	movlw	-9
 11251  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11252  010B10  D004               	goto	l1908
 11253  010B12                     l10433:
 11254                           
 11255                           ;stkvar	_ne @ sp[(-56)+46]
 11256  010B12  0EF6               	movlw	-10
 11257  010B14  6AE3               	clrf	plusw1,c
 11258  010B16  0EF7               	movlw	-9
 11259  010B18  6AE3               	clrf	plusw1,c
 11260  010B1A                     l1908:
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11263                           ;stkvar	_pp @ sp[(-56)+50]
 11264  010B1A  0EFA               	movlw	-6
 11265  010B1C  6AE3               	clrf	plusw1,c
 11266  010B1E  0EFB               	movlw	-5
 11267  010B20  6AE3               	clrf	plusw1,c
 11268                           
 11269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11270                           ;stkvar	_t @ sp[(-56)+52]
 11271  010B22  0EFC               	movlw	-4
 11272  010B24  6AE3               	clrf	plusw1,c
 11273  010B26  0EFD               	movlw	-3
 11274  010B28  6AE3               	clrf	plusw1,c
 11275                           
 11276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11277                           ;stkvar	_i @ sp[(-56)+36]
 11278  010B2A  0EEC               	movlw	-20
 11279  010B2C  6AE3               	clrf	plusw1,c
 11280  010B2E  0EED               	movlw	-19
 11281  010B30  6AE3               	clrf	plusw1,c
 11282                           
 11283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11284  010B32  D1B7               	goto	l10485
 11285  010B34                     l10435:
 11286                           
 11287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11288                           ;stkvar	_u @ sp[(-56)+12]
 11289  010B34  0ED4               	movlw	-44
 11290  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11291  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11292  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11293  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11294                           
 11295                           ;stkvar	_h @ sp[(-60)+24]
 11296  010B4E  0EDC               	movlw	-36
 11297  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11298  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11299  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11300  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11301  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11302  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11303  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11304  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11305  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11306  010B84  ECE8  F0A1         	call	_floorf	;wreg free
 11307                           
 11308                           ;stkvar	_l @ sp[(-56)+20]
 11309  010B88  0EDC               	movlw	-36
 11310  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11311  010B90  0EDD               	movlw	-35
 11312  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11313  010B98  0EDE               	movlw	-34
 11314  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11315  010BA0  0EDF               	movlw	-33
 11316  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11317                           
 11318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11319                           ;stkvar	_l @ sp[(-56)+20]
 11320  010BA8  0EDC               	movlw	-36
 11321  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11322  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11323  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11324  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11325  010BC2  ECA7  F0AE         	call	___fltol	;wreg free
 11326  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11327  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11328                           
 11329                           ;stkvar	_d @ sp[(-56)+44]
 11330  010BD2  0EF4               	movlw	-12
 11331  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11332  010BDA  0EF5               	movlw	-11
 11333  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11336  010BE2  B81F               	btfsc	_flags^0,4,c
 11337  010BE4  D026               	goto	l10449
 11338                           
 11339                           ;stkvar	_d @ sp[(-56)+44]
 11340  010BE6  0EF4               	movlw	-12
 11341  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11342  010BEE  0EF5               	movlw	-11
 11343  010BF0  50E3               	movf	plusw1,w,c
 11344  010BF2  1032               	iorwf	btemp^0,w,c
 11345  010BF4  A4D8               	btfss	status,2,c
 11346  010BF6  D01D               	goto	l10449
 11347                           
 11348                           ;stkvar	_mode @ sp[(-56)+54]
 11349  010BF8  0EFE               	movlw	-2
 11350  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11351  010C00  0E67               	movlw	103
 11352  010C02  1832               	xorwf	btemp^0,w,c
 11353  010C04  A4D8               	btfss	status,2,c
 11354  010C06  D015               	goto	l10449
 11355                           
 11356                           ;stkvar	_ne @ sp[(-56)+46]
 11357  010C08  0EF7               	movlw	-9
 11358  010C0A  AEE3               	btfss	plusw1,7,c
 11359  010C0C  D012               	goto	l10449
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11362                           ;stkvar	_t @ sp[(-56)+52]
 11363  010C0E  0EFC               	movlw	-4
 11364  010C10  50E3               	movf	plusw1,w,c
 11365  010C12  0F01               	addlw	1
 11366  010C14  6E32               	movwf	btemp^0,c
 11367  010C16  0EFC               	movlw	-4
 11368  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11369  010C1E  6A32               	clrf	btemp^0,c
 11370  010C20  0EFD               	movlw	-3
 11371  010C22  50E3               	movf	plusw1,w,c
 11372  010C24  2032               	addwfc	btemp^0,w,c
 11373  010C26  6E32               	movwf	btemp^0,c
 11374  010C28  0EFD               	movlw	-3
 11375  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11376                           
 11377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11378  010C30  D0AF               	goto	l10477
 11379  010C32                     l10449:
 11380                           
 11381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11382                           ;stkvar	_pp @ sp[(-56)+50]
 11383  010C32  0EFA               	movlw	-6
 11384  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11385  010C3A  0EFB               	movlw	-5
 11386  010C3C  50E3               	movf	plusw1,w,c
 11387  010C3E  1032               	iorwf	btemp^0,w,c
 11388  010C40  A4D8               	btfss	status,2,c
 11389  010C42  D070               	goto	l10469
 11390                           
 11391                           ;stkvar	_ne @ sp[(-56)+46]
 11392  010C44  0EF7               	movlw	-9
 11393  010C46  AEE3               	btfss	plusw1,7,c
 11394  010C48  D06D               	goto	l10469
 11395                           
 11396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11397                           ;stkvar	_n @ sp[(-56)+32]
 11398  010C4A  0EE8               	movlw	-24
 11399  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11400  010C52  0EE9               	movlw	-23
 11401  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11402  010C5A  0E40               	movlw	low _dbuf
 11403  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11404  010C5E  6ED9               	movwf	fsr2l,c
 11405  010C60  0E02               	movlw	high _dbuf
 11406  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11407  010C64  6EDA               	movwf	fsr2h,c
 11408  010C66  0E2E               	movlw	46
 11409  010C68  6EDF               	movwf	indf2,c
 11410                           
 11411                           ;stkvar	_n @ sp[(-56)+32]
 11412  010C6A  0EE8               	movlw	-24
 11413  010C6C  50E3               	movf	plusw1,w,c
 11414  010C6E  0F01               	addlw	1
 11415  010C70  6E32               	movwf	btemp^0,c
 11416  010C72  0EE8               	movlw	-24
 11417  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11418  010C7A  6A32               	clrf	btemp^0,c
 11419  010C7C  0EE9               	movlw	-23
 11420  010C7E  50E3               	movf	plusw1,w,c
 11421  010C80  2032               	addwfc	btemp^0,w,c
 11422  010C82  6E32               	movwf	btemp^0,c
 11423  010C84  0EE9               	movlw	-23
 11424  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11427                           ;stkvar	_w @ sp[(-56)+38]
 11428  010C8C  50E1               	movf	fsr1l,w,c
 11429  010C8E  0FEE               	addlw	-18
 11430  010C90  6ED9               	movwf	fsr2l,c
 11431  010C92  50E2               	movf	fsr1h,w,c
 11432  010C94  6EDA               	movwf	fsr2h,c
 11433  010C96  0EFF               	movlw	255
 11434  010C98  22DA               	addwfc	fsr2h,f,c
 11435  010C9A  06DE               	decf	postinc2,f,c
 11436  010C9C  0E00               	movlw	0
 11437  010C9E  5ADD               	subwfb	postdec2,f,c
 11438                           
 11439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11440  010CA0  0E01               	movlw	1
 11441  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11442  010CA4  0E00               	movlw	0
 11443  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11444                           
 11445                           ;stkvar	_pp @ sp[(-56)+50]
 11446  010CA8  0EFA               	movlw	-6
 11447  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11448  010CB0  0EFB               	movlw	-5
 11449  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11450  010CB8  D035               	goto	l10469
 11451  010CBA                     l10461:
 11452                           
 11453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11454                           ;stkvar	_n @ sp[(-56)+32]
 11455  010CBA  0EE8               	movlw	-24
 11456  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11457  010CC2  0EE9               	movlw	-23
 11458  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11459  010CCA  0E40               	movlw	low _dbuf
 11460  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11461  010CCE  6ED9               	movwf	fsr2l,c
 11462  010CD0  0E02               	movlw	high _dbuf
 11463  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11464  010CD4  6EDA               	movwf	fsr2h,c
 11465  010CD6  0E30               	movlw	48
 11466  010CD8  6EDF               	movwf	indf2,c
 11467                           
 11468                           ;stkvar	_n @ sp[(-56)+32]
 11469  010CDA  0EE8               	movlw	-24
 11470  010CDC  50E3               	movf	plusw1,w,c
 11471  010CDE  0F01               	addlw	1
 11472  010CE0  6E32               	movwf	btemp^0,c
 11473  010CE2  0EE8               	movlw	-24
 11474  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11475  010CEA  6A32               	clrf	btemp^0,c
 11476  010CEC  0EE9               	movlw	-23
 11477  010CEE  50E3               	movf	plusw1,w,c
 11478  010CF0  2032               	addwfc	btemp^0,w,c
 11479  010CF2  6E32               	movwf	btemp^0,c
 11480  010CF4  0EE9               	movlw	-23
 11481  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11482                           
 11483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11484                           ;stkvar	_w @ sp[(-56)+38]
 11485  010CFC  50E1               	movf	fsr1l,w,c
 11486  010CFE  0FEE               	addlw	-18
 11487  010D00  6ED9               	movwf	fsr2l,c
 11488  010D02  50E2               	movf	fsr1h,w,c
 11489  010D04  6EDA               	movwf	fsr2h,c
 11490  010D06  0EFF               	movlw	255
 11491  010D08  22DA               	addwfc	fsr2h,f,c
 11492  010D0A  06DE               	decf	postinc2,f,c
 11493  010D0C  0E00               	movlw	0
 11494  010D0E  5ADD               	subwfb	postdec2,f,c
 11495                           
 11496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11497                           ;stkvar	_t @ sp[(-56)+52]
 11498  010D10  50E1               	movf	fsr1l,w,c
 11499  010D12  0FFC               	addlw	-4
 11500  010D14  6ED9               	movwf	fsr2l,c
 11501  010D16  50E2               	movf	fsr1h,w,c
 11502  010D18  6EDA               	movwf	fsr2h,c
 11503  010D1A  0EFF               	movlw	255
 11504  010D1C  22DA               	addwfc	fsr2h,f,c
 11505  010D1E  06DE               	decf	postinc2,f,c
 11506  010D20  0E00               	movlw	0
 11507  010D22  5ADD               	subwfb	postdec2,f,c
 11508  010D24                     l10469:
 11509                           
 11510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11511                           ;stkvar	_t @ sp[(-56)+52]
 11512  010D24  0EFC               	movlw	-4
 11513  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11514  010D2C  0EFD               	movlw	-3
 11515  010D2E  50E3               	movf	plusw1,w,c
 11516  010D30  1032               	iorwf	btemp^0,w,c
 11517  010D32  A4D8               	btfss	status,2,c
 11518  010D34  D7C2               	goto	l10461
 11519                           
 11520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11521                           ;stkvar	_n @ sp[(-56)+32]
 11522  010D36  0EE8               	movlw	-24
 11523  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11524  010D3E  0EE9               	movlw	-23
 11525  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11526  010D46  0E40               	movlw	low _dbuf
 11527  010D48  243C               	addwf	(btemp+10)^0,w,c
 11528  010D4A  6ED9               	movwf	fsr2l,c
 11529  010D4C  0E02               	movlw	high _dbuf
 11530  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11531  010D50  6EDA               	movwf	fsr2h,c
 11532                           
 11533                           ;stkvar	_d @ sp[(-56)+44]
 11534  010D52  0EF4               	movlw	-12
 11535  010D54  50E3               	movf	plusw1,w,c
 11536  010D56  0F30               	addlw	48
 11537  010D58  6EDF               	movwf	indf2,c
 11538                           
 11539                           ;stkvar	_n @ sp[(-56)+32]
 11540  010D5A  0EE8               	movlw	-24
 11541  010D5C  50E3               	movf	plusw1,w,c
 11542  010D5E  0F01               	addlw	1
 11543  010D60  6E32               	movwf	btemp^0,c
 11544  010D62  0EE8               	movlw	-24
 11545  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11546  010D6A  6A32               	clrf	btemp^0,c
 11547  010D6C  0EE9               	movlw	-23
 11548  010D6E  50E3               	movf	plusw1,w,c
 11549  010D70  2032               	addwfc	btemp^0,w,c
 11550  010D72  6E32               	movwf	btemp^0,c
 11551  010D74  0EE9               	movlw	-23
 11552  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11553                           
 11554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11555                           ;stkvar	_w @ sp[(-56)+38]
 11556  010D7C  50E1               	movf	fsr1l,w,c
 11557  010D7E  0FEE               	addlw	-18
 11558  010D80  6ED9               	movwf	fsr2l,c
 11559  010D82  50E2               	movf	fsr1h,w,c
 11560  010D84  6EDA               	movwf	fsr2h,c
 11561  010D86  0EFF               	movlw	255
 11562  010D88  22DA               	addwfc	fsr2h,f,c
 11563  010D8A  06DE               	decf	postinc2,f,c
 11564  010D8C  0E00               	movlw	0
 11565  010D8E  5ADD               	subwfb	postdec2,f,c
 11566  010D90                     l10477:
 11567                           
 11568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11569                           ;stkvar	_u @ sp[(-56)+12]
 11570  010D90  0ED4               	movlw	-44
 11571  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11574  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11575                           
 11576                           ;stkvar	_l @ sp[(-60)+20]
 11577  010DAA  0ED8               	movlw	-40
 11578  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11579  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11580  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11581  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11582  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11583  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11584  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11585  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11586  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11587                           
 11588                           ;stkvar	_h @ sp[(-60)+24]
 11589  010DE0  0EDC               	movlw	-36
 11590  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11591  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11592  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11593  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11594  010DFA  ECF3  F0BC         	call	___flsub	;wreg free
 11595                           
 11596                           ;stkvar	_h @ sp[(-56)+24]
 11597  010DFE  0EE0               	movlw	-32
 11598  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11599  010E06  0EE1               	movlw	-31
 11600  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11601  010E0E  0EE2               	movlw	-30
 11602  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11603  010E16  0EE3               	movlw	-29
 11604  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11605                           
 11606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11607  010E1E  0E00               	movlw	0
 11608  010E20  6EE6               	movwf	postinc1,c
 11609  010E22  0E00               	movlw	0
 11610  010E24  6EE6               	movwf	postinc1,c
 11611  010E26  0E20               	movlw	32
 11612  010E28  6EE6               	movwf	postinc1,c
 11613  010E2A  0E41               	movlw	65
 11614  010E2C  6EE6               	movwf	postinc1,c
 11615                           
 11616                           ;stkvar	_u @ sp[(-60)+12]
 11617  010E2E  0ED0               	movlw	-48
 11618  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11619  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11620  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11621  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11622  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11623                           
 11624                           ;stkvar	_u @ sp[(-56)+12]
 11625  010E4C  0ED4               	movlw	-44
 11626  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11627  010E54  0ED5               	movlw	-43
 11628  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11629  010E5C  0ED6               	movlw	-42
 11630  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11631  010E64  0ED7               	movlw	-41
 11632  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11633                           
 11634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11635                           ;stkvar	_ne @ sp[(-56)+46]
 11636  010E6C  50E1               	movf	fsr1l,w,c
 11637  010E6E  0FF6               	addlw	-10
 11638  010E70  6ED9               	movwf	fsr2l,c
 11639  010E72  50E2               	movf	fsr1h,w,c
 11640  010E74  6EDA               	movwf	fsr2h,c
 11641  010E76  0EFF               	movlw	255
 11642  010E78  22DA               	addwfc	fsr2h,f,c
 11643  010E7A  06DE               	decf	postinc2,f,c
 11644  010E7C  0E00               	movlw	0
 11645  010E7E  5ADD               	subwfb	postdec2,f,c
 11646                           
 11647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11648                           ;stkvar	_i @ sp[(-56)+36]
 11649  010E80  0EEC               	movlw	-20
 11650  010E82  50E3               	movf	plusw1,w,c
 11651  010E84  0F01               	addlw	1
 11652  010E86  6E32               	movwf	btemp^0,c
 11653  010E88  0EEC               	movlw	-20
 11654  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11655  010E90  6A32               	clrf	btemp^0,c
 11656  010E92  0EED               	movlw	-19
 11657  010E94  50E3               	movf	plusw1,w,c
 11658  010E96  2032               	addwfc	btemp^0,w,c
 11659  010E98  6E32               	movwf	btemp^0,c
 11660  010E9A  0EED               	movlw	-19
 11661  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11662  010EA2                     l10485:
 11663                           
 11664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11665                           ;stkvar	_m @ sp[(-56)+48]
 11666                           ;stkvar	_i @ sp[(-56)+36]
 11667  010EA2  50E1               	movf	fsr1l,w,c
 11668  010EA4  0FEC               	addlw	-20
 11669  010EA6  6ED9               	movwf	fsr2l,c
 11670  010EA8  50E2               	movf	fsr1h,w,c
 11671  010EAA  6EDA               	movwf	fsr2h,c
 11672  010EAC  0EFF               	movlw	255
 11673  010EAE  22DA               	addwfc	fsr2h,f,c
 11674  010EB0  0EF8               	movlw	-8
 11675  010EB2  50E3               	movf	plusw1,w,c
 11676  010EB4  5CDE               	subwf	postinc2,w,c
 11677  010EB6  50DE               	movf	postinc2,w,c
 11678  010EB8  0A80               	xorlw	128
 11679  010EBA  6E32               	movwf	btemp^0,c
 11680  010EBC  0EF9               	movlw	-7
 11681  010EBE  50E3               	movf	plusw1,w,c
 11682  010EC0  0A80               	xorlw	128
 11683  010EC2  5832               	subwfb	btemp^0,w,c
 11684  010EC4  B0D8               	btfsc	status,0,c
 11685  010EC6  D00E               	goto	u11260
 11686                           
 11687                           ;stkvar	_n @ sp[(-56)+32]
 11688  010EC8  0EE9               	movlw	-23
 11689  010ECA  BEE3               	btfsc	plusw1,7,c
 11690  010ECC  D633               	goto	l10435
 11691  010ECE  0EE9               	movlw	-23
 11692  010ED0  50E3               	movf	plusw1,w,c
 11693  010ED2  E108               	bnz	u11260
 11694  010ED4  0EE8               	movlw	-24
 11695  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11696  010EDC  0E4B               	movlw	75
 11697  010EDE  5E32               	subwf	btemp^0,f,c
 11698  010EE0  A0D8               	btfss	status,0,c
 11699  010EE2  D628               	goto	l10435
 11700  010EE4                     u11260:
 11701                           
 11702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11703                           ;stkvar	_pp @ sp[(-56)+50]
 11704  010EE4  0EFA               	movlw	-6
 11705  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11706  010EEC  0EFB               	movlw	-5
 11707  010EEE  50E3               	movf	plusw1,w,c
 11708  010EF0  1032               	iorwf	btemp^0,w,c
 11709  010EF2  B4D8               	btfsc	status,2,c
 11710  010EF4  A81F               	btfss	_flags^0,4,c
 11711  010EF6  D021               	goto	l10497
 11712                           
 11713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11714                           ;stkvar	_n @ sp[(-56)+32]
 11715  010EF8  0EE8               	movlw	-24
 11716  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11717  010F00  0EE9               	movlw	-23
 11718  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11719  010F08  0E40               	movlw	low _dbuf
 11720  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11721  010F0C  6ED9               	movwf	fsr2l,c
 11722  010F0E  0E02               	movlw	high _dbuf
 11723  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11724  010F12  6EDA               	movwf	fsr2h,c
 11725  010F14  0E2E               	movlw	46
 11726  010F16  6EDF               	movwf	indf2,c
 11727                           
 11728                           ;stkvar	_n @ sp[(-56)+32]
 11729  010F18  0EE8               	movlw	-24
 11730  010F1A  50E3               	movf	plusw1,w,c
 11731  010F1C  0F01               	addlw	1
 11732  010F1E  6E32               	movwf	btemp^0,c
 11733  010F20  0EE8               	movlw	-24
 11734  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11735  010F28  6A32               	clrf	btemp^0,c
 11736  010F2A  0EE9               	movlw	-23
 11737  010F2C  50E3               	movf	plusw1,w,c
 11738  010F2E  2032               	addwfc	btemp^0,w,c
 11739  010F30  6E32               	movwf	btemp^0,c
 11740  010F32  0EE9               	movlw	-23
 11741  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11742  010F3A                     l10497:
 11743                           
 11744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11745                           ;stkvar	_n @ sp[(-56)+32]
 11746  010F3A  0EE8               	movlw	-24
 11747  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11748  010F42  0EE9               	movlw	-23
 11749  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11750  010F4A  0E40               	movlw	low _dbuf
 11751  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11752  010F4E  6ED9               	movwf	fsr2l,c
 11753  010F50  0E02               	movlw	high _dbuf
 11754  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11755  010F54  6EDA               	movwf	fsr2h,c
 11756  010F56  0E00               	movlw	0
 11757  010F58  6EDF               	movwf	indf2,c
 11758                           
 11759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11760                           ;stkvar	_nmode @ sp[(-56)+55]
 11761  010F5A  0EFF               	movlw	-1
 11762  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11763  010F62  0E65               	movlw	101
 11764  010F64  1832               	xorwf	btemp^0,w,c
 11765  010F66  A4D8               	btfss	status,2,c
 11766  010F68  EF16  F081         	goto	l10301
 11767                           
 11768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11769  010F6C  0E4F               	movlw	79
 11770  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11771  010F70  0E00               	movlw	0
 11772  010F72  6E3D               	movwf	(btemp+11)^0,c
 11773                           
 11774                           ;stkvar	_i @ sp[(-56)+36]
 11775  010F74  0EEC               	movlw	-20
 11776  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11777  010F7C  0EED               	movlw	-19
 11778  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11779                           
 11780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11781                           ;stkvar	_i @ sp[(-56)+36]
 11782  010F84  0EEC               	movlw	-20
 11783  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11784  010F8C  0EED               	movlw	-19
 11785  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11786  010F94  0E40               	movlw	low _dbuf
 11787  010F96  243C               	addwf	(btemp+10)^0,w,c
 11788  010F98  6ED9               	movwf	fsr2l,c
 11789  010F9A  0E02               	movlw	high _dbuf
 11790  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 11791  010F9E  6EDA               	movwf	fsr2h,c
 11792  010FA0  0E00               	movlw	0
 11793  010FA2  6EDF               	movwf	indf2,c
 11794                           
 11795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11796                           ;stkvar	_sign @ sp[(-56)+42]
 11797  010FA4  0EF2               	movlw	-14
 11798  010FA6  6AE3               	clrf	plusw1,c
 11799  010FA8  0EF3               	movlw	-13
 11800  010FAA  6AE3               	clrf	plusw1,c
 11801                           
 11802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11803                           ;stkvar	_e @ sp[(-56)+34]
 11804  010FAC  0EEB               	movlw	-21
 11805  010FAE  AEE3               	btfss	plusw1,7,c
 11806  010FB0  D012               	goto	l10511
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11809  010FB2  0E01               	movlw	1
 11810  010FB4  6E3C               	movwf	(btemp+10)^0,c
 11811  010FB6  0E00               	movlw	0
 11812  010FB8  6E3D               	movwf	(btemp+11)^0,c
 11813                           
 11814                           ;stkvar	_sign @ sp[(-56)+42]
 11815  010FBA  0EF2               	movlw	-14
 11816  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11817  010FC2  0EF3               	movlw	-13
 11818  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11819                           
 11820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11821                           ;stkvar	_e @ sp[(-56)+34]
 11822                           ;stkvar	_e @ sp[(-56)+34]
 11823  010FCA  0EEA               	movlw	-22
 11824  010FCC  6CE3               	negf	plusw1,c
 11825  010FCE  0EEB               	movlw	-21
 11826  010FD0  1EE3               	comf	plusw1,f,c
 11827  010FD2  B0D8               	btfsc	status,0,c
 11828  010FD4  2AE3               	incf	plusw1,f,c
 11829  010FD6                     l10511:
 11830                           
 11831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11832  010FD6  0E02               	movlw	2
 11833  010FD8  6E3C               	movwf	(btemp+10)^0,c
 11834  010FDA  0E00               	movlw	0
 11835  010FDC  6E3D               	movwf	(btemp+11)^0,c
 11836                           
 11837                           ;stkvar	_p @ sp[(-56)+40]
 11838  010FDE  0EF0               	movlw	-16
 11839  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11840  010FE6  0EF1               	movlw	-15
 11841  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11844  010FEE  D051               	goto	l10523
 11845  010FF0                     l10513:
 11846                           
 11847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11848                           ;stkvar	_i @ sp[(-56)+36]
 11849  010FF0  50E1               	movf	fsr1l,w,c
 11850  010FF2  0FEC               	addlw	-20
 11851  010FF4  6ED9               	movwf	fsr2l,c
 11852  010FF6  50E2               	movf	fsr1h,w,c
 11853  010FF8  6EDA               	movwf	fsr2h,c
 11854  010FFA  0EFF               	movlw	255
 11855  010FFC  22DA               	addwfc	fsr2h,f,c
 11856  010FFE  06DE               	decf	postinc2,f,c
 11857  011000  0E00               	movlw	0
 11858  011002  5ADD               	subwfb	postdec2,f,c
 11859                           
 11860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11861                           ;stkvar	_i @ sp[(-56)+36]
 11862  011004  0EEC               	movlw	-20
 11863  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 11864  01100C  0EED               	movlw	-19
 11865  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 11866  011014  0E40               	movlw	low _dbuf
 11867  011016  243C               	addwf	(btemp+10)^0,w,c
 11868  011018  6ED9               	movwf	fsr2l,c
 11869  01101A  0E02               	movlw	high _dbuf
 11870  01101C  203D               	addwfc	(btemp+11)^0,w,c
 11871  01101E  6EDA               	movwf	fsr2h,c
 11872  011020  0E0A               	movlw	10
 11873  011022  6EE6               	movwf	postinc1,c
 11874  011024  0E00               	movlw	0
 11875  011026  6EE6               	movwf	postinc1,c
 11876                           
 11877                           ;stkvar	_e @ sp[(-58)+34]
 11878  011028  0EE8               	movlw	-24
 11879  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11880  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11881  011036  EC85  F0B2         	call	___awmod	;wreg free
 11882  01103A  5032               	movf	btemp^0,w,c
 11883  01103C  0F30               	addlw	48
 11884  01103E  6EDF               	movwf	indf2,c
 11885                           
 11886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11887  011040  0E0A               	movlw	10
 11888  011042  6EE6               	movwf	postinc1,c
 11889  011044  0E00               	movlw	0
 11890  011046  6EE6               	movwf	postinc1,c
 11891                           
 11892                           ;stkvar	_e @ sp[(-58)+34]
 11893  011048  0EE8               	movlw	-24
 11894  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11895  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11896  011056  EC11  F0B0         	call	___awdiv	;wreg free
 11897                           
 11898                           ;stkvar	_e @ sp[(-56)+34]
 11899  01105A  0EEA               	movlw	-22
 11900  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11901  011062  0EEB               	movlw	-21
 11902  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11903                           
 11904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11905                           ;stkvar	_p @ sp[(-56)+40]
 11906  01106A  50E1               	movf	fsr1l,w,c
 11907  01106C  0FF0               	addlw	-16
 11908  01106E  6ED9               	movwf	fsr2l,c
 11909  011070  50E2               	movf	fsr1h,w,c
 11910  011072  6EDA               	movwf	fsr2h,c
 11911  011074  0EFF               	movlw	255
 11912  011076  22DA               	addwfc	fsr2h,f,c
 11913  011078  06DE               	decf	postinc2,f,c
 11914  01107A  0E00               	movlw	0
 11915  01107C  5ADD               	subwfb	postdec2,f,c
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11918                           ;stkvar	_w @ sp[(-56)+38]
 11919  01107E  50E1               	movf	fsr1l,w,c
 11920  011080  0FEE               	addlw	-18
 11921  011082  6ED9               	movwf	fsr2l,c
 11922  011084  50E2               	movf	fsr1h,w,c
 11923  011086  6EDA               	movwf	fsr2h,c
 11924  011088  0EFF               	movlw	255
 11925  01108A  22DA               	addwfc	fsr2h,f,c
 11926  01108C  06DE               	decf	postinc2,f,c
 11927  01108E  0E00               	movlw	0
 11928  011090  5ADD               	subwfb	postdec2,f,c
 11929  011092                     l10523:
 11930                           
 11931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11932                           ;stkvar	_e @ sp[(-56)+34]
 11933  011092  0EEA               	movlw	-22
 11934  011094  006F FF8C  F032    	movff	plusw1,btemp
 11935  01109A  0EEB               	movlw	-21
 11936  01109C  50E3               	movf	plusw1,w,c
 11937  01109E  1032               	iorwf	btemp^0,w,c
 11938  0110A0  A4D8               	btfss	status,2,c
 11939  0110A2  D7A6               	goto	l10513
 11940                           
 11941                           ;stkvar	_p @ sp[(-56)+40]
 11942  0110A4  0EF1               	movlw	-15
 11943  0110A6  BEE3               	btfsc	plusw1,7,c
 11944  0110A8  D007               	goto	u11320
 11945  0110AA  0EF1               	movlw	-15
 11946  0110AC  50E3               	movf	plusw1,w,c
 11947  0110AE  E1A0               	bnz	l10513
 11948  0110B0  0EF0               	movlw	-16
 11949  0110B2  04E3               	decf	plusw1,w,c
 11950  0110B4  B0D8               	btfsc	status,0,c
 11951  0110B6  D79C               	goto	l10513
 11952  0110B8                     u11320:
 11953                           
 11954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11955                           ;stkvar	_i @ sp[(-56)+36]
 11956  0110B8  50E1               	movf	fsr1l,w,c
 11957  0110BA  0FEC               	addlw	-20
 11958  0110BC  6ED9               	movwf	fsr2l,c
 11959  0110BE  50E2               	movf	fsr1h,w,c
 11960  0110C0  6EDA               	movwf	fsr2h,c
 11961  0110C2  0EFF               	movlw	255
 11962  0110C4  22DA               	addwfc	fsr2h,f,c
 11963  0110C6  06DE               	decf	postinc2,f,c
 11964  0110C8  0E00               	movlw	0
 11965  0110CA  5ADD               	subwfb	postdec2,f,c
 11966                           
 11967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11968                           ;stkvar	_sign @ sp[(-56)+42]
 11969  0110CC  0EF2               	movlw	-14
 11970  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 11971  0110D4  0EF3               	movlw	-13
 11972  0110D6  50E3               	movf	plusw1,w,c
 11973  0110D8  1032               	iorwf	btemp^0,w,c
 11974  0110DA  A4D8               	btfss	status,2,c
 11975  0110DC  D002               	goto	l10533
 11976  0110DE  0E2B               	movlw	43
 11977  0110E0  D001               	goto	L10
 11978  0110E2                     l10533:
 11979  0110E2  0E2D               	movlw	45
 11980  0110E4                     L10:
 11981  0110E4  6E3C               	movwf	(btemp+10)^0,c
 11982  0110E6  0E00               	movlw	0
 11983  0110E8  6E3D               	movwf	(btemp+11)^0,c
 11984                           
 11985                           ;stkvar	_efgtoa$4387 @ sp[(-56)+4]
 11986  0110EA  0ECC               	movlw	-52
 11987  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11988  0110F2  0ECD               	movlw	-51
 11989  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11990                           
 11991                           ;stkvar	_efgtoa$4387 @ sp[(-56)+4]
 11992                           ;stkvar	_i @ sp[(-56)+36]
 11993  0110FA  0EEC               	movlw	-20
 11994  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11995  011102  0EED               	movlw	-19
 11996  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 11997  01110A  0E40               	movlw	low _dbuf
 11998  01110C  243C               	addwf	(btemp+10)^0,w,c
 11999  01110E  6ED9               	movwf	fsr2l,c
 12000  011110  0E02               	movlw	high _dbuf
 12001  011112  203D               	addwfc	(btemp+11)^0,w,c
 12002  011114  6EDA               	movwf	fsr2h,c
 12003  011116  0ECC               	movlw	-52
 12004  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12005                           
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12007                           ;stkvar	_w @ sp[(-56)+38]
 12008  01111E  50E1               	movf	fsr1l,w,c
 12009  011120  0FEE               	addlw	-18
 12010  011122  6ED9               	movwf	fsr2l,c
 12011  011124  50E2               	movf	fsr1h,w,c
 12012  011126  6EDA               	movwf	fsr2h,c
 12013  011128  0EFF               	movlw	255
 12014  01112A  22DA               	addwfc	fsr2h,f,c
 12015  01112C  06DE               	decf	postinc2,f,c
 12016  01112E  0E00               	movlw	0
 12017  011130  5ADD               	subwfb	postdec2,f,c
 12018                           
 12019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12020                           ;stkvar	_i @ sp[(-56)+36]
 12021  011132  50E1               	movf	fsr1l,w,c
 12022  011134  0FEC               	addlw	-20
 12023  011136  6ED9               	movwf	fsr2l,c
 12024  011138  50E2               	movf	fsr1h,w,c
 12025  01113A  6EDA               	movwf	fsr2h,c
 12026  01113C  0EFF               	movlw	255
 12027  01113E  22DA               	addwfc	fsr2h,f,c
 12028  011140  06DE               	decf	postinc2,f,c
 12029  011142  0E00               	movlw	0
 12030  011144  5ADD               	subwfb	postdec2,f,c
 12031  011146  0EBF               	movlw	191
 12032  011148  6E3C               	movwf	(btemp+10)^0,c
 12033  01114A  0EFF               	movlw	255
 12034  01114C  6E3D               	movwf	(btemp+11)^0,c
 12035                           
 12036                           ;stkvar	_c @ sp[(-56)+-7]
 12037  01114E  0EC1               	movlw	-63
 12038  011150  50E3               	movf	plusw1,w,c
 12039  011152  6E3A               	movwf	(btemp+8)^0,c
 12040  011154  6A3B               	clrf	(btemp+9)^0,c
 12041  011156  503C               	movf	(btemp+10)^0,w,c
 12042  011158  263A               	addwf	(btemp+8)^0,f,c
 12043  01115A  503D               	movf	(btemp+11)^0,w,c
 12044  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12045  01115E  503B               	movf	(btemp+9)^0,w,c
 12046  011160  E106               	bnz	u11340
 12047  011162  0E1A               	movlw	26
 12048  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12049  011166  B0D8               	btfsc	status,0,c
 12050  011168  D002               	goto	u11340
 12051  01116A  0E01               	movlw	1
 12052  01116C  D001               	goto	u11350
 12053  01116E                     u11340:
 12054  01116E  0E00               	movlw	0
 12055  011170                     u11350:
 12056  011170  6E3C               	movwf	(btemp+10)^0,c
 12057  011172  6A3D               	clrf	(btemp+11)^0,c
 12058                           
 12059                           ;stkvar	_efgtoa$4389 @ sp[(-56)+0]
 12060  011174  0EC8               	movlw	-56
 12061  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12062  01117C  0EC9               	movlw	-55
 12063  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12064                           
 12065                           ;stkvar	_efgtoa$4389 @ sp[(-56)+0]
 12066  011184  0EC8               	movlw	-56
 12067  011186  006F FF8C  F032    	movff	plusw1,btemp
 12068  01118C  0EC9               	movlw	-55
 12069  01118E  50E3               	movf	plusw1,w,c
 12070  011190  1032               	iorwf	btemp^0,w,c
 12071  011192  A4D8               	btfss	status,2,c
 12072  011194  D002               	goto	l10549
 12073  011196  0E65               	movlw	101
 12074  011198  D001               	goto	L11
 12075  01119A                     l10549:
 12076  01119A  0E45               	movlw	69
 12077  01119C                     L11:
 12078  01119C  6E3C               	movwf	(btemp+10)^0,c
 12079  01119E  0E00               	movlw	0
 12080  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12081                           
 12082                           ;stkvar	_efgtoa$4388 @ sp[(-56)+2]
 12083  0111A2  0ECA               	movlw	-54
 12084  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12085  0111AA  0ECB               	movlw	-53
 12086  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12087                           
 12088                           ;stkvar	_efgtoa$4388 @ sp[(-56)+2]
 12089                           ;stkvar	_i @ sp[(-56)+36]
 12090  0111B2  0EEC               	movlw	-20
 12091  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12092  0111BA  0EED               	movlw	-19
 12093  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12094  0111C2  0E40               	movlw	low _dbuf
 12095  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12096  0111C6  6ED9               	movwf	fsr2l,c
 12097  0111C8  0E02               	movlw	high _dbuf
 12098  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12099  0111CC  6EDA               	movwf	fsr2h,c
 12100  0111CE  0ECA               	movlw	-54
 12101  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12102                           
 12103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12104                           ;stkvar	_w @ sp[(-56)+38]
 12105  0111D6  50E1               	movf	fsr1l,w,c
 12106  0111D8  0FEE               	addlw	-18
 12107  0111DA  6ED9               	movwf	fsr2l,c
 12108  0111DC  50E2               	movf	fsr1h,w,c
 12109  0111DE  6EDA               	movwf	fsr2h,c
 12110  0111E0  0EFF               	movlw	255
 12111  0111E2  22DA               	addwfc	fsr2h,f,c
 12112  0111E4  06DE               	decf	postinc2,f,c
 12113  0111E6  0E00               	movlw	0
 12114  0111E8  5ADD               	subwfb	postdec2,f,c
 12115                           
 12116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12117                           ;stkvar	_i @ sp[(-56)+36]
 12118  0111EA  0EEC               	movlw	-20
 12119  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12120  0111F2  0EED               	movlw	-19
 12121  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12122  0111FA  0E40               	movlw	low _dbuf
 12123  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12124  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12125  011200  0E02               	movlw	high _dbuf
 12126  011202  203D               	addwfc	(btemp+11)^0,w,c
 12127  011204  6E3B               	movwf	(btemp+9)^0,c
 12128  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12129  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12130                           
 12131                           ;stkvar	_n @ sp[(-58)+32]
 12132  011212  0E40               	movlw	low _dbuf
 12133  011214  6E3C               	movwf	(btemp+10)^0,c
 12134  011216  0E02               	movlw	high _dbuf
 12135  011218  6E3D               	movwf	(btemp+11)^0,c
 12136  01121A  0EE6               	movlw	-26
 12137  01121C  50E3               	movf	plusw1,w,c
 12138  01121E  263C               	addwf	(btemp+10)^0,f,c
 12139  011220  0EE7               	movlw	-25
 12140  011222  50E3               	movf	plusw1,w,c
 12141  011224  223D               	addwfc	(btemp+11)^0,f,c
 12142  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12143  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12144  011232  EC96  F0B5         	call	_strcpy	;wreg free
 12145  011236  EF16  F081         	goto	l10301
 12146  01123A                     l1864:
 12147                           
 12148                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12149  01123A  0EC1               	movlw	193
 12150  01123C  26E1               	addwf	fsr1l,f,c
 12151  01123E  0EFF               	movlw	255
 12152  011240  22E2               	addwfc	fsr1h,f,c
 12153  011242  0012               	return		;funcret
 12154  011244                     __end_of_efgtoa:
 12155                           	opt callstack 0
 12156                           
 12157 ;; *************** function _tolower *****************
 12158 ;; Defined at:
 12159 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  c               2  [STACK] int 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;		None
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  2  [STACK] int 
 12166 ;; Registers used:
 12167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/5
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12177 ;;Total ram usage:        0 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    7
 12180 ;; This function calls:
 12181 ;;		_isupper
 12182 ;; This function is called by:
 12183 ;;		_efgtoa
 12184 ;;		_vfpfcnvrt
 12185 ;; This function uses a reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text46
 12189  0172E2                     __ptext46:
 12190                           	opt callstack 0
 12191  0172E2                     _tolower:
 12192                           	opt callstack 0
 12193                           
 12194                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12195  0172E2  52E6               	movf	postinc1,f,c
 12196  0172E4  52E6               	movf	postinc1,f,c
 12197                           
 12198                           ;stkvar	_c @ sp[(-2)+-2]
 12199                           
 12200                           ;incstack = 0
 12201  0172E6  0EFC               	movlw	-4
 12202  0172E8  50E3               	movf	plusw1,w,c
 12203  0172EA  0FBF               	addlw	191
 12204  0172EC  6E3C               	movwf	(btemp+10)^0,c
 12205  0172EE  0EFD               	movlw	-3
 12206  0172F0  006F FF8C  F03D    	movff	plusw1,btemp+11
 12207  0172F6  0EFF               	movlw	255
 12208  0172F8  223D               	addwfc	(btemp+11)^0,f,c
 12209  0172FA  503D               	movf	(btemp+11)^0,w,c
 12210  0172FC  E106               	bnz	u9430
 12211  0172FE  0E1A               	movlw	26
 12212  017300  5C3C               	subwf	(btemp+10)^0,w,c
 12213  017302  B0D8               	btfsc	status,0,c
 12214  017304  D002               	goto	u9430
 12215  017306  0E01               	movlw	1
 12216  017308  D001               	goto	u9440
 12217  01730A                     u9430:
 12218  01730A  0E00               	movlw	0
 12219  01730C                     u9440:
 12220  01730C  6E3C               	movwf	(btemp+10)^0,c
 12221  01730E  6A3D               	clrf	(btemp+11)^0,c
 12222                           
 12223                           ;stkvar	_tolower$5055 @ sp[(-2)+0]
 12224  017310  0EFE               	movlw	-2
 12225  017312  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12226  017318  0EFF               	movlw	-1
 12227  01731A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12228                           
 12229                           ;stkvar	_tolower$5055 @ sp[(-2)+0]
 12230  017320  0EFE               	movlw	-2
 12231  017322  006F FF8C  F032    	movff	plusw1,btemp
 12232  017328  0EFF               	movlw	-1
 12233  01732A  50E3               	movf	plusw1,w,c
 12234  01732C  1032               	iorwf	btemp^0,w,c
 12235  01732E  B4D8               	btfsc	status,2,c
 12236  017330  D00D               	goto	l9527
 12237                           
 12238                           ;stkvar	_c @ sp[(-2)+-2]
 12239  017332  0EFC               	movlw	-4
 12240  017334  006F FF8C  F032    	movff	plusw1,btemp
 12241  01733A  0EFD               	movlw	-3
 12242  01733C  006F FF8C  F033    	movff	plusw1,btemp+1
 12243  017342  0E20               	movlw	32
 12244  017344  1232               	iorwf	btemp^0,f,c
 12245  017346  0E00               	movlw	0
 12246  017348  1233               	iorwf	(btemp+1)^0,f,c
 12247  01734A  D008               	goto	l2887
 12248  01734C                     l9527:
 12249                           
 12250                           ;stkvar	_c @ sp[(-2)+-2]
 12251  01734C  0EFC               	movlw	-4
 12252  01734E  006F FF8C  F032    	movff	plusw1,btemp
 12253  017354  0EFD               	movlw	-3
 12254  017356  006F FF8C  F033    	movff	plusw1,btemp+1
 12255  01735C                     l2887:
 12256                           
 12257                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12258  01735C  52E5               	movf	postdec1,f,c
 12259  01735E  52E5               	movf	postdec1,f,c
 12260  017360  52E5               	movf	postdec1,f,c
 12261  017362  52E5               	movf	postdec1,f,c
 12262  017364  0012               	return		;funcret
 12263  017366                     __end_of_tolower:
 12264                           	opt callstack 0
 12265                           
 12266 ;; *************** function _isupper *****************
 12267 ;; Defined at:
 12268 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  c               2  [STACK] int 
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;		None
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  2  [STACK] int 
 12275 ;; Registers used:
 12276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12286 ;;Total ram usage:        0 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; Hardware stack levels required when called:    6
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_efgtoa
 12293 ;;		_xtoa
 12294 ;;		_vfpfcnvrt
 12295 ;;		_tolower
 12296 ;; This function uses a reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text47
 12300  017DC2                     __ptext47:
 12301                           	opt callstack 0
 12302  017DC2                     _isupper:
 12303                           	opt callstack 17
 12304                           
 12305                           ;stkvar	_c @ sp[(0)+-2]
 12306                           
 12307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12308                           ;incstack = 0
 12309  017DC2  0EFE               	movlw	-2
 12310  017DC4  50E3               	movf	plusw1,w,c
 12311  017DC6  0FBF               	addlw	191
 12312  017DC8  6E3C               	movwf	(btemp+10)^0,c
 12313  017DCA  0EFF               	movlw	-1
 12314  017DCC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12315  017DD2  0EFF               	movlw	255
 12316  017DD4  223D               	addwfc	(btemp+11)^0,f,c
 12317  017DD6  503D               	movf	(btemp+11)^0,w,c
 12318  017DD8  E106               	bnz	u8830
 12319  017DDA  0E1A               	movlw	26
 12320  017DDC  5C3C               	subwf	(btemp+10)^0,w,c
 12321  017DDE  B0D8               	btfsc	status,0,c
 12322  017DE0  D002               	goto	u8830
 12323  017DE2  0E01               	movlw	1
 12324  017DE4  D001               	goto	u8840
 12325  017DE6                     u8830:
 12326  017DE6  0E00               	movlw	0
 12327  017DE8                     u8840:
 12328  017DE8  6E32               	movwf	btemp^0,c
 12329  017DEA  6A33               	clrf	(btemp+1)^0,c
 12330                           
 12331                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12332  017DEC  52E5               	movf	postdec1,f,c
 12333  017DEE  52E5               	movf	postdec1,f,c
 12334  017DF0  0012               	return		;funcret
 12335  017DF2                     __end_of_isupper:
 12336                           	opt callstack 0
 12337                           
 12338 ;; *************** function _strcpy *****************
 12339 ;; Defined at:
 12340 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;  dest            2  [STACK] PTR unsigned char 
 12343 ;;		 -> dbuf(80), 
 12344 ;;  src             2  [STACK] PTR const unsigned char 
 12345 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12346 ;;		 -> dbuf(80), 
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;  d               2  [STACK] PTR unsigned char 
 12349 ;;		 -> dbuf(80), 
 12350 ;;  s               2  [STACK] PTR const unsigned char 
 12351 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12352 ;;		 -> dbuf(80), 
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  2  [STACK] PTR unsigned char 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/5
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:    6
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_efgtoa
 12373 ;; This function uses a reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text48
 12377  016B2C                     __ptext48:
 12378                           	opt callstack 0
 12379  016B2C                     _strcpy:
 12380                           	opt callstack 0
 12381                           
 12382                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12383  016B2C  52E6               	movf	postinc1,f,c
 12384  016B2E  52E6               	movf	postinc1,f,c
 12385  016B30  52E6               	movf	postinc1,f,c
 12386  016B32  52E6               	movf	postinc1,f,c
 12387                           
 12388                           ;stkvar	_src @ sp[(-4)+-4]
 12389                           
 12390                           ;incstack = 0
 12391  016B34  0EF8               	movlw	-8
 12392  016B36  006F FF8C  F03C    	movff	plusw1,btemp+10
 12393  016B3C  0EF9               	movlw	-7
 12394  016B3E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12395                           
 12396                           ;stkvar	_s @ sp[(-4)+2]
 12397  016B44  0EFF               	movlw	-1
 12398  016B46  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12399  016B4C  0EFE               	movlw	-2
 12400  016B4E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12401                           
 12402                           ;stkvar	_dest @ sp[(-4)+-2]
 12403  016B54  0EFA               	movlw	-6
 12404  016B56  006F FF8C  F03C    	movff	plusw1,btemp+10
 12405  016B5C  0EFB               	movlw	-5
 12406  016B5E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12407                           
 12408                           ;stkvar	_d @ sp[(-4)+0]
 12409  016B64  0EFD               	movlw	-3
 12410  016B66  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12411  016B6C  0EFC               	movlw	-4
 12412  016B6E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12413  016B74                     l9515:
 12414                           
 12415                           ;stkvar	_s @ sp[(-4)+2]
 12416  016B74  50E1               	movf	fsr1l,w,c
 12417  016B76  0FFE               	addlw	-2
 12418  016B78  6ED9               	movwf	fsr2l,c
 12419  016B7A  50E2               	movf	fsr1h,w,c
 12420  016B7C  6EDA               	movwf	fsr2h,c
 12421  016B7E  0EFF               	movlw	255
 12422  016B80  22DA               	addwfc	fsr2h,f,c
 12423  016B82  006F FF7C  F03C    	movff	indf2,btemp+10
 12424  016B88  0E01               	movlw	1
 12425  016B8A  26DE               	addwf	postinc2,f,c
 12426  016B8C  006F FF7C  F03D    	movff	indf2,btemp+11
 12427  016B92  0E00               	movlw	0
 12428  016B94  22DD               	addwfc	postdec2,f,c
 12429  016B96  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12430  016B9C  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12431  016BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 12432  016BA4  6EF8               	movwf	tblptru,c
 12433                           
 12434                           ;stkvar	_d @ sp[(-4)+0]
 12435  016BA6  50E1               	movf	fsr1l,w,c
 12436  016BA8  0FFC               	addlw	-4
 12437  016BAA  6ED9               	movwf	fsr2l,c
 12438  016BAC  50E2               	movf	fsr1h,w,c
 12439  016BAE  6EDA               	movwf	fsr2h,c
 12440  016BB0  0EFF               	movlw	255
 12441  016BB2  22DA               	addwfc	fsr2h,f,c
 12442  016BB4  006F FF7C  F03C    	movff	indf2,btemp+10
 12443  016BBA  0E01               	movlw	1
 12444  016BBC  26DE               	addwf	postinc2,f,c
 12445  016BBE  006F FF7C  F03D    	movff	indf2,btemp+11
 12446  016BC4  0E00               	movlw	0
 12447  016BC6  22DD               	addwfc	postdec2,f,c
 12448  016BC8  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12449  016BCE  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12450  016BD4  0E1F               	movlw	(high __ramtop+-1)
 12451  016BD6  64F7               	cpfsgt	tblptrh,c
 12452  016BD8  D003               	bra	u9417
 12453  016BDA  0008               	tblrd		*
 12454  016BDC  50F5               	movf	tablat,w,c
 12455  016BDE  D007               	bra	u9410
 12456  016BE0                     u9417:
 12457  016BE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12458  016BE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12459  016BEC  50EF               	movf	indf0,w,c
 12460  016BEE                     u9410:
 12461  016BEE  6EDF               	movwf	indf2,c
 12462  016BF0  50DF               	movf	indf2,w,c
 12463  016BF2  A4D8               	btfss	status,2,c
 12464  016BF4  D7BF               	goto	l9515
 12465                           
 12466                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12467  016BF6  0EF8               	movlw	248
 12468  016BF8  26E1               	addwf	fsr1l,f,c
 12469  016BFA  0EFF               	movlw	255
 12470  016BFC  22E2               	addwfc	fsr1h,f,c
 12471  016BFE  0012               	return		;funcret
 12472  016C00                     __end_of_strcpy:
 12473                           	opt callstack 0
 12474                           
 12475 ;; *************** function _floorf *****************
 12476 ;; Defined at:
 12477 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  x               4  [STACK] float 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  u               4  [STACK] struct .
 12482 ;;  m               4  [STACK] unsigned long 
 12483 ;;  e               2  [STACK] int 
 12484 ;; Return value:  Size  Location     Type
 12485 ;;                  4  [STACK] float 
 12486 ;; Registers used:
 12487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12488 ;; Tracked objects:
 12489 ;;		On entry : 0/5
 12490 ;;		On exit  : 0/0
 12491 ;;		Unchanged: 0/0
 12492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;Total ram usage:        0 bytes
 12498 ;; Hardware stack levels used:    1
 12499 ;; Hardware stack levels required when called:    6
 12500 ;; This function calls:
 12501 ;;		Nothing
 12502 ;; This function is called by:
 12503 ;;		_efgtoa
 12504 ;; This function uses a reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text49
 12508  0143D0                     __ptext49:
 12509                           	opt callstack 0
 12510  0143D0                     _floorf:
 12511                           	opt callstack 0
 12512                           
 12513                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12514  0143D0  0E0A               	movlw	10
 12515  0143D2  26E1               	addwf	fsr1l,f,c
 12516  0143D4  0E00               	movlw	0
 12517  0143D6  22E2               	addwfc	fsr1h,f,c
 12518                           
 12519                           ;incstack = 0
 12520  0143D8  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12521  0143DE  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12522  0143E4  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12523  0143EA  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12524                           
 12525                           ;stkvar	_u @ sp[(-10)+0]
 12526  0143F0  0EF6               	movlw	-10
 12527  0143F2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12528  0143F8  0EF7               	movlw	-9
 12529  0143FA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12530  014400  0EF8               	movlw	-8
 12531  014402  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12532  014408  0EF9               	movlw	-7
 12533  01440A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12534                           
 12535                           ;stkvar	_x @ sp[(-10)+-4]
 12536  014410  0EF2               	movlw	-14
 12537  014412  006F FF8C  F03A    	movff	plusw1,btemp+8
 12538  014418  0EF3               	movlw	-13
 12539  01441A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12540  014420  0EF4               	movlw	-12
 12541  014422  006F FF8C  F03C    	movff	plusw1,btemp+10
 12542  014428  0EF5               	movlw	-11
 12543  01442A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12544                           
 12545                           ;stkvar	_u @ sp[(-10)+0]
 12546  014430  0EF6               	movlw	-10
 12547  014432  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12548  014438  0EF7               	movlw	-9
 12549  01443A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12550  014440  0EF8               	movlw	-8
 12551  014442  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12552  014448  0EF9               	movlw	-7
 12553  01444A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12554  014450  0E81               	movlw	129
 12555  014452  6E3C               	movwf	(btemp+10)^0,c
 12556  014454  0EFF               	movlw	255
 12557  014456  6E3D               	movwf	(btemp+11)^0,c
 12558                           
 12559                           ;stkvar	_u @ sp[(-10)+0]
 12560  014458  0EF6               	movlw	-10
 12561  01445A  006F FF8C  F036    	movff	plusw1,btemp+4
 12562  014460  0EF7               	movlw	-9
 12563  014462  006F FF8C  F037    	movff	plusw1,btemp+5
 12564  014468  0EF8               	movlw	-8
 12565  01446A  006F FF8C  F038    	movff	plusw1,btemp+6
 12566  014470  0EF9               	movlw	-7
 12567  014472  006F FF8C  F039    	movff	plusw1,btemp+7
 12568  014478  0E18               	movlw	24
 12569  01447A  D005               	goto	u9460
 12570  01447C                     u9465:
 12571  01447C  90D8               	bcf	status,0,c
 12572  01447E  3239               	rrcf	(btemp+7)^0,f,c
 12573  014480  3238               	rrcf	(btemp+6)^0,f,c
 12574  014482  3237               	rrcf	(btemp+5)^0,f,c
 12575  014484  3236               	rrcf	(btemp+4)^0,f,c
 12576  014486                     u9460:
 12577  014486  2EE8               	decfsz	wreg,f,c
 12578  014488  D7F9               	goto	u9465
 12579  01448A  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12580  014490  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12581  014496  0EFF               	movlw	255
 12582  014498  163A               	andwf	(btemp+8)^0,f,c
 12583  01449A  0E00               	movlw	0
 12584  01449C  163B               	andwf	(btemp+9)^0,f,c
 12585  01449E  503C               	movf	(btemp+10)^0,w,c
 12586  0144A0  263A               	addwf	(btemp+8)^0,f,c
 12587  0144A2  503D               	movf	(btemp+11)^0,w,c
 12588  0144A4  223B               	addwfc	(btemp+9)^0,f,c
 12589                           
 12590                           ;stkvar	_e @ sp[(-10)+8]
 12591  0144A6  0EFE               	movlw	-2
 12592  0144A8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12593  0144AE  0EFF               	movlw	-1
 12594  0144B0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12595                           
 12596                           ;stkvar	_e @ sp[(-10)+8]
 12597  0144B6  0EFF               	movlw	-1
 12598  0144B8  BEE3               	btfsc	plusw1,7,c
 12599  0144BA  D019               	goto	l9541
 12600  0144BC  0EFF               	movlw	-1
 12601  0144BE  50E3               	movf	plusw1,w,c
 12602  0144C0  E108               	bnz	u9470
 12603  0144C2  0EFE               	movlw	-2
 12604  0144C4  006F FF8C  F032    	movff	plusw1,btemp
 12605  0144CA  0E17               	movlw	23
 12606  0144CC  5E32               	subwf	btemp^0,f,c
 12607  0144CE  A0D8               	btfss	status,0,c
 12608  0144D0  D00E               	goto	l9541
 12609  0144D2                     u9470:
 12610                           
 12611                           ;stkvar	_x @ sp[(-10)+-4]
 12612  0144D2  0EF2               	movlw	-14
 12613  0144D4  006F FF8C  F032    	movff	plusw1,btemp
 12614  0144DA  0EF3               	movlw	-13
 12615  0144DC  006F FF8C  F033    	movff	plusw1,btemp+1
 12616  0144E2  0EF4               	movlw	-12
 12617  0144E4  006F FF8C  F034    	movff	plusw1,btemp+2
 12618  0144EA  0EF5               	movlw	-11
 12619  0144EC  D11F               	goto	L12
 12620  0144EE                     l9541:
 12621                           
 12622                           ;stkvar	_e @ sp[(-10)+8]
 12623  0144EE  0EFF               	movlw	-1
 12624  0144F0  BEE3               	btfsc	plusw1,7,c
 12625  0144F2  D0B4               	goto	l9557
 12626                           
 12627                           ;stkvar	_e @ sp[(-10)+8]
 12628  0144F4  0EFE               	movlw	-2
 12629  0144F6  006F FF8C  F03D    	movff	plusw1,btemp+11
 12630  0144FC  0EFF               	movlw	255
 12631  0144FE  6E36               	movwf	(btemp+4)^0,c
 12632  014500  0EFF               	movlw	255
 12633  014502  6E37               	movwf	(btemp+5)^0,c
 12634  014504  0E7F               	movlw	127
 12635  014506  6E38               	movwf	(btemp+6)^0,c
 12636  014508  0E00               	movlw	0
 12637  01450A  6E39               	movwf	(btemp+7)^0,c
 12638  01450C                     u9495:
 12639  01450C  663D               	tstfsz	(btemp+11)^0,c
 12640  01450E  D001               	goto	u9496
 12641  014510  D007               	goto	u9497
 12642  014512                     u9496:
 12643  014512  3439               	rlcf	(btemp+7)^0,w,c
 12644  014514  3239               	rrcf	(btemp+7)^0,f,c
 12645  014516  3238               	rrcf	(btemp+6)^0,f,c
 12646  014518  3237               	rrcf	(btemp+5)^0,f,c
 12647  01451A  3236               	rrcf	(btemp+4)^0,f,c
 12648  01451C  2E3D               	decfsz	(btemp+11)^0,f,c
 12649  01451E  D7F6               	goto	u9495
 12650  014520                     u9497:
 12651                           
 12652                           ;stkvar	_m @ sp[(-10)+4]
 12653  014520  0EFA               	movlw	-6
 12654  014522  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12655  014528  0EFB               	movlw	-5
 12656  01452A  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12657  014530  0EFC               	movlw	-4
 12658  014532  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12659  014538  0EFD               	movlw	-3
 12660  01453A  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12661                           
 12662                           ;stkvar	_m @ sp[(-10)+4]
 12663                           ;stkvar	_u @ sp[(-10)+0]
 12664  014540  0EF6               	movlw	-10
 12665  014542  006F FF8C  F03A    	movff	plusw1,btemp+8
 12666  014548  0EF7               	movlw	-9
 12667  01454A  006F FF8C  F03B    	movff	plusw1,btemp+9
 12668  014550  0EF8               	movlw	-8
 12669  014552  006F FF8C  F03C    	movff	plusw1,btemp+10
 12670  014558  0EF9               	movlw	-7
 12671  01455A  006F FF8C  F03D    	movff	plusw1,btemp+11
 12672  014560  0EFA               	movlw	-6
 12673  014562  50E3               	movf	plusw1,w,c
 12674  014564  163A               	andwf	(btemp+8)^0,f,c
 12675  014566  0EFB               	movlw	-5
 12676  014568  50E3               	movf	plusw1,w,c
 12677  01456A  163B               	andwf	(btemp+9)^0,f,c
 12678  01456C  0EFC               	movlw	-4
 12679  01456E  50E3               	movf	plusw1,w,c
 12680  014570  163C               	andwf	(btemp+10)^0,f,c
 12681  014572  0EFD               	movlw	-3
 12682  014574  50E3               	movf	plusw1,w,c
 12683  014576  163D               	andwf	(btemp+11)^0,f,c
 12684  014578  503A               	movf	(btemp+8)^0,w,c
 12685  01457A  103B               	iorwf	(btemp+9)^0,w,c
 12686  01457C  103C               	iorwf	(btemp+10)^0,w,c
 12687  01457E  103D               	iorwf	(btemp+11)^0,w,c
 12688  014580  B4D8               	btfsc	status,2,c
 12689  014582  D7A7               	goto	u9470
 12690                           
 12691                           ;stkvar	_u @ sp[(-10)+0]
 12692  014584  0EF6               	movlw	-10
 12693  014586  006F FF8C  F03A    	movff	plusw1,btemp+8
 12694  01458C  0EF7               	movlw	-9
 12695  01458E  006F FF8C  F03B    	movff	plusw1,btemp+9
 12696  014594  0EF8               	movlw	-8
 12697  014596  006F FF8C  F03C    	movff	plusw1,btemp+10
 12698  01459C  0EF9               	movlw	-7
 12699  01459E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12700  0145A4  0E20               	movlw	32
 12701  0145A6  D005               	goto	u9510
 12702  0145A8                     u9515:
 12703  0145A8  90D8               	bcf	status,0,c
 12704  0145AA  323D               	rrcf	(btemp+11)^0,f,c
 12705  0145AC  323C               	rrcf	(btemp+10)^0,f,c
 12706  0145AE  323B               	rrcf	(btemp+9)^0,f,c
 12707  0145B0  323A               	rrcf	(btemp+8)^0,f,c
 12708  0145B2                     u9510:
 12709  0145B2  2EE8               	decfsz	wreg,f,c
 12710  0145B4  D7F9               	goto	u9515
 12711  0145B6  503A               	movf	(btemp+8)^0,w,c
 12712  0145B8  B4D8               	btfsc	status,2,c
 12713  0145BA  D028               	goto	l9555
 12714                           
 12715                           ;stkvar	_m @ sp[(-10)+4]
 12716                           ;stkvar	_u @ sp[(-10)+0]
 12717  0145BC  0EF6               	movlw	-10
 12718  0145BE  50E3               	movf	plusw1,w,c
 12719  0145C0  6E32               	movwf	btemp^0,c
 12720  0145C2  0EFA               	movlw	-6
 12721  0145C4  50E3               	movf	plusw1,w,c
 12722  0145C6  2632               	addwf	btemp^0,f,c
 12723  0145C8  0EF6               	movlw	-10
 12724  0145CA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12725  0145D0  0EF7               	movlw	-9
 12726  0145D2  50E3               	movf	plusw1,w,c
 12727  0145D4  6E32               	movwf	btemp^0,c
 12728  0145D6  0EFB               	movlw	-5
 12729  0145D8  50E3               	movf	plusw1,w,c
 12730  0145DA  2232               	addwfc	btemp^0,f,c
 12731  0145DC  0EF7               	movlw	-9
 12732  0145DE  0060  F0CB  FFE3   	movff	btemp,plusw1
 12733  0145E4  0EF8               	movlw	-8
 12734  0145E6  50E3               	movf	plusw1,w,c
 12735  0145E8  6E32               	movwf	btemp^0,c
 12736  0145EA  0EFC               	movlw	-4
 12737  0145EC  50E3               	movf	plusw1,w,c
 12738  0145EE  2232               	addwfc	btemp^0,f,c
 12739  0145F0  0EF8               	movlw	-8
 12740  0145F2  0060  F0CB  FFE3   	movff	btemp,plusw1
 12741  0145F8  0EF9               	movlw	-7
 12742  0145FA  50E3               	movf	plusw1,w,c
 12743  0145FC  6E32               	movwf	btemp^0,c
 12744  0145FE  0EFD               	movlw	-3
 12745  014600  50E3               	movf	plusw1,w,c
 12746  014602  2232               	addwfc	btemp^0,f,c
 12747  014604  0EF9               	movlw	-7
 12748  014606  0060  F0CB  FFE3   	movff	btemp,plusw1
 12749  01460C                     l9555:
 12750                           
 12751                           ;stkvar	_m @ sp[(-10)+4]
 12752  01460C  0EFA               	movlw	-6
 12753  01460E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12754  014614  0EFB               	movlw	-5
 12755  014616  006F FF8C  F03B    	movff	plusw1,btemp+9
 12756  01461C  0EFC               	movlw	-4
 12757  01461E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12758  014624  0EFD               	movlw	-3
 12759  014626  006F FF8C  F03D    	movff	plusw1,btemp+11
 12760  01462C  1C3A               	comf	(btemp+8)^0,w,c
 12761  01462E  6E36               	movwf	(btemp+4)^0,c
 12762  014630  1C3B               	comf	(btemp+9)^0,w,c
 12763  014632  6E37               	movwf	(btemp+5)^0,c
 12764  014634  1C3C               	comf	(btemp+10)^0,w,c
 12765  014636  6E38               	movwf	(btemp+6)^0,c
 12766  014638  1C3D               	comf	(btemp+11)^0,w,c
 12767  01463A  6E39               	movwf	(btemp+7)^0,c
 12768                           
 12769                           ;stkvar	_u @ sp[(-10)+0]
 12770  01463C  50E1               	movf	fsr1l,w,c
 12771  01463E  0FF6               	addlw	-10
 12772  014640  6ED9               	movwf	fsr2l,c
 12773  014642  50E2               	movf	fsr1h,w,c
 12774  014644  6EDA               	movwf	fsr2h,c
 12775  014646  0EFF               	movlw	255
 12776  014648  22DA               	addwfc	fsr2h,f,c
 12777  01464A  5036               	movf	(btemp+4)^0,w,c
 12778  01464C  16DE               	andwf	postinc2,f,c
 12779  01464E  5037               	movf	(btemp+5)^0,w,c
 12780  014650  16DE               	andwf	postinc2,f,c
 12781  014652  5038               	movf	(btemp+6)^0,w,c
 12782  014654  16DE               	andwf	postinc2,f,c
 12783  014656  5039               	movf	(btemp+7)^0,w,c
 12784  014658  16DE               	andwf	postinc2,f,c
 12785  01465A  D05B               	goto	l9565
 12786  01465C                     l9557:
 12787                           
 12788                           ;stkvar	_u @ sp[(-10)+0]
 12789  01465C  0EF6               	movlw	-10
 12790  01465E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12791  014664  0EF7               	movlw	-9
 12792  014666  006F FF8C  F03B    	movff	plusw1,btemp+9
 12793  01466C  0EF8               	movlw	-8
 12794  01466E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12795  014674  0EF9               	movlw	-7
 12796  014676  006F FF8C  F03D    	movff	plusw1,btemp+11
 12797  01467C  0E20               	movlw	32
 12798  01467E  D005               	goto	u9530
 12799  014680                     u9535:
 12800  014680  90D8               	bcf	status,0,c
 12801  014682  323D               	rrcf	(btemp+11)^0,f,c
 12802  014684  323C               	rrcf	(btemp+10)^0,f,c
 12803  014686  323B               	rrcf	(btemp+9)^0,f,c
 12804  014688  323A               	rrcf	(btemp+8)^0,f,c
 12805  01468A                     u9530:
 12806  01468A  2EE8               	decfsz	wreg,f,c
 12807  01468C  D7F9               	goto	u9535
 12808  01468E  663A               	tstfsz	(btemp+8)^0,c
 12809  014690  D009               	goto	l9561
 12810                           
 12811                           ;stkvar	_u @ sp[(-10)+0]
 12812  014692  0EF6               	movlw	-10
 12813  014694  6AE3               	clrf	plusw1,c
 12814  014696  0EF7               	movlw	-9
 12815  014698  6AE3               	clrf	plusw1,c
 12816  01469A  0EF8               	movlw	-8
 12817  01469C  6AE3               	clrf	plusw1,c
 12818  01469E  0EF9               	movlw	-7
 12819  0146A0  6AE3               	clrf	plusw1,c
 12820  0146A2  D037               	goto	l9565
 12821  0146A4                     l9561:
 12822                           
 12823                           ;stkvar	_u @ sp[(-10)+0]
 12824  0146A4  0EF6               	movlw	-10
 12825  0146A6  006F FF8C  F03A    	movff	plusw1,btemp+8
 12826  0146AC  0EF7               	movlw	-9
 12827  0146AE  006F FF8C  F03B    	movff	plusw1,btemp+9
 12828  0146B4  0EF8               	movlw	-8
 12829  0146B6  006F FF8C  F03C    	movff	plusw1,btemp+10
 12830  0146BC  0EF9               	movlw	-7
 12831  0146BE  006F FF8C  F03D    	movff	plusw1,btemp+11
 12832  0146C4  90D8               	bcf	status,0,c
 12833  0146C6  343A               	rlcf	(btemp+8)^0,w,c
 12834  0146C8  6E36               	movwf	(btemp+4)^0,c
 12835  0146CA  343B               	rlcf	(btemp+9)^0,w,c
 12836  0146CC  6E37               	movwf	(btemp+5)^0,c
 12837  0146CE  343C               	rlcf	(btemp+10)^0,w,c
 12838  0146D0  6E38               	movwf	(btemp+6)^0,c
 12839  0146D2  343D               	rlcf	(btemp+11)^0,w,c
 12840  0146D4  6E39               	movwf	(btemp+7)^0,c
 12841  0146D6  5036               	movf	(btemp+4)^0,w,c
 12842  0146D8  1037               	iorwf	(btemp+5)^0,w,c
 12843  0146DA  1038               	iorwf	(btemp+6)^0,w,c
 12844  0146DC  1039               	iorwf	(btemp+7)^0,w,c
 12845  0146DE  B4D8               	btfsc	status,2,c
 12846  0146E0  D018               	goto	l9565
 12847  0146E2  0E00               	movlw	0
 12848  0146E4  6E3A               	movwf	(btemp+8)^0,c
 12849  0146E6  0E00               	movlw	0
 12850  0146E8  6E3B               	movwf	(btemp+9)^0,c
 12851  0146EA  0E80               	movlw	128
 12852  0146EC  6E3C               	movwf	(btemp+10)^0,c
 12853  0146EE  0EBF               	movlw	191
 12854  0146F0  6E3D               	movwf	(btemp+11)^0,c
 12855                           
 12856                           ;stkvar	_u @ sp[(-10)+0]
 12857  0146F2  0EF6               	movlw	-10
 12858  0146F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12859  0146FA  0EF7               	movlw	-9
 12860  0146FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12861  014702  0EF8               	movlw	-8
 12862  014704  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12863  01470A  0EF9               	movlw	-7
 12864  01470C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12865  014712                     l9565:
 12866                           
 12867                           ;stkvar	_u @ sp[(-10)+0]
 12868  014712  0EF6               	movlw	-10
 12869  014714  006F FF8C  F032    	movff	plusw1,btemp
 12870  01471A  0EF7               	movlw	-9
 12871  01471C  006F FF8C  F033    	movff	plusw1,btemp+1
 12872  014722  0EF8               	movlw	-8
 12873  014724  006F FF8C  F034    	movff	plusw1,btemp+2
 12874  01472A  0EF9               	movlw	-7
 12875  01472C                     L12:
 12876  01472C  006F FF8C  F035    	movff	plusw1,btemp+3
 12877                           
 12878                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12879  014732  0EF2               	movlw	242
 12880  014734  26E1               	addwf	fsr1l,f,c
 12881  014736  0EFF               	movlw	255
 12882  014738  22E2               	addwfc	fsr1h,f,c
 12883  01473A  0012               	return		;funcret
 12884  01473C                     __end_of_floorf:
 12885                           	opt callstack 0
 12886                           
 12887 ;; *************** function ___fpclassifyf *****************
 12888 ;; Defined at:
 12889 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  x               4  [STACK] float 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;  u               4  [STACK] struct .
 12894 ;;  e               2  [STACK] int 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  2  [STACK] int 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/5
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;Total ram usage:        0 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    6
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_efgtoa
 12915 ;; This function uses a reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text50
 12919  015BB8                     __ptext50:
 12920                           	opt callstack 0
 12921  015BB8                     ___fpclassifyf:
 12922                           	opt callstack 0
 12923                           
 12924                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12925  015BB8  0E06               	movlw	6
 12926  015BBA  26E1               	addwf	fsr1l,f,c
 12927  015BBC  0E00               	movlw	0
 12928  015BBE  22E2               	addwfc	fsr1h,f,c
 12929                           
 12930                           ;incstack = 0
 12931  015BC0  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 12932  015BC6  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 12933  015BCC  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 12934  015BD2  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 12935                           
 12936                           ;stkvar	_u @ sp[(-6)+0]
 12937  015BD8  0EFA               	movlw	-6
 12938  015BDA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12939  015BE0  0EFB               	movlw	-5
 12940  015BE2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12941  015BE8  0EFC               	movlw	-4
 12942  015BEA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12943  015BF0  0EFD               	movlw	-3
 12944  015BF2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12945                           
 12946                           ;stkvar	_x @ sp[(-6)+-4]
 12947  015BF8  0EF6               	movlw	-10
 12948  015BFA  006F FF8C  F03A    	movff	plusw1,btemp+8
 12949  015C00  0EF7               	movlw	-9
 12950  015C02  006F FF8C  F03B    	movff	plusw1,btemp+9
 12951  015C08  0EF8               	movlw	-8
 12952  015C0A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12953  015C10  0EF9               	movlw	-7
 12954  015C12  006F FF8C  F03D    	movff	plusw1,btemp+11
 12955                           
 12956                           ;stkvar	_u @ sp[(-6)+0]
 12957  015C18  0EFA               	movlw	-6
 12958  015C1A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12959  015C20  0EFB               	movlw	-5
 12960  015C22  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12961  015C28  0EFC               	movlw	-4
 12962  015C2A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12963  015C30  0EFD               	movlw	-3
 12964  015C32  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12965                           
 12966                           ;stkvar	_u @ sp[(-6)+0]
 12967  015C38  0EFA               	movlw	-6
 12968  015C3A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12969  015C40  0EFB               	movlw	-5
 12970  015C42  006F FF8C  F03B    	movff	plusw1,btemp+9
 12971  015C48  0EFC               	movlw	-4
 12972  015C4A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12973  015C50  0EFD               	movlw	-3
 12974  015C52  006F FF8C  F03D    	movff	plusw1,btemp+11
 12975  015C58  0E18               	movlw	24
 12976  015C5A  D005               	goto	u9340
 12977  015C5C                     u9345:
 12978  015C5C  90D8               	bcf	status,0,c
 12979  015C5E  323D               	rrcf	(btemp+11)^0,f,c
 12980  015C60  323C               	rrcf	(btemp+10)^0,f,c
 12981  015C62  323B               	rrcf	(btemp+9)^0,f,c
 12982  015C64  323A               	rrcf	(btemp+8)^0,f,c
 12983  015C66                     u9340:
 12984  015C66  2EE8               	decfsz	wreg,f,c
 12985  015C68  D7F9               	goto	u9345
 12986  015C6A  0060  F0E8  F038   	movff	btemp+8,btemp+6
 12987  015C70  0060  F0EC  F039   	movff	btemp+9,btemp+7
 12988  015C76  0EFF               	movlw	255
 12989  015C78  1638               	andwf	(btemp+6)^0,f,c
 12990  015C7A  0E00               	movlw	0
 12991  015C7C  1639               	andwf	(btemp+7)^0,f,c
 12992                           
 12993                           ;stkvar	_e @ sp[(-6)+4]
 12994  015C7E  0EFE               	movlw	-2
 12995  015C80  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12996  015C86  0EFF               	movlw	-1
 12997  015C88  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12998                           
 12999                           ;stkvar	_e @ sp[(-6)+4]
 13000  015C8E  0EFE               	movlw	-2
 13001  015C90  006F FF8C  F032    	movff	plusw1,btemp
 13002  015C96  0EFF               	movlw	-1
 13003  015C98  50E3               	movf	plusw1,w,c
 13004  015C9A  1032               	iorwf	btemp^0,w,c
 13005  015C9C  A4D8               	btfss	status,2,c
 13006  015C9E  D023               	goto	l9503
 13007                           
 13008                           ;stkvar	_u @ sp[(-6)+0]
 13009  015CA0  0EFA               	movlw	-6
 13010  015CA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13011  015CA8  0EFB               	movlw	-5
 13012  015CAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13013  015CB0  0EFC               	movlw	-4
 13014  015CB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13015  015CB8  0EFD               	movlw	-3
 13016  015CBA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13017  015CC0  90D8               	bcf	status,0,c
 13018  015CC2  343A               	rlcf	(btemp+8)^0,w,c
 13019  015CC4  6E36               	movwf	(btemp+4)^0,c
 13020  015CC6  343B               	rlcf	(btemp+9)^0,w,c
 13021  015CC8  6E37               	movwf	(btemp+5)^0,c
 13022  015CCA  343C               	rlcf	(btemp+10)^0,w,c
 13023  015CCC  6E38               	movwf	(btemp+6)^0,c
 13024  015CCE  343D               	rlcf	(btemp+11)^0,w,c
 13025  015CD0  6E39               	movwf	(btemp+7)^0,c
 13026  015CD2  5036               	movf	(btemp+4)^0,w,c
 13027  015CD4  1037               	iorwf	(btemp+5)^0,w,c
 13028  015CD6  1038               	iorwf	(btemp+6)^0,w,c
 13029  015CD8  1039               	iorwf	(btemp+7)^0,w,c
 13030  015CDA  A4D8               	btfss	status,2,c
 13031  015CDC  D002               	goto	l9499
 13032  015CDE  0E02               	movlw	2
 13033  015CE0  D02E               	goto	L13
 13034  015CE2                     l9499:
 13035  015CE2  0E03               	movlw	3
 13036  015CE4  D02C               	goto	L13
 13037  015CE6                     l9503:
 13038                           
 13039                           ;stkvar	_e @ sp[(-6)+4]
 13040  015CE6  0EFE               	movlw	-2
 13041  015CE8  28E3               	incf	plusw1,w,c
 13042  015CEA  E128               	bnz	l9509
 13043  015CEC  0EFF               	movlw	-1
 13044  015CEE  50E3               	movf	plusw1,w,c
 13045  015CF0  A4D8               	btfss	status,2,c
 13046  015CF2  D024               	goto	l9509
 13047                           
 13048                           ;stkvar	_u @ sp[(-6)+0]
 13049  015CF4  0EFA               	movlw	-6
 13050  015CF6  006F FF8C  F03A    	movff	plusw1,btemp+8
 13051  015CFC  0EFB               	movlw	-5
 13052  015CFE  006F FF8C  F03B    	movff	plusw1,btemp+9
 13053  015D04  0EFC               	movlw	-4
 13054  015D06  006F FF8C  F03C    	movff	plusw1,btemp+10
 13055  015D0C  0EFD               	movlw	-3
 13056  015D0E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13057  015D14  0E09               	movlw	9
 13058  015D16                     u9385:
 13059  015D16  90D8               	bcf	status,0,c
 13060  015D18  363A               	rlcf	(btemp+8)^0,f,c
 13061  015D1A  363B               	rlcf	(btemp+9)^0,f,c
 13062  015D1C  363C               	rlcf	(btemp+10)^0,f,c
 13063  015D1E  363D               	rlcf	(btemp+11)^0,f,c
 13064  015D20  2EE8               	decfsz	wreg,f,c
 13065  015D22  D7F9               	goto	u9385
 13066  015D24  503A               	movf	(btemp+8)^0,w,c
 13067  015D26  103B               	iorwf	(btemp+9)^0,w,c
 13068  015D28  103C               	iorwf	(btemp+10)^0,w,c
 13069  015D2A  103D               	iorwf	(btemp+11)^0,w,c
 13070  015D2C  A4D8               	btfss	status,2,c
 13071  015D2E  D002               	goto	u9390
 13072  015D30  0E01               	movlw	1
 13073  015D32  D001               	goto	u9400
 13074  015D34                     u9390:
 13075  015D34  0E00               	movlw	0
 13076  015D36                     u9400:
 13077  015D36  6E32               	movwf	btemp^0,c
 13078  015D38  6A33               	clrf	(btemp+1)^0,c
 13079  015D3A  D004               	goto	l2723
 13080  015D3C                     l9509:
 13081  015D3C  0E04               	movlw	4
 13082  015D3E                     L13:
 13083  015D3E  6E32               	movwf	btemp^0,c
 13084  015D40  0E00               	movlw	0
 13085  015D42  6E33               	movwf	(btemp+1)^0,c
 13086  015D44                     l2723:
 13087                           
 13088                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13089  015D44  0EF6               	movlw	246
 13090  015D46  26E1               	addwf	fsr1l,f,c
 13091  015D48  0EFF               	movlw	255
 13092  015D4A  22E2               	addwfc	fsr1h,f,c
 13093  015D4C  0012               	return		;funcret
 13094  015D4E                     __end_of___fpclassifyf:
 13095                           	opt callstack 0
 13096                           
 13097 ;; *************** function ___fltol *****************
 13098 ;; Defined at:
 13099 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  f1              4  [STACK] int 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;  exp1            1  [STACK] unsigned char 
 13104 ;;  sign1           1  [STACK] unsigned char 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  4  [STACK] long 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/5
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:    6
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_efgtoa
 13125 ;; This function uses a reentrant model
 13126 ;;
 13127                           
 13128                           	psect	text51
 13129  015D4E                     __ptext51:
 13130                           	opt callstack 0
 13131  015D4E                     ___fltol:
 13132                           	opt callstack 0
 13133                           
 13134                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13135  015D4E  52E6               	movf	postinc1,f,c
 13136  015D50  52E6               	movf	postinc1,f,c
 13137                           
 13138                           ;stkvar	_f1 @ sp[(-2)+-4]
 13139                           
 13140                           ;incstack = 0
 13141  015D52  0EFA               	movlw	-6
 13142  015D54  006F FF8C  F03A    	movff	plusw1,btemp+8
 13143  015D5A  0EFB               	movlw	-5
 13144  015D5C  006F FF8C  F03B    	movff	plusw1,btemp+9
 13145  015D62  0EFC               	movlw	-4
 13146  015D64  006F FF8C  F03C    	movff	plusw1,btemp+10
 13147  015D6A  0EFD               	movlw	-3
 13148  015D6C  006F FF8C  F03D    	movff	plusw1,btemp+11
 13149  015D72  0E18               	movlw	24
 13150  015D74  D005               	goto	u10550
 13151  015D76                     u10555:
 13152  015D76  90D8               	bcf	status,0,c
 13153  015D78  323D               	rrcf	(btemp+11)^0,f,c
 13154  015D7A  323C               	rrcf	(btemp+10)^0,f,c
 13155  015D7C  323B               	rrcf	(btemp+9)^0,f,c
 13156  015D7E  323A               	rrcf	(btemp+8)^0,f,c
 13157  015D80                     u10550:
 13158  015D80  2EE8               	decfsz	wreg,f,c
 13159  015D82  D7F9               	goto	u10555
 13160                           
 13161                           ;stkvar	_exp1 @ sp[(-2)+0]
 13162  015D84  0EFE               	movlw	-2
 13163  015D86  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13164  015D8C  0EFE               	movlw	-2
 13165  015D8E  50E3               	movf	plusw1,w,c
 13166  015D90  A4D8               	btfss	status,2,c
 13167  015D92  D006               	goto	l10129
 13168  015D94                     u10560:
 13169  015D94  0E00               	movlw	0
 13170  015D96  6E32               	movwf	btemp^0,c
 13171  015D98  6A33               	clrf	(btemp+1)^0,c
 13172  015D9A  6A34               	clrf	(btemp+2)^0,c
 13173  015D9C  6A35               	clrf	(btemp+3)^0,c
 13174  015D9E  D08B               	goto	l2339
 13175  015DA0                     l10129:
 13176                           
 13177                           ;stkvar	_f1 @ sp[(-2)+-4]
 13178  015DA0  0EFA               	movlw	-6
 13179  015DA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13180  015DA8  0EFB               	movlw	-5
 13181  015DAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13182  015DB0  0EFC               	movlw	-4
 13183  015DB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13184  015DB8  0EFD               	movlw	-3
 13185  015DBA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13186  015DC0  0E20               	movlw	32
 13187  015DC2  D005               	goto	u10570
 13188  015DC4                     u10575:
 13189  015DC4  90D8               	bcf	status,0,c
 13190  015DC6  323D               	rrcf	(btemp+11)^0,f,c
 13191  015DC8  323C               	rrcf	(btemp+10)^0,f,c
 13192  015DCA  323B               	rrcf	(btemp+9)^0,f,c
 13193  015DCC  323A               	rrcf	(btemp+8)^0,f,c
 13194  015DCE                     u10570:
 13195  015DCE  2EE8               	decfsz	wreg,f,c
 13196  015DD0  D7F9               	goto	u10575
 13197                           
 13198                           ;stkvar	_sign1 @ sp[(-2)+1]
 13199  015DD2  0EFF               	movlw	-1
 13200  015DD4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13201                           
 13202                           ;stkvar	_f1 @ sp[(-2)+-4]
 13203  015DDA  0EFC               	movlw	-4
 13204  015DDC  8EE3               	bsf	plusw1,7,c
 13205                           
 13206                           ;stkvar	_f1 @ sp[(-2)+-4]
 13207  015DDE  50E1               	movf	fsr1l,w,c
 13208  015DE0  0FFA               	addlw	-6
 13209  015DE2  6ED9               	movwf	fsr2l,c
 13210  015DE4  50E2               	movf	fsr1h,w,c
 13211  015DE6  6EDA               	movwf	fsr2h,c
 13212  015DE8  0EFF               	movlw	255
 13213  015DEA  22DA               	addwfc	fsr2h,f,c
 13214  015DEC  0EFF               	movlw	255
 13215  015DEE  16DE               	andwf	postinc2,f,c
 13216  015DF0  0EFF               	movlw	255
 13217  015DF2  16DE               	andwf	postinc2,f,c
 13218  015DF4  0EFF               	movlw	255
 13219  015DF6  16DE               	andwf	postinc2,f,c
 13220  015DF8  0E00               	movlw	0
 13221  015DFA  16DE               	andwf	postinc2,f,c
 13222                           
 13223                           ;stkvar	_exp1 @ sp[(-2)+0]
 13224  015DFC  0EFE               	movlw	-2
 13225  015DFE  006F FF8C  F032    	movff	plusw1,btemp
 13226  015E04  0E96               	movlw	150
 13227  015E06  5E32               	subwf	btemp^0,f,c
 13228  015E08  0EFE               	movlw	-2
 13229  015E0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 13230                           
 13231                           ;stkvar	_exp1 @ sp[(-2)+0]
 13232  015E10  0EFE               	movlw	-2
 13233  015E12  AEE3               	btfss	plusw1,7,c
 13234  015E14  D014               	goto	l10147
 13235                           
 13236                           ;stkvar	_exp1 @ sp[(-2)+0]
 13237  015E16  0EFE               	movlw	-2
 13238  015E18  50E3               	movf	plusw1,w,c
 13239  015E1A  0A80               	xorlw	128
 13240  015E1C  0F97               	addlw	151
 13241  015E1E  A0D8               	btfss	status,0,c
 13242  015E20  D7B9               	goto	u10560
 13243  015E22                     l10145:
 13244                           
 13245                           ;stkvar	_f1 @ sp[(-2)+-4]
 13246  015E22  90D8               	bcf	status,0,c
 13247  015E24  0EFD               	movlw	-3
 13248  015E26  32E3               	rrcf	plusw1,f,c
 13249  015E28  0EFC               	movlw	-4
 13250  015E2A  32E3               	rrcf	plusw1,f,c
 13251  015E2C  0EFB               	movlw	-5
 13252  015E2E  32E3               	rrcf	plusw1,f,c
 13253  015E30  0EFA               	movlw	-6
 13254  015E32  32E3               	rrcf	plusw1,f,c
 13255                           
 13256                           ;stkvar	_exp1 @ sp[(-2)+0]
 13257  015E34  0EFE               	movlw	-2
 13258  015E36  2AE3               	incf	plusw1,f,c
 13259  015E38  B4D8               	btfsc	status,2,c
 13260  015E3A  D018               	goto	u10620
 13261  015E3C  D7F2               	goto	l10145
 13262  015E3E                     l10147:
 13263                           
 13264                           ;stkvar	_exp1 @ sp[(-2)+0]
 13265  015E3E  0EFE               	movlw	-2
 13266  015E40  006F FF8C  F032    	movff	plusw1,btemp
 13267  015E46  0E1F               	movlw	31
 13268  015E48  6432               	cpfsgt	btemp^0,c
 13269  015E4A  D00C               	goto	l10155
 13270  015E4C  D7A3               	goto	u10560
 13271  015E4E                     l10153:
 13272                           
 13273                           ;stkvar	_f1 @ sp[(-2)+-4]
 13274  015E4E  90D8               	bcf	status,0,c
 13275  015E50  0EFA               	movlw	-6
 13276  015E52  36E3               	rlcf	plusw1,f,c
 13277  015E54  0EFB               	movlw	-5
 13278  015E56  36E3               	rlcf	plusw1,f,c
 13279  015E58  0EFC               	movlw	-4
 13280  015E5A  36E3               	rlcf	plusw1,f,c
 13281  015E5C  0EFD               	movlw	-3
 13282  015E5E  36E3               	rlcf	plusw1,f,c
 13283                           
 13284                           ;stkvar	_exp1 @ sp[(-2)+0]
 13285  015E60  0EFE               	movlw	-2
 13286  015E62  06E3               	decf	plusw1,f,c
 13287  015E64                     l10155:
 13288                           
 13289                           ;stkvar	_exp1 @ sp[(-2)+0]
 13290  015E64  0EFE               	movlw	-2
 13291  015E66  50E3               	movf	plusw1,w,c
 13292  015E68  A4D8               	btfss	status,2,c
 13293  015E6A  D7F1               	goto	l10153
 13294  015E6C                     u10620:
 13295                           
 13296                           ;stkvar	_sign1 @ sp[(-2)+1]
 13297  015E6C  0EFF               	movlw	-1
 13298  015E6E  50E3               	movf	plusw1,w,c
 13299  015E70  B4D8               	btfsc	status,2,c
 13300  015E72  D011               	goto	u10640
 13301                           
 13302                           ;stkvar	_f1 @ sp[(-2)+-4]
 13303                           ;stkvar	_f1 @ sp[(-2)+-4]
 13304  015E74  0EFA               	movlw	-6
 13305  015E76  6CE3               	negf	plusw1,c
 13306  015E78  0EFB               	movlw	-5
 13307  015E7A  1EE3               	comf	plusw1,f,c
 13308  015E7C  0EFC               	movlw	-4
 13309  015E7E  1EE3               	comf	plusw1,f,c
 13310  015E80  0EFD               	movlw	-3
 13311  015E82  1EE3               	comf	plusw1,f,c
 13312  015E84  E308               	bnc	u10640
 13313  015E86  0EFB               	movlw	-5
 13314  015E88  2AE3               	incf	plusw1,f,c
 13315  015E8A  E305               	bnc	u10640
 13316  015E8C  0EFC               	movlw	-4
 13317  015E8E  2AE3               	incf	plusw1,f,c
 13318  015E90  E302               	bnc	u10640
 13319  015E92  0EFD               	movlw	-3
 13320  015E94  2AE3               	incf	plusw1,f,c
 13321  015E96                     u10640:
 13322                           
 13323                           ;stkvar	_f1 @ sp[(-2)+-4]
 13324  015E96  0EFA               	movlw	-6
 13325  015E98  006F FF8C  F032    	movff	plusw1,btemp
 13326  015E9E  0EFB               	movlw	-5
 13327  015EA0  006F FF8C  F033    	movff	plusw1,btemp+1
 13328  015EA6  0EFC               	movlw	-4
 13329  015EA8  006F FF8C  F034    	movff	plusw1,btemp+2
 13330  015EAE  0EFD               	movlw	-3
 13331  015EB0  006F FF8C  F035    	movff	plusw1,btemp+3
 13332  015EB6                     l2339:
 13333                           
 13334                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13335  015EB6  0EFA               	movlw	250
 13336  015EB8  26E1               	addwf	fsr1l,f,c
 13337  015EBA  0EFF               	movlw	255
 13338  015EBC  22E2               	addwfc	fsr1h,f,c
 13339  015EBE  0012               	return		;funcret
 13340  015EC0                     __end_of___fltol:
 13341                           	opt callstack 0
 13342                           
 13343 ;; *************** function ___flsub *****************
 13344 ;; Defined at:
 13345 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;  b               4  [STACK] long 
 13348 ;;  a               4  [STACK] long 
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  4  [STACK] long 
 13353 ;; Registers used:
 13354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/39
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13364 ;;Total ram usage:        0 bytes
 13365 ;; Hardware stack levels used:    1
 13366 ;; Hardware stack levels required when called:    7
 13367 ;; This function calls:
 13368 ;;		___fladd
 13369 ;; This function is called by:
 13370 ;;		_conv_raw_result
 13371 ;;		_lp_filter
 13372 ;;		_efgtoa
 13373 ;; This function uses a reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text52
 13377  0179E6                     __ptext52:
 13378                           	opt callstack 0
 13379  0179E6                     ___flsub:
 13380                           	opt callstack 16
 13381                           
 13382                           ;stkvar	_a @ sp[(0)+-8]
 13383                           
 13384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13385                           ;incstack = 0
 13386  0179E6  0EFB               	movlw	-5
 13387  0179E8  7EE3               	btg	plusw1,7,c
 13388                           
 13389                           ;stkvar	_a @ sp[(0)+-8]
 13390  0179EA  0EF8               	movlw	-8
 13391  0179EC  006F FF8F FFE6     	movff	plusw1,postinc1
 13392  0179F2  006F FF8F FFE6     	movff	plusw1,postinc1
 13393  0179F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13394  0179FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13395                           
 13396                           ;stkvar	_b @ sp[(-4)+-4]
 13397  017A04  0EF8               	movlw	-8
 13398  017A06  006F FF8F FFE6     	movff	plusw1,postinc1
 13399  017A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 13400  017A12  006F FF8F FFE6     	movff	plusw1,postinc1
 13401  017A18  006F FF8F FFE6     	movff	plusw1,postinc1
 13402  017A1E  ECD6  F092         	call	___fladd	;wreg free
 13403                           
 13404                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13405  017A22  0EF8               	movlw	248
 13406  017A24  26E1               	addwf	fsr1l,f,c
 13407  017A26  0EFF               	movlw	255
 13408  017A28  22E2               	addwfc	fsr1h,f,c
 13409  017A2A  0012               	return		;funcret
 13410  017A2C                     __end_of___flsub:
 13411                           	opt callstack 0
 13412                           
 13413 ;; *************** function ___fladd *****************
 13414 ;; Defined at:
 13415 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  b               4  [STACK] long 
 13418 ;;  a               4  [STACK] long 
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;  grs             1  [STACK] unsigned char 
 13421 ;;  bexp            1  [STACK] unsigned char 
 13422 ;;  aexp            1  [STACK] unsigned char 
 13423 ;;  signs           1  [STACK] unsigned char 
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  4  [STACK] unsigned char 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/39
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;Total ram usage:        0 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:    6
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		_lp_filter
 13444 ;;		_efgtoa
 13445 ;;		___flsub
 13446 ;; This function uses a reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text53
 13450  0125AC                     __ptext53:
 13451                           	opt callstack 0
 13452  0125AC                     ___fladd:
 13453                           	opt callstack 0
 13454                           
 13455                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13456  0125AC  52E6               	movf	postinc1,f,c
 13457  0125AE  52E6               	movf	postinc1,f,c
 13458  0125B0  52E6               	movf	postinc1,f,c
 13459  0125B2  52E6               	movf	postinc1,f,c
 13460                           
 13461                           ;stkvar	_b @ sp[(-4)+-4]
 13462                           
 13463                           ;incstack = 0
 13464  0125B4  0EFB               	movlw	251
 13465  0125B6  24E1               	addwf	fsr1l,w,c
 13466  0125B8  6ED9               	movwf	fsr2l,c
 13467  0125BA  0EFF               	movlw	255
 13468  0125BC  20E2               	addwfc	fsr1h,w,c
 13469  0125BE  6EDA               	movwf	fsr2h,c
 13470  0125C0  50DF               	movf	indf2,w,c
 13471  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13472  0125C4  0E80               	movlw	128
 13473  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13474                           
 13475                           ;stkvar	_signs @ sp[(-4)+3]
 13476  0125C8  0EFF               	movlw	-1
 13477  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13478                           
 13479                           ;stkvar	_b @ sp[(-4)+-4]
 13480  0125D0  0EFB               	movlw	251
 13481  0125D2  24E1               	addwf	fsr1l,w,c
 13482  0125D4  6ED9               	movwf	fsr2l,c
 13483  0125D6  0EFF               	movlw	255
 13484  0125D8  20E2               	addwfc	fsr1h,w,c
 13485  0125DA  6EDA               	movwf	fsr2h,c
 13486  0125DC  50DF               	movf	indf2,w,c
 13487  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13488  0125E0  90D8               	bcf	status,0,c
 13489  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13490  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13491                           
 13492                           ;stkvar	_bexp @ sp[(-4)+1]
 13493  0125E6  0EFD               	movlw	-3
 13494  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13495                           
 13496                           ;stkvar	_b @ sp[(-4)+-4]
 13497  0125EE  0EFA               	movlw	250
 13498  0125F0  24E1               	addwf	fsr1l,w,c
 13499  0125F2  6ED9               	movwf	fsr2l,c
 13500  0125F4  0EFF               	movlw	255
 13501  0125F6  20E2               	addwfc	fsr1h,w,c
 13502  0125F8  6EDA               	movwf	fsr2h,c
 13503  0125FA  AEDF               	btfss	indf2,7,c
 13504  0125FC  D002               	goto	l9243
 13505                           
 13506                           ;stkvar	_bexp @ sp[(-4)+1]
 13507  0125FE  0EFD               	movlw	-3
 13508  012600  80E3               	bsf	plusw1,0,c
 13509  012602                     l9243:
 13510                           
 13511                           ;stkvar	_bexp @ sp[(-4)+1]
 13512  012602  0EFD               	movlw	-3
 13513  012604  50E3               	movf	plusw1,w,c
 13514  012606  B4D8               	btfsc	status,2,c
 13515  012608  D027               	goto	l9253
 13516                           
 13517                           ;stkvar	_bexp @ sp[(-4)+1]
 13518  01260A  0EFD               	movlw	-3
 13519  01260C  28E3               	incf	plusw1,w,c
 13520  01260E  A4D8               	btfss	status,2,c
 13521  012610  D018               	goto	l9249
 13522  012612  0E00               	movlw	0
 13523  012614  6E3A               	movwf	(btemp+8)^0,c
 13524  012616  0E00               	movlw	0
 13525  012618  6E3B               	movwf	(btemp+9)^0,c
 13526  01261A  0E00               	movlw	0
 13527  01261C  6E3C               	movwf	(btemp+10)^0,c
 13528  01261E  0E00               	movlw	0
 13529  012620  6E3D               	movwf	(btemp+11)^0,c
 13530                           
 13531                           ;stkvar	_b @ sp[(-4)+-4]
 13532  012622  0EF8               	movlw	-8
 13533  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13534  01262A  0EF9               	movlw	-7
 13535  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13536  012632  0EFA               	movlw	-6
 13537  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13538  01263A  0EFB               	movlw	-5
 13539  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13540  012642                     l9249:
 13541                           
 13542                           ;stkvar	_b @ sp[(-4)+-4]
 13543  012642  0EFA               	movlw	-6
 13544  012644  8EE3               	bsf	plusw1,7,c
 13545                           
 13546                           ;stkvar	_b @ sp[(-4)+-4]
 13547  012646  0EFB               	movlw	251
 13548  012648  24E1               	addwf	fsr1l,w,c
 13549  01264A  6ED9               	movwf	fsr2l,c
 13550  01264C  0EFF               	movlw	255
 13551  01264E  20E2               	addwfc	fsr1h,w,c
 13552  012650  6EDA               	movwf	fsr2h,c
 13553  012652  0E00               	movlw	0
 13554  012654  6EDF               	movwf	indf2,c
 13555  012656  D018               	goto	l9255
 13556  012658                     l9253:
 13557  012658  0E00               	movlw	0
 13558  01265A  6E3A               	movwf	(btemp+8)^0,c
 13559  01265C  0E00               	movlw	0
 13560  01265E  6E3B               	movwf	(btemp+9)^0,c
 13561  012660  0E00               	movlw	0
 13562  012662  6E3C               	movwf	(btemp+10)^0,c
 13563  012664  0E00               	movlw	0
 13564  012666  6E3D               	movwf	(btemp+11)^0,c
 13565                           
 13566                           ;stkvar	_b @ sp[(-4)+-4]
 13567  012668  0EF8               	movlw	-8
 13568  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13569  012670  0EF9               	movlw	-7
 13570  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13571  012678  0EFA               	movlw	-6
 13572  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13573  012680  0EFB               	movlw	-5
 13574  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13575  012688                     l9255:
 13576                           
 13577                           ;stkvar	_a @ sp[(-4)+-8]
 13578  012688  0EF7               	movlw	247
 13579  01268A  24E1               	addwf	fsr1l,w,c
 13580  01268C  6ED9               	movwf	fsr2l,c
 13581  01268E  0EFF               	movlw	255
 13582  012690  20E2               	addwfc	fsr1h,w,c
 13583  012692  6EDA               	movwf	fsr2h,c
 13584  012694  50DF               	movf	indf2,w,c
 13585  012696  6E3D               	movwf	(btemp+11)^0,c
 13586  012698  0E80               	movlw	128
 13587  01269A  163D               	andwf	(btemp+11)^0,f,c
 13588                           
 13589                           ;stkvar	_aexp @ sp[(-4)+2]
 13590  01269C  0EFE               	movlw	-2
 13591  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13592                           
 13593                           ;stkvar	_signs @ sp[(-4)+3]
 13594                           ;stkvar	_aexp @ sp[(-4)+2]
 13595  0126A4  50E1               	movf	fsr1l,w,c
 13596  0126A6  0FFE               	addlw	-2
 13597  0126A8  6ED9               	movwf	fsr2l,c
 13598  0126AA  50E2               	movf	fsr1h,w,c
 13599  0126AC  6EDA               	movwf	fsr2h,c
 13600  0126AE  0EFF               	movlw	255
 13601  0126B0  22DA               	addwfc	fsr2h,f,c
 13602  0126B2  0EFF               	movlw	-1
 13603  0126B4  50E3               	movf	plusw1,w,c
 13604  0126B6  18DE               	xorwf	postinc2,w,c
 13605  0126B8  B4D8               	btfsc	status,2,c
 13606  0126BA  D002               	goto	l9261
 13607                           
 13608                           ;stkvar	_signs @ sp[(-4)+3]
 13609  0126BC  0EFF               	movlw	-1
 13610  0126BE  8CE3               	bsf	plusw1,6,c
 13611  0126C0                     l9261:
 13612                           
 13613                           ;stkvar	_a @ sp[(-4)+-8]
 13614  0126C0  0EF7               	movlw	247
 13615  0126C2  24E1               	addwf	fsr1l,w,c
 13616  0126C4  6ED9               	movwf	fsr2l,c
 13617  0126C6  0EFF               	movlw	255
 13618  0126C8  20E2               	addwfc	fsr1h,w,c
 13619  0126CA  6EDA               	movwf	fsr2h,c
 13620  0126CC  50DF               	movf	indf2,w,c
 13621  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13622  0126D0  90D8               	bcf	status,0,c
 13623  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13624  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13625                           
 13626                           ;stkvar	_aexp @ sp[(-4)+2]
 13627  0126D6  0EFE               	movlw	-2
 13628  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13629                           
 13630                           ;stkvar	_a @ sp[(-4)+-8]
 13631  0126DE  0EF6               	movlw	246
 13632  0126E0  24E1               	addwf	fsr1l,w,c
 13633  0126E2  6ED9               	movwf	fsr2l,c
 13634  0126E4  0EFF               	movlw	255
 13635  0126E6  20E2               	addwfc	fsr1h,w,c
 13636  0126E8  6EDA               	movwf	fsr2h,c
 13637  0126EA  AEDF               	btfss	indf2,7,c
 13638  0126EC  D002               	goto	l9267
 13639                           
 13640                           ;stkvar	_aexp @ sp[(-4)+2]
 13641  0126EE  0EFE               	movlw	-2
 13642  0126F0  80E3               	bsf	plusw1,0,c
 13643  0126F2                     l9267:
 13644                           
 13645                           ;stkvar	_aexp @ sp[(-4)+2]
 13646  0126F2  0EFE               	movlw	-2
 13647  0126F4  50E3               	movf	plusw1,w,c
 13648  0126F6  B4D8               	btfsc	status,2,c
 13649  0126F8  D027               	goto	l9277
 13650                           
 13651                           ;stkvar	_aexp @ sp[(-4)+2]
 13652  0126FA  0EFE               	movlw	-2
 13653  0126FC  28E3               	incf	plusw1,w,c
 13654  0126FE  A4D8               	btfss	status,2,c
 13655  012700  D018               	goto	l9273
 13656  012702  0E00               	movlw	0
 13657  012704  6E3A               	movwf	(btemp+8)^0,c
 13658  012706  0E00               	movlw	0
 13659  012708  6E3B               	movwf	(btemp+9)^0,c
 13660  01270A  0E00               	movlw	0
 13661  01270C  6E3C               	movwf	(btemp+10)^0,c
 13662  01270E  0E00               	movlw	0
 13663  012710  6E3D               	movwf	(btemp+11)^0,c
 13664                           
 13665                           ;stkvar	_a @ sp[(-4)+-8]
 13666  012712  0EF4               	movlw	-12
 13667  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13668  01271A  0EF5               	movlw	-11
 13669  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13670  012722  0EF6               	movlw	-10
 13671  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13672  01272A  0EF7               	movlw	-9
 13673  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13674  012732                     l9273:
 13675                           
 13676                           ;stkvar	_a @ sp[(-4)+-8]
 13677  012732  0EF6               	movlw	-10
 13678  012734  8EE3               	bsf	plusw1,7,c
 13679                           
 13680                           ;stkvar	_a @ sp[(-4)+-8]
 13681  012736  0EF7               	movlw	247
 13682  012738  24E1               	addwf	fsr1l,w,c
 13683  01273A  6ED9               	movwf	fsr2l,c
 13684  01273C  0EFF               	movlw	255
 13685  01273E  20E2               	addwfc	fsr1h,w,c
 13686  012740  6EDA               	movwf	fsr2h,c
 13687  012742  0E00               	movlw	0
 13688  012744  6EDF               	movwf	indf2,c
 13689  012746  D018               	goto	l9279
 13690  012748                     l9277:
 13691  012748  0E00               	movlw	0
 13692  01274A  6E3A               	movwf	(btemp+8)^0,c
 13693  01274C  0E00               	movlw	0
 13694  01274E  6E3B               	movwf	(btemp+9)^0,c
 13695  012750  0E00               	movlw	0
 13696  012752  6E3C               	movwf	(btemp+10)^0,c
 13697  012754  0E00               	movlw	0
 13698  012756  6E3D               	movwf	(btemp+11)^0,c
 13699                           
 13700                           ;stkvar	_a @ sp[(-4)+-8]
 13701  012758  0EF4               	movlw	-12
 13702  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13703  012760  0EF5               	movlw	-11
 13704  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13705  012768  0EF6               	movlw	-10
 13706  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13707  012770  0EF7               	movlw	-9
 13708  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13709  012778                     l9279:
 13710                           
 13711                           ;stkvar	_bexp @ sp[(-4)+1]
 13712                           ;stkvar	_aexp @ sp[(-4)+2]
 13713  012778  50E1               	movf	fsr1l,w,c
 13714  01277A  0FFE               	addlw	-2
 13715  01277C  6ED9               	movwf	fsr2l,c
 13716  01277E  50E2               	movf	fsr1h,w,c
 13717  012780  6EDA               	movwf	fsr2h,c
 13718  012782  0EFF               	movlw	255
 13719  012784  22DA               	addwfc	fsr2h,f,c
 13720  012786  0EFD               	movlw	-3
 13721  012788  50E3               	movf	plusw1,w,c
 13722  01278A  5CDE               	subwf	postinc2,w,c
 13723  01278C  B0D8               	btfsc	status,0,c
 13724  01278E  D0A4               	goto	l9315
 13725                           
 13726                           ;stkvar	_signs @ sp[(-4)+3]
 13727  012790  0EFF               	movlw	-1
 13728  012792  ACE3               	btfss	plusw1,6,c
 13729  012794  D002               	goto	l9285
 13730                           
 13731                           ;stkvar	_signs @ sp[(-4)+3]
 13732  012796  0EFF               	movlw	-1
 13733  012798  7EE3               	btg	plusw1,7,c
 13734  01279A                     l9285:
 13735                           
 13736                           ;stkvar	_bexp @ sp[(-4)+1]
 13737                           ;stkvar	_grs @ sp[(-4)+0]
 13738  01279A  0EFD               	movlw	-3
 13739  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13740  0127A2  0EFC               	movlw	-4
 13741  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13742                           
 13743                           ;stkvar	_aexp @ sp[(-4)+2]
 13744                           ;stkvar	_bexp @ sp[(-4)+1]
 13745  0127AA  0EFE               	movlw	-2
 13746  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13747  0127B2  0EFD               	movlw	-3
 13748  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13749                           
 13750                           ;stkvar	_grs @ sp[(-4)+0]
 13751                           ;stkvar	_aexp @ sp[(-4)+2]
 13752  0127BA  0EFC               	movlw	-4
 13753  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13754  0127C2  0EFE               	movlw	-2
 13755  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13756                           
 13757                           ;stkvar	_b @ sp[(-4)+-4]
 13758                           ;stkvar	_grs @ sp[(-4)+0]
 13759  0127CA  0EF8               	movlw	-8
 13760  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13761  0127D2  0EFC               	movlw	-4
 13762  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13763                           
 13764                           ;stkvar	_a @ sp[(-4)+-8]
 13765                           ;stkvar	_b @ sp[(-4)+-4]
 13766  0127DA  0EF4               	movlw	-12
 13767  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13768  0127E2  0EF8               	movlw	-8
 13769  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13770                           
 13771                           ;stkvar	_grs @ sp[(-4)+0]
 13772                           ;stkvar	_a @ sp[(-4)+-8]
 13773  0127EA  0EFC               	movlw	-4
 13774  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13775  0127F2  0EF4               	movlw	-12
 13776  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13777                           
 13778                           ;stkvar	_b @ sp[(-4)+-4]
 13779  0127FA  0EF9               	movlw	249
 13780  0127FC  24E1               	addwf	fsr1l,w,c
 13781  0127FE  6ED9               	movwf	fsr2l,c
 13782  012800  0EFF               	movlw	255
 13783  012802  20E2               	addwfc	fsr1h,w,c
 13784  012804  6EDA               	movwf	fsr2h,c
 13785  012806  50DF               	movf	indf2,w,c
 13786  012808  6E3D               	movwf	(btemp+11)^0,c
 13787                           
 13788                           ;stkvar	_grs @ sp[(-4)+0]
 13789  01280A  0EFC               	movlw	-4
 13790  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13791                           
 13792                           ;stkvar	_a @ sp[(-4)+-8]
 13793  012812  0EF5               	movlw	245
 13794  012814  24E1               	addwf	fsr1l,w,c
 13795  012816  6ED9               	movwf	fsr2l,c
 13796  012818  0EFF               	movlw	255
 13797  01281A  20E2               	addwfc	fsr1h,w,c
 13798  01281C  6EDA               	movwf	fsr2h,c
 13799                           
 13800                           ;stkvar	_b @ sp[(-4)+-4]
 13801  01281E  0EF9               	movlw	249
 13802  012820  24E1               	addwf	fsr1l,w,c
 13803  012822  6EE9               	movwf	fsr0l,c
 13804  012824  0EFF               	movlw	255
 13805  012826  20E2               	addwfc	fsr1h,w,c
 13806  012828  6EEA               	movwf	fsr0h,c
 13807  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13808                           
 13809                           ;stkvar	_grs @ sp[(-4)+0]
 13810                           ;stkvar	_a @ sp[(-4)+-8]
 13811  012830  0EF5               	movlw	245
 13812  012832  24E1               	addwf	fsr1l,w,c
 13813  012834  6ED9               	movwf	fsr2l,c
 13814  012836  0EFF               	movlw	255
 13815  012838  20E2               	addwfc	fsr1h,w,c
 13816  01283A  6EDA               	movwf	fsr2h,c
 13817  01283C  0EFC               	movlw	-4
 13818  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13819                           
 13820                           ;stkvar	_b @ sp[(-4)+-4]
 13821  012844  0EFA               	movlw	250
 13822  012846  24E1               	addwf	fsr1l,w,c
 13823  012848  6ED9               	movwf	fsr2l,c
 13824  01284A  0EFF               	movlw	255
 13825  01284C  20E2               	addwfc	fsr1h,w,c
 13826  01284E  6EDA               	movwf	fsr2h,c
 13827  012850  50DF               	movf	indf2,w,c
 13828  012852  6E3D               	movwf	(btemp+11)^0,c
 13829                           
 13830                           ;stkvar	_grs @ sp[(-4)+0]
 13831  012854  0EFC               	movlw	-4
 13832  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13833                           
 13834                           ;stkvar	_a @ sp[(-4)+-8]
 13835  01285C  0EF6               	movlw	246
 13836  01285E  24E1               	addwf	fsr1l,w,c
 13837  012860  6ED9               	movwf	fsr2l,c
 13838  012862  0EFF               	movlw	255
 13839  012864  20E2               	addwfc	fsr1h,w,c
 13840  012866  6EDA               	movwf	fsr2h,c
 13841                           
 13842                           ;stkvar	_b @ sp[(-4)+-4]
 13843  012868  0EFA               	movlw	250
 13844  01286A  24E1               	addwf	fsr1l,w,c
 13845  01286C  6EE9               	movwf	fsr0l,c
 13846  01286E  0EFF               	movlw	255
 13847  012870  20E2               	addwfc	fsr1h,w,c
 13848  012872  6EEA               	movwf	fsr0h,c
 13849  012874  006F FF7F FFEF     	movff	indf2,indf0
 13850                           
 13851                           ;stkvar	_grs @ sp[(-4)+0]
 13852                           ;stkvar	_a @ sp[(-4)+-8]
 13853  01287A  0EF6               	movlw	246
 13854  01287C  24E1               	addwf	fsr1l,w,c
 13855  01287E  6ED9               	movwf	fsr2l,c
 13856  012880  0EFF               	movlw	255
 13857  012882  20E2               	addwfc	fsr1h,w,c
 13858  012884  6EDA               	movwf	fsr2h,c
 13859  012886  0EFC               	movlw	-4
 13860  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13861                           
 13862                           ;stkvar	_b @ sp[(-4)+-4]
 13863  01288E  0EFB               	movlw	251
 13864  012890  24E1               	addwf	fsr1l,w,c
 13865  012892  6ED9               	movwf	fsr2l,c
 13866  012894  0EFF               	movlw	255
 13867  012896  20E2               	addwfc	fsr1h,w,c
 13868  012898  6EDA               	movwf	fsr2h,c
 13869  01289A  50DF               	movf	indf2,w,c
 13870  01289C  6E3D               	movwf	(btemp+11)^0,c
 13871                           
 13872                           ;stkvar	_grs @ sp[(-4)+0]
 13873  01289E  0EFC               	movlw	-4
 13874  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13875                           
 13876                           ;stkvar	_a @ sp[(-4)+-8]
 13877  0128A6  0EF7               	movlw	247
 13878  0128A8  24E1               	addwf	fsr1l,w,c
 13879  0128AA  6ED9               	movwf	fsr2l,c
 13880  0128AC  0EFF               	movlw	255
 13881  0128AE  20E2               	addwfc	fsr1h,w,c
 13882  0128B0  6EDA               	movwf	fsr2h,c
 13883                           
 13884                           ;stkvar	_b @ sp[(-4)+-4]
 13885  0128B2  0EFB               	movlw	251
 13886  0128B4  24E1               	addwf	fsr1l,w,c
 13887  0128B6  6EE9               	movwf	fsr0l,c
 13888  0128B8  0EFF               	movlw	255
 13889  0128BA  20E2               	addwfc	fsr1h,w,c
 13890  0128BC  6EEA               	movwf	fsr0h,c
 13891  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13892                           
 13893                           ;stkvar	_grs @ sp[(-4)+0]
 13894                           ;stkvar	_a @ sp[(-4)+-8]
 13895  0128C4  0EF7               	movlw	247
 13896  0128C6  24E1               	addwf	fsr1l,w,c
 13897  0128C8  6ED9               	movwf	fsr2l,c
 13898  0128CA  0EFF               	movlw	255
 13899  0128CC  20E2               	addwfc	fsr1h,w,c
 13900  0128CE  6EDA               	movwf	fsr2h,c
 13901  0128D0  0EFC               	movlw	-4
 13902  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13903  0128D8                     l9315:
 13904                           
 13905                           ;stkvar	_grs @ sp[(-4)+0]
 13906  0128D8  0EFC               	movlw	-4
 13907  0128DA  6AE3               	clrf	plusw1,c
 13908                           
 13909                           ;stkvar	_aexp @ sp[(-4)+2]
 13910  0128DC  0EFE               	movlw	-2
 13911  0128DE  50E3               	movf	plusw1,w,c
 13912  0128E0  6E3C               	movwf	(btemp+10)^0,c
 13913  0128E2  6A3D               	clrf	(btemp+11)^0,c
 13914                           
 13915                           ;stkvar	_bexp @ sp[(-4)+1]
 13916  0128E4  0EFD               	movlw	-3
 13917  0128E6  50E3               	movf	plusw1,w,c
 13918  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 13919  0128EA  0E00               	movlw	0
 13920  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 13921  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 13922  0128F0  D062               	goto	l9339
 13923  0128F2  503D               	movf	(btemp+11)^0,w,c
 13924  0128F4  E104               	bnz	u8940
 13925  0128F6  0E1A               	movlw	26
 13926  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 13927  0128FA  A0D8               	btfss	status,0,c
 13928  0128FC  D05C               	goto	l9339
 13929  0128FE                     u8940:
 13930                           
 13931                           ;stkvar	_b @ sp[(-4)+-4]
 13932  0128FE  0EF8               	movlw	-8
 13933  012900  50E3               	movf	plusw1,w,c
 13934  012902  E10A               	bnz	u8951
 13935  012904  0EF9               	movlw	-7
 13936  012906  50E3               	movf	plusw1,w,c
 13937  012908  E107               	bnz	u8951
 13938  01290A  0EFA               	movlw	-6
 13939  01290C  50E3               	movf	plusw1,w,c
 13940  01290E  E104               	bnz	u8951
 13941  012910  0EFB               	movlw	-5
 13942  012912  50E3               	movf	plusw1,w,c
 13943  012914  B4D8               	btfsc	status,2,c
 13944  012916  D003               	goto	u8950
 13945  012918                     u8951:
 13946  012918  6A3D               	clrf	(btemp+11)^0,c
 13947  01291A  2A3D               	incf	(btemp+11)^0,f,c
 13948  01291C  D001               	goto	u8968
 13949  01291E                     u8950:
 13950  01291E  6A3D               	clrf	(btemp+11)^0,c
 13951  012920                     u8968:
 13952                           
 13953                           ;stkvar	_grs @ sp[(-4)+0]
 13954  012920  0EFC               	movlw	-4
 13955  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13956                           
 13957                           ;stkvar	_b @ sp[(-4)+-4]
 13958  012928  0EF8               	movlw	-8
 13959  01292A  6AE3               	clrf	plusw1,c
 13960  01292C  0EF9               	movlw	-7
 13961  01292E  6AE3               	clrf	plusw1,c
 13962  012930  0EFA               	movlw	-6
 13963  012932  6AE3               	clrf	plusw1,c
 13964  012934  0EFB               	movlw	-5
 13965  012936  6AE3               	clrf	plusw1,c
 13966                           
 13967                           ;stkvar	_aexp @ sp[(-4)+2]
 13968                           ;stkvar	_bexp @ sp[(-4)+1]
 13969  012938  0EFE               	movlw	-2
 13970  01293A  006F FF8C  F032    	movff	plusw1,btemp
 13971  012940  0EFD               	movlw	-3
 13972  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 13973  012948  D042               	goto	u9000
 13974  01294A                     l9325:
 13975                           
 13976                           ;stkvar	_grs @ sp[(-4)+0]
 13977  01294A  0EFC               	movlw	-4
 13978  01294C  A0E3               	btfss	plusw1,0,c
 13979  01294E  D00D               	goto	l9329
 13980                           
 13981                           ;stkvar	_grs @ sp[(-4)+0]
 13982  012950  0EFC               	movlw	-4
 13983  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 13984  012958  90D8               	bcf	status,0,c
 13985  01295A  323D               	rrcf	(btemp+11)^0,f,c
 13986  01295C  0E01               	movlw	1
 13987  01295E  123D               	iorwf	(btemp+11)^0,f,c
 13988                           
 13989                           ;stkvar	_grs @ sp[(-4)+0]
 13990  012960  0EFC               	movlw	-4
 13991  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13992  012968  D009               	goto	l9331
 13993  01296A                     l9329:
 13994                           
 13995                           ;stkvar	_grs @ sp[(-4)+0]
 13996  01296A  50E1               	movf	fsr1l,w,c
 13997  01296C  0FFC               	addlw	-4
 13998  01296E  6ED9               	movwf	fsr2l,c
 13999  012970  50E2               	movf	fsr1h,w,c
 14000  012972  6EDA               	movwf	fsr2h,c
 14001  012974  0EFF               	movlw	255
 14002  012976  22DA               	addwfc	fsr2h,f,c
 14003  012978  90D8               	bcf	status,0,c
 14004  01297A  32DF               	rrcf	indf2,f,c
 14005  01297C                     l9331:
 14006                           
 14007                           ;stkvar	_b @ sp[(-4)+-4]
 14008  01297C  0EF8               	movlw	-8
 14009  01297E  A0E3               	btfss	plusw1,0,c
 14010  012980  D002               	goto	l9335
 14011                           
 14012                           ;stkvar	_grs @ sp[(-4)+0]
 14013  012982  0EFC               	movlw	-4
 14014  012984  8EE3               	bsf	plusw1,7,c
 14015  012986                     l9335:
 14016  012986  0E01               	movlw	1
 14017  012988  6E3D               	movwf	(btemp+11)^0,c
 14018                           
 14019                           ;stkvar	_b @ sp[(-4)+-4]
 14020  01298A  50E1               	movf	fsr1l,w,c
 14021  01298C  0FF8               	addlw	-8
 14022  01298E  6ED9               	movwf	fsr2l,c
 14023  012990  50E2               	movf	fsr1h,w,c
 14024  012992  6EDA               	movwf	fsr2h,c
 14025  012994  0EFF               	movlw	255
 14026  012996  22DA               	addwfc	fsr2h,f,c
 14027  012998  283D               	incf	(btemp+11)^0,w,c
 14028  01299A  52DE               	movf	postinc2,f,c
 14029  01299C  D008               	goto	u8990
 14030  01299E                     u8995:
 14031  01299E  52DE               	movf	postinc2,f,c
 14032  0129A0  90D8               	bcf	status,0,c
 14033  0129A2  BEDC               	btfsc	preinc2,7,c
 14034  0129A4  80D8               	bsf	status,0,c
 14035  0129A6  32DD               	rrcf	postdec2,f,c
 14036  0129A8  32DD               	rrcf	postdec2,f,c
 14037  0129AA  32DD               	rrcf	postdec2,f,c
 14038  0129AC  32DE               	rrcf	postinc2,f,c
 14039  0129AE                     u8990:
 14040  0129AE  2EE8               	decfsz	wreg,f,c
 14041  0129B0  D7F6               	goto	u8995
 14042                           
 14043                           ;stkvar	_bexp @ sp[(-4)+1]
 14044  0129B2  0EFD               	movlw	-3
 14045  0129B4  2AE3               	incf	plusw1,f,c
 14046  0129B6                     l9339:
 14047                           
 14048                           ;stkvar	_aexp @ sp[(-4)+2]
 14049                           ;stkvar	_bexp @ sp[(-4)+1]
 14050  0129B6  50E1               	movf	fsr1l,w,c
 14051  0129B8  0FFD               	addlw	-3
 14052  0129BA  6ED9               	movwf	fsr2l,c
 14053  0129BC  50E2               	movf	fsr1h,w,c
 14054  0129BE  6EDA               	movwf	fsr2h,c
 14055  0129C0  0EFF               	movlw	255
 14056  0129C2  22DA               	addwfc	fsr2h,f,c
 14057  0129C4  0EFE               	movlw	-2
 14058  0129C6  50E3               	movf	plusw1,w,c
 14059  0129C8  5CDE               	subwf	postinc2,w,c
 14060  0129CA  A0D8               	btfss	status,0,c
 14061  0129CC  D7BE               	goto	l9325
 14062  0129CE                     u9000:
 14063                           
 14064                           ;stkvar	_signs @ sp[(-4)+3]
 14065  0129CE  0EFF               	movlw	-1
 14066  0129D0  BCE3               	btfsc	plusw1,6,c
 14067  0129D2  D066               	goto	l9367
 14068                           
 14069                           ;stkvar	_bexp @ sp[(-4)+1]
 14070  0129D4  0EFD               	movlw	-3
 14071  0129D6  50E3               	movf	plusw1,w,c
 14072  0129D8  B4D8               	btfsc	status,2,c
 14073  0129DA  D0F2               	goto	u9100
 14074                           
 14075                           ;stkvar	_a @ sp[(-4)+-8]
 14076                           ;stkvar	_b @ sp[(-4)+-4]
 14077  0129DC  0EF8               	movlw	-8
 14078  0129DE  50E3               	movf	plusw1,w,c
 14079  0129E0  6E32               	movwf	btemp^0,c
 14080  0129E2  0EF4               	movlw	-12
 14081  0129E4  50E3               	movf	plusw1,w,c
 14082  0129E6  2632               	addwf	btemp^0,f,c
 14083  0129E8  0EF8               	movlw	-8
 14084  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14085  0129F0  0EF9               	movlw	-7
 14086  0129F2  50E3               	movf	plusw1,w,c
 14087  0129F4  6E32               	movwf	btemp^0,c
 14088  0129F6  0EF5               	movlw	-11
 14089  0129F8  50E3               	movf	plusw1,w,c
 14090  0129FA  2232               	addwfc	btemp^0,f,c
 14091  0129FC  0EF9               	movlw	-7
 14092  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14093  012A04  0EFA               	movlw	-6
 14094  012A06  50E3               	movf	plusw1,w,c
 14095  012A08  6E32               	movwf	btemp^0,c
 14096  012A0A  0EF6               	movlw	-10
 14097  012A0C  50E3               	movf	plusw1,w,c
 14098  012A0E  2232               	addwfc	btemp^0,f,c
 14099  012A10  0EFA               	movlw	-6
 14100  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14101  012A18  0EFB               	movlw	-5
 14102  012A1A  50E3               	movf	plusw1,w,c
 14103  012A1C  6E32               	movwf	btemp^0,c
 14104  012A1E  0EF7               	movlw	-9
 14105  012A20  50E3               	movf	plusw1,w,c
 14106  012A22  2232               	addwfc	btemp^0,f,c
 14107  012A24  0EFB               	movlw	-5
 14108  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14109                           
 14110                           ;stkvar	_b @ sp[(-4)+-4]
 14111  012A2C  0EFB               	movlw	-5
 14112  012A2E  A0E3               	btfss	plusw1,0,c
 14113  012A30  D101               	goto	u9140
 14114                           
 14115                           ;stkvar	_grs @ sp[(-4)+0]
 14116  012A32  0EFC               	movlw	-4
 14117  012A34  A0E3               	btfss	plusw1,0,c
 14118  012A36  D00D               	goto	l9357
 14119                           
 14120                           ;stkvar	_grs @ sp[(-4)+0]
 14121  012A38  0EFC               	movlw	-4
 14122  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14123  012A40  90D8               	bcf	status,0,c
 14124  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14125  012A44  0E01               	movlw	1
 14126  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14127                           
 14128                           ;stkvar	_grs @ sp[(-4)+0]
 14129  012A48  0EFC               	movlw	-4
 14130  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14131  012A50  D009               	goto	l9359
 14132  012A52                     l9357:
 14133                           
 14134                           ;stkvar	_grs @ sp[(-4)+0]
 14135  012A52  50E1               	movf	fsr1l,w,c
 14136  012A54  0FFC               	addlw	-4
 14137  012A56  6ED9               	movwf	fsr2l,c
 14138  012A58  50E2               	movf	fsr1h,w,c
 14139  012A5A  6EDA               	movwf	fsr2h,c
 14140  012A5C  0EFF               	movlw	255
 14141  012A5E  22DA               	addwfc	fsr2h,f,c
 14142  012A60  90D8               	bcf	status,0,c
 14143  012A62  32DF               	rrcf	indf2,f,c
 14144  012A64                     l9359:
 14145                           
 14146                           ;stkvar	_b @ sp[(-4)+-4]
 14147  012A64  0EF8               	movlw	-8
 14148  012A66  A0E3               	btfss	plusw1,0,c
 14149  012A68  D002               	goto	l9363
 14150                           
 14151                           ;stkvar	_grs @ sp[(-4)+0]
 14152  012A6A  0EFC               	movlw	-4
 14153  012A6C  8EE3               	bsf	plusw1,7,c
 14154  012A6E                     l9363:
 14155  012A6E  0E01               	movlw	1
 14156  012A70  6E3D               	movwf	(btemp+11)^0,c
 14157                           
 14158                           ;stkvar	_b @ sp[(-4)+-4]
 14159  012A72  50E1               	movf	fsr1l,w,c
 14160  012A74  0FF8               	addlw	-8
 14161  012A76  6ED9               	movwf	fsr2l,c
 14162  012A78  50E2               	movf	fsr1h,w,c
 14163  012A7A  6EDA               	movwf	fsr2h,c
 14164  012A7C  0EFF               	movlw	255
 14165  012A7E  22DA               	addwfc	fsr2h,f,c
 14166  012A80  283D               	incf	(btemp+11)^0,w,c
 14167  012A82  52DE               	movf	postinc2,f,c
 14168  012A84  D008               	goto	u9060
 14169  012A86                     u9065:
 14170  012A86  52DE               	movf	postinc2,f,c
 14171  012A88  90D8               	bcf	status,0,c
 14172  012A8A  BEDC               	btfsc	preinc2,7,c
 14173  012A8C  80D8               	bsf	status,0,c
 14174  012A8E  32DD               	rrcf	postdec2,f,c
 14175  012A90  32DD               	rrcf	postdec2,f,c
 14176  012A92  32DD               	rrcf	postdec2,f,c
 14177  012A94  32DE               	rrcf	postinc2,f,c
 14178  012A96                     u9060:
 14179  012A96  2EE8               	decfsz	wreg,f,c
 14180  012A98  D7F6               	goto	u9065
 14181                           
 14182                           ;stkvar	_bexp @ sp[(-4)+1]
 14183  012A9A  0EFD               	movlw	-3
 14184  012A9C  2AE3               	incf	plusw1,f,c
 14185  012A9E  D0CA               	goto	u9140
 14186  012AA0                     l9367:
 14187                           
 14188                           ;stkvar	_a @ sp[(-4)+-8]
 14189                           ;stkvar	_b @ sp[(-4)+-4]
 14190  012AA0  50E1               	movf	fsr1l,w,c
 14191  012AA2  0FF8               	addlw	-8
 14192  012AA4  6ED9               	movwf	fsr2l,c
 14193  012AA6  50E2               	movf	fsr1h,w,c
 14194  012AA8  6EDA               	movwf	fsr2h,c
 14195  012AAA  0EFF               	movlw	255
 14196  012AAC  22DA               	addwfc	fsr2h,f,c
 14197  012AAE  0EF4               	movlw	-12
 14198  012AB0  50E3               	movf	plusw1,w,c
 14199  012AB2  5CDE               	subwf	postinc2,w,c
 14200  012AB4  0EF5               	movlw	-11
 14201  012AB6  50E3               	movf	plusw1,w,c
 14202  012AB8  58DE               	subwfb	postinc2,w,c
 14203  012ABA  0EF6               	movlw	-10
 14204  012ABC  50E3               	movf	plusw1,w,c
 14205  012ABE  58DE               	subwfb	postinc2,w,c
 14206  012AC0  50DE               	movf	postinc2,w,c
 14207  012AC2  0A80               	xorlw	128
 14208  012AC4  6E32               	movwf	btemp^0,c
 14209  012AC6  0EF7               	movlw	-9
 14210  012AC8  50E3               	movf	plusw1,w,c
 14211  012ACA  0A80               	xorlw	128
 14212  012ACC  5832               	subwfb	btemp^0,w,c
 14213  012ACE  B0D8               	btfsc	status,0,c
 14214  012AD0  D053               	goto	l9379
 14215                           
 14216                           ;stkvar	_b @ sp[(-4)+-4]
 14217                           ;stkvar	_a @ sp[(-4)+-8]
 14218  012AD2  0EF4               	movlw	-12
 14219  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14220  012ADA  0EF5               	movlw	-11
 14221  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14222  012AE2  0EF6               	movlw	-10
 14223  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14224  012AEA  0EF7               	movlw	-9
 14225  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14226  012AF2  0EF8               	movlw	-8
 14227  012AF4  50E3               	movf	plusw1,w,c
 14228  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14229  012AF8  0EF9               	movlw	-7
 14230  012AFA  50E3               	movf	plusw1,w,c
 14231  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14232  012AFE  0EFA               	movlw	-6
 14233  012B00  50E3               	movf	plusw1,w,c
 14234  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14235  012B04  0EFB               	movlw	-5
 14236  012B06  50E3               	movf	plusw1,w,c
 14237  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14238  012B0A  0EFF               	movlw	255
 14239  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14240  012B0E  6E36               	movwf	(btemp+4)^0,c
 14241  012B10  0EFF               	movlw	255
 14242  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14243  012B14  6E37               	movwf	(btemp+5)^0,c
 14244  012B16  0EFF               	movlw	255
 14245  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14246  012B1A  6E38               	movwf	(btemp+6)^0,c
 14247  012B1C  0EFF               	movlw	255
 14248  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14249  012B20  6E39               	movwf	(btemp+7)^0,c
 14250                           
 14251                           ;stkvar	_b @ sp[(-4)+-4]
 14252  012B22  0EF8               	movlw	-8
 14253  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14254  012B2A  0EF9               	movlw	-7
 14255  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14256  012B32  0EFA               	movlw	-6
 14257  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14258  012B3A  0EFB               	movlw	-5
 14259  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14260                           
 14261                           ;stkvar	_signs @ sp[(-4)+3]
 14262  012B42  0EFF               	movlw	-1
 14263  012B44  7EE3               	btg	plusw1,7,c
 14264                           
 14265                           ;stkvar	_grs @ sp[(-4)+0]
 14266  012B46  0EFC               	movlw	-4
 14267  012B48  50E3               	movf	plusw1,w,c
 14268  012B4A  0800               	sublw	0
 14269  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14270                           
 14271                           ;stkvar	_grs @ sp[(-4)+0]
 14272  012B4E  0EFC               	movlw	-4
 14273  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14274                           
 14275                           ;stkvar	_grs @ sp[(-4)+0]
 14276  012B56  0EFC               	movlw	-4
 14277  012B58  50E3               	movf	plusw1,w,c
 14278  012B5A  A4D8               	btfss	status,2,c
 14279  012B5C  D020               	goto	l9381
 14280                           
 14281                           ;stkvar	_b @ sp[(-4)+-4]
 14282  012B5E  50E1               	movf	fsr1l,w,c
 14283  012B60  0FF8               	addlw	-8
 14284  012B62  6ED9               	movwf	fsr2l,c
 14285  012B64  50E2               	movf	fsr1h,w,c
 14286  012B66  6EDA               	movwf	fsr2h,c
 14287  012B68  0EFF               	movlw	255
 14288  012B6A  22DA               	addwfc	fsr2h,f,c
 14289  012B6C  2ADE               	incf	postinc2,f,c
 14290  012B6E  0E00               	movlw	0
 14291  012B70  22DE               	addwfc	postinc2,f,c
 14292  012B72  22DE               	addwfc	postinc2,f,c
 14293  012B74  22DE               	addwfc	postinc2,f,c
 14294  012B76  D013               	goto	l9381
 14295  012B78                     l9379:
 14296                           
 14297                           ;stkvar	_a @ sp[(-4)+-8]
 14298                           ;stkvar	_b @ sp[(-4)+-4]
 14299  012B78  50E1               	movf	fsr1l,w,c
 14300  012B7A  0FF8               	addlw	-8
 14301  012B7C  6ED9               	movwf	fsr2l,c
 14302  012B7E  50E2               	movf	fsr1h,w,c
 14303  012B80  6EDA               	movwf	fsr2h,c
 14304  012B82  0EFF               	movlw	255
 14305  012B84  22DA               	addwfc	fsr2h,f,c
 14306  012B86  0EF4               	movlw	-12
 14307  012B88  50E3               	movf	plusw1,w,c
 14308  012B8A  5EDE               	subwf	postinc2,f,c
 14309  012B8C  0EF5               	movlw	-11
 14310  012B8E  50E3               	movf	plusw1,w,c
 14311  012B90  5ADE               	subwfb	postinc2,f,c
 14312  012B92  0EF6               	movlw	-10
 14313  012B94  50E3               	movf	plusw1,w,c
 14314  012B96  5ADE               	subwfb	postinc2,f,c
 14315  012B98  0EF7               	movlw	-9
 14316  012B9A  50E3               	movf	plusw1,w,c
 14317  012B9C  5ADE               	subwfb	postinc2,f,c
 14318  012B9E                     l9381:
 14319                           
 14320                           ;stkvar	_b @ sp[(-4)+-4]
 14321  012B9E  0EF8               	movlw	-8
 14322  012BA0  50E3               	movf	plusw1,w,c
 14323  012BA2  E145               	bnz	l9403
 14324  012BA4  0EF9               	movlw	-7
 14325  012BA6  50E3               	movf	plusw1,w,c
 14326  012BA8  E142               	bnz	l9403
 14327  012BAA  0EFA               	movlw	-6
 14328  012BAC  50E3               	movf	plusw1,w,c
 14329  012BAE  E13F               	bnz	l9403
 14330  012BB0  0EFB               	movlw	-5
 14331  012BB2  50E3               	movf	plusw1,w,c
 14332  012BB4  A4D8               	btfss	status,2,c
 14333  012BB6  D03B               	goto	l9403
 14334                           
 14335                           ;stkvar	_grs @ sp[(-4)+0]
 14336  012BB8  0EFC               	movlw	-4
 14337  012BBA  50E3               	movf	plusw1,w,c
 14338  012BBC  A4D8               	btfss	status,2,c
 14339  012BBE  D037               	goto	l9403
 14340  012BC0                     u9100:
 14341  012BC0  0E00               	movlw	0
 14342  012BC2  6E32               	movwf	btemp^0,c
 14343  012BC4  0E00               	movlw	0
 14344  012BC6  6E33               	movwf	(btemp+1)^0,c
 14345  012BC8  0E00               	movlw	0
 14346  012BCA  6E34               	movwf	(btemp+2)^0,c
 14347  012BCC  0E00               	movlw	0
 14348  012BCE  6E35               	movwf	(btemp+3)^0,c
 14349  012BD0  D0C6               	goto	l2579
 14350  012BD2                     l9389:
 14351                           
 14352                           ;stkvar	_b @ sp[(-4)+-4]
 14353  012BD2  90D8               	bcf	status,0,c
 14354  012BD4  0EF8               	movlw	-8
 14355  012BD6  36E3               	rlcf	plusw1,f,c
 14356  012BD8  0EF9               	movlw	-7
 14357  012BDA  36E3               	rlcf	plusw1,f,c
 14358  012BDC  0EFA               	movlw	-6
 14359  012BDE  36E3               	rlcf	plusw1,f,c
 14360  012BE0  0EFB               	movlw	-5
 14361  012BE2  36E3               	rlcf	plusw1,f,c
 14362                           
 14363                           ;stkvar	_grs @ sp[(-4)+0]
 14364  012BE4  0EFC               	movlw	-4
 14365  012BE6  AEE3               	btfss	plusw1,7,c
 14366  012BE8  D002               	goto	l2591
 14367                           
 14368                           ;stkvar	_b @ sp[(-4)+-4]
 14369  012BEA  0EF8               	movlw	-8
 14370  012BEC  80E3               	bsf	plusw1,0,c
 14371  012BEE                     l2591:
 14372                           
 14373                           ;stkvar	_grs @ sp[(-4)+0]
 14374  012BEE  0EFC               	movlw	-4
 14375  012BF0  A0E3               	btfss	plusw1,0,c
 14376  012BF2  D00E               	goto	l9397
 14377                           
 14378                           ;stkvar	_grs @ sp[(-4)+0]
 14379  012BF4  0EFC               	movlw	-4
 14380  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14381  012BFC  90D8               	bcf	status,0,c
 14382  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14383  012C00  6E3C               	movwf	(btemp+10)^0,c
 14384  012C02  0E01               	movlw	1
 14385  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14386                           
 14387                           ;stkvar	_grs @ sp[(-4)+0]
 14388  012C06  0EFC               	movlw	-4
 14389  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14390  012C0E  D009               	goto	l9399
 14391  012C10                     l9397:
 14392                           
 14393                           ;stkvar	_grs @ sp[(-4)+0]
 14394  012C10  50E1               	movf	fsr1l,w,c
 14395  012C12  0FFC               	addlw	-4
 14396  012C14  6ED9               	movwf	fsr2l,c
 14397  012C16  50E2               	movf	fsr1h,w,c
 14398  012C18  6EDA               	movwf	fsr2h,c
 14399  012C1A  0EFF               	movlw	255
 14400  012C1C  22DA               	addwfc	fsr2h,f,c
 14401  012C1E  90D8               	bcf	status,0,c
 14402  012C20  36DF               	rlcf	indf2,f,c
 14403  012C22                     l9399:
 14404                           
 14405                           ;stkvar	_bexp @ sp[(-4)+1]
 14406  012C22  0EFD               	movlw	-3
 14407  012C24  50E3               	movf	plusw1,w,c
 14408  012C26  B4D8               	btfsc	status,2,c
 14409  012C28  D002               	goto	l9403
 14410                           
 14411                           ;stkvar	_bexp @ sp[(-4)+1]
 14412  012C2A  0EFD               	movlw	-3
 14413  012C2C  06E3               	decf	plusw1,f,c
 14414  012C2E                     l9403:
 14415                           
 14416                           ;stkvar	_b @ sp[(-4)+-4]
 14417  012C2E  0EFA               	movlw	-6
 14418  012C30  AEE3               	btfss	plusw1,7,c
 14419  012C32  D7CF               	goto	l9389
 14420  012C34                     u9140:
 14421                           
 14422                           ;stkvar	_aexp @ sp[(-4)+2]
 14423  012C34  0EFE               	movlw	-2
 14424  012C36  6AE3               	clrf	plusw1,c
 14425                           
 14426                           ;stkvar	_grs @ sp[(-4)+0]
 14427  012C38  0EFC               	movlw	-4
 14428  012C3A  AEE3               	btfss	plusw1,7,c
 14429  012C3C  D00F               	goto	l9417
 14430                           
 14431                           ;stkvar	_grs @ sp[(-4)+0]
 14432  012C3E  0EFC               	movlw	-4
 14433  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14434  012C46  0E7F               	movlw	127
 14435  012C48  163D               	andwf	(btemp+11)^0,f,c
 14436  012C4A  B4D8               	btfsc	status,2,c
 14437  012C4C  D004               	goto	l9413
 14438  012C4E                     u9160:
 14439                           
 14440                           ;stkvar	_aexp @ sp[(-4)+2]
 14441  012C4E  0EFE               	movlw	-2
 14442  012C50  6AE3               	clrf	plusw1,c
 14443  012C52  2AE3               	incf	plusw1,f,c
 14444  012C54  D003               	goto	l9417
 14445  012C56                     l9413:
 14446                           
 14447                           ;stkvar	_b @ sp[(-4)+-4]
 14448  012C56  0EF8               	movlw	-8
 14449  012C58  B0E3               	btfsc	plusw1,0,c
 14450  012C5A  D7F9               	goto	u9160
 14451  012C5C                     l9417:
 14452                           
 14453                           ;stkvar	_aexp @ sp[(-4)+2]
 14454  012C5C  0EFE               	movlw	-2
 14455  012C5E  50E3               	movf	plusw1,w,c
 14456  012C60  B4D8               	btfsc	status,2,c
 14457  012C62  D02B               	goto	l9429
 14458                           
 14459                           ;stkvar	_b @ sp[(-4)+-4]
 14460  012C64  50E1               	movf	fsr1l,w,c
 14461  012C66  0FF8               	addlw	-8
 14462  012C68  6ED9               	movwf	fsr2l,c
 14463  012C6A  50E2               	movf	fsr1h,w,c
 14464  012C6C  6EDA               	movwf	fsr2h,c
 14465  012C6E  0EFF               	movlw	255
 14466  012C70  22DA               	addwfc	fsr2h,f,c
 14467  012C72  2ADE               	incf	postinc2,f,c
 14468  012C74  0E00               	movlw	0
 14469  012C76  22DE               	addwfc	postinc2,f,c
 14470  012C78  22DE               	addwfc	postinc2,f,c
 14471  012C7A  22DE               	addwfc	postinc2,f,c
 14472                           
 14473                           ;stkvar	_b @ sp[(-4)+-4]
 14474  012C7C  0EFB               	movlw	-5
 14475  012C7E  A0E3               	btfss	plusw1,0,c
 14476  012C80  D01C               	goto	l9429
 14477  012C82  0E01               	movlw	1
 14478  012C84  6E3D               	movwf	(btemp+11)^0,c
 14479                           
 14480                           ;stkvar	_b @ sp[(-4)+-4]
 14481  012C86  50E1               	movf	fsr1l,w,c
 14482  012C88  0FF8               	addlw	-8
 14483  012C8A  6ED9               	movwf	fsr2l,c
 14484  012C8C  50E2               	movf	fsr1h,w,c
 14485  012C8E  6EDA               	movwf	fsr2h,c
 14486  012C90  0EFF               	movlw	255
 14487  012C92  22DA               	addwfc	fsr2h,f,c
 14488  012C94  283D               	incf	(btemp+11)^0,w,c
 14489  012C96  52DE               	movf	postinc2,f,c
 14490  012C98  D008               	goto	u9200
 14491  012C9A                     u9205:
 14492  012C9A  52DE               	movf	postinc2,f,c
 14493  012C9C  90D8               	bcf	status,0,c
 14494  012C9E  BEDC               	btfsc	preinc2,7,c
 14495  012CA0  80D8               	bsf	status,0,c
 14496  012CA2  32DD               	rrcf	postdec2,f,c
 14497  012CA4  32DD               	rrcf	postdec2,f,c
 14498  012CA6  32DD               	rrcf	postdec2,f,c
 14499  012CA8  32DE               	rrcf	postinc2,f,c
 14500  012CAA                     u9200:
 14501  012CAA  2EE8               	decfsz	wreg,f,c
 14502  012CAC  D7F6               	goto	u9205
 14503                           
 14504                           ;stkvar	_bexp @ sp[(-4)+1]
 14505  012CAE  0EFD               	movlw	-3
 14506  012CB0  28E3               	incf	plusw1,w,c
 14507  012CB2  B4D8               	btfsc	status,2,c
 14508  012CB4  D002               	goto	l9429
 14509                           
 14510                           ;stkvar	_bexp @ sp[(-4)+1]
 14511  012CB6  0EFD               	movlw	-3
 14512  012CB8  2AE3               	incf	plusw1,f,c
 14513  012CBA                     l9429:
 14514                           
 14515                           ;stkvar	_bexp @ sp[(-4)+1]
 14516  012CBA  0EFD               	movlw	-3
 14517  012CBC  28E3               	incf	plusw1,w,c
 14518  012CBE  B4D8               	btfsc	status,2,c
 14519  012CC0  D004               	goto	u9230
 14520                           
 14521                           ;stkvar	_bexp @ sp[(-4)+1]
 14522  012CC2  0EFD               	movlw	-3
 14523  012CC4  50E3               	movf	plusw1,w,c
 14524  012CC6  A4D8               	btfss	status,2,c
 14525  012CC8  D00E               	goto	l9439
 14526  012CCA                     u9230:
 14527                           
 14528                           ;stkvar	_b @ sp[(-4)+-4]
 14529  012CCA  0EF8               	movlw	-8
 14530  012CCC  6AE3               	clrf	plusw1,c
 14531  012CCE  0EF9               	movlw	-7
 14532  012CD0  6AE3               	clrf	plusw1,c
 14533  012CD2  0EFA               	movlw	-6
 14534  012CD4  6AE3               	clrf	plusw1,c
 14535  012CD6  0EFB               	movlw	-5
 14536  012CD8  6AE3               	clrf	plusw1,c
 14537                           
 14538                           ;stkvar	_bexp @ sp[(-4)+1]
 14539  012CDA  0EFD               	movlw	-3
 14540  012CDC  50E3               	movf	plusw1,w,c
 14541  012CDE  A4D8               	btfss	status,2,c
 14542  012CE0  D002               	goto	l9439
 14543                           
 14544                           ;stkvar	_signs @ sp[(-4)+3]
 14545  012CE2  0EFF               	movlw	-1
 14546  012CE4  6AE3               	clrf	plusw1,c
 14547  012CE6                     l9439:
 14548                           
 14549                           ;stkvar	_bexp @ sp[(-4)+1]
 14550  012CE6  0EFD               	movlw	-3
 14551  012CE8  A0E3               	btfss	plusw1,0,c
 14552  012CEA  D009               	goto	l9443
 14553                           
 14554                           ;stkvar	_b @ sp[(-4)+-4]
 14555  012CEC  0EFA               	movlw	250
 14556  012CEE  24E1               	addwf	fsr1l,w,c
 14557  012CF0  6ED9               	movwf	fsr2l,c
 14558  012CF2  0EFF               	movlw	255
 14559  012CF4  20E2               	addwfc	fsr1h,w,c
 14560  012CF6  6EDA               	movwf	fsr2h,c
 14561  012CF8  0E00               	movlw	0
 14562  012CFA  8EDB               	bsf	plusw2,7,c
 14563  012CFC  D008               	goto	l9445
 14564  012CFE                     l9443:
 14565                           
 14566                           ;stkvar	_b @ sp[(-4)+-4]
 14567  012CFE  0EFA               	movlw	250
 14568  012D00  24E1               	addwf	fsr1l,w,c
 14569  012D02  6ED9               	movwf	fsr2l,c
 14570  012D04  0EFF               	movlw	255
 14571  012D06  20E2               	addwfc	fsr1h,w,c
 14572  012D08  6EDA               	movwf	fsr2h,c
 14573  012D0A  0E7F               	movlw	127
 14574  012D0C  16DF               	andwf	indf2,f,c
 14575  012D0E                     l9445:
 14576                           
 14577                           ;stkvar	_b @ sp[(-4)+-4]
 14578  012D0E  0EFB               	movlw	251
 14579  012D10  24E1               	addwf	fsr1l,w,c
 14580  012D12  6ED9               	movwf	fsr2l,c
 14581  012D14  0EFF               	movlw	255
 14582  012D16  20E2               	addwfc	fsr1h,w,c
 14583  012D18  6EDA               	movwf	fsr2h,c
 14584                           
 14585                           ;stkvar	_bexp @ sp[(-4)+1]
 14586  012D1A  0EFD               	movlw	-3
 14587  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14588  012D22  90D8               	bcf	status,0,c
 14589  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14590  012D26  6EDF               	movwf	indf2,c
 14591                           
 14592                           ;stkvar	_signs @ sp[(-4)+3]
 14593  012D28  0EFF               	movlw	-1
 14594  012D2A  AEE3               	btfss	plusw1,7,c
 14595  012D2C  D008               	goto	l9451
 14596                           
 14597                           ;stkvar	_b @ sp[(-4)+-4]
 14598  012D2E  0EFB               	movlw	251
 14599  012D30  24E1               	addwf	fsr1l,w,c
 14600  012D32  6ED9               	movwf	fsr2l,c
 14601  012D34  0EFF               	movlw	255
 14602  012D36  20E2               	addwfc	fsr1h,w,c
 14603  012D38  6EDA               	movwf	fsr2h,c
 14604  012D3A  0E00               	movlw	0
 14605  012D3C  8EDB               	bsf	plusw2,7,c
 14606  012D3E                     l9451:
 14607                           
 14608                           ;stkvar	_b @ sp[(-4)+-4]
 14609  012D3E  0EF8               	movlw	-8
 14610  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14611  012D46  0EF9               	movlw	-7
 14612  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14613  012D4E  0EFA               	movlw	-6
 14614  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14615  012D56  0EFB               	movlw	-5
 14616  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14617  012D5E                     l2579:
 14618                           
 14619                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14620  012D5E  0EF4               	movlw	244
 14621  012D60  26E1               	addwf	fsr1l,f,c
 14622  012D62  0EFF               	movlw	255
 14623  012D64  22E2               	addwfc	fsr1h,f,c
 14624  012D66  0012               	return		;funcret
 14625  012D68                     __end_of___fladd:
 14626                           	opt callstack 0
 14627                           
 14628 ;; *************** function ___flneg *****************
 14629 ;; Defined at:
 14630 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  f1              4  [STACK] unsigned char 
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;		None
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  4  [STACK] unsigned char 
 14637 ;; Registers used:
 14638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/5
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14648 ;;Total ram usage:        0 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:    6
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_efgtoa
 14655 ;; This function uses a reentrant model
 14656 ;;
 14657                           
 14658                           	psect	text54
 14659  01799E                     __ptext54:
 14660                           	opt callstack 0
 14661  01799E                     ___flneg:
 14662                           	opt callstack 17
 14663                           
 14664                           ;stkvar	_f1 @ sp[(0)+-4]
 14665                           
 14666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14667                           ;incstack = 0
 14668  01799E  0EFC               	movlw	-4
 14669  0179A0  50E3               	movf	plusw1,w,c
 14670  0179A2  E10A               	bnz	u10540
 14671  0179A4  0EFD               	movlw	-3
 14672  0179A6  50E3               	movf	plusw1,w,c
 14673  0179A8  E107               	bnz	u10540
 14674  0179AA  0EFE               	movlw	-2
 14675  0179AC  50E3               	movf	plusw1,w,c
 14676  0179AE  E104               	bnz	u10540
 14677  0179B0  0EFF               	movlw	-1
 14678  0179B2  50E3               	movf	plusw1,w,c
 14679  0179B4  B4D8               	btfsc	status,2,c
 14680  0179B6  D002               	goto	l10119
 14681  0179B8                     u10540:
 14682                           
 14683                           ;stkvar	_f1 @ sp[(0)+-4]
 14684  0179B8  0EFF               	movlw	-1
 14685  0179BA  7EE3               	btg	plusw1,7,c
 14686  0179BC                     l10119:
 14687                           
 14688                           ;stkvar	_f1 @ sp[(0)+-4]
 14689  0179BC  0EFC               	movlw	-4
 14690  0179BE  006F FF8C  F032    	movff	plusw1,btemp
 14691  0179C4  0EFD               	movlw	-3
 14692  0179C6  006F FF8C  F033    	movff	plusw1,btemp+1
 14693  0179CC  0EFE               	movlw	-2
 14694  0179CE  006F FF8C  F034    	movff	plusw1,btemp+2
 14695  0179D4  0EFF               	movlw	-1
 14696  0179D6  006F FF8C  F035    	movff	plusw1,btemp+3
 14697                           
 14698                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14699  0179DC  52E5               	movf	postdec1,f,c
 14700  0179DE  52E5               	movf	postdec1,f,c
 14701  0179E0  52E5               	movf	postdec1,f,c
 14702  0179E2  52E5               	movf	postdec1,f,c
 14703  0179E4  0012               	return		;funcret
 14704  0179E6                     __end_of___flneg:
 14705                           	opt callstack 0
 14706                           
 14707 ;; *************** function ___flmul *****************
 14708 ;; Defined at:
 14709 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14710 ;; Parameters:    Size  Location     Type
 14711 ;;  b               4  [STACK] unsigned char 
 14712 ;;  a               4  [STACK] unsigned char 
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;  prod            4  [STACK] struct .
 14715 ;;  grs             4  [STACK] unsigned long 
 14716 ;;  temp            2  [STACK] struct .
 14717 ;;  bexp            1  [STACK] unsigned char 
 14718 ;;  aexp            1  [STACK] unsigned char 
 14719 ;;  sign            1  [STACK] unsigned char 
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  4  [STACK] unsigned char 
 14722 ;; Registers used:
 14723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/39
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;Total ram usage:        0 bytes
 14734 ;; Hardware stack levels used:    1
 14735 ;; Hardware stack levels required when called:    6
 14736 ;; This function calls:
 14737 ;;		Nothing
 14738 ;; This function is called by:
 14739 ;;		_conv_raw_result
 14740 ;;		_lp_filter
 14741 ;;		_efgtoa
 14742 ;; This function uses a reentrant model
 14743 ;;
 14744                           
 14745                           	psect	text55
 14746  011D82                     __ptext55:
 14747                           	opt callstack 0
 14748  011D82                     ___flmul:
 14749                           	opt callstack 0
 14750                           
 14751                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14752  011D82  0E0D               	movlw	13
 14753  011D84  26E1               	addwf	fsr1l,f,c
 14754  011D86  0E00               	movlw	0
 14755  011D88  22E2               	addwfc	fsr1h,f,c
 14756                           
 14757                           ;stkvar	_b @ sp[(-13)+-4]
 14758                           
 14759                           ;incstack = 0
 14760  011D8A  0EF2               	movlw	242
 14761  011D8C  24E1               	addwf	fsr1l,w,c
 14762  011D8E  6ED9               	movwf	fsr2l,c
 14763  011D90  0EFF               	movlw	255
 14764  011D92  20E2               	addwfc	fsr1h,w,c
 14765  011D94  6EDA               	movwf	fsr2h,c
 14766  011D96  50DF               	movf	indf2,w,c
 14767  011D98  6E3D               	movwf	(btemp+11)^0,c
 14768  011D9A  0E80               	movlw	128
 14769  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14770                           
 14771                           ;stkvar	_sign @ sp[(-13)+12]
 14772  011D9E  0EFF               	movlw	-1
 14773  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14774                           
 14775                           ;stkvar	_b @ sp[(-13)+-4]
 14776  011DA6  0EF2               	movlw	242
 14777  011DA8  24E1               	addwf	fsr1l,w,c
 14778  011DAA  6ED9               	movwf	fsr2l,c
 14779  011DAC  0EFF               	movlw	255
 14780  011DAE  20E2               	addwfc	fsr1h,w,c
 14781  011DB0  6EDA               	movwf	fsr2h,c
 14782  011DB2  50DF               	movf	indf2,w,c
 14783  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14784  011DB6  90D8               	bcf	status,0,c
 14785  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 14786  011DBA  6E3C               	movwf	(btemp+10)^0,c
 14787                           
 14788                           ;stkvar	_bexp @ sp[(-13)+10]
 14789  011DBC  0EFD               	movlw	-3
 14790  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14791                           
 14792                           ;stkvar	_b @ sp[(-13)+-4]
 14793  011DC4  0EF1               	movlw	241
 14794  011DC6  24E1               	addwf	fsr1l,w,c
 14795  011DC8  6ED9               	movwf	fsr2l,c
 14796  011DCA  0EFF               	movlw	255
 14797  011DCC  20E2               	addwfc	fsr1h,w,c
 14798  011DCE  6EDA               	movwf	fsr2h,c
 14799  011DD0  AEDF               	btfss	indf2,7,c
 14800  011DD2  D002               	goto	l9835
 14801                           
 14802                           ;stkvar	_bexp @ sp[(-13)+10]
 14803  011DD4  0EFD               	movlw	-3
 14804  011DD6  80E3               	bsf	plusw1,0,c
 14805  011DD8                     l9835:
 14806                           
 14807                           ;stkvar	_bexp @ sp[(-13)+10]
 14808  011DD8  0EFD               	movlw	-3
 14809  011DDA  50E3               	movf	plusw1,w,c
 14810  011DDC  B4D8               	btfsc	status,2,c
 14811  011DDE  D01F               	goto	l9843
 14812                           
 14813                           ;stkvar	_bexp @ sp[(-13)+10]
 14814  011DE0  0EFD               	movlw	-3
 14815  011DE2  28E3               	incf	plusw1,w,c
 14816  011DE4  A4D8               	btfss	status,2,c
 14817  011DE6  D018               	goto	l9841
 14818  011DE8  0E00               	movlw	0
 14819  011DEA  6E3A               	movwf	(btemp+8)^0,c
 14820  011DEC  0E00               	movlw	0
 14821  011DEE  6E3B               	movwf	(btemp+9)^0,c
 14822  011DF0  0E00               	movlw	0
 14823  011DF2  6E3C               	movwf	(btemp+10)^0,c
 14824  011DF4  0E00               	movlw	0
 14825  011DF6  6E3D               	movwf	(btemp+11)^0,c
 14826                           
 14827                           ;stkvar	_b @ sp[(-13)+-4]
 14828  011DF8  0EEF               	movlw	-17
 14829  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14830  011E00  0EF0               	movlw	-16
 14831  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14832  011E08  0EF1               	movlw	-15
 14833  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14834  011E10  0EF2               	movlw	-14
 14835  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14836  011E18                     l9841:
 14837                           
 14838                           ;stkvar	_b @ sp[(-13)+-4]
 14839  011E18  0EF1               	movlw	-15
 14840  011E1A  8EE3               	bsf	plusw1,7,c
 14841  011E1C  D018               	goto	l9845
 14842  011E1E                     l9843:
 14843  011E1E  0E00               	movlw	0
 14844  011E20  6E3A               	movwf	(btemp+8)^0,c
 14845  011E22  0E00               	movlw	0
 14846  011E24  6E3B               	movwf	(btemp+9)^0,c
 14847  011E26  0E00               	movlw	0
 14848  011E28  6E3C               	movwf	(btemp+10)^0,c
 14849  011E2A  0E00               	movlw	0
 14850  011E2C  6E3D               	movwf	(btemp+11)^0,c
 14851                           
 14852                           ;stkvar	_b @ sp[(-13)+-4]
 14853  011E2E  0EEF               	movlw	-17
 14854  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14855  011E36  0EF0               	movlw	-16
 14856  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14857  011E3E  0EF1               	movlw	-15
 14858  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14859  011E46  0EF2               	movlw	-14
 14860  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14861  011E4E                     l9845:
 14862                           
 14863                           ;stkvar	_a @ sp[(-13)+-8]
 14864  011E4E  0EEE               	movlw	238
 14865  011E50  24E1               	addwf	fsr1l,w,c
 14866  011E52  6ED9               	movwf	fsr2l,c
 14867  011E54  0EFF               	movlw	255
 14868  011E56  20E2               	addwfc	fsr1h,w,c
 14869  011E58  6EDA               	movwf	fsr2h,c
 14870  011E5A  50DF               	movf	indf2,w,c
 14871  011E5C  6E3D               	movwf	(btemp+11)^0,c
 14872  011E5E  0E80               	movlw	128
 14873  011E60  163D               	andwf	(btemp+11)^0,f,c
 14874                           
 14875                           ;stkvar	_sign @ sp[(-13)+12]
 14876  011E62  50E1               	movf	fsr1l,w,c
 14877  011E64  0FFF               	addlw	-1
 14878  011E66  6ED9               	movwf	fsr2l,c
 14879  011E68  50E2               	movf	fsr1h,w,c
 14880  011E6A  6EDA               	movwf	fsr2h,c
 14881  011E6C  0EFF               	movlw	255
 14882  011E6E  22DA               	addwfc	fsr2h,f,c
 14883  011E70  503D               	movf	(btemp+11)^0,w,c
 14884  011E72  1ADF               	xorwf	indf2,f,c
 14885                           
 14886                           ;stkvar	_a @ sp[(-13)+-8]
 14887  011E74  0EEE               	movlw	238
 14888  011E76  24E1               	addwf	fsr1l,w,c
 14889  011E78  6ED9               	movwf	fsr2l,c
 14890  011E7A  0EFF               	movlw	255
 14891  011E7C  20E2               	addwfc	fsr1h,w,c
 14892  011E7E  6EDA               	movwf	fsr2h,c
 14893  011E80  50DF               	movf	indf2,w,c
 14894  011E82  6E3D               	movwf	(btemp+11)^0,c
 14895  011E84  90D8               	bcf	status,0,c
 14896  011E86  343D               	rlcf	(btemp+11)^0,w,c
 14897  011E88  6E3C               	movwf	(btemp+10)^0,c
 14898                           
 14899                           ;stkvar	_aexp @ sp[(-13)+11]
 14900  011E8A  0EFE               	movlw	-2
 14901  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14902                           
 14903                           ;stkvar	_a @ sp[(-13)+-8]
 14904  011E92  0EED               	movlw	237
 14905  011E94  24E1               	addwf	fsr1l,w,c
 14906  011E96  6ED9               	movwf	fsr2l,c
 14907  011E98  0EFF               	movlw	255
 14908  011E9A  20E2               	addwfc	fsr1h,w,c
 14909  011E9C  6EDA               	movwf	fsr2h,c
 14910  011E9E  AEDF               	btfss	indf2,7,c
 14911  011EA0  D002               	goto	l9853
 14912                           
 14913                           ;stkvar	_aexp @ sp[(-13)+11]
 14914  011EA2  0EFE               	movlw	-2
 14915  011EA4  80E3               	bsf	plusw1,0,c
 14916  011EA6                     l9853:
 14917                           
 14918                           ;stkvar	_aexp @ sp[(-13)+11]
 14919  011EA6  0EFE               	movlw	-2
 14920  011EA8  50E3               	movf	plusw1,w,c
 14921  011EAA  B4D8               	btfsc	status,2,c
 14922  011EAC  D01F               	goto	l9861
 14923                           
 14924                           ;stkvar	_aexp @ sp[(-13)+11]
 14925  011EAE  0EFE               	movlw	-2
 14926  011EB0  28E3               	incf	plusw1,w,c
 14927  011EB2  A4D8               	btfss	status,2,c
 14928  011EB4  D018               	goto	l9859
 14929  011EB6  0E00               	movlw	0
 14930  011EB8  6E3A               	movwf	(btemp+8)^0,c
 14931  011EBA  0E00               	movlw	0
 14932  011EBC  6E3B               	movwf	(btemp+9)^0,c
 14933  011EBE  0E00               	movlw	0
 14934  011EC0  6E3C               	movwf	(btemp+10)^0,c
 14935  011EC2  0E00               	movlw	0
 14936  011EC4  6E3D               	movwf	(btemp+11)^0,c
 14937                           
 14938                           ;stkvar	_a @ sp[(-13)+-8]
 14939  011EC6  0EEB               	movlw	-21
 14940  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14941  011ECE  0EEC               	movlw	-20
 14942  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14943  011ED6  0EED               	movlw	-19
 14944  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14945  011EDE  0EEE               	movlw	-18
 14946  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14947  011EE6                     l9859:
 14948                           
 14949                           ;stkvar	_a @ sp[(-13)+-8]
 14950  011EE6  0EED               	movlw	-19
 14951  011EE8  8EE3               	bsf	plusw1,7,c
 14952  011EEA  D018               	goto	l9863
 14953  011EEC                     l9861:
 14954  011EEC  0E00               	movlw	0
 14955  011EEE  6E3A               	movwf	(btemp+8)^0,c
 14956  011EF0  0E00               	movlw	0
 14957  011EF2  6E3B               	movwf	(btemp+9)^0,c
 14958  011EF4  0E00               	movlw	0
 14959  011EF6  6E3C               	movwf	(btemp+10)^0,c
 14960  011EF8  0E00               	movlw	0
 14961  011EFA  6E3D               	movwf	(btemp+11)^0,c
 14962                           
 14963                           ;stkvar	_a @ sp[(-13)+-8]
 14964  011EFC  0EEB               	movlw	-21
 14965  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 14966  011F04  0EEC               	movlw	-20
 14967  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 14968  011F0C  0EED               	movlw	-19
 14969  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14970  011F14  0EEE               	movlw	-18
 14971  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14972  011F1C                     l9863:
 14973                           
 14974                           ;stkvar	_aexp @ sp[(-13)+11]
 14975  011F1C  0EFE               	movlw	-2
 14976  011F1E  50E3               	movf	plusw1,w,c
 14977  011F20  B4D8               	btfsc	status,2,c
 14978  011F22  D004               	goto	u10170
 14979                           
 14980                           ;stkvar	_bexp @ sp[(-13)+10]
 14981  011F24  0EFD               	movlw	-3
 14982  011F26  50E3               	movf	plusw1,w,c
 14983  011F28  A4D8               	btfss	status,2,c
 14984  011F2A  D009               	goto	l9871
 14985  011F2C                     u10170:
 14986  011F2C  0E00               	movlw	0
 14987  011F2E  6E32               	movwf	btemp^0,c
 14988  011F30  0E00               	movlw	0
 14989  011F32  6E33               	movwf	(btemp+1)^0,c
 14990  011F34  0E00               	movlw	0
 14991  011F36  6E34               	movwf	(btemp+2)^0,c
 14992  011F38  0E00               	movlw	0
 14993  011F3A  6E35               	movwf	(btemp+3)^0,c
 14994  011F3C  D332               	goto	l2660
 14995  011F3E                     l9871:
 14996                           
 14997                           ;stkvar	_b @ sp[(-13)+-4]
 14998  011F3E  0EEF               	movlw	-17
 14999  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15000                           
 15001                           ;stkvar	_a @ sp[(-13)+-8]
 15002  011F46  0EED               	movlw	237
 15003  011F48  24E1               	addwf	fsr1l,w,c
 15004  011F4A  6ED9               	movwf	fsr2l,c
 15005  011F4C  0EFF               	movlw	255
 15006  011F4E  20E2               	addwfc	fsr1h,w,c
 15007  011F50  6EDA               	movwf	fsr2h,c
 15008  011F52  50DF               	movf	indf2,w,c
 15009  011F54  023D               	mulwf	(btemp+11)^0,c
 15010                           
 15011                           ;stkvar	_temp @ sp[(-13)+8]
 15012  011F56  0EFB               	movlw	-5
 15013  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15014  011F5E  0EFC               	movlw	-4
 15015  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15016                           
 15017                           ;stkvar	_temp @ sp[(-13)+8]
 15018  011F66  0EFB               	movlw	-5
 15019  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15020  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15021  011F74  6A37               	clrf	(btemp+5)^0,c
 15022  011F76  6A38               	clrf	(btemp+6)^0,c
 15023  011F78  6A39               	clrf	(btemp+7)^0,c
 15024                           
 15025                           ;stkvar	_grs @ sp[(-13)+4]
 15026  011F7A  0EF7               	movlw	-9
 15027  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15028  011F82  0EF8               	movlw	-8
 15029  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15030  011F8A  0EF9               	movlw	-7
 15031  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15032  011F92  0EFA               	movlw	-6
 15033  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15034                           
 15035                           ;stkvar	_temp @ sp[(-13)+8]
 15036  011F9A  0EFC               	movlw	252
 15037  011F9C  24E1               	addwf	fsr1l,w,c
 15038  011F9E  6ED9               	movwf	fsr2l,c
 15039  011FA0  0EFF               	movlw	255
 15040  011FA2  20E2               	addwfc	fsr1h,w,c
 15041  011FA4  6EDA               	movwf	fsr2h,c
 15042  011FA6  50DF               	movf	indf2,w,c
 15043  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15044  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15045  011FB0  6A37               	clrf	(btemp+5)^0,c
 15046  011FB2  6A38               	clrf	(btemp+6)^0,c
 15047  011FB4  6A39               	clrf	(btemp+7)^0,c
 15048                           
 15049                           ;stkvar	_prod @ sp[(-13)+0]
 15050  011FB6  0EF3               	movlw	-13
 15051  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15052  011FBE  0EF4               	movlw	-12
 15053  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15054  011FC6  0EF5               	movlw	-11
 15055  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15056  011FCE  0EF6               	movlw	-10
 15057  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15058                           
 15059                           ;stkvar	_b @ sp[(-13)+-4]
 15060  011FD6  0EF0               	movlw	240
 15061  011FD8  24E1               	addwf	fsr1l,w,c
 15062  011FDA  6ED9               	movwf	fsr2l,c
 15063  011FDC  0EFF               	movlw	255
 15064  011FDE  20E2               	addwfc	fsr1h,w,c
 15065  011FE0  6EDA               	movwf	fsr2h,c
 15066  011FE2  50DF               	movf	indf2,w,c
 15067  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15068                           
 15069                           ;stkvar	_a @ sp[(-13)+-8]
 15070  011FE6  0EEC               	movlw	236
 15071  011FE8  24E1               	addwf	fsr1l,w,c
 15072  011FEA  6ED9               	movwf	fsr2l,c
 15073  011FEC  0EFF               	movlw	255
 15074  011FEE  20E2               	addwfc	fsr1h,w,c
 15075  011FF0  6EDA               	movwf	fsr2h,c
 15076  011FF2  50DF               	movf	indf2,w,c
 15077  011FF4  023D               	mulwf	(btemp+11)^0,c
 15078                           
 15079                           ;stkvar	_temp @ sp[(-13)+8]
 15080  011FF6  0EFB               	movlw	-5
 15081  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15082  011FFE  0EFC               	movlw	-4
 15083  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15084                           
 15085                           ;stkvar	_grs @ sp[(-13)+4]
 15086  012006  50E1               	movf	fsr1l,w,c
 15087  012008  0FF7               	addlw	-9
 15088  01200A  6ED9               	movwf	fsr2l,c
 15089  01200C  50E2               	movf	fsr1h,w,c
 15090  01200E  6EDA               	movwf	fsr2h,c
 15091  012010  0EFF               	movlw	255
 15092  012012  22DA               	addwfc	fsr2h,f,c
 15093                           
 15094                           ;stkvar	_temp @ sp[(-13)+8]
 15095  012014  0EFB               	movlw	-5
 15096  012016  50E3               	movf	plusw1,w,c
 15097  012018  26DE               	addwf	postinc2,f,c
 15098  01201A  0E00               	movlw	0
 15099  01201C  22DE               	addwfc	postinc2,f,c
 15100  01201E  22DE               	addwfc	postinc2,f,c
 15101  012020  22DE               	addwfc	postinc2,f,c
 15102                           
 15103                           ;stkvar	_prod @ sp[(-13)+0]
 15104  012022  50E1               	movf	fsr1l,w,c
 15105  012024  0FF3               	addlw	-13
 15106  012026  6ED9               	movwf	fsr2l,c
 15107  012028  50E2               	movf	fsr1h,w,c
 15108  01202A  6EDA               	movwf	fsr2h,c
 15109  01202C  0EFF               	movlw	255
 15110  01202E  22DA               	addwfc	fsr2h,f,c
 15111                           
 15112                           ;stkvar	_temp @ sp[(-13)+8]
 15113  012030  0EFC               	movlw	252
 15114  012032  24E1               	addwf	fsr1l,w,c
 15115  012034  6EE9               	movwf	fsr0l,c
 15116  012036  0EFF               	movlw	255
 15117  012038  20E2               	addwfc	fsr1h,w,c
 15118  01203A  6EEA               	movwf	fsr0h,c
 15119  01203C  50EF               	movf	indf0,w,c
 15120  01203E  26DE               	addwf	postinc2,f,c
 15121  012040  0E00               	movlw	0
 15122  012042  22DE               	addwfc	postinc2,f,c
 15123  012044  22DE               	addwfc	postinc2,f,c
 15124  012046  22DE               	addwfc	postinc2,f,c
 15125                           
 15126                           ;stkvar	_b @ sp[(-13)+-4]
 15127  012048  0EF1               	movlw	241
 15128  01204A  24E1               	addwf	fsr1l,w,c
 15129  01204C  6ED9               	movwf	fsr2l,c
 15130  01204E  0EFF               	movlw	255
 15131  012050  20E2               	addwfc	fsr1h,w,c
 15132  012052  6EDA               	movwf	fsr2h,c
 15133  012054  50DF               	movf	indf2,w,c
 15134  012056  6E3D               	movwf	(btemp+11)^0,c
 15135                           
 15136                           ;stkvar	_a @ sp[(-13)+-8]
 15137  012058  0EEB               	movlw	-21
 15138  01205A  50E3               	movf	plusw1,w,c
 15139  01205C  023D               	mulwf	(btemp+11)^0,c
 15140                           
 15141                           ;stkvar	_temp @ sp[(-13)+8]
 15142  01205E  0EFB               	movlw	-5
 15143  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15144  012066  0EFC               	movlw	-4
 15145  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15146                           
 15147                           ;stkvar	_grs @ sp[(-13)+4]
 15148  01206E  50E1               	movf	fsr1l,w,c
 15149  012070  0FF7               	addlw	-9
 15150  012072  6ED9               	movwf	fsr2l,c
 15151  012074  50E2               	movf	fsr1h,w,c
 15152  012076  6EDA               	movwf	fsr2h,c
 15153  012078  0EFF               	movlw	255
 15154  01207A  22DA               	addwfc	fsr2h,f,c
 15155                           
 15156                           ;stkvar	_temp @ sp[(-13)+8]
 15157  01207C  0EFB               	movlw	-5
 15158  01207E  50E3               	movf	plusw1,w,c
 15159  012080  26DE               	addwf	postinc2,f,c
 15160  012082  0E00               	movlw	0
 15161  012084  22DE               	addwfc	postinc2,f,c
 15162  012086  22DE               	addwfc	postinc2,f,c
 15163  012088  22DE               	addwfc	postinc2,f,c
 15164                           
 15165                           ;stkvar	_prod @ sp[(-13)+0]
 15166  01208A  50E1               	movf	fsr1l,w,c
 15167  01208C  0FF3               	addlw	-13
 15168  01208E  6ED9               	movwf	fsr2l,c
 15169  012090  50E2               	movf	fsr1h,w,c
 15170  012092  6EDA               	movwf	fsr2h,c
 15171  012094  0EFF               	movlw	255
 15172  012096  22DA               	addwfc	fsr2h,f,c
 15173                           
 15174                           ;stkvar	_temp @ sp[(-13)+8]
 15175  012098  0EFC               	movlw	252
 15176  01209A  24E1               	addwf	fsr1l,w,c
 15177  01209C  6EE9               	movwf	fsr0l,c
 15178  01209E  0EFF               	movlw	255
 15179  0120A0  20E2               	addwfc	fsr1h,w,c
 15180  0120A2  6EEA               	movwf	fsr0h,c
 15181  0120A4  50EF               	movf	indf0,w,c
 15182  0120A6  26DE               	addwf	postinc2,f,c
 15183  0120A8  0E00               	movlw	0
 15184  0120AA  22DE               	addwfc	postinc2,f,c
 15185  0120AC  22DE               	addwfc	postinc2,f,c
 15186  0120AE  22DE               	addwfc	postinc2,f,c
 15187                           
 15188                           ;stkvar	_grs @ sp[(-13)+4]
 15189  0120B0  50E1               	movf	fsr1l,w,c
 15190  0120B2  0FF7               	addlw	-9
 15191  0120B4  6ED9               	movwf	fsr2l,c
 15192  0120B6  50E2               	movf	fsr1h,w,c
 15193  0120B8  6EDA               	movwf	fsr2h,c
 15194  0120BA  0EFF               	movlw	255
 15195  0120BC  22DA               	addwfc	fsr2h,f,c
 15196  0120BE  0E08               	movlw	8
 15197  0120C0                     u10185:
 15198  0120C0  90D8               	bcf	status,0,c
 15199  0120C2  36DE               	rlcf	postinc2,f,c
 15200  0120C4  36DE               	rlcf	postinc2,f,c
 15201  0120C6  36DE               	rlcf	postinc2,f,c
 15202  0120C8  36DD               	rlcf	postdec2,f,c
 15203  0120CA  52DD               	movf	postdec2,f,c
 15204  0120CC  52DD               	movf	postdec2,f,c
 15205  0120CE  2EE8               	decfsz	wreg,f,c
 15206  0120D0  D7F7               	goto	u10185
 15207                           
 15208                           ;stkvar	_b @ sp[(-13)+-4]
 15209  0120D2  0EF0               	movlw	240
 15210  0120D4  24E1               	addwf	fsr1l,w,c
 15211  0120D6  6ED9               	movwf	fsr2l,c
 15212  0120D8  0EFF               	movlw	255
 15213  0120DA  20E2               	addwfc	fsr1h,w,c
 15214  0120DC  6EDA               	movwf	fsr2h,c
 15215  0120DE  50DF               	movf	indf2,w,c
 15216  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15217                           
 15218                           ;stkvar	_a @ sp[(-13)+-8]
 15219  0120E2  0EEB               	movlw	-21
 15220  0120E4  50E3               	movf	plusw1,w,c
 15221  0120E6  023D               	mulwf	(btemp+11)^0,c
 15222                           
 15223                           ;stkvar	_temp @ sp[(-13)+8]
 15224  0120E8  0EFB               	movlw	-5
 15225  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15226  0120F0  0EFC               	movlw	-4
 15227  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15228                           
 15229                           ;stkvar	_temp @ sp[(-13)+8]
 15230  0120F8  0EFB               	movlw	-5
 15231  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15232  012100  0EFC               	movlw	-4
 15233  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15234                           
 15235                           ;stkvar	_grs @ sp[(-13)+4]
 15236  012108  50E1               	movf	fsr1l,w,c
 15237  01210A  0FF7               	addlw	-9
 15238  01210C  6ED9               	movwf	fsr2l,c
 15239  01210E  50E2               	movf	fsr1h,w,c
 15240  012110  6EDA               	movwf	fsr2h,c
 15241  012112  0EFF               	movlw	255
 15242  012114  22DA               	addwfc	fsr2h,f,c
 15243  012116  503C               	movf	(btemp+10)^0,w,c
 15244  012118  26DE               	addwf	postinc2,f,c
 15245  01211A  503D               	movf	(btemp+11)^0,w,c
 15246  01211C  22DE               	addwfc	postinc2,f,c
 15247  01211E  0E00               	movlw	0
 15248  012120  22DE               	addwfc	postinc2,f,c
 15249  012122  22DE               	addwfc	postinc2,f,c
 15250                           
 15251                           ;stkvar	_b @ sp[(-13)+-4]
 15252  012124  0EEF               	movlw	-17
 15253  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15254                           
 15255                           ;stkvar	_a @ sp[(-13)+-8]
 15256  01212C  0EEC               	movlw	236
 15257  01212E  24E1               	addwf	fsr1l,w,c
 15258  012130  6ED9               	movwf	fsr2l,c
 15259  012132  0EFF               	movlw	255
 15260  012134  20E2               	addwfc	fsr1h,w,c
 15261  012136  6EDA               	movwf	fsr2h,c
 15262  012138  50DF               	movf	indf2,w,c
 15263  01213A  023D               	mulwf	(btemp+11)^0,c
 15264                           
 15265                           ;stkvar	_temp @ sp[(-13)+8]
 15266  01213C  0EFB               	movlw	-5
 15267  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15268  012144  0EFC               	movlw	-4
 15269  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15270                           
 15271                           ;stkvar	_temp @ sp[(-13)+8]
 15272  01214C  0EFB               	movlw	-5
 15273  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15274  012154  0EFC               	movlw	-4
 15275  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15276                           
 15277                           ;stkvar	_grs @ sp[(-13)+4]
 15278  01215C  50E1               	movf	fsr1l,w,c
 15279  01215E  0FF7               	addlw	-9
 15280  012160  6ED9               	movwf	fsr2l,c
 15281  012162  50E2               	movf	fsr1h,w,c
 15282  012164  6EDA               	movwf	fsr2h,c
 15283  012166  0EFF               	movlw	255
 15284  012168  22DA               	addwfc	fsr2h,f,c
 15285  01216A  503C               	movf	(btemp+10)^0,w,c
 15286  01216C  26DE               	addwf	postinc2,f,c
 15287  01216E  503D               	movf	(btemp+11)^0,w,c
 15288  012170  22DE               	addwfc	postinc2,f,c
 15289  012172  0E00               	movlw	0
 15290  012174  22DE               	addwfc	postinc2,f,c
 15291  012176  22DE               	addwfc	postinc2,f,c
 15292                           
 15293                           ;stkvar	_grs @ sp[(-13)+4]
 15294  012178  50E1               	movf	fsr1l,w,c
 15295  01217A  0FF7               	addlw	-9
 15296  01217C  6ED9               	movwf	fsr2l,c
 15297  01217E  50E2               	movf	fsr1h,w,c
 15298  012180  6EDA               	movwf	fsr2h,c
 15299  012182  0EFF               	movlw	255
 15300  012184  22DA               	addwfc	fsr2h,f,c
 15301  012186  0E08               	movlw	8
 15302  012188                     u10195:
 15303  012188  90D8               	bcf	status,0,c
 15304  01218A  36DE               	rlcf	postinc2,f,c
 15305  01218C  36DE               	rlcf	postinc2,f,c
 15306  01218E  36DE               	rlcf	postinc2,f,c
 15307  012190  36DD               	rlcf	postdec2,f,c
 15308  012192  52DD               	movf	postdec2,f,c
 15309  012194  52DD               	movf	postdec2,f,c
 15310  012196  2EE8               	decfsz	wreg,f,c
 15311  012198  D7F7               	goto	u10195
 15312                           
 15313                           ;stkvar	_b @ sp[(-13)+-4]
 15314  01219A  0EEF               	movlw	-17
 15315  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15316                           
 15317                           ;stkvar	_a @ sp[(-13)+-8]
 15318  0121A2  0EEB               	movlw	-21
 15319  0121A4  50E3               	movf	plusw1,w,c
 15320  0121A6  023D               	mulwf	(btemp+11)^0,c
 15321                           
 15322                           ;stkvar	_temp @ sp[(-13)+8]
 15323  0121A8  0EFB               	movlw	-5
 15324  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15325  0121B0  0EFC               	movlw	-4
 15326  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15327                           
 15328                           ;stkvar	_temp @ sp[(-13)+8]
 15329  0121B8  0EFB               	movlw	-5
 15330  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15331  0121C0  0EFC               	movlw	-4
 15332  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15333                           
 15334                           ;stkvar	_grs @ sp[(-13)+4]
 15335  0121C8  50E1               	movf	fsr1l,w,c
 15336  0121CA  0FF7               	addlw	-9
 15337  0121CC  6ED9               	movwf	fsr2l,c
 15338  0121CE  50E2               	movf	fsr1h,w,c
 15339  0121D0  6EDA               	movwf	fsr2h,c
 15340  0121D2  0EFF               	movlw	255
 15341  0121D4  22DA               	addwfc	fsr2h,f,c
 15342  0121D6  503C               	movf	(btemp+10)^0,w,c
 15343  0121D8  26DE               	addwf	postinc2,f,c
 15344  0121DA  503D               	movf	(btemp+11)^0,w,c
 15345  0121DC  22DE               	addwfc	postinc2,f,c
 15346  0121DE  0E00               	movlw	0
 15347  0121E0  22DE               	addwfc	postinc2,f,c
 15348  0121E2  22DE               	addwfc	postinc2,f,c
 15349                           
 15350                           ;stkvar	_b @ sp[(-13)+-4]
 15351  0121E4  0EF0               	movlw	240
 15352  0121E6  24E1               	addwf	fsr1l,w,c
 15353  0121E8  6ED9               	movwf	fsr2l,c
 15354  0121EA  0EFF               	movlw	255
 15355  0121EC  20E2               	addwfc	fsr1h,w,c
 15356  0121EE  6EDA               	movwf	fsr2h,c
 15357  0121F0  50DF               	movf	indf2,w,c
 15358  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15359                           
 15360                           ;stkvar	_a @ sp[(-13)+-8]
 15361  0121F4  0EED               	movlw	237
 15362  0121F6  24E1               	addwf	fsr1l,w,c
 15363  0121F8  6ED9               	movwf	fsr2l,c
 15364  0121FA  0EFF               	movlw	255
 15365  0121FC  20E2               	addwfc	fsr1h,w,c
 15366  0121FE  6EDA               	movwf	fsr2h,c
 15367  012200  50DF               	movf	indf2,w,c
 15368  012202  023D               	mulwf	(btemp+11)^0,c
 15369                           
 15370                           ;stkvar	_temp @ sp[(-13)+8]
 15371  012204  0EFB               	movlw	-5
 15372  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15373  01220C  0EFC               	movlw	-4
 15374  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15375                           
 15376                           ;stkvar	_temp @ sp[(-13)+8]
 15377  012214  0EFB               	movlw	-5
 15378  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15379  01221C  0EFC               	movlw	-4
 15380  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15381                           
 15382                           ;stkvar	_prod @ sp[(-13)+0]
 15383  012224  50E1               	movf	fsr1l,w,c
 15384  012226  0FF3               	addlw	-13
 15385  012228  6ED9               	movwf	fsr2l,c
 15386  01222A  50E2               	movf	fsr1h,w,c
 15387  01222C  6EDA               	movwf	fsr2h,c
 15388  01222E  0EFF               	movlw	255
 15389  012230  22DA               	addwfc	fsr2h,f,c
 15390  012232  503C               	movf	(btemp+10)^0,w,c
 15391  012234  26DE               	addwf	postinc2,f,c
 15392  012236  503D               	movf	(btemp+11)^0,w,c
 15393  012238  22DE               	addwfc	postinc2,f,c
 15394  01223A  0E00               	movlw	0
 15395  01223C  22DE               	addwfc	postinc2,f,c
 15396  01223E  22DE               	addwfc	postinc2,f,c
 15397                           
 15398                           ;stkvar	_b @ sp[(-13)+-4]
 15399  012240  0EF1               	movlw	241
 15400  012242  24E1               	addwf	fsr1l,w,c
 15401  012244  6ED9               	movwf	fsr2l,c
 15402  012246  0EFF               	movlw	255
 15403  012248  20E2               	addwfc	fsr1h,w,c
 15404  01224A  6EDA               	movwf	fsr2h,c
 15405  01224C  50DF               	movf	indf2,w,c
 15406  01224E  6E3D               	movwf	(btemp+11)^0,c
 15407                           
 15408                           ;stkvar	_a @ sp[(-13)+-8]
 15409  012250  0EEC               	movlw	236
 15410  012252  24E1               	addwf	fsr1l,w,c
 15411  012254  6ED9               	movwf	fsr2l,c
 15412  012256  0EFF               	movlw	255
 15413  012258  20E2               	addwfc	fsr1h,w,c
 15414  01225A  6EDA               	movwf	fsr2h,c
 15415  01225C  50DF               	movf	indf2,w,c
 15416  01225E  023D               	mulwf	(btemp+11)^0,c
 15417                           
 15418                           ;stkvar	_temp @ sp[(-13)+8]
 15419  012260  0EFB               	movlw	-5
 15420  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15421  012268  0EFC               	movlw	-4
 15422  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15423                           
 15424                           ;stkvar	_temp @ sp[(-13)+8]
 15425  012270  0EFB               	movlw	-5
 15426  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15427  012278  0EFC               	movlw	-4
 15428  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15429                           
 15430                           ;stkvar	_prod @ sp[(-13)+0]
 15431  012280  50E1               	movf	fsr1l,w,c
 15432  012282  0FF3               	addlw	-13
 15433  012284  6ED9               	movwf	fsr2l,c
 15434  012286  50E2               	movf	fsr1h,w,c
 15435  012288  6EDA               	movwf	fsr2h,c
 15436  01228A  0EFF               	movlw	255
 15437  01228C  22DA               	addwfc	fsr2h,f,c
 15438  01228E  503C               	movf	(btemp+10)^0,w,c
 15439  012290  26DE               	addwf	postinc2,f,c
 15440  012292  503D               	movf	(btemp+11)^0,w,c
 15441  012294  22DE               	addwfc	postinc2,f,c
 15442  012296  0E00               	movlw	0
 15443  012298  22DE               	addwfc	postinc2,f,c
 15444  01229A  22DE               	addwfc	postinc2,f,c
 15445                           
 15446                           ;stkvar	_b @ sp[(-13)+-4]
 15447  01229C  0EF1               	movlw	241
 15448  01229E  24E1               	addwf	fsr1l,w,c
 15449  0122A0  6ED9               	movwf	fsr2l,c
 15450  0122A2  0EFF               	movlw	255
 15451  0122A4  20E2               	addwfc	fsr1h,w,c
 15452  0122A6  6EDA               	movwf	fsr2h,c
 15453  0122A8  50DF               	movf	indf2,w,c
 15454  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15455                           
 15456                           ;stkvar	_a @ sp[(-13)+-8]
 15457  0122AC  0EED               	movlw	237
 15458  0122AE  24E1               	addwf	fsr1l,w,c
 15459  0122B0  6ED9               	movwf	fsr2l,c
 15460  0122B2  0EFF               	movlw	255
 15461  0122B4  20E2               	addwfc	fsr1h,w,c
 15462  0122B6  6EDA               	movwf	fsr2h,c
 15463  0122B8  50DF               	movf	indf2,w,c
 15464  0122BA  023D               	mulwf	(btemp+11)^0,c
 15465                           
 15466                           ;stkvar	_temp @ sp[(-13)+8]
 15467  0122BC  0EFB               	movlw	-5
 15468  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15469  0122C4  0EFC               	movlw	-4
 15470  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15471                           
 15472                           ;stkvar	_temp @ sp[(-13)+8]
 15473  0122CC  0EFB               	movlw	-5
 15474  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15475  0122D4  0EFC               	movlw	-4
 15476  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15477  0122DC  503C               	movf	(btemp+10)^0,w,c
 15478  0122DE  6E36               	movwf	(btemp+4)^0,c
 15479  0122E0  503D               	movf	(btemp+11)^0,w,c
 15480  0122E2  6E37               	movwf	(btemp+5)^0,c
 15481  0122E4  6A38               	clrf	(btemp+6)^0,c
 15482  0122E6  6A39               	clrf	(btemp+7)^0,c
 15483  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15484  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15485  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15486  0122FA  6A36               	clrf	(btemp+4)^0,c
 15487                           
 15488                           ;stkvar	_prod @ sp[(-13)+0]
 15489  0122FC  50E1               	movf	fsr1l,w,c
 15490  0122FE  0FF3               	addlw	-13
 15491  012300  6ED9               	movwf	fsr2l,c
 15492  012302  50E2               	movf	fsr1h,w,c
 15493  012304  6EDA               	movwf	fsr2h,c
 15494  012306  0EFF               	movlw	255
 15495  012308  22DA               	addwfc	fsr2h,f,c
 15496  01230A  5036               	movf	(btemp+4)^0,w,c
 15497  01230C  26DE               	addwf	postinc2,f,c
 15498  01230E  5037               	movf	(btemp+5)^0,w,c
 15499  012310  22DE               	addwfc	postinc2,f,c
 15500  012312  5038               	movf	(btemp+6)^0,w,c
 15501  012314  22DE               	addwfc	postinc2,f,c
 15502  012316  5039               	movf	(btemp+7)^0,w,c
 15503  012318  22DE               	addwfc	postinc2,f,c
 15504                           
 15505                           ;stkvar	_prod @ sp[(-13)+0]
 15506  01231A  50E1               	movf	fsr1l,w,c
 15507  01231C  0FF3               	addlw	-13
 15508  01231E  6ED9               	movwf	fsr2l,c
 15509  012320  50E2               	movf	fsr1h,w,c
 15510  012322  6EDA               	movwf	fsr2h,c
 15511  012324  0EFF               	movlw	255
 15512  012326  22DA               	addwfc	fsr2h,f,c
 15513                           
 15514                           ;stkvar	_grs @ sp[(-13)+4]
 15515  012328  0EFA               	movlw	250
 15516  01232A  24E1               	addwf	fsr1l,w,c
 15517  01232C  6EE9               	movwf	fsr0l,c
 15518  01232E  0EFF               	movlw	255
 15519  012330  20E2               	addwfc	fsr1h,w,c
 15520  012332  6EEA               	movwf	fsr0h,c
 15521  012334  50EF               	movf	indf0,w,c
 15522  012336  26DE               	addwf	postinc2,f,c
 15523  012338  0E00               	movlw	0
 15524  01233A  22DE               	addwfc	postinc2,f,c
 15525  01233C  22DE               	addwfc	postinc2,f,c
 15526  01233E  22DE               	addwfc	postinc2,f,c
 15527                           
 15528                           ;stkvar	_grs @ sp[(-13)+4]
 15529  012340  50E1               	movf	fsr1l,w,c
 15530  012342  0FF7               	addlw	-9
 15531  012344  6ED9               	movwf	fsr2l,c
 15532  012346  50E2               	movf	fsr1h,w,c
 15533  012348  6EDA               	movwf	fsr2h,c
 15534  01234A  0EFF               	movlw	255
 15535  01234C  22DA               	addwfc	fsr2h,f,c
 15536  01234E  0E08               	movlw	8
 15537  012350                     u10205:
 15538  012350  90D8               	bcf	status,0,c
 15539  012352  36DE               	rlcf	postinc2,f,c
 15540  012354  36DE               	rlcf	postinc2,f,c
 15541  012356  36DE               	rlcf	postinc2,f,c
 15542  012358  36DD               	rlcf	postdec2,f,c
 15543  01235A  52DD               	movf	postdec2,f,c
 15544  01235C  52DD               	movf	postdec2,f,c
 15545  01235E  2EE8               	decfsz	wreg,f,c
 15546  012360  D7F7               	goto	u10205
 15547  012362  0E82               	movlw	130
 15548  012364  6E3C               	movwf	(btemp+10)^0,c
 15549  012366  0EFF               	movlw	255
 15550  012368  6E3D               	movwf	(btemp+11)^0,c
 15551                           
 15552                           ;stkvar	_bexp @ sp[(-13)+10]
 15553  01236A  0EFD               	movlw	-3
 15554  01236C  50E3               	movf	plusw1,w,c
 15555  01236E  6E3A               	movwf	(btemp+8)^0,c
 15556  012370  6A3B               	clrf	(btemp+9)^0,c
 15557                           
 15558                           ;stkvar	_aexp @ sp[(-13)+11]
 15559  012372  0EFE               	movlw	-2
 15560  012374  50E3               	movf	plusw1,w,c
 15561  012376  263A               	addwf	(btemp+8)^0,f,c
 15562  012378  0E00               	movlw	0
 15563  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15564  01237C  503C               	movf	(btemp+10)^0,w,c
 15565  01237E  263A               	addwf	(btemp+8)^0,f,c
 15566  012380  503D               	movf	(btemp+11)^0,w,c
 15567  012382  223B               	addwfc	(btemp+9)^0,f,c
 15568                           
 15569                           ;stkvar	_temp @ sp[(-13)+8]
 15570  012384  0EFB               	movlw	-5
 15571  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15572  01238C  0EFC               	movlw	-4
 15573  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15574  012394  D021               	goto	l9933
 15575  012396                     l9923:
 15576                           
 15577                           ;stkvar	_prod @ sp[(-13)+0]
 15578  012396  90D8               	bcf	status,0,c
 15579  012398  0EF3               	movlw	-13
 15580  01239A  36E3               	rlcf	plusw1,f,c
 15581  01239C  0EF4               	movlw	-12
 15582  01239E  36E3               	rlcf	plusw1,f,c
 15583  0123A0  0EF5               	movlw	-11
 15584  0123A2  36E3               	rlcf	plusw1,f,c
 15585  0123A4  0EF6               	movlw	-10
 15586  0123A6  36E3               	rlcf	plusw1,f,c
 15587                           
 15588                           ;stkvar	_grs @ sp[(-13)+4]
 15589  0123A8  0EFA               	movlw	-6
 15590  0123AA  AEE3               	btfss	plusw1,7,c
 15591  0123AC  D002               	goto	l9929
 15592                           
 15593                           ;stkvar	_prod @ sp[(-13)+0]
 15594  0123AE  0EF3               	movlw	-13
 15595  0123B0  80E3               	bsf	plusw1,0,c
 15596  0123B2                     l9929:
 15597                           
 15598                           ;stkvar	_grs @ sp[(-13)+4]
 15599  0123B2  90D8               	bcf	status,0,c
 15600  0123B4  0EF7               	movlw	-9
 15601  0123B6  36E3               	rlcf	plusw1,f,c
 15602  0123B8  0EF8               	movlw	-8
 15603  0123BA  36E3               	rlcf	plusw1,f,c
 15604  0123BC  0EF9               	movlw	-7
 15605  0123BE  36E3               	rlcf	plusw1,f,c
 15606  0123C0  0EFA               	movlw	-6
 15607  0123C2  36E3               	rlcf	plusw1,f,c
 15608                           
 15609                           ;stkvar	_temp @ sp[(-13)+8]
 15610  0123C4  50E1               	movf	fsr1l,w,c
 15611  0123C6  0FFB               	addlw	-5
 15612  0123C8  6ED9               	movwf	fsr2l,c
 15613  0123CA  50E2               	movf	fsr1h,w,c
 15614  0123CC  6EDA               	movwf	fsr2h,c
 15615  0123CE  0EFF               	movlw	255
 15616  0123D0  22DA               	addwfc	fsr2h,f,c
 15617  0123D2  06DE               	decf	postinc2,f,c
 15618  0123D4  0E00               	movlw	0
 15619  0123D6  5ADD               	subwfb	postdec2,f,c
 15620  0123D8                     l9933:
 15621                           
 15622                           ;stkvar	_prod @ sp[(-13)+0]
 15623  0123D8  0EF5               	movlw	-11
 15624  0123DA  AEE3               	btfss	plusw1,7,c
 15625  0123DC  D7DC               	goto	l9923
 15626                           
 15627                           ;stkvar	_aexp @ sp[(-13)+11]
 15628  0123DE  0EFE               	movlw	-2
 15629  0123E0  6AE3               	clrf	plusw1,c
 15630                           
 15631                           ;stkvar	_grs @ sp[(-13)+4]
 15632  0123E2  0EFA               	movlw	-6
 15633  0123E4  AEE3               	btfss	plusw1,7,c
 15634  0123E6  D020               	goto	l9947
 15635                           
 15636                           ;stkvar	_grs @ sp[(-13)+4]
 15637  0123E8  50E1               	movf	fsr1l,w,c
 15638  0123EA  0FF7               	addlw	-9
 15639  0123EC  6ED9               	movwf	fsr2l,c
 15640  0123EE  50E2               	movf	fsr1h,w,c
 15641  0123F0  6EDA               	movwf	fsr2h,c
 15642  0123F2  0EFF               	movlw	255
 15643  0123F4  22DA               	addwfc	fsr2h,f,c
 15644  0123F6  0EFF               	movlw	255
 15645  0123F8  14DE               	andwf	postinc2,w,c
 15646  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15647  0123FC  0EFF               	movlw	255
 15648  0123FE  14DE               	andwf	postinc2,w,c
 15649  012400  6E3B               	movwf	(btemp+9)^0,c
 15650  012402  0EFF               	movlw	255
 15651  012404  14DE               	andwf	postinc2,w,c
 15652  012406  6E3C               	movwf	(btemp+10)^0,c
 15653  012408  0E7F               	movlw	127
 15654  01240A  14DE               	andwf	postinc2,w,c
 15655  01240C  6E3D               	movwf	(btemp+11)^0,c
 15656  01240E  503A               	movf	(btemp+8)^0,w,c
 15657  012410  103B               	iorwf	(btemp+9)^0,w,c
 15658  012412  103C               	iorwf	(btemp+10)^0,w,c
 15659  012414  103D               	iorwf	(btemp+11)^0,w,c
 15660  012416  B4D8               	btfsc	status,2,c
 15661  012418  D004               	goto	l9943
 15662  01241A                     u10240:
 15663                           
 15664                           ;stkvar	_aexp @ sp[(-13)+11]
 15665  01241A  0EFE               	movlw	-2
 15666  01241C  6AE3               	clrf	plusw1,c
 15667  01241E  2AE3               	incf	plusw1,f,c
 15668  012420  D003               	goto	l9947
 15669  012422                     l9943:
 15670                           
 15671                           ;stkvar	_prod @ sp[(-13)+0]
 15672  012422  0EF3               	movlw	-13
 15673  012424  B0E3               	btfsc	plusw1,0,c
 15674  012426  D7F9               	goto	u10240
 15675  012428                     l9947:
 15676                           
 15677                           ;stkvar	_aexp @ sp[(-13)+11]
 15678  012428  0EFE               	movlw	-2
 15679  01242A  50E3               	movf	plusw1,w,c
 15680  01242C  B4D8               	btfsc	status,2,c
 15681  01242E  D036               	goto	l9957
 15682                           
 15683                           ;stkvar	_prod @ sp[(-13)+0]
 15684  012430  50E1               	movf	fsr1l,w,c
 15685  012432  0FF3               	addlw	-13
 15686  012434  6ED9               	movwf	fsr2l,c
 15687  012436  50E2               	movf	fsr1h,w,c
 15688  012438  6EDA               	movwf	fsr2h,c
 15689  01243A  0EFF               	movlw	255
 15690  01243C  22DA               	addwfc	fsr2h,f,c
 15691  01243E  2ADE               	incf	postinc2,f,c
 15692  012440  0E00               	movlw	0
 15693  012442  22DE               	addwfc	postinc2,f,c
 15694  012444  22DE               	addwfc	postinc2,f,c
 15695  012446  22DE               	addwfc	postinc2,f,c
 15696                           
 15697                           ;stkvar	_prod @ sp[(-13)+0]
 15698  012448  0EF6               	movlw	-10
 15699  01244A  A0E3               	btfss	plusw1,0,c
 15700  01244C  D027               	goto	l9957
 15701  01244E  0E01               	movlw	1
 15702  012450  6E3D               	movwf	(btemp+11)^0,c
 15703                           
 15704                           ;stkvar	_prod @ sp[(-13)+0]
 15705  012452  50E1               	movf	fsr1l,w,c
 15706  012454  0FF3               	addlw	-13
 15707  012456  6ED9               	movwf	fsr2l,c
 15708  012458  50E2               	movf	fsr1h,w,c
 15709  01245A  6EDA               	movwf	fsr2h,c
 15710  01245C  0EFF               	movlw	255
 15711  01245E  22DA               	addwfc	fsr2h,f,c
 15712  012460  283D               	incf	(btemp+11)^0,w,c
 15713  012462  52DE               	movf	postinc2,f,c
 15714  012464  D008               	goto	u10280
 15715  012466                     u10285:
 15716  012466  52DE               	movf	postinc2,f,c
 15717  012468  90D8               	bcf	status,0,c
 15718  01246A  BEDC               	btfsc	preinc2,7,c
 15719  01246C  80D8               	bsf	status,0,c
 15720  01246E  32DD               	rrcf	postdec2,f,c
 15721  012470  32DD               	rrcf	postdec2,f,c
 15722  012472  32DD               	rrcf	postdec2,f,c
 15723  012474  32DE               	rrcf	postinc2,f,c
 15724  012476                     u10280:
 15725  012476  2EE8               	decfsz	wreg,f,c
 15726  012478  D7F6               	goto	u10285
 15727                           
 15728                           ;stkvar	_temp @ sp[(-13)+8]
 15729  01247A  0EFB               	movlw	-5
 15730  01247C  50E3               	movf	plusw1,w,c
 15731  01247E  0F01               	addlw	1
 15732  012480  6E32               	movwf	btemp^0,c
 15733  012482  0EFB               	movlw	-5
 15734  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15735  01248A  6A32               	clrf	btemp^0,c
 15736  01248C  0EFC               	movlw	-4
 15737  01248E  50E3               	movf	plusw1,w,c
 15738  012490  2032               	addwfc	btemp^0,w,c
 15739  012492  6E32               	movwf	btemp^0,c
 15740  012494  0EFC               	movlw	-4
 15741  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15742  01249C                     l9957:
 15743                           
 15744                           ;stkvar	_temp @ sp[(-13)+8]
 15745  01249C  0EFC               	movlw	-4
 15746  01249E  BEE3               	btfsc	plusw1,7,c
 15747  0124A0  D020               	goto	l9961
 15748  0124A2  0EFC               	movlw	-4
 15749  0124A4  50E3               	movf	plusw1,w,c
 15750  0124A6  E104               	bnz	u10290
 15751  0124A8  0EFB               	movlw	-5
 15752  0124AA  28E3               	incf	plusw1,w,c
 15753  0124AC  A0D8               	btfss	status,0,c
 15754  0124AE  D019               	goto	l9961
 15755  0124B0                     u10290:
 15756  0124B0  0E00               	movlw	0
 15757  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15758  0124B4  0E00               	movlw	0
 15759  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15760  0124B8  0E80               	movlw	128
 15761  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15762  0124BC  0E7F               	movlw	127
 15763  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15764                           
 15765                           ;stkvar	_prod @ sp[(-13)+0]
 15766  0124C0  0EF3               	movlw	-13
 15767  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15768  0124C8  0EF4               	movlw	-12
 15769  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15770  0124D0  0EF5               	movlw	-11
 15771  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15772  0124D8  0EF6               	movlw	-10
 15773  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15774  0124E0  D044               	goto	l9977
 15775  0124E2                     l9961:
 15776                           
 15777                           ;stkvar	_temp @ sp[(-13)+8]
 15778  0124E2  0EFC               	movlw	-4
 15779  0124E4  BEE3               	btfsc	plusw1,7,c
 15780  0124E6  D007               	goto	u10300
 15781  0124E8  0EFC               	movlw	-4
 15782  0124EA  50E3               	movf	plusw1,w,c
 15783  0124EC  E10F               	bnz	l9967
 15784  0124EE  0EFB               	movlw	-5
 15785  0124F0  04E3               	decf	plusw1,w,c
 15786  0124F2  B0D8               	btfsc	status,0,c
 15787  0124F4  D00B               	goto	l9967
 15788  0124F6                     u10300:
 15789                           
 15790                           ;stkvar	_prod @ sp[(-13)+0]
 15791  0124F6  0EF3               	movlw	-13
 15792  0124F8  6AE3               	clrf	plusw1,c
 15793  0124FA  0EF4               	movlw	-12
 15794  0124FC  6AE3               	clrf	plusw1,c
 15795  0124FE  0EF5               	movlw	-11
 15796  012500  6AE3               	clrf	plusw1,c
 15797  012502  0EF6               	movlw	-10
 15798  012504  6AE3               	clrf	plusw1,c
 15799                           
 15800                           ;stkvar	_sign @ sp[(-13)+12]
 15801  012506  0EFF               	movlw	-1
 15802  012508  6AE3               	clrf	plusw1,c
 15803  01250A  D02F               	goto	l9977
 15804  01250C                     l9967:
 15805                           
 15806                           ;stkvar	_temp @ sp[(-13)+8]
 15807                           ;stkvar	_bexp @ sp[(-13)+10]
 15808  01250C  0EFB               	movlw	-5
 15809  01250E  006F FF8C  F032    	movff	plusw1,btemp
 15810  012514  0EFD               	movlw	-3
 15811  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 15812                           
 15813                           ;stkvar	_prod @ sp[(-13)+0]
 15814  01251C  50E1               	movf	fsr1l,w,c
 15815  01251E  0FF3               	addlw	-13
 15816  012520  6ED9               	movwf	fsr2l,c
 15817  012522  50E2               	movf	fsr1h,w,c
 15818  012524  6EDA               	movwf	fsr2h,c
 15819  012526  0EFF               	movlw	255
 15820  012528  22DA               	addwfc	fsr2h,f,c
 15821  01252A  0EFF               	movlw	255
 15822  01252C  16DE               	andwf	postinc2,f,c
 15823  01252E  0EFF               	movlw	255
 15824  012530  16DE               	andwf	postinc2,f,c
 15825  012532  0E7F               	movlw	127
 15826  012534  16DE               	andwf	postinc2,f,c
 15827  012536  0E00               	movlw	0
 15828  012538  16DE               	andwf	postinc2,f,c
 15829                           
 15830                           ;stkvar	_bexp @ sp[(-13)+10]
 15831  01253A  0EFD               	movlw	-3
 15832  01253C  A0E3               	btfss	plusw1,0,c
 15833  01253E  D008               	goto	l9975
 15834                           
 15835                           ;stkvar	_prod @ sp[(-13)+0]
 15836  012540  0EF5               	movlw	245
 15837  012542  24E1               	addwf	fsr1l,w,c
 15838  012544  6ED9               	movwf	fsr2l,c
 15839  012546  0EFF               	movlw	255
 15840  012548  20E2               	addwfc	fsr1h,w,c
 15841  01254A  6EDA               	movwf	fsr2h,c
 15842  01254C  0E00               	movlw	0
 15843  01254E  8EDB               	bsf	plusw2,7,c
 15844  012550                     l9975:
 15845                           
 15846                           ;stkvar	_prod @ sp[(-13)+0]
 15847  012550  0EF6               	movlw	246
 15848  012552  24E1               	addwf	fsr1l,w,c
 15849  012554  6ED9               	movwf	fsr2l,c
 15850  012556  0EFF               	movlw	255
 15851  012558  20E2               	addwfc	fsr1h,w,c
 15852  01255A  6EDA               	movwf	fsr2h,c
 15853                           
 15854                           ;stkvar	_bexp @ sp[(-13)+10]
 15855  01255C  0EFD               	movlw	-3
 15856  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15857  012564  90D8               	bcf	status,0,c
 15858  012566  303D               	rrcf	(btemp+11)^0,w,c
 15859  012568  6EDF               	movwf	indf2,c
 15860  01256A                     l9977:
 15861                           
 15862                           ;stkvar	_sign @ sp[(-13)+12]
 15863  01256A  0EFF               	movlw	-1
 15864  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15865                           
 15866                           ;stkvar	_prod @ sp[(-13)+0]
 15867  012572  0EF6               	movlw	246
 15868  012574  24E1               	addwf	fsr1l,w,c
 15869  012576  6ED9               	movwf	fsr2l,c
 15870  012578  0EFF               	movlw	255
 15871  01257A  20E2               	addwfc	fsr1h,w,c
 15872  01257C  6EDA               	movwf	fsr2h,c
 15873  01257E  503D               	movf	(btemp+11)^0,w,c
 15874  012580  12DF               	iorwf	indf2,f,c
 15875                           
 15876                           ;stkvar	_prod @ sp[(-13)+0]
 15877  012582  0EF3               	movlw	-13
 15878  012584  006F FF8C  F032    	movff	plusw1,btemp
 15879  01258A  0EF4               	movlw	-12
 15880  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 15881  012592  0EF5               	movlw	-11
 15882  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 15883  01259A  0EF6               	movlw	-10
 15884  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 15885  0125A2                     l2660:
 15886                           
 15887                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15888  0125A2  0EEB               	movlw	235
 15889  0125A4  26E1               	addwf	fsr1l,f,c
 15890  0125A6  0EFF               	movlw	255
 15891  0125A8  22E2               	addwfc	fsr1h,f,c
 15892  0125AA  0012               	return		;funcret
 15893  0125AC                     __end_of___flmul:
 15894                           	opt callstack 0
 15895                           
 15896 ;; *************** function ___flge *****************
 15897 ;; Defined at:
 15898 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15899 ;; Parameters:    Size  Location     Type
 15900 ;;  ff1             4  [STACK] unsigned char 
 15901 ;;  ff2             4  [STACK] unsigned char 
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;		None
 15904 ;; Return value:  Size  Location     Type
 15905 ;;		None               void
 15906 ;; Registers used:
 15907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/5
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15917 ;;Total ram usage:        0 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:    6
 15920 ;; This function calls:
 15921 ;;		Nothing
 15922 ;; This function is called by:
 15923 ;;		_efgtoa
 15924 ;; This function uses a reentrant model
 15925 ;;
 15926                           
 15927                           	psect	text56
 15928  015EC0                     __ptext56:
 15929                           	opt callstack 0
 15930  015EC0                     ___flge:
 15931                           	opt callstack 17
 15932                           
 15933                           ;stkvar	_ff1 @ sp[(0)+-4]
 15934                           
 15935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15936                           ;incstack = 0
 15937  015EC0  50E1               	movf	fsr1l,w,c
 15938  015EC2  0FFC               	addlw	-4
 15939  015EC4  6ED9               	movwf	fsr2l,c
 15940  015EC6  50E2               	movf	fsr1h,w,c
 15941  015EC8  6EDA               	movwf	fsr2h,c
 15942  015ECA  0EFF               	movlw	255
 15943  015ECC  22DA               	addwfc	fsr2h,f,c
 15944  015ECE  0E00               	movlw	0
 15945  015ED0  14DE               	andwf	postinc2,w,c
 15946  015ED2  6E3A               	movwf	(btemp+8)^0,c
 15947  015ED4  0E00               	movlw	0
 15948  015ED6  14DE               	andwf	postinc2,w,c
 15949  015ED8  6E3B               	movwf	(btemp+9)^0,c
 15950  015EDA  0E80               	movlw	128
 15951  015EDC  14DE               	andwf	postinc2,w,c
 15952  015EDE  6E3C               	movwf	(btemp+10)^0,c
 15953  015EE0  0E7F               	movlw	127
 15954  015EE2  14DE               	andwf	postinc2,w,c
 15955  015EE4  6E3D               	movwf	(btemp+11)^0,c
 15956  015EE6  503A               	movf	(btemp+8)^0,w,c
 15957  015EE8  103B               	iorwf	(btemp+9)^0,w,c
 15958  015EEA  103C               	iorwf	(btemp+10)^0,w,c
 15959  015EEC  103D               	iorwf	(btemp+11)^0,w,c
 15960  015EEE  A4D8               	btfss	status,2,c
 15961  015EF0  D008               	goto	l10093
 15962                           
 15963                           ;stkvar	_ff1 @ sp[(0)+-4]
 15964  015EF2  0EFC               	movlw	-4
 15965  015EF4  6AE3               	clrf	plusw1,c
 15966  015EF6  0EFD               	movlw	-3
 15967  015EF8  6AE3               	clrf	plusw1,c
 15968  015EFA  0EFE               	movlw	-2
 15969  015EFC  6AE3               	clrf	plusw1,c
 15970  015EFE  0EFF               	movlw	-1
 15971  015F00  6AE3               	clrf	plusw1,c
 15972  015F02                     l10093:
 15973                           
 15974                           ;stkvar	_ff2 @ sp[(0)+-8]
 15975  015F02  50E1               	movf	fsr1l,w,c
 15976  015F04  0FF8               	addlw	-8
 15977  015F06  6ED9               	movwf	fsr2l,c
 15978  015F08  50E2               	movf	fsr1h,w,c
 15979  015F0A  6EDA               	movwf	fsr2h,c
 15980  015F0C  0EFF               	movlw	255
 15981  015F0E  22DA               	addwfc	fsr2h,f,c
 15982  015F10  0E00               	movlw	0
 15983  015F12  14DE               	andwf	postinc2,w,c
 15984  015F14  6E3A               	movwf	(btemp+8)^0,c
 15985  015F16  0E00               	movlw	0
 15986  015F18  14DE               	andwf	postinc2,w,c
 15987  015F1A  6E3B               	movwf	(btemp+9)^0,c
 15988  015F1C  0E80               	movlw	128
 15989  015F1E  14DE               	andwf	postinc2,w,c
 15990  015F20  6E3C               	movwf	(btemp+10)^0,c
 15991  015F22  0E7F               	movlw	127
 15992  015F24  14DE               	andwf	postinc2,w,c
 15993  015F26  6E3D               	movwf	(btemp+11)^0,c
 15994  015F28  503A               	movf	(btemp+8)^0,w,c
 15995  015F2A  103B               	iorwf	(btemp+9)^0,w,c
 15996  015F2C  103C               	iorwf	(btemp+10)^0,w,c
 15997  015F2E  103D               	iorwf	(btemp+11)^0,w,c
 15998  015F30  A4D8               	btfss	status,2,c
 15999  015F32  D008               	goto	l2305
 16000                           
 16001                           ;stkvar	_ff2 @ sp[(0)+-8]
 16002  015F34  0EF8               	movlw	-8
 16003  015F36  6AE3               	clrf	plusw1,c
 16004  015F38  0EF9               	movlw	-7
 16005  015F3A  6AE3               	clrf	plusw1,c
 16006  015F3C  0EFA               	movlw	-6
 16007  015F3E  6AE3               	clrf	plusw1,c
 16008  015F40  0EFB               	movlw	-5
 16009  015F42  6AE3               	clrf	plusw1,c
 16010  015F44                     l2305:
 16011                           
 16012                           ;stkvar	_ff1 @ sp[(0)+-4]
 16013  015F44  0EFF               	movlw	-1
 16014  015F46  AEE3               	btfss	plusw1,7,c
 16015  015F48  D024               	goto	l10099
 16016                           
 16017                           ;stkvar	_ff1 @ sp[(0)+-4]
 16018  015F4A  0E00               	movlw	0
 16019  015F4C  6E3A               	movwf	(btemp+8)^0,c
 16020  015F4E  0E00               	movlw	0
 16021  015F50  6E3B               	movwf	(btemp+9)^0,c
 16022  015F52  0E00               	movlw	0
 16023  015F54  6E3C               	movwf	(btemp+10)^0,c
 16024  015F56  0E80               	movlw	128
 16025  015F58  6E3D               	movwf	(btemp+11)^0,c
 16026  015F5A  0EFC               	movlw	-4
 16027  015F5C  50E3               	movf	plusw1,w,c
 16028  015F5E  5E3A               	subwf	(btemp+8)^0,f,c
 16029  015F60  0EFD               	movlw	-3
 16030  015F62  50E3               	movf	plusw1,w,c
 16031  015F64  5A3B               	subwfb	(btemp+9)^0,f,c
 16032  015F66  0EFE               	movlw	-2
 16033  015F68  50E3               	movf	plusw1,w,c
 16034  015F6A  5A3C               	subwfb	(btemp+10)^0,f,c
 16035  015F6C  0EFF               	movlw	-1
 16036  015F6E  50E3               	movf	plusw1,w,c
 16037  015F70  5A3D               	subwfb	(btemp+11)^0,f,c
 16038                           
 16039                           ;stkvar	_ff1 @ sp[(0)+-4]
 16040  015F72  0EFC               	movlw	-4
 16041  015F74  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16042  015F7A  0EFD               	movlw	-3
 16043  015F7C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16044  015F82  0EFE               	movlw	-2
 16045  015F84  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16046  015F8A  0EFF               	movlw	-1
 16047  015F8C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16048  015F92                     l10099:
 16049                           
 16050                           ;stkvar	_ff2 @ sp[(0)+-8]
 16051  015F92  0EFB               	movlw	-5
 16052  015F94  AEE3               	btfss	plusw1,7,c
 16053  015F96  D024               	goto	l10103
 16054                           
 16055                           ;stkvar	_ff2 @ sp[(0)+-8]
 16056  015F98  0E00               	movlw	0
 16057  015F9A  6E3A               	movwf	(btemp+8)^0,c
 16058  015F9C  0E00               	movlw	0
 16059  015F9E  6E3B               	movwf	(btemp+9)^0,c
 16060  015FA0  0E00               	movlw	0
 16061  015FA2  6E3C               	movwf	(btemp+10)^0,c
 16062  015FA4  0E80               	movlw	128
 16063  015FA6  6E3D               	movwf	(btemp+11)^0,c
 16064  015FA8  0EF8               	movlw	-8
 16065  015FAA  50E3               	movf	plusw1,w,c
 16066  015FAC  5E3A               	subwf	(btemp+8)^0,f,c
 16067  015FAE  0EF9               	movlw	-7
 16068  015FB0  50E3               	movf	plusw1,w,c
 16069  015FB2  5A3B               	subwfb	(btemp+9)^0,f,c
 16070  015FB4  0EFA               	movlw	-6
 16071  015FB6  50E3               	movf	plusw1,w,c
 16072  015FB8  5A3C               	subwfb	(btemp+10)^0,f,c
 16073  015FBA  0EFB               	movlw	-5
 16074  015FBC  50E3               	movf	plusw1,w,c
 16075  015FBE  5A3D               	subwfb	(btemp+11)^0,f,c
 16076                           
 16077                           ;stkvar	_ff2 @ sp[(0)+-8]
 16078  015FC0  0EF8               	movlw	-8
 16079  015FC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16080  015FC8  0EF9               	movlw	-7
 16081  015FCA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16082  015FD0  0EFA               	movlw	-6
 16083  015FD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16084  015FD8  0EFB               	movlw	-5
 16085  015FDA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16086  015FE0                     l10103:
 16087                           
 16088                           ;stkvar	_ff1 @ sp[(0)+-4]
 16089  015FE0  0EFF               	movlw	-1
 16090  015FE2  7EE3               	btg	plusw1,7,c
 16091                           
 16092                           ;stkvar	_ff2 @ sp[(0)+-8]
 16093  015FE4  0EFB               	movlw	-5
 16094  015FE6  7EE3               	btg	plusw1,7,c
 16095                           
 16096                           ;stkvar	_ff2 @ sp[(0)+-8]
 16097                           ;stkvar	_ff1 @ sp[(0)+-4]
 16098  015FE8  50E1               	movf	fsr1l,w,c
 16099  015FEA  0FFC               	addlw	-4
 16100  015FEC  6ED9               	movwf	fsr2l,c
 16101  015FEE  50E2               	movf	fsr1h,w,c
 16102  015FF0  6EDA               	movwf	fsr2h,c
 16103  015FF2  0EFF               	movlw	255
 16104  015FF4  22DA               	addwfc	fsr2h,f,c
 16105  015FF6  0EF8               	movlw	-8
 16106  015FF8  50E3               	movf	plusw1,w,c
 16107  015FFA  5CDE               	subwf	postinc2,w,c
 16108  015FFC  0EF9               	movlw	-7
 16109  015FFE  50E3               	movf	plusw1,w,c
 16110  016000  58DE               	subwfb	postinc2,w,c
 16111  016002  0EFA               	movlw	-6
 16112  016004  50E3               	movf	plusw1,w,c
 16113  016006  58DE               	subwfb	postinc2,w,c
 16114  016008  0EFB               	movlw	-5
 16115  01600A  50E3               	movf	plusw1,w,c
 16116  01600C  58DE               	subwfb	postinc2,w,c
 16117  01600E  B0D8               	btfsc	status,0,c
 16118  016010  D002               	goto	l10111
 16119  016012  9032               	bcf	btemp& (0+255),0,c
 16120  016014  D001               	goto	l2312
 16121  016016                     l10111:
 16122  016016  8032               	bsf	btemp& (0+255),0,c
 16123  016018                     l2312:
 16124                           
 16125                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16126  016018  0EF8               	movlw	248
 16127  01601A  26E1               	addwf	fsr1l,f,c
 16128  01601C  0EFF               	movlw	255
 16129  01601E  22E2               	addwfc	fsr1h,f,c
 16130  016020  0012               	return		;funcret
 16131  016022                     __end_of___flge:
 16132                           	opt callstack 0
 16133                           
 16134 ;; *************** function ___fleq *****************
 16135 ;; Defined at:
 16136 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16137 ;; Parameters:    Size  Location     Type
 16138 ;;  ff1             4  [STACK] unsigned char 
 16139 ;;  ff2             4  [STACK] unsigned char 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;		None               void
 16144 ;; Registers used:
 16145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/5
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16155 ;;Total ram usage:        0 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:    6
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_efgtoa
 16162 ;; This function uses a reentrant model
 16163 ;;
 16164                           
 16165                           	psect	text57
 16166  016C00                     __ptext57:
 16167                           	opt callstack 0
 16168  016C00                     ___fleq:
 16169                           	opt callstack 17
 16170                           
 16171                           ;stkvar	_ff1 @ sp[(0)+-4]
 16172                           
 16173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16174                           ;incstack = 0
 16175  016C00  50E1               	movf	fsr1l,w,c
 16176  016C02  0FFC               	addlw	-4
 16177  016C04  6ED9               	movwf	fsr2l,c
 16178  016C06  50E2               	movf	fsr1h,w,c
 16179  016C08  6EDA               	movwf	fsr2h,c
 16180  016C0A  0EFF               	movlw	255
 16181  016C0C  22DA               	addwfc	fsr2h,f,c
 16182  016C0E  0E00               	movlw	0
 16183  016C10  14DE               	andwf	postinc2,w,c
 16184  016C12  6E3A               	movwf	(btemp+8)^0,c
 16185  016C14  0E00               	movlw	0
 16186  016C16  14DE               	andwf	postinc2,w,c
 16187  016C18  6E3B               	movwf	(btemp+9)^0,c
 16188  016C1A  0E80               	movlw	128
 16189  016C1C  14DE               	andwf	postinc2,w,c
 16190  016C1E  6E3C               	movwf	(btemp+10)^0,c
 16191  016C20  0E7F               	movlw	127
 16192  016C22  14DE               	andwf	postinc2,w,c
 16193  016C24  6E3D               	movwf	(btemp+11)^0,c
 16194  016C26  503A               	movf	(btemp+8)^0,w,c
 16195  016C28  103B               	iorwf	(btemp+9)^0,w,c
 16196  016C2A  103C               	iorwf	(btemp+10)^0,w,c
 16197  016C2C  103D               	iorwf	(btemp+11)^0,w,c
 16198  016C2E  A4D8               	btfss	status,2,c
 16199  016C30  D008               	goto	l10077
 16200                           
 16201                           ;stkvar	_ff1 @ sp[(0)+-4]
 16202  016C32  0EFC               	movlw	-4
 16203  016C34  6AE3               	clrf	plusw1,c
 16204  016C36  0EFD               	movlw	-3
 16205  016C38  6AE3               	clrf	plusw1,c
 16206  016C3A  0EFE               	movlw	-2
 16207  016C3C  6AE3               	clrf	plusw1,c
 16208  016C3E  0EFF               	movlw	-1
 16209  016C40  6AE3               	clrf	plusw1,c
 16210  016C42                     l10077:
 16211                           
 16212                           ;stkvar	_ff2 @ sp[(0)+-8]
 16213  016C42  50E1               	movf	fsr1l,w,c
 16214  016C44  0FF8               	addlw	-8
 16215  016C46  6ED9               	movwf	fsr2l,c
 16216  016C48  50E2               	movf	fsr1h,w,c
 16217  016C4A  6EDA               	movwf	fsr2h,c
 16218  016C4C  0EFF               	movlw	255
 16219  016C4E  22DA               	addwfc	fsr2h,f,c
 16220  016C50  0E00               	movlw	0
 16221  016C52  14DE               	andwf	postinc2,w,c
 16222  016C54  6E3A               	movwf	(btemp+8)^0,c
 16223  016C56  0E00               	movlw	0
 16224  016C58  14DE               	andwf	postinc2,w,c
 16225  016C5A  6E3B               	movwf	(btemp+9)^0,c
 16226  016C5C  0E80               	movlw	128
 16227  016C5E  14DE               	andwf	postinc2,w,c
 16228  016C60  6E3C               	movwf	(btemp+10)^0,c
 16229  016C62  0E7F               	movlw	127
 16230  016C64  14DE               	andwf	postinc2,w,c
 16231  016C66  6E3D               	movwf	(btemp+11)^0,c
 16232  016C68  503A               	movf	(btemp+8)^0,w,c
 16233  016C6A  103B               	iorwf	(btemp+9)^0,w,c
 16234  016C6C  103C               	iorwf	(btemp+10)^0,w,c
 16235  016C6E  103D               	iorwf	(btemp+11)^0,w,c
 16236  016C70  A4D8               	btfss	status,2,c
 16237  016C72  D008               	goto	l10081
 16238                           
 16239                           ;stkvar	_ff2 @ sp[(0)+-8]
 16240  016C74  0EF8               	movlw	-8
 16241  016C76  6AE3               	clrf	plusw1,c
 16242  016C78  0EF9               	movlw	-7
 16243  016C7A  6AE3               	clrf	plusw1,c
 16244  016C7C  0EFA               	movlw	-6
 16245  016C7E  6AE3               	clrf	plusw1,c
 16246  016C80  0EFB               	movlw	-5
 16247  016C82  6AE3               	clrf	plusw1,c
 16248  016C84                     l10081:
 16249                           
 16250                           ;stkvar	_ff2 @ sp[(0)+-8]
 16251                           ;stkvar	_ff1 @ sp[(0)+-4]
 16252  016C84  50E1               	movf	fsr1l,w,c
 16253  016C86  0FFC               	addlw	-4
 16254  016C88  6ED9               	movwf	fsr2l,c
 16255  016C8A  50E2               	movf	fsr1h,w,c
 16256  016C8C  6EDA               	movwf	fsr2h,c
 16257  016C8E  0EFF               	movlw	255
 16258  016C90  22DA               	addwfc	fsr2h,f,c
 16259  016C92  0EF8               	movlw	-8
 16260  016C94  50E3               	movf	plusw1,w,c
 16261  016C96  18DE               	xorwf	postinc2,w,c
 16262  016C98  E10D               	bnz	u10480
 16263  016C9A  0EF9               	movlw	-7
 16264  016C9C  50E3               	movf	plusw1,w,c
 16265  016C9E  18DE               	xorwf	postinc2,w,c
 16266  016CA0  E109               	bnz	u10480
 16267  016CA2  0EFA               	movlw	-6
 16268  016CA4  50E3               	movf	plusw1,w,c
 16269  016CA6  18DE               	xorwf	postinc2,w,c
 16270  016CA8  E105               	bnz	u10480
 16271  016CAA  0EFB               	movlw	-5
 16272  016CAC  50E3               	movf	plusw1,w,c
 16273  016CAE  18DE               	xorwf	postinc2,w,c
 16274  016CB0  B4D8               	btfsc	status,2,c
 16275  016CB2  D002               	goto	l10085
 16276  016CB4                     u10480:
 16277  016CB4  9032               	bcf	btemp& (0+255),0,c
 16278  016CB6  D001               	goto	l2301
 16279  016CB8                     l10085:
 16280  016CB8  8032               	bsf	btemp& (0+255),0,c
 16281  016CBA                     l2301:
 16282                           
 16283                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16284  016CBA  0EF8               	movlw	248
 16285  016CBC  26E1               	addwf	fsr1l,f,c
 16286  016CBE  0EFF               	movlw	255
 16287  016CC0  22E2               	addwfc	fsr1h,f,c
 16288  016CC2  0012               	return		;funcret
 16289  016CC4                     __end_of___fleq:
 16290                           	opt callstack 0
 16291                           
 16292 ;; *************** function ___fldiv *****************
 16293 ;; Defined at:
 16294 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;  b               4  [STACK] unsigned char 
 16297 ;;  a               4  [STACK] unsigned char 
 16298 ;; Auto vars:     Size  Location     Type
 16299 ;;  grs             4  [STACK] unsigned long 
 16300 ;;  rem             4  [STACK] unsigned long 
 16301 ;;  new_exp         2  [STACK] short 
 16302 ;;  aexp            1  [STACK] unsigned char 
 16303 ;;  bexp            1  [STACK] unsigned char 
 16304 ;;  sign            1  [STACK] unsigned char 
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  4  [STACK] unsigned char 
 16307 ;; Registers used:
 16308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/39
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16318 ;;Total ram usage:        0 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    6
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_conv_raw_result
 16325 ;;		_efgtoa
 16326 ;; This function uses a reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text58
 16330  012D68                     __ptext58:
 16331                           	opt callstack 0
 16332  012D68                     ___fldiv:
 16333                           	opt callstack 0
 16334                           
 16335                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16336  012D68  0E0D               	movlw	13
 16337  012D6A  26E1               	addwf	fsr1l,f,c
 16338  012D6C  0E00               	movlw	0
 16339  012D6E  22E2               	addwfc	fsr1h,f,c
 16340                           
 16341                           ;stkvar	_b @ sp[(-13)+-4]
 16342                           
 16343                           ;incstack = 0
 16344  012D70  0EF2               	movlw	242
 16345  012D72  24E1               	addwf	fsr1l,w,c
 16346  012D74  6ED9               	movwf	fsr2l,c
 16347  012D76  0EFF               	movlw	255
 16348  012D78  20E2               	addwfc	fsr1h,w,c
 16349  012D7A  6EDA               	movwf	fsr2h,c
 16350  012D7C  50DF               	movf	indf2,w,c
 16351  012D7E  6E3D               	movwf	(btemp+11)^0,c
 16352  012D80  0E80               	movlw	128
 16353  012D82  163D               	andwf	(btemp+11)^0,f,c
 16354                           
 16355                           ;stkvar	_sign @ sp[(-13)+12]
 16356  012D84  0EFF               	movlw	-1
 16357  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16358                           
 16359                           ;stkvar	_b @ sp[(-13)+-4]
 16360  012D8C  0EF2               	movlw	242
 16361  012D8E  24E1               	addwf	fsr1l,w,c
 16362  012D90  6ED9               	movwf	fsr2l,c
 16363  012D92  0EFF               	movlw	255
 16364  012D94  20E2               	addwfc	fsr1h,w,c
 16365  012D96  6EDA               	movwf	fsr2h,c
 16366  012D98  50DF               	movf	indf2,w,c
 16367  012D9A  6E3D               	movwf	(btemp+11)^0,c
 16368  012D9C  90D8               	bcf	status,0,c
 16369  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 16370  012DA0  6E3C               	movwf	(btemp+10)^0,c
 16371                           
 16372                           ;stkvar	_bexp @ sp[(-13)+11]
 16373  012DA2  0EFE               	movlw	-2
 16374  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16375                           
 16376                           ;stkvar	_b @ sp[(-13)+-4]
 16377  012DAA  0EF1               	movlw	241
 16378  012DAC  24E1               	addwf	fsr1l,w,c
 16379  012DAE  6ED9               	movwf	fsr2l,c
 16380  012DB0  0EFF               	movlw	255
 16381  012DB2  20E2               	addwfc	fsr1h,w,c
 16382  012DB4  6EDA               	movwf	fsr2h,c
 16383  012DB6  AEDF               	btfss	indf2,7,c
 16384  012DB8  D002               	goto	l9679
 16385                           
 16386                           ;stkvar	_bexp @ sp[(-13)+11]
 16387  012DBA  0EFE               	movlw	-2
 16388  012DBC  80E3               	bsf	plusw1,0,c
 16389  012DBE                     l9679:
 16390                           
 16391                           ;stkvar	_bexp @ sp[(-13)+11]
 16392  012DBE  0EFE               	movlw	-2
 16393  012DC0  50E3               	movf	plusw1,w,c
 16394  012DC2  B4D8               	btfsc	status,2,c
 16395  012DC4  D027               	goto	l9689
 16396                           
 16397                           ;stkvar	_bexp @ sp[(-13)+11]
 16398  012DC6  0EFE               	movlw	-2
 16399  012DC8  28E3               	incf	plusw1,w,c
 16400  012DCA  A4D8               	btfss	status,2,c
 16401  012DCC  D018               	goto	l9685
 16402  012DCE  0E00               	movlw	0
 16403  012DD0  6E3A               	movwf	(btemp+8)^0,c
 16404  012DD2  0E00               	movlw	0
 16405  012DD4  6E3B               	movwf	(btemp+9)^0,c
 16406  012DD6  0E00               	movlw	0
 16407  012DD8  6E3C               	movwf	(btemp+10)^0,c
 16408  012DDA  0E00               	movlw	0
 16409  012DDC  6E3D               	movwf	(btemp+11)^0,c
 16410                           
 16411                           ;stkvar	_b @ sp[(-13)+-4]
 16412  012DDE  0EEF               	movlw	-17
 16413  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16414  012DE6  0EF0               	movlw	-16
 16415  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16416  012DEE  0EF1               	movlw	-15
 16417  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16418  012DF6  0EF2               	movlw	-14
 16419  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16420  012DFE                     l9685:
 16421                           
 16422                           ;stkvar	_b @ sp[(-13)+-4]
 16423  012DFE  0EF1               	movlw	-15
 16424  012E00  8EE3               	bsf	plusw1,7,c
 16425                           
 16426                           ;stkvar	_b @ sp[(-13)+-4]
 16427  012E02  0EF2               	movlw	242
 16428  012E04  24E1               	addwf	fsr1l,w,c
 16429  012E06  6ED9               	movwf	fsr2l,c
 16430  012E08  0EFF               	movlw	255
 16431  012E0A  20E2               	addwfc	fsr1h,w,c
 16432  012E0C  6EDA               	movwf	fsr2h,c
 16433  012E0E  0E00               	movlw	0
 16434  012E10  6EDF               	movwf	indf2,c
 16435  012E12  D018               	goto	l9691
 16436  012E14                     l9689:
 16437  012E14  0E00               	movlw	0
 16438  012E16  6E3A               	movwf	(btemp+8)^0,c
 16439  012E18  0E00               	movlw	0
 16440  012E1A  6E3B               	movwf	(btemp+9)^0,c
 16441  012E1C  0E00               	movlw	0
 16442  012E1E  6E3C               	movwf	(btemp+10)^0,c
 16443  012E20  0E00               	movlw	0
 16444  012E22  6E3D               	movwf	(btemp+11)^0,c
 16445                           
 16446                           ;stkvar	_b @ sp[(-13)+-4]
 16447  012E24  0EEF               	movlw	-17
 16448  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16449  012E2C  0EF0               	movlw	-16
 16450  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16451  012E34  0EF1               	movlw	-15
 16452  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16453  012E3C  0EF2               	movlw	-14
 16454  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16455  012E44                     l9691:
 16456                           
 16457                           ;stkvar	_a @ sp[(-13)+-8]
 16458  012E44  0EEE               	movlw	238
 16459  012E46  24E1               	addwf	fsr1l,w,c
 16460  012E48  6ED9               	movwf	fsr2l,c
 16461  012E4A  0EFF               	movlw	255
 16462  012E4C  20E2               	addwfc	fsr1h,w,c
 16463  012E4E  6EDA               	movwf	fsr2h,c
 16464  012E50  50DF               	movf	indf2,w,c
 16465  012E52  6E3D               	movwf	(btemp+11)^0,c
 16466  012E54  0E80               	movlw	128
 16467  012E56  163D               	andwf	(btemp+11)^0,f,c
 16468                           
 16469                           ;stkvar	_sign @ sp[(-13)+12]
 16470  012E58  50E1               	movf	fsr1l,w,c
 16471  012E5A  0FFF               	addlw	-1
 16472  012E5C  6ED9               	movwf	fsr2l,c
 16473  012E5E  50E2               	movf	fsr1h,w,c
 16474  012E60  6EDA               	movwf	fsr2h,c
 16475  012E62  0EFF               	movlw	255
 16476  012E64  22DA               	addwfc	fsr2h,f,c
 16477  012E66  503D               	movf	(btemp+11)^0,w,c
 16478  012E68  1ADF               	xorwf	indf2,f,c
 16479                           
 16480                           ;stkvar	_a @ sp[(-13)+-8]
 16481  012E6A  0EEE               	movlw	238
 16482  012E6C  24E1               	addwf	fsr1l,w,c
 16483  012E6E  6ED9               	movwf	fsr2l,c
 16484  012E70  0EFF               	movlw	255
 16485  012E72  20E2               	addwfc	fsr1h,w,c
 16486  012E74  6EDA               	movwf	fsr2h,c
 16487  012E76  50DF               	movf	indf2,w,c
 16488  012E78  6E3D               	movwf	(btemp+11)^0,c
 16489  012E7A  90D8               	bcf	status,0,c
 16490  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 16491  012E7E  6E3C               	movwf	(btemp+10)^0,c
 16492                           
 16493                           ;stkvar	_aexp @ sp[(-13)+10]
 16494  012E80  0EFD               	movlw	-3
 16495  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16496                           
 16497                           ;stkvar	_a @ sp[(-13)+-8]
 16498  012E88  0EED               	movlw	237
 16499  012E8A  24E1               	addwf	fsr1l,w,c
 16500  012E8C  6ED9               	movwf	fsr2l,c
 16501  012E8E  0EFF               	movlw	255
 16502  012E90  20E2               	addwfc	fsr1h,w,c
 16503  012E92  6EDA               	movwf	fsr2h,c
 16504  012E94  AEDF               	btfss	indf2,7,c
 16505  012E96  D002               	goto	l9699
 16506                           
 16507                           ;stkvar	_aexp @ sp[(-13)+10]
 16508  012E98  0EFD               	movlw	-3
 16509  012E9A  80E3               	bsf	plusw1,0,c
 16510  012E9C                     l9699:
 16511                           
 16512                           ;stkvar	_aexp @ sp[(-13)+10]
 16513  012E9C  0EFD               	movlw	-3
 16514  012E9E  50E3               	movf	plusw1,w,c
 16515  012EA0  B4D8               	btfsc	status,2,c
 16516  012EA2  D027               	goto	l9709
 16517                           
 16518                           ;stkvar	_aexp @ sp[(-13)+10]
 16519  012EA4  0EFD               	movlw	-3
 16520  012EA6  28E3               	incf	plusw1,w,c
 16521  012EA8  A4D8               	btfss	status,2,c
 16522  012EAA  D018               	goto	l9705
 16523  012EAC  0E00               	movlw	0
 16524  012EAE  6E3A               	movwf	(btemp+8)^0,c
 16525  012EB0  0E00               	movlw	0
 16526  012EB2  6E3B               	movwf	(btemp+9)^0,c
 16527  012EB4  0E00               	movlw	0
 16528  012EB6  6E3C               	movwf	(btemp+10)^0,c
 16529  012EB8  0E00               	movlw	0
 16530  012EBA  6E3D               	movwf	(btemp+11)^0,c
 16531                           
 16532                           ;stkvar	_a @ sp[(-13)+-8]
 16533  012EBC  0EEB               	movlw	-21
 16534  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16535  012EC4  0EEC               	movlw	-20
 16536  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16537  012ECC  0EED               	movlw	-19
 16538  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16539  012ED4  0EEE               	movlw	-18
 16540  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16541  012EDC                     l9705:
 16542                           
 16543                           ;stkvar	_a @ sp[(-13)+-8]
 16544  012EDC  0EED               	movlw	-19
 16545  012EDE  8EE3               	bsf	plusw1,7,c
 16546                           
 16547                           ;stkvar	_a @ sp[(-13)+-8]
 16548  012EE0  0EEE               	movlw	238
 16549  012EE2  24E1               	addwf	fsr1l,w,c
 16550  012EE4  6ED9               	movwf	fsr2l,c
 16551  012EE6  0EFF               	movlw	255
 16552  012EE8  20E2               	addwfc	fsr1h,w,c
 16553  012EEA  6EDA               	movwf	fsr2h,c
 16554  012EEC  0E00               	movlw	0
 16555  012EEE  6EDF               	movwf	indf2,c
 16556  012EF0  D018               	goto	l9711
 16557  012EF2                     l9709:
 16558  012EF2  0E00               	movlw	0
 16559  012EF4  6E3A               	movwf	(btemp+8)^0,c
 16560  012EF6  0E00               	movlw	0
 16561  012EF8  6E3B               	movwf	(btemp+9)^0,c
 16562  012EFA  0E00               	movlw	0
 16563  012EFC  6E3C               	movwf	(btemp+10)^0,c
 16564  012EFE  0E00               	movlw	0
 16565  012F00  6E3D               	movwf	(btemp+11)^0,c
 16566                           
 16567                           ;stkvar	_a @ sp[(-13)+-8]
 16568  012F02  0EEB               	movlw	-21
 16569  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16570  012F0A  0EEC               	movlw	-20
 16571  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16572  012F12  0EED               	movlw	-19
 16573  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16574  012F1A  0EEE               	movlw	-18
 16575  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16576  012F22                     l9711:
 16577                           
 16578                           ;stkvar	_a @ sp[(-13)+-8]
 16579  012F22  0EEB               	movlw	-21
 16580  012F24  50E3               	movf	plusw1,w,c
 16581  012F26  E139               	bnz	l9723
 16582  012F28  0EEC               	movlw	-20
 16583  012F2A  50E3               	movf	plusw1,w,c
 16584  012F2C  E136               	bnz	l9723
 16585  012F2E  0EED               	movlw	-19
 16586  012F30  50E3               	movf	plusw1,w,c
 16587  012F32  E133               	bnz	l9723
 16588  012F34  0EEE               	movlw	-18
 16589  012F36  50E3               	movf	plusw1,w,c
 16590  012F38  A4D8               	btfss	status,2,c
 16591  012F3A  D02F               	goto	l9723
 16592                           
 16593                           ;stkvar	_b @ sp[(-13)+-4]
 16594  012F3C  0EEF               	movlw	-17
 16595  012F3E  6AE3               	clrf	plusw1,c
 16596  012F40  0EF0               	movlw	-16
 16597  012F42  6AE3               	clrf	plusw1,c
 16598  012F44  0EF1               	movlw	-15
 16599  012F46  6AE3               	clrf	plusw1,c
 16600  012F48  0EF2               	movlw	-14
 16601  012F4A  6AE3               	clrf	plusw1,c
 16602                           
 16603                           ;stkvar	_b @ sp[(-13)+-4]
 16604  012F4C  0EF1               	movlw	241
 16605  012F4E  24E1               	addwf	fsr1l,w,c
 16606  012F50  6ED9               	movwf	fsr2l,c
 16607  012F52  0EFF               	movlw	255
 16608  012F54  20E2               	addwfc	fsr1h,w,c
 16609  012F56  6EDA               	movwf	fsr2h,c
 16610  012F58  0E80               	movlw	128
 16611  012F5A  12DE               	iorwf	postinc2,f,c
 16612  012F5C  0E7F               	movlw	127
 16613  012F5E  12DD               	iorwf	postdec2,f,c
 16614  012F60                     l9717:
 16615                           
 16616                           ;stkvar	_sign @ sp[(-13)+12]
 16617  012F60  0EFF               	movlw	-1
 16618  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 16619                           
 16620                           ;stkvar	_b @ sp[(-13)+-4]
 16621  012F68  0EF2               	movlw	242
 16622  012F6A  24E1               	addwf	fsr1l,w,c
 16623  012F6C  6ED9               	movwf	fsr2l,c
 16624  012F6E  0EFF               	movlw	255
 16625  012F70  20E2               	addwfc	fsr1h,w,c
 16626  012F72  6EDA               	movwf	fsr2h,c
 16627  012F74  503D               	movf	(btemp+11)^0,w,c
 16628  012F76  12DF               	iorwf	indf2,f,c
 16629                           
 16630                           ;stkvar	_b @ sp[(-13)+-4]
 16631  012F78  0EEF               	movlw	-17
 16632  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 16633  012F80  0EF0               	movlw	-16
 16634  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 16635  012F88  0EF1               	movlw	-15
 16636  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 16637  012F90  0EF2               	movlw	-14
 16638  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 16639  012F98  D19F               	goto	l2624
 16640  012F9A                     l9723:
 16641                           
 16642                           ;stkvar	_bexp @ sp[(-13)+11]
 16643  012F9A  0EFE               	movlw	-2
 16644  012F9C  50E3               	movf	plusw1,w,c
 16645  012F9E  A4D8               	btfss	status,2,c
 16646  012FA0  D009               	goto	l9731
 16647  012FA2  0E00               	movlw	0
 16648  012FA4  6E32               	movwf	btemp^0,c
 16649  012FA6  0E00               	movlw	0
 16650  012FA8  6E33               	movwf	(btemp+1)^0,c
 16651  012FAA  0E00               	movlw	0
 16652  012FAC  6E34               	movwf	(btemp+2)^0,c
 16653  012FAE  0E00               	movlw	0
 16654  012FB0  6E35               	movwf	(btemp+3)^0,c
 16655  012FB2  D192               	goto	l2624
 16656  012FB4                     l9731:
 16657                           
 16658                           ;stkvar	_bexp @ sp[(-13)+11]
 16659  012FB4  0EFE               	movlw	-2
 16660  012FB6  50E3               	movf	plusw1,w,c
 16661  012FB8  6E3C               	movwf	(btemp+10)^0,c
 16662  012FBA  6A3D               	clrf	(btemp+11)^0,c
 16663                           
 16664                           ;stkvar	_aexp @ sp[(-13)+10]
 16665  012FBC  0EFD               	movlw	-3
 16666  012FBE  50E3               	movf	plusw1,w,c
 16667  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 16668  012FC2  0E00               	movlw	0
 16669  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 16670  012FC6  0E7F               	movlw	127
 16671  012FC8  263C               	addwf	(btemp+10)^0,f,c
 16672  012FCA  0E00               	movlw	0
 16673  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 16674                           
 16675                           ;stkvar	_new_exp @ sp[(-13)+8]
 16676  012FCE  0EFB               	movlw	-5
 16677  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16678  012FD6  0EFC               	movlw	-4
 16679  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16680                           
 16681                           ;stkvar	_b @ sp[(-13)+-4]
 16682  012FDE  0EEF               	movlw	-17
 16683  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16684  012FE6  0EF0               	movlw	-16
 16685  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16686  012FEE  0EF1               	movlw	-15
 16687  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16688  012FF6  0EF2               	movlw	-14
 16689  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16690                           
 16691                           ;stkvar	_rem @ sp[(-13)+4]
 16692  012FFE  0EF7               	movlw	-9
 16693  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16694  013006  0EF8               	movlw	-8
 16695  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16696  01300E  0EF9               	movlw	-7
 16697  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16698  013016  0EFA               	movlw	-6
 16699  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16700                           
 16701                           ;stkvar	_b @ sp[(-13)+-4]
 16702  01301E  0EEF               	movlw	-17
 16703  013020  6AE3               	clrf	plusw1,c
 16704  013022  0EF0               	movlw	-16
 16705  013024  6AE3               	clrf	plusw1,c
 16706  013026  0EF1               	movlw	-15
 16707  013028  6AE3               	clrf	plusw1,c
 16708  01302A  0EF2               	movlw	-14
 16709  01302C  6AE3               	clrf	plusw1,c
 16710                           
 16711                           ;stkvar	_grs @ sp[(-13)+0]
 16712  01302E  0EF3               	movlw	-13
 16713  013030  6AE3               	clrf	plusw1,c
 16714  013032  0EF4               	movlw	-12
 16715  013034  6AE3               	clrf	plusw1,c
 16716  013036  0EF5               	movlw	-11
 16717  013038  6AE3               	clrf	plusw1,c
 16718  01303A  0EF6               	movlw	-10
 16719  01303C  6AE3               	clrf	plusw1,c
 16720                           
 16721                           ;stkvar	_aexp @ sp[(-13)+10]
 16722  01303E  0EFD               	movlw	-3
 16723  013040  6AE3               	clrf	plusw1,c
 16724  013042  D050               	goto	l9759
 16725  013044                     l9741:
 16726                           
 16727                           ;stkvar	_aexp @ sp[(-13)+10]
 16728  013044  0EFD               	movlw	-3
 16729  013046  50E3               	movf	plusw1,w,c
 16730  013048  B4D8               	btfsc	status,2,c
 16731  01304A  D020               	goto	l9751
 16732                           
 16733                           ;stkvar	_rem @ sp[(-13)+4]
 16734  01304C  90D8               	bcf	status,0,c
 16735  01304E  0EF7               	movlw	-9
 16736  013050  36E3               	rlcf	plusw1,f,c
 16737  013052  0EF8               	movlw	-8
 16738  013054  36E3               	rlcf	plusw1,f,c
 16739  013056  0EF9               	movlw	-7
 16740  013058  36E3               	rlcf	plusw1,f,c
 16741  01305A  0EFA               	movlw	-6
 16742  01305C  36E3               	rlcf	plusw1,f,c
 16743                           
 16744                           ;stkvar	_b @ sp[(-13)+-4]
 16745  01305E  90D8               	bcf	status,0,c
 16746  013060  0EEF               	movlw	-17
 16747  013062  36E3               	rlcf	plusw1,f,c
 16748  013064  0EF0               	movlw	-16
 16749  013066  36E3               	rlcf	plusw1,f,c
 16750  013068  0EF1               	movlw	-15
 16751  01306A  36E3               	rlcf	plusw1,f,c
 16752  01306C  0EF2               	movlw	-14
 16753  01306E  36E3               	rlcf	plusw1,f,c
 16754                           
 16755                           ;stkvar	_grs @ sp[(-13)+0]
 16756  013070  0EF6               	movlw	-10
 16757  013072  AEE3               	btfss	plusw1,7,c
 16758  013074  D002               	goto	l9749
 16759                           
 16760                           ;stkvar	_b @ sp[(-13)+-4]
 16761  013076  0EEF               	movlw	-17
 16762  013078  80E3               	bsf	plusw1,0,c
 16763  01307A                     l9749:
 16764                           
 16765                           ;stkvar	_grs @ sp[(-13)+0]
 16766  01307A  90D8               	bcf	status,0,c
 16767  01307C  0EF3               	movlw	-13
 16768  01307E  36E3               	rlcf	plusw1,f,c
 16769  013080  0EF4               	movlw	-12
 16770  013082  36E3               	rlcf	plusw1,f,c
 16771  013084  0EF5               	movlw	-11
 16772  013086  36E3               	rlcf	plusw1,f,c
 16773  013088  0EF6               	movlw	-10
 16774  01308A  36E3               	rlcf	plusw1,f,c
 16775  01308C                     l9751:
 16776                           
 16777                           ;stkvar	_a @ sp[(-13)+-8]
 16778                           ;stkvar	_rem @ sp[(-13)+4]
 16779  01308C  50E1               	movf	fsr1l,w,c
 16780  01308E  0FF7               	addlw	-9
 16781  013090  6ED9               	movwf	fsr2l,c
 16782  013092  50E2               	movf	fsr1h,w,c
 16783  013094  6EDA               	movwf	fsr2h,c
 16784  013096  0EFF               	movlw	255
 16785  013098  22DA               	addwfc	fsr2h,f,c
 16786  01309A  0EEB               	movlw	-21
 16787  01309C  50E3               	movf	plusw1,w,c
 16788  01309E  5CDE               	subwf	postinc2,w,c
 16789  0130A0  0EEC               	movlw	-20
 16790  0130A2  50E3               	movf	plusw1,w,c
 16791  0130A4  58DE               	subwfb	postinc2,w,c
 16792  0130A6  0EED               	movlw	-19
 16793  0130A8  50E3               	movf	plusw1,w,c
 16794  0130AA  58DE               	subwfb	postinc2,w,c
 16795  0130AC  0EEE               	movlw	-18
 16796  0130AE  50E3               	movf	plusw1,w,c
 16797  0130B0  58DE               	subwfb	postinc2,w,c
 16798  0130B2  A0D8               	btfss	status,0,c
 16799  0130B4  D015               	goto	l9757
 16800                           
 16801                           ;stkvar	_grs @ sp[(-13)+0]
 16802  0130B6  0EF6               	movlw	-10
 16803  0130B8  8CE3               	bsf	plusw1,6,c
 16804                           
 16805                           ;stkvar	_a @ sp[(-13)+-8]
 16806                           ;stkvar	_rem @ sp[(-13)+4]
 16807  0130BA  50E1               	movf	fsr1l,w,c
 16808  0130BC  0FF7               	addlw	-9
 16809  0130BE  6ED9               	movwf	fsr2l,c
 16810  0130C0  50E2               	movf	fsr1h,w,c
 16811  0130C2  6EDA               	movwf	fsr2h,c
 16812  0130C4  0EFF               	movlw	255
 16813  0130C6  22DA               	addwfc	fsr2h,f,c
 16814  0130C8  0EEB               	movlw	-21
 16815  0130CA  50E3               	movf	plusw1,w,c
 16816  0130CC  5EDE               	subwf	postinc2,f,c
 16817  0130CE  0EEC               	movlw	-20
 16818  0130D0  50E3               	movf	plusw1,w,c
 16819  0130D2  5ADE               	subwfb	postinc2,f,c
 16820  0130D4  0EED               	movlw	-19
 16821  0130D6  50E3               	movf	plusw1,w,c
 16822  0130D8  5ADE               	subwfb	postinc2,f,c
 16823  0130DA  0EEE               	movlw	-18
 16824  0130DC  50E3               	movf	plusw1,w,c
 16825  0130DE  5ADE               	subwfb	postinc2,f,c
 16826  0130E0                     l9757:
 16827                           
 16828                           ;stkvar	_aexp @ sp[(-13)+10]
 16829  0130E0  0EFD               	movlw	-3
 16830  0130E2  2AE3               	incf	plusw1,f,c
 16831  0130E4                     l9759:
 16832                           
 16833                           ;stkvar	_aexp @ sp[(-13)+10]
 16834  0130E4  0EFD               	movlw	-3
 16835  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 16836  0130EC  0E19               	movlw	25
 16837  0130EE  6432               	cpfsgt	btemp^0,c
 16838  0130F0  D7A9               	goto	l9741
 16839                           
 16840                           ;stkvar	_rem @ sp[(-13)+4]
 16841  0130F2  0EF7               	movlw	-9
 16842  0130F4  50E3               	movf	plusw1,w,c
 16843  0130F6  E10A               	bnz	u9980
 16844  0130F8  0EF8               	movlw	-8
 16845  0130FA  50E3               	movf	plusw1,w,c
 16846  0130FC  E107               	bnz	u9980
 16847  0130FE  0EF9               	movlw	-7
 16848  013100  50E3               	movf	plusw1,w,c
 16849  013102  E104               	bnz	u9980
 16850  013104  0EFA               	movlw	-6
 16851  013106  50E3               	movf	plusw1,w,c
 16852  013108  B4D8               	btfsc	status,2,c
 16853  01310A  D024               	goto	l9775
 16854  01310C                     u9980:
 16855                           
 16856                           ;stkvar	_grs @ sp[(-13)+0]
 16857  01310C  0EF3               	movlw	-13
 16858  01310E  80E3               	bsf	plusw1,0,c
 16859  013110  D021               	goto	l9775
 16860  013112                     l9765:
 16861                           
 16862                           ;stkvar	_b @ sp[(-13)+-4]
 16863  013112  90D8               	bcf	status,0,c
 16864  013114  0EEF               	movlw	-17
 16865  013116  36E3               	rlcf	plusw1,f,c
 16866  013118  0EF0               	movlw	-16
 16867  01311A  36E3               	rlcf	plusw1,f,c
 16868  01311C  0EF1               	movlw	-15
 16869  01311E  36E3               	rlcf	plusw1,f,c
 16870  013120  0EF2               	movlw	-14
 16871  013122  36E3               	rlcf	plusw1,f,c
 16872                           
 16873                           ;stkvar	_grs @ sp[(-13)+0]
 16874  013124  0EF6               	movlw	-10
 16875  013126  AEE3               	btfss	plusw1,7,c
 16876  013128  D002               	goto	l9771
 16877                           
 16878                           ;stkvar	_b @ sp[(-13)+-4]
 16879  01312A  0EEF               	movlw	-17
 16880  01312C  80E3               	bsf	plusw1,0,c
 16881  01312E                     l9771:
 16882                           
 16883                           ;stkvar	_grs @ sp[(-13)+0]
 16884  01312E  90D8               	bcf	status,0,c
 16885  013130  0EF3               	movlw	-13
 16886  013132  36E3               	rlcf	plusw1,f,c
 16887  013134  0EF4               	movlw	-12
 16888  013136  36E3               	rlcf	plusw1,f,c
 16889  013138  0EF5               	movlw	-11
 16890  01313A  36E3               	rlcf	plusw1,f,c
 16891  01313C  0EF6               	movlw	-10
 16892  01313E  36E3               	rlcf	plusw1,f,c
 16893                           
 16894                           ;stkvar	_new_exp @ sp[(-13)+8]
 16895  013140  50E1               	movf	fsr1l,w,c
 16896  013142  0FFB               	addlw	-5
 16897  013144  6ED9               	movwf	fsr2l,c
 16898  013146  50E2               	movf	fsr1h,w,c
 16899  013148  6EDA               	movwf	fsr2h,c
 16900  01314A  0EFF               	movlw	255
 16901  01314C  22DA               	addwfc	fsr2h,f,c
 16902  01314E  06DE               	decf	postinc2,f,c
 16903  013150  0E00               	movlw	0
 16904  013152  5ADD               	subwfb	postdec2,f,c
 16905  013154                     l9775:
 16906                           
 16907                           ;stkvar	_b @ sp[(-13)+-4]
 16908  013154  0EF1               	movlw	-15
 16909  013156  AEE3               	btfss	plusw1,7,c
 16910  013158  D7DC               	goto	l9765
 16911                           
 16912                           ;stkvar	_aexp @ sp[(-13)+10]
 16913  01315A  0EFD               	movlw	-3
 16914  01315C  6AE3               	clrf	plusw1,c
 16915                           
 16916                           ;stkvar	_grs @ sp[(-13)+0]
 16917  01315E  0EF6               	movlw	-10
 16918  013160  AEE3               	btfss	plusw1,7,c
 16919  013162  D020               	goto	l9789
 16920                           
 16921                           ;stkvar	_grs @ sp[(-13)+0]
 16922  013164  50E1               	movf	fsr1l,w,c
 16923  013166  0FF3               	addlw	-13
 16924  013168  6ED9               	movwf	fsr2l,c
 16925  01316A  50E2               	movf	fsr1h,w,c
 16926  01316C  6EDA               	movwf	fsr2h,c
 16927  01316E  0EFF               	movlw	255
 16928  013170  22DA               	addwfc	fsr2h,f,c
 16929  013172  0EFF               	movlw	255
 16930  013174  14DE               	andwf	postinc2,w,c
 16931  013176  6E3A               	movwf	(btemp+8)^0,c
 16932  013178  0EFF               	movlw	255
 16933  01317A  14DE               	andwf	postinc2,w,c
 16934  01317C  6E3B               	movwf	(btemp+9)^0,c
 16935  01317E  0EFF               	movlw	255
 16936  013180  14DE               	andwf	postinc2,w,c
 16937  013182  6E3C               	movwf	(btemp+10)^0,c
 16938  013184  0E7F               	movlw	127
 16939  013186  14DE               	andwf	postinc2,w,c
 16940  013188  6E3D               	movwf	(btemp+11)^0,c
 16941  01318A  503A               	movf	(btemp+8)^0,w,c
 16942  01318C  103B               	iorwf	(btemp+9)^0,w,c
 16943  01318E  103C               	iorwf	(btemp+10)^0,w,c
 16944  013190  103D               	iorwf	(btemp+11)^0,w,c
 16945  013192  B4D8               	btfsc	status,2,c
 16946  013194  D004               	goto	l9785
 16947  013196                     u10020:
 16948                           
 16949                           ;stkvar	_aexp @ sp[(-13)+10]
 16950  013196  0EFD               	movlw	-3
 16951  013198  6AE3               	clrf	plusw1,c
 16952  01319A  2AE3               	incf	plusw1,f,c
 16953  01319C  D003               	goto	l9789
 16954  01319E                     l9785:
 16955                           
 16956                           ;stkvar	_b @ sp[(-13)+-4]
 16957  01319E  0EEF               	movlw	-17
 16958  0131A0  B0E3               	btfsc	plusw1,0,c
 16959  0131A2  D7F9               	goto	u10020
 16960  0131A4                     l9789:
 16961                           
 16962                           ;stkvar	_aexp @ sp[(-13)+10]
 16963  0131A4  0EFD               	movlw	-3
 16964  0131A6  50E3               	movf	plusw1,w,c
 16965  0131A8  B4D8               	btfsc	status,2,c
 16966  0131AA  D036               	goto	l9799
 16967                           
 16968                           ;stkvar	_b @ sp[(-13)+-4]
 16969  0131AC  50E1               	movf	fsr1l,w,c
 16970  0131AE  0FEF               	addlw	-17
 16971  0131B0  6ED9               	movwf	fsr2l,c
 16972  0131B2  50E2               	movf	fsr1h,w,c
 16973  0131B4  6EDA               	movwf	fsr2h,c
 16974  0131B6  0EFF               	movlw	255
 16975  0131B8  22DA               	addwfc	fsr2h,f,c
 16976  0131BA  2ADE               	incf	postinc2,f,c
 16977  0131BC  0E00               	movlw	0
 16978  0131BE  22DE               	addwfc	postinc2,f,c
 16979  0131C0  22DE               	addwfc	postinc2,f,c
 16980  0131C2  22DE               	addwfc	postinc2,f,c
 16981                           
 16982                           ;stkvar	_b @ sp[(-13)+-4]
 16983  0131C4  0EF2               	movlw	-14
 16984  0131C6  A0E3               	btfss	plusw1,0,c
 16985  0131C8  D027               	goto	l9799
 16986  0131CA  0E01               	movlw	1
 16987  0131CC  6E3D               	movwf	(btemp+11)^0,c
 16988                           
 16989                           ;stkvar	_b @ sp[(-13)+-4]
 16990  0131CE  50E1               	movf	fsr1l,w,c
 16991  0131D0  0FEF               	addlw	-17
 16992  0131D2  6ED9               	movwf	fsr2l,c
 16993  0131D4  50E2               	movf	fsr1h,w,c
 16994  0131D6  6EDA               	movwf	fsr2h,c
 16995  0131D8  0EFF               	movlw	255
 16996  0131DA  22DA               	addwfc	fsr2h,f,c
 16997  0131DC  283D               	incf	(btemp+11)^0,w,c
 16998  0131DE  52DE               	movf	postinc2,f,c
 16999  0131E0  D008               	goto	u10060
 17000  0131E2                     u10065:
 17001  0131E2  52DE               	movf	postinc2,f,c
 17002  0131E4  90D8               	bcf	status,0,c
 17003  0131E6  BEDC               	btfsc	preinc2,7,c
 17004  0131E8  80D8               	bsf	status,0,c
 17005  0131EA  32DD               	rrcf	postdec2,f,c
 17006  0131EC  32DD               	rrcf	postdec2,f,c
 17007  0131EE  32DD               	rrcf	postdec2,f,c
 17008  0131F0  32DE               	rrcf	postinc2,f,c
 17009  0131F2                     u10060:
 17010  0131F2  2EE8               	decfsz	wreg,f,c
 17011  0131F4  D7F6               	goto	u10065
 17012                           
 17013                           ;stkvar	_new_exp @ sp[(-13)+8]
 17014  0131F6  0EFB               	movlw	-5
 17015  0131F8  50E3               	movf	plusw1,w,c
 17016  0131FA  0F01               	addlw	1
 17017  0131FC  6E32               	movwf	btemp^0,c
 17018  0131FE  0EFB               	movlw	-5
 17019  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 17020  013206  6A32               	clrf	btemp^0,c
 17021  013208  0EFC               	movlw	-4
 17022  01320A  50E3               	movf	plusw1,w,c
 17023  01320C  2032               	addwfc	btemp^0,w,c
 17024  01320E  6E32               	movwf	btemp^0,c
 17025  013210  0EFC               	movlw	-4
 17026  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 17027  013218                     l9799:
 17028                           
 17029                           ;stkvar	_new_exp @ sp[(-13)+8]
 17030  013218  0EFC               	movlw	-4
 17031  01321A  BEE3               	btfsc	plusw1,7,c
 17032  01321C  D01B               	goto	l9805
 17033  01321E  0EFC               	movlw	-4
 17034  013220  50E3               	movf	plusw1,w,c
 17035  013222  E104               	bnz	u10070
 17036  013224  0EFB               	movlw	-5
 17037  013226  28E3               	incf	plusw1,w,c
 17038  013228  A0D8               	btfss	status,0,c
 17039  01322A  D014               	goto	l9805
 17040  01322C                     u10070:
 17041  01322C  0EFF               	movlw	255
 17042  01322E  6E3C               	movwf	(btemp+10)^0,c
 17043  013230  0E00               	movlw	0
 17044  013232  6E3D               	movwf	(btemp+11)^0,c
 17045                           
 17046                           ;stkvar	_new_exp @ sp[(-13)+8]
 17047  013234  0EFB               	movlw	-5
 17048  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17049  01323C  0EFC               	movlw	-4
 17050  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17051                           
 17052                           ;stkvar	_b @ sp[(-13)+-4]
 17053  013244  0EEF               	movlw	-17
 17054  013246  6AE3               	clrf	plusw1,c
 17055  013248  0EF0               	movlw	-16
 17056  01324A  6AE3               	clrf	plusw1,c
 17057  01324C  0EF1               	movlw	-15
 17058  01324E  6AE3               	clrf	plusw1,c
 17059  013250  0EF2               	movlw	-14
 17060  013252  6AE3               	clrf	plusw1,c
 17061  013254                     l9805:
 17062                           
 17063                           ;stkvar	_new_exp @ sp[(-13)+8]
 17064  013254  0EFC               	movlw	-4
 17065  013256  BEE3               	btfsc	plusw1,7,c
 17066  013258  D007               	goto	u10080
 17067  01325A  0EFC               	movlw	-4
 17068  01325C  50E3               	movf	plusw1,w,c
 17069  01325E  E112               	bnz	l9811
 17070  013260  0EFB               	movlw	-5
 17071  013262  04E3               	decf	plusw1,w,c
 17072  013264  B0D8               	btfsc	status,0,c
 17073  013266  D00E               	goto	l9811
 17074  013268                     u10080:
 17075                           
 17076                           ;stkvar	_new_exp @ sp[(-13)+8]
 17077  013268  0EFB               	movlw	-5
 17078  01326A  6AE3               	clrf	plusw1,c
 17079  01326C  0EFC               	movlw	-4
 17080  01326E  6AE3               	clrf	plusw1,c
 17081                           
 17082                           ;stkvar	_b @ sp[(-13)+-4]
 17083  013270  0EEF               	movlw	-17
 17084  013272  6AE3               	clrf	plusw1,c
 17085  013274  0EF0               	movlw	-16
 17086  013276  6AE3               	clrf	plusw1,c
 17087  013278  0EF1               	movlw	-15
 17088  01327A  6AE3               	clrf	plusw1,c
 17089  01327C  0EF2               	movlw	-14
 17090  01327E  6AE3               	clrf	plusw1,c
 17091                           
 17092                           ;stkvar	_sign @ sp[(-13)+12]
 17093  013280  0EFF               	movlw	-1
 17094  013282  6AE3               	clrf	plusw1,c
 17095  013284                     l9811:
 17096                           
 17097                           ;stkvar	_new_exp @ sp[(-13)+8]
 17098                           ;stkvar	_bexp @ sp[(-13)+11]
 17099  013284  0EFB               	movlw	-5
 17100  013286  006F FF8C  F032    	movff	plusw1,btemp
 17101  01328C  0EFE               	movlw	-2
 17102  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17103                           
 17104                           ;stkvar	_bexp @ sp[(-13)+11]
 17105  013294  0EFE               	movlw	-2
 17106  013296  A0E3               	btfss	plusw1,0,c
 17107  013298  D009               	goto	l9817
 17108                           
 17109                           ;stkvar	_b @ sp[(-13)+-4]
 17110  01329A  0EF1               	movlw	241
 17111  01329C  24E1               	addwf	fsr1l,w,c
 17112  01329E  6ED9               	movwf	fsr2l,c
 17113  0132A0  0EFF               	movlw	255
 17114  0132A2  20E2               	addwfc	fsr1h,w,c
 17115  0132A4  6EDA               	movwf	fsr2h,c
 17116  0132A6  0E00               	movlw	0
 17117  0132A8  8EDB               	bsf	plusw2,7,c
 17118  0132AA  D008               	goto	l9819
 17119  0132AC                     l9817:
 17120                           
 17121                           ;stkvar	_b @ sp[(-13)+-4]
 17122  0132AC  0EF1               	movlw	241
 17123  0132AE  24E1               	addwf	fsr1l,w,c
 17124  0132B0  6ED9               	movwf	fsr2l,c
 17125  0132B2  0EFF               	movlw	255
 17126  0132B4  20E2               	addwfc	fsr1h,w,c
 17127  0132B6  6EDA               	movwf	fsr2h,c
 17128  0132B8  0E7F               	movlw	127
 17129  0132BA  16DF               	andwf	indf2,f,c
 17130  0132BC                     l9819:
 17131                           
 17132                           ;stkvar	_b @ sp[(-13)+-4]
 17133  0132BC  0EF2               	movlw	242
 17134  0132BE  24E1               	addwf	fsr1l,w,c
 17135  0132C0  6ED9               	movwf	fsr2l,c
 17136  0132C2  0EFF               	movlw	255
 17137  0132C4  20E2               	addwfc	fsr1h,w,c
 17138  0132C6  6EDA               	movwf	fsr2h,c
 17139                           
 17140                           ;stkvar	_bexp @ sp[(-13)+11]
 17141  0132C8  0EFE               	movlw	-2
 17142  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17143  0132D0  90D8               	bcf	status,0,c
 17144  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 17145  0132D4  6EDF               	movwf	indf2,c
 17146  0132D6  D644               	goto	l9717
 17147  0132D8                     l2624:
 17148                           
 17149                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17150  0132D8  0EEB               	movlw	235
 17151  0132DA  26E1               	addwf	fsr1l,f,c
 17152  0132DC  0EFF               	movlw	255
 17153  0132DE  22E2               	addwfc	fsr1h,f,c
 17154  0132E0  0012               	return		;funcret
 17155  0132E2                     __end_of___fldiv:
 17156                           	opt callstack 0
 17157                           
 17158 ;; *************** function ___awmod *****************
 17159 ;; Defined at:
 17160 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;  dividend        2  [STACK] int 
 17163 ;;  divisor         2  [STACK] int 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;  sign            1  [STACK] unsigned char 
 17166 ;;  counter         1  [STACK] unsigned char 
 17167 ;; Return value:  Size  Location     Type
 17168 ;;                  2  [STACK] int 
 17169 ;; Registers used:
 17170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17171 ;; Tracked objects:
 17172 ;;		On entry : 0/5
 17173 ;;		On exit  : 0/0
 17174 ;;		Unchanged: 0/0
 17175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17180 ;;Total ram usage:        0 bytes
 17181 ;; Hardware stack levels used:    1
 17182 ;; Hardware stack levels required when called:    6
 17183 ;; This function calls:
 17184 ;;		Nothing
 17185 ;; This function is called by:
 17186 ;;		_efgtoa
 17187 ;; This function uses a reentrant model
 17188 ;;
 17189                           
 17190                           	psect	text59
 17191  01650A                     __ptext59:
 17192                           	opt callstack 0
 17193  01650A                     ___awmod:
 17194                           	opt callstack 0
 17195                           
 17196                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17197  01650A  52E6               	movf	postinc1,f,c
 17198  01650C  52E6               	movf	postinc1,f,c
 17199                           
 17200                           ;stkvar	_sign @ sp[(-2)+0]
 17201                           
 17202                           ;incstack = 0
 17203  01650E  0EFE               	movlw	-2
 17204  016510  6AE3               	clrf	plusw1,c
 17205                           
 17206                           ;stkvar	_dividend @ sp[(-2)+-2]
 17207  016512  0EFD               	movlw	-3
 17208  016514  AEE3               	btfss	plusw1,7,c
 17209  016516  D009               	goto	l10043
 17210                           
 17211                           ;stkvar	_dividend @ sp[(-2)+-2]
 17212                           ;stkvar	_dividend @ sp[(-2)+-2]
 17213  016518  0EFC               	movlw	-4
 17214  01651A  6CE3               	negf	plusw1,c
 17215  01651C  0EFD               	movlw	-3
 17216  01651E  1EE3               	comf	plusw1,f,c
 17217  016520  B0D8               	btfsc	status,0,c
 17218  016522  2AE3               	incf	plusw1,f,c
 17219                           
 17220                           ;stkvar	_sign @ sp[(-2)+0]
 17221  016524  0EFE               	movlw	-2
 17222  016526  6AE3               	clrf	plusw1,c
 17223  016528  2AE3               	incf	plusw1,f,c
 17224  01652A                     l10043:
 17225                           
 17226                           ;stkvar	_divisor @ sp[(-2)+-4]
 17227  01652A  0EFB               	movlw	-5
 17228  01652C  AEE3               	btfss	plusw1,7,c
 17229  01652E  D006               	goto	l10047
 17230                           
 17231                           ;stkvar	_divisor @ sp[(-2)+-4]
 17232                           ;stkvar	_divisor @ sp[(-2)+-4]
 17233  016530  0EFA               	movlw	-6
 17234  016532  6CE3               	negf	plusw1,c
 17235  016534  0EFB               	movlw	-5
 17236  016536  1EE3               	comf	plusw1,f,c
 17237  016538  B0D8               	btfsc	status,0,c
 17238  01653A  2AE3               	incf	plusw1,f,c
 17239  01653C                     l10047:
 17240                           
 17241                           ;stkvar	_divisor @ sp[(-2)+-4]
 17242  01653C  0EFA               	movlw	-6
 17243  01653E  006F FF8C  F032    	movff	plusw1,btemp
 17244  016544  0EFB               	movlw	-5
 17245  016546  50E3               	movf	plusw1,w,c
 17246  016548  1032               	iorwf	btemp^0,w,c
 17247  01654A  B4D8               	btfsc	status,2,c
 17248  01654C  D053               	goto	u10440
 17249                           
 17250                           ;stkvar	_counter @ sp[(-2)+1]
 17251  01654E  0EFF               	movlw	-1
 17252  016550  6AE3               	clrf	plusw1,c
 17253  016552  D012               	goto	L14
 17254  016554                     l10051:
 17255                           
 17256                           ;stkvar	_divisor @ sp[(-2)+-4]
 17257  016554  0EFA               	movlw	-6
 17258  016556  50E3               	movf	plusw1,w,c
 17259  016558  90D8               	bcf	status,0,c
 17260  01655A  34E8               	rlcf	wreg,w,c
 17261  01655C  6E32               	movwf	btemp^0,c
 17262  01655E  0EFA               	movlw	-6
 17263  016560  0060  F0CB  FFE3   	movff	btemp,plusw1
 17264  016566  0EFB               	movlw	-5
 17265  016568  50E3               	movf	plusw1,w,c
 17266  01656A  34E8               	rlcf	wreg,w,c
 17267  01656C  6E32               	movwf	btemp^0,c
 17268  01656E  0EFB               	movlw	-5
 17269  016570  0060  F0CB  FFE3   	movff	btemp,plusw1
 17270                           
 17271                           ;stkvar	_counter @ sp[(-2)+1]
 17272  016576  0EFF               	movlw	-1
 17273  016578                     L14:
 17274  016578  2AE3               	incf	plusw1,f,c
 17275                           
 17276                           ;stkvar	_divisor @ sp[(-2)+-4]
 17277  01657A  0EFB               	movlw	-5
 17278  01657C  AEE3               	btfss	plusw1,7,c
 17279  01657E  D7EA               	goto	l10051
 17280  016580                     u10420:
 17281                           
 17282                           ;stkvar	_divisor @ sp[(-2)+-4]
 17283  016580  0EFA               	movlw	-6
 17284  016582  006F FF8C  F03C    	movff	plusw1,btemp+10
 17285  016588  0EFB               	movlw	-5
 17286  01658A  006F FF8C  F03D    	movff	plusw1,btemp+11
 17287                           
 17288                           ;stkvar	_dividend @ sp[(-2)+-2]
 17289  016590  0EFC               	movlw	-4
 17290  016592  006F FF8C  F03A    	movff	plusw1,btemp+8
 17291  016598  0EFD               	movlw	-3
 17292  01659A  006F FF8C  F03B    	movff	plusw1,btemp+9
 17293  0165A0  503C               	movf	(btemp+10)^0,w,c
 17294  0165A2  5C3A               	subwf	(btemp+8)^0,w,c
 17295  0165A4  503D               	movf	(btemp+11)^0,w,c
 17296  0165A6  583B               	subwfb	(btemp+9)^0,w,c
 17297  0165A8  A0D8               	btfss	status,0,c
 17298  0165AA  D014               	goto	l10061
 17299                           
 17300                           ;stkvar	_divisor @ sp[(-2)+-4]
 17301                           ;stkvar	_dividend @ sp[(-2)+-2]
 17302  0165AC  0EFC               	movlw	-4
 17303  0165AE  50E3               	movf	plusw1,w,c
 17304  0165B0  6E32               	movwf	btemp^0,c
 17305  0165B2  0EFA               	movlw	-6
 17306  0165B4  50E3               	movf	plusw1,w,c
 17307  0165B6  5E32               	subwf	btemp^0,f,c
 17308  0165B8  0EFC               	movlw	-4
 17309  0165BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17310  0165C0  0EFD               	movlw	-3
 17311  0165C2  50E3               	movf	plusw1,w,c
 17312  0165C4  6E32               	movwf	btemp^0,c
 17313  0165C6  0EFB               	movlw	-5
 17314  0165C8  50E3               	movf	plusw1,w,c
 17315  0165CA  5A32               	subwfb	btemp^0,f,c
 17316  0165CC  0EFD               	movlw	-3
 17317  0165CE  0060  F0CB  FFE3   	movff	btemp,plusw1
 17318  0165D4                     l10061:
 17319                           
 17320                           ;stkvar	_divisor @ sp[(-2)+-4]
 17321  0165D4  90D8               	bcf	status,0,c
 17322  0165D6  0EFB               	movlw	-5
 17323  0165D8  32E3               	rrcf	plusw1,f,c
 17324  0165DA  0EFA               	movlw	-6
 17325  0165DC  32E3               	rrcf	plusw1,f,c
 17326                           
 17327                           ;stkvar	_counter @ sp[(-2)+1]
 17328  0165DE  0EFF               	movlw	-1
 17329  0165E0  50E3               	movf	plusw1,w,c
 17330  0165E2  6E32               	movwf	btemp^0,c
 17331  0165E4  0E01               	movlw	1
 17332  0165E6  5E32               	subwf	btemp^0,f,c
 17333  0165E8  0EFF               	movlw	-1
 17334  0165EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17335  0165F0  A4D8               	btfss	status,2,c
 17336  0165F2  D7C6               	goto	u10420
 17337  0165F4                     u10440:
 17338                           
 17339                           ;stkvar	_sign @ sp[(-2)+0]
 17340  0165F4  0EFE               	movlw	-2
 17341  0165F6  50E3               	movf	plusw1,w,c
 17342  0165F8  B4D8               	btfsc	status,2,c
 17343  0165FA  D006               	goto	l10069
 17344                           
 17345                           ;stkvar	_dividend @ sp[(-2)+-2]
 17346                           ;stkvar	_dividend @ sp[(-2)+-2]
 17347  0165FC  0EFC               	movlw	-4
 17348  0165FE  6CE3               	negf	plusw1,c
 17349  016600  0EFD               	movlw	-3
 17350  016602  1EE3               	comf	plusw1,f,c
 17351  016604  B0D8               	btfsc	status,0,c
 17352  016606  2AE3               	incf	plusw1,f,c
 17353  016608                     l10069:
 17354                           
 17355                           ;stkvar	_dividend @ sp[(-2)+-2]
 17356  016608  0EFC               	movlw	-4
 17357  01660A  006F FF8C  F032    	movff	plusw1,btemp
 17358  016610  0EFD               	movlw	-3
 17359  016612  006F FF8C  F033    	movff	plusw1,btemp+1
 17360                           
 17361                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17362  016618  0EFA               	movlw	250
 17363  01661A  26E1               	addwf	fsr1l,f,c
 17364  01661C  0EFF               	movlw	255
 17365  01661E  22E2               	addwfc	fsr1h,f,c
 17366  016620  0012               	return		;funcret
 17367  016622                     __end_of___awmod:
 17368                           	opt callstack 0
 17369                           
 17370 ;; *************** function ___awdiv *****************
 17371 ;; Defined at:
 17372 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17373 ;; Parameters:    Size  Location     Type
 17374 ;;  dividend        2  [STACK] int 
 17375 ;;  divisor         2  [STACK] int 
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;  quotient        2  [STACK] int 
 17378 ;;  sign            1  [STACK] unsigned char 
 17379 ;;  counter         1  [STACK] unsigned char 
 17380 ;; Return value:  Size  Location     Type
 17381 ;;                  2  [STACK] int 
 17382 ;; Registers used:
 17383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17384 ;; Tracked objects:
 17385 ;;		On entry : 0/5
 17386 ;;		On exit  : 0/0
 17387 ;;		Unchanged: 0/0
 17388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17393 ;;Total ram usage:        0 bytes
 17394 ;; Hardware stack levels used:    1
 17395 ;; Hardware stack levels required when called:    6
 17396 ;; This function calls:
 17397 ;;		Nothing
 17398 ;; This function is called by:
 17399 ;;		_efgtoa
 17400 ;; This function uses a reentrant model
 17401 ;;
 17402                           
 17403                           	psect	text60
 17404  016022                     __ptext60:
 17405                           	opt callstack 0
 17406  016022                     ___awdiv:
 17407                           	opt callstack 0
 17408                           
 17409                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17410  016022  52E6               	movf	postinc1,f,c
 17411  016024  52E6               	movf	postinc1,f,c
 17412  016026  52E6               	movf	postinc1,f,c
 17413  016028  52E6               	movf	postinc1,f,c
 17414                           
 17415                           ;stkvar	_sign @ sp[(-4)+2]
 17416                           
 17417                           ;incstack = 0
 17418  01602A  0EFE               	movlw	-2
 17419  01602C  6AE3               	clrf	plusw1,c
 17420                           
 17421                           ;stkvar	_divisor @ sp[(-4)+-4]
 17422  01602E  0EF9               	movlw	-7
 17423  016030  AEE3               	btfss	plusw1,7,c
 17424  016032  D009               	goto	l9997
 17425                           
 17426                           ;stkvar	_divisor @ sp[(-4)+-4]
 17427                           ;stkvar	_divisor @ sp[(-4)+-4]
 17428  016034  0EF8               	movlw	-8
 17429  016036  6CE3               	negf	plusw1,c
 17430  016038  0EF9               	movlw	-7
 17431  01603A  1EE3               	comf	plusw1,f,c
 17432  01603C  B0D8               	btfsc	status,0,c
 17433  01603E  2AE3               	incf	plusw1,f,c
 17434                           
 17435                           ;stkvar	_sign @ sp[(-4)+2]
 17436  016040  0EFE               	movlw	-2
 17437  016042  6AE3               	clrf	plusw1,c
 17438  016044  2AE3               	incf	plusw1,f,c
 17439  016046                     l9997:
 17440                           
 17441                           ;stkvar	_dividend @ sp[(-4)+-2]
 17442  016046  0EFB               	movlw	-5
 17443  016048  AEE3               	btfss	plusw1,7,c
 17444  01604A  D008               	goto	l10003
 17445                           
 17446                           ;stkvar	_dividend @ sp[(-4)+-2]
 17447                           ;stkvar	_dividend @ sp[(-4)+-2]
 17448  01604C  0EFA               	movlw	-6
 17449  01604E  6CE3               	negf	plusw1,c
 17450  016050  0EFB               	movlw	-5
 17451  016052  1EE3               	comf	plusw1,f,c
 17452  016054  B0D8               	btfsc	status,0,c
 17453  016056  2AE3               	incf	plusw1,f,c
 17454                           
 17455                           ;stkvar	_sign @ sp[(-4)+2]
 17456  016058  0EFE               	movlw	-2
 17457  01605A  70E3               	btg	plusw1,0,c
 17458  01605C                     l10003:
 17459                           
 17460                           ;stkvar	_quotient @ sp[(-4)+0]
 17461  01605C  0EFC               	movlw	-4
 17462  01605E  6AE3               	clrf	plusw1,c
 17463  016060  0EFD               	movlw	-3
 17464  016062  6AE3               	clrf	plusw1,c
 17465                           
 17466                           ;stkvar	_divisor @ sp[(-4)+-4]
 17467  016064  0EF8               	movlw	-8
 17468  016066  006F FF8C  F032    	movff	plusw1,btemp
 17469  01606C  0EF9               	movlw	-7
 17470  01606E  50E3               	movf	plusw1,w,c
 17471  016070  1032               	iorwf	btemp^0,w,c
 17472  016072  B4D8               	btfsc	status,2,c
 17473  016074  D066               	goto	u10370
 17474                           
 17475                           ;stkvar	_counter @ sp[(-4)+3]
 17476  016076  0EFF               	movlw	-1
 17477  016078  6AE3               	clrf	plusw1,c
 17478  01607A  D012               	goto	L15
 17479  01607C                     l10009:
 17480                           
 17481                           ;stkvar	_divisor @ sp[(-4)+-4]
 17482  01607C  0EF8               	movlw	-8
 17483  01607E  50E3               	movf	plusw1,w,c
 17484  016080  90D8               	bcf	status,0,c
 17485  016082  34E8               	rlcf	wreg,w,c
 17486  016084  6E32               	movwf	btemp^0,c
 17487  016086  0EF8               	movlw	-8
 17488  016088  0060  F0CB  FFE3   	movff	btemp,plusw1
 17489  01608E  0EF9               	movlw	-7
 17490  016090  50E3               	movf	plusw1,w,c
 17491  016092  34E8               	rlcf	wreg,w,c
 17492  016094  6E32               	movwf	btemp^0,c
 17493  016096  0EF9               	movlw	-7
 17494  016098  0060  F0CB  FFE3   	movff	btemp,plusw1
 17495                           
 17496                           ;stkvar	_counter @ sp[(-4)+3]
 17497  01609E  0EFF               	movlw	-1
 17498  0160A0                     L15:
 17499  0160A0  2AE3               	incf	plusw1,f,c
 17500                           
 17501                           ;stkvar	_divisor @ sp[(-4)+-4]
 17502  0160A2  0EF9               	movlw	-7
 17503  0160A4  AEE3               	btfss	plusw1,7,c
 17504  0160A6  D7EA               	goto	l10009
 17505  0160A8                     u10350:
 17506                           
 17507                           ;stkvar	_quotient @ sp[(-4)+0]
 17508  0160A8  0EFC               	movlw	-4
 17509  0160AA  50E3               	movf	plusw1,w,c
 17510  0160AC  90D8               	bcf	status,0,c
 17511  0160AE  34E8               	rlcf	wreg,w,c
 17512  0160B0  6E32               	movwf	btemp^0,c
 17513  0160B2  0EFC               	movlw	-4
 17514  0160B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17515  0160BA  0EFD               	movlw	-3
 17516  0160BC  50E3               	movf	plusw1,w,c
 17517  0160BE  34E8               	rlcf	wreg,w,c
 17518  0160C0  6E32               	movwf	btemp^0,c
 17519  0160C2  0EFD               	movlw	-3
 17520  0160C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 17521                           
 17522                           ;stkvar	_divisor @ sp[(-4)+-4]
 17523  0160CA  0EF8               	movlw	-8
 17524  0160CC  006F FF8C  F03C    	movff	plusw1,btemp+10
 17525  0160D2  0EF9               	movlw	-7
 17526  0160D4  006F FF8C  F03D    	movff	plusw1,btemp+11
 17527                           
 17528                           ;stkvar	_dividend @ sp[(-4)+-2]
 17529  0160DA  0EFA               	movlw	-6
 17530  0160DC  006F FF8C  F03A    	movff	plusw1,btemp+8
 17531  0160E2  0EFB               	movlw	-5
 17532  0160E4  006F FF8C  F03B    	movff	plusw1,btemp+9
 17533  0160EA  503C               	movf	(btemp+10)^0,w,c
 17534  0160EC  5C3A               	subwf	(btemp+8)^0,w,c
 17535  0160EE  503D               	movf	(btemp+11)^0,w,c
 17536  0160F0  583B               	subwfb	(btemp+9)^0,w,c
 17537  0160F2  A0D8               	btfss	status,0,c
 17538  0160F4  D016               	goto	l10023
 17539                           
 17540                           ;stkvar	_divisor @ sp[(-4)+-4]
 17541                           ;stkvar	_dividend @ sp[(-4)+-2]
 17542  0160F6  0EFA               	movlw	-6
 17543  0160F8  50E3               	movf	plusw1,w,c
 17544  0160FA  6E32               	movwf	btemp^0,c
 17545  0160FC  0EF8               	movlw	-8
 17546  0160FE  50E3               	movf	plusw1,w,c
 17547  016100  5E32               	subwf	btemp^0,f,c
 17548  016102  0EFA               	movlw	-6
 17549  016104  0060  F0CB  FFE3   	movff	btemp,plusw1
 17550  01610A  0EFB               	movlw	-5
 17551  01610C  50E3               	movf	plusw1,w,c
 17552  01610E  6E32               	movwf	btemp^0,c
 17553  016110  0EF9               	movlw	-7
 17554  016112  50E3               	movf	plusw1,w,c
 17555  016114  5A32               	subwfb	btemp^0,f,c
 17556  016116  0EFB               	movlw	-5
 17557  016118  0060  F0CB  FFE3   	movff	btemp,plusw1
 17558                           
 17559                           ;stkvar	_quotient @ sp[(-4)+0]
 17560  01611E  0EFC               	movlw	-4
 17561  016120  80E3               	bsf	plusw1,0,c
 17562  016122                     l10023:
 17563                           
 17564                           ;stkvar	_divisor @ sp[(-4)+-4]
 17565  016122  90D8               	bcf	status,0,c
 17566  016124  0EF9               	movlw	-7
 17567  016126  32E3               	rrcf	plusw1,f,c
 17568  016128  0EF8               	movlw	-8
 17569  01612A  32E3               	rrcf	plusw1,f,c
 17570                           
 17571                           ;stkvar	_counter @ sp[(-4)+3]
 17572  01612C  0EFF               	movlw	-1
 17573  01612E  50E3               	movf	plusw1,w,c
 17574  016130  6E32               	movwf	btemp^0,c
 17575  016132  0E01               	movlw	1
 17576  016134  5E32               	subwf	btemp^0,f,c
 17577  016136  0EFF               	movlw	-1
 17578  016138  0060  F0CB  FFE3   	movff	btemp,plusw1
 17579  01613E  A4D8               	btfss	status,2,c
 17580  016140  D7B3               	goto	u10350
 17581  016142                     u10370:
 17582                           
 17583                           ;stkvar	_sign @ sp[(-4)+2]
 17584  016142  0EFE               	movlw	-2
 17585  016144  50E3               	movf	plusw1,w,c
 17586  016146  B4D8               	btfsc	status,2,c
 17587  016148  D006               	goto	l10031
 17588                           
 17589                           ;stkvar	_quotient @ sp[(-4)+0]
 17590                           ;stkvar	_quotient @ sp[(-4)+0]
 17591  01614A  0EFC               	movlw	-4
 17592  01614C  6CE3               	negf	plusw1,c
 17593  01614E  0EFD               	movlw	-3
 17594  016150  1EE3               	comf	plusw1,f,c
 17595  016152  B0D8               	btfsc	status,0,c
 17596  016154  2AE3               	incf	plusw1,f,c
 17597  016156                     l10031:
 17598                           
 17599                           ;stkvar	_quotient @ sp[(-4)+0]
 17600  016156  0EFC               	movlw	-4
 17601  016158  006F FF8C  F032    	movff	plusw1,btemp
 17602  01615E  0EFD               	movlw	-3
 17603  016160  006F FF8C  F033    	movff	plusw1,btemp+1
 17604                           
 17605                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17606  016166  0EF8               	movlw	248
 17607  016168  26E1               	addwf	fsr1l,f,c
 17608  01616A  0EFF               	movlw	255
 17609  01616C  22E2               	addwfc	fsr1h,f,c
 17610  01616E  0012               	return		;funcret
 17611  016170                     __end_of___awdiv:
 17612                           	opt callstack 0
 17613                           
 17614 ;; *************** function _dtoa *****************
 17615 ;; Defined at:
 17616 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17619 ;;		 -> f(6), NULL(0), 
 17620 ;;  d               8  [STACK] long long 
 17621 ;; Auto vars:     Size  Location     Type
 17622 ;;  n               8  [STACK] long long 
 17623 ;;  i               2  [STACK] int 
 17624 ;;  s               2  [STACK] int 
 17625 ;;  w               2  [STACK] int 
 17626 ;;  p               2  [STACK] int 
 17627 ;; Return value:  Size  Location     Type
 17628 ;;                  2  [STACK] int 
 17629 ;; Registers used:
 17630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17631 ;; Tracked objects:
 17632 ;;		On entry : 0/5
 17633 ;;		On exit  : 0/0
 17634 ;;		Unchanged: 0/0
 17635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17640 ;;Total ram usage:        0 bytes
 17641 ;; Hardware stack levels used:    1
 17642 ;; Hardware stack levels required when called:   11
 17643 ;; This function calls:
 17644 ;;		___aodiv
 17645 ;;		___aomod
 17646 ;;		_abs
 17647 ;;		_pad
 17648 ;; This function is called by:
 17649 ;;		_vfpfcnvrt
 17650 ;; This function uses a reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text61
 17654  01378C                     __ptext61:
 17655                           	opt callstack 0
 17656  01378C                     _dtoa:
 17657                           	opt callstack 0
 17658                           
 17659                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17660  01378C  0E12               	movlw	18
 17661  01378E  26E1               	addwf	fsr1l,f,c
 17662  013790  0E00               	movlw	0
 17663  013792  22E2               	addwfc	fsr1h,f,c
 17664                           
 17665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17666                           ;stkvar	_d @ sp[(-18)+-10]
 17667                           
 17668                           ;incstack = 0
 17669  013794  0EE4               	movlw	228
 17670  013796  24E1               	addwf	fsr1l,w,c
 17671  013798  6ED9               	movwf	fsr2l,c
 17672  01379A  0EFF               	movlw	255
 17673  01379C  20E2               	addwfc	fsr1h,w,c
 17674  01379E  6EDA               	movwf	fsr2h,c
 17675                           
 17676                           ;stkvar	_n @ sp[(-18)+2]
 17677  0137A0  0E08               	movlw	8
 17678  0137A2  6E32               	movwf	btemp^0,c
 17679  0137A4  0EF0               	movlw	-16
 17680  0137A6                     us1068999:
 17681  0137A6  006F FF7B FFE3     	movff	postinc2,plusw1
 17682  0137AC  28E8               	incf	wreg,w,c
 17683  0137AE  2E32               	decfsz	btemp^0,f,c
 17684  0137B0  D7FA               	bra	us1068999
 17685                           
 17686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17687                           ;stkvar	_n @ sp[(-18)+2]
 17688  0137B2  0EF7               	movlw	-9
 17689  0137B4  AEE3               	btfss	plusw1,7,c
 17690  0137B6  D002               	goto	u10690
 17691  0137B8  0E01               	movlw	1
 17692  0137BA  D001               	goto	u10700
 17693  0137BC                     u10690:
 17694  0137BC  0E00               	movlw	0
 17695  0137BE                     u10700:
 17696  0137BE  6E3C               	movwf	(btemp+10)^0,c
 17697  0137C0  6A3D               	clrf	(btemp+11)^0,c
 17698                           
 17699                           ;stkvar	_s @ sp[(-18)+12]
 17700  0137C2  0EFA               	movlw	-6
 17701  0137C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17702  0137CA  0EFB               	movlw	-5
 17703  0137CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17704                           
 17705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17706                           ;stkvar	_s @ sp[(-18)+12]
 17707  0137D2  0EFA               	movlw	-6
 17708  0137D4  006F FF8C  F032    	movff	plusw1,btemp
 17709  0137DA  0EFB               	movlw	-5
 17710  0137DC  50E3               	movf	plusw1,w,c
 17711  0137DE  1032               	iorwf	btemp^0,w,c
 17712  0137E0  B4D8               	btfsc	status,2,c
 17713  0137E2  D025               	goto	u10720
 17714                           
 17715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17716                           ;stkvar	_n @ sp[(-18)+2]
 17717                           ;stkvar	_n @ sp[(-18)+2]
 17718  0137E4  0EF0               	movlw	-16
 17719  0137E6  6CE3               	negf	plusw1,c
 17720  0137E8  0EF1               	movlw	-15
 17721  0137EA  1EE3               	comf	plusw1,f,c
 17722  0137EC  0EF2               	movlw	-14
 17723  0137EE  1EE3               	comf	plusw1,f,c
 17724  0137F0  0EF3               	movlw	-13
 17725  0137F2  1EE3               	comf	plusw1,f,c
 17726  0137F4  0EF4               	movlw	-12
 17727  0137F6  1EE3               	comf	plusw1,f,c
 17728  0137F8  0EF5               	movlw	-11
 17729  0137FA  1EE3               	comf	plusw1,f,c
 17730  0137FC  0EF6               	movlw	-10
 17731  0137FE  1EE3               	comf	plusw1,f,c
 17732  013800  0EF7               	movlw	-9
 17733  013802  1EE3               	comf	plusw1,f,c
 17734  013804  E314               	bnc	u10720
 17735  013806  0EF1               	movlw	-15
 17736  013808  2AE3               	incf	plusw1,f,c
 17737  01380A  E311               	bnc	u10720
 17738  01380C  0EF2               	movlw	-14
 17739  01380E  2AE3               	incf	plusw1,f,c
 17740  013810  E30E               	bnc	u10720
 17741  013812  0EF3               	movlw	-13
 17742  013814  2AE3               	incf	plusw1,f,c
 17743  013816  E30B               	bnc	u10720
 17744  013818  0EF4               	movlw	-12
 17745  01381A  2AE3               	incf	plusw1,f,c
 17746  01381C  E308               	bnc	u10720
 17747  01381E  0EF5               	movlw	-11
 17748  013820  2AE3               	incf	plusw1,f,c
 17749  013822  E305               	bnc	u10720
 17750  013824  0EF6               	movlw	-10
 17751  013826  2AE3               	incf	plusw1,f,c
 17752  013828  E302               	bnc	u10720
 17753  01382A  0EF7               	movlw	-9
 17754  01382C  2AE3               	incf	plusw1,f,c
 17755  01382E                     u10720:
 17756                           
 17757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17758  01382E  AE1E               	btfss	(_prec+1)^0,7,c
 17759                           
 17760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17761  013830  921F               	bcf	_flags^0,1,c
 17762                           
 17763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17764  013832  BE1E               	btfsc	(_prec+1)^0,7,c
 17765  013834  D005               	goto	u10740
 17766  013836  501E               	movf	(_prec+1)^0,w,c
 17767  013838  E110               	bnz	l10207
 17768  01383A  041D               	decf	_prec^0,w,c
 17769  01383C  B0D8               	btfsc	status,0,c
 17770  01383E  D00D               	goto	l10207
 17771  013840                     u10740:
 17772  013840  0E01               	movlw	1
 17773  013842  6E3C               	movwf	(btemp+10)^0,c
 17774  013844  0E00               	movlw	0
 17775  013846  6E3D               	movwf	(btemp+11)^0,c
 17776                           
 17777                           ;stkvar	_p @ sp[(-18)+16]
 17778  013848  0EFE               	movlw	-2
 17779  01384A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17780  013850  0EFF               	movlw	-1
 17781  013852  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17782  013858  D008               	goto	l1828
 17783  01385A                     l10207:
 17784                           
 17785                           ;stkvar	_p @ sp[(-18)+16]
 17786  01385A  0EFE               	movlw	-2
 17787  01385C  0060  F077  FFE3   	movff	_prec,plusw1
 17788  013862  0EFF               	movlw	-1
 17789  013864  0060  F07B  FFE3   	movff	_prec+1,plusw1
 17790  01386A                     l1828:
 17791                           
 17792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17793                           ;stkvar	_w @ sp[(-18)+14]
 17794  01386A  0EFC               	movlw	-4
 17795  01386C  0060  F06F  FFE3   	movff	_width,plusw1
 17796  013872  0EFD               	movlw	-3
 17797  013874  0060  F073  FFE3   	movff	_width+1,plusw1
 17798                           
 17799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17800                           ;stkvar	_s @ sp[(-18)+12]
 17801  01387A  0EFA               	movlw	-6
 17802  01387C  006F FF8C  F032    	movff	plusw1,btemp
 17803  013882  0EFB               	movlw	-5
 17804  013884  50E3               	movf	plusw1,w,c
 17805  013886  1032               	iorwf	btemp^0,w,c
 17806  013888  A4D8               	btfss	status,2,c
 17807  01388A  D002               	goto	u10760
 17808  01388C  A41F               	btfss	_flags^0,2,c
 17809  01388E  D00A               	goto	l10215
 17810  013890                     u10760:
 17811                           
 17812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17813                           ;stkvar	_w @ sp[(-18)+14]
 17814  013890  50E1               	movf	fsr1l,w,c
 17815  013892  0FFC               	addlw	-4
 17816  013894  6ED9               	movwf	fsr2l,c
 17817  013896  50E2               	movf	fsr1h,w,c
 17818  013898  6EDA               	movwf	fsr2h,c
 17819  01389A  0EFF               	movlw	255
 17820  01389C  22DA               	addwfc	fsr2h,f,c
 17821  01389E  06DE               	decf	postinc2,f,c
 17822  0138A0  0E00               	movlw	0
 17823  0138A2  5ADD               	subwfb	postdec2,f,c
 17824  0138A4                     l10215:
 17825                           
 17826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17827  0138A4  0E4F               	movlw	79
 17828  0138A6  6E3C               	movwf	(btemp+10)^0,c
 17829  0138A8  0E00               	movlw	0
 17830  0138AA  6E3D               	movwf	(btemp+11)^0,c
 17831                           
 17832                           ;stkvar	_i @ sp[(-18)+10]
 17833  0138AC  0EF8               	movlw	-8
 17834  0138AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17835  0138B4  0EF9               	movlw	-7
 17836  0138B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17837                           
 17838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17839  0138BC  0102               	movlb	2	; () banked
 17840  0138BE  6B8F               	clrf	(_dbuf+79)& (0+255),b
 17841                           
 17842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17843  0138C0  D109               	goto	l10229
 17844  0138C2                     l10219:
 17845                           
 17846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17847                           ;stkvar	_i @ sp[(-18)+10]
 17848  0138C2  50E1               	movf	fsr1l,w,c
 17849  0138C4  0FF8               	addlw	-8
 17850  0138C6  6ED9               	movwf	fsr2l,c
 17851  0138C8  50E2               	movf	fsr1h,w,c
 17852  0138CA  6EDA               	movwf	fsr2h,c
 17853  0138CC  0EFF               	movlw	255
 17854  0138CE  22DA               	addwfc	fsr2h,f,c
 17855  0138D0  06DE               	decf	postinc2,f,c
 17856  0138D2  0E00               	movlw	0
 17857  0138D4  5ADD               	subwfb	postdec2,f,c
 17858                           
 17859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17860  0138D6  0E0A               	movlw	10
 17861  0138D8  6EE6               	movwf	postinc1,c
 17862  0138DA  0E00               	movlw	0
 17863  0138DC  6EE6               	movwf	postinc1,c
 17864  0138DE  0E00               	movlw	0
 17865  0138E0  6EE6               	movwf	postinc1,c
 17866  0138E2  0E00               	movlw	0
 17867  0138E4  6EE6               	movwf	postinc1,c
 17868  0138E6  0E00               	movlw	0
 17869  0138E8  6EE6               	movwf	postinc1,c
 17870  0138EA  0E00               	movlw	0
 17871  0138EC  6EE6               	movwf	postinc1,c
 17872  0138EE  0E00               	movlw	0
 17873  0138F0  6EE6               	movwf	postinc1,c
 17874  0138F2  0E00               	movlw	0
 17875  0138F4  6EE6               	movwf	postinc1,c
 17876                           
 17877                           ;stkvar	_n @ sp[(-26)+2]
 17878  0138F6  50E1               	movf	fsr1l,w,c
 17879  0138F8  0FE8               	addlw	-24
 17880  0138FA  6ED9               	movwf	fsr2l,c
 17881  0138FC  50E2               	movf	fsr1h,w,c
 17882  0138FE  6EDA               	movwf	fsr2h,c
 17883  013900  0EFF               	movlw	255
 17884  013902  22DA               	addwfc	fsr2h,f,c
 17885  013904  006F FF7B FFE6     	movff	postinc2,postinc1
 17886  01390A  006F FF7B FFE6     	movff	postinc2,postinc1
 17887  013910  006F FF7B FFE6     	movff	postinc2,postinc1
 17888  013916  006F FF7B FFE6     	movff	postinc2,postinc1
 17889  01391C  006F FF7B FFE6     	movff	postinc2,postinc1
 17890  013922  006F FF7B FFE6     	movff	postinc2,postinc1
 17891  013928  006F FF7B FFE6     	movff	postinc2,postinc1
 17892  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 17893  013934  ECED  F0A8         	call	___aomod	;wreg free
 17894  013938  52E5               	movf	postdec1,f,c
 17895  01393A  006F FF9C  F049    	movff	indf1,btemp+23
 17896  013940  52E5               	movf	postdec1,f,c
 17897  013942  006F FF9C  F048    	movff	indf1,btemp+22
 17898  013948  52E5               	movf	postdec1,f,c
 17899  01394A  006F FF9C  F047    	movff	indf1,btemp+21
 17900  013950  52E5               	movf	postdec1,f,c
 17901  013952  006F FF9C  F046    	movff	indf1,btemp+20
 17902  013958  52E5               	movf	postdec1,f,c
 17903  01395A  006F FF9C  F045    	movff	indf1,btemp+19
 17904  013960  52E5               	movf	postdec1,f,c
 17905  013962  006F FF9C  F044    	movff	indf1,btemp+18
 17906  013968  52E5               	movf	postdec1,f,c
 17907  01396A  006F FF9C  F043    	movff	indf1,btemp+17
 17908  013970  52E5               	movf	postdec1,f,c
 17909  013972  006F FF9C  F042    	movff	indf1,btemp+16
 17910  013978  0EF8               	movlw	248
 17911  01397A  26E1               	addwf	fsr1l,f,c
 17912  01397C  0EFF               	movlw	255
 17913  01397E  22E2               	addwfc	fsr1h,f,c
 17914  013980  0060  F108  F03C   	movff	btemp+16,btemp+10
 17915  013986  0060  F10C  F03D   	movff	btemp+17,btemp+11
 17916  01398C  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 17917  013992  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 17918  013998  EC16  F0BD         	call	_abs	;wreg free
 17919  01399C  0E30               	movlw	48
 17920  01399E  2632               	addwf	btemp^0,f,c
 17921                           
 17922                           ;stkvar	_i @ sp[(-18)+10]
 17923  0139A0  0EF8               	movlw	-8
 17924  0139A2  006F FF8C  F03C    	movff	plusw1,btemp+10
 17925  0139A8  0EF9               	movlw	-7
 17926  0139AA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17927  0139B0  0E40               	movlw	low _dbuf
 17928  0139B2  243C               	addwf	(btemp+10)^0,w,c
 17929  0139B4  6ED9               	movwf	fsr2l,c
 17930  0139B6  0E02               	movlw	high _dbuf
 17931  0139B8  203D               	addwfc	(btemp+11)^0,w,c
 17932  0139BA  6EDA               	movwf	fsr2h,c
 17933  0139BC  0060  F0CB  FFDF   	movff	btemp,indf2
 17934                           
 17935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17936                           ;stkvar	_p @ sp[(-18)+16]
 17937  0139C2  50E1               	movf	fsr1l,w,c
 17938  0139C4  0FFE               	addlw	-2
 17939  0139C6  6ED9               	movwf	fsr2l,c
 17940  0139C8  50E2               	movf	fsr1h,w,c
 17941  0139CA  6EDA               	movwf	fsr2h,c
 17942  0139CC  0EFF               	movlw	255
 17943  0139CE  22DA               	addwfc	fsr2h,f,c
 17944  0139D0  06DE               	decf	postinc2,f,c
 17945  0139D2  0E00               	movlw	0
 17946  0139D4  5ADD               	subwfb	postdec2,f,c
 17947                           
 17948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17949                           ;stkvar	_w @ sp[(-18)+14]
 17950  0139D6  50E1               	movf	fsr1l,w,c
 17951  0139D8  0FFC               	addlw	-4
 17952  0139DA  6ED9               	movwf	fsr2l,c
 17953  0139DC  50E2               	movf	fsr1h,w,c
 17954  0139DE  6EDA               	movwf	fsr2h,c
 17955  0139E0  0EFF               	movlw	255
 17956  0139E2  22DA               	addwfc	fsr2h,f,c
 17957  0139E4  06DE               	decf	postinc2,f,c
 17958  0139E6  0E00               	movlw	0
 17959  0139E8  5ADD               	subwfb	postdec2,f,c
 17960                           
 17961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17962  0139EA  0E0A               	movlw	10
 17963  0139EC  6EE6               	movwf	postinc1,c
 17964  0139EE  0E00               	movlw	0
 17965  0139F0  6EE6               	movwf	postinc1,c
 17966  0139F2  0E00               	movlw	0
 17967  0139F4  6EE6               	movwf	postinc1,c
 17968  0139F6  0E00               	movlw	0
 17969  0139F8  6EE6               	movwf	postinc1,c
 17970  0139FA  0E00               	movlw	0
 17971  0139FC  6EE6               	movwf	postinc1,c
 17972  0139FE  0E00               	movlw	0
 17973  013A00  6EE6               	movwf	postinc1,c
 17974  013A02  0E00               	movlw	0
 17975  013A04  6EE6               	movwf	postinc1,c
 17976  013A06  0E00               	movlw	0
 17977  013A08  6EE6               	movwf	postinc1,c
 17978                           
 17979                           ;stkvar	_n @ sp[(-26)+2]
 17980  013A0A  50E1               	movf	fsr1l,w,c
 17981  013A0C  0FE8               	addlw	-24
 17982  013A0E  6ED9               	movwf	fsr2l,c
 17983  013A10  50E2               	movf	fsr1h,w,c
 17984  013A12  6EDA               	movwf	fsr2h,c
 17985  013A14  0EFF               	movlw	255
 17986  013A16  22DA               	addwfc	fsr2h,f,c
 17987  013A18  006F FF7B FFE6     	movff	postinc2,postinc1
 17988  013A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 17989  013A24  006F FF7B FFE6     	movff	postinc2,postinc1
 17990  013A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 17991  013A30  006F FF7B FFE6     	movff	postinc2,postinc1
 17992  013A36  006F FF7B FFE6     	movff	postinc2,postinc1
 17993  013A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 17994  013A42  006F FF7B FFE6     	movff	postinc2,postinc1
 17995  013A48  EC73  F0A6         	call	___aodiv	;wreg free
 17996  013A4C  52E5               	movf	postdec1,f,c
 17997  013A4E  006F FF9C  F049    	movff	indf1,btemp+23
 17998  013A54  52E5               	movf	postdec1,f,c
 17999  013A56  006F FF9C  F048    	movff	indf1,btemp+22
 18000  013A5C  52E5               	movf	postdec1,f,c
 18001  013A5E  006F FF9C  F047    	movff	indf1,btemp+21
 18002  013A64  52E5               	movf	postdec1,f,c
 18003  013A66  006F FF9C  F046    	movff	indf1,btemp+20
 18004  013A6C  52E5               	movf	postdec1,f,c
 18005  013A6E  006F FF9C  F045    	movff	indf1,btemp+19
 18006  013A74  52E5               	movf	postdec1,f,c
 18007  013A76  006F FF9C  F044    	movff	indf1,btemp+18
 18008  013A7C  52E5               	movf	postdec1,f,c
 18009  013A7E  006F FF9C  F043    	movff	indf1,btemp+17
 18010  013A84  52E5               	movf	postdec1,f,c
 18011  013A86  006F FF9C  F042    	movff	indf1,btemp+16
 18012  013A8C  0EF8               	movlw	248
 18013  013A8E  26E1               	addwf	fsr1l,f,c
 18014  013A90  0EFF               	movlw	255
 18015  013A92  22E2               	addwfc	fsr1h,f,c
 18016                           
 18017                           ;stkvar	_n @ sp[(-18)+2]
 18018  013A94  0EF0               	movlw	-16
 18019  013A96  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18020  013A9C  0EF1               	movlw	-15
 18021  013A9E  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18022  013AA4  0EF2               	movlw	-14
 18023  013AA6  0060  F113  FFE3   	movff	btemp+18,plusw1
 18024  013AAC  0EF3               	movlw	-13
 18025  013AAE  0060  F117  FFE3   	movff	btemp+19,plusw1
 18026  013AB4  0EF4               	movlw	-12
 18027  013AB6  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18028  013ABC  0EF5               	movlw	-11
 18029  013ABE  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18030  013AC4  0EF6               	movlw	-10
 18031  013AC6  0060  F123  FFE3   	movff	btemp+22,plusw1
 18032  013ACC  0EF7               	movlw	-9
 18033  013ACE  0060  F127  FFE3   	movff	btemp+23,plusw1
 18034  013AD4                     l10229:
 18035                           
 18036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18037                           ;stkvar	_i @ sp[(-18)+10]
 18038  013AD4  0EF9               	movlw	-7
 18039  013AD6  BEE3               	btfsc	plusw1,7,c
 18040  013AD8  D036               	goto	u10810
 18041  013ADA  0EF9               	movlw	-7
 18042  013ADC  50E3               	movf	plusw1,w,c
 18043  013ADE  E104               	bnz	u10770
 18044  013AE0  0EF8               	movlw	-8
 18045  013AE2  04E3               	decf	plusw1,w,c
 18046  013AE4  A0D8               	btfss	status,0,c
 18047  013AE6  D02F               	goto	u10810
 18048  013AE8                     u10770:
 18049                           
 18050                           ;stkvar	_n @ sp[(-18)+2]
 18051  013AE8  0EF0               	movlw	-16
 18052  013AEA  50E3               	movf	plusw1,w,c
 18053  013AEC  E115               	bnz	u10781
 18054  013AEE  0EF1               	movlw	-15
 18055  013AF0  50E3               	movf	plusw1,w,c
 18056  013AF2  E112               	bnz	u10781
 18057  013AF4  0EF2               	movlw	-14
 18058  013AF6  50E3               	movf	plusw1,w,c
 18059  013AF8  E10F               	bnz	u10781
 18060  013AFA  0EF3               	movlw	-13
 18061  013AFC  50E3               	movf	plusw1,w,c
 18062  013AFE  E10C               	bnz	u10781
 18063  013B00  0EF4               	movlw	-12
 18064  013B02  50E3               	movf	plusw1,w,c
 18065  013B04  E109               	bnz	u10781
 18066  013B06  0EF5               	movlw	-11
 18067  013B08  50E3               	movf	plusw1,w,c
 18068  013B0A  E106               	bnz	u10781
 18069  013B0C  0EF6               	movlw	-10
 18070  013B0E  50E3               	movf	plusw1,w,c
 18071  013B10  E103               	bnz	u10781
 18072  013B12  0EF7               	movlw	-9
 18073  013B14  50E3               	movf	plusw1,w,c
 18074  013B16  A4D8               	btfss	status,2,c
 18075  013B18                     u10781:
 18076  013B18  D6D4               	goto	l10219
 18077                           
 18078                           ;stkvar	_p @ sp[(-18)+16]
 18079  013B1A  0EFF               	movlw	-1
 18080  013B1C  BEE3               	btfsc	plusw1,7,c
 18081  013B1E  D007               	goto	u10790
 18082  013B20  0EFF               	movlw	-1
 18083  013B22  50E3               	movf	plusw1,w,c
 18084  013B24  E103               	bnz	u10791
 18085  013B26  0EFE               	movlw	-2
 18086  013B28  04E3               	decf	plusw1,w,c
 18087  013B2A  B0D8               	btfsc	status,0,c
 18088  013B2C                     u10791:
 18089  013B2C  D6CA               	goto	l10219
 18090  013B2E                     u10790:
 18091                           
 18092                           ;stkvar	_w @ sp[(-18)+14]
 18093  013B2E  0EFD               	movlw	-3
 18094  013B30  BEE3               	btfsc	plusw1,7,c
 18095  013B32  D009               	goto	u10810
 18096  013B34  0EFD               	movlw	-3
 18097  013B36  50E3               	movf	plusw1,w,c
 18098  013B38  E104               	bnz	u10800
 18099  013B3A  0EFC               	movlw	-4
 18100  013B3C  04E3               	decf	plusw1,w,c
 18101  013B3E  A0D8               	btfss	status,0,c
 18102  013B40  D002               	goto	u10810
 18103  013B42                     u10800:
 18104  013B42  B21F               	btfsc	_flags^0,1,c
 18105  013B44  D6BE               	goto	l10219
 18106  013B46                     u10810:
 18107                           
 18108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18109                           ;stkvar	_s @ sp[(-18)+12]
 18110  013B46  0EFA               	movlw	-6
 18111  013B48  006F FF8C  F032    	movff	plusw1,btemp
 18112  013B4E  0EFB               	movlw	-5
 18113  013B50  50E3               	movf	plusw1,w,c
 18114  013B52  1032               	iorwf	btemp^0,w,c
 18115  013B54  A4D8               	btfss	status,2,c
 18116  013B56  D002               	goto	u10830
 18117  013B58  A41F               	btfss	_flags^0,2,c
 18118  013B5A  D033               	goto	l10253
 18119  013B5C                     u10830:
 18120                           
 18121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18122                           ;stkvar	_i @ sp[(-18)+10]
 18123  013B5C  50E1               	movf	fsr1l,w,c
 18124  013B5E  0FF8               	addlw	-8
 18125  013B60  6ED9               	movwf	fsr2l,c
 18126  013B62  50E2               	movf	fsr1h,w,c
 18127  013B64  6EDA               	movwf	fsr2h,c
 18128  013B66  0EFF               	movlw	255
 18129  013B68  22DA               	addwfc	fsr2h,f,c
 18130  013B6A  06DE               	decf	postinc2,f,c
 18131  013B6C  0E00               	movlw	0
 18132  013B6E  5ADD               	subwfb	postdec2,f,c
 18133                           
 18134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18135                           ;stkvar	_s @ sp[(-18)+12]
 18136  013B70  0EFA               	movlw	-6
 18137  013B72  006F FF8C  F032    	movff	plusw1,btemp
 18138  013B78  0EFB               	movlw	-5
 18139  013B7A  50E3               	movf	plusw1,w,c
 18140  013B7C  1032               	iorwf	btemp^0,w,c
 18141  013B7E  A4D8               	btfss	status,2,c
 18142  013B80  D002               	goto	l10249
 18143  013B82  0E2B               	movlw	43
 18144  013B84  D001               	goto	L16
 18145  013B86                     l10249:
 18146  013B86  0E2D               	movlw	45
 18147  013B88                     L16:
 18148  013B88  6E3C               	movwf	(btemp+10)^0,c
 18149  013B8A  0E00               	movlw	0
 18150  013B8C  6E3D               	movwf	(btemp+11)^0,c
 18151                           
 18152                           ;stkvar	_dtoa$4355 @ sp[(-18)+0]
 18153  013B8E  0EEE               	movlw	-18
 18154  013B90  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18155  013B96  0EEF               	movlw	-17
 18156  013B98  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18157                           
 18158                           ;stkvar	_dtoa$4355 @ sp[(-18)+0]
 18159                           ;stkvar	_i @ sp[(-18)+10]
 18160  013B9E  0EF8               	movlw	-8
 18161  013BA0  006F FF8C  F03C    	movff	plusw1,btemp+10
 18162  013BA6  0EF9               	movlw	-7
 18163  013BA8  006F FF8C  F03D    	movff	plusw1,btemp+11
 18164  013BAE  0E40               	movlw	low _dbuf
 18165  013BB0  243C               	addwf	(btemp+10)^0,w,c
 18166  013BB2  6ED9               	movwf	fsr2l,c
 18167  013BB4  0E02               	movlw	high _dbuf
 18168  013BB6  203D               	addwfc	(btemp+11)^0,w,c
 18169  013BB8  6EDA               	movwf	fsr2h,c
 18170  013BBA  0EEE               	movlw	-18
 18171  013BBC  006F FF8F FFDF     	movff	plusw1,indf2
 18172  013BC2                     l10253:
 18173                           
 18174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18175                           ;stkvar	_w @ sp[(-18)+14]
 18176  013BC2  0EFC               	movlw	-4
 18177  013BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 18178  013BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 18179                           
 18180                           ;stkvar	_i @ sp[(-20)+10]
 18181  013BD0  0E40               	movlw	low _dbuf
 18182  013BD2  6E3C               	movwf	(btemp+10)^0,c
 18183  013BD4  0E02               	movlw	high _dbuf
 18184  013BD6  6E3D               	movwf	(btemp+11)^0,c
 18185  013BD8  0EF6               	movlw	-10
 18186  013BDA  50E3               	movf	plusw1,w,c
 18187  013BDC  263C               	addwf	(btemp+10)^0,f,c
 18188  013BDE  0EF7               	movlw	-9
 18189  013BE0  50E3               	movf	plusw1,w,c
 18190  013BE2  223D               	addwfc	(btemp+11)^0,f,c
 18191  013BE4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18192  013BEA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18193                           
 18194                           ;stkvar	_fp @ sp[(-22)+-2]
 18195  013BF0  0EE8               	movlw	-24
 18196  013BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 18197  013BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 18198  013BFE  EC11  F0B3         	call	_pad	;wreg free
 18199                           
 18200                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18201  013C02  0EE4               	movlw	228
 18202  013C04  26E1               	addwf	fsr1l,f,c
 18203  013C06  0EFF               	movlw	255
 18204  013C08  22E2               	addwfc	fsr1h,f,c
 18205  013C0A  0012               	return		;funcret
 18206  013C0C                     __end_of_dtoa:
 18207                           	opt callstack 0
 18208                           
 18209 ;; *************** function _abs *****************
 18210 ;; Defined at:
 18211 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  a               2  [STACK] int 
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;		None
 18216 ;; Return value:  Size  Location     Type
 18217 ;;                  2  [STACK] int 
 18218 ;; Registers used:
 18219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18220 ;; Tracked objects:
 18221 ;;		On entry : 0/2
 18222 ;;		On exit  : 0/0
 18223 ;;		Unchanged: 0/0
 18224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18229 ;;Total ram usage:        0 bytes
 18230 ;; Hardware stack levels used:    1
 18231 ;; Hardware stack levels required when called:    6
 18232 ;; This function calls:
 18233 ;;		Nothing
 18234 ;; This function is called by:
 18235 ;;		_dtoa
 18236 ;; This function uses a reentrant model
 18237 ;;
 18238                           
 18239                           	psect	text62
 18240  017A2C                     __ptext62:
 18241                           	opt callstack 0
 18242  017A2C                     _abs:
 18243                           	opt callstack 17
 18244                           
 18245                           ;stkvar	_a @ sp[(0)+-2]
 18246                           
 18247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18248                           ;incstack = 0
 18249  017A2C  0EFF               	movlw	-1
 18250  017A2E  BEE3               	btfsc	plusw1,7,c
 18251  017A30  D007               	goto	u9330
 18252  017A32  0EFF               	movlw	-1
 18253  017A34  50E3               	movf	plusw1,w,c
 18254  017A36  E112               	bnz	l9485
 18255  017A38  0EFE               	movlw	-2
 18256  017A3A  04E3               	decf	plusw1,w,c
 18257  017A3C  B0D8               	btfsc	status,0,c
 18258  017A3E  D00E               	goto	l9485
 18259  017A40                     u9330:
 18260                           
 18261                           ;stkvar	_a @ sp[(0)+-2]
 18262  017A40  0EFE               	movlw	-2
 18263  017A42  006F FF8C  F032    	movff	plusw1,btemp
 18264  017A48  1E32               	comf	btemp^0,f,c
 18265  017A4A  0EFF               	movlw	-1
 18266  017A4C  006F FF8C  F033    	movff	plusw1,btemp+1
 18267  017A52  1E33               	comf	(btemp+1)^0,f,c
 18268  017A54  2A32               	incf	btemp^0,f,c
 18269  017A56  B4D8               	btfsc	status,2,c
 18270  017A58  2A33               	incf	(btemp+1)^0,f,c
 18271  017A5A  D008               	goto	l2731
 18272  017A5C                     l9485:
 18273                           
 18274                           ;stkvar	_a @ sp[(0)+-2]
 18275  017A5C  0EFE               	movlw	-2
 18276  017A5E  006F FF8C  F032    	movff	plusw1,btemp
 18277  017A64  0EFF               	movlw	-1
 18278  017A66  006F FF8C  F033    	movff	plusw1,btemp+1
 18279  017A6C                     l2731:
 18280                           
 18281                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18282  017A6C  52E5               	movf	postdec1,f,c
 18283  017A6E  52E5               	movf	postdec1,f,c
 18284  017A70  0012               	return		;funcret
 18285  017A72                     __end_of_abs:
 18286                           	opt callstack 0
 18287                           
 18288 ;; *************** function ___aomod *****************
 18289 ;; Defined at:
 18290 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18291 ;; Parameters:    Size  Location     Type
 18292 ;;  dividend        8  [STACK] long long 
 18293 ;;  divisor         8  [STACK] long long 
 18294 ;; Auto vars:     Size  Location     Type
 18295 ;;  sign            1  [STACK] unsigned char 
 18296 ;;  counter         1  [STACK] unsigned char 
 18297 ;; Return value:  Size  Location     Type
 18298 ;;                  8  [STACK] long long 
 18299 ;; Registers used:
 18300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18301 ;; Tracked objects:
 18302 ;;		On entry : 0/2
 18303 ;;		On exit  : 0/0
 18304 ;;		Unchanged: 0/0
 18305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18310 ;;Total ram usage:        0 bytes
 18311 ;; Hardware stack levels used:    1
 18312 ;; Hardware stack levels required when called:    6
 18313 ;; This function calls:
 18314 ;;		Nothing
 18315 ;; This function is called by:
 18316 ;;		_dtoa
 18317 ;; This function uses a reentrant model
 18318 ;;
 18319                           
 18320                           	psect	text63
 18321  0151DA                     __ptext63:
 18322                           	opt callstack 0
 18323  0151DA                     ___aomod:
 18324                           	opt callstack 0
 18325                           
 18326                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18327  0151DA  52E6               	movf	postinc1,f,c
 18328  0151DC  52E6               	movf	postinc1,f,c
 18329                           
 18330                           ;stkvar	_sign @ sp[(-2)+0]
 18331                           
 18332                           ;incstack = 0
 18333  0151DE  0EFE               	movlw	-2
 18334  0151E0  6AE3               	clrf	plusw1,c
 18335                           
 18336                           ;stkvar	_dividend @ sp[(-2)+-8]
 18337  0151E2  0EFD               	movlw	-3
 18338  0151E4  AEE3               	btfss	plusw1,7,c
 18339  0151E6  D028               	goto	l9643
 18340                           
 18341                           ;stkvar	_dividend @ sp[(-2)+-8]
 18342                           ;stkvar	_dividend @ sp[(-2)+-8]
 18343  0151E8  0EF6               	movlw	-10
 18344  0151EA  6CE3               	negf	plusw1,c
 18345  0151EC  0EF7               	movlw	-9
 18346  0151EE  1EE3               	comf	plusw1,f,c
 18347  0151F0  0EF8               	movlw	-8
 18348  0151F2  1EE3               	comf	plusw1,f,c
 18349  0151F4  0EF9               	movlw	-7
 18350  0151F6  1EE3               	comf	plusw1,f,c
 18351  0151F8  0EFA               	movlw	-6
 18352  0151FA  1EE3               	comf	plusw1,f,c
 18353  0151FC  0EFB               	movlw	-5
 18354  0151FE  1EE3               	comf	plusw1,f,c
 18355  015200  0EFC               	movlw	-4
 18356  015202  1EE3               	comf	plusw1,f,c
 18357  015204  0EFD               	movlw	-3
 18358  015206  1EE3               	comf	plusw1,f,c
 18359  015208  E314               	bnc	u9760
 18360  01520A  0EF7               	movlw	-9
 18361  01520C  2AE3               	incf	plusw1,f,c
 18362  01520E  E311               	bnc	u9760
 18363  015210  0EF8               	movlw	-8
 18364  015212  2AE3               	incf	plusw1,f,c
 18365  015214  E30E               	bnc	u9760
 18366  015216  0EF9               	movlw	-7
 18367  015218  2AE3               	incf	plusw1,f,c
 18368  01521A  E30B               	bnc	u9760
 18369  01521C  0EFA               	movlw	-6
 18370  01521E  2AE3               	incf	plusw1,f,c
 18371  015220  E308               	bnc	u9760
 18372  015222  0EFB               	movlw	-5
 18373  015224  2AE3               	incf	plusw1,f,c
 18374  015226  E305               	bnc	u9760
 18375  015228  0EFC               	movlw	-4
 18376  01522A  2AE3               	incf	plusw1,f,c
 18377  01522C  E302               	bnc	u9760
 18378  01522E  0EFD               	movlw	-3
 18379  015230  2AE3               	incf	plusw1,f,c
 18380  015232                     u9760:
 18381                           
 18382                           ;stkvar	_sign @ sp[(-2)+0]
 18383  015232  0EFE               	movlw	-2
 18384  015234  6AE3               	clrf	plusw1,c
 18385  015236  2AE3               	incf	plusw1,f,c
 18386  015238                     l9643:
 18387                           
 18388                           ;stkvar	_divisor @ sp[(-2)+-16]
 18389  015238  0EF5               	movlw	-11
 18390  01523A  AEE3               	btfss	plusw1,7,c
 18391  01523C  D025               	goto	u9780
 18392                           
 18393                           ;stkvar	_divisor @ sp[(-2)+-16]
 18394                           ;stkvar	_divisor @ sp[(-2)+-16]
 18395  01523E  0EEE               	movlw	-18
 18396  015240  6CE3               	negf	plusw1,c
 18397  015242  0EEF               	movlw	-17
 18398  015244  1EE3               	comf	plusw1,f,c
 18399  015246  0EF0               	movlw	-16
 18400  015248  1EE3               	comf	plusw1,f,c
 18401  01524A  0EF1               	movlw	-15
 18402  01524C  1EE3               	comf	plusw1,f,c
 18403  01524E  0EF2               	movlw	-14
 18404  015250  1EE3               	comf	plusw1,f,c
 18405  015252  0EF3               	movlw	-13
 18406  015254  1EE3               	comf	plusw1,f,c
 18407  015256  0EF4               	movlw	-12
 18408  015258  1EE3               	comf	plusw1,f,c
 18409  01525A  0EF5               	movlw	-11
 18410  01525C  1EE3               	comf	plusw1,f,c
 18411  01525E  E314               	bnc	u9780
 18412  015260  0EEF               	movlw	-17
 18413  015262  2AE3               	incf	plusw1,f,c
 18414  015264  E311               	bnc	u9780
 18415  015266  0EF0               	movlw	-16
 18416  015268  2AE3               	incf	plusw1,f,c
 18417  01526A  E30E               	bnc	u9780
 18418  01526C  0EF1               	movlw	-15
 18419  01526E  2AE3               	incf	plusw1,f,c
 18420  015270  E30B               	bnc	u9780
 18421  015272  0EF2               	movlw	-14
 18422  015274  2AE3               	incf	plusw1,f,c
 18423  015276  E308               	bnc	u9780
 18424  015278  0EF3               	movlw	-13
 18425  01527A  2AE3               	incf	plusw1,f,c
 18426  01527C  E305               	bnc	u9780
 18427  01527E  0EF4               	movlw	-12
 18428  015280  2AE3               	incf	plusw1,f,c
 18429  015282  E302               	bnc	u9780
 18430  015284  0EF5               	movlw	-11
 18431  015286  2AE3               	incf	plusw1,f,c
 18432  015288                     u9780:
 18433                           
 18434                           ;stkvar	_divisor @ sp[(-2)+-16]
 18435  015288  0EEE               	movlw	-18
 18436  01528A  50E3               	movf	plusw1,w,c
 18437  01528C  E116               	bnz	u9790
 18438  01528E  0EEF               	movlw	-17
 18439  015290  50E3               	movf	plusw1,w,c
 18440  015292  E113               	bnz	u9790
 18441  015294  0EF0               	movlw	-16
 18442  015296  50E3               	movf	plusw1,w,c
 18443  015298  E110               	bnz	u9790
 18444  01529A  0EF1               	movlw	-15
 18445  01529C  50E3               	movf	plusw1,w,c
 18446  01529E  E10D               	bnz	u9790
 18447  0152A0  0EF2               	movlw	-14
 18448  0152A2  50E3               	movf	plusw1,w,c
 18449  0152A4  E10A               	bnz	u9790
 18450  0152A6  0EF3               	movlw	-13
 18451  0152A8  50E3               	movf	plusw1,w,c
 18452  0152AA  E107               	bnz	u9790
 18453  0152AC  0EF4               	movlw	-12
 18454  0152AE  50E3               	movf	plusw1,w,c
 18455  0152B0  E104               	bnz	u9790
 18456  0152B2  0EF5               	movlw	-11
 18457  0152B4  50E3               	movf	plusw1,w,c
 18458  0152B6  B4D8               	btfsc	status,2,c
 18459  0152B8  D075               	goto	u9820
 18460  0152BA                     u9790:
 18461                           
 18462                           ;stkvar	_counter @ sp[(-2)+1]
 18463  0152BA  0EFF               	movlw	-1
 18464  0152BC  6AE3               	clrf	plusw1,c
 18465  0152BE  D012               	goto	L17
 18466  0152C0                     l9651:
 18467                           
 18468                           ;stkvar	_divisor @ sp[(-2)+-16]
 18469  0152C0  90D8               	bcf	status,0,c
 18470  0152C2  0EEE               	movlw	-18
 18471  0152C4  36E3               	rlcf	plusw1,f,c
 18472  0152C6  0EEF               	movlw	-17
 18473  0152C8  36E3               	rlcf	plusw1,f,c
 18474  0152CA  0EF0               	movlw	-16
 18475  0152CC  36E3               	rlcf	plusw1,f,c
 18476  0152CE  0EF1               	movlw	-15
 18477  0152D0  36E3               	rlcf	plusw1,f,c
 18478  0152D2  0EF2               	movlw	-14
 18479  0152D4  36E3               	rlcf	plusw1,f,c
 18480  0152D6  0EF3               	movlw	-13
 18481  0152D8  36E3               	rlcf	plusw1,f,c
 18482  0152DA  0EF4               	movlw	-12
 18483  0152DC  36E3               	rlcf	plusw1,f,c
 18484  0152DE  0EF5               	movlw	-11
 18485  0152E0  36E3               	rlcf	plusw1,f,c
 18486                           
 18487                           ;stkvar	_counter @ sp[(-2)+1]
 18488  0152E2  0EFF               	movlw	-1
 18489  0152E4                     L17:
 18490  0152E4  2AE3               	incf	plusw1,f,c
 18491                           
 18492                           ;stkvar	_divisor @ sp[(-2)+-16]
 18493  0152E6  0EF5               	movlw	-11
 18494  0152E8  AEE3               	btfss	plusw1,7,c
 18495  0152EA  D7EA               	goto	l9651
 18496  0152EC                     u9800:
 18497                           
 18498                           ;stkvar	_divisor @ sp[(-2)+-16]
 18499                           ;stkvar	_dividend @ sp[(-2)+-8]
 18500  0152EC  50E1               	movf	fsr1l,w,c
 18501  0152EE  0FF6               	addlw	-10
 18502  0152F0  6ED9               	movwf	fsr2l,c
 18503  0152F2  50E2               	movf	fsr1h,w,c
 18504  0152F4  6EDA               	movwf	fsr2h,c
 18505  0152F6  0EFF               	movlw	255
 18506  0152F8  22DA               	addwfc	fsr2h,f,c
 18507  0152FA  0EEE               	movlw	-18
 18508  0152FC  50E3               	movf	plusw1,w,c
 18509  0152FE  5CDE               	subwf	postinc2,w,c
 18510  015300  0EEF               	movlw	-17
 18511  015302  50E3               	movf	plusw1,w,c
 18512  015304  58DE               	subwfb	postinc2,w,c
 18513  015306  0EF0               	movlw	-16
 18514  015308  50E3               	movf	plusw1,w,c
 18515  01530A  58DE               	subwfb	postinc2,w,c
 18516  01530C  0EF1               	movlw	-15
 18517  01530E  50E3               	movf	plusw1,w,c
 18518  015310  58DE               	subwfb	postinc2,w,c
 18519  015312  0EF2               	movlw	-14
 18520  015314  50E3               	movf	plusw1,w,c
 18521  015316  58DE               	subwfb	postinc2,w,c
 18522  015318  0EF3               	movlw	-13
 18523  01531A  50E3               	movf	plusw1,w,c
 18524  01531C  58DE               	subwfb	postinc2,w,c
 18525  01531E  0EF4               	movlw	-12
 18526  015320  50E3               	movf	plusw1,w,c
 18527  015322  58DE               	subwfb	postinc2,w,c
 18528  015324  0EF5               	movlw	-11
 18529  015326  50E3               	movf	plusw1,w,c
 18530  015328  58DE               	subwfb	postinc2,w,c
 18531  01532A  A0D8               	btfss	status,0,c
 18532  01532C  D01F               	goto	l9659
 18533                           
 18534                           ;stkvar	_divisor @ sp[(-2)+-16]
 18535                           ;stkvar	_dividend @ sp[(-2)+-8]
 18536  01532E  50E1               	movf	fsr1l,w,c
 18537  015330  0FF6               	addlw	-10
 18538  015332  6ED9               	movwf	fsr2l,c
 18539  015334  50E2               	movf	fsr1h,w,c
 18540  015336  6EDA               	movwf	fsr2h,c
 18541  015338  0EFF               	movlw	255
 18542  01533A  22DA               	addwfc	fsr2h,f,c
 18543  01533C  0EEE               	movlw	-18
 18544  01533E  50E3               	movf	plusw1,w,c
 18545  015340  5EDE               	subwf	postinc2,f,c
 18546  015342  0EEF               	movlw	-17
 18547  015344  50E3               	movf	plusw1,w,c
 18548  015346  5ADE               	subwfb	postinc2,f,c
 18549  015348  0EF0               	movlw	-16
 18550  01534A  50E3               	movf	plusw1,w,c
 18551  01534C  5ADE               	subwfb	postinc2,f,c
 18552  01534E  0EF1               	movlw	-15
 18553  015350  50E3               	movf	plusw1,w,c
 18554  015352  5ADE               	subwfb	postinc2,f,c
 18555  015354  0EF2               	movlw	-14
 18556  015356  50E3               	movf	plusw1,w,c
 18557  015358  5ADE               	subwfb	postinc2,f,c
 18558  01535A  0EF3               	movlw	-13
 18559  01535C  50E3               	movf	plusw1,w,c
 18560  01535E  5ADE               	subwfb	postinc2,f,c
 18561  015360  0EF4               	movlw	-12
 18562  015362  50E3               	movf	plusw1,w,c
 18563  015364  5ADE               	subwfb	postinc2,f,c
 18564  015366  0EF5               	movlw	-11
 18565  015368  50E3               	movf	plusw1,w,c
 18566  01536A  5ADE               	subwfb	postinc2,f,c
 18567  01536C                     l9659:
 18568                           
 18569                           ;stkvar	_divisor @ sp[(-2)+-16]
 18570  01536C  90D8               	bcf	status,0,c
 18571  01536E  0EF5               	movlw	-11
 18572  015370  32E3               	rrcf	plusw1,f,c
 18573  015372  0EF4               	movlw	-12
 18574  015374  32E3               	rrcf	plusw1,f,c
 18575  015376  0EF3               	movlw	-13
 18576  015378  32E3               	rrcf	plusw1,f,c
 18577  01537A  0EF2               	movlw	-14
 18578  01537C  32E3               	rrcf	plusw1,f,c
 18579  01537E  0EF1               	movlw	-15
 18580  015380  32E3               	rrcf	plusw1,f,c
 18581  015382  0EF0               	movlw	-16
 18582  015384  32E3               	rrcf	plusw1,f,c
 18583  015386  0EEF               	movlw	-17
 18584  015388  32E3               	rrcf	plusw1,f,c
 18585  01538A  0EEE               	movlw	-18
 18586  01538C  32E3               	rrcf	plusw1,f,c
 18587                           
 18588                           ;stkvar	_counter @ sp[(-2)+1]
 18589  01538E  0EFF               	movlw	-1
 18590  015390  50E3               	movf	plusw1,w,c
 18591  015392  6E32               	movwf	btemp^0,c
 18592  015394  0E01               	movlw	1
 18593  015396  5E32               	subwf	btemp^0,f,c
 18594  015398  0EFF               	movlw	-1
 18595  01539A  0060  F0CB  FFE3   	movff	btemp,plusw1
 18596  0153A0  A4D8               	btfss	status,2,c
 18597  0153A2  D7A4               	goto	u9800
 18598  0153A4                     u9820:
 18599                           
 18600                           ;stkvar	_sign @ sp[(-2)+0]
 18601  0153A4  0EFE               	movlw	-2
 18602  0153A6  50E3               	movf	plusw1,w,c
 18603  0153A8  B4D8               	btfsc	status,2,c
 18604  0153AA  D025               	goto	u9840
 18605                           
 18606                           ;stkvar	_dividend @ sp[(-2)+-8]
 18607                           ;stkvar	_dividend @ sp[(-2)+-8]
 18608  0153AC  0EF6               	movlw	-10
 18609  0153AE  6CE3               	negf	plusw1,c
 18610  0153B0  0EF7               	movlw	-9
 18611  0153B2  1EE3               	comf	plusw1,f,c
 18612  0153B4  0EF8               	movlw	-8
 18613  0153B6  1EE3               	comf	plusw1,f,c
 18614  0153B8  0EF9               	movlw	-7
 18615  0153BA  1EE3               	comf	plusw1,f,c
 18616  0153BC  0EFA               	movlw	-6
 18617  0153BE  1EE3               	comf	plusw1,f,c
 18618  0153C0  0EFB               	movlw	-5
 18619  0153C2  1EE3               	comf	plusw1,f,c
 18620  0153C4  0EFC               	movlw	-4
 18621  0153C6  1EE3               	comf	plusw1,f,c
 18622  0153C8  0EFD               	movlw	-3
 18623  0153CA  1EE3               	comf	plusw1,f,c
 18624  0153CC  E314               	bnc	u9840
 18625  0153CE  0EF7               	movlw	-9
 18626  0153D0  2AE3               	incf	plusw1,f,c
 18627  0153D2  E311               	bnc	u9840
 18628  0153D4  0EF8               	movlw	-8
 18629  0153D6  2AE3               	incf	plusw1,f,c
 18630  0153D8  E30E               	bnc	u9840
 18631  0153DA  0EF9               	movlw	-7
 18632  0153DC  2AE3               	incf	plusw1,f,c
 18633  0153DE  E30B               	bnc	u9840
 18634  0153E0  0EFA               	movlw	-6
 18635  0153E2  2AE3               	incf	plusw1,f,c
 18636  0153E4  E308               	bnc	u9840
 18637  0153E6  0EFB               	movlw	-5
 18638  0153E8  2AE3               	incf	plusw1,f,c
 18639  0153EA  E305               	bnc	u9840
 18640  0153EC  0EFC               	movlw	-4
 18641  0153EE  2AE3               	incf	plusw1,f,c
 18642  0153F0  E302               	bnc	u9840
 18643  0153F2  0EFD               	movlw	-3
 18644  0153F4  2AE3               	incf	plusw1,f,c
 18645  0153F6                     u9840:
 18646                           
 18647                           ;stkvar	_dividend @ sp[(-2)+-8]
 18648  0153F6  0EF6               	movlw	246
 18649  0153F8  24E1               	addwf	fsr1l,w,c
 18650  0153FA  6ED9               	movwf	fsr2l,c
 18651  0153FC  0EFF               	movlw	255
 18652  0153FE  20E2               	addwfc	fsr1h,w,c
 18653  015400  6EDA               	movwf	fsr2h,c
 18654                           
 18655                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18656  015402  0E08               	movlw	8
 18657  015404  6E32               	movwf	btemp^0,c
 18658  015406  0EF6               	movlw	-10
 18659  015408                     us985999:
 18660  015408  006F FF7B FFE3     	movff	postinc2,plusw1
 18661  01540E  28E8               	incf	wreg,w,c
 18662  015410  2E32               	decfsz	btemp^0,f,c
 18663  015412  D7FA               	bra	us985999
 18664                           
 18665                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18666  015414  52E5               	movf	postdec1,f,c
 18667  015416  52E5               	movf	postdec1,f,c
 18668  015418  0012               	return		;funcret
 18669  01541A                     __end_of___aomod:
 18670                           	opt callstack 0
 18671                           
 18672 ;; *************** function ___aodiv *****************
 18673 ;; Defined at:
 18674 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18675 ;; Parameters:    Size  Location     Type
 18676 ;;  dividend        8  [STACK] long long 
 18677 ;;  divisor         8  [STACK] long long 
 18678 ;; Auto vars:     Size  Location     Type
 18679 ;;  quotient        8  [STACK] long long 
 18680 ;;  sign            1  [STACK] unsigned char 
 18681 ;;  counter         1  [STACK] unsigned char 
 18682 ;; Return value:  Size  Location     Type
 18683 ;;                  8  [STACK] long long 
 18684 ;; Registers used:
 18685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18686 ;; Tracked objects:
 18687 ;;		On entry : 0/2
 18688 ;;		On exit  : 0/0
 18689 ;;		Unchanged: 0/0
 18690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18695 ;;Total ram usage:        0 bytes
 18696 ;; Hardware stack levels used:    1
 18697 ;; Hardware stack levels required when called:    6
 18698 ;; This function calls:
 18699 ;;		Nothing
 18700 ;; This function is called by:
 18701 ;;		_dtoa
 18702 ;; This function uses a reentrant model
 18703 ;;
 18704                           
 18705                           	psect	text64
 18706  014CE6                     __ptext64:
 18707                           	opt callstack 0
 18708  014CE6                     ___aodiv:
 18709                           	opt callstack 0
 18710                           
 18711                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18712  014CE6  0E0A               	movlw	10
 18713  014CE8  26E1               	addwf	fsr1l,f,c
 18714  014CEA  0E00               	movlw	0
 18715  014CEC  22E2               	addwfc	fsr1h,f,c
 18716                           
 18717                           ;stkvar	_sign @ sp[(-10)+8]
 18718                           
 18719                           ;incstack = 0
 18720  014CEE  0EFE               	movlw	-2
 18721  014CF0  6AE3               	clrf	plusw1,c
 18722                           
 18723                           ;stkvar	_divisor @ sp[(-10)+-16]
 18724  014CF2  0EED               	movlw	-19
 18725  014CF4  AEE3               	btfss	plusw1,7,c
 18726  014CF6  D028               	goto	l9599
 18727                           
 18728                           ;stkvar	_divisor @ sp[(-10)+-16]
 18729                           ;stkvar	_divisor @ sp[(-10)+-16]
 18730  014CF8  0EE6               	movlw	-26
 18731  014CFA  6CE3               	negf	plusw1,c
 18732  014CFC  0EE7               	movlw	-25
 18733  014CFE  1EE3               	comf	plusw1,f,c
 18734  014D00  0EE8               	movlw	-24
 18735  014D02  1EE3               	comf	plusw1,f,c
 18736  014D04  0EE9               	movlw	-23
 18737  014D06  1EE3               	comf	plusw1,f,c
 18738  014D08  0EEA               	movlw	-22
 18739  014D0A  1EE3               	comf	plusw1,f,c
 18740  014D0C  0EEB               	movlw	-21
 18741  014D0E  1EE3               	comf	plusw1,f,c
 18742  014D10  0EEC               	movlw	-20
 18743  014D12  1EE3               	comf	plusw1,f,c
 18744  014D14  0EED               	movlw	-19
 18745  014D16  1EE3               	comf	plusw1,f,c
 18746  014D18  E314               	bnc	u9640
 18747  014D1A  0EE7               	movlw	-25
 18748  014D1C  2AE3               	incf	plusw1,f,c
 18749  014D1E  E311               	bnc	u9640
 18750  014D20  0EE8               	movlw	-24
 18751  014D22  2AE3               	incf	plusw1,f,c
 18752  014D24  E30E               	bnc	u9640
 18753  014D26  0EE9               	movlw	-23
 18754  014D28  2AE3               	incf	plusw1,f,c
 18755  014D2A  E30B               	bnc	u9640
 18756  014D2C  0EEA               	movlw	-22
 18757  014D2E  2AE3               	incf	plusw1,f,c
 18758  014D30  E308               	bnc	u9640
 18759  014D32  0EEB               	movlw	-21
 18760  014D34  2AE3               	incf	plusw1,f,c
 18761  014D36  E305               	bnc	u9640
 18762  014D38  0EEC               	movlw	-20
 18763  014D3A  2AE3               	incf	plusw1,f,c
 18764  014D3C  E302               	bnc	u9640
 18765  014D3E  0EED               	movlw	-19
 18766  014D40  2AE3               	incf	plusw1,f,c
 18767  014D42                     u9640:
 18768                           
 18769                           ;stkvar	_sign @ sp[(-10)+8]
 18770  014D42  0EFE               	movlw	-2
 18771  014D44  6AE3               	clrf	plusw1,c
 18772  014D46  2AE3               	incf	plusw1,f,c
 18773  014D48                     l9599:
 18774                           
 18775                           ;stkvar	_dividend @ sp[(-10)+-8]
 18776  014D48  0EF5               	movlw	-11
 18777  014D4A  AEE3               	btfss	plusw1,7,c
 18778  014D4C  D027               	goto	l9605
 18779                           
 18780                           ;stkvar	_dividend @ sp[(-10)+-8]
 18781                           ;stkvar	_dividend @ sp[(-10)+-8]
 18782  014D4E  0EEE               	movlw	-18
 18783  014D50  6CE3               	negf	plusw1,c
 18784  014D52  0EEF               	movlw	-17
 18785  014D54  1EE3               	comf	plusw1,f,c
 18786  014D56  0EF0               	movlw	-16
 18787  014D58  1EE3               	comf	plusw1,f,c
 18788  014D5A  0EF1               	movlw	-15
 18789  014D5C  1EE3               	comf	plusw1,f,c
 18790  014D5E  0EF2               	movlw	-14
 18791  014D60  1EE3               	comf	plusw1,f,c
 18792  014D62  0EF3               	movlw	-13
 18793  014D64  1EE3               	comf	plusw1,f,c
 18794  014D66  0EF4               	movlw	-12
 18795  014D68  1EE3               	comf	plusw1,f,c
 18796  014D6A  0EF5               	movlw	-11
 18797  014D6C  1EE3               	comf	plusw1,f,c
 18798  014D6E  E314               	bnc	u9660
 18799  014D70  0EEF               	movlw	-17
 18800  014D72  2AE3               	incf	plusw1,f,c
 18801  014D74  E311               	bnc	u9660
 18802  014D76  0EF0               	movlw	-16
 18803  014D78  2AE3               	incf	plusw1,f,c
 18804  014D7A  E30E               	bnc	u9660
 18805  014D7C  0EF1               	movlw	-15
 18806  014D7E  2AE3               	incf	plusw1,f,c
 18807  014D80  E30B               	bnc	u9660
 18808  014D82  0EF2               	movlw	-14
 18809  014D84  2AE3               	incf	plusw1,f,c
 18810  014D86  E308               	bnc	u9660
 18811  014D88  0EF3               	movlw	-13
 18812  014D8A  2AE3               	incf	plusw1,f,c
 18813  014D8C  E305               	bnc	u9660
 18814  014D8E  0EF4               	movlw	-12
 18815  014D90  2AE3               	incf	plusw1,f,c
 18816  014D92  E302               	bnc	u9660
 18817  014D94  0EF5               	movlw	-11
 18818  014D96  2AE3               	incf	plusw1,f,c
 18819  014D98                     u9660:
 18820                           
 18821                           ;stkvar	_sign @ sp[(-10)+8]
 18822  014D98  0EFE               	movlw	-2
 18823  014D9A  70E3               	btg	plusw1,0,c
 18824  014D9C                     l9605:
 18825                           
 18826                           ;stkvar	_quotient @ sp[(-10)+0]
 18827  014D9C  0E07               	movlw	7
 18828  014D9E  6E32               	movwf	btemp^0,c
 18829  014DA0  0EF6               	movlw	-10
 18830  014DA2                     u9671:
 18831  014DA2  6AE3               	clrf	plusw1,c
 18832  014DA4  2AE8               	incf	wreg,f,c
 18833  014DA6  0632               	decf	btemp^0,f,c
 18834  014DA8  E2FC               	bc	u9671
 18835                           
 18836                           ;stkvar	_divisor @ sp[(-10)+-16]
 18837  014DAA  0EE6               	movlw	-26
 18838  014DAC  50E3               	movf	plusw1,w,c
 18839  014DAE  E116               	bnz	u9680
 18840  014DB0  0EE7               	movlw	-25
 18841  014DB2  50E3               	movf	plusw1,w,c
 18842  014DB4  E113               	bnz	u9680
 18843  014DB6  0EE8               	movlw	-24
 18844  014DB8  50E3               	movf	plusw1,w,c
 18845  014DBA  E110               	bnz	u9680
 18846  014DBC  0EE9               	movlw	-23
 18847  014DBE  50E3               	movf	plusw1,w,c
 18848  014DC0  E10D               	bnz	u9680
 18849  014DC2  0EEA               	movlw	-22
 18850  014DC4  50E3               	movf	plusw1,w,c
 18851  014DC6  E10A               	bnz	u9680
 18852  014DC8  0EEB               	movlw	-21
 18853  014DCA  50E3               	movf	plusw1,w,c
 18854  014DCC  E107               	bnz	u9680
 18855  014DCE  0EEC               	movlw	-20
 18856  014DD0  50E3               	movf	plusw1,w,c
 18857  014DD2  E104               	bnz	u9680
 18858  014DD4  0EED               	movlw	-19
 18859  014DD6  50E3               	movf	plusw1,w,c
 18860  014DD8  B4D8               	btfsc	status,2,c
 18861  014DDA  D088               	goto	u9710
 18862  014DDC                     u9680:
 18863                           
 18864                           ;stkvar	_counter @ sp[(-10)+9]
 18865  014DDC  0EFF               	movlw	-1
 18866  014DDE  6AE3               	clrf	plusw1,c
 18867  014DE0  D012               	goto	L18
 18868  014DE2                     l9611:
 18869                           
 18870                           ;stkvar	_divisor @ sp[(-10)+-16]
 18871  014DE2  90D8               	bcf	status,0,c
 18872  014DE4  0EE6               	movlw	-26
 18873  014DE6  36E3               	rlcf	plusw1,f,c
 18874  014DE8  0EE7               	movlw	-25
 18875  014DEA  36E3               	rlcf	plusw1,f,c
 18876  014DEC  0EE8               	movlw	-24
 18877  014DEE  36E3               	rlcf	plusw1,f,c
 18878  014DF0  0EE9               	movlw	-23
 18879  014DF2  36E3               	rlcf	plusw1,f,c
 18880  014DF4  0EEA               	movlw	-22
 18881  014DF6  36E3               	rlcf	plusw1,f,c
 18882  014DF8  0EEB               	movlw	-21
 18883  014DFA  36E3               	rlcf	plusw1,f,c
 18884  014DFC  0EEC               	movlw	-20
 18885  014DFE  36E3               	rlcf	plusw1,f,c
 18886  014E00  0EED               	movlw	-19
 18887  014E02  36E3               	rlcf	plusw1,f,c
 18888                           
 18889                           ;stkvar	_counter @ sp[(-10)+9]
 18890  014E04  0EFF               	movlw	-1
 18891  014E06                     L18:
 18892  014E06  2AE3               	incf	plusw1,f,c
 18893                           
 18894                           ;stkvar	_divisor @ sp[(-10)+-16]
 18895  014E08  0EED               	movlw	-19
 18896  014E0A  AEE3               	btfss	plusw1,7,c
 18897  014E0C  D7EA               	goto	l9611
 18898  014E0E                     u9690:
 18899                           
 18900                           ;stkvar	_quotient @ sp[(-10)+0]
 18901  014E0E  90D8               	bcf	status,0,c
 18902  014E10  0EF6               	movlw	-10
 18903  014E12  36E3               	rlcf	plusw1,f,c
 18904  014E14  0EF7               	movlw	-9
 18905  014E16  36E3               	rlcf	plusw1,f,c
 18906  014E18  0EF8               	movlw	-8
 18907  014E1A  36E3               	rlcf	plusw1,f,c
 18908  014E1C  0EF9               	movlw	-7
 18909  014E1E  36E3               	rlcf	plusw1,f,c
 18910  014E20  0EFA               	movlw	-6
 18911  014E22  36E3               	rlcf	plusw1,f,c
 18912  014E24  0EFB               	movlw	-5
 18913  014E26  36E3               	rlcf	plusw1,f,c
 18914  014E28  0EFC               	movlw	-4
 18915  014E2A  36E3               	rlcf	plusw1,f,c
 18916  014E2C  0EFD               	movlw	-3
 18917  014E2E  36E3               	rlcf	plusw1,f,c
 18918                           
 18919                           ;stkvar	_divisor @ sp[(-10)+-16]
 18920                           ;stkvar	_dividend @ sp[(-10)+-8]
 18921  014E30  50E1               	movf	fsr1l,w,c
 18922  014E32  0FEE               	addlw	-18
 18923  014E34  6ED9               	movwf	fsr2l,c
 18924  014E36  50E2               	movf	fsr1h,w,c
 18925  014E38  6EDA               	movwf	fsr2h,c
 18926  014E3A  0EFF               	movlw	255
 18927  014E3C  22DA               	addwfc	fsr2h,f,c
 18928  014E3E  0EE6               	movlw	-26
 18929  014E40  50E3               	movf	plusw1,w,c
 18930  014E42  5CDE               	subwf	postinc2,w,c
 18931  014E44  0EE7               	movlw	-25
 18932  014E46  50E3               	movf	plusw1,w,c
 18933  014E48  58DE               	subwfb	postinc2,w,c
 18934  014E4A  0EE8               	movlw	-24
 18935  014E4C  50E3               	movf	plusw1,w,c
 18936  014E4E  58DE               	subwfb	postinc2,w,c
 18937  014E50  0EE9               	movlw	-23
 18938  014E52  50E3               	movf	plusw1,w,c
 18939  014E54  58DE               	subwfb	postinc2,w,c
 18940  014E56  0EEA               	movlw	-22
 18941  014E58  50E3               	movf	plusw1,w,c
 18942  014E5A  58DE               	subwfb	postinc2,w,c
 18943  014E5C  0EEB               	movlw	-21
 18944  014E5E  50E3               	movf	plusw1,w,c
 18945  014E60  58DE               	subwfb	postinc2,w,c
 18946  014E62  0EEC               	movlw	-20
 18947  014E64  50E3               	movf	plusw1,w,c
 18948  014E66  58DE               	subwfb	postinc2,w,c
 18949  014E68  0EED               	movlw	-19
 18950  014E6A  50E3               	movf	plusw1,w,c
 18951  014E6C  58DE               	subwfb	postinc2,w,c
 18952  014E6E  A0D8               	btfss	status,0,c
 18953  014E70  D021               	goto	l9623
 18954                           
 18955                           ;stkvar	_divisor @ sp[(-10)+-16]
 18956                           ;stkvar	_dividend @ sp[(-10)+-8]
 18957  014E72  50E1               	movf	fsr1l,w,c
 18958  014E74  0FEE               	addlw	-18
 18959  014E76  6ED9               	movwf	fsr2l,c
 18960  014E78  50E2               	movf	fsr1h,w,c
 18961  014E7A  6EDA               	movwf	fsr2h,c
 18962  014E7C  0EFF               	movlw	255
 18963  014E7E  22DA               	addwfc	fsr2h,f,c
 18964  014E80  0EE6               	movlw	-26
 18965  014E82  50E3               	movf	plusw1,w,c
 18966  014E84  5EDE               	subwf	postinc2,f,c
 18967  014E86  0EE7               	movlw	-25
 18968  014E88  50E3               	movf	plusw1,w,c
 18969  014E8A  5ADE               	subwfb	postinc2,f,c
 18970  014E8C  0EE8               	movlw	-24
 18971  014E8E  50E3               	movf	plusw1,w,c
 18972  014E90  5ADE               	subwfb	postinc2,f,c
 18973  014E92  0EE9               	movlw	-23
 18974  014E94  50E3               	movf	plusw1,w,c
 18975  014E96  5ADE               	subwfb	postinc2,f,c
 18976  014E98  0EEA               	movlw	-22
 18977  014E9A  50E3               	movf	plusw1,w,c
 18978  014E9C  5ADE               	subwfb	postinc2,f,c
 18979  014E9E  0EEB               	movlw	-21
 18980  014EA0  50E3               	movf	plusw1,w,c
 18981  014EA2  5ADE               	subwfb	postinc2,f,c
 18982  014EA4  0EEC               	movlw	-20
 18983  014EA6  50E3               	movf	plusw1,w,c
 18984  014EA8  5ADE               	subwfb	postinc2,f,c
 18985  014EAA  0EED               	movlw	-19
 18986  014EAC  50E3               	movf	plusw1,w,c
 18987  014EAE  5ADE               	subwfb	postinc2,f,c
 18988                           
 18989                           ;stkvar	_quotient @ sp[(-10)+0]
 18990  014EB0  0EF6               	movlw	-10
 18991  014EB2  80E3               	bsf	plusw1,0,c
 18992  014EB4                     l9623:
 18993                           
 18994                           ;stkvar	_divisor @ sp[(-10)+-16]
 18995  014EB4  90D8               	bcf	status,0,c
 18996  014EB6  0EED               	movlw	-19
 18997  014EB8  32E3               	rrcf	plusw1,f,c
 18998  014EBA  0EEC               	movlw	-20
 18999  014EBC  32E3               	rrcf	plusw1,f,c
 19000  014EBE  0EEB               	movlw	-21
 19001  014EC0  32E3               	rrcf	plusw1,f,c
 19002  014EC2  0EEA               	movlw	-22
 19003  014EC4  32E3               	rrcf	plusw1,f,c
 19004  014EC6  0EE9               	movlw	-23
 19005  014EC8  32E3               	rrcf	plusw1,f,c
 19006  014ECA  0EE8               	movlw	-24
 19007  014ECC  32E3               	rrcf	plusw1,f,c
 19008  014ECE  0EE7               	movlw	-25
 19009  014ED0  32E3               	rrcf	plusw1,f,c
 19010  014ED2  0EE6               	movlw	-26
 19011  014ED4  32E3               	rrcf	plusw1,f,c
 19012                           
 19013                           ;stkvar	_counter @ sp[(-10)+9]
 19014  014ED6  0EFF               	movlw	-1
 19015  014ED8  50E3               	movf	plusw1,w,c
 19016  014EDA  6E32               	movwf	btemp^0,c
 19017  014EDC  0E01               	movlw	1
 19018  014EDE  5E32               	subwf	btemp^0,f,c
 19019  014EE0  0EFF               	movlw	-1
 19020  014EE2  0060  F0CB  FFE3   	movff	btemp,plusw1
 19021  014EE8  A4D8               	btfss	status,2,c
 19022  014EEA  D791               	goto	u9690
 19023  014EEC                     u9710:
 19024                           
 19025                           ;stkvar	_sign @ sp[(-10)+8]
 19026  014EEC  0EFE               	movlw	-2
 19027  014EEE  50E3               	movf	plusw1,w,c
 19028  014EF0  B4D8               	btfsc	status,2,c
 19029  014EF2  D025               	goto	u9730
 19030                           
 19031                           ;stkvar	_quotient @ sp[(-10)+0]
 19032                           ;stkvar	_quotient @ sp[(-10)+0]
 19033  014EF4  0EF6               	movlw	-10
 19034  014EF6  6CE3               	negf	plusw1,c
 19035  014EF8  0EF7               	movlw	-9
 19036  014EFA  1EE3               	comf	plusw1,f,c
 19037  014EFC  0EF8               	movlw	-8
 19038  014EFE  1EE3               	comf	plusw1,f,c
 19039  014F00  0EF9               	movlw	-7
 19040  014F02  1EE3               	comf	plusw1,f,c
 19041  014F04  0EFA               	movlw	-6
 19042  014F06  1EE3               	comf	plusw1,f,c
 19043  014F08  0EFB               	movlw	-5
 19044  014F0A  1EE3               	comf	plusw1,f,c
 19045  014F0C  0EFC               	movlw	-4
 19046  014F0E  1EE3               	comf	plusw1,f,c
 19047  014F10  0EFD               	movlw	-3
 19048  014F12  1EE3               	comf	plusw1,f,c
 19049  014F14  E314               	bnc	u9730
 19050  014F16  0EF7               	movlw	-9
 19051  014F18  2AE3               	incf	plusw1,f,c
 19052  014F1A  E311               	bnc	u9730
 19053  014F1C  0EF8               	movlw	-8
 19054  014F1E  2AE3               	incf	plusw1,f,c
 19055  014F20  E30E               	bnc	u9730
 19056  014F22  0EF9               	movlw	-7
 19057  014F24  2AE3               	incf	plusw1,f,c
 19058  014F26  E30B               	bnc	u9730
 19059  014F28  0EFA               	movlw	-6
 19060  014F2A  2AE3               	incf	plusw1,f,c
 19061  014F2C  E308               	bnc	u9730
 19062  014F2E  0EFB               	movlw	-5
 19063  014F30  2AE3               	incf	plusw1,f,c
 19064  014F32  E305               	bnc	u9730
 19065  014F34  0EFC               	movlw	-4
 19066  014F36  2AE3               	incf	plusw1,f,c
 19067  014F38  E302               	bnc	u9730
 19068  014F3A  0EFD               	movlw	-3
 19069  014F3C  2AE3               	incf	plusw1,f,c
 19070  014F3E                     u9730:
 19071                           
 19072                           ;stkvar	_quotient @ sp[(-10)+0]
 19073  014F3E  0EF6               	movlw	246
 19074  014F40  24E1               	addwf	fsr1l,w,c
 19075  014F42  6ED9               	movwf	fsr2l,c
 19076  014F44  0EFF               	movlw	255
 19077  014F46  20E2               	addwfc	fsr1h,w,c
 19078  014F48  6EDA               	movwf	fsr2h,c
 19079                           
 19080                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19081  014F4A  0E08               	movlw	8
 19082  014F4C  6E32               	movwf	btemp^0,c
 19083  014F4E  0EEE               	movlw	-18
 19084  014F50                     us974999:
 19085  014F50  006F FF7B FFE3     	movff	postinc2,plusw1
 19086  014F56  28E8               	incf	wreg,w,c
 19087  014F58  2E32               	decfsz	btemp^0,f,c
 19088  014F5A  D7FA               	bra	us974999
 19089                           
 19090                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19091  014F5C  0EF6               	movlw	246
 19092  014F5E  26E1               	addwf	fsr1l,f,c
 19093  014F60  0EFF               	movlw	255
 19094  014F62  22E2               	addwfc	fsr1h,f,c
 19095  014F64  0012               	return		;funcret
 19096  014F66                     __end_of___aodiv:
 19097                           	opt callstack 0
 19098                           
 19099 ;; *************** function _ctoa *****************
 19100 ;; Defined at:
 19101 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19104 ;;		 -> f(6), NULL(0), 
 19105 ;;  c               1  [STACK] unsigned char 
 19106 ;; Auto vars:     Size  Location     Type
 19107 ;;  w               2  [STACK] int 
 19108 ;;  l               2    0        int 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  2  [STACK] int 
 19111 ;; Registers used:
 19112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/5
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19122 ;;Total ram usage:        0 bytes
 19123 ;; Hardware stack levels used:    1
 19124 ;; Hardware stack levels required when called:   11
 19125 ;; This function calls:
 19126 ;;		_pad
 19127 ;; This function is called by:
 19128 ;;		_vfpfcnvrt
 19129 ;; This function uses a reentrant model
 19130 ;;
 19131                           
 19132                           	psect	text65
 19133  0171D6                     __ptext65:
 19134                           	opt callstack 0
 19135  0171D6                     _ctoa:
 19136                           	opt callstack 0
 19137                           
 19138                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19139  0171D6  52E6               	movf	postinc1,f,c
 19140  0171D8  52E6               	movf	postinc1,f,c
 19141                           
 19142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19143                           
 19144                           ;incstack = 0
 19145  0171DA  501B               	movf	_width^0,w,c
 19146  0171DC  101C               	iorwf	(_width+1)^0,w,c
 19147  0171DE  A4D8               	btfss	status,2,c
 19148  0171E0  D009               	goto	l10181
 19149                           
 19150                           ;stkvar	_w @ sp[(-2)+0]
 19151  0171E2  0EFE               	movlw	-2
 19152  0171E4  0060  F06F  FFE3   	movff	_width,plusw1
 19153  0171EA  0EFF               	movlw	-1
 19154  0171EC  0060  F073  FFE3   	movff	_width+1,plusw1
 19155  0171F2  D016               	goto	l10183
 19156  0171F4                     l10181:
 19157  0171F4  0EFF               	movlw	255
 19158  0171F6  6E3C               	movwf	(btemp+10)^0,c
 19159  0171F8  0EFF               	movlw	255
 19160  0171FA  6E3D               	movwf	(btemp+11)^0,c
 19161  0171FC  0060  F06C  F03A   	movff	_width,btemp+8
 19162  017202  0060  F070  F03B   	movff	_width+1,btemp+9
 19163  017208  503C               	movf	(btemp+10)^0,w,c
 19164  01720A  263A               	addwf	(btemp+8)^0,f,c
 19165  01720C  503D               	movf	(btemp+11)^0,w,c
 19166  01720E  223B               	addwfc	(btemp+9)^0,f,c
 19167                           
 19168                           ;stkvar	_w @ sp[(-2)+0]
 19169  017210  0EFE               	movlw	-2
 19170  017212  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19171  017218  0EFF               	movlw	-1
 19172  01721A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19173  017220                     l10183:
 19174                           
 19175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19176                           ;stkvar	_c @ sp[(-2)+-3]
 19177  017220  0EFB               	movlw	-5
 19178  017222  006F FF8C  F240    	movff	plusw1,_dbuf
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19181  017228  0102               	movlb	2	; () banked
 19182  01722A  6B41               	clrf	(_dbuf+1)& (0+255),b
 19183                           
 19184                           ; BSR set to: 2
 19185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19186                           ;stkvar	_w @ sp[(-2)+0]
 19187  01722C  0EFE               	movlw	-2
 19188  01722E  006F FF8F FFE6     	movff	plusw1,postinc1
 19189  017234  006F FF8F FFE6     	movff	plusw1,postinc1
 19190  01723A  0E40               	movlw	low _dbuf
 19191  01723C  6EE6               	movwf	postinc1,c
 19192  01723E  0E02               	movlw	high _dbuf
 19193  017240  6EE6               	movwf	postinc1,c
 19194                           
 19195                           ;stkvar	_fp @ sp[(-6)+-2]
 19196  017242  0EF8               	movlw	-8
 19197  017244  006F FF8F FFE6     	movff	plusw1,postinc1
 19198  01724A  006F FF8F FFE6     	movff	plusw1,postinc1
 19199  017250  EC11  F0B3         	call	_pad	;wreg free
 19200                           
 19201                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19202  017254  0EFB               	movlw	251
 19203  017256  26E1               	addwf	fsr1l,f,c
 19204  017258  0EFF               	movlw	255
 19205  01725A  22E2               	addwfc	fsr1h,f,c
 19206  01725C  0012               	return		;funcret
 19207  01725E                     __end_of_ctoa:
 19208                           	opt callstack 0
 19209                           
 19210 ;; *************** function _pad *****************
 19211 ;; Defined at:
 19212 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19215 ;;		 -> f(6), NULL(0), 
 19216 ;;  buf             2  [STACK] PTR unsigned char 
 19217 ;;		 -> dbuf(80), 
 19218 ;;  p               2  [STACK] int 
 19219 ;; Auto vars:     Size  Location     Type
 19220 ;;  w               2  [STACK] int 
 19221 ;;  i               2  [STACK] int 
 19222 ;; Return value:  Size  Location     Type
 19223 ;;                  2  [STACK] int 
 19224 ;; Registers used:
 19225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19226 ;; Tracked objects:
 19227 ;;		On entry : 0/2
 19228 ;;		On exit  : 0/0
 19229 ;;		Unchanged: 0/0
 19230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19235 ;;Total ram usage:        0 bytes
 19236 ;; Hardware stack levels used:    1
 19237 ;; Hardware stack levels required when called:   10
 19238 ;; This function calls:
 19239 ;;		_fputc
 19240 ;;		_fputs
 19241 ;;		_strlen
 19242 ;; This function is called by:
 19243 ;;		_ctoa
 19244 ;;		_dtoa
 19245 ;;		_efgtoa
 19246 ;;		_xtoa
 19247 ;; This function uses a reentrant model
 19248 ;;
 19249                           
 19250                           	psect	text66
 19251  016622                     __ptext66:
 19252                           	opt callstack 0
 19253  016622                     _pad:
 19254                           	opt callstack 0
 19255                           
 19256                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19257  016622  52E6               	movf	postinc1,f,c
 19258  016624  52E6               	movf	postinc1,f,c
 19259  016626  52E6               	movf	postinc1,f,c
 19260  016628  52E6               	movf	postinc1,f,c
 19261                           
 19262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19263                           
 19264                           ;incstack = 0
 19265  01662A  A01F               	btfss	_flags^0,0,c
 19266  01662C  D010               	goto	l9463
 19267                           
 19268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19269                           ;stkvar	_fp @ sp[(-4)+-2]
 19270  01662E  0EFA               	movlw	-6
 19271  016630  006F FF8F FFE6     	movff	plusw1,postinc1
 19272  016636  006F FF8F FFE6     	movff	plusw1,postinc1
 19273                           
 19274                           ;stkvar	_buf @ sp[(-6)+-4]
 19275  01663C  0EF6               	movlw	-10
 19276  01663E  006F FF8F FFE6     	movff	plusw1,postinc1
 19277  016644  006F FF8F FFE6     	movff	plusw1,postinc1
 19278  01664A  EC0D  F0B8         	call	_fputs	;wreg free
 19279  01664E                     l9463:
 19280                           
 19281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19282                           ;stkvar	_p @ sp[(-4)+-6]
 19283  01664E  0EF7               	movlw	-9
 19284  016650  BEE3               	btfsc	plusw1,7,c
 19285  016652  D011               	goto	l9467
 19286                           
 19287                           ;stkvar	_p @ sp[(-4)+-6]
 19288                           ;stkvar	_w @ sp[(-4)+0]
 19289  016654  0EF6               	movlw	-10
 19290  016656  006F FF8C  F032    	movff	plusw1,btemp
 19291  01665C  0EFC               	movlw	-4
 19292  01665E  0060  F0CB  FFE3   	movff	btemp,plusw1
 19293  016664  0EF7               	movlw	-9
 19294  016666  006F FF8C  F032    	movff	plusw1,btemp
 19295  01666C  0EFD               	movlw	-3
 19296  01666E  0060  F0CB  FFE3   	movff	btemp,plusw1
 19297  016674  D004               	goto	l1808
 19298  016676                     l9467:
 19299                           
 19300                           ;stkvar	_w @ sp[(-4)+0]
 19301  016676  0EFC               	movlw	-4
 19302  016678  6AE3               	clrf	plusw1,c
 19303  01667A  0EFD               	movlw	-3
 19304  01667C  6AE3               	clrf	plusw1,c
 19305  01667E                     l1808:
 19306                           
 19307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19308                           ;stkvar	_i @ sp[(-4)+2]
 19309  01667E  0EFE               	movlw	-2
 19310  016680  6AE3               	clrf	plusw1,c
 19311  016682  0EFF               	movlw	-1
 19312  016684  6AE3               	clrf	plusw1,c
 19313                           
 19314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19315  016686  D01E               	goto	l9473
 19316  016688                     l9469:
 19317                           
 19318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19319                           ;stkvar	_fp @ sp[(-4)+-2]
 19320  016688  0EFA               	movlw	-6
 19321  01668A  006F FF8F FFE6     	movff	plusw1,postinc1
 19322  016690  006F FF8F FFE6     	movff	plusw1,postinc1
 19323  016696  0E20               	movlw	32
 19324  016698  6EE6               	movwf	postinc1,c
 19325  01669A  0E00               	movlw	0
 19326  01669C  6EE6               	movwf	postinc1,c
 19327  01669E  ECF3  F0B1         	call	_fputc	;wreg free
 19328                           
 19329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19330                           ;stkvar	_i @ sp[(-4)+2]
 19331  0166A2  0EFE               	movlw	-2
 19332  0166A4  50E3               	movf	plusw1,w,c
 19333  0166A6  0F01               	addlw	1
 19334  0166A8  6E32               	movwf	btemp^0,c
 19335  0166AA  0EFE               	movlw	-2
 19336  0166AC  0060  F0CB  FFE3   	movff	btemp,plusw1
 19337  0166B2  6A32               	clrf	btemp^0,c
 19338  0166B4  0EFF               	movlw	-1
 19339  0166B6  50E3               	movf	plusw1,w,c
 19340  0166B8  2032               	addwfc	btemp^0,w,c
 19341  0166BA  6E32               	movwf	btemp^0,c
 19342  0166BC  0EFF               	movlw	-1
 19343  0166BE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19344  0166C4                     l9473:
 19345                           
 19346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19347                           ;stkvar	_w @ sp[(-4)+0]
 19348                           ;stkvar	_i @ sp[(-4)+2]
 19349  0166C4  50E1               	movf	fsr1l,w,c
 19350  0166C6  0FFE               	addlw	-2
 19351  0166C8  6ED9               	movwf	fsr2l,c
 19352  0166CA  50E2               	movf	fsr1h,w,c
 19353  0166CC  6EDA               	movwf	fsr2h,c
 19354  0166CE  0EFF               	movlw	255
 19355  0166D0  22DA               	addwfc	fsr2h,f,c
 19356  0166D2  0EFC               	movlw	-4
 19357  0166D4  50E3               	movf	plusw1,w,c
 19358  0166D6  5CDE               	subwf	postinc2,w,c
 19359  0166D8  50DE               	movf	postinc2,w,c
 19360  0166DA  0A80               	xorlw	128
 19361  0166DC  6E32               	movwf	btemp^0,c
 19362  0166DE  0EFD               	movlw	-3
 19363  0166E0  50E3               	movf	plusw1,w,c
 19364  0166E2  0A80               	xorlw	128
 19365  0166E4  5832               	subwfb	btemp^0,w,c
 19366  0166E6  A0D8               	btfss	status,0,c
 19367  0166E8  D7CF               	goto	l9469
 19368                           
 19369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19370  0166EA  B01F               	btfsc	_flags^0,0,c
 19371  0166EC  D010               	goto	l9477
 19372                           
 19373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19374                           ;stkvar	_fp @ sp[(-4)+-2]
 19375  0166EE  0EFA               	movlw	-6
 19376  0166F0  006F FF8F FFE6     	movff	plusw1,postinc1
 19377  0166F6  006F FF8F FFE6     	movff	plusw1,postinc1
 19378                           
 19379                           ;stkvar	_buf @ sp[(-6)+-4]
 19380  0166FC  0EF6               	movlw	-10
 19381  0166FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19382  016704  006F FF8F FFE6     	movff	plusw1,postinc1
 19383  01670A  EC0D  F0B8         	call	_fputs	;wreg free
 19384  01670E                     l9477:
 19385                           
 19386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19387                           ;stkvar	_w @ sp[(-4)+0]
 19388                           ;stkvar	_buf @ sp[(-4)+-4]
 19389  01670E  0EF8               	movlw	-8
 19390  016710  006F FF8F FFE6     	movff	plusw1,postinc1
 19391  016716  006F FF8F FFE6     	movff	plusw1,postinc1
 19392  01671C  ECBC  F0B7         	call	_strlen	;wreg free
 19393  016720  0EFC               	movlw	-4
 19394  016722  50E3               	movf	plusw1,w,c
 19395  016724  2632               	addwf	btemp^0,f,c
 19396  016726  0EFD               	movlw	-3
 19397  016728  50E3               	movf	plusw1,w,c
 19398  01672A  2233               	addwfc	(btemp+1)^0,f,c
 19399                           
 19400                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19401  01672C  0EF6               	movlw	246
 19402  01672E  26E1               	addwf	fsr1l,f,c
 19403  016730  0EFF               	movlw	255
 19404  016732  22E2               	addwfc	fsr1h,f,c
 19405  016734  0012               	return		;funcret
 19406  016736                     __end_of_pad:
 19407                           	opt callstack 0
 19408                           
 19409 ;; *************** function _strlen *****************
 19410 ;; Defined at:
 19411 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19412 ;; Parameters:    Size  Location     Type
 19413 ;;  s               2  [STACK] PTR const unsigned char 
 19414 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19415 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19416 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19417 ;; Auto vars:     Size  Location     Type
 19418 ;;  a               2  [STACK] PTR const unsigned char 
 19419 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19420 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19421 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19422 ;; Return value:  Size  Location     Type
 19423 ;;                  2  [STACK] unsigned int 
 19424 ;; Registers used:
 19425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19426 ;; Tracked objects:
 19427 ;;		On entry : 0/0
 19428 ;;		On exit  : 0/0
 19429 ;;		Unchanged: 0/0
 19430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19435 ;;Total ram usage:        0 bytes
 19436 ;; Hardware stack levels used:    1
 19437 ;; Hardware stack levels required when called:    6
 19438 ;; This function calls:
 19439 ;;		Nothing
 19440 ;; This function is called by:
 19441 ;;		_eaDogM_WriteString
 19442 ;;		_pad
 19443 ;;		_stoa
 19444 ;; This function uses a reentrant model
 19445 ;;
 19446                           
 19447                           	psect	text67
 19448  016F78                     __ptext67:
 19449                           	opt callstack 0
 19450  016F78                     _strlen:
 19451                           	opt callstack 0
 19452                           
 19453                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19454  016F78  52E6               	movf	postinc1,f,c
 19455  016F7A  52E6               	movf	postinc1,f,c
 19456                           
 19457                           ;stkvar	_s @ sp[(-2)+-2]
 19458                           
 19459                           ;incstack = 0
 19460  016F7C  0EFC               	movlw	-4
 19461  016F7E  006F FF8C  F03C    	movff	plusw1,btemp+10
 19462  016F84  0EFD               	movlw	-3
 19463  016F86  006F FF8C  F03D    	movff	plusw1,btemp+11
 19464                           
 19465                           ;stkvar	_a @ sp[(-2)+0]
 19466  016F8C  0EFF               	movlw	-1
 19467  016F8E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19468  016F94  0EFE               	movlw	-2
 19469  016F96  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19470  016F9C  D011               	goto	l9217
 19471  016F9E                     l9215:
 19472                           
 19473                           ;stkvar	_s @ sp[(-2)+-2]
 19474  016F9E  0EFC               	movlw	-4
 19475  016FA0  50E3               	movf	plusw1,w,c
 19476  016FA2  0F01               	addlw	1
 19477  016FA4  6E32               	movwf	btemp^0,c
 19478  016FA6  0EFC               	movlw	-4
 19479  016FA8  0060  F0CB  FFE3   	movff	btemp,plusw1
 19480  016FAE  6A32               	clrf	btemp^0,c
 19481  016FB0  0EFD               	movlw	-3
 19482  016FB2  50E3               	movf	plusw1,w,c
 19483  016FB4  2032               	addwfc	btemp^0,w,c
 19484  016FB6  6E32               	movwf	btemp^0,c
 19485  016FB8  0EFD               	movlw	-3
 19486  016FBA  0060  F0CB  FFE3   	movff	btemp,plusw1
 19487  016FC0                     l9217:
 19488                           
 19489                           ;stkvar	_s @ sp[(-2)+-2]
 19490  016FC0  0EFC               	movlw	-4
 19491  016FC2  006F FF8F FFF6     	movff	plusw1,tblptrl
 19492  016FC8  0EFD               	movlw	-3
 19493  016FCA  006F FF8F FFF7     	movff	plusw1,tblptrh
 19494  016FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 19495  016FD2  6EF8               	movwf	tblptru,c
 19496  016FD4  0E1F               	movlw	(high __ramtop+-1)
 19497  016FD6  64F7               	cpfsgt	tblptrh,c
 19498  016FD8  D003               	bra	u8807
 19499  016FDA  0008               	tblrd		*
 19500  016FDC  50F5               	movf	tablat,w,c
 19501  016FDE  D007               	bra	u8800
 19502  016FE0                     u8807:
 19503  016FE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19504  016FE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19505  016FEC  50EF               	movf	indf0,w,c
 19506  016FEE                     u8800:
 19507  016FEE  0900               	iorlw	0
 19508  016FF0  A4D8               	btfss	status,2,c
 19509  016FF2  D7D5               	goto	l9215
 19510                           
 19511                           ;stkvar	_a @ sp[(-2)+0]
 19512                           ;stkvar	_s @ sp[(-2)+-2]
 19513  016FF4  0EFC               	movlw	-4
 19514  016FF6  006F FF8C  F032    	movff	plusw1,btemp
 19515  016FFC  0EFD               	movlw	-3
 19516  016FFE  006F FF8C  F033    	movff	plusw1,btemp+1
 19517  017004  0EFE               	movlw	-2
 19518  017006  50E3               	movf	plusw1,w,c
 19519  017008  5E32               	subwf	btemp^0,f,c
 19520  01700A  0EFF               	movlw	-1
 19521  01700C  50E3               	movf	plusw1,w,c
 19522  01700E  5A33               	subwfb	(btemp+1)^0,f,c
 19523                           
 19524                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19525  017010  52E5               	movf	postdec1,f,c
 19526  017012  52E5               	movf	postdec1,f,c
 19527  017014  52E5               	movf	postdec1,f,c
 19528  017016  52E5               	movf	postdec1,f,c
 19529  017018  0012               	return		;funcret
 19530  01701A                     __end_of_strlen:
 19531                           	opt callstack 0
 19532                           
 19533 ;; *************** function _fputs *****************
 19534 ;; Defined at:
 19535 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  s               2  [STACK] PTR const unsigned char 
 19538 ;;		 -> dbuf(80), 
 19539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19540 ;;		 -> f(6), NULL(0), 
 19541 ;; Auto vars:     Size  Location     Type
 19542 ;;  i               2  [STACK] int 
 19543 ;;  c               1  [STACK] unsigned char 
 19544 ;; Return value:  Size  Location     Type
 19545 ;;                  2  [STACK] int 
 19546 ;; Registers used:
 19547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19548 ;; Tracked objects:
 19549 ;;		On entry : 0/2
 19550 ;;		On exit  : 0/0
 19551 ;;		Unchanged: 0/0
 19552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19557 ;;Total ram usage:        0 bytes
 19558 ;; Hardware stack levels used:    1
 19559 ;; Hardware stack levels required when called:    9
 19560 ;; This function calls:
 19561 ;;		_fputc
 19562 ;; This function is called by:
 19563 ;;		_pad
 19564 ;; This function uses a reentrant model
 19565 ;;
 19566                           
 19567                           	psect	text68
 19568  01701A                     __ptext68:
 19569                           	opt callstack 0
 19570  01701A                     _fputs:
 19571                           	opt callstack 0
 19572                           
 19573                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19574  01701A  52E6               	movf	postinc1,f,c
 19575  01701C  52E6               	movf	postinc1,f,c
 19576  01701E  52E6               	movf	postinc1,f,c
 19577                           
 19578                           ;stkvar	_i @ sp[(-3)+0]
 19579                           
 19580                           ;incstack = 0
 19581  017020  0EFD               	movlw	-3
 19582  017022  6AE3               	clrf	plusw1,c
 19583  017024  0EFE               	movlw	-2
 19584  017026  6AE3               	clrf	plusw1,c
 19585  017028  D01F               	goto	l9229
 19586  01702A                     l9225:
 19587                           
 19588                           ;stkvar	_fp @ sp[(-3)+-4]
 19589  01702A  0EF9               	movlw	-7
 19590  01702C  006F FF8F FFE6     	movff	plusw1,postinc1
 19591  017032  006F FF8F FFE6     	movff	plusw1,postinc1
 19592                           
 19593                           ;stkvar	_c @ sp[(-5)+2]
 19594  017038  0EFD               	movlw	-3
 19595  01703A  50E3               	movf	plusw1,w,c
 19596  01703C  6EE6               	movwf	postinc1,c
 19597  01703E  0E00               	movlw	0
 19598  017040  6EE6               	movwf	postinc1,c
 19599  017042  ECF3  F0B1         	call	_fputc	;wreg free
 19600                           
 19601                           ;stkvar	_i @ sp[(-3)+0]
 19602  017046  0EFD               	movlw	-3
 19603  017048  50E3               	movf	plusw1,w,c
 19604  01704A  0F01               	addlw	1
 19605  01704C  6E32               	movwf	btemp^0,c
 19606  01704E  0EFD               	movlw	-3
 19607  017050  0060  F0CB  FFE3   	movff	btemp,plusw1
 19608  017056  6A32               	clrf	btemp^0,c
 19609  017058  0EFE               	movlw	-2
 19610  01705A  50E3               	movf	plusw1,w,c
 19611  01705C  2032               	addwfc	btemp^0,w,c
 19612  01705E  6E32               	movwf	btemp^0,c
 19613  017060  0EFE               	movlw	-2
 19614  017062  0060  F0CB  FFE3   	movff	btemp,plusw1
 19615  017068                     l9229:
 19616                           
 19617                           ;stkvar	_i @ sp[(-3)+0]
 19618  017068  0EFD               	movlw	-3
 19619  01706A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19620  017070  0EFE               	movlw	-2
 19621  017072  006F FF8C  F03D    	movff	plusw1,btemp+11
 19622                           
 19623                           ;stkvar	_s @ sp[(-3)+-2]
 19624  017078  0EFB               	movlw	-5
 19625  01707A  006F FF8C  F03A    	movff	plusw1,btemp+8
 19626  017080  0EFC               	movlw	-4
 19627  017082  006F FF8C  F03B    	movff	plusw1,btemp+9
 19628  017088  503C               	movf	(btemp+10)^0,w,c
 19629  01708A  243A               	addwf	(btemp+8)^0,w,c
 19630  01708C  6ED9               	movwf	fsr2l,c
 19631  01708E  503D               	movf	(btemp+11)^0,w,c
 19632  017090  203B               	addwfc	(btemp+9)^0,w,c
 19633  017092  6EDA               	movwf	fsr2h,c
 19634  017094  50DF               	movf	indf2,w,c
 19635  017096  6E3D               	movwf	(btemp+11)^0,c
 19636                           
 19637                           ;stkvar	_c @ sp[(-3)+2]
 19638  017098  0EFF               	movlw	-1
 19639  01709A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19640  0170A0  0EFF               	movlw	-1
 19641  0170A2  50E3               	movf	plusw1,w,c
 19642  0170A4  A4D8               	btfss	status,2,c
 19643  0170A6  D7C1               	goto	l9225
 19644                           
 19645                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19646  0170A8  0EF9               	movlw	249
 19647  0170AA  26E1               	addwf	fsr1l,f,c
 19648  0170AC  0EFF               	movlw	255
 19649  0170AE  22E2               	addwfc	fsr1h,f,c
 19650  0170B0  0012               	return		;funcret
 19651  0170B2                     __end_of_fputs:
 19652                           	opt callstack 0
 19653                           
 19654 ;; *************** function _fputc *****************
 19655 ;; Defined at:
 19656 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;  c               2  [STACK] int 
 19659 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19660 ;;		 -> f(6), NULL(0), 
 19661 ;; Auto vars:     Size  Location     Type
 19662 ;;		None
 19663 ;; Return value:  Size  Location     Type
 19664 ;;                  2  [STACK] int 
 19665 ;; Registers used:
 19666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19667 ;; Tracked objects:
 19668 ;;		On entry : 0/5
 19669 ;;		On exit  : 0/0
 19670 ;;		Unchanged: 0/0
 19671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19676 ;;Total ram usage:        0 bytes
 19677 ;; Hardware stack levels used:    1
 19678 ;; Hardware stack levels required when called:    8
 19679 ;; This function calls:
 19680 ;;		_putch
 19681 ;; This function is called by:
 19682 ;;		_pad
 19683 ;;		_stoa
 19684 ;;		_vfpfcnvrt
 19685 ;;		_fputs
 19686 ;; This function uses a reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text69
 19690  0163E6                     __ptext69:
 19691                           	opt callstack 0
 19692  0163E6                     _fputc:
 19693                           	opt callstack 13
 19694                           
 19695                           ;stkvar	_fp @ sp[(0)+-4]
 19696                           
 19697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19698                           ;incstack = 0
 19699  0163E6  0EFC               	movlw	-4
 19700  0163E8  006F FF8C  F032    	movff	plusw1,btemp
 19701  0163EE  0EFD               	movlw	-3
 19702  0163F0  50E3               	movf	plusw1,w,c
 19703  0163F2  1032               	iorwf	btemp^0,w,c
 19704  0163F4  B4D8               	btfsc	status,2,c
 19705  0163F6  D009               	goto	u8770
 19706                           
 19707                           ;stkvar	_fp @ sp[(0)+-4]
 19708  0163F8  0EFC               	movlw	-4
 19709  0163FA  006F FF8C  F032    	movff	plusw1,btemp
 19710  016400  0EFD               	movlw	-3
 19711  016402  50E3               	movf	plusw1,w,c
 19712  016404  1032               	iorwf	btemp^0,w,c
 19713  016406  A4D8               	btfss	status,2,c
 19714  016408  D006               	goto	l9203
 19715  01640A                     u8770:
 19716                           
 19717                           ;stkvar	_c @ sp[(0)+-2]
 19718  01640A  0EFE               	movlw	-2
 19719  01640C  50E3               	movf	plusw1,w,c
 19720  01640E  6EE6               	movwf	postinc1,c
 19721  016410  ECE2  F0C1         	call	_putch	;wreg free
 19722  016414  D075               	goto	l2826
 19723  016416                     l9203:
 19724                           
 19725                           ;stkvar	_fp @ sp[(0)+-4]
 19726  016416  0EFC               	movlw	-4
 19727  016418  006F FF8C  F03C    	movff	plusw1,btemp+10
 19728  01641E  0EFD               	movlw	-3
 19729  016420  006F FF8C  F03D    	movff	plusw1,btemp+11
 19730  016426  0E04               	movlw	4
 19731  016428  243C               	addwf	(btemp+10)^0,w,c
 19732  01642A  6ED9               	movwf	fsr2l,c
 19733  01642C  0E00               	movlw	0
 19734  01642E  203D               	addwfc	(btemp+11)^0,w,c
 19735  016430  6EDA               	movwf	fsr2h,c
 19736  016432  50DE               	movf	postinc2,w,c
 19737  016434  10DE               	iorwf	postinc2,w,c
 19738  016436  B4D8               	btfsc	status,2,c
 19739  016438  D026               	goto	u8790
 19740                           
 19741                           ;stkvar	_fp @ sp[(0)+-4]
 19742  01643A  0EFC               	movlw	-4
 19743  01643C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19744  016442  0EFD               	movlw	-3
 19745  016444  006F FF8C  F03D    	movff	plusw1,btemp+11
 19746  01644A  0E04               	movlw	4
 19747  01644C  243C               	addwf	(btemp+10)^0,w,c
 19748  01644E  6ED9               	movwf	fsr2l,c
 19749  016450  0E00               	movlw	0
 19750  016452  203D               	addwfc	(btemp+11)^0,w,c
 19751  016454  6EDA               	movwf	fsr2h,c
 19752                           
 19753                           ;stkvar	_fp @ sp[(0)+-4]
 19754  016456  0EFC               	movlw	-4
 19755  016458  006F FF8C  F03C    	movff	plusw1,btemp+10
 19756  01645E  0EFD               	movlw	-3
 19757  016460  006F FF8C  F03D    	movff	plusw1,btemp+11
 19758  016466  0E02               	movlw	2
 19759  016468  243C               	addwf	(btemp+10)^0,w,c
 19760  01646A  6EE9               	movwf	fsr0l,c
 19761  01646C  0E00               	movlw	0
 19762  01646E  203D               	addwfc	(btemp+11)^0,w,c
 19763  016470  6EEA               	movwf	fsr0h,c
 19764  016472  50DE               	movf	postinc2,w,c
 19765  016474  5CEE               	subwf	postinc0,w,c
 19766  016476  50EE               	movf	postinc0,w,c
 19767  016478  0A80               	xorlw	128
 19768  01647A  6E32               	movwf	btemp^0,c
 19769  01647C  50DE               	movf	postinc2,w,c
 19770  01647E  0A80               	xorlw	128
 19771  016480  5832               	subwfb	btemp^0,w,c
 19772  016482  B0D8               	btfsc	status,0,c
 19773  016484  D03D               	goto	l2826
 19774  016486                     u8790:
 19775                           
 19776                           ;stkvar	_c @ sp[(0)+-2]
 19777                           ;stkvar	_fp @ sp[(0)+-4]
 19778  016486  0EFC               	movlw	-4
 19779  016488  006F FF8C  F03C    	movff	plusw1,btemp+10
 19780  01648E  0EFD               	movlw	-3
 19781  016490  006F FF8C  F03D    	movff	plusw1,btemp+11
 19782  016496  0E02               	movlw	2
 19783  016498  243C               	addwf	(btemp+10)^0,w,c
 19784  01649A  6ED9               	movwf	fsr2l,c
 19785  01649C  0E00               	movlw	0
 19786  01649E  203D               	addwfc	(btemp+11)^0,w,c
 19787  0164A0  6EDA               	movwf	fsr2h,c
 19788  0164A2  006F FF78  F03C    	movff	postinc2,btemp+10
 19789  0164A8  006F FF74  F03D    	movff	postdec2,btemp+11
 19790                           
 19791                           ;stkvar	_fp @ sp[(0)+-4]
 19792  0164AE  0EFC               	movlw	-4
 19793  0164B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 19794  0164B6  0EFD               	movlw	-3
 19795  0164B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 19796  0164BE  006F FF78  F03A    	movff	postinc2,btemp+8
 19797  0164C4  006F FF74  F03B    	movff	postdec2,btemp+9
 19798  0164CA  503C               	movf	(btemp+10)^0,w,c
 19799  0164CC  243A               	addwf	(btemp+8)^0,w,c
 19800  0164CE  6ED9               	movwf	fsr2l,c
 19801  0164D0  503D               	movf	(btemp+11)^0,w,c
 19802  0164D2  203B               	addwfc	(btemp+9)^0,w,c
 19803  0164D4  6EDA               	movwf	fsr2h,c
 19804  0164D6  0EFE               	movlw	-2
 19805  0164D8  006F FF8F FFDF     	movff	plusw1,indf2
 19806                           
 19807                           ;stkvar	_fp @ sp[(0)+-4]
 19808  0164DE  0EFC               	movlw	-4
 19809  0164E0  006F FF8C  F03C    	movff	plusw1,btemp+10
 19810  0164E6  0EFD               	movlw	-3
 19811  0164E8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19812  0164EE  0E02               	movlw	2
 19813  0164F0  243C               	addwf	(btemp+10)^0,w,c
 19814  0164F2  6ED9               	movwf	fsr2l,c
 19815  0164F4  0E00               	movlw	0
 19816  0164F6  203D               	addwfc	(btemp+11)^0,w,c
 19817  0164F8  6EDA               	movwf	fsr2h,c
 19818  0164FA  2ADE               	incf	postinc2,f,c
 19819  0164FC  0E00               	movlw	0
 19820  0164FE  22DD               	addwfc	postdec2,f,c
 19821  016500                     l2826:
 19822                           
 19823                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19824  016500  52E5               	movf	postdec1,f,c
 19825  016502  52E5               	movf	postdec1,f,c
 19826  016504  52E5               	movf	postdec1,f,c
 19827  016506  52E5               	movf	postdec1,f,c
 19828  016508  0012               	return		;funcret
 19829  01650A                     __end_of_fputc:
 19830                           	opt callstack 0
 19831                           
 19832 ;; *************** function _putch *****************
 19833 ;; Defined at:
 19834 ;;		line 155 in file "eadog.c"
 19835 ;; Parameters:    Size  Location     Type
 19836 ;;  c               1  [STACK] unsigned char 
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;		None
 19839 ;; Return value:  Size  Location     Type
 19840 ;;                  1  [STACK] void 
 19841 ;; Registers used:
 19842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19843 ;; Tracked objects:
 19844 ;;		On entry : 0/5
 19845 ;;		On exit  : 0/0
 19846 ;;		Unchanged: 0/0
 19847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19852 ;;Total ram usage:        0 bytes
 19853 ;; Hardware stack levels used:    1
 19854 ;; Hardware stack levels required when called:    7
 19855 ;; This function calls:
 19856 ;;		_ringBufS_put_dma
 19857 ;; This function is called by:
 19858 ;;		_fputc
 19859 ;; This function uses a reentrant model
 19860 ;;
 19861                           
 19862                           	psect	text70
 19863  0183C4                     __ptext70:
 19864                           	opt callstack 0
 19865  0183C4                     _putch:
 19866                           	opt callstack 13
 19867                           
 19868                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19869                           ;stkvar	_c @ sp[(0)+-1]
 19870                           
 19871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19872                           ;incstack = 0
 19873  0183C4  0EFF               	movlw	-1
 19874  0183C6  50E3               	movf	plusw1,w,c
 19875  0183C8  6EE6               	movwf	postinc1,c
 19876  0183CA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 19877  0183D0  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 19878  0183D6  ECC0  F0B6         	call	_ringBufS_put_dma	;wreg free
 19879                           
 19880                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19881  0183DA  52E5               	movf	postdec1,f,c
 19882  0183DC  0012               	return		;funcret
 19883  0183DE                     __end_of_putch:
 19884                           	opt callstack 0
 19885                           
 19886 ;; *************** function _ringBufS_put_dma *****************
 19887 ;; Defined at:
 19888 ;;		line 67 in file "ringbufs.c"
 19889 ;; Parameters:    Size  Location     Type
 19890 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19891 ;;		 -> ring_buf1(67), 
 19892 ;;  c               1  [STACK] const unsigned char 
 19893 ;; Auto vars:     Size  Location     Type
 19894 ;;		None
 19895 ;; Return value:  Size  Location     Type
 19896 ;;                  1  [STACK] void 
 19897 ;; Registers used:
 19898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19899 ;; Tracked objects:
 19900 ;;		On entry : 0/5
 19901 ;;		On exit  : 0/0
 19902 ;;		Unchanged: 0/0
 19903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19908 ;;Total ram usage:        0 bytes
 19909 ;; Hardware stack levels used:    1
 19910 ;; Hardware stack levels required when called:    6
 19911 ;; This function calls:
 19912 ;;		Nothing
 19913 ;; This function is called by:
 19914 ;;		_putch
 19915 ;; This function uses a reentrant model
 19916 ;;
 19917                           
 19918                           	psect	text71
 19919  016D80                     __ptext71:
 19920                           	opt callstack 0
 19921  016D80                     _ringBufS_put_dma:
 19922                           	opt callstack 13
 19923                           
 19924                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19925                           ;stkvar	__this @ sp[(0)+-2]
 19926                           
 19927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19928                           ;incstack = 0
 19929  016D80  0EFE               	movlw	-2
 19930  016D82  006F FF8C  F03C    	movff	plusw1,btemp+10
 19931  016D88  0EFF               	movlw	-1
 19932  016D8A  006F FF8C  F03D    	movff	plusw1,btemp+11
 19933  016D90  0E42               	movlw	66
 19934  016D92  243C               	addwf	(btemp+10)^0,w,c
 19935  016D94  6ED9               	movwf	fsr2l,c
 19936  016D96  0E00               	movlw	0
 19937  016D98  203D               	addwfc	(btemp+11)^0,w,c
 19938  016D9A  6EDA               	movwf	fsr2h,c
 19939  016D9C  0E40               	movlw	64
 19940  016D9E  60DF               	cpfslt	indf2,c
 19941  016DA0  D040               	goto	l1471
 19942                           
 19943                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19944                           ;stkvar	_c @ sp[(0)+-3]
 19945                           ;stkvar	__this @ sp[(0)+-2]
 19946  016DA2  0EFE               	movlw	-2
 19947  016DA4  006F FF8C  F03C    	movff	plusw1,btemp+10
 19948  016DAA  0EFF               	movlw	-1
 19949  016DAC  006F FF8C  F03D    	movff	plusw1,btemp+11
 19950  016DB2  0E40               	movlw	64
 19951  016DB4  243C               	addwf	(btemp+10)^0,w,c
 19952  016DB6  6ED9               	movwf	fsr2l,c
 19953  016DB8  0E00               	movlw	0
 19954  016DBA  203D               	addwfc	(btemp+11)^0,w,c
 19955  016DBC  6EDA               	movwf	fsr2h,c
 19956  016DBE  50DF               	movf	indf2,w,c
 19957  016DC0  6E3D               	movwf	(btemp+11)^0,c
 19958                           
 19959                           ;stkvar	__this @ sp[(0)+-2]
 19960  016DC2  0EFE               	movlw	-2
 19961  016DC4  006F FF8C  F03A    	movff	plusw1,btemp+8
 19962  016DCA  0EFF               	movlw	-1
 19963  016DCC  006F FF8C  F03B    	movff	plusw1,btemp+9
 19964  016DD2  503D               	movf	(btemp+11)^0,w,c
 19965  016DD4  243A               	addwf	(btemp+8)^0,w,c
 19966  016DD6  6ED9               	movwf	fsr2l,c
 19967  016DD8  0E00               	movlw	0
 19968  016DDA  203B               	addwfc	(btemp+9)^0,w,c
 19969  016DDC  6EDA               	movwf	fsr2h,c
 19970  016DDE  0EFD               	movlw	-3
 19971  016DE0  006F FF8F FFDF     	movff	plusw1,indf2
 19972                           
 19973                           ;ringbufs.c: 71:   ++_this->head;
 19974                           ;stkvar	__this @ sp[(0)+-2]
 19975  016DE6  0EFE               	movlw	-2
 19976  016DE8  006F FF8C  F03C    	movff	plusw1,btemp+10
 19977  016DEE  0EFF               	movlw	-1
 19978  016DF0  006F FF8C  F03D    	movff	plusw1,btemp+11
 19979  016DF6  0E40               	movlw	64
 19980  016DF8  243C               	addwf	(btemp+10)^0,w,c
 19981  016DFA  6ED9               	movwf	fsr2l,c
 19982  016DFC  0E00               	movlw	0
 19983  016DFE  203D               	addwfc	(btemp+11)^0,w,c
 19984  016E00  6EDA               	movwf	fsr2h,c
 19985  016E02  2ADF               	incf	indf2,f,c
 19986                           
 19987                           ;ringbufs.c: 72:   ++_this->count;
 19988                           ;stkvar	__this @ sp[(0)+-2]
 19989  016E04  0EFE               	movlw	-2
 19990  016E06  006F FF8C  F03C    	movff	plusw1,btemp+10
 19991  016E0C  0EFF               	movlw	-1
 19992  016E0E  006F FF8C  F03D    	movff	plusw1,btemp+11
 19993  016E14  0E42               	movlw	66
 19994  016E16  243C               	addwf	(btemp+10)^0,w,c
 19995  016E18  6ED9               	movwf	fsr2l,c
 19996  016E1A  0E00               	movlw	0
 19997  016E1C  203D               	addwfc	(btemp+11)^0,w,c
 19998  016E1E  6EDA               	movwf	fsr2h,c
 19999  016E20  2ADF               	incf	indf2,f,c
 20000  016E22                     l1471:
 20001                           
 20002                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20003  016E22  52E5               	movf	postdec1,f,c
 20004  016E24  52E5               	movf	postdec1,f,c
 20005  016E26  52E5               	movf	postdec1,f,c
 20006  016E28  0012               	return		;funcret
 20007  016E2A                     __end_of_ringBufS_put_dma:
 20008                           	opt callstack 0
 20009                           
 20010 ;; *************** function _atoi *****************
 20011 ;; Defined at:
 20012 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20013 ;; Parameters:    Size  Location     Type
 20014 ;;  s               2  [STACK] PTR const unsigned char 
 20015 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20016 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20017 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20018 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20019 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20020 ;;		 -> STR_10(14), STR_9(14), STR_8(17), STR_6(15), 
 20021 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20022 ;; Auto vars:     Size  Location     Type
 20023 ;;  n               2  [STACK] int 
 20024 ;;  neg             2  [STACK] int 
 20025 ;; Return value:  Size  Location     Type
 20026 ;;                  2  [STACK] int 
 20027 ;; Registers used:
 20028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20029 ;; Tracked objects:
 20030 ;;		On entry : 0/5
 20031 ;;		On exit  : 0/0
 20032 ;;		Unchanged: 0/0
 20033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20038 ;;Total ram usage:        0 bytes
 20039 ;; Hardware stack levels used:    1
 20040 ;; Hardware stack levels required when called:    7
 20041 ;; This function calls:
 20042 ;;		_isdigit
 20043 ;;		_isspace
 20044 ;; This function is called by:
 20045 ;;		_vfpfcnvrt
 20046 ;; This function uses a reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text72
 20050  014F66                     __ptext72:
 20051                           	opt callstack 0
 20052  014F66                     _atoi:
 20053                           	opt callstack 0
 20054                           
 20055                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20056  014F66  0E09               	movlw	9
 20057  014F68  26E1               	addwf	fsr1l,f,c
 20058  014F6A  0E00               	movlw	0
 20059  014F6C  22E2               	addwfc	fsr1h,f,c
 20060                           
 20061                           ;stkvar	_n @ sp[(-9)+5]
 20062                           
 20063                           ;incstack = 0
 20064  014F6E  0EFC               	movlw	-4
 20065  014F70  6AE3               	clrf	plusw1,c
 20066  014F72  0EFD               	movlw	-3
 20067  014F74  6AE3               	clrf	plusw1,c
 20068                           
 20069                           ;stkvar	_neg @ sp[(-9)+7]
 20070  014F76  0EFE               	movlw	-2
 20071  014F78  6AE3               	clrf	plusw1,c
 20072  014F7A  0EFF               	movlw	-1
 20073  014F7C  6AE3               	clrf	plusw1,c
 20074  014F7E  D011               	goto	l10689
 20075  014F80                     l10687:
 20076                           
 20077                           ;stkvar	_s @ sp[(-9)+-2]
 20078  014F80  0EF5               	movlw	-11
 20079  014F82  50E3               	movf	plusw1,w,c
 20080  014F84  0F01               	addlw	1
 20081  014F86  6E32               	movwf	btemp^0,c
 20082  014F88  0EF5               	movlw	-11
 20083  014F8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 20084  014F90  6A32               	clrf	btemp^0,c
 20085  014F92  0EF6               	movlw	-10
 20086  014F94  50E3               	movf	plusw1,w,c
 20087  014F96  2032               	addwfc	btemp^0,w,c
 20088  014F98  6E32               	movwf	btemp^0,c
 20089  014F9A  0EF6               	movlw	-10
 20090  014F9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 20091  014FA2                     l10689:
 20092                           
 20093                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20094  014FA2  0EFB               	movlw	-5
 20095  014FA4  6AE3               	clrf	plusw1,c
 20096  014FA6  2AE3               	incf	plusw1,f,c
 20097                           
 20098                           ;stkvar	_s @ sp[(-9)+-2]
 20099  014FA8  50E1               	movf	fsr1l,w,c
 20100  014FAA  0FF5               	addlw	-11
 20101  014FAC  6ED9               	movwf	fsr2l,c
 20102  014FAE  50E2               	movf	fsr1h,w,c
 20103  014FB0  6EDA               	movwf	fsr2h,c
 20104  014FB2  0EFF               	movlw	255
 20105  014FB4  22DA               	addwfc	fsr2h,f,c
 20106  014FB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20107  014FBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20108  014FC2                     	if	0	;tblptru may be non-zero
 20109  014FC2                     	endif
 20110  014FC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20111  014FC2  0E00               	movlw	low (__mediumconst shr (0+16))
 20112  014FC4  6EF8               	movwf	tblptru,c
 20113  014FC6                     	endif
 20114  014FC6  0008               	tblrd		*
 20115  014FC8  50F5               	movf	tablat,w,c
 20116  014FCA  0A20               	xorlw	32
 20117  014FCC  B4D8               	btfsc	status,2,c
 20118  014FCE  D023               	goto	l10697
 20119  014FD0  0EF7               	movlw	247
 20120  014FD2  6E3C               	movwf	(btemp+10)^0,c
 20121  014FD4  0EFF               	movlw	255
 20122  014FD6  6E3D               	movwf	(btemp+11)^0,c
 20123                           
 20124                           ;stkvar	_s @ sp[(-9)+-2]
 20125  014FD8  50E1               	movf	fsr1l,w,c
 20126  014FDA  0FF5               	addlw	-11
 20127  014FDC  6ED9               	movwf	fsr2l,c
 20128  014FDE  50E2               	movf	fsr1h,w,c
 20129  014FE0  6EDA               	movwf	fsr2h,c
 20130  014FE2  0EFF               	movlw	255
 20131  014FE4  22DA               	addwfc	fsr2h,f,c
 20132  014FE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 20133  014FEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 20134  014FF2                     	if	0	;tblptru may be non-zero
 20135  014FF2                     	endif
 20136  014FF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20137  014FF2  0E00               	movlw	low (__mediumconst shr (0+16))
 20138  014FF4  6EF8               	movwf	tblptru,c
 20139  014FF6                     	endif
 20140  014FF6  0008               	tblrd		*
 20141  014FF8  50F5               	movf	tablat,w,c
 20142  014FFA  6E3A               	movwf	(btemp+8)^0,c
 20143  014FFC  6A3B               	clrf	(btemp+9)^0,c
 20144  014FFE  503C               	movf	(btemp+10)^0,w,c
 20145  015000  263A               	addwf	(btemp+8)^0,f,c
 20146  015002  503D               	movf	(btemp+11)^0,w,c
 20147  015004  223B               	addwfc	(btemp+9)^0,f,c
 20148  015006  503B               	movf	(btemp+9)^0,w,c
 20149  015008  E104               	bnz	u11660
 20150  01500A  0E05               	movlw	5
 20151  01500C  5C3A               	subwf	(btemp+8)^0,w,c
 20152  01500E  A0D8               	btfss	status,0,c
 20153  015010  D002               	goto	l10697
 20154  015012                     u11660:
 20155                           
 20156                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20157  015012  0EFB               	movlw	-5
 20158  015014  6AE3               	clrf	plusw1,c
 20159  015016                     l10697:
 20160                           
 20161                           ;stkvar	_atoi$4907 @ sp[(-9)+4]
 20162  015016  0EFB               	movlw	-5
 20163  015018  50E3               	movf	plusw1,w,c
 20164  01501A  6E3C               	movwf	(btemp+10)^0,c
 20165  01501C  6A3D               	clrf	(btemp+11)^0,c
 20166                           
 20167                           ;stkvar	_atoi$4906 @ sp[(-9)+2]
 20168  01501E  0EF9               	movlw	-7
 20169  015020  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20170  015026  0EFA               	movlw	-6
 20171  015028  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20172                           
 20173                           ;stkvar	_atoi$4906 @ sp[(-9)+2]
 20174  01502E  0EF9               	movlw	-7
 20175  015030  006F FF8C  F032    	movff	plusw1,btemp
 20176  015036  0EFA               	movlw	-6
 20177  015038  50E3               	movf	plusw1,w,c
 20178  01503A  1032               	iorwf	btemp^0,w,c
 20179  01503C  B4D8               	btfsc	status,2,c
 20180  01503E  D01F               	goto	l10707
 20181  015040  D79F               	goto	l10687
 20182  015042                     l10703:
 20183  015042  0E01               	movlw	1
 20184  015044  6E3C               	movwf	(btemp+10)^0,c
 20185  015046  0E00               	movlw	0
 20186  015048  6E3D               	movwf	(btemp+11)^0,c
 20187                           
 20188                           ;stkvar	_neg @ sp[(-9)+7]
 20189  01504A  0EFE               	movlw	-2
 20190  01504C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20191  015052  0EFF               	movlw	-1
 20192  015054  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20193  01505A                     l10705:
 20194                           
 20195                           ;stkvar	_s @ sp[(-9)+-2]
 20196  01505A  0EF5               	movlw	-11
 20197  01505C  50E3               	movf	plusw1,w,c
 20198  01505E  0F01               	addlw	1
 20199  015060  6E32               	movwf	btemp^0,c
 20200  015062  0EF5               	movlw	-11
 20201  015064  0060  F0CB  FFE3   	movff	btemp,plusw1
 20202  01506A  6A32               	clrf	btemp^0,c
 20203  01506C  0EF6               	movlw	-10
 20204  01506E  50E3               	movf	plusw1,w,c
 20205  015070  2032               	addwfc	btemp^0,w,c
 20206  015072  6E32               	movwf	btemp^0,c
 20207  015074  0EF6               	movlw	-10
 20208  015076  0060  F0CB  FFE3   	movff	btemp,plusw1
 20209  01507C  D053               	goto	l10713
 20210  01507E                     l10707:
 20211                           
 20212                           ;stkvar	_s @ sp[(-9)+-2]
 20213  01507E  50E1               	movf	fsr1l,w,c
 20214  015080  0FF5               	addlw	-11
 20215  015082  6ED9               	movwf	fsr2l,c
 20216  015084  50E2               	movf	fsr1h,w,c
 20217  015086  6EDA               	movwf	fsr2h,c
 20218  015088  0EFF               	movlw	255
 20219  01508A  22DA               	addwfc	fsr2h,f,c
 20220  01508C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20221  015092  006F FF77 FFF7     	movff	postdec2,tblptrh
 20222  015098                     	if	0	;tblptru may be non-zero
 20223  015098                     	endif
 20224  015098                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20225  015098  0E00               	movlw	low (__mediumconst shr (0+16))
 20226  01509A  6EF8               	movwf	tblptru,c
 20227  01509C                     	endif
 20228  01509C  0008               	tblrd		*
 20229  01509E  50F5               	movf	tablat,w,c
 20230  0150A0  6E3C               	movwf	(btemp+10)^0,c
 20231  0150A2  6A3D               	clrf	(btemp+11)^0,c
 20232                           
 20233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20234                           ; Switch size 1, requested type "simple"
 20235                           ; Number of cases is 1, Range of values is 0 to 0
 20236                           ; switch strategies available:
 20237                           ; Name         Instructions Cycles
 20238                           ; simple_byte            4     3 (average)
 20239                           ;	Chosen strategy is simple_byte
 20240  0150A4  503D               	movf	(btemp+11)^0,w,c
 20241  0150A6  0A00               	xorlw	0	; case 0
 20242  0150A8  A4D8               	btfss	status,2,c
 20243  0150AA  D03C               	goto	l10713
 20244                           
 20245                           ; Switch size 1, requested type "simple"
 20246                           ; Number of cases is 2, Range of values is 43 to 45
 20247                           ; switch strategies available:
 20248                           ; Name         Instructions Cycles
 20249                           ; simple_byte            7     4 (average)
 20250                           ;	Chosen strategy is simple_byte
 20251  0150AC  503C               	movf	(btemp+10)^0,w,c
 20252  0150AE  0A2B               	xorlw	43	; case 43
 20253  0150B0  B4D8               	btfsc	status,2,c
 20254  0150B2  D7D3               	goto	l10705
 20255  0150B4  0A06               	xorlw	6	; case 45
 20256  0150B6  B4D8               	btfsc	status,2,c
 20257  0150B8  D7C4               	goto	l10703
 20258  0150BA  D034               	goto	l10713
 20259  0150BC                     l10709:
 20260                           
 20261                           ;stkvar	_n @ sp[(-9)+5]
 20262  0150BC  0EFC               	movlw	-4
 20263  0150BE  006F FF8C  F03C    	movff	plusw1,btemp+10
 20264  0150C4  0EFD               	movlw	-3
 20265  0150C6  006F FF8C  F03D    	movff	plusw1,btemp+11
 20266  0150CC  0E0A               	movlw	10
 20267  0150CE  023C               	mulwf	(btemp+10)^0,c
 20268  0150D0  006F FFCC  F03A    	movff	prodl,btemp+8
 20269  0150D6  006F FFD0  F03B    	movff	prodh,btemp+9
 20270  0150DC  023D               	mulwf	(btemp+11)^0,c
 20271  0150DE  50F3               	movf	prodl,w,c
 20272  0150E0  263B               	addwf	(btemp+9)^0,f,c
 20273                           
 20274                           ;stkvar	_s @ sp[(-9)+-2]
 20275  0150E2  50E1               	movf	fsr1l,w,c
 20276  0150E4  0FF5               	addlw	-11
 20277  0150E6  6ED9               	movwf	fsr2l,c
 20278  0150E8  50E2               	movf	fsr1h,w,c
 20279  0150EA  6EDA               	movwf	fsr2h,c
 20280  0150EC  0EFF               	movlw	255
 20281  0150EE  22DA               	addwfc	fsr2h,f,c
 20282  0150F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20283  0150F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20284  0150FC                     	if	0	;tblptru may be non-zero
 20285  0150FC                     	endif
 20286  0150FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20287  0150FC  0E00               	movlw	low (__mediumconst shr (0+16))
 20288  0150FE  6EF8               	movwf	tblptru,c
 20289  015100                     	endif
 20290  015100  0008               	tblrd		*
 20291  015102  50F5               	movf	tablat,w,c
 20292  015104  5E3A               	subwf	(btemp+8)^0,f,c
 20293  015106  0E00               	movlw	0
 20294  015108  5A3B               	subwfb	(btemp+9)^0,f,c
 20295  01510A  0E30               	movlw	48
 20296  01510C  263A               	addwf	(btemp+8)^0,f,c
 20297  01510E  0E00               	movlw	0
 20298  015110  223B               	addwfc	(btemp+9)^0,f,c
 20299                           
 20300                           ;stkvar	_n @ sp[(-9)+5]
 20301  015112  0EFC               	movlw	-4
 20302  015114  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20303  01511A  0EFD               	movlw	-3
 20304  01511C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20305  015122  D79B               	goto	l10705
 20306  015124                     l10713:
 20307  015124  0ED0               	movlw	208
 20308  015126  6E3C               	movwf	(btemp+10)^0,c
 20309  015128  0EFF               	movlw	255
 20310  01512A  6E3D               	movwf	(btemp+11)^0,c
 20311                           
 20312                           ;stkvar	_s @ sp[(-9)+-2]
 20313  01512C  50E1               	movf	fsr1l,w,c
 20314  01512E  0FF5               	addlw	-11
 20315  015130  6ED9               	movwf	fsr2l,c
 20316  015132  50E2               	movf	fsr1h,w,c
 20317  015134  6EDA               	movwf	fsr2h,c
 20318  015136  0EFF               	movlw	255
 20319  015138  22DA               	addwfc	fsr2h,f,c
 20320  01513A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20321  015140  006F FF77 FFF7     	movff	postdec2,tblptrh
 20322  015146                     	if	0	;tblptru may be non-zero
 20323  015146                     	endif
 20324  015146                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20325  015146  0E00               	movlw	low (__mediumconst shr (0+16))
 20326  015148  6EF8               	movwf	tblptru,c
 20327  01514A                     	endif
 20328  01514A  0008               	tblrd		*
 20329  01514C  50F5               	movf	tablat,w,c
 20330  01514E  6E3A               	movwf	(btemp+8)^0,c
 20331  015150  6A3B               	clrf	(btemp+9)^0,c
 20332  015152  503C               	movf	(btemp+10)^0,w,c
 20333  015154  263A               	addwf	(btemp+8)^0,f,c
 20334  015156  503D               	movf	(btemp+11)^0,w,c
 20335  015158  223B               	addwfc	(btemp+9)^0,f,c
 20336  01515A  503B               	movf	(btemp+9)^0,w,c
 20337  01515C  E106               	bnz	u11680
 20338  01515E  0E0A               	movlw	10
 20339  015160  5C3A               	subwf	(btemp+8)^0,w,c
 20340  015162  B0D8               	btfsc	status,0,c
 20341  015164  D002               	goto	u11680
 20342  015166  0E01               	movlw	1
 20343  015168  D001               	goto	u11690
 20344  01516A                     u11680:
 20345  01516A  0E00               	movlw	0
 20346  01516C                     u11690:
 20347  01516C  6E3C               	movwf	(btemp+10)^0,c
 20348  01516E  6A3D               	clrf	(btemp+11)^0,c
 20349                           
 20350                           ;stkvar	_atoi$4908 @ sp[(-9)+0]
 20351  015170  0EF7               	movlw	-9
 20352  015172  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20353  015178  0EF8               	movlw	-8
 20354  01517A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20355                           
 20356                           ;stkvar	_atoi$4908 @ sp[(-9)+0]
 20357  015180  0EF7               	movlw	-9
 20358  015182  006F FF8C  F032    	movff	plusw1,btemp
 20359  015188  0EF8               	movlw	-8
 20360  01518A  50E3               	movf	plusw1,w,c
 20361  01518C  1032               	iorwf	btemp^0,w,c
 20362  01518E  A4D8               	btfss	status,2,c
 20363  015190  D795               	goto	l10709
 20364                           
 20365                           ;stkvar	_neg @ sp[(-9)+7]
 20366  015192  0EFE               	movlw	-2
 20367  015194  006F FF8C  F032    	movff	plusw1,btemp
 20368  01519A  0EFF               	movlw	-1
 20369  01519C  50E3               	movf	plusw1,w,c
 20370  01519E  1032               	iorwf	btemp^0,w,c
 20371  0151A0  A4D8               	btfss	status,2,c
 20372  0151A2  D00E               	goto	l10723
 20373                           
 20374                           ;stkvar	_n @ sp[(-9)+5]
 20375  0151A4  0EFC               	movlw	-4
 20376  0151A6  006F FF8C  F032    	movff	plusw1,btemp
 20377  0151AC  1E32               	comf	btemp^0,f,c
 20378  0151AE  0EFD               	movlw	-3
 20379  0151B0  006F FF8C  F033    	movff	plusw1,btemp+1
 20380  0151B6  1E33               	comf	(btemp+1)^0,f,c
 20381  0151B8  2A32               	incf	btemp^0,f,c
 20382  0151BA  B4D8               	btfsc	status,2,c
 20383  0151BC  2A33               	incf	(btemp+1)^0,f,c
 20384  0151BE  D008               	goto	l2762
 20385  0151C0                     l10723:
 20386                           
 20387                           ;stkvar	_n @ sp[(-9)+5]
 20388  0151C0  0EFC               	movlw	-4
 20389  0151C2  006F FF8C  F032    	movff	plusw1,btemp
 20390  0151C8  0EFD               	movlw	-3
 20391  0151CA  006F FF8C  F033    	movff	plusw1,btemp+1
 20392  0151D0                     l2762:
 20393                           
 20394                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20395  0151D0  0EF5               	movlw	245
 20396  0151D2  26E1               	addwf	fsr1l,f,c
 20397  0151D4  0EFF               	movlw	255
 20398  0151D6  22E2               	addwfc	fsr1h,f,c
 20399  0151D8  0012               	return		;funcret
 20400  0151DA                     __end_of_atoi:
 20401                           	opt callstack 0
 20402                           
 20403 ;; *************** function _isspace *****************
 20404 ;; Defined at:
 20405 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20406 ;; Parameters:    Size  Location     Type
 20407 ;;  c               2  [STACK] int 
 20408 ;; Auto vars:     Size  Location     Type
 20409 ;;		None
 20410 ;; Return value:  Size  Location     Type
 20411 ;;                  2  [STACK] int 
 20412 ;; Registers used:
 20413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20414 ;; Tracked objects:
 20415 ;;		On entry : 0/0
 20416 ;;		On exit  : 0/0
 20417 ;;		Unchanged: 0/0
 20418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20423 ;;Total ram usage:        0 bytes
 20424 ;; Hardware stack levels used:    1
 20425 ;; Hardware stack levels required when called:    6
 20426 ;; This function calls:
 20427 ;;		Nothing
 20428 ;; This function is called by:
 20429 ;;		_atoi
 20430 ;; This function uses a reentrant model
 20431 ;;
 20432                           
 20433                           	psect	text73
 20434  01794C                     __ptext73:
 20435                           	opt callstack 0
 20436  01794C                     _isspace:
 20437                           	opt callstack 0
 20438                           
 20439                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20440  01794C  52E6               	movf	postinc1,f,c
 20441                           
 20442                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20443                           
 20444                           ;incstack = 0
 20445  01794E  0EFF               	movlw	-1
 20446  017950  6AE3               	clrf	plusw1,c
 20447  017952  2AE3               	incf	plusw1,f,c
 20448                           
 20449                           ;stkvar	_c @ sp[(-1)+-2]
 20450  017954  0EFD               	movlw	-3
 20451  017956  006F FF8C  F032    	movff	plusw1,btemp
 20452  01795C  0E20               	movlw	32
 20453  01795E  1832               	xorwf	btemp^0,w,c
 20454  017960  E104               	bnz	u10650
 20455  017962  0EFE               	movlw	-2
 20456  017964  50E3               	movf	plusw1,w,c
 20457  017966  B4D8               	btfsc	status,2,c
 20458  017968  D012               	goto	l10173
 20459  01796A                     u10650:
 20460                           
 20461                           ;stkvar	_c @ sp[(-1)+-2]
 20462  01796A  0EFD               	movlw	-3
 20463  01796C  50E3               	movf	plusw1,w,c
 20464  01796E  0FF7               	addlw	247
 20465  017970  6E3C               	movwf	(btemp+10)^0,c
 20466  017972  0EFE               	movlw	-2
 20467  017974  006F FF8C  F03D    	movff	plusw1,btemp+11
 20468  01797A  0EFF               	movlw	255
 20469  01797C  223D               	addwfc	(btemp+11)^0,f,c
 20470  01797E  503D               	movf	(btemp+11)^0,w,c
 20471  017980  E104               	bnz	u10660
 20472  017982  0E05               	movlw	5
 20473  017984  5C3C               	subwf	(btemp+10)^0,w,c
 20474  017986  A0D8               	btfss	status,0,c
 20475  017988  D002               	goto	l10173
 20476  01798A                     u10660:
 20477                           
 20478                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20479  01798A  0EFF               	movlw	-1
 20480  01798C  6AE3               	clrf	plusw1,c
 20481  01798E                     l10173:
 20482                           
 20483                           ;stkvar	_isspace$4946 @ sp[(-1)+0]
 20484  01798E  0EFF               	movlw	-1
 20485  017990  50E3               	movf	plusw1,w,c
 20486  017992  6E32               	movwf	btemp^0,c
 20487  017994  6A33               	clrf	(btemp+1)^0,c
 20488                           
 20489                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20490  017996  52E5               	movf	postdec1,f,c
 20491  017998  52E5               	movf	postdec1,f,c
 20492  01799A  52E5               	movf	postdec1,f,c
 20493  01799C  0012               	return		;funcret
 20494  01799E                     __end_of_isspace:
 20495                           	opt callstack 0
 20496                           
 20497 ;; *************** function _isdigit *****************
 20498 ;; Defined at:
 20499 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  c               2  [STACK] int 
 20502 ;; Auto vars:     Size  Location     Type
 20503 ;;		None
 20504 ;; Return value:  Size  Location     Type
 20505 ;;                  2  [STACK] int 
 20506 ;; Registers used:
 20507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20508 ;; Tracked objects:
 20509 ;;		On entry : 0/0
 20510 ;;		On exit  : 0/0
 20511 ;;		Unchanged: 0/0
 20512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20517 ;;Total ram usage:        0 bytes
 20518 ;; Hardware stack levels used:    1
 20519 ;; Hardware stack levels required when called:    6
 20520 ;; This function calls:
 20521 ;;		Nothing
 20522 ;; This function is called by:
 20523 ;;		_vfpfcnvrt
 20524 ;;		_atoi
 20525 ;; This function uses a reentrant model
 20526 ;;
 20527                           
 20528                           	psect	text74
 20529  017DF2                     __ptext74:
 20530                           	opt callstack 0
 20531  017DF2                     _isdigit:
 20532                           	opt callstack 18
 20533                           
 20534                           ;stkvar	_c @ sp[(0)+-2]
 20535                           
 20536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20537                           ;incstack = 0
 20538  017DF2  0EFE               	movlw	-2
 20539  017DF4  50E3               	movf	plusw1,w,c
 20540  017DF6  0FD0               	addlw	208
 20541  017DF8  6E3C               	movwf	(btemp+10)^0,c
 20542  017DFA  0EFF               	movlw	-1
 20543  017DFC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20544  017E02  0EFF               	movlw	255
 20545  017E04  223D               	addwfc	(btemp+11)^0,f,c
 20546  017E06  503D               	movf	(btemp+11)^0,w,c
 20547  017E08  E106               	bnz	u9610
 20548  017E0A  0E0A               	movlw	10
 20549  017E0C  5C3C               	subwf	(btemp+10)^0,w,c
 20550  017E0E  B0D8               	btfsc	status,0,c
 20551  017E10  D002               	goto	u9610
 20552  017E12  0E01               	movlw	1
 20553  017E14  D001               	goto	u9620
 20554  017E16                     u9610:
 20555  017E16  0E00               	movlw	0
 20556  017E18                     u9620:
 20557  017E18  6E32               	movwf	btemp^0,c
 20558  017E1A  6A33               	clrf	(btemp+1)^0,c
 20559                           
 20560                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20561  017E1C  52E5               	movf	postdec1,f,c
 20562  017E1E  52E5               	movf	postdec1,f,c
 20563  017E20  0012               	return		;funcret
 20564  017E22                     __end_of_isdigit:
 20565                           	opt callstack 0
 20566                           
 20567 ;; *************** function _set_vterm *****************
 20568 ;; Defined at:
 20569 ;;		line 104 in file "mconfig.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;  vterm           1  [STACK] const unsigned char 
 20572 ;; Auto vars:     Size  Location     Type
 20573 ;;		None
 20574 ;; Return value:  Size  Location     Type
 20575 ;;                  1  [STACK] unsigned char 
 20576 ;; Registers used:
 20577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20578 ;; Tracked objects:
 20579 ;;		On entry : 0/1
 20580 ;;		On exit  : 3F/5
 20581 ;;		Unchanged: 0/0
 20582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20587 ;;Total ram usage:        0 bytes
 20588 ;; Hardware stack levels used:    1
 20589 ;; Hardware stack levels required when called:    6
 20590 ;; This function calls:
 20591 ;;		Nothing
 20592 ;; This function is called by:
 20593 ;;		_main
 20594 ;;		_check_help
 20595 ;; This function uses a reentrant model
 20596 ;;
 20597                           
 20598                           	psect	text75
 20599  0183A8                     __ptext75:
 20600                           	opt callstack 0
 20601  0183A8                     _set_vterm:
 20602                           	opt callstack 24
 20603                           
 20604                           ;mconfig.c: 104: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106
      +                          :  D.vterm = vterm & 0x03;
 20605                           ;stkvar	_vterm @ sp[(0)+-1]
 20606                           
 20607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20608                           ;incstack = 0
 20609  0183A8  0EFF               	movlw	-1
 20610  0183AA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20611  0183B0  0E03               	movlw	3
 20612  0183B2  163D               	andwf	(btemp+11)^0,f,c
 20613  0183B4  0105               	movlb	5	; () banked
 20614  0183B6  51D8               	movf	(_D+216)& (0+255),w,b
 20615  0183B8  183D               	xorwf	(btemp+11)^0,w,c
 20616  0183BA  0BFE               	andlw	-2
 20617  0183BC  183D               	xorwf	(btemp+11)^0,w,c
 20618  0183BE  6FD8               	movwf	(_D+216)& (0+255),b
 20619                           
 20620                           ; BSR set to: 5
 20621                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20622  0183C0  52E5               	movf	postdec1,f,c
 20623  0183C2  0012               	return		;funcret
 20624  0183C4                     __end_of_set_vterm:
 20625                           	opt callstack 0
 20626                           
 20627 ;; *************** function _set_temp_display_help *****************
 20628 ;; Defined at:
 20629 ;;		line 208 in file "mconfig.c"
 20630 ;; Parameters:    Size  Location     Type
 20631 ;;  new_response    1  [STACK] const enum E16501
 20632 ;; Auto vars:     Size  Location     Type
 20633 ;;		None
 20634 ;; Return value:  Size  Location     Type
 20635 ;;                  1  [STACK] enum E16501
 20636 ;; Registers used:
 20637 ;;		wreg, fsr1l, fsr1h
 20638 ;; Tracked objects:
 20639 ;;		On entry : 0/5
 20640 ;;		On exit  : 3F/1
 20641 ;;		Unchanged: 0/0
 20642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20647 ;;Total ram usage:        0 bytes
 20648 ;; Hardware stack levels used:    1
 20649 ;; Hardware stack levels required when called:    6
 20650 ;; This function calls:
 20651 ;;		Nothing
 20652 ;; This function is called by:
 20653 ;;		_check_help
 20654 ;; This function uses a reentrant model
 20655 ;;
 20656                           
 20657                           	psect	text76
 20658  0184A2                     __ptext76:
 20659                           	opt callstack 0
 20660  0184A2                     _set_temp_display_help:
 20661                           	opt callstack 23
 20662                           
 20663                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 20664                           
 20665                           ; BSR set to: 5
 20666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20667                           ;incstack = 0
 20668  0184A2  0101               	movlb	1	; () banked
 20669  0184A4  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20670                           
 20671                           ; BSR set to: 1
 20672                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 20673                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20674  0184A6  0EFF               	movlw	-1
 20675  0184A8  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20676                           
 20677                           ; BSR set to: 1
 20678                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20679  0184AE  52E5               	movf	postdec1,f,c
 20680  0184B0  0012               	return		;funcret
 20681  0184B2                     __end_of_set_temp_display_help:
 20682                           	opt callstack 0
 20683                           
 20684 ;; *************** function _set_display_info *****************
 20685 ;; Defined at:
 20686 ;;		line 197 in file "mconfig.c"
 20687 ;; Parameters:    Size  Location     Type
 20688 ;;  new_response    1  [STACK] const enum E16501
 20689 ;; Auto vars:     Size  Location     Type
 20690 ;;		None
 20691 ;; Return value:  Size  Location     Type
 20692 ;;                  1  [STACK] enum E16986
 20693 ;; Registers used:
 20694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20695 ;; Tracked objects:
 20696 ;;		On entry : 0/39
 20697 ;;		On exit  : 0/0
 20698 ;;		Unchanged: 0/0
 20699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20704 ;;Total ram usage:        0 bytes
 20705 ;; Hardware stack levels used:    1
 20706 ;; Hardware stack levels required when called:    7
 20707 ;; This function calls:
 20708 ;;		_TimerDone
 20709 ;; This function is called by:
 20710 ;;		_main
 20711 ;;		_check_help
 20712 ;; This function uses a reentrant model
 20713 ;;
 20714                           
 20715                           	psect	text77
 20716  018332                     __ptext77:
 20717                           	opt callstack 0
 20718  018332                     _set_display_info:
 20719                           	opt callstack 23
 20720                           
 20721                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 20722                           
 20723                           ; BSR set to: 1
 20724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20725                           ;incstack = 0
 20726  018332  0E07               	movlw	7
 20727  018334  6EE6               	movwf	postinc1,c
 20728  018336  EC13  F0C1         	call	_TimerDone	;wreg free
 20729  01833A  5032               	movf	btemp^0,w,c
 20730  01833C  B4D8               	btfsc	status,2,c
 20731  01833E  D006               	goto	l1608
 20732                           
 20733                           ;mconfig.c: 202:   old_info = V.response.info;
 20734  018340  0101               	movlb	1	; () banked
 20735  018342  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20736                           
 20737                           ; BSR set to: 1
 20738                           ;mconfig.c: 203:   V.response.info = new_response_info;
 20739                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20740  018344  0EFF               	movlw	-1
 20741  018346  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20742  01834C                     l1608:
 20743                           
 20744                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20745  01834C  52E5               	movf	postdec1,f,c
 20746  01834E  0012               	return		;funcret
 20747  018350                     __end_of_set_display_info:
 20748                           	opt callstack 0
 20749                           
 20750 ;; *************** function _mode_lamp_dim *****************
 20751 ;; Defined at:
 20752 ;;		line 13 in file "mconfig.c"
 20753 ;; Parameters:    Size  Location     Type
 20754 ;;  level           2  [STACK] const unsigned short 
 20755 ;; Auto vars:     Size  Location     Type
 20756 ;;		None
 20757 ;; Return value:  Size  Location     Type
 20758 ;;                  1  [STACK] void 
 20759 ;; Registers used:
 20760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20761 ;; Tracked objects:
 20762 ;;		On entry : 0/1
 20763 ;;		On exit  : 0/0
 20764 ;;		Unchanged: 0/0
 20765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20770 ;;Total ram usage:        0 bytes
 20771 ;; Hardware stack levels used:    1
 20772 ;; Hardware stack levels required when called:    7
 20773 ;; This function calls:
 20774 ;;		_PWM8_LoadDutyValue
 20775 ;; This function is called by:
 20776 ;;		_main
 20777 ;;		_check_help
 20778 ;; This function uses a reentrant model
 20779 ;;
 20780                           
 20781                           	psect	text78
 20782  0183FA                     __ptext78:
 20783                           	opt callstack 0
 20784  0183FA                     _mode_lamp_dim:
 20785                           	opt callstack 23
 20786                           
 20787                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20788                           ;stkvar	_level @ sp[(0)+-2]
 20789                           
 20790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20791                           ;incstack = 0
 20792  0183FA  0EFE               	movlw	-2
 20793  0183FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20794  018402  006F FF8F FFE6     	movff	plusw1,postinc1
 20795  018408  ECC4  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20796                           
 20797                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20798  01840C  52E5               	movf	postdec1,f,c
 20799  01840E  52E5               	movf	postdec1,f,c
 20800  018410  0012               	return		;funcret
 20801  018412                     __end_of_mode_lamp_dim:
 20802                           	opt callstack 0
 20803                           
 20804 ;; *************** function _mode_lamp_bright *****************
 20805 ;; Defined at:
 20806 ;;		line 18 in file "mconfig.c"
 20807 ;; Parameters:    Size  Location     Type
 20808 ;;		None
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;		None
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  1  [STACK] void 
 20813 ;; Registers used:
 20814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/1
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20824 ;;Total ram usage:        0 bytes
 20825 ;; Hardware stack levels used:    1
 20826 ;; Hardware stack levels required when called:    7
 20827 ;; This function calls:
 20828 ;;		_PWM8_LoadDutyValue
 20829 ;; This function is called by:
 20830 ;;		_check_help
 20831 ;; This function uses a reentrant model
 20832 ;;
 20833                           
 20834                           	psect	text79
 20835  0184C0                     __ptext79:
 20836                           	opt callstack 0
 20837  0184C0                     _mode_lamp_bright:
 20838                           	opt callstack 22
 20839                           
 20840                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20841                           
 20842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20843                           ;incstack = 0
 20844  0184C0  0E2C               	movlw	44
 20845  0184C2  6EE6               	movwf	postinc1,c
 20846  0184C4  0E01               	movlw	1
 20847  0184C6  6EE6               	movwf	postinc1,c
 20848  0184C8  ECC4  F0BD         	call	_PWM8_LoadDutyValue	;wreg free
 20849                           
 20850                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20851  0184CC  0012               	return		;funcret
 20852  0184CE                     __end_of_mode_lamp_bright:
 20853                           	opt callstack 0
 20854                           
 20855 ;; *************** function _PWM8_LoadDutyValue *****************
 20856 ;; Defined at:
 20857 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20858 ;; Parameters:    Size  Location     Type
 20859 ;;  dutyValue       2  [STACK] unsigned short 
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;		None
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  1  [STACK] void 
 20864 ;; Registers used:
 20865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20866 ;; Tracked objects:
 20867 ;;		On entry : 0/1
 20868 ;;		On exit  : 0/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20875 ;;Total ram usage:        0 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:    6
 20878 ;; This function calls:
 20879 ;;		Nothing
 20880 ;; This function is called by:
 20881 ;;		_mode_lamp_dim
 20882 ;;		_mode_lamp_bright
 20883 ;; This function uses a reentrant model
 20884 ;;
 20885                           
 20886                           	psect	text80
 20887  017B88                     __ptext80:
 20888                           	opt callstack 0
 20889  017B88                     _PWM8_LoadDutyValue:
 20890                           	opt callstack 23
 20891                           
 20892                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20893                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20894                           
 20895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20896                           ;incstack = 0
 20897  017B88  0EFE               	movlw	-2
 20898  017B8A  006F FF8C  F03C    	movff	plusw1,btemp+10
 20899  017B90  0EFF               	movlw	-1
 20900  017B92  006F FF8C  F03D    	movff	plusw1,btemp+11
 20901  017B98  90D8               	bcf	status,0,c
 20902  017B9A  323D               	rrcf	(btemp+11)^0,f,c
 20903  017B9C  323C               	rrcf	(btemp+10)^0,f,c
 20904  017B9E  90D8               	bcf	status,0,c
 20905  017BA0  323D               	rrcf	(btemp+11)^0,f,c
 20906  017BA2  323C               	rrcf	(btemp+10)^0,f,c
 20907  017BA4  503C               	movf	(btemp+10)^0,w,c
 20908  017BA6  6E61               	movwf	97,c	;volatile
 20909                           
 20910                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20911                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20912  017BA8  0EFE               	movlw	-2
 20913  017BAA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20914  017BB0  0E03               	movlw	3
 20915  017BB2  163D               	andwf	(btemp+11)^0,f,c
 20916  017BB4  0E06               	movlw	6
 20917  017BB6  6E32               	movwf	btemp^0,c
 20918  017BB8                     u12145:
 20919  017BB8  90D8               	bcf	status,0,c
 20920  017BBA  363D               	rlcf	(btemp+11)^0,f,c
 20921  017BBC  2E32               	decfsz	btemp^0,f,c
 20922  017BBE  D7FC               	goto	u12145
 20923  017BC0  503D               	movf	(btemp+11)^0,w,c
 20924  017BC2  6E60               	movwf	96,c	;volatile
 20925                           
 20926                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20927  017BC4  52E5               	movf	postdec1,f,c
 20928  017BC6  52E5               	movf	postdec1,f,c
 20929  017BC8  0012               	return		;funcret
 20930  017BCA                     __end_of_PWM8_LoadDutyValue:
 20931                           	opt callstack 0
 20932                           
 20933 ;; *************** function _help_button *****************
 20934 ;; Defined at:
 20935 ;;		line 26 in file "mconfig.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;		None
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;		None
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  1  [STACK] _Bool 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/1
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20953 ;;Total ram usage:        0 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:    7
 20956 ;; This function calls:
 20957 ;;		_StartTimer
 20958 ;;		_TimerDone
 20959 ;; This function is called by:
 20960 ;;		_check_help
 20961 ;; This function uses a reentrant model
 20962 ;;
 20963                           
 20964                           	psect	text81
 20965  017C86                     __ptext81:
 20966                           	opt callstack 0
 20967  017C86                     _help_button:
 20968                           	opt callstack 22
 20969                           
 20970                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20971                           
 20972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20973                           ;incstack = 0
 20974  017C86  B0CB               	btfsc	203,0,c	;volatile
 20975  017C88  D00C               	goto	l1551
 20976                           
 20977                           ;mconfig.c: 29:   V.help = 1;
 20978  017C8A  0101               	movlb	1	; () banked
 20979  017C8C  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20980                           
 20981                           ; BSR set to: 1
 20982                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20983  017C8E  0E08               	movlw	8
 20984  017C90  6EE6               	movwf	postinc1,c
 20985  017C92  EC13  F0C1         	call	_TimerDone	;wreg free
 20986  017C96  5032               	movf	btemp^0,w,c
 20987  017C98  B4D8               	btfsc	status,2,c
 20988  017C9A  D003               	goto	l1551
 20989                           
 20990                           ;mconfig.c: 31:    return 1;
 20991  017C9C  0E01               	movlw	1
 20992  017C9E  6E32               	movwf	btemp^0,c
 20993  017CA0  0012               	return	
 20994  017CA2                     l1551:
 20995                           
 20996                           ;mconfig.c: 34:  if (!V.help)
 20997  017CA2  0101               	movlb	1	; () banked
 20998  017CA4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20999  017CA6  D008               	goto	l11595
 21000                           
 21001                           ; BSR set to: 1
 21002                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21003  017CA8  0E2C               	movlw	44
 21004  017CAA  6EE6               	movwf	postinc1,c
 21005  017CAC  0E01               	movlw	1
 21006  017CAE  6EE6               	movwf	postinc1,c
 21007  017CB0  0E08               	movlw	8
 21008  017CB2  6EE6               	movwf	postinc1,c
 21009  017CB4  EC25  F0BE         	call	_StartTimer	;wreg free
 21010  017CB8                     l11595:
 21011                           
 21012                           ;mconfig.c: 37:  return 0;
 21013  017CB8  0E00               	movlw	0
 21014  017CBA  6E32               	movwf	btemp^0,c
 21015                           
 21016                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21017  017CBC  0012               	return		;funcret
 21018  017CBE                     __end_of_help_button:
 21019                           	opt callstack 0
 21020                           
 21021 ;; *************** function _TimerDone *****************
 21022 ;; Defined at:
 21023 ;;		line 20 in file "timers.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;  timer           1  [STACK] const unsigned char 
 21026 ;; Auto vars:     Size  Location     Type
 21027 ;;		None
 21028 ;; Return value:  Size  Location     Type
 21029 ;;                  1  [STACK] _Bool 
 21030 ;; Registers used:
 21031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21032 ;; Tracked objects:
 21033 ;;		On entry : 0/39
 21034 ;;		On exit  : 0/0
 21035 ;;		Unchanged: 0/0
 21036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21041 ;;Total ram usage:        0 bytes
 21042 ;; Hardware stack levels used:    1
 21043 ;; Hardware stack levels required when called:    6
 21044 ;; This function calls:
 21045 ;;		Nothing
 21046 ;; This function is called by:
 21047 ;;		_main
 21048 ;;		_WaitMs
 21049 ;;		_help_button
 21050 ;;		_check_help
 21051 ;;		_set_display_info
 21052 ;; This function uses a reentrant model
 21053 ;;
 21054                           
 21055                           	psect	text82
 21056  018226                     __ptext82:
 21057                           	opt callstack 0
 21058  018226                     _TimerDone:
 21059                           	opt callstack 23
 21060                           
 21061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21062                           ;incstack = 0
 21063  018226  0004               	clrwdt		;# 
 21064                           
 21065                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21066                           ;stkvar	_timer @ sp[(0)+-1]
 21067  018228  0EFF               	movlw	-1
 21068  01822A  50E3               	movf	plusw1,w,c
 21069  01822C  0D02               	mullw	2
 21070  01822E  50F3               	movf	243,w,c
 21071  018230  0F89               	addlw	low _tickCount
 21072  018232  6ED9               	movwf	fsr2l,c
 21073  018234  6ADA               	clrf	fsr2h,c
 21074  018236  50DE               	movf	postinc2,w,c
 21075  018238  10DE               	iorwf	postinc2,w,c
 21076  01823A  A4D8               	btfss	status,2,c
 21077  01823C  D002               	goto	l11009
 21078                           
 21079                           ;timers.c: 24:   return 1;
 21080  01823E  0E01               	movlw	1
 21081  018240  D001               	goto	L19
 21082  018242                     l11009:
 21083                           
 21084                           ;timers.c: 26:  return 0;
 21085  018242  0E00               	movlw	0
 21086  018244                     L19:
 21087  018244  6E32               	movwf	btemp^0,c
 21088                           
 21089                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21090  018246  52E5               	movf	postdec1,f,c
 21091  018248  0012               	return		;funcret
 21092  01824A                     __end_of_TimerDone:
 21093                           	opt callstack 0
 21094                           
 21095 ;; *************** function _StartTimer *****************
 21096 ;; Defined at:
 21097 ;;		line 12 in file "timers.c"
 21098 ;; Parameters:    Size  Location     Type
 21099 ;;  timer           1  [STACK] const unsigned char 
 21100 ;;  count           2  [STACK] const unsigned short 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;		None
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  1  [STACK] void 
 21105 ;; Registers used:
 21106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/5
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21116 ;;Total ram usage:        0 bytes
 21117 ;; Hardware stack levels used:    1
 21118 ;; Hardware stack levels required when called:    6
 21119 ;; This function calls:
 21120 ;;		Nothing
 21121 ;; This function is called by:
 21122 ;;		_main
 21123 ;;		_WaitMs
 21124 ;;		_help_button
 21125 ;;		_check_help
 21126 ;; This function uses a reentrant model
 21127 ;;
 21128                           
 21129                           	psect	text83
 21130  017C4A                     __ptext83:
 21131                           	opt callstack 0
 21132  017C4A                     _StartTimer:
 21133                           	opt callstack 21
 21134                           
 21135                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21136                           ;stkvar	_count @ sp[(0)+-3]
 21137                           
 21138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21139                           ;incstack = 0
 21140  017C4A  0EFD               	movlw	-3
 21141  017C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 21142  017C52  0EFE               	movlw	-2
 21143  017C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 21144  017C5A  90D8               	bcf	status,0,c
 21145  017C5C  343C               	rlcf	(btemp+10)^0,w,c
 21146  017C5E  6E3A               	movwf	(btemp+8)^0,c
 21147  017C60  343D               	rlcf	(btemp+11)^0,w,c
 21148  017C62  6E3B               	movwf	(btemp+9)^0,c
 21149                           
 21150                           ;stkvar	_timer @ sp[(0)+-1]
 21151  017C64  0EFF               	movlw	-1
 21152  017C66  50E3               	movf	plusw1,w,c
 21153  017C68  0D02               	mullw	2
 21154  017C6A  50F3               	movf	243,w,c
 21155  017C6C  0F89               	addlw	low _tickCount
 21156  017C6E  6ED9               	movwf	fsr2l,c
 21157  017C70  6ADA               	clrf	fsr2h,c
 21158  017C72  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21159  017C78  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21160                           
 21161                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21162  017C7E  52E5               	movf	postdec1,f,c
 21163  017C80  52E5               	movf	postdec1,f,c
 21164  017C82  52E5               	movf	postdec1,f,c
 21165  017C84  0012               	return		;funcret
 21166  017C86                     __end_of_StartTimer:
 21167                           	opt callstack 0
 21168                           
 21169 ;; *************** function _display_info *****************
 21170 ;; Defined at:
 21171 ;;		line 187 in file "mconfig.c"
 21172 ;; Parameters:    Size  Location     Type
 21173 ;;		None
 21174 ;; Auto vars:     Size  Location     Type
 21175 ;;		None
 21176 ;; Return value:  Size  Location     Type
 21177 ;;                  1  [STACK] enum E16501
 21178 ;; Registers used:
 21179 ;;		btemp
 21180 ;; Tracked objects:
 21181 ;;		On entry : 0/1
 21182 ;;		On exit  : 0/0
 21183 ;;		Unchanged: 0/0
 21184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21189 ;;Total ram usage:        0 bytes
 21190 ;; Hardware stack levels used:    1
 21191 ;; Hardware stack levels required when called:    6
 21192 ;; This function calls:
 21193 ;;		Nothing
 21194 ;; This function is called by:
 21195 ;;		_check_help
 21196 ;; This function uses a reentrant model
 21197 ;;
 21198                           
 21199                           	psect	text84
 21200  01852A                     __ptext84:
 21201                           	opt callstack 0
 21202  01852A                     _display_info:
 21203                           	opt callstack 23
 21204                           
 21205                           ;mconfig.c: 189:  return V.response.info;
 21206                           
 21207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21208                           ;incstack = 0
 21209  01852A  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21210                           
 21211                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21212  018530  0012               	return		;funcret
 21213  018532                     __end_of_display_info:
 21214                           	opt callstack 0
 21215                           
 21216 ;; *************** function _display_help *****************
 21217 ;; Defined at:
 21218 ;;		line 192 in file "mconfig.c"
 21219 ;; Parameters:    Size  Location     Type
 21220 ;;		None
 21221 ;; Auto vars:     Size  Location     Type
 21222 ;;		None
 21223 ;; Return value:  Size  Location     Type
 21224 ;;                  1  [STACK] enum E16501
 21225 ;; Registers used:
 21226 ;;		btemp
 21227 ;; Tracked objects:
 21228 ;;		On entry : 3F/1
 21229 ;;		On exit  : 0/0
 21230 ;;		Unchanged: 0/0
 21231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21236 ;;Total ram usage:        0 bytes
 21237 ;; Hardware stack levels used:    1
 21238 ;; Hardware stack levels required when called:    6
 21239 ;; This function calls:
 21240 ;;		Nothing
 21241 ;; This function is called by:
 21242 ;;		_check_help
 21243 ;; This function uses a reentrant model
 21244 ;;
 21245                           
 21246                           	psect	text85
 21247  018532                     __ptext85:
 21248                           	opt callstack 0
 21249  018532                     _display_help:
 21250                           	opt callstack 23
 21251                           
 21252                           ;mconfig.c: 194:  return V.response.help_temp;
 21253                           
 21254                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21255                           ;incstack = 0
 21256  018532  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21257                           
 21258                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21259  018538  0012               	return		;funcret
 21260  01853A                     __end_of_display_help:
 21261                           	opt callstack 0
 21262                           
 21263 ;; *************** function _check_adc_scan *****************
 21264 ;; Defined at:
 21265 ;;		line 56 in file "daq.c"
 21266 ;; Parameters:    Size  Location     Type
 21267 ;;		None
 21268 ;; Auto vars:     Size  Location     Type
 21269 ;;		None
 21270 ;; Return value:  Size  Location     Type
 21271 ;;                  1  [STACK] _Bool 
 21272 ;; Registers used:
 21273 ;;		btemp
 21274 ;; Tracked objects:
 21275 ;;		On entry : 0/39
 21276 ;;		On exit  : 0/0
 21277 ;;		Unchanged: 0/0
 21278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21283 ;;Total ram usage:        0 bytes
 21284 ;; Hardware stack levels used:    1
 21285 ;; Hardware stack levels required when called:    6
 21286 ;; This function calls:
 21287 ;;		Nothing
 21288 ;; This function is called by:
 21289 ;;		_main
 21290 ;; This function uses a reentrant model
 21291 ;;
 21292                           
 21293                           	psect	text86
 21294  01853A                     __ptext86:
 21295                           	opt callstack 0
 21296  01853A                     _check_adc_scan:
 21297                           	opt callstack 24
 21298                           
 21299                           ;daq.c: 58:  return R.done;
 21300                           
 21301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21302                           ;incstack = 0
 21303  01853A  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21304                           
 21305                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21306  018540  0012               	return		;funcret
 21307  018542                     __end_of_check_adc_scan:
 21308                           	opt callstack 0
 21309                           
 21310 ;; *************** function _SYSTEM_Initialize *****************
 21311 ;; Defined at:
 21312 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;		None
 21315 ;; Auto vars:     Size  Location     Type
 21316 ;;		None
 21317 ;; Return value:  Size  Location     Type
 21318 ;;                  1  [STACK] void 
 21319 ;; Registers used:
 21320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21321 ;; Tracked objects:
 21322 ;;		On entry : 0/0
 21323 ;;		On exit  : 3F/3C
 21324 ;;		Unchanged: 0/0
 21325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21330 ;;Total ram usage:        0 bytes
 21331 ;; Hardware stack levels used:    1
 21332 ;; Hardware stack levels required when called:    8
 21333 ;; This function calls:
 21334 ;;		_ADCC_Initialize
 21335 ;;		_CLKREF_Initialize
 21336 ;;		_DMA1_Initialize
 21337 ;;		_DMA2_Initialize
 21338 ;;		_EXT_INT_Initialize
 21339 ;;		_FVR_Initialize
 21340 ;;		_INTERRUPT_Initialize
 21341 ;;		_OSCILLATOR_Initialize
 21342 ;;		_PIN_MANAGER_Initialize
 21343 ;;		_PMD_Initialize
 21344 ;;		_PWM8_Initialize
 21345 ;;		_SPI1_Initialize
 21346 ;;		_TMR2_Initialize
 21347 ;;		_TMR5_Initialize
 21348 ;;		_TMR6_Initialize
 21349 ;;		_UART1_Initialize
 21350 ;;		_UART2_Initialize
 21351 ;; This function is called by:
 21352 ;;		_main
 21353 ;; This function uses a reentrant model
 21354 ;;
 21355                           
 21356                           	psect	text87
 21357  017A72                     __ptext87:
 21358                           	opt callstack 0
 21359  017A72                     _SYSTEM_Initialize:
 21360                           	opt callstack 22
 21361                           
 21362                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21363                           
 21364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21365                           ;incstack = 0
 21366  017A72  ECCE  F0BA         	call	_INTERRUPT_Initialize	;wreg free
 21367                           
 21368                           ; BSR set to: 57
 21369                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21370  017A76  EC36  F0C2         	call	_PMD_Initialize	;wreg free
 21371                           
 21372                           ; BSR set to: 57
 21373                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21374  017A7A  ECA2  F0B8         	call	_PIN_MANAGER_Initialize	;wreg free
 21375                           
 21376                           ; BSR set to: 58
 21377                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21378  017A7E  EC2B  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21379                           
 21380                           ; BSR set to: 57
 21381                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21382  017A82  ECA1  F0C2         	call	_FVR_Initialize	;wreg free
 21383                           
 21384                           ; BSR set to: 62
 21385                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21386  017A86  EC64  F0BA         	call	_ADCC_Initialize	;wreg free
 21387                           
 21388                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21389  017A8A  EC09  F0C2         	call	_TMR2_Initialize	;wreg free
 21390                           
 21391                           ; BSR set to: 57
 21392                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21393  017A8E  EC20  F0C2         	call	_PWM8_Initialize	;wreg free
 21394                           
 21395                           ; BSR set to: 63
 21396                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21397  017A92  ECAF  F0BE         	call	_EXT_INT_Initialize	;wreg free
 21398                           
 21399                           ; BSR set to: 57
 21400                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21401  017A96  EC6C  F0BF         	call	_TMR6_Initialize	;wreg free
 21402                           
 21403                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21404  017A9A  EC5C  F0BD         	call	_TMR5_Initialize	;wreg free
 21405                           
 21406                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21407  017A9E  EC33  F0BB         	call	_UART1_Initialize	;wreg free
 21408                           
 21409                           ; BSR set to: 57
 21410                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21411  017AA2  ECC7  F0BB         	call	_UART2_Initialize	;wreg free
 21412                           
 21413                           ; BSR set to: 57
 21414                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21415  017AA6  EC15  F0C2         	call	_SPI1_Initialize	;wreg free
 21416                           
 21417                           ; BSR set to: 61
 21418                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21419  017AAA  EC23  F0BC         	call	_DMA2_Initialize	;wreg free
 21420                           
 21421                           ; BSR set to: 59
 21422                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21423  017AAE  EC2F  F0BA         	call	_DMA1_Initialize	;wreg free
 21424                           
 21425                           ; BSR set to: 59
 21426                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21427  017AB2  EC77  F0C2         	call	_CLKREF_Initialize	;wreg free
 21428                           
 21429                           ; BSR set to: 60
 21430                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21431  017AB6  0012               	return		;funcret
 21432  017AB8                     __end_of_SYSTEM_Initialize:
 21433                           	opt callstack 0
 21434                           
 21435 ;; *************** function _UART2_Initialize *****************
 21436 ;; Defined at:
 21437 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21438 ;; Parameters:    Size  Location     Type
 21439 ;;		None
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;		None
 21442 ;; Return value:  Size  Location     Type
 21443 ;;                  1  [STACK] void 
 21444 ;; Registers used:
 21445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21446 ;; Tracked objects:
 21447 ;;		On entry : 3F/39
 21448 ;;		On exit  : 3F/39
 21449 ;;		Unchanged: 0/0
 21450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21455 ;;Total ram usage:        0 bytes
 21456 ;; Hardware stack levels used:    1
 21457 ;; Hardware stack levels required when called:    7
 21458 ;; This function calls:
 21459 ;;		_UART2_SetRxInterruptHandler
 21460 ;;		_UART2_SetTxInterruptHandler
 21461 ;; This function is called by:
 21462 ;;		_SYSTEM_Initialize
 21463 ;; This function uses a reentrant model
 21464 ;;
 21465                           
 21466                           	psect	text88
 21467  01778E                     __ptext88:
 21468                           	opt callstack 0
 21469  01778E                     _UART2_Initialize:
 21470                           	opt callstack 22
 21471                           
 21472                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21473                           
 21474                           ; BSR set to: 60
 21475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21476                           ;incstack = 0
 21477  01778E  0139               	movlb	57	; () banked
 21478  017790  9596               	bcf	150,2,b	;volatile
 21479                           
 21480                           ; BSR set to: 57
 21481                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21482  017792  0E6E               	movlw	low _UART2_Receive_ISR
 21483  017794  6EE6               	movwf	postinc1,c
 21484  017796  0E83               	movlw	high _UART2_Receive_ISR
 21485  017798  6EE6               	movwf	postinc1,c
 21486  01779A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21487  01779C  6EE6               	movwf	postinc1,c
 21488  01779E  ECFB  F0BF         	call	_UART2_SetRxInterruptHandler	;wreg free
 21489                           
 21490                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21491  0177A2  0139               	movlb	57	; () banked
 21492  0177A4  9796               	bcf	150,3,b	;volatile
 21493                           
 21494                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21495  0177A6  0EAC               	movlw	low _UART2_Transmit_ISR
 21496  0177A8  6EE6               	movwf	postinc1,c
 21497  0177AA  0E7E               	movlw	high _UART2_Transmit_ISR
 21498  0177AC  6EE6               	movwf	postinc1,c
 21499  0177AE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21500  0177B0  6EE6               	movwf	postinc1,c
 21501  0177B2  ECE7  F0BF         	call	_UART2_SetTxInterruptHandler	;wreg free
 21502                           
 21503                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21504  0177B6  013D               	movlb	61	; () banked
 21505  0177B8  6BD4               	clrf	212,b	;volatile
 21506                           
 21507                           ; BSR set to: 61
 21508                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21509  0177BA  6BD6               	clrf	214,b	;volatile
 21510                           
 21511                           ; BSR set to: 61
 21512                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21513  0177BC  6BD8               	clrf	216,b	;volatile
 21514                           
 21515                           ; BSR set to: 61
 21516                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21517  0177BE  0EB0               	movlw	176
 21518  0177C0  6FDA               	movwf	218,b	;volatile
 21519                           
 21520                           ; BSR set to: 61
 21521                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21522  0177C2  0E80               	movlw	128
 21523  0177C4  6FDB               	movwf	219,b	;volatile
 21524                           
 21525                           ; BSR set to: 61
 21526                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21527  0177C6  6BDC               	clrf	220,b	;volatile
 21528                           
 21529                           ; BSR set to: 61
 21530                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21531  0177C8  0E82               	movlw	130
 21532  0177CA  6FDD               	movwf	221,b	;volatile
 21533                           
 21534                           ; BSR set to: 61
 21535                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21536  0177CC  0E06               	movlw	6
 21537  0177CE  6FDE               	movwf	222,b	;volatile
 21538                           
 21539                           ; BSR set to: 61
 21540                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21541  0177D0  6BDF               	clrf	223,b	;volatile
 21542                           
 21543                           ; BSR set to: 61
 21544                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21545  0177D2  6BE0               	clrf	224,b	;volatile
 21546                           
 21547                           ; BSR set to: 61
 21548                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21549  0177D4  6BE1               	clrf	225,b	;volatile
 21550                           
 21551                           ; BSR set to: 61
 21552                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21553  0177D6  6BE2               	clrf	226,b	;volatile
 21554                           
 21555                           ; BSR set to: 61
 21556                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21557  0177D8  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21558                           
 21559                           ; BSR set to: 61
 21560                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21561  0177DA  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21562                           
 21563                           ; BSR set to: 61
 21564                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21565  0177DC  0E40               	movlw	64
 21566  0177DE  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21567                           
 21568                           ; BSR set to: 61
 21569                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21570  0177E0  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21571                           
 21572                           ; BSR set to: 61
 21573                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21574  0177E2  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21575                           
 21576                           ; BSR set to: 61
 21577                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21578  0177E4  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21579                           
 21580                           ; BSR set to: 61
 21581                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21582  0177E6  0139               	movlb	57	; () banked
 21583  0177E8  8596               	bsf	150,2,b	;volatile
 21584                           
 21585                           ; BSR set to: 57
 21586                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21587  0177EA  0012               	return		;funcret
 21588  0177EC                     __end_of_UART2_Initialize:
 21589                           	opt callstack 0
 21590                           
 21591 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21592 ;; Defined at:
 21593 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21594 ;; Parameters:    Size  Location     Type
 21595 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21596 ;;		 -> UART2_Transmit_ISR(1), 
 21597 ;; Auto vars:     Size  Location     Type
 21598 ;;		None
 21599 ;; Return value:  Size  Location     Type
 21600 ;;                  1  [STACK] void 
 21601 ;; Registers used:
 21602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21603 ;; Tracked objects:
 21604 ;;		On entry : 3F/39
 21605 ;;		On exit  : 0/0
 21606 ;;		Unchanged: 0/0
 21607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21612 ;;Total ram usage:        0 bytes
 21613 ;; Hardware stack levels used:    1
 21614 ;; Hardware stack levels required when called:    6
 21615 ;; This function calls:
 21616 ;;		Nothing
 21617 ;; This function is called by:
 21618 ;;		_UART2_Initialize
 21619 ;; This function uses a reentrant model
 21620 ;;
 21621                           
 21622                           	psect	text89
 21623  017FCE                     __ptext89:
 21624                           	opt callstack 0
 21625  017FCE                     _UART2_SetTxInterruptHandler:
 21626                           	opt callstack 22
 21627                           
 21628                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21629                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21630                           
 21631                           ; BSR set to: 57
 21632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21633                           ;incstack = 0
 21634  017FCE  50E1               	movf	fsr1l,w,c
 21635  017FD0  0FFD               	addlw	-3
 21636  017FD2  6ED9               	movwf	fsr2l,c
 21637  017FD4  50E2               	movf	fsr1h,w,c
 21638  017FD6  6EDA               	movwf	fsr2h,c
 21639  017FD8  0EFF               	movlw	255
 21640  017FDA  22DA               	addwfc	fsr2h,f,c
 21641  017FDC  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21642  017FE2  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21643  017FE8  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21644                           
 21645                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21646  017FEE  52E5               	movf	postdec1,f,c
 21647  017FF0  52E5               	movf	postdec1,f,c
 21648  017FF2  52E5               	movf	postdec1,f,c
 21649  017FF4  0012               	return		;funcret
 21650  017FF6                     __end_of_UART2_SetTxInterruptHandler:
 21651                           	opt callstack 0
 21652                           
 21653 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21654 ;; Defined at:
 21655 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21656 ;; Parameters:    Size  Location     Type
 21657 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21658 ;;		 -> UART2_Receive_ISR(1), 
 21659 ;; Auto vars:     Size  Location     Type
 21660 ;;		None
 21661 ;; Return value:  Size  Location     Type
 21662 ;;                  1  [STACK] void 
 21663 ;; Registers used:
 21664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21665 ;; Tracked objects:
 21666 ;;		On entry : 3F/39
 21667 ;;		On exit  : 0/0
 21668 ;;		Unchanged: 0/0
 21669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21674 ;;Total ram usage:        0 bytes
 21675 ;; Hardware stack levels used:    1
 21676 ;; Hardware stack levels required when called:    6
 21677 ;; This function calls:
 21678 ;;		Nothing
 21679 ;; This function is called by:
 21680 ;;		_UART2_Initialize
 21681 ;; This function uses a reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text90
 21685  017FF6                     __ptext90:
 21686                           	opt callstack 0
 21687  017FF6                     _UART2_SetRxInterruptHandler:
 21688                           	opt callstack 22
 21689                           
 21690                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21691                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21692                           
 21693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21694                           ;incstack = 0
 21695  017FF6  50E1               	movf	fsr1l,w,c
 21696  017FF8  0FFD               	addlw	-3
 21697  017FFA  6ED9               	movwf	fsr2l,c
 21698  017FFC  50E2               	movf	fsr1h,w,c
 21699  017FFE  6EDA               	movwf	fsr2h,c
 21700  018000  0EFF               	movlw	255
 21701  018002  22DA               	addwfc	fsr2h,f,c
 21702  018004  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21703  01800A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21704  018010  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21705                           
 21706                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21707  018016  52E5               	movf	postdec1,f,c
 21708  018018  52E5               	movf	postdec1,f,c
 21709  01801A  52E5               	movf	postdec1,f,c
 21710  01801C  0012               	return		;funcret
 21711  01801E                     __end_of_UART2_SetRxInterruptHandler:
 21712                           	opt callstack 0
 21713                           
 21714 ;; *************** function _UART1_Initialize *****************
 21715 ;; Defined at:
 21716 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21717 ;; Parameters:    Size  Location     Type
 21718 ;;		None
 21719 ;; Auto vars:     Size  Location     Type
 21720 ;;		None
 21721 ;; Return value:  Size  Location     Type
 21722 ;;                  1  [STACK] void 
 21723 ;; Registers used:
 21724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21725 ;; Tracked objects:
 21726 ;;		On entry : 0/39
 21727 ;;		On exit  : 3F/39
 21728 ;;		Unchanged: 0/0
 21729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;Total ram usage:        0 bytes
 21735 ;; Hardware stack levels used:    1
 21736 ;; Hardware stack levels required when called:    7
 21737 ;; This function calls:
 21738 ;;		_UART1_SetRxInterruptHandler
 21739 ;;		_UART1_SetTxInterruptHandler
 21740 ;; This function is called by:
 21741 ;;		_SYSTEM_Initialize
 21742 ;; This function uses a reentrant model
 21743 ;;
 21744                           
 21745                           	psect	text91
 21746  017666                     __ptext91:
 21747                           	opt callstack 0
 21748  017666                     _UART1_Initialize:
 21749                           	opt callstack 22
 21750                           
 21751                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21752                           
 21753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21754                           ;incstack = 0
 21755  017666  0139               	movlb	57	; () banked
 21756  017668  9793               	bcf	147,3,b	;volatile
 21757                           
 21758                           ; BSR set to: 57
 21759                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21760  01766A  0E50               	movlw	low _UART1_Receive_ISR
 21761  01766C  6EE6               	movwf	postinc1,c
 21762  01766E  0E83               	movlw	high _UART1_Receive_ISR
 21763  017670  6EE6               	movwf	postinc1,c
 21764  017672  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21765  017674  6EE6               	movwf	postinc1,c
 21766  017676  EC23  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21767                           
 21768                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21769  01767A  0139               	movlb	57	; () banked
 21770  01767C  9993               	bcf	147,4,b	;volatile
 21771                           
 21772                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21773  01767E  0E80               	movlw	low _UART1_Transmit_ISR
 21774  017680  6EE6               	movwf	postinc1,c
 21775  017682  0E7E               	movlw	high _UART1_Transmit_ISR
 21776  017684  6EE6               	movwf	postinc1,c
 21777  017686  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21778  017688  6EE6               	movwf	postinc1,c
 21779  01768A  EC0F  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21780                           
 21781                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21782  01768E  013D               	movlb	61	; () banked
 21783  017690  6BEC               	clrf	236,b	;volatile
 21784                           
 21785                           ; BSR set to: 61
 21786                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21787  017692  6BED               	clrf	237,b	;volatile
 21788                           
 21789                           ; BSR set to: 61
 21790                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21791  017694  6BEE               	clrf	238,b	;volatile
 21792                           
 21793                           ; BSR set to: 61
 21794                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21795  017696  6BEF               	clrf	239,b	;volatile
 21796                           
 21797                           ; BSR set to: 61
 21798                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21799  017698  6BF0               	clrf	240,b	;volatile
 21800                           
 21801                           ; BSR set to: 61
 21802                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21803  01769A  6BF1               	clrf	241,b	;volatile
 21804                           
 21805                           ; BSR set to: 61
 21806                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21807  01769C  0EB0               	movlw	176
 21808  01769E  6FF2               	movwf	242,b	;volatile
 21809                           
 21810                           ; BSR set to: 61
 21811                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21812  0176A0  0E80               	movlw	128
 21813  0176A2  6FF3               	movwf	243,b	;volatile
 21814                           
 21815                           ; BSR set to: 61
 21816                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21817  0176A4  6BF4               	clrf	244,b	;volatile
 21818                           
 21819                           ; BSR set to: 61
 21820                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21821  0176A6  0E82               	movlw	130
 21822  0176A8  6FF5               	movwf	245,b	;volatile
 21823                           
 21824                           ; BSR set to: 61
 21825                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21826  0176AA  0E06               	movlw	6
 21827  0176AC  6FF6               	movwf	246,b	;volatile
 21828                           
 21829                           ; BSR set to: 61
 21830                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21831  0176AE  6BF7               	clrf	247,b	;volatile
 21832                           
 21833                           ; BSR set to: 61
 21834                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21835  0176B0  6BF8               	clrf	248,b	;volatile
 21836                           
 21837                           ; BSR set to: 61
 21838                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21839  0176B2  6BF9               	clrf	249,b	;volatile
 21840                           
 21841                           ; BSR set to: 61
 21842                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21843  0176B4  6BFA               	clrf	250,b	;volatile
 21844                           
 21845                           ; BSR set to: 61
 21846                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21847  0176B6  6A31               	clrf	_uart1TxHead^0,c	;volatile
 21848                           
 21849                           ; BSR set to: 61
 21850                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21851  0176B8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 21852                           
 21853                           ; BSR set to: 61
 21854                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21855  0176BA  0E40               	movlw	64
 21856  0176BC  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21857                           
 21858                           ; BSR set to: 61
 21859                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21860  0176BE  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 21861                           
 21862                           ; BSR set to: 61
 21863                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21864  0176C0  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 21865                           
 21866                           ; BSR set to: 61
 21867                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21868  0176C2  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 21869                           
 21870                           ; BSR set to: 61
 21871                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21872  0176C4  0139               	movlb	57	; () banked
 21873  0176C6  8793               	bsf	147,3,b	;volatile
 21874                           
 21875                           ; BSR set to: 57
 21876                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21877  0176C8  0012               	return		;funcret
 21878  0176CA                     __end_of_UART1_Initialize:
 21879                           	opt callstack 0
 21880                           
 21881 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21882 ;; Defined at:
 21883 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21884 ;; Parameters:    Size  Location     Type
 21885 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21886 ;;		 -> UART1_Transmit_ISR(1), 
 21887 ;; Auto vars:     Size  Location     Type
 21888 ;;		None
 21889 ;; Return value:  Size  Location     Type
 21890 ;;                  1  [STACK] void 
 21891 ;; Registers used:
 21892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21893 ;; Tracked objects:
 21894 ;;		On entry : 3F/39
 21895 ;;		On exit  : 0/0
 21896 ;;		Unchanged: 0/0
 21897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21902 ;;Total ram usage:        0 bytes
 21903 ;; Hardware stack levels used:    1
 21904 ;; Hardware stack levels required when called:    6
 21905 ;; This function calls:
 21906 ;;		Nothing
 21907 ;; This function is called by:
 21908 ;;		_UART1_Initialize
 21909 ;; This function uses a reentrant model
 21910 ;;
 21911                           
 21912                           	psect	text92
 21913  01801E                     __ptext92:
 21914                           	opt callstack 0
 21915  01801E                     _UART1_SetTxInterruptHandler:
 21916                           	opt callstack 22
 21917                           
 21918                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21919                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21920                           
 21921                           ; BSR set to: 57
 21922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21923                           ;incstack = 0
 21924  01801E  50E1               	movf	fsr1l,w,c
 21925  018020  0FFD               	addlw	-3
 21926  018022  6ED9               	movwf	fsr2l,c
 21927  018024  50E2               	movf	fsr1h,w,c
 21928  018026  6EDA               	movwf	fsr2h,c
 21929  018028  0EFF               	movlw	255
 21930  01802A  22DA               	addwfc	fsr2h,f,c
 21931  01802C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 21932  018032  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 21933  018038  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 21934                           
 21935                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21936  01803E  52E5               	movf	postdec1,f,c
 21937  018040  52E5               	movf	postdec1,f,c
 21938  018042  52E5               	movf	postdec1,f,c
 21939  018044  0012               	return		;funcret
 21940  018046                     __end_of_UART1_SetTxInterruptHandler:
 21941                           	opt callstack 0
 21942                           
 21943 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21944 ;; Defined at:
 21945 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21946 ;; Parameters:    Size  Location     Type
 21947 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21948 ;;		 -> UART1_Receive_ISR(1), 
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;		None
 21951 ;; Return value:  Size  Location     Type
 21952 ;;                  1  [STACK] void 
 21953 ;; Registers used:
 21954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21955 ;; Tracked objects:
 21956 ;;		On entry : 3F/39
 21957 ;;		On exit  : 0/0
 21958 ;;		Unchanged: 0/0
 21959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21964 ;;Total ram usage:        0 bytes
 21965 ;; Hardware stack levels used:    1
 21966 ;; Hardware stack levels required when called:    6
 21967 ;; This function calls:
 21968 ;;		Nothing
 21969 ;; This function is called by:
 21970 ;;		_UART1_Initialize
 21971 ;; This function uses a reentrant model
 21972 ;;
 21973                           
 21974                           	psect	text93
 21975  018046                     __ptext93:
 21976                           	opt callstack 0
 21977  018046                     _UART1_SetRxInterruptHandler:
 21978                           	opt callstack 22
 21979                           
 21980                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21981                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21982                           
 21983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21984                           ;incstack = 0
 21985  018046  50E1               	movf	fsr1l,w,c
 21986  018048  0FFD               	addlw	-3
 21987  01804A  6ED9               	movwf	fsr2l,c
 21988  01804C  50E2               	movf	fsr1h,w,c
 21989  01804E  6EDA               	movwf	fsr2h,c
 21990  018050  0EFF               	movlw	255
 21991  018052  22DA               	addwfc	fsr2h,f,c
 21992  018054  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 21993  01805A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 21994  018060  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 21995                           
 21996                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21997  018066  52E5               	movf	postdec1,f,c
 21998  018068  52E5               	movf	postdec1,f,c
 21999  01806A  52E5               	movf	postdec1,f,c
 22000  01806C  0012               	return		;funcret
 22001  01806E                     __end_of_UART1_SetRxInterruptHandler:
 22002                           	opt callstack 0
 22003                           
 22004 ;; *************** function _TMR6_Initialize *****************
 22005 ;; Defined at:
 22006 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22007 ;; Parameters:    Size  Location     Type
 22008 ;;		None
 22009 ;; Auto vars:     Size  Location     Type
 22010 ;;		None
 22011 ;; Return value:  Size  Location     Type
 22012 ;;                  1  [STACK] void 
 22013 ;; Registers used:
 22014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22015 ;; Tracked objects:
 22016 ;;		On entry : 3F/39
 22017 ;;		On exit  : 0/0
 22018 ;;		Unchanged: 0/0
 22019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22024 ;;Total ram usage:        0 bytes
 22025 ;; Hardware stack levels used:    1
 22026 ;; Hardware stack levels required when called:    7
 22027 ;; This function calls:
 22028 ;;		_TMR6_SetInterruptHandler
 22029 ;; This function is called by:
 22030 ;;		_SYSTEM_Initialize
 22031 ;; This function uses a reentrant model
 22032 ;;
 22033                           
 22034                           	psect	text94
 22035  017ED8                     __ptext94:
 22036                           	opt callstack 0
 22037  017ED8                     _TMR6_Initialize:
 22038                           	opt callstack 22
 22039                           
 22040                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22041                           
 22042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22043                           ;incstack = 0
 22044  017ED8  0E01               	movlw	1
 22045  017EDA  6E96               	movwf	150,c	;volatile
 22046                           
 22047                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22048  017EDC  6A95               	clrf	149,c	;volatile
 22049                           
 22050                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22051  017EDE  6A97               	clrf	151,c	;volatile
 22052                           
 22053                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22054  017EE0  0E7C               	movlw	124
 22055  017EE2  6E93               	movwf	147,c	;volatile
 22056                           
 22057                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22058  017EE4  6A92               	clrf	146,c	;volatile
 22059                           
 22060                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22061  017EE6  0139               	movlb	57	; () banked
 22062  017EE8  91A9               	bcf	169,0,b	;volatile
 22063                           
 22064                           ; BSR set to: 57
 22065                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22066  017EEA  8199               	bsf	153,0,b	;volatile
 22067                           
 22068                           ; BSR set to: 57
 22069                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22070  017EEC  0EFE               	movlw	low _TMR6_DefaultInterruptHandler
 22071  017EEE  6EE6               	movwf	postinc1,c
 22072  017EF0  0E7A               	movlw	high _TMR6_DefaultInterruptHandler
 22073  017EF2  6EE6               	movwf	postinc1,c
 22074  017EF4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22075  017EF6  6EE6               	movwf	postinc1,c
 22076  017EF8  EC37  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22077                           
 22078                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22079  017EFC  0EE0               	movlw	224
 22080  017EFE  6E94               	movwf	148,c	;volatile
 22081                           
 22082                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22083  017F00  0012               	return		;funcret
 22084  017F02                     __end_of_TMR6_Initialize:
 22085                           	opt callstack 0
 22086                           
 22087 ;; *************** function _TMR6_SetInterruptHandler *****************
 22088 ;; Defined at:
 22089 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22092 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;		None
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1  [STACK] void 
 22097 ;; Registers used:
 22098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22099 ;; Tracked objects:
 22100 ;;		On entry : 3F/39
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22108 ;;Total ram usage:        0 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; Hardware stack levels required when called:    6
 22111 ;; This function calls:
 22112 ;;		Nothing
 22113 ;; This function is called by:
 22114 ;;		_TMR6_Initialize
 22115 ;; This function uses a reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text95
 22119  01806E                     __ptext95:
 22120                           	opt callstack 0
 22121  01806E                     _TMR6_SetInterruptHandler:
 22122                           	opt callstack 22
 22123                           
 22124                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22125                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22126                           
 22127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22128                           ;incstack = 0
 22129  01806E  50E1               	movf	fsr1l,w,c
 22130  018070  0FFD               	addlw	-3
 22131  018072  6ED9               	movwf	fsr2l,c
 22132  018074  50E2               	movf	fsr1h,w,c
 22133  018076  6EDA               	movwf	fsr2h,c
 22134  018078  0EFF               	movlw	255
 22135  01807A  22DA               	addwfc	fsr2h,f,c
 22136  01807C  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22137  018082  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22138  018088  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22139                           
 22140                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22141  01808E  52E5               	movf	postdec1,f,c
 22142  018090  52E5               	movf	postdec1,f,c
 22143  018092  52E5               	movf	postdec1,f,c
 22144  018094  0012               	return		;funcret
 22145  018096                     __end_of_TMR6_SetInterruptHandler:
 22146                           	opt callstack 0
 22147                           
 22148 ;; *************** function _TMR5_Initialize *****************
 22149 ;; Defined at:
 22150 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22151 ;; Parameters:    Size  Location     Type
 22152 ;;		None
 22153 ;; Auto vars:     Size  Location     Type
 22154 ;;		None
 22155 ;; Return value:  Size  Location     Type
 22156 ;;                  1  [STACK] void 
 22157 ;; Registers used:
 22158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22159 ;; Tracked objects:
 22160 ;;		On entry : 0/39
 22161 ;;		On exit  : 0/0
 22162 ;;		Unchanged: 0/0
 22163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22168 ;;Total ram usage:        0 bytes
 22169 ;; Hardware stack levels used:    1
 22170 ;; Hardware stack levels required when called:    7
 22171 ;; This function calls:
 22172 ;;		_TMR5_SetInterruptHandler
 22173 ;; This function is called by:
 22174 ;;		_SYSTEM_Initialize
 22175 ;; This function uses a reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text96
 22179  017AB8                     __ptext96:
 22180                           	opt callstack 0
 22181  017AB8                     _TMR5_Initialize:
 22182                           	opt callstack 22
 22183                           
 22184                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22185                           
 22186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22187                           ;incstack = 0
 22188  017AB8  6A9B               	clrf	155,c	;volatile
 22189                           
 22190                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22191  017ABA  6A9C               	clrf	156,c	;volatile
 22192                           
 22193                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22194  017ABC  0E01               	movlw	1
 22195  017ABE  6E9D               	movwf	157,c	;volatile
 22196                           
 22197                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22198  017AC0  0E63               	movlw	99
 22199  017AC2  6E99               	movwf	153,c	;volatile
 22200                           
 22201                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22202  017AC4  0EC0               	movlw	192
 22203  017AC6  6E98               	movwf	152,c	;volatile
 22204                           
 22205                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22206  017AC8  5098               	movf	152,w,c	;volatile
 22207  017ACA  006F FE64  F032    	movff	16281,btemp	;volatile
 22208  017AD0  6A33               	clrf	(btemp+1)^0,c
 22209  017AD2  0060  F0C8  F033   	movff	btemp,btemp+1
 22210  017AD8  6A32               	clrf	btemp^0,c
 22211  017ADA  1032               	iorwf	btemp^0,w,c
 22212  017ADC  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22213  017ADE  5033               	movf	(btemp+1)^0,w,c
 22214  017AE0  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22215                           
 22216                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22217  017AE2  0139               	movlb	57	; () banked
 22218  017AE4  9DA8               	bcf	168,6,b	;volatile
 22219                           
 22220                           ; BSR set to: 57
 22221                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22222  017AE6  8D98               	bsf	152,6,b	;volatile
 22223                           
 22224                           ; BSR set to: 57
 22225                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22226  017AE8  0E5E               	movlw	low _TMR5_DefaultInterruptHandler
 22227  017AEA  6EE6               	movwf	postinc1,c
 22228  017AEC  0E81               	movlw	high _TMR5_DefaultInterruptHandler
 22229  017AEE  6EE6               	movwf	postinc1,c
 22230  017AF0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22231  017AF2  6EE6               	movwf	postinc1,c
 22232  017AF4  EC4B  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22233                           
 22234                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22235  017AF8  0E31               	movlw	49
 22236  017AFA  6E9A               	movwf	154,c	;volatile
 22237                           
 22238                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22239  017AFC  0012               	return		;funcret
 22240  017AFE                     __end_of_TMR5_Initialize:
 22241                           	opt callstack 0
 22242                           
 22243 ;; *************** function _TMR5_SetInterruptHandler *****************
 22244 ;; Defined at:
 22245 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22246 ;; Parameters:    Size  Location     Type
 22247 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22248 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22249 ;; Auto vars:     Size  Location     Type
 22250 ;;		None
 22251 ;; Return value:  Size  Location     Type
 22252 ;;                  1  [STACK] void 
 22253 ;; Registers used:
 22254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22255 ;; Tracked objects:
 22256 ;;		On entry : 3F/39
 22257 ;;		On exit  : 0/0
 22258 ;;		Unchanged: 0/0
 22259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22264 ;;Total ram usage:        0 bytes
 22265 ;; Hardware stack levels used:    1
 22266 ;; Hardware stack levels required when called:    6
 22267 ;; This function calls:
 22268 ;;		Nothing
 22269 ;; This function is called by:
 22270 ;;		_TMR5_Initialize
 22271 ;; This function uses a reentrant model
 22272 ;;
 22273                           
 22274                           	psect	text97
 22275  018096                     __ptext97:
 22276                           	opt callstack 0
 22277  018096                     _TMR5_SetInterruptHandler:
 22278                           	opt callstack 22
 22279                           
 22280                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22281                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22282                           
 22283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22284                           ;incstack = 0
 22285  018096  50E1               	movf	fsr1l,w,c
 22286  018098  0FFD               	addlw	-3
 22287  01809A  6ED9               	movwf	fsr2l,c
 22288  01809C  50E2               	movf	fsr1h,w,c
 22289  01809E  6EDA               	movwf	fsr2h,c
 22290  0180A0  0EFF               	movlw	255
 22291  0180A2  22DA               	addwfc	fsr2h,f,c
 22292  0180A4  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22293  0180AA  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22294  0180B0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22295                           
 22296                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22297  0180B6  52E5               	movf	postdec1,f,c
 22298  0180B8  52E5               	movf	postdec1,f,c
 22299  0180BA  52E5               	movf	postdec1,f,c
 22300  0180BC  0012               	return		;funcret
 22301  0180BE                     __end_of_TMR5_SetInterruptHandler:
 22302                           	opt callstack 0
 22303                           
 22304 ;; *************** function _TMR2_Initialize *****************
 22305 ;; Defined at:
 22306 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22307 ;; Parameters:    Size  Location     Type
 22308 ;;		None
 22309 ;; Auto vars:     Size  Location     Type
 22310 ;;		None
 22311 ;; Return value:  Size  Location     Type
 22312 ;;                  1  [STACK] void 
 22313 ;; Registers used:
 22314 ;;		wreg, status,2
 22315 ;; Tracked objects:
 22316 ;;		On entry : 0/3E
 22317 ;;		On exit  : 3F/39
 22318 ;;		Unchanged: 0/0
 22319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;Total ram usage:        0 bytes
 22325 ;; Hardware stack levels used:    1
 22326 ;; Hardware stack levels required when called:    6
 22327 ;; This function calls:
 22328 ;;		Nothing
 22329 ;; This function is called by:
 22330 ;;		_SYSTEM_Initialize
 22331 ;; This function uses a reentrant model
 22332 ;;
 22333                           
 22334                           	psect	text98
 22335  018412                     __ptext98:
 22336                           	opt callstack 0
 22337  018412                     _TMR2_Initialize:
 22338                           	opt callstack 23
 22339                           
 22340                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22341                           
 22342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22343                           ;incstack = 0
 22344  018412  0E01               	movlw	1
 22345  018414  6EAE               	movwf	174,c	;volatile
 22346                           
 22347                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22348  018416  6AAD               	clrf	173,c	;volatile
 22349                           
 22350                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22351  018418  6AAF               	clrf	175,c	;volatile
 22352                           
 22353                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22354  01841A  0E63               	movlw	99
 22355  01841C  6EAB               	movwf	171,c	;volatile
 22356                           
 22357                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22358  01841E  6AAA               	clrf	170,c	;volatile
 22359                           
 22360                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22361  018420  0139               	movlb	57	; () banked
 22362  018422  95A4               	bcf	164,2,b	;volatile
 22363                           
 22364                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22365  018424  0EC0               	movlw	192
 22366  018426  6EAC               	movwf	172,c	;volatile
 22367                           
 22368                           ; BSR set to: 57
 22369                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22370  018428  0012               	return		;funcret
 22371  01842A                     __end_of_TMR2_Initialize:
 22372                           	opt callstack 0
 22373                           
 22374 ;; *************** function _SPI1_Initialize *****************
 22375 ;; Defined at:
 22376 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22377 ;; Parameters:    Size  Location     Type
 22378 ;;		None
 22379 ;; Auto vars:     Size  Location     Type
 22380 ;;		None
 22381 ;; Return value:  Size  Location     Type
 22382 ;;                  1  [STACK] void 
 22383 ;; Registers used:
 22384 ;;		wreg, status,2
 22385 ;; Tracked objects:
 22386 ;;		On entry : 3F/39
 22387 ;;		On exit  : 3F/3D
 22388 ;;		Unchanged: 0/0
 22389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22394 ;;Total ram usage:        0 bytes
 22395 ;; Hardware stack levels used:    1
 22396 ;; Hardware stack levels required when called:    6
 22397 ;; This function calls:
 22398 ;;		Nothing
 22399 ;; This function is called by:
 22400 ;;		_SYSTEM_Initialize
 22401 ;; This function uses a reentrant model
 22402 ;;
 22403                           
 22404                           	psect	text99
 22405  01842A                     __ptext99:
 22406                           	opt callstack 0
 22407  01842A                     _SPI1_Initialize:
 22408                           	opt callstack 23
 22409                           
 22410                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22411                           
 22412                           ; BSR set to: 57
 22413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22414                           ;incstack = 0
 22415  01842A  0E40               	movlw	64
 22416  01842C  013D               	movlb	61	; () banked
 22417  01842E  6F15               	movwf	21,b	;volatile
 22418                           
 22419                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22420  018430  0E03               	movlw	3
 22421  018432  6F16               	movwf	22,b	;volatile
 22422                           
 22423                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22424  018434  0E4F               	movlw	79
 22425  018436  6F19               	movwf	25,b	;volatile
 22426                           
 22427                           ; BSR set to: 61
 22428                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22429  018438  6B1C               	clrf	28,b	;volatile
 22430                           
 22431                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22432  01843A  0E83               	movlw	131
 22433  01843C  6F14               	movwf	20,b	;volatile
 22434                           
 22435                           ; BSR set to: 61
 22436                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22437  01843E  0012               	return		;funcret
 22438  018440                     __end_of_SPI1_Initialize:
 22439                           	opt callstack 0
 22440                           
 22441 ;; *************** function _PWM8_Initialize *****************
 22442 ;; Defined at:
 22443 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22444 ;; Parameters:    Size  Location     Type
 22445 ;;		None
 22446 ;; Auto vars:     Size  Location     Type
 22447 ;;		None
 22448 ;; Return value:  Size  Location     Type
 22449 ;;                  1  [STACK] void 
 22450 ;; Registers used:
 22451 ;;		wreg, status,2
 22452 ;; Tracked objects:
 22453 ;;		On entry : 3F/39
 22454 ;;		On exit  : 3F/3F
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22461 ;;Total ram usage:        0 bytes
 22462 ;; Hardware stack levels used:    1
 22463 ;; Hardware stack levels required when called:    6
 22464 ;; This function calls:
 22465 ;;		Nothing
 22466 ;; This function is called by:
 22467 ;;		_SYSTEM_Initialize
 22468 ;; This function uses a reentrant model
 22469 ;;
 22470                           
 22471                           	psect	text100
 22472  018440                     __ptext100:
 22473                           	opt callstack 0
 22474  018440                     _PWM8_Initialize:
 22475                           	opt callstack 23
 22476                           
 22477                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22478                           
 22479                           ; BSR set to: 61
 22480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22481                           ;incstack = 0
 22482  018440  0E80               	movlw	128
 22483  018442  6E62               	movwf	98,c	;volatile
 22484                           
 22485                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22486  018444  6A61               	clrf	97,c	;volatile
 22487                           
 22488                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22489  018446  0E40               	movlw	64
 22490  018448  6E60               	movwf	96,c	;volatile
 22491                           
 22492                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22493  01844A  013F               	movlb	63	; () banked
 22494  01844C  515F               	movf	95,w,b	;volatile
 22495  01844E  0B3F               	andlw	-193
 22496  018450  0940               	iorlw	64
 22497  018452  6F5F               	movwf	95,b	;volatile
 22498                           
 22499                           ; BSR set to: 63
 22500                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22501  018454  0012               	return		;funcret
 22502  018456                     __end_of_PWM8_Initialize:
 22503                           	opt callstack 0
 22504                           
 22505 ;; *************** function _PMD_Initialize *****************
 22506 ;; Defined at:
 22507 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22508 ;; Parameters:    Size  Location     Type
 22509 ;;		None
 22510 ;; Auto vars:     Size  Location     Type
 22511 ;;		None
 22512 ;; Return value:  Size  Location     Type
 22513 ;;                  1  [STACK] void 
 22514 ;; Registers used:
 22515 ;;		None
 22516 ;; Tracked objects:
 22517 ;;		On entry : 3F/39
 22518 ;;		On exit  : 3F/39
 22519 ;;		Unchanged: 0/0
 22520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22525 ;;Total ram usage:        0 bytes
 22526 ;; Hardware stack levels used:    1
 22527 ;; Hardware stack levels required when called:    6
 22528 ;; This function calls:
 22529 ;;		Nothing
 22530 ;; This function is called by:
 22531 ;;		_SYSTEM_Initialize
 22532 ;; This function uses a reentrant model
 22533 ;;
 22534                           
 22535                           	psect	text101
 22536  01846C                     __ptext101:
 22537                           	opt callstack 0
 22538  01846C                     _PMD_Initialize:
 22539                           	opt callstack 23
 22540                           
 22541                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22542                           
 22543                           ; BSR set to: 63
 22544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22545                           ;incstack = 0
 22546  01846C  0139               	movlb	57	; () banked
 22547  01846E  6BC0               	clrf	192,b	;volatile
 22548                           
 22549                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22550  018470  6BC1               	clrf	193,b	;volatile
 22551                           
 22552                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22553  018472  6BC2               	clrf	194,b	;volatile
 22554                           
 22555                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22556  018474  6BC3               	clrf	195,b	;volatile
 22557                           
 22558                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22559  018476  6BC4               	clrf	196,b	;volatile
 22560                           
 22561                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22562  018478  6BC5               	clrf	197,b	;volatile
 22563                           
 22564                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22565  01847A  6BC6               	clrf	198,b	;volatile
 22566                           
 22567                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22568  01847C  6BC7               	clrf	199,b	;volatile
 22569                           
 22570                           ; BSR set to: 57
 22571                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22572  01847E  0012               	return		;funcret
 22573  018480                     __end_of_PMD_Initialize:
 22574                           	opt callstack 0
 22575                           
 22576 ;; *************** function _PIN_MANAGER_Initialize *****************
 22577 ;; Defined at:
 22578 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22579 ;; Parameters:    Size  Location     Type
 22580 ;;		None
 22581 ;; Auto vars:     Size  Location     Type
 22582 ;;		None
 22583 ;; Return value:  Size  Location     Type
 22584 ;;                  1  [STACK] void 
 22585 ;; Registers used:
 22586 ;;		wreg, status,2
 22587 ;; Tracked objects:
 22588 ;;		On entry : 3F/39
 22589 ;;		On exit  : 3F/3A
 22590 ;;		Unchanged: 0/0
 22591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;Total ram usage:        0 bytes
 22597 ;; Hardware stack levels used:    1
 22598 ;; Hardware stack levels required when called:    6
 22599 ;; This function calls:
 22600 ;;		Nothing
 22601 ;; This function is called by:
 22602 ;;		_SYSTEM_Initialize
 22603 ;; This function uses a reentrant model
 22604 ;;
 22605                           
 22606                           	psect	text102
 22607  017144                     __ptext102:
 22608                           	opt callstack 0
 22609  017144                     _PIN_MANAGER_Initialize:
 22610                           	opt callstack 23
 22611                           
 22612                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22613                           
 22614                           ; BSR set to: 57
 22615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22616                           ;incstack = 0
 22617  017144  0E07               	movlw	7
 22618  017146  6EBE               	movwf	190,c	;volatile
 22619                           
 22620                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22621  017148  0E80               	movlw	128
 22622  01714A  6EBD               	movwf	189,c	;volatile
 22623                           
 22624                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22625  01714C  6ABA               	clrf	186,c	;volatile
 22626                           
 22627                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22628  01714E  6ABF               	clrf	191,c	;volatile
 22629                           
 22630                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22631  017150  6ABB               	clrf	187,c	;volatile
 22632                           
 22633                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22634  017152  0E07               	movlw	7
 22635  017154  6EBC               	movwf	188,c	;volatile
 22636                           
 22637                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22638  017156  6AC6               	clrf	198,c	;volatile
 22639                           
 22640                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22641  017158  0E0F               	movlw	15
 22642  01715A  6EC7               	movwf	199,c	;volatile
 22643                           
 22644                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22645  01715C  68C2               	setf	194,c	;volatile
 22646                           
 22647                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22648  01715E  0EBF               	movlw	191
 22649  017160  6EC3               	movwf	195,c	;volatile
 22650                           
 22651                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22652  017162  0E90               	movlw	144
 22653  017164  6EC4               	movwf	196,c	;volatile
 22654                           
 22655                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22656  017166  0E0C               	movlw	12
 22657  017168  6EC5               	movwf	197,c	;volatile
 22658                           
 22659                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22660  01716A  013A               	movlb	58	; () banked
 22661  01716C  6B70               	clrf	112,b	;volatile
 22662                           
 22663                           ; BSR set to: 58
 22664                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22665  01716E  6B60               	clrf	96,b	;volatile
 22666                           
 22667                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22668  017170  0E3C               	movlw	60
 22669  017172  6F50               	movwf	80,b	;volatile
 22670                           
 22671                           ; BSR set to: 58
 22672                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22673  017174  6B80               	clrf	128,b	;volatile
 22674                           
 22675                           ; BSR set to: 58
 22676                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22677  017176  6B90               	clrf	144,b	;volatile
 22678                           
 22679                           ; BSR set to: 58
 22680                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22681  017178  6940               	setf	64,b	;volatile
 22682                           
 22683                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22684  01717A  0E0C               	movlw	12
 22685  01717C  6F71               	movwf	113,b	;volatile
 22686                           
 22687                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22688  01717E  0E0F               	movlw	15
 22689  017180  6F91               	movwf	145,b	;volatile
 22690                           
 22691                           ; BSR set to: 58
 22692                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22693  017182  6B81               	clrf	129,b	;volatile
 22694                           
 22695                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22696  017184  0E83               	movlw	131
 22697  017186  6F51               	movwf	81,b	;volatile
 22698                           
 22699                           ; BSR set to: 58
 22700                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22701  017188  6B41               	clrf	65,b	;volatile
 22702                           
 22703                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22704  01718A  0E97               	movlw	151
 22705  01718C  6F61               	movwf	97,b	;volatile
 22706                           
 22707                           ; BSR set to: 58
 22708                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22709  01718E  6B82               	clrf	130,b	;volatile
 22710                           
 22711                           ; BSR set to: 58
 22712                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22713  017190  6B92               	clrf	146,b	;volatile
 22714                           
 22715                           ; BSR set to: 58
 22716                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22717  017192  6B42               	clrf	66,b	;volatile
 22718                           
 22719                           ; BSR set to: 58
 22720                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22721  017194  6B52               	clrf	82,b	;volatile
 22722                           
 22723                           ; BSR set to: 58
 22724                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22725  017196  6B62               	clrf	98,b	;volatile
 22726                           
 22727                           ; BSR set to: 58
 22728                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22729  017198  6B72               	clrf	114,b	;volatile
 22730                           
 22731                           ; BSR set to: 58
 22732                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22733  01719A  6943               	setf	67,b	;volatile
 22734                           
 22735                           ; BSR set to: 58
 22736                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22737  01719C  6953               	setf	83,b	;volatile
 22738                           
 22739                           ; BSR set to: 58
 22740                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22741  01719E  6963               	setf	99,b	;volatile
 22742                           
 22743                           ; BSR set to: 58
 22744                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22745  0171A0  6973               	setf	115,b	;volatile
 22746                           
 22747                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22748  0171A2  0E07               	movlw	7
 22749  0171A4  6F83               	movwf	131,b	;volatile
 22750                           
 22751                           ; BSR set to: 58
 22752                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22753  0171A6  6993               	setf	147,b	;volatile
 22754                           
 22755                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22756  0171A8  0E0F               	movlw	15
 22757  0171AA  6FE8               	movwf	232,b	;volatile
 22758                           
 22759                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22760  0171AC  0E13               	movlw	19
 22761  0171AE  6FDE               	movwf	222,b	;volatile
 22762                           
 22763                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22764  0171B0  0E16               	movlw	22
 22765  0171B2  6F0E               	movwf	14,b	;volatile
 22766                           
 22767                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22768  0171B4  0E1E               	movlw	30
 22769  0171B6  6F13               	movwf	19,b	;volatile
 22770                           
 22771                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22772  0171B8  0E08               	movlw	8
 22773  0171BA  6FC0               	movwf	192,b	;volatile
 22774                           
 22775                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22776  0171BC  0E10               	movlw	16
 22777  0171BE  6F19               	movwf	25,b	;volatile
 22778                           
 22779                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22780  0171C0  0E09               	movlw	9
 22781  0171C2  6FC1               	movwf	193,b	;volatile
 22782                           
 22783                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22784  0171C4  0E1F               	movlw	31
 22785  0171C6  6F15               	movwf	21,b	;volatile
 22786                           
 22787                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22788  0171C8  0E13               	movlw	19
 22789  0171CA  6F16               	movwf	22,b	;volatile
 22790                           
 22791                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22792  0171CC  0E17               	movlw	23
 22793  0171CE  6FE5               	movwf	229,b	;volatile
 22794                           
 22795                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22796  0171D0  0E14               	movlw	20
 22797  0171D2  6FDF               	movwf	223,b	;volatile
 22798                           
 22799                           ; BSR set to: 58
 22800                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22801  0171D4  0012               	return		;funcret
 22802  0171D6                     __end_of_PIN_MANAGER_Initialize:
 22803                           	opt callstack 0
 22804                           
 22805 ;; *************** function _OSCILLATOR_Initialize *****************
 22806 ;; Defined at:
 22807 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22808 ;; Parameters:    Size  Location     Type
 22809 ;;		None
 22810 ;; Auto vars:     Size  Location     Type
 22811 ;;		None
 22812 ;; Return value:  Size  Location     Type
 22813 ;;                  1  [STACK] void 
 22814 ;; Registers used:
 22815 ;;		wreg, status,2
 22816 ;; Tracked objects:
 22817 ;;		On entry : 3F/3A
 22818 ;;		On exit  : 3F/39
 22819 ;;		Unchanged: 0/0
 22820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22825 ;;Total ram usage:        0 bytes
 22826 ;; Hardware stack levels used:    1
 22827 ;; Hardware stack levels required when called:    6
 22828 ;; This function calls:
 22829 ;;		Nothing
 22830 ;; This function is called by:
 22831 ;;		_SYSTEM_Initialize
 22832 ;; This function uses a reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text103
 22836  018456                     __ptext103:
 22837                           	opt callstack 0
 22838  018456                     _OSCILLATOR_Initialize:
 22839                           	opt callstack 23
 22840                           
 22841                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22842                           
 22843                           ; BSR set to: 58
 22844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22845                           ;incstack = 0
 22846  018456  0E20               	movlw	32
 22847  018458  0139               	movlb	57	; () banked
 22848  01845A  6FD9               	movwf	217,b	;volatile
 22849                           
 22850                           ; BSR set to: 57
 22851                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22852  01845C  6BDB               	clrf	219,b	;volatile
 22853                           
 22854                           ; BSR set to: 57
 22855                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22856  01845E  6BDD               	clrf	221,b	;volatile
 22857                           
 22858                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22859  018460  0E02               	movlw	2
 22860  018462  6FDF               	movwf	223,b	;volatile
 22861                           
 22862                           ; BSR set to: 57
 22863                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22864  018464  6BDE               	clrf	222,b	;volatile
 22865  018466                     l171:
 22866                           
 22867                           ; BSR set to: 57
 22868                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22869  018466  B1DC               	btfsc	220,0,b	;volatile
 22870  018468  0012               	return	
 22871  01846A  D7FD               	goto	l171
 22872  01846C                     __end_of_OSCILLATOR_Initialize:
 22873                           	opt callstack 0
 22874                           
 22875 ;; *************** function _INTERRUPT_Initialize *****************
 22876 ;; Defined at:
 22877 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22878 ;; Parameters:    Size  Location     Type
 22879 ;;		None
 22880 ;; Auto vars:     Size  Location     Type
 22881 ;;  state           1  [STACK] _Bool 
 22882 ;; Return value:  Size  Location     Type
 22883 ;;                  1  [STACK] void 
 22884 ;; Registers used:
 22885 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22886 ;; Tracked objects:
 22887 ;;		On entry : 0/0
 22888 ;;		On exit  : 3F/39
 22889 ;;		Unchanged: 0/0
 22890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22895 ;;Total ram usage:        0 bytes
 22896 ;; Hardware stack levels used:    1
 22897 ;; Hardware stack levels required when called:    6
 22898 ;; This function calls:
 22899 ;;		Nothing
 22900 ;; This function is called by:
 22901 ;;		_SYSTEM_Initialize
 22902 ;; This function uses a reentrant model
 22903 ;;
 22904                           
 22905                           	psect	text104
 22906  01759C                     __ptext104:
 22907                           	opt callstack 0
 22908  01759C                     _INTERRUPT_Initialize:
 22909                           	opt callstack 0
 22910                           
 22911                           ; BSR set to: 57
 22912                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22913  01759C  52E6               	movf	postinc1,f,c
 22914                           
 22915                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22916                           
 22917                           ;incstack = 0
 22918  01759E  8AD2               	bsf	210,5,c	;volatile
 22919                           
 22920                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22921  0175A0  AED2               	btfss	16338,7,c	;volatile
 22922  0175A2  D003               	goto	u12260
 22923  0175A4  6A3D               	clrf	(btemp+11)^0,c
 22924  0175A6  2A3D               	incf	(btemp+11)^0,f,c
 22925  0175A8  D001               	goto	u12278
 22926  0175AA                     u12260:
 22927  0175AA  6A3D               	clrf	(btemp+11)^0,c
 22928  0175AC                     u12278:
 22929                           
 22930                           ;stkvar	_state @ sp[(-1)+0]
 22931  0175AC  0EFF               	movlw	-1
 22932  0175AE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 22933                           
 22934                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22935  0175B4  9ED2               	bcf	16338,7,c	;volatile
 22936                           
 22937                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22938  0175B6  0E55               	movlw	85
 22939  0175B8  6ED4               	movwf	212,c	;volatile
 22940                           
 22941                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22942  0175BA  0EAA               	movlw	170
 22943  0175BC  6ED4               	movwf	212,c	;volatile
 22944                           
 22945                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22946  0175BE  90D4               	bcf	212,0,c	;volatile
 22947                           
 22948                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22949  0175C0  0138               	movlb	56	; () banked
 22950  0175C2  6B9F               	clrf	159,b	;volatile
 22951                           
 22952                           ; BSR set to: 56
 22953                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22954  0175C4  6B9E               	clrf	158,b	;volatile
 22955                           
 22956                           ; BSR set to: 56
 22957                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22958  0175C6  0E08               	movlw	8
 22959  0175C8  6F9D               	movwf	157,b	;volatile
 22960                           
 22961                           ; BSR set to: 56
 22962                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22963  0175CA  0E55               	movlw	85
 22964  0175CC  6ED4               	movwf	212,c	;volatile
 22965                           
 22966                           ; BSR set to: 56
 22967                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22968  0175CE  0EAA               	movlw	170
 22969  0175D0  6ED4               	movwf	212,c	;volatile
 22970                           
 22971                           ; BSR set to: 56
 22972                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22973  0175D2  80D4               	bsf	212,0,c	;volatile
 22974                           
 22975                           ; BSR set to: 56
 22976                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22977                           ;stkvar	_state @ sp[(-1)+0]
 22978  0175D4  0EFF               	movlw	-1
 22979  0175D6  B0E3               	btfsc	plusw1,0,c
 22980  0175D8  D002               	bra	u12285
 22981  0175DA  9ED2               	bcf	16338,7,c	;volatile
 22982  0175DC  D001               	bra	u12286
 22983  0175DE                     u12285:
 22984  0175DE  8ED2               	bsf	16338,7,c	;volatile
 22985  0175E0                     u12286:
 22986                           
 22987                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22988  0175E0  0139               	movlb	57	; () banked
 22989  0175E2  8782               	bsf	130,3,b	;volatile
 22990                           
 22991                           ; BSR set to: 57
 22992                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22993  0175E4  8382               	bsf	130,1,b	;volatile
 22994                           
 22995                           ; BSR set to: 57
 22996                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22997  0175E6  8182               	bsf	130,0,b	;volatile
 22998                           
 22999                           ; BSR set to: 57
 23000                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23001  0175E8  8582               	bsf	130,2,b	;volatile
 23002                           
 23003                           ; BSR set to: 57
 23004                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23005  0175EA  8786               	bsf	134,3,b	;volatile
 23006                           
 23007                           ; BSR set to: 57
 23008                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23009  0175EC  8586               	bsf	134,2,b	;volatile
 23010                           
 23011                           ; BSR set to: 57
 23012                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23013  0175EE  8983               	bsf	131,4,b	;volatile
 23014                           
 23015                           ; BSR set to: 57
 23016                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23017  0175F0  8783               	bsf	131,3,b	;volatile
 23018                           
 23019                           ; BSR set to: 57
 23020                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23021  0175F2  8181               	bsf	129,0,b	;volatile
 23022                           
 23023                           ; BSR set to: 57
 23024                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23025  0175F4  9185               	bcf	133,0,b	;volatile
 23026                           
 23027                           ; BSR set to: 57
 23028                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23029  0175F6  8189               	bsf	137,0,b	;volatile
 23030                           
 23031                           ; BSR set to: 57
 23032                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23033  0175F8  9D88               	bcf	136,6,b	;volatile
 23034                           
 23035                           ; BSR set to: 57
 23036                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23037  0175FA  8581               	bsf	129,2,b	;volatile
 23038                           
 23039                           ; BSR set to: 57
 23040                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23041  0175FC  8781               	bsf	129,3,b	;volatile
 23042                           
 23043                           ; BSR set to: 57
 23044                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23045  0175FE  52E5               	movf	postdec1,f,c
 23046  017600  0012               	return		;funcret
 23047  017602                     __end_of_INTERRUPT_Initialize:
 23048                           	opt callstack 0
 23049                           
 23050 ;; *************** function _FVR_Initialize *****************
 23051 ;; Defined at:
 23052 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23053 ;; Parameters:    Size  Location     Type
 23054 ;;		None
 23055 ;; Auto vars:     Size  Location     Type
 23056 ;;		None
 23057 ;; Return value:  Size  Location     Type
 23058 ;;                  1  [STACK] void 
 23059 ;; Registers used:
 23060 ;;		wreg, status,2
 23061 ;; Tracked objects:
 23062 ;;		On entry : 3F/39
 23063 ;;		On exit  : 3F/3E
 23064 ;;		Unchanged: 0/0
 23065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23070 ;;Total ram usage:        0 bytes
 23071 ;; Hardware stack levels used:    1
 23072 ;; Hardware stack levels required when called:    6
 23073 ;; This function calls:
 23074 ;;		Nothing
 23075 ;; This function is called by:
 23076 ;;		_SYSTEM_Initialize
 23077 ;; This function uses a reentrant model
 23078 ;;
 23079                           
 23080                           	psect	text105
 23081  018542                     __ptext105:
 23082                           	opt callstack 0
 23083  018542                     _FVR_Initialize:
 23084                           	opt callstack 23
 23085                           
 23086                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23087                           
 23088                           ; BSR set to: 57
 23089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23090                           ;incstack = 0
 23091  018542  0EAF               	movlw	175
 23092  018544  013E               	movlb	62	; () banked
 23093  018546  6FC1               	movwf	193,b	;volatile
 23094                           
 23095                           ; BSR set to: 62
 23096                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23097  018548  0012               	return		;funcret
 23098  01854A                     __end_of_FVR_Initialize:
 23099                           	opt callstack 0
 23100                           
 23101 ;; *************** function _EXT_INT_Initialize *****************
 23102 ;; Defined at:
 23103 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23104 ;; Parameters:    Size  Location     Type
 23105 ;;		None
 23106 ;; Auto vars:     Size  Location     Type
 23107 ;;		None
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  1  [STACK] void 
 23110 ;; Registers used:
 23111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23112 ;; Tracked objects:
 23113 ;;		On entry : 3F/3F
 23114 ;;		On exit  : 3F/39
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23121 ;;Total ram usage:        0 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; Hardware stack levels required when called:    7
 23124 ;; This function calls:
 23125 ;;		_INT0_SetInterruptHandler
 23126 ;;		_INT1_SetInterruptHandler
 23127 ;; This function is called by:
 23128 ;;		_SYSTEM_Initialize
 23129 ;; This function uses a reentrant model
 23130 ;;
 23131                           
 23132                           	psect	text106
 23133  017D5E                     __ptext106:
 23134                           	opt callstack 0
 23135  017D5E                     _EXT_INT_Initialize:
 23136                           	opt callstack 22
 23137                           
 23138                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23139                           
 23140                           ; BSR set to: 62
 23141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23142                           ;incstack = 0
 23143  017D5E  0139               	movlb	57	; () banked
 23144  017D60  91A1               	bcf	161,0,b	;volatile
 23145                           
 23146                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23147  017D62  90D2               	bcf	210,0,c	;volatile
 23148                           
 23149                           ; BSR set to: 57
 23150                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23151  017D64  0E64               	movlw	low _INT0_DefaultInterruptHandler
 23152  017D66  6EE6               	movwf	postinc1,c
 23153  017D68  0E85               	movlw	high _INT0_DefaultInterruptHandler
 23154  017D6A  6EE6               	movwf	postinc1,c
 23155  017D6C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23156  017D6E  6EE6               	movwf	postinc1,c
 23157  017D70  EC73  F0C0         	call	_INT0_SetInterruptHandler	;wreg free
 23158                           
 23159                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23160  017D74  0139               	movlb	57	; () banked
 23161  017D76  8191               	bsf	145,0,b	;volatile
 23162                           
 23163                           ; BSR set to: 57
 23164                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23165  017D78  91A5               	bcf	165,0,b	;volatile
 23166                           
 23167                           ; BSR set to: 57
 23168                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23169  017D7A  92D2               	bcf	210,1,c	;volatile
 23170                           
 23171                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23172  017D7C  0E62               	movlw	low _INT1_DefaultInterruptHandler
 23173  017D7E  6EE6               	movwf	postinc1,c
 23174  017D80  0E85               	movlw	high _INT1_DefaultInterruptHandler
 23175  017D82  6EE6               	movwf	postinc1,c
 23176  017D84  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23177  017D86  6EE6               	movwf	postinc1,c
 23178  017D88  EC5F  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23179                           
 23180                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23181  017D8C  0139               	movlb	57	; () banked
 23182  017D8E  8195               	bsf	149,0,b	;volatile
 23183                           
 23184                           ; BSR set to: 57
 23185                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23186  017D90  0012               	return		;funcret
 23187  017D92                     __end_of_EXT_INT_Initialize:
 23188                           	opt callstack 0
 23189                           
 23190 ;; *************** function _INT1_SetInterruptHandler *****************
 23191 ;; Defined at:
 23192 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23193 ;; Parameters:    Size  Location     Type
 23194 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23195 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23196 ;; Auto vars:     Size  Location     Type
 23197 ;;		None
 23198 ;; Return value:  Size  Location     Type
 23199 ;;                  1  [STACK] void 
 23200 ;; Registers used:
 23201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23202 ;; Tracked objects:
 23203 ;;		On entry : 3F/39
 23204 ;;		On exit  : 0/0
 23205 ;;		Unchanged: 0/0
 23206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;Total ram usage:        0 bytes
 23212 ;; Hardware stack levels used:    1
 23213 ;; Hardware stack levels required when called:    6
 23214 ;; This function calls:
 23215 ;;		Nothing
 23216 ;; This function is called by:
 23217 ;;		_EXT_INT_Initialize
 23218 ;;		_start_switch_handler
 23219 ;; This function uses a reentrant model
 23220 ;;
 23221                           
 23222                           	psect	text107
 23223  0180BE                     __ptext107:
 23224                           	opt callstack 0
 23225  0180BE                     _INT1_SetInterruptHandler:
 23226                           	opt callstack 23
 23227                           
 23228                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23229                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23230                           
 23231                           ; BSR set to: 57
 23232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23233                           ;incstack = 0
 23234  0180BE  50E1               	movf	fsr1l,w,c
 23235  0180C0  0FFD               	addlw	-3
 23236  0180C2  6ED9               	movwf	fsr2l,c
 23237  0180C4  50E2               	movf	fsr1h,w,c
 23238  0180C6  6EDA               	movwf	fsr2h,c
 23239  0180C8  0EFF               	movlw	255
 23240  0180CA  22DA               	addwfc	fsr2h,f,c
 23241  0180CC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23242  0180D2  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23243  0180D8  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23244                           
 23245                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23246  0180DE  52E5               	movf	postdec1,f,c
 23247  0180E0  52E5               	movf	postdec1,f,c
 23248  0180E2  52E5               	movf	postdec1,f,c
 23249  0180E4  0012               	return		;funcret
 23250  0180E6                     __end_of_INT1_SetInterruptHandler:
 23251                           	opt callstack 0
 23252                           
 23253 ;; *************** function _INT0_SetInterruptHandler *****************
 23254 ;; Defined at:
 23255 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23256 ;; Parameters:    Size  Location     Type
 23257 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23258 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23259 ;; Auto vars:     Size  Location     Type
 23260 ;;		None
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  1  [STACK] void 
 23263 ;; Registers used:
 23264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23265 ;; Tracked objects:
 23266 ;;		On entry : 3F/39
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23274 ;;Total ram usage:        0 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; Hardware stack levels required when called:    6
 23277 ;; This function calls:
 23278 ;;		Nothing
 23279 ;; This function is called by:
 23280 ;;		_EXT_INT_Initialize
 23281 ;; This function uses a reentrant model
 23282 ;;
 23283                           
 23284                           	psect	text108
 23285  0180E6                     __ptext108:
 23286                           	opt callstack 0
 23287  0180E6                     _INT0_SetInterruptHandler:
 23288                           	opt callstack 22
 23289                           
 23290                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23291                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23292                           
 23293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23294                           ;incstack = 0
 23295  0180E6  50E1               	movf	fsr1l,w,c
 23296  0180E8  0FFD               	addlw	-3
 23297  0180EA  6ED9               	movwf	fsr2l,c
 23298  0180EC  50E2               	movf	fsr1h,w,c
 23299  0180EE  6EDA               	movwf	fsr2h,c
 23300  0180F0  0EFF               	movlw	255
 23301  0180F2  22DA               	addwfc	fsr2h,f,c
 23302  0180F4  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23303  0180FA  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23304  018100  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23305                           
 23306                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23307  018106  52E5               	movf	postdec1,f,c
 23308  018108  52E5               	movf	postdec1,f,c
 23309  01810A  52E5               	movf	postdec1,f,c
 23310  01810C  0012               	return		;funcret
 23311  01810E                     __end_of_INT0_SetInterruptHandler:
 23312                           	opt callstack 0
 23313                           
 23314 ;; *************** function _DMA2_Initialize *****************
 23315 ;; Defined at:
 23316 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23317 ;; Parameters:    Size  Location     Type
 23318 ;;		None
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;		None
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  1  [STACK] void 
 23323 ;; Registers used:
 23324 ;;		wreg, status,2
 23325 ;; Tracked objects:
 23326 ;;		On entry : 3F/3D
 23327 ;;		On exit  : 3F/3B
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;Total ram usage:        0 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:    6
 23337 ;; This function calls:
 23338 ;;		Nothing
 23339 ;; This function is called by:
 23340 ;;		_SYSTEM_Initialize
 23341 ;; This function uses a reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text109
 23345  017846                     __ptext109:
 23346                           	opt callstack 0
 23347  017846                     _DMA2_Initialize:
 23348                           	opt callstack 23
 23349                           
 23350                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23351                           
 23352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23353                           ;incstack = 0
 23354  017846  0E00               	movlw	0
 23355  017848  013B               	movlb	59	; () banked
 23356  01784A  6FD9               	movwf	217,b	;volatile
 23357  01784C  0E10               	movlw	16
 23358  01784E  6FDA               	movwf	218,b	;volatile
 23359  017850  0E00               	movlw	0
 23360  017852  6FDB               	movwf	219,b	;volatile
 23361                           
 23362                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23363  017854  0E3F               	movlw	63
 23364  017856  6FD1               	movwf	209,b	;volatile
 23365  017858  0EBB               	movlw	187
 23366  01785A  6FD0               	movwf	208,b	;volatile
 23367                           
 23368                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23369  01785C  0E03               	movlw	3
 23370  01785E  6FDD               	movwf	221,b	;volatile
 23371                           
 23372                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23373  017860  0E00               	movlw	0
 23374  017862  6FD8               	movwf	216,b	;volatile
 23375  017864  0E01               	movlw	1
 23376  017866  6FD7               	movwf	215,b	;volatile
 23377                           
 23378                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23379  017868  0E00               	movlw	0
 23380  01786A  6FCF               	movwf	207,b	;volatile
 23381  01786C  0E01               	movlw	1
 23382  01786E  6FCE               	movwf	206,b	;volatile
 23383                           
 23384                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23385  017870  0E46               	movlw	70
 23386  017872  6FDF               	movwf	223,b	;volatile
 23387                           
 23388                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23389  017874  0E3D               	movlw	61
 23390  017876  6FDE               	movwf	222,b	;volatile
 23391                           
 23392                           ; BSR set to: 59
 23393                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23394  017878  0139               	movlb	57	; () banked
 23395  01787A  97A5               	bcf	165,3,b	;volatile
 23396                           
 23397                           ; BSR set to: 57
 23398                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23399  01787C  95A5               	bcf	165,2,b	;volatile
 23400                           
 23401                           ; BSR set to: 57
 23402                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23403  01787E  9BA5               	bcf	165,5,b	;volatile
 23404                           
 23405                           ; BSR set to: 57
 23406                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23407  017880  99A5               	bcf	165,4,b	;volatile
 23408                           
 23409                           ; BSR set to: 57
 23410                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23411  017882  9795               	bcf	149,3,b	;volatile
 23412                           
 23413                           ; BSR set to: 57
 23414                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23415  017884  9595               	bcf	149,2,b	;volatile
 23416                           
 23417                           ; BSR set to: 57
 23418                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23419  017886  9B95               	bcf	149,5,b	;volatile
 23420                           
 23421                           ; BSR set to: 57
 23422                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23423  017888  9995               	bcf	149,4,b	;volatile
 23424  01788A  9ED2               	bcf	16338,7,c	;# 
 23425  01788C  0139               	banksel	14831	;# 
 23426  01788E  0E55               	movlw	85	;# 
 23427  017890  6FEF               	movwf	14831,b	;# 
 23428  017892  0EAA               	movlw	170	;# 
 23429  017894  6FEF               	movwf	14831,b	;# 
 23430  017896  81EF               	bsf	14831,0,b	;# 
 23431  017898  8ED2               	bsf	16338,7,c	;# 
 23432                           
 23433                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23434  01789A  013B               	movlb	59	; () banked
 23435  01789C  6BDC               	clrf	220,b	;volatile
 23436                           
 23437                           ; BSR set to: 59
 23438                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23439  01789E  0012               	return		;funcret
 23440  0178A0                     __end_of_DMA2_Initialize:
 23441                           	opt callstack 0
 23442                           
 23443 ;; *************** function _DMA1_Initialize *****************
 23444 ;; Defined at:
 23445 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23446 ;; Parameters:    Size  Location     Type
 23447 ;;		None
 23448 ;; Auto vars:     Size  Location     Type
 23449 ;;		None
 23450 ;; Return value:  Size  Location     Type
 23451 ;;                  1  [STACK] void 
 23452 ;; Registers used:
 23453 ;;		wreg, status,2
 23454 ;; Tracked objects:
 23455 ;;		On entry : 3F/3B
 23456 ;;		On exit  : 3F/3B
 23457 ;;		Unchanged: 0/0
 23458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23463 ;;Total ram usage:        0 bytes
 23464 ;; Hardware stack levels used:    1
 23465 ;; Hardware stack levels required when called:    6
 23466 ;; This function calls:
 23467 ;;		Nothing
 23468 ;; This function is called by:
 23469 ;;		_SYSTEM_Initialize
 23470 ;; This function uses a reentrant model
 23471 ;;
 23472                           
 23473                           	psect	text110
 23474  01745E                     __ptext110:
 23475                           	opt callstack 0
 23476  01745E                     _DMA1_Initialize:
 23477                           	opt callstack 23
 23478                           
 23479                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23480                           
 23481                           ; BSR set to: 59
 23482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23483                           ;incstack = 0
 23484  01745E  0E00               	movlw	0
 23485  017460  013B               	movlb	59	; () banked
 23486  017462  6FF9               	movwf	249,b	;volatile
 23487  017464  0E10               	movlw	16
 23488  017466  6FFA               	movwf	250,b	;volatile
 23489  017468  0E00               	movlw	0
 23490  01746A  6FFB               	movwf	251,b	;volatile
 23491                           
 23492                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23493  01746C  0E3D               	movlw	61
 23494  01746E  6FF1               	movwf	241,b	;volatile
 23495  017470  0E11               	movlw	17
 23496  017472  6FF0               	movwf	240,b	;volatile
 23497                           
 23498                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23499  017474  0E03               	movlw	3
 23500  017476  6FFD               	movwf	253,b	;volatile
 23501                           
 23502                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23503  017478  0E00               	movlw	0
 23504  01747A  6FF8               	movwf	248,b	;volatile
 23505  01747C  0E01               	movlw	1
 23506  01747E  6FF7               	movwf	247,b	;volatile
 23507                           
 23508                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23509  017480  0E00               	movlw	0
 23510  017482  6FEF               	movwf	239,b	;volatile
 23511  017484  0E01               	movlw	1
 23512  017486  6FEE               	movwf	238,b	;volatile
 23513                           
 23514                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23515  017488  0E15               	movlw	21
 23516  01748A  6FFF               	movwf	255,b	;volatile
 23517                           
 23518                           ; BSR set to: 59
 23519                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23520  01748C  6BFE               	clrf	254,b	;volatile
 23521                           
 23522                           ; BSR set to: 59
 23523                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23524  01748E  0139               	movlb	57	; () banked
 23525  017490  93A2               	bcf	162,1,b	;volatile
 23526                           
 23527                           ; BSR set to: 57
 23528                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23529  017492  91A2               	bcf	162,0,b	;volatile
 23530                           
 23531                           ; BSR set to: 57
 23532                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23533  017494  97A2               	bcf	162,3,b	;volatile
 23534                           
 23535                           ; BSR set to: 57
 23536                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23537  017496  95A2               	bcf	162,2,b	;volatile
 23538                           
 23539                           ; BSR set to: 57
 23540                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23541  017498  8392               	bsf	146,1,b	;volatile
 23542                           
 23543                           ; BSR set to: 57
 23544                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23545  01749A  8192               	bsf	146,0,b	;volatile
 23546                           
 23547                           ; BSR set to: 57
 23548                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23549  01749C  8792               	bsf	146,3,b	;volatile
 23550                           
 23551                           ; BSR set to: 57
 23552                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23553  01749E  8592               	bsf	146,2,b	;volatile
 23554                           
 23555                           ; BSR set to: 57
 23556                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23557  0174A0  6BF1               	clrf	241,b	;volatile
 23558                           
 23559                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23560  0174A2  0E01               	movlw	1
 23561  0174A4  6FF2               	movwf	242,b	;volatile
 23562                           
 23563                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23564  0174A6  0E04               	movlw	4
 23565  0174A8  6FF3               	movwf	243,b	;volatile
 23566                           
 23567                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23568  0174AA  0E02               	movlw	2
 23569  0174AC  6FF4               	movwf	244,b	;volatile
 23570                           
 23571                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23572  0174AE  0E03               	movlw	3
 23573  0174B0  6FF7               	movwf	247,b	;volatile
 23574  0174B2  9ED2               	bcf	16338,7,c	;# 
 23575  0174B4  0139               	banksel	14831	;# 
 23576  0174B6  0E55               	movlw	85	;# 
 23577  0174B8  6FEF               	movwf	14831,b	;# 
 23578  0174BA  0EAA               	movlw	170	;# 
 23579  0174BC  6FEF               	movwf	14831,b	;# 
 23580  0174BE  81EF               	bsf	14831,0,b	;# 
 23581  0174C0  8ED2               	bsf	16338,7,c	;# 
 23582                           
 23583                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23584  0174C2  013B               	movlb	59	; () banked
 23585  0174C4  6BFC               	clrf	252,b	;volatile
 23586                           
 23587                           ; BSR set to: 59
 23588                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23589  0174C6  0012               	return		;funcret
 23590  0174C8                     __end_of_DMA1_Initialize:
 23591                           	opt callstack 0
 23592                           
 23593 ;; *************** function _CLKREF_Initialize *****************
 23594 ;; Defined at:
 23595 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23596 ;; Parameters:    Size  Location     Type
 23597 ;;		None
 23598 ;; Auto vars:     Size  Location     Type
 23599 ;;		None
 23600 ;; Return value:  Size  Location     Type
 23601 ;;                  1  [STACK] void 
 23602 ;; Registers used:
 23603 ;;		wreg, status,2
 23604 ;; Tracked objects:
 23605 ;;		On entry : 3F/3B
 23606 ;;		On exit  : 3F/3C
 23607 ;;		Unchanged: 0/0
 23608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23613 ;;Total ram usage:        0 bytes
 23614 ;; Hardware stack levels used:    1
 23615 ;; Hardware stack levels required when called:    6
 23616 ;; This function calls:
 23617 ;;		Nothing
 23618 ;; This function is called by:
 23619 ;;		_SYSTEM_Initialize
 23620 ;; This function uses a reentrant model
 23621 ;;
 23622                           
 23623                           	psect	text111
 23624  0184EE                     __ptext111:
 23625                           	opt callstack 0
 23626  0184EE                     _CLKREF_Initialize:
 23627                           	opt callstack 23
 23628                           
 23629                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23630                           
 23631                           ; BSR set to: 59
 23632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23633                           ;incstack = 0
 23634  0184EE  013C               	movlb	60	; () banked
 23635  0184F0  6BE6               	clrf	230,b	;volatile
 23636                           
 23637                           ; BSR set to: 60
 23638                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23639  0184F2  0E94               	movlw	148
 23640  0184F4  6FE5               	movwf	229,b	;volatile
 23641                           
 23642                           ; BSR set to: 60
 23643                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23644  0184F6  0012               	return		;funcret
 23645  0184F8                     __end_of_CLKREF_Initialize:
 23646                           	opt callstack 0
 23647                           
 23648 ;; *************** function _ADCC_Initialize *****************
 23649 ;; Defined at:
 23650 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23651 ;; Parameters:    Size  Location     Type
 23652 ;;		None
 23653 ;; Auto vars:     Size  Location     Type
 23654 ;;		None
 23655 ;; Return value:  Size  Location     Type
 23656 ;;                  1  [STACK] void 
 23657 ;; Registers used:
 23658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23659 ;; Tracked objects:
 23660 ;;		On entry : 3F/3E
 23661 ;;		On exit  : 0/0
 23662 ;;		Unchanged: 0/0
 23663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23668 ;;Total ram usage:        0 bytes
 23669 ;; Hardware stack levels used:    1
 23670 ;; Hardware stack levels required when called:    7
 23671 ;; This function calls:
 23672 ;;		_ADCC_SetADIInterruptHandler
 23673 ;;		_ADCC_SetADTIInterruptHandler
 23674 ;; This function is called by:
 23675 ;;		_SYSTEM_Initialize
 23676 ;; This function uses a reentrant model
 23677 ;;
 23678                           
 23679                           	psect	text112
 23680  0174C8                     __ptext112:
 23681                           	opt callstack 0
 23682  0174C8                     _ADCC_Initialize:
 23683                           	opt callstack 22
 23684                           
 23685                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23686                           
 23687                           ; BSR set to: 60
 23688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23689                           ;incstack = 0
 23690  0174C8  013E               	movlb	62	; () banked
 23691  0174CA  6BDE               	clrf	222,b	;volatile
 23692                           
 23693                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23694  0174CC  6BDF               	clrf	223,b	;volatile
 23695                           
 23696                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23697  0174CE  6BE0               	clrf	224,b	;volatile
 23698                           
 23699                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23700  0174D0  6BE1               	clrf	225,b	;volatile
 23701                           
 23702                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23703  0174D2  6BE4               	clrf	228,b	;volatile
 23704                           
 23705                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23706  0174D4  6BE5               	clrf	229,b	;volatile
 23707                           
 23708                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23709  0174D6  6BEA               	clrf	234,b	;volatile
 23710                           
 23711                           ; BSR set to: 62
 23712                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23713  0174D8  0E40               	movlw	64
 23714  0174DA  6FEC               	movwf	236,b	;volatile
 23715                           
 23716                           ; BSR set to: 62
 23717                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23718  0174DC  6BF1               	clrf	241,b	;volatile
 23719                           
 23720                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23721  0174DE  0E20               	movlw	32
 23722  0174E0  6FF3               	movwf	243,b	;volatile
 23723                           
 23724                           ; BSR set to: 62
 23725                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23726  0174E2  6BF4               	clrf	244,b	;volatile
 23727                           
 23728                           ; BSR set to: 62
 23729                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23730  0174E4  6BF5               	clrf	245,b	;volatile
 23731                           
 23732                           ; BSR set to: 62
 23733                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23734  0174E6  6BF6               	clrf	246,b	;volatile
 23735                           
 23736                           ; BSR set to: 62
 23737                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23738  0174E8  6BF7               	clrf	247,b	;volatile
 23739                           
 23740                           ; BSR set to: 62
 23741                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23742  0174EA  6BF9               	clrf	249,b	;volatile
 23743                           
 23744                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23745  0174EC  0E5B               	movlw	91
 23746  0174EE  6FFA               	movwf	250,b	;volatile
 23747                           
 23748                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23749  0174F0  0E27               	movlw	39
 23750  0174F2  6FFB               	movwf	251,b	;volatile
 23751                           
 23752                           ; BSR set to: 62
 23753                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23754  0174F4  6BFC               	clrf	252,b	;volatile
 23755                           
 23756                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23757  0174F6  0E02               	movlw	2
 23758  0174F8  6FFD               	movwf	253,b	;volatile
 23759                           
 23760                           ; BSR set to: 62
 23761                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23762  0174FA  6BFE               	clrf	254,b	;volatile
 23763                           
 23764                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23765  0174FC  0E07               	movlw	7
 23766  0174FE  6FFF               	movwf	255,b	;volatile
 23767                           
 23768                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23769  017500  0E84               	movlw	132
 23770  017502  6FF8               	movwf	248,b	;volatile
 23771                           
 23772                           ; BSR set to: 62
 23773                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23774  017504  0139               	movlb	57	; () banked
 23775  017506  95A1               	bcf	161,2,b	;volatile
 23776                           
 23777                           ; BSR set to: 57
 23778                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23779  017508  8591               	bsf	145,2,b	;volatile
 23780                           
 23781                           ; BSR set to: 57
 23782                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23783  01750A  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 23784  01750C  6EE6               	movwf	postinc1,c
 23785  01750E  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23786  017510  6EE6               	movwf	postinc1,c
 23787  017512  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23788  017514  6EE6               	movwf	postinc1,c
 23789  017516  EC9B  F0C0         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23790                           
 23791                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23792  01751A  0139               	movlb	57	; () banked
 23793  01751C  97A1               	bcf	161,3,b	;volatile
 23794                           
 23795                           ; BSR set to: 57
 23796                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23797  01751E  8791               	bsf	145,3,b	;volatile
 23798                           
 23799                           ; BSR set to: 57
 23800                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23801  017520  0E66               	movlw	low _ADCC_DefaultInterruptHandler
 23802  017522  6EE6               	movwf	postinc1,c
 23803  017524  0E85               	movlw	high _ADCC_DefaultInterruptHandler
 23804  017526  6EE6               	movwf	postinc1,c
 23805  017528  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23806  01752A  6EE6               	movwf	postinc1,c
 23807  01752C  EC87  F0C0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23808                           
 23809                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23810  017530  0012               	return		;funcret
 23811  017532                     __end_of_ADCC_Initialize:
 23812                           	opt callstack 0
 23813                           
 23814 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23815 ;; Defined at:
 23816 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23817 ;; Parameters:    Size  Location     Type
 23818 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23819 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23820 ;; Auto vars:     Size  Location     Type
 23821 ;;		None
 23822 ;; Return value:  Size  Location     Type
 23823 ;;                  1  [STACK] void 
 23824 ;; Registers used:
 23825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23826 ;; Tracked objects:
 23827 ;;		On entry : 0/0
 23828 ;;		On exit  : 0/0
 23829 ;;		Unchanged: 0/0
 23830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23835 ;;Total ram usage:        0 bytes
 23836 ;; Hardware stack levels used:    1
 23837 ;; Hardware stack levels required when called:    6
 23838 ;; This function calls:
 23839 ;;		Nothing
 23840 ;; This function is called by:
 23841 ;;		_ADCC_Initialize
 23842 ;;		_start_adc_scan
 23843 ;; This function uses a reentrant model
 23844 ;;
 23845                           
 23846                           	psect	text113
 23847  01810E                     __ptext113:
 23848                           	opt callstack 0
 23849  01810E                     _ADCC_SetADTIInterruptHandler:
 23850                           	opt callstack 23
 23851                           
 23852                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23853                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23854                           
 23855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23856                           ;incstack = 0
 23857  01810E  50E1               	movf	fsr1l,w,c
 23858  018110  0FFD               	addlw	-3
 23859  018112  6ED9               	movwf	fsr2l,c
 23860  018114  50E2               	movf	fsr1h,w,c
 23861  018116  6EDA               	movwf	fsr2h,c
 23862  018118  0EFF               	movlw	255
 23863  01811A  22DA               	addwfc	fsr2h,f,c
 23864  01811C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23865  018122  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23866  018128  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23867                           
 23868                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23869  01812E  52E5               	movf	postdec1,f,c
 23870  018130  52E5               	movf	postdec1,f,c
 23871  018132  52E5               	movf	postdec1,f,c
 23872  018134  0012               	return		;funcret
 23873  018136                     __end_of_ADCC_SetADTIInterruptHandler:
 23874                           	opt callstack 0
 23875                           
 23876 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23877 ;; Defined at:
 23878 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23879 ;; Parameters:    Size  Location     Type
 23880 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23881 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23882 ;; Auto vars:     Size  Location     Type
 23883 ;;		None
 23884 ;; Return value:  Size  Location     Type
 23885 ;;                  1  [STACK] void 
 23886 ;; Registers used:
 23887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23888 ;; Tracked objects:
 23889 ;;		On entry : 6/0
 23890 ;;		On exit  : 0/0
 23891 ;;		Unchanged: 0/0
 23892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23897 ;;Total ram usage:        0 bytes
 23898 ;; Hardware stack levels used:    1
 23899 ;; Hardware stack levels required when called:    6
 23900 ;; This function calls:
 23901 ;;		Nothing
 23902 ;; This function is called by:
 23903 ;;		_ADCC_Initialize
 23904 ;;		_start_adc_scan
 23905 ;; This function uses a reentrant model
 23906 ;;
 23907                           
 23908                           	psect	text114
 23909  018136                     __ptext114:
 23910                           	opt callstack 0
 23911  018136                     _ADCC_SetADIInterruptHandler:
 23912                           	opt callstack 23
 23913                           
 23914                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23915                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23916                           
 23917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23918                           ;incstack = 0
 23919  018136  50E1               	movf	fsr1l,w,c
 23920  018138  0FFD               	addlw	-3
 23921  01813A  6ED9               	movwf	fsr2l,c
 23922  01813C  50E2               	movf	fsr1h,w,c
 23923  01813E  6EDA               	movwf	fsr2h,c
 23924  018140  0EFF               	movlw	255
 23925  018142  22DA               	addwfc	fsr2h,f,c
 23926  018144  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23927  01814A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23928  018150  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23929                           
 23930                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23931  018156  52E5               	movf	postdec1,f,c
 23932  018158  52E5               	movf	postdec1,f,c
 23933  01815A  52E5               	movf	postdec1,f,c
 23934  01815C  0012               	return		;funcret
 23935  01815E                     __end_of_ADCC_SetADIInterruptHandler:
 23936                           	opt callstack 0
 23937                           
 23938 ;; *************** function _INT1_ISR *****************
 23939 ;; Defined at:
 23940 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 23941 ;; Parameters:    Size  Location     Type
 23942 ;;		None
 23943 ;; Auto vars:     Size  Location     Type
 23944 ;;		None
 23945 ;; Return value:  Size  Location     Type
 23946 ;;                  1    wreg      void 
 23947 ;; Registers used:
 23948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 23949 ;; Tracked objects:
 23950 ;;		On entry : 0/0
 23951 ;;		On exit  : 0/0
 23952 ;;		Unchanged: 0/0
 23953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23958 ;;Total ram usage:        4 bytes
 23959 ;; Hardware stack levels used:    1
 23960 ;; Hardware stack levels required when called:    5
 23961 ;; This function calls:
 23962 ;;		_INT1_CallBack
 23963 ;; This function is called by:
 23964 ;;		Interrupt level 1
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           	psect	text115
 23969  017C0C                     __ptext115:
 23970                           	opt callstack 0
 23971  017C0C                     _INT1_ISR:
 23972                           	opt callstack 12
 23973                           
 23974                           ;incstack = 0
 23975  017C0C  006F FF60  F0F6    	movff	status,??_INT1_ISR
 23976  017C12  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 23977  017C18  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 23978  017C1E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 23979  017C24  EE16  F000         	lfsr	1,___intlo_sp
 23980                           
 23981                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 23982  017C28  0139               	movlb	57	; () banked
 23983  017C2A  91A5               	bcf	165,0,b	;volatile
 23984                           
 23985                           ; BSR set to: 57
 23986                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 23987  017C2C  EC49  F0C1         	call	_INT1_CallBack	;wreg free
 23988  017C30  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 23989  017C36  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 23990  017C3C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 23991  017C42  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 23992  017C48  0011               	retfie		f
 23993  017C4A                     __end_of_INT1_ISR:
 23994                           	opt callstack 0
 23995                           
 23996 ;; *************** function _INT1_CallBack *****************
 23997 ;; Defined at:
 23998 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 23999 ;; Parameters:    Size  Location     Type
 24000 ;;		None
 24001 ;; Auto vars:     Size  Location     Type
 24002 ;;		None
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  1  [STACK] void 
 24005 ;; Registers used:
 24006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24007 ;; Tracked objects:
 24008 ;;		On entry : 3F/39
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24016 ;;Total ram usage:        0 bytes
 24017 ;; Hardware stack levels used:    1
 24018 ;; Hardware stack levels required when called:    4
 24019 ;; This function calls:
 24020 ;;		Absolute function
 24021 ;;		_INT1_DefaultInterruptHandler
 24022 ;;		_switch_handler
 24023 ;; This function is called by:
 24024 ;;		_INT1_ISR
 24025 ;; This function uses a reentrant model
 24026 ;;
 24027                           
 24028                           	psect	text116
 24029  018292                     __ptext116:
 24030                           	opt callstack 0
 24031  018292                     _INT1_CallBack:
 24032                           	opt callstack 12
 24033                           
 24034                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24035                           
 24036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24037                           ;incstack = 0
 24038  018292  5013               	movf	_INT1_InterruptHandler^0,w,c
 24039  018294  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24040  018296  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24041  018298  B4D8               	btfsc	status,2,c
 24042  01829A  0012               	return	
 24043                           
 24044                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24045  01829C  D801               	call	u830_28
 24046  01829E  0012               	return	
 24047  0182A0                     u830_28:
 24048  0182A0  0005               	push	
 24049  0182A2  6EFA               	movwf	pclath,c
 24050  0182A4  5013               	movf	_INT1_InterruptHandler^0,w,c
 24051  0182A6  6EFD               	movwf	tosl,c
 24052  0182A8  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24053  0182AA  6EFE               	movwf	tosh,c
 24054  0182AC  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24055  0182AE  6EFF               	movwf	tosu,c
 24056  0182B0  50FA               	movf	pclath,w,c
 24057  0182B2  0012               	return		;indir
 24058  0182B4                     __end_of_INT1_CallBack:
 24059                           	opt callstack 0
 24060                           
 24061 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24062 ;; Defined at:
 24063 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24064 ;; Parameters:    Size  Location     Type
 24065 ;;		None
 24066 ;; Auto vars:     Size  Location     Type
 24067 ;;		None
 24068 ;; Return value:  Size  Location     Type
 24069 ;;                  1  [STACK] void 
 24070 ;; Registers used:
 24071 ;;		None
 24072 ;; Tracked objects:
 24073 ;;		On entry : 0/39
 24074 ;;		On exit  : 0/0
 24075 ;;		Unchanged: 0/0
 24076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24081 ;;Total ram usage:        0 bytes
 24082 ;; Hardware stack levels used:    1
 24083 ;; Hardware stack levels required when called:    3
 24084 ;; This function calls:
 24085 ;;		Nothing
 24086 ;; This function is called by:
 24087 ;;		_EXT_INT_Initialize
 24088 ;;		_INT1_CallBack
 24089 ;; This function uses a reentrant model
 24090 ;;
 24091                           
 24092                           	psect	text117
 24093  018562                     __ptext117:
 24094                           	opt callstack 0
 24095  018562                     _INT1_DefaultInterruptHandler:
 24096                           	opt callstack 12
 24097                           
 24098                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24099                           
 24100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24101                           ;incstack = 0
 24102  018562  0012               	return		;funcret
 24103  018564                     __end_of_INT1_DefaultInterruptHandler:
 24104                           	opt callstack 0
 24105                           
 24106 ;; *************** function _switch_handler *****************
 24107 ;; Defined at:
 24108 ;;		line 58 in file "dio.c"
 24109 ;; Parameters:    Size  Location     Type
 24110 ;;		None
 24111 ;; Auto vars:     Size  Location     Type
 24112 ;;  i               1  [STACK] unsigned char 
 24113 ;;  sw_value        1  [STACK] unsigned char 
 24114 ;; Return value:  Size  Location     Type
 24115 ;;                  1  [STACK] void 
 24116 ;; Registers used:
 24117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24118 ;; Tracked objects:
 24119 ;;		On entry : 0/39
 24120 ;;		On exit  : 0/0
 24121 ;;		Unchanged: 0/0
 24122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24127 ;;Total ram usage:        0 bytes
 24128 ;; Hardware stack levels used:    1
 24129 ;; Hardware stack levels required when called:    3
 24130 ;; This function calls:
 24131 ;;		Nothing
 24132 ;; This function is called by:
 24133 ;;		_start_switch_handler
 24134 ;;		_INT1_CallBack
 24135 ;; This function uses a reentrant model
 24136 ;;
 24137                           
 24138                           	psect	text118
 24139  016170                     __ptext118:
 24140                           	opt callstack 0
 24141  016170                     _switch_handler:
 24142                           	opt callstack 0
 24143                           
 24144                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24145  016170  52E6               	movf	postinc1,f,c
 24146  016172  52E6               	movf	postinc1,f,c
 24147                           
 24148                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24149                           ;stkvar	_i @ sp[(-2)+0]
 24150                           
 24151                           ;incstack = 0
 24152  016174  0EFE               	movlw	-2
 24153  016176  6AE3               	clrf	plusw1,c
 24154  016178  9EBD               	bcf	189,7,c	;volatile
 24155  01617A  82BE               	bsf	190,1,c	;volatile
 24156                           
 24157                           ;dio.c: 72:  __nop();
 24158  01617C  F000               	nop	
 24159                           
 24160                           ;dio.c: 73:  __nop();
 24161  01617E  F000               	nop	
 24162                           
 24163                           ;dio.c: 74:  __nop();
 24164  016180  F000               	nop	
 24165  016182  D019               	goto	l8643
 24166  016184                     l8631:
 24167                           
 24168                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24169  016184  A6CF               	btfss	207,3,c	;volatile
 24170  016186  D011               	goto	u822_20
 24171  016188  D00D               	goto	u822_21
 24172  01618A                     u819_28:
 24173                           
 24174                           ;stkvar	_sw_value @ sp[(-2)+1]
 24175  01618A  0EFF               	movlw	-1
 24176  01618C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24177                           
 24178                           ;dio.c: 80:    break;
 24179  016192  D027               	goto	l8645
 24180  016194                     l8633:
 24181                           
 24182                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24183  016194  A4CF               	btfss	207,2,c	;volatile
 24184  016196  D009               	goto	u822_20
 24185  016198  D005               	goto	u822_21
 24186  01619A                     l8635:
 24187                           
 24188                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24189  01619A  A2CF               	btfss	207,1,c	;volatile
 24190  01619C  D006               	goto	u822_20
 24191  01619E  D002               	goto	u822_21
 24192  0161A0                     l8637:
 24193                           
 24194                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24195  0161A0  A0CF               	btfss	207,0,c	;volatile
 24196  0161A2  D003               	goto	u822_20
 24197  0161A4                     u822_21:
 24198  0161A4  6A3D               	clrf	(btemp+11)^0,c
 24199  0161A6  2A3D               	incf	(btemp+11)^0,f,c
 24200  0161A8  D7F0               	goto	u819_28
 24201  0161AA                     u822_20:
 24202  0161AA  6A3D               	clrf	(btemp+11)^0,c
 24203  0161AC  D7EE               	goto	u819_28
 24204  0161AE                     l8639:
 24205                           
 24206                           ;dio.c: 91:    sw_value = 1;
 24207                           ;stkvar	_sw_value @ sp[(-2)+1]
 24208  0161AE  0EFF               	movlw	-1
 24209  0161B0  6AE3               	clrf	plusw1,c
 24210  0161B2  2AE3               	incf	plusw1,f,c
 24211                           
 24212                           ;dio.c: 92:    break;
 24213  0161B4  D016               	goto	l8645
 24214  0161B6                     l8643:
 24215                           
 24216                           ;stkvar	_i @ sp[(-2)+0]
 24217  0161B6  0EFE               	movlw	-2
 24218  0161B8  50E3               	movf	plusw1,w,c
 24219  0161BA  6E3C               	movwf	(btemp+10)^0,c
 24220  0161BC  6A3D               	clrf	(btemp+11)^0,c
 24221                           
 24222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24223                           ; Switch size 1, requested type "simple"
 24224                           ; Number of cases is 1, Range of values is 0 to 0
 24225                           ; switch strategies available:
 24226                           ; Name         Instructions Cycles
 24227                           ; simple_byte            4     3 (average)
 24228                           ;	Chosen strategy is simple_byte
 24229  0161BE  503D               	movf	(btemp+11)^0,w,c
 24230  0161C0  0A00               	xorlw	0	; case 0
 24231  0161C2  A4D8               	btfss	status,2,c
 24232  0161C4  D7F4               	goto	l8639
 24233                           
 24234                           ; Switch size 1, requested type "simple"
 24235                           ; Number of cases is 4, Range of values is 0 to 3
 24236                           ; switch strategies available:
 24237                           ; Name         Instructions Cycles
 24238                           ; simple_byte           13     7 (average)
 24239                           ;	Chosen strategy is simple_byte
 24240  0161C6  503C               	movf	(btemp+10)^0,w,c
 24241  0161C8  0A00               	xorlw	0	; case 0
 24242  0161CA  B4D8               	btfsc	status,2,c
 24243  0161CC  D7E9               	goto	l8637
 24244  0161CE  0A01               	xorlw	1	; case 1
 24245  0161D0  B4D8               	btfsc	status,2,c
 24246  0161D2  D7E3               	goto	l8635
 24247  0161D4  0A03               	xorlw	3	; case 2
 24248  0161D6  B4D8               	btfsc	status,2,c
 24249  0161D8  D7DD               	goto	l8633
 24250  0161DA  0A01               	xorlw	1	; case 3
 24251  0161DC  B4D8               	btfsc	status,2,c
 24252  0161DE  D7D2               	goto	l8631
 24253  0161E0  D7E6               	goto	l8639
 24254  0161E2                     l8645:
 24255                           
 24256                           ;dio.c: 96:   if (sw_value) {
 24257                           ;stkvar	_sw_value @ sp[(-2)+1]
 24258  0161E2  0EFF               	movlw	-1
 24259  0161E4  50E3               	movf	plusw1,w,c
 24260  0161E6  B4D8               	btfsc	status,2,c
 24261  0161E8  D014               	goto	l8651
 24262                           
 24263                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24264                           ;stkvar	_i @ sp[(-2)+0]
 24265  0161EA  0EFE               	movlw	-2
 24266  0161EC  50E3               	movf	plusw1,w,c
 24267  0161EE  0D05               	mullw	5
 24268  0161F0  50F3               	movf	243,w,c
 24269  0161F2  0F60               	addlw	low _S
 24270  0161F4  6ED9               	movwf	fsr2l,c
 24271  0161F6  6ADA               	clrf	fsr2h,c
 24272  0161F8  04DE               	decf	postinc2,w,c
 24273  0161FA  A4D8               	btfss	status,2,c
 24274  0161FC  D041               	goto	l8659
 24275                           
 24276                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24277                           ;stkvar	_i @ sp[(-2)+0]
 24278  0161FE  0EFE               	movlw	-2
 24279  016200  50E3               	movf	plusw1,w,c
 24280  016202  0D05               	mullw	5
 24281  016204  50F3               	movf	243,w,c
 24282  016206  0F60               	addlw	low _S
 24283  016208  6ED9               	movwf	fsr2l,c
 24284  01620A  6ADA               	clrf	fsr2h,c
 24285  01620C  0E00               	movlw	0
 24286  01620E  6EDF               	movwf	indf2,c
 24287  016210  D037               	goto	l8659
 24288  016212                     l8651:
 24289                           
 24290                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24291                           ;stkvar	_i @ sp[(-2)+0]
 24292  016212  0EFE               	movlw	-2
 24293  016214  50E3               	movf	plusw1,w,c
 24294  016216  0D05               	mullw	5
 24295  016218  50F3               	movf	243,w,c
 24296  01621A  0F60               	addlw	low _S
 24297  01621C  6ED9               	movwf	fsr2l,c
 24298  01621E  6ADA               	clrf	fsr2h,c
 24299  016220  50DF               	movf	indf2,w,c
 24300  016222  A4D8               	btfss	status,2,c
 24301  016224  D02D               	goto	l8659
 24302                           
 24303                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24304                           ;stkvar	_i @ sp[(-2)+0]
 24305  016226  0EFE               	movlw	-2
 24306  016228  50E3               	movf	plusw1,w,c
 24307  01622A  0D05               	mullw	5
 24308  01622C  50F3               	movf	243,w,c
 24309  01622E  0F60               	addlw	low _S
 24310  016230  6ED9               	movwf	fsr2l,c
 24311  016232  6ADA               	clrf	fsr2h,c
 24312  016234  0E01               	movlw	1
 24313  016236  6EDF               	movwf	indf2,c
 24314                           
 24315                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24316  016238  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24317                           
 24318                           ;stkvar	_i @ sp[(-2)+0]
 24319  01623C  0EFE               	movlw	-2
 24320  01623E  50E3               	movf	plusw1,w,c
 24321  016240  0D05               	mullw	5
 24322  016242  50F3               	movf	243,w,c
 24323  016244  0F61               	addlw	low (_S+1)
 24324  016246  6EE9               	movwf	fsr0l,c
 24325  016248  6AEA               	clrf	fsr0h,c
 24326  01624A  006F FF7B FFEE     	movff	postinc2,postinc0
 24327  016250  006F FF7B FFEE     	movff	postinc2,postinc0
 24328  016256  006F FF7B FFEE     	movff	postinc2,postinc0
 24329  01625C  006F FF7B FFEE     	movff	postinc2,postinc0
 24330                           
 24331                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24332                           ;stkvar	_i @ sp[(-2)+0]
 24333  016262  0EFE               	movlw	-2
 24334  016264  006F FF8C  F03D    	movff	plusw1,btemp+11
 24335  01626A  0E01               	movlw	1
 24336  01626C  6E3C               	movwf	(btemp+10)^0,c
 24337  01626E  2A3D               	incf	(btemp+11)^0,f,c
 24338  016270  D002               	goto	u826_24
 24339  016272                     u826_25:
 24340  016272  90D8               	bcf	status,0,c
 24341  016274  363C               	rlcf	(btemp+10)^0,f,c
 24342  016276                     u826_24:
 24343  016276  2E3D               	decfsz	(btemp+11)^0,f,c
 24344  016278  D7FC               	goto	u826_25
 24345  01627A  503C               	movf	(btemp+10)^0,w,c
 24346  01627C  0100               	movlb	0	; () banked
 24347  01627E  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24348  016280                     l8659:
 24349                           
 24350                           ;dio.c: 107:  } while (++i < 4);
 24351                           ;stkvar	_i @ sp[(-2)+0]
 24352  016280  0EFE               	movlw	-2
 24353  016282  2AE3               	incf	plusw1,f,c
 24354  016284  0EFE               	movlw	-2
 24355  016286  006F FF8C  F032    	movff	plusw1,btemp
 24356  01628C  0E03               	movlw	3
 24357  01628E  6432               	cpfsgt	btemp^0,c
 24358  016290  D792               	goto	l8643
 24359                           
 24360                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24361  016292  92BE               	bcf	190,1,c	;volatile
 24362  016294  A4BE               	btfss	190,2,c	;volatile
 24363  016296  D002               	goto	u828_20
 24364  016298  0E01               	movlw	1
 24365  01629A  D001               	goto	u828_26
 24366  01629C                     u828_20:
 24367  01629C  0E00               	movlw	0
 24368  01629E                     u828_26:
 24369  01629E  0AFF               	xorlw	255
 24370  0162A0  6E3D               	movwf	(btemp+11)^0,c
 24371  0162A2  463D               	rlncf	(btemp+11)^0,f,c
 24372  0162A4  463D               	rlncf	(btemp+11)^0,f,c
 24373  0162A6  50BE               	movf	190,w,c	;volatile
 24374  0162A8  183D               	xorwf	(btemp+11)^0,w,c
 24375  0162AA  0BFB               	andlw	-5
 24376  0162AC  183D               	xorwf	(btemp+11)^0,w,c
 24377  0162AE  6EBE               	movwf	190,c	;volatile
 24378  0162B0  8EBD               	bsf	189,7,c	;volatile
 24379                           
 24380                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24381  0162B2  52E5               	movf	postdec1,f,c
 24382  0162B4  52E5               	movf	postdec1,f,c
 24383  0162B6  0012               	return		;funcret
 24384  0162B8                     __end_of_switch_handler:
 24385                           	opt callstack 0
 24386                           
 24387 ;; *************** function _TMR5_ISR *****************
 24388 ;; Defined at:
 24389 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24390 ;; Parameters:    Size  Location     Type
 24391 ;;		None
 24392 ;; Auto vars:     Size  Location     Type
 24393 ;;		None
 24394 ;; Return value:  Size  Location     Type
 24395 ;;                  1    wreg      void 
 24396 ;; Registers used:
 24397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24398 ;; Tracked objects:
 24399 ;;		On entry : 0/0
 24400 ;;		On exit  : 0/0
 24401 ;;		Unchanged: 0/0
 24402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24405 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24406 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24407 ;;Total ram usage:        4 bytes
 24408 ;; Hardware stack levels used:    1
 24409 ;; Hardware stack levels required when called:    5
 24410 ;; This function calls:
 24411 ;;		_TMR5_CallBack
 24412 ;;		_TMR5_WriteTimer
 24413 ;; This function is called by:
 24414 ;;		Interrupt level 1
 24415 ;; This function uses a non-reentrant model
 24416 ;;
 24417                           
 24418                           	psect	text119
 24419  0178A0                     __ptext119:
 24420                           	opt callstack 0
 24421  0178A0                     _TMR5_ISR:
 24422                           	opt callstack 12
 24423                           
 24424                           ;incstack = 0
 24425  0178A0  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24426  0178A6  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24427  0178AC  EE16  F000         	lfsr	1,___intlo_sp
 24428                           
 24429                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24430  0178B0  0139               	movlb	57	; () banked
 24431  0178B2  9DA8               	bcf	168,6,b	;volatile
 24432                           
 24433                           ; BSR set to: 57
 24434                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24435  0178B4  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24436  0178BA  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24437  0178C0  ECE5  F0BD         	call	_TMR5_WriteTimer	;wreg free
 24438                           
 24439                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24440  0178C4  0101               	movlb	1	; () banked
 24441  0178C6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24442  0178C8  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24443  0178CA  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24444  0178CC  0E05               	movlw	5
 24445  0178CE  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24446  0178D0  0E00               	movlw	0
 24447  0178D2  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24448  0178D4  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24449  0178D6  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24450  0178D8  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24451  0178DA  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24452  0178DC  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24453  0178DE  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24454  0178E0  A0D8               	btfss	status,0,c
 24455  0178E2  D004               	goto	i1l1045
 24456                           
 24457                           ; BSR set to: 1
 24458                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24459  0178E4  EC25  F0C1         	call	_TMR5_CallBack	;wreg free
 24460                           
 24461                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24462  0178E8  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24463  0178EA  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24464  0178EC                     i1l1045:
 24465  0178EC  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24466  0178F2  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24467  0178F8  0011               	retfie		f
 24468  0178FA                     __end_of_TMR5_ISR:
 24469                           	opt callstack 0
 24470                           
 24471 ;; *************** function _TMR5_WriteTimer *****************
 24472 ;; Defined at:
 24473 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24474 ;; Parameters:    Size  Location     Type
 24475 ;;  timerVal        2  [STACK] unsigned short 
 24476 ;; Auto vars:     Size  Location     Type
 24477 ;;		None
 24478 ;; Return value:  Size  Location     Type
 24479 ;;                  1  [STACK] void 
 24480 ;; Registers used:
 24481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24482 ;; Tracked objects:
 24483 ;;		On entry : 3F/39
 24484 ;;		On exit  : 0/0
 24485 ;;		Unchanged: 0/0
 24486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24491 ;;Total ram usage:        0 bytes
 24492 ;; Hardware stack levels used:    1
 24493 ;; Hardware stack levels required when called:    3
 24494 ;; This function calls:
 24495 ;;		Nothing
 24496 ;; This function is called by:
 24497 ;;		_TMR5_ISR
 24498 ;; This function uses a reentrant model
 24499 ;;
 24500                           
 24501                           	psect	text120
 24502  017BCA                     __ptext120:
 24503                           	opt callstack 0
 24504  017BCA                     _TMR5_WriteTimer:
 24505                           	opt callstack 13
 24506                           
 24507                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24508                           
 24509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24510                           ;incstack = 0
 24511  017BCA  A49A               	btfss	154,2,c	;volatile
 24512  017BCC  D00F               	goto	l8765
 24513                           
 24514                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24515  017BCE  909A               	bcf	154,0,c	;volatile
 24516                           
 24517                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24518                           ;stkvar	_timerVal @ sp[(0)+-2]
 24519  017BD0  0EFF               	movlw	255
 24520  017BD2  24E1               	addwf	fsr1l,w,c
 24521  017BD4  6ED9               	movwf	fsr2l,c
 24522  017BD6  0EFF               	movlw	255
 24523  017BD8  20E2               	addwfc	fsr1h,w,c
 24524  017BDA  6EDA               	movwf	fsr2h,c
 24525  017BDC  50DF               	movf	indf2,w,c
 24526  017BDE  6E99               	movwf	153,c	;volatile
 24527                           
 24528                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24529                           ;stkvar	_timerVal @ sp[(0)+-2]
 24530  017BE0  0EFE               	movlw	-2
 24531  017BE2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24532                           
 24533                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24534  017BE8  809A               	bsf	154,0,c	;volatile
 24535                           
 24536                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24537  017BEA  D00C               	goto	l1028
 24538  017BEC                     l8765:
 24539                           
 24540                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24541                           ;stkvar	_timerVal @ sp[(0)+-2]
 24542  017BEC  0EFF               	movlw	255
 24543  017BEE  24E1               	addwf	fsr1l,w,c
 24544  017BF0  6ED9               	movwf	fsr2l,c
 24545  017BF2  0EFF               	movlw	255
 24546  017BF4  20E2               	addwfc	fsr1h,w,c
 24547  017BF6  6EDA               	movwf	fsr2h,c
 24548  017BF8  50DF               	movf	indf2,w,c
 24549  017BFA  6E99               	movwf	153,c	;volatile
 24550                           
 24551                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24552                           ;stkvar	_timerVal @ sp[(0)+-2]
 24553  017BFC  0EFE               	movlw	-2
 24554  017BFE  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24555  017C04                     l1028:
 24556                           
 24557                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24558  017C04  52E5               	movf	postdec1,f,c
 24559  017C06  52E5               	movf	postdec1,f,c
 24560  017C08  0012               	return		;funcret
 24561  017C0A                     __end_of_TMR5_WriteTimer:
 24562                           	opt callstack 0
 24563                           
 24564 ;; *************** function _TMR5_CallBack *****************
 24565 ;; Defined at:
 24566 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24567 ;; Parameters:    Size  Location     Type
 24568 ;;		None
 24569 ;; Auto vars:     Size  Location     Type
 24570 ;;		None
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  1  [STACK] void 
 24573 ;; Registers used:
 24574 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24575 ;; Tracked objects:
 24576 ;;		On entry : 3F/1
 24577 ;;		On exit  : 0/0
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;Total ram usage:        0 bytes
 24585 ;; Hardware stack levels used:    1
 24586 ;; Hardware stack levels required when called:    4
 24587 ;; This function calls:
 24588 ;;		Absolute function
 24589 ;;		_TMR5_DefaultInterruptHandler
 24590 ;; This function is called by:
 24591 ;;		_TMR5_ISR
 24592 ;; This function uses a reentrant model
 24593 ;;
 24594                           
 24595                           	psect	text121
 24596  01824A                     __ptext121:
 24597                           	opt callstack 0
 24598  01824A                     _TMR5_CallBack:
 24599                           	opt callstack 12
 24600                           
 24601                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24602                           
 24603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24604                           ;incstack = 0
 24605  01824A  0100               	movlb	0	; () banked
 24606  01824C  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24607  01824E  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24608  018250  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24609  018252  B4D8               	btfsc	status,2,c
 24610  018254  0012               	return	
 24611                           
 24612                           ; BSR set to: 0
 24613                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24614  018256  D801               	call	u841_28
 24615  018258  0012               	return	
 24616  01825A                     u841_28:
 24617  01825A  0005               	push	
 24618  01825C  6EFA               	movwf	pclath,c
 24619  01825E  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24620  018260  6EFD               	movwf	tosl,c
 24621  018262  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24622  018264  6EFE               	movwf	tosh,c
 24623  018266  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24624  018268  6EFF               	movwf	tosu,c
 24625  01826A  50FA               	movf	pclath,w,c
 24626  01826C  0012               	return		;indir
 24627  01826E                     __end_of_TMR5_CallBack:
 24628                           	opt callstack 0
 24629                           
 24630 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24631 ;; Defined at:
 24632 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24633 ;; Parameters:    Size  Location     Type
 24634 ;;		None
 24635 ;; Auto vars:     Size  Location     Type
 24636 ;;		None
 24637 ;; Return value:  Size  Location     Type
 24638 ;;                  1  [STACK] void 
 24639 ;; Registers used:
 24640 ;;		wreg, status,2, status,0, btemp+11
 24641 ;; Tracked objects:
 24642 ;;		On entry : 3F/0
 24643 ;;		On exit  : 3F/1
 24644 ;;		Unchanged: 0/0
 24645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24650 ;;Total ram usage:        0 bytes
 24651 ;; Hardware stack levels used:    1
 24652 ;; Hardware stack levels required when called:    3
 24653 ;; This function calls:
 24654 ;;		Nothing
 24655 ;; This function is called by:
 24656 ;;		_TMR5_Initialize
 24657 ;;		_TMR5_CallBack
 24658 ;; This function uses a reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text122
 24662  01815E                     __ptext122:
 24663                           	opt callstack 0
 24664  01815E                     _TMR5_DefaultInterruptHandler:
 24665                           	opt callstack 12
 24666                           
 24667                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24668                           
 24669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24670                           ;incstack = 0
 24671  01815E  A0BE               	btfss	190,0,c	;volatile
 24672  018160  D002               	goto	u797_20
 24673  018162  0E01               	movlw	1
 24674  018164  D001               	goto	u797_26
 24675  018166                     u797_20:
 24676  018166  0E00               	movlw	0
 24677  018168                     u797_26:
 24678  018168  0AFF               	xorlw	255
 24679  01816A  6E3D               	movwf	(btemp+11)^0,c
 24680  01816C  50BE               	movf	190,w,c	;volatile
 24681  01816E  183D               	xorwf	(btemp+11)^0,w,c
 24682  018170  0BFE               	andlw	-2
 24683  018172  183D               	xorwf	(btemp+11)^0,w,c
 24684  018174  6EBE               	movwf	190,c	;volatile
 24685                           
 24686                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24687  018176  0E01               	movlw	1
 24688  018178  0101               	movlb	1	; () banked
 24689  01817A  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24690  01817C  0E00               	movlw	0
 24691  01817E  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24692  018180  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24693  018182  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24694                           
 24695                           ; BSR set to: 1
 24696                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24697  018184  0012               	return		;funcret
 24698  018186                     __end_of_TMR5_DefaultInterruptHandler:
 24699                           	opt callstack 0
 24700                           
 24701 ;; *************** function _INT0_ISR *****************
 24702 ;; Defined at:
 24703 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;		None
 24706 ;; Auto vars:     Size  Location     Type
 24707 ;;		None
 24708 ;; Return value:  Size  Location     Type
 24709 ;;                  1    wreg      void 
 24710 ;; Registers used:
 24711 ;;		wreg, status,2, status,0, pclath, tosl
 24712 ;; Tracked objects:
 24713 ;;		On entry : 0/0
 24714 ;;		On exit  : 0/0
 24715 ;;		Unchanged: 0/0
 24716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24721 ;;Total ram usage:        0 bytes
 24722 ;; Hardware stack levels used:    1
 24723 ;; Hardware stack levels required when called:    2
 24724 ;; This function calls:
 24725 ;;		_INT0_CallBack
 24726 ;; This function is called by:
 24727 ;;		Interrupt level 2
 24728 ;; This function uses a non-reentrant model
 24729 ;;
 24730                           
 24731                           	psect	text123
 24732  0184D0                     __ptext123:
 24733                           	opt callstack 0
 24734  0184D0                     _INT0_ISR:
 24735                           	opt callstack 12
 24736                           
 24737                           ; BSR set to: 1
 24738                           ;incstack = 0
 24739  0184D0  EE14  F000         	lfsr	1,___inthi_sp
 24740                           
 24741                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24742  0184D4  0139               	movlb	57	; () banked
 24743  0184D6  91A1               	bcf	161,0,b	;volatile
 24744                           
 24745                           ; BSR set to: 57
 24746                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24747  0184D8  EC5A  F0C1         	call	_INT0_CallBack	;wreg free
 24748  0184DC  0011               	retfie		f
 24749  0184DE                     __end_of_INT0_ISR:
 24750                           	opt callstack 0
 24751                           
 24752 ;; *************** function _INT0_CallBack *****************
 24753 ;; Defined at:
 24754 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24755 ;; Parameters:    Size  Location     Type
 24756 ;;		None
 24757 ;; Auto vars:     Size  Location     Type
 24758 ;;		None
 24759 ;; Return value:  Size  Location     Type
 24760 ;;                  1  [STACK] void 
 24761 ;; Registers used:
 24762 ;;		wreg, status,2, status,0, pclath, tosl
 24763 ;; Tracked objects:
 24764 ;;		On entry : 3F/39
 24765 ;;		On exit  : 0/0
 24766 ;;		Unchanged: 0/0
 24767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24772 ;;Total ram usage:        0 bytes
 24773 ;; Hardware stack levels used:    1
 24774 ;; Hardware stack levels required when called:    1
 24775 ;; This function calls:
 24776 ;;		Absolute function
 24777 ;;		_INT0_DefaultInterruptHandler
 24778 ;; This function is called by:
 24779 ;;		_INT0_ISR
 24780 ;; This function uses a reentrant model
 24781 ;;
 24782                           
 24783                           	psect	text124
 24784  0182B4                     __ptext124:
 24785                           	opt callstack 0
 24786  0182B4                     _INT0_CallBack:
 24787                           	opt callstack 12
 24788                           
 24789                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 24790                           
 24791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24792                           ;incstack = 0
 24793  0182B4  5016               	movf	_INT0_InterruptHandler^0,w,c
 24794  0182B6  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 24795  0182B8  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 24796  0182BA  B4D8               	btfsc	status,2,c
 24797  0182BC  0012               	return	
 24798                           
 24799                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 24800  0182BE  D801               	call	u391_48
 24801  0182C0  0012               	return	
 24802  0182C2                     u391_48:
 24803  0182C2  0005               	push	
 24804  0182C4  6EFA               	movwf	pclath,c
 24805  0182C6  5016               	movf	_INT0_InterruptHandler^0,w,c
 24806  0182C8  6EFD               	movwf	tosl,c
 24807  0182CA  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 24808  0182CC  6EFE               	movwf	tosh,c
 24809  0182CE  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 24810  0182D0  6EFF               	movwf	tosu,c
 24811  0182D2  50FA               	movf	pclath,w,c
 24812  0182D4  0012               	return		;indir
 24813  0182D6                     __end_of_INT0_CallBack:
 24814                           	opt callstack 0
 24815                           
 24816 ;; *************** function _INT0_DefaultInterruptHandler *****************
 24817 ;; Defined at:
 24818 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 24819 ;; Parameters:    Size  Location     Type
 24820 ;;		None
 24821 ;; Auto vars:     Size  Location     Type
 24822 ;;		None
 24823 ;; Return value:  Size  Location     Type
 24824 ;;                  1  [STACK] void 
 24825 ;; Registers used:
 24826 ;;		None
 24827 ;; Tracked objects:
 24828 ;;		On entry : 0/39
 24829 ;;		On exit  : 0/0
 24830 ;;		Unchanged: 0/0
 24831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24836 ;;Total ram usage:        0 bytes
 24837 ;; Hardware stack levels used:    1
 24838 ;; This function calls:
 24839 ;;		Nothing
 24840 ;; This function is called by:
 24841 ;;		_EXT_INT_Initialize
 24842 ;;		_INT0_CallBack
 24843 ;; This function uses a reentrant model
 24844 ;;
 24845                           
 24846                           	psect	text125
 24847  018564                     __ptext125:
 24848                           	opt callstack 0
 24849  018564                     _INT0_DefaultInterruptHandler:
 24850                           	opt callstack 12
 24851                           
 24852                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24853                           
 24854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24855                           ;incstack = 0
 24856  018564  0012               	return		;funcret
 24857  018566                     __end_of_INT0_DefaultInterruptHandler:
 24858                           	opt callstack 0
 24859                           
 24860 ;; *************** function _Default_ISR *****************
 24861 ;; Defined at:
 24862 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 24863 ;; Parameters:    Size  Location     Type
 24864 ;;		None
 24865 ;; Auto vars:     Size  Location     Type
 24866 ;;		None
 24867 ;; Return value:  Size  Location     Type
 24868 ;;                  1    wreg      void 
 24869 ;; Registers used:
 24870 ;;		None
 24871 ;; Tracked objects:
 24872 ;;		On entry : 0/0
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24880 ;;Total ram usage:        0 bytes
 24881 ;; Hardware stack levels used:    1
 24882 ;; This function calls:
 24883 ;;		Nothing
 24884 ;; This function is called by:
 24885 ;;		Interrupt level 2
 24886 ;; This function uses a non-reentrant model
 24887 ;;
 24888                           
 24889                           	psect	text126
 24890  01855C                     __ptext126:
 24891                           	opt callstack 0
 24892  01855C                     _Default_ISR:
 24893                           	opt callstack 14
 24894                           
 24895                           ;incstack = 0
 24896  01855C  EE14  F000         	lfsr	1,___inthi_sp
 24897  018560  0011               	retfie		f
 24898  018562                     __end_of_Default_ISR:
 24899                           	opt callstack 0
 24900                           
 24901 ;; *************** function _ADCC_ISR *****************
 24902 ;; Defined at:
 24903 ;;		line 314 in file "mcc_generated_files/adcc.c"
 24904 ;; Parameters:    Size  Location     Type
 24905 ;;		None
 24906 ;; Auto vars:     Size  Location     Type
 24907 ;;		None
 24908 ;; Return value:  Size  Location     Type
 24909 ;;                  1    wreg      void 
 24910 ;; Registers used:
 24911 ;;		wreg, status,2, status,0, pclath, tosl
 24912 ;; Tracked objects:
 24913 ;;		On entry : 0/0
 24914 ;;		On exit  : 0/0
 24915 ;;		Unchanged: 0/0
 24916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24921 ;;Total ram usage:        0 bytes
 24922 ;; Hardware stack levels used:    1
 24923 ;; Hardware stack levels required when called:    1
 24924 ;; This function calls:
 24925 ;;		Absolute function
 24926 ;;		_ADCC_DefaultInterruptHandler
 24927 ;;		_adc_int_handler
 24928 ;; This function is called by:
 24929 ;;		Interrupt level 2
 24930 ;; This function uses a non-reentrant model
 24931 ;;
 24932                           
 24933                           	psect	text127
 24934  017F04                     __ptext127:
 24935                           	opt callstack 0
 24936  017F04                     _ADCC_ISR:
 24937                           	opt callstack 13
 24938                           
 24939                           ;incstack = 0
 24940  017F04  EE14  F000         	lfsr	1,___inthi_sp
 24941                           
 24942                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 24943  017F08  0139               	movlb	57	; () banked
 24944  017F0A  95A1               	bcf	161,2,b	;volatile
 24945                           
 24946                           ; BSR set to: 57
 24947                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 24948  017F0C  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24949  017F0E  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24950  017F10  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24951  017F12  B4D8               	btfsc	status,2,c
 24952  017F14  0011               	retfie		f
 24953                           
 24954                           ; BSR set to: 57
 24955                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 24956  017F16  D801               	call	i2u420_48
 24957  017F18  0011               	retfie		f
 24958  017F1A                     i2u420_48:
 24959  017F1A  0005               	push	
 24960  017F1C  6EFA               	movwf	pclath,c
 24961  017F1E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 24962  017F20  6EFD               	movwf	tosl,c
 24963  017F22  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 24964  017F24  6EFE               	movwf	tosh,c
 24965  017F26  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 24966  017F28  6EFF               	movwf	tosu,c
 24967  017F2A  50FA               	movf	pclath,w,c
 24968  017F2C  0012               	return		;indir
 24969  017F2E                     __end_of_ADCC_ISR:
 24970                           	opt callstack 0
 24971                           
 24972 ;; *************** function _adc_int_t_handler *****************
 24973 ;; Defined at:
 24974 ;;		line 127 in file "daq.c"
 24975 ;; Parameters:    Size  Location     Type
 24976 ;;		None
 24977 ;; Auto vars:     Size  Location     Type
 24978 ;;		None
 24979 ;; Return value:  Size  Location     Type
 24980 ;;                  1  [STACK] void 
 24981 ;; Registers used:
 24982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 24983 ;; Tracked objects:
 24984 ;;		On entry : 3F/39
 24985 ;;		On exit  : 1/0
 24986 ;;		Unchanged: 0/0
 24987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24992 ;;Total ram usage:        0 bytes
 24993 ;; Hardware stack levels used:    1
 24994 ;; Hardware stack levels required when called:    1
 24995 ;; This function calls:
 24996 ;;		_ADCC_DischargeSampleCapacitor
 24997 ;;		_ADCC_StartConversion
 24998 ;; This function is called by:
 24999 ;;		_start_adc_scan
 25000 ;;		_ADCC_ThresholdISR
 25001 ;; This function uses a reentrant model
 25002 ;;
 25003                           
 25004                           	psect	text128
 25005  017366                     __ptext128:
 25006                           	opt callstack 0
 25007  017366                     _adc_int_t_handler:
 25008                           	opt callstack 12
 25009                           
 25010                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25011                           
 25012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25013                           ;incstack = 0
 25014  017366  013E               	movlb	62	; () banked
 25015  017368  51E6               	movf	230,w,b	;volatile
 25016  01736A  006F FB9C  F032    	movff	16103,btemp	;volatile
 25017  017370  6A33               	clrf	(btemp+1)^0,c
 25018  017372  0060  F0C8  F033   	movff	btemp,btemp+1
 25019  017378  6A32               	clrf	btemp^0,c
 25020  01737A  2632               	addwf	btemp^0,f,c
 25021  01737C  0E00               	movlw	0
 25022  01737E  2233               	addwfc	(btemp+1)^0,f,c
 25023  017380  0100               	movlb	0	; () banked
 25024  017382  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25025  017384  0D02               	mullw	2
 25026  017386  50F3               	movf	243,w,c
 25027  017388  0FC7               	addlw	low _R
 25028  01738A  6ED9               	movwf	fsr2l,c
 25029  01738C  6ADA               	clrf	fsr2h,c
 25030  01738E  0060  F0CB  FFDE   	movff	btemp,postinc2
 25031  017394  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25032  01739A                     l11915:
 25033                           
 25034                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 25035  01739A  0100               	movlb	0	; () banked
 25036  01739C  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25037  01739E  0E0D               	movlw	13
 25038  0173A0  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25039  0173A2  D003               	goto	l11921
 25040                           
 25041                           ; BSR set to: 0
 25042                           ;daq.c: 135:    R.done = 1;
 25043  0173A4  0E01               	movlw	1
 25044  0173A6  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25045  0173A8  0012               	return	
 25046  0173AA                     l11921:
 25047                           
 25048                           ; BSR set to: 0
 25049                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25050  0173AA  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25051  0173B0  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25052  0173B4  006F FF78  F03A    	movff	postinc2,btemp+8
 25053  0173BA  006F FF74  F03B    	movff	postdec2,btemp+9
 25054  0173C0  2A3D               	incf	(btemp+11)^0,f,c
 25055  0173C2  D003               	goto	u1263_44
 25056  0173C4                     u1263_45:
 25057  0173C4  90D8               	bcf	status,0,c
 25058  0173C6  323B               	rrcf	(btemp+9)^0,f,c
 25059  0173C8  323A               	rrcf	(btemp+8)^0,f,c
 25060  0173CA                     u1263_44:
 25061  0173CA  2E3D               	decfsz	(btemp+11)^0,f,c
 25062  0173CC  D7FB               	goto	u1263_45
 25063  0173CE  A03A               	btfss	(btemp+8)^0,0,c
 25064  0173D0  D7E4               	goto	l11915
 25065                           
 25066                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 25067  0173D2  EC8D  F0C2         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25068                           
 25069                           ; BSR set to: 62
 25070                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 25071  0173D6  0100               	movlb	0	; () banked
 25072  0173D8  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25073  0173DA  0B0F               	andlw	15
 25074  0173DC  6EE6               	movwf	postinc1,c
 25075  0173DE  EC40  F0C2         	call	_ADCC_StartConversion	;wreg free
 25076                           
 25077                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25078  0173E2  0012               	return		;funcret
 25079  0173E4                     __end_of_adc_int_t_handler:
 25080                           	opt callstack 0
 25081                           
 25082 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25083 ;; Defined at:
 25084 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;		None
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;		None
 25089 ;; Return value:  Size  Location     Type
 25090 ;;                  1  [STACK] void 
 25091 ;; Registers used:
 25092 ;;		None
 25093 ;; Tracked objects:
 25094 ;;		On entry : 3F/39
 25095 ;;		On exit  : 0/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;Total ram usage:        0 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; This function calls:
 25105 ;;		Nothing
 25106 ;; This function is called by:
 25107 ;;		_ADCC_Initialize
 25108 ;;		_ADCC_ISR
 25109 ;;		_ADCC_ThresholdISR
 25110 ;; This function uses a reentrant model
 25111 ;;
 25112                           
 25113                           	psect	text129
 25114  018566                     __ptext129:
 25115                           	opt callstack 0
 25116  018566                     _ADCC_DefaultInterruptHandler:
 25117                           	opt callstack 13
 25118                           
 25119                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25120                           
 25121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25122                           ;incstack = 0
 25123  018566  0012               	return		;funcret
 25124  018568                     __end_of_ADCC_DefaultInterruptHandler:
 25125                           	opt callstack 0
 25126                           
 25127 ;; *************** function _adc_int_handler *****************
 25128 ;; Defined at:
 25129 ;;		line 117 in file "daq.c"
 25130 ;; Parameters:    Size  Location     Type
 25131 ;;		None
 25132 ;; Auto vars:     Size  Location     Type
 25133 ;;		None
 25134 ;; Return value:  Size  Location     Type
 25135 ;;                  1  [STACK] void 
 25136 ;; Registers used:
 25137 ;;		None
 25138 ;; Tracked objects:
 25139 ;;		On entry : 3F/39
 25140 ;;		On exit  : 0/0
 25141 ;;		Unchanged: 0/0
 25142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25147 ;;Total ram usage:        0 bytes
 25148 ;; Hardware stack levels used:    1
 25149 ;; This function calls:
 25150 ;;		Nothing
 25151 ;; This function is called by:
 25152 ;;		_start_adc_scan
 25153 ;;		_ADCC_ISR
 25154 ;; This function uses a reentrant model
 25155 ;;
 25156                           
 25157                           	psect	text130
 25158  018568                     __ptext130:
 25159                           	opt callstack 0
 25160  018568                     _adc_int_handler:
 25161                           	opt callstack 13
 25162                           
 25163                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25164                           
 25165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25166                           ;incstack = 0
 25167  018568  0012               	return		;funcret
 25168  01856A                     __end_of_adc_int_handler:
 25169                           	opt callstack 0
 25170                           
 25171 ;; *************** function _ADCC_ThresholdISR *****************
 25172 ;; Defined at:
 25173 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25174 ;; Parameters:    Size  Location     Type
 25175 ;;		None
 25176 ;; Auto vars:     Size  Location     Type
 25177 ;;		None
 25178 ;; Return value:  Size  Location     Type
 25179 ;;                  1    wreg      void 
 25180 ;; Registers used:
 25181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25182 ;; Tracked objects:
 25183 ;;		On entry : 0/0
 25184 ;;		On exit  : 0/0
 25185 ;;		Unchanged: 0/0
 25186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25189 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25190 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25191 ;;Total ram usage:        5 bytes
 25192 ;; Hardware stack levels used:    1
 25193 ;; Hardware stack levels required when called:    2
 25194 ;; This function calls:
 25195 ;;		Absolute function
 25196 ;;		_ADCC_DefaultInterruptHandler
 25197 ;;		_adc_int_t_handler
 25198 ;; This function is called by:
 25199 ;;		Interrupt level 2
 25200 ;; This function uses a non-reentrant model
 25201 ;;
 25202                           
 25203                           	psect	text131
 25204  017534                     __ptext131:
 25205                           	opt callstack 0
 25206  017534                     _ADCC_ThresholdISR:
 25207                           	opt callstack 12
 25208                           
 25209                           ;incstack = 0
 25210  017534  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25211  01753A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25212  017540  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25213  017546  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25214  01754C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25215  017552  EE14  F000         	lfsr	1,___inthi_sp
 25216                           
 25217                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25218  017556  0139               	movlb	57	; () banked
 25219  017558  97A1               	bcf	161,3,b	;volatile
 25220                           
 25221                           ; BSR set to: 57
 25222                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25223  01755A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25224  01755C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25225  01755E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25226  017560  B4D8               	btfsc	status,2,c
 25227  017562  D00C               	goto	i2u1266_49
 25228                           
 25229                           ; BSR set to: 57
 25230                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25231  017564  D801               	call	i2u1266_48
 25232  017566  D00A               	goto	i2u1266_49
 25233  017568                     i2u1266_48:
 25234  017568  0005               	push	
 25235  01756A  6EFA               	movwf	pclath,c
 25236  01756C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25237  01756E  6EFD               	movwf	tosl,c
 25238  017570  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25239  017572  6EFE               	movwf	tosh,c
 25240  017574  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25241  017576  6EFF               	movwf	tosu,c
 25242  017578  50FA               	movf	pclath,w,c
 25243  01757A  0012               	return		;indir
 25244  01757C                     i2u1266_49:
 25245  01757C  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25246  017582  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25247  017588  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25248  01758E  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25249  017594  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25250  01759A  0011               	retfie		f
 25251  01759C                     __end_of_ADCC_ThresholdISR:
 25252                           	opt callstack 0
 25253                           
 25254 ;; *************** function _UART1_tx_vect_isr *****************
 25255 ;; Defined at:
 25256 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25257 ;; Parameters:    Size  Location     Type
 25258 ;;		None
 25259 ;; Auto vars:     Size  Location     Type
 25260 ;;		None
 25261 ;; Return value:  Size  Location     Type
 25262 ;;                  1    wreg      void 
 25263 ;; Registers used:
 25264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25265 ;; Tracked objects:
 25266 ;;		On entry : 0/0
 25267 ;;		On exit  : 0/0
 25268 ;;		Unchanged: 0/0
 25269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25274 ;;Total ram usage:        0 bytes
 25275 ;; Hardware stack levels used:    1
 25276 ;; Hardware stack levels required when called:    1
 25277 ;; This function calls:
 25278 ;;		Absolute function
 25279 ;;		_UART1_Transmit_ISR
 25280 ;; This function is called by:
 25281 ;;		Interrupt level 2
 25282 ;; This function uses a non-reentrant model
 25283 ;;
 25284                           
 25285                           	psect	text132
 25286  018188                     __ptext132:
 25287                           	opt callstack 0
 25288  018188                     _UART1_tx_vect_isr:
 25289                           	opt callstack 13
 25290                           
 25291                           ;incstack = 0
 25292  018188  EE14  F000         	lfsr	1,___inthi_sp
 25293                           
 25294                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25295  01818C  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25296  01818E  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25297  018190  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25298  018192  B4D8               	btfsc	status,2,c
 25299  018194  0011               	retfie		f
 25300                           
 25301                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25302  018196  D801               	call	i2u859_48
 25303  018198  0011               	retfie		f
 25304  01819A                     i2u859_48:
 25305  01819A  0005               	push	
 25306  01819C  6EFA               	movwf	pclath,c
 25307  01819E  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25308  0181A0  6EFD               	movwf	tosl,c
 25309  0181A2  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25310  0181A4  6EFE               	movwf	tosh,c
 25311  0181A6  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25312  0181A8  6EFF               	movwf	tosu,c
 25313  0181AA  50FA               	movf	pclath,w,c
 25314  0181AC  0012               	return		;indir
 25315  0181AE                     __end_of_UART1_tx_vect_isr:
 25316                           	opt callstack 0
 25317                           
 25318 ;; *************** function _UART1_Transmit_ISR *****************
 25319 ;; Defined at:
 25320 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25321 ;; Parameters:    Size  Location     Type
 25322 ;;		None
 25323 ;; Auto vars:     Size  Location     Type
 25324 ;;		None
 25325 ;; Return value:  Size  Location     Type
 25326 ;;                  1  [STACK] void 
 25327 ;; Registers used:
 25328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25329 ;; Tracked objects:
 25330 ;;		On entry : 0/0
 25331 ;;		On exit  : 3B/39
 25332 ;;		Unchanged: 0/0
 25333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;Total ram usage:        0 bytes
 25339 ;; Hardware stack levels used:    1
 25340 ;; This function calls:
 25341 ;;		Nothing
 25342 ;; This function is called by:
 25343 ;;		_UART1_Initialize
 25344 ;;		_UART1_tx_vect_isr
 25345 ;; This function uses a reentrant model
 25346 ;;
 25347                           
 25348                           	psect	text133
 25349  017E80                     __ptext133:
 25350                           	opt callstack 0
 25351  017E80                     _UART1_Transmit_ISR:
 25352                           	opt callstack 13
 25353                           
 25354                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25355                           
 25356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25357                           ;incstack = 0
 25358  017E80  0E40               	movlw	64
 25359  017E82  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25360  017E84  D010               	goto	l581
 25361                           
 25362                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25363  017E86  0EAC               	movlw	low _uart1TxBuffer
 25364  017E88  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25365  017E8A  6ED9               	movwf	fsr2l,c
 25366  017E8C  6ADA               	clrf	fsr2h,c
 25367  017E8E  0E03               	movlw	high _uart1TxBuffer
 25368  017E90  22DA               	addwfc	fsr2h,f,c
 25369  017E92  50DF               	movf	indf2,w,c
 25370  017E94  013D               	movlb	61	; () banked
 25371  017E96  6FEA               	movwf	234,b	;volatile
 25372                           
 25373                           ; BSR set to: 61
 25374  017E98  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25375                           
 25376                           ; BSR set to: 61
 25377                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25378  017E9A  0E3F               	movlw	63
 25379  017E9C  6430               	cpfsgt	_uart1TxTail^0,c
 25380  017E9E  D001               	goto	l8717
 25381                           
 25382                           ; BSR set to: 61
 25383                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25384  017EA0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25385  017EA2                     l8717:
 25386                           
 25387                           ; BSR set to: 61
 25388                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25389  017EA2  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25390                           
 25391                           ;mcc_generated_files/uart1.c: 222:  } else {
 25392  017EA4  0012               	return	
 25393  017EA6                     l581:
 25394                           
 25395                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25396  017EA6  0139               	movlb	57	; () banked
 25397  017EA8  9993               	bcf	147,4,b	;volatile
 25398                           
 25399                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25400  017EAA  0012               	return		;funcret
 25401  017EAC                     __end_of_UART1_Transmit_ISR:
 25402                           	opt callstack 0
 25403                           
 25404 ;; *************** function _UART1_rx_vect_isr *****************
 25405 ;; Defined at:
 25406 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25407 ;; Parameters:    Size  Location     Type
 25408 ;;		None
 25409 ;; Auto vars:     Size  Location     Type
 25410 ;;		None
 25411 ;; Return value:  Size  Location     Type
 25412 ;;                  1    wreg      void 
 25413 ;; Registers used:
 25414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25415 ;; Tracked objects:
 25416 ;;		On entry : 0/0
 25417 ;;		On exit  : 0/0
 25418 ;;		Unchanged: 0/0
 25419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25424 ;;Total ram usage:        0 bytes
 25425 ;; Hardware stack levels used:    1
 25426 ;; Hardware stack levels required when called:    1
 25427 ;; This function calls:
 25428 ;;		Absolute function
 25429 ;;		_UART1_Receive_ISR
 25430 ;; This function is called by:
 25431 ;;		Interrupt level 2
 25432 ;; This function uses a non-reentrant model
 25433 ;;
 25434                           
 25435                           	psect	text134
 25436  0181B0                     __ptext134:
 25437                           	opt callstack 0
 25438  0181B0                     _UART1_rx_vect_isr:
 25439                           	opt callstack 13
 25440                           
 25441                           ;incstack = 0
 25442  0181B0  EE14  F000         	lfsr	1,___inthi_sp
 25443                           
 25444                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25445  0181B4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25446  0181B6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25447  0181B8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25448  0181BA  B4D8               	btfsc	status,2,c
 25449  0181BC  0011               	retfie		f
 25450                           
 25451                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25452  0181BE  D801               	call	i2u861_48
 25453  0181C0  0011               	retfie		f
 25454  0181C2                     i2u861_48:
 25455  0181C2  0005               	push	
 25456  0181C4  6EFA               	movwf	pclath,c
 25457  0181C6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25458  0181C8  6EFD               	movwf	tosl,c
 25459  0181CA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25460  0181CC  6EFE               	movwf	tosh,c
 25461  0181CE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25462  0181D0  6EFF               	movwf	tosu,c
 25463  0181D2  50FA               	movf	pclath,w,c
 25464  0181D4  0012               	return		;indir
 25465  0181D6                     __end_of_UART1_rx_vect_isr:
 25466                           	opt callstack 0
 25467                           
 25468 ;; *************** function _UART1_Receive_ISR *****************
 25469 ;; Defined at:
 25470 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25471 ;; Parameters:    Size  Location     Type
 25472 ;;		None
 25473 ;; Auto vars:     Size  Location     Type
 25474 ;;		None
 25475 ;; Return value:  Size  Location     Type
 25476 ;;                  1  [STACK] void 
 25477 ;; Registers used:
 25478 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25479 ;; Tracked objects:
 25480 ;;		On entry : 0/0
 25481 ;;		On exit  : 0/0
 25482 ;;		Unchanged: 0/0
 25483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;Total ram usage:        0 bytes
 25489 ;; Hardware stack levels used:    1
 25490 ;; This function calls:
 25491 ;;		Nothing
 25492 ;; This function is called by:
 25493 ;;		_UART1_Initialize
 25494 ;;		_UART1_rx_vect_isr
 25495 ;; This function uses a reentrant model
 25496 ;;
 25497                           
 25498                           	psect	text135
 25499  018350                     __ptext135:
 25500                           	opt callstack 0
 25501  018350                     _UART1_Receive_ISR:
 25502                           	opt callstack 13
 25503                           
 25504                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25505                           
 25506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25507                           ;incstack = 0
 25508  018350  0E00               	movlw	low _uart1RxBuffer
 25509  018352  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25510  018354  6ED9               	movwf	fsr2l,c
 25511  018356  6ADA               	clrf	fsr2h,c
 25512  018358  0E06               	movlw	high _uart1RxBuffer
 25513  01835A  22DA               	addwfc	fsr2h,f,c
 25514  01835C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25515  018362  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25516                           
 25517                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25518  018364  282E               	incf	_uart1RxHead^0,w,c
 25519  018366  B4D8               	btfsc	status,2,c
 25520                           
 25521                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25522  018368  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25523                           
 25524                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25525  01836A  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25526                           
 25527                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25528  01836C  0012               	return		;funcret
 25529  01836E                     __end_of_UART1_Receive_ISR:
 25530                           	opt callstack 0
 25531                           
 25532 ;; *************** function _UART2_tx_vect_isr *****************
 25533 ;; Defined at:
 25534 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;		None
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;		None
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  1    wreg      void 
 25541 ;; Registers used:
 25542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25552 ;;Total ram usage:        0 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:    1
 25555 ;; This function calls:
 25556 ;;		Absolute function
 25557 ;;		_UART2_Transmit_ISR
 25558 ;; This function is called by:
 25559 ;;		Interrupt level 2
 25560 ;; This function uses a non-reentrant model
 25561 ;;
 25562                           
 25563                           	psect	text136
 25564  0181D8                     __ptext136:
 25565                           	opt callstack 0
 25566  0181D8                     _UART2_tx_vect_isr:
 25567                           	opt callstack 13
 25568                           
 25569                           ;incstack = 0
 25570  0181D8  EE14  F000         	lfsr	1,___inthi_sp
 25571                           
 25572                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25573  0181DC  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25574  0181DE  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25575  0181E0  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25576  0181E2  B4D8               	btfsc	status,2,c
 25577  0181E4  0011               	retfie		f
 25578                           
 25579                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25580  0181E6  D801               	call	i2u863_48
 25581  0181E8  0011               	retfie		f
 25582  0181EA                     i2u863_48:
 25583  0181EA  0005               	push	
 25584  0181EC  6EFA               	movwf	pclath,c
 25585  0181EE  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25586  0181F0  6EFD               	movwf	tosl,c
 25587  0181F2  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25588  0181F4  6EFE               	movwf	tosh,c
 25589  0181F6  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25590  0181F8  6EFF               	movwf	tosu,c
 25591  0181FA  50FA               	movf	pclath,w,c
 25592  0181FC  0012               	return		;indir
 25593  0181FE                     __end_of_UART2_tx_vect_isr:
 25594                           	opt callstack 0
 25595                           
 25596 ;; *************** function _UART2_Transmit_ISR *****************
 25597 ;; Defined at:
 25598 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25599 ;; Parameters:    Size  Location     Type
 25600 ;;		None
 25601 ;; Auto vars:     Size  Location     Type
 25602 ;;		None
 25603 ;; Return value:  Size  Location     Type
 25604 ;;                  1  [STACK] void 
 25605 ;; Registers used:
 25606 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25607 ;; Tracked objects:
 25608 ;;		On entry : 0/0
 25609 ;;		On exit  : 3B/39
 25610 ;;		Unchanged: 0/0
 25611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25616 ;;Total ram usage:        0 bytes
 25617 ;; Hardware stack levels used:    1
 25618 ;; This function calls:
 25619 ;;		Nothing
 25620 ;; This function is called by:
 25621 ;;		_UART2_Initialize
 25622 ;;		_UART2_tx_vect_isr
 25623 ;; This function uses a reentrant model
 25624 ;;
 25625                           
 25626                           	psect	text137
 25627  017EAC                     __ptext137:
 25628                           	opt callstack 0
 25629  017EAC                     _UART2_Transmit_ISR:
 25630                           	opt callstack 13
 25631                           
 25632                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25633                           
 25634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25635                           ;incstack = 0
 25636  017EAC  0E40               	movlw	64
 25637  017EAE  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25638  017EB0  D010               	goto	l701
 25639                           
 25640                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25641  017EB2  0E6C               	movlw	low _uart2TxBuffer
 25642  017EB4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25643  017EB6  6ED9               	movwf	fsr2l,c
 25644  017EB8  6ADA               	clrf	fsr2h,c
 25645  017EBA  0E03               	movlw	high _uart2TxBuffer
 25646  017EBC  22DA               	addwfc	fsr2h,f,c
 25647  017EBE  50DF               	movf	indf2,w,c
 25648  017EC0  013D               	movlb	61	; () banked
 25649  017EC2  6FD2               	movwf	210,b	;volatile
 25650                           
 25651                           ; BSR set to: 61
 25652  017EC4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25653                           
 25654                           ; BSR set to: 61
 25655                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25656  017EC6  0E3F               	movlw	63
 25657  017EC8  642A               	cpfsgt	_uart2TxTail^0,c
 25658  017ECA  D001               	goto	l8739
 25659                           
 25660                           ; BSR set to: 61
 25661                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25662  017ECC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25663  017ECE                     l8739:
 25664                           
 25665                           ; BSR set to: 61
 25666                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25667  017ECE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25668                           
 25669                           ;mcc_generated_files/uart2.c: 224:     }
 25670  017ED0  0012               	return	
 25671  017ED2                     l701:
 25672                           
 25673                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25674  017ED2  0139               	movlb	57	; () banked
 25675  017ED4  9796               	bcf	150,3,b	;volatile
 25676                           
 25677                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25678  017ED6  0012               	return		;funcret
 25679  017ED8                     __end_of_UART2_Transmit_ISR:
 25680                           	opt callstack 0
 25681                           
 25682 ;; *************** function _UART2_rx_vect_isr *****************
 25683 ;; Defined at:
 25684 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25685 ;; Parameters:    Size  Location     Type
 25686 ;;		None
 25687 ;; Auto vars:     Size  Location     Type
 25688 ;;		None
 25689 ;; Return value:  Size  Location     Type
 25690 ;;                  1    wreg      void 
 25691 ;; Registers used:
 25692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25693 ;; Tracked objects:
 25694 ;;		On entry : 0/0
 25695 ;;		On exit  : 0/0
 25696 ;;		Unchanged: 0/0
 25697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;Total ram usage:        0 bytes
 25703 ;; Hardware stack levels used:    1
 25704 ;; Hardware stack levels required when called:    1
 25705 ;; This function calls:
 25706 ;;		Absolute function
 25707 ;;		_UART2_Receive_ISR
 25708 ;; This function is called by:
 25709 ;;		Interrupt level 2
 25710 ;; This function uses a non-reentrant model
 25711 ;;
 25712                           
 25713                           	psect	text138
 25714  018200                     __ptext138:
 25715                           	opt callstack 0
 25716  018200                     _UART2_rx_vect_isr:
 25717                           	opt callstack 13
 25718                           
 25719                           ;incstack = 0
 25720  018200  EE14  F000         	lfsr	1,___inthi_sp
 25721                           
 25722                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25723  018204  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25724  018206  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25725  018208  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25726  01820A  B4D8               	btfsc	status,2,c
 25727  01820C  0011               	retfie		f
 25728                           
 25729                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25730  01820E  D801               	call	i2u865_48
 25731  018210  0011               	retfie		f
 25732  018212                     i2u865_48:
 25733  018212  0005               	push	
 25734  018214  6EFA               	movwf	pclath,c
 25735  018216  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25736  018218  6EFD               	movwf	tosl,c
 25737  01821A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25738  01821C  6EFE               	movwf	tosh,c
 25739  01821E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25740  018220  6EFF               	movwf	tosu,c
 25741  018222  50FA               	movf	pclath,w,c
 25742  018224  0012               	return		;indir
 25743  018226                     __end_of_UART2_rx_vect_isr:
 25744                           	opt callstack 0
 25745                           
 25746 ;; *************** function _UART2_Receive_ISR *****************
 25747 ;; Defined at:
 25748 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25749 ;; Parameters:    Size  Location     Type
 25750 ;;		None
 25751 ;; Auto vars:     Size  Location     Type
 25752 ;;		None
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  1  [STACK] void 
 25755 ;; Registers used:
 25756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/0
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25766 ;;Total ram usage:        0 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; This function calls:
 25769 ;;		Nothing
 25770 ;; This function is called by:
 25771 ;;		_UART2_Initialize
 25772 ;;		_UART2_rx_vect_isr
 25773 ;; This function uses a reentrant model
 25774 ;;
 25775                           
 25776                           	psect	text139
 25777  01836E                     __ptext139:
 25778                           	opt callstack 0
 25779  01836E                     _UART2_Receive_ISR:
 25780                           	opt callstack 13
 25781                           
 25782                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25783                           
 25784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25785                           ;incstack = 0
 25786  01836E  0E00               	movlw	low _uart2RxBuffer
 25787  018370  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 25788  018372  6ED9               	movwf	fsr2l,c
 25789  018374  6ADA               	clrf	fsr2h,c
 25790  018376  0E07               	movlw	high _uart2RxBuffer
 25791  018378  22DA               	addwfc	fsr2h,f,c
 25792  01837A  006F F743 FFDF     	movff	15824,indf2	;volatile
 25793  018380  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 25794                           
 25795                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 25796  018382  2828               	incf	_uart2RxHead^0,w,c
 25797  018384  B4D8               	btfsc	status,2,c
 25798                           
 25799                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 25800  018386  6A28               	clrf	_uart2RxHead^0,c	;volatile
 25801                           
 25802                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 25803  018388  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 25804                           
 25805                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25806  01838A  0012               	return		;funcret
 25807  01838C                     __end_of_UART2_Receive_ISR:
 25808                           	opt callstack 0
 25809                           
 25810 ;; *************** function _TMR6_ISR *****************
 25811 ;; Defined at:
 25812 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 25813 ;; Parameters:    Size  Location     Type
 25814 ;;		None
 25815 ;; Auto vars:     Size  Location     Type
 25816 ;;		None
 25817 ;; Return value:  Size  Location     Type
 25818 ;;                  1    wreg      void 
 25819 ;; Registers used:
 25820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25821 ;; Tracked objects:
 25822 ;;		On entry : 0/0
 25823 ;;		On exit  : 0/0
 25824 ;;		Unchanged: 0/0
 25825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;Total ram usage:        1 bytes
 25831 ;; Hardware stack levels used:    1
 25832 ;; Hardware stack levels required when called:    2
 25833 ;; This function calls:
 25834 ;;		_TMR6_CallBack
 25835 ;; This function is called by:
 25836 ;;		Interrupt level 2
 25837 ;; This function uses a non-reentrant model
 25838 ;;
 25839                           
 25840                           	psect	text140
 25841  0183E0                     __ptext140:
 25842                           	opt callstack 0
 25843  0183E0                     _TMR6_ISR:
 25844                           	opt callstack 12
 25845                           
 25846                           ;incstack = 0
 25847  0183E0  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 25848  0183E6  EE14  F000         	lfsr	1,___inthi_sp
 25849                           
 25850                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 25851  0183EA  0139               	movlb	57	; () banked
 25852  0183EC  91A9               	bcf	169,0,b	;volatile
 25853                           
 25854                           ; BSR set to: 57
 25855                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 25856  0183EE  EC37  F0C1         	call	_TMR6_CallBack	;wreg free
 25857  0183F2  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 25858  0183F8  0011               	retfie		f
 25859  0183FA                     __end_of_TMR6_ISR:
 25860                           	opt callstack 0
 25861                           
 25862 ;; *************** function _TMR6_CallBack *****************
 25863 ;; Defined at:
 25864 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 25865 ;; Parameters:    Size  Location     Type
 25866 ;;		None
 25867 ;; Auto vars:     Size  Location     Type
 25868 ;;		None
 25869 ;; Return value:  Size  Location     Type
 25870 ;;                  1  [STACK] void 
 25871 ;; Registers used:
 25872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 25873 ;; Tracked objects:
 25874 ;;		On entry : 3F/39
 25875 ;;		On exit  : 0/0
 25876 ;;		Unchanged: 0/0
 25877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25882 ;;Total ram usage:        0 bytes
 25883 ;; Hardware stack levels used:    1
 25884 ;; Hardware stack levels required when called:    1
 25885 ;; This function calls:
 25886 ;;		Absolute function
 25887 ;;		_TMR6_DefaultInterruptHandler
 25888 ;; This function is called by:
 25889 ;;		_TMR6_ISR
 25890 ;; This function uses a reentrant model
 25891 ;;
 25892                           
 25893                           	psect	text141
 25894  01826E                     __ptext141:
 25895                           	opt callstack 0
 25896  01826E                     _TMR6_CallBack:
 25897                           	opt callstack 12
 25898                           
 25899                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 25900                           
 25901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25902                           ;incstack = 0
 25903  01826E  0100               	movlb	0	; () banked
 25904  018270  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25905  018272  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25906  018274  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25907  018276  B4D8               	btfsc	status,2,c
 25908  018278  0012               	return	
 25909                           
 25910                           ; BSR set to: 0
 25911                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 25912  01827A  D801               	call	u838_48
 25913  01827C  0012               	return	
 25914  01827E                     u838_48:
 25915  01827E  0005               	push	
 25916  018280  6EFA               	movwf	pclath,c
 25917  018282  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 25918  018284  6EFD               	movwf	tosl,c
 25919  018286  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 25920  018288  6EFE               	movwf	tosh,c
 25921  01828A  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 25922  01828C  6EFF               	movwf	tosu,c
 25923  01828E  50FA               	movf	pclath,w,c
 25924  018290  0012               	return		;indir
 25925  018292                     __end_of_TMR6_CallBack:
 25926                           	opt callstack 0
 25927                           
 25928 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 25929 ;; Defined at:
 25930 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 25931 ;; Parameters:    Size  Location     Type
 25932 ;;		None
 25933 ;; Auto vars:     Size  Location     Type
 25934 ;;  i               1  [STACK] unsigned char 
 25935 ;; Return value:  Size  Location     Type
 25936 ;;                  1  [STACK] void 
 25937 ;; Registers used:
 25938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25939 ;; Tracked objects:
 25940 ;;		On entry : 3F/0
 25941 ;;		On exit  : 0/0
 25942 ;;		Unchanged: 0/0
 25943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25948 ;;Total ram usage:        0 bytes
 25949 ;; Hardware stack levels used:    1
 25950 ;; This function calls:
 25951 ;;		Nothing
 25952 ;; This function is called by:
 25953 ;;		_TMR6_Initialize
 25954 ;;		_TMR6_CallBack
 25955 ;; This function uses a reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text142
 25959  017AFE                     __ptext142:
 25960                           	opt callstack 0
 25961  017AFE                     _TMR6_DefaultInterruptHandler:
 25962                           	opt callstack 0
 25963                           
 25964                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25965  017AFE  52E6               	movf	postinc1,f,c
 25966                           
 25967                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 25968                           ;stkvar	_i @ sp[(-1)+0]
 25969                           
 25970                           ;incstack = 0
 25971  017B00  0EFF               	movlw	-1
 25972  017B02  6AE3               	clrf	plusw1,c
 25973  017B04                     l8419:
 25974                           
 25975                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 25976                           ;stkvar	_i @ sp[(-1)+0]
 25977  017B04  0EFF               	movlw	-1
 25978  017B06  50E3               	movf	plusw1,w,c
 25979  017B08  0D02               	mullw	2
 25980  017B0A  50F3               	movf	243,w,c
 25981  017B0C  0F89               	addlw	low _tickCount
 25982  017B0E  6ED9               	movwf	fsr2l,c
 25983  017B10  6ADA               	clrf	fsr2h,c
 25984  017B12  50DE               	movf	postinc2,w,c
 25985  017B14  10DE               	iorwf	postinc2,w,c
 25986  017B16  B4D8               	btfsc	status,2,c
 25987  017B18  D00A               	goto	l8423
 25988                           
 25989                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 25990                           ;stkvar	_i @ sp[(-1)+0]
 25991  017B1A  0EFF               	movlw	-1
 25992  017B1C  50E3               	movf	plusw1,w,c
 25993  017B1E  0D02               	mullw	2
 25994  017B20  50F3               	movf	243,w,c
 25995  017B22  0F89               	addlw	low _tickCount
 25996  017B24  6ED9               	movwf	fsr2l,c
 25997  017B26  6ADA               	clrf	fsr2h,c
 25998  017B28  06DE               	decf	postinc2,f,c
 25999  017B2A  0E00               	movlw	0
 26000  017B2C  5ADD               	subwfb	postdec2,f,c
 26001  017B2E                     l8423:
 26002                           
 26003                           ;mcc_generated_files/tmr6.c: 207:  }
 26004                           ;stkvar	_i @ sp[(-1)+0]
 26005  017B2E  0EFF               	movlw	-1
 26006  017B30  2AE3               	incf	plusw1,f,c
 26007                           
 26008                           ;stkvar	_i @ sp[(-1)+0]
 26009  017B32  0EFF               	movlw	-1
 26010  017B34  006F FF8C  F032    	movff	plusw1,btemp
 26011  017B3A  0E0B               	movlw	11
 26012  017B3C  6432               	cpfsgt	btemp^0,c
 26013  017B3E  D7E2               	goto	l8419
 26014                           
 26015                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26016  017B40  52E5               	movf	postdec1,f,c
 26017  017B42  0012               	return		;funcret
 26018  017B44                     __end_of_TMR6_DefaultInterruptHandler:
 26019                           	opt callstack 0
 26020                           
 26021 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26022 ;; Defined at:
 26023 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26024 ;; Parameters:    Size  Location     Type
 26025 ;;		None
 26026 ;; Auto vars:     Size  Location     Type
 26027 ;;		None
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      void 
 26030 ;; Registers used:
 26031 ;;		None
 26032 ;; Tracked objects:
 26033 ;;		On entry : 0/0
 26034 ;;		On exit  : 3F/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;Total ram usage:        0 bytes
 26042 ;; Hardware stack levels used:    1
 26043 ;; This function calls:
 26044 ;;		Nothing
 26045 ;; This function is called by:
 26046 ;;		Interrupt level 2
 26047 ;; This function uses a non-reentrant model
 26048 ;;
 26049                           
 26050                           	psect	text143
 26051  0184E0                     __ptext143:
 26052                           	opt callstack 0
 26053  0184E0                     _DMA1_DMASCNT_ISR:
 26054                           	opt callstack 14
 26055                           
 26056                           ;incstack = 0
 26057  0184E0  EE14  F000         	lfsr	1,___inthi_sp
 26058                           
 26059                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26060  0184E4  0139               	movlb	57	; () banked
 26061  0184E6  91A2               	bcf	162,0,b	;volatile
 26062                           
 26063                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26064  0184E8  0100               	movlb	0	; () banked
 26065  0184EA  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26066                           
 26067                           ; BSR set to: 0
 26068  0184EC  0011               	retfie		f
 26069  0184EE                     __end_of_DMA1_DMASCNT_ISR:
 26070                           	opt callstack 0
 26071                           
 26072 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26073 ;; Defined at:
 26074 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26075 ;; Parameters:    Size  Location     Type
 26076 ;;		None
 26077 ;; Auto vars:     Size  Location     Type
 26078 ;;		None
 26079 ;; Return value:  Size  Location     Type
 26080 ;;                  1    wreg      void 
 26081 ;; Registers used:
 26082 ;;		None
 26083 ;; Tracked objects:
 26084 ;;		On entry : 0/0
 26085 ;;		On exit  : 3F/39
 26086 ;;		Unchanged: 0/0
 26087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26092 ;;Total ram usage:        0 bytes
 26093 ;; Hardware stack levels used:    1
 26094 ;; This function calls:
 26095 ;;		Nothing
 26096 ;; This function is called by:
 26097 ;;		Interrupt level 2
 26098 ;; This function uses a non-reentrant model
 26099 ;;
 26100                           
 26101                           	psect	text144
 26102  0184F8                     __ptext144:
 26103                           	opt callstack 0
 26104  0184F8                     _DMA1_DMADCNT_ISR:
 26105                           	opt callstack 14
 26106                           
 26107                           ; BSR set to: 0
 26108                           ;incstack = 0
 26109  0184F8  EE14  F000         	lfsr	1,___inthi_sp
 26110                           
 26111                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26112  0184FC  0139               	movlb	57	; () banked
 26113  0184FE  93A2               	bcf	162,1,b	;volatile
 26114                           
 26115                           ; BSR set to: 57
 26116  018500  0011               	retfie		f
 26117  018502                     __end_of_DMA1_DMADCNT_ISR:
 26118                           	opt callstack 0
 26119                           
 26120 ;; *************** function _DMA1_DMAA_ISR *****************
 26121 ;; Defined at:
 26122 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26123 ;; Parameters:    Size  Location     Type
 26124 ;;		None
 26125 ;; Auto vars:     Size  Location     Type
 26126 ;;		None
 26127 ;; Return value:  Size  Location     Type
 26128 ;;                  1    wreg      void 
 26129 ;; Registers used:
 26130 ;;		None
 26131 ;; Tracked objects:
 26132 ;;		On entry : 0/0
 26133 ;;		On exit  : 3F/39
 26134 ;;		Unchanged: 0/0
 26135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26140 ;;Total ram usage:        0 bytes
 26141 ;; Hardware stack levels used:    1
 26142 ;; This function calls:
 26143 ;;		Nothing
 26144 ;; This function is called by:
 26145 ;;		Interrupt level 2
 26146 ;; This function uses a non-reentrant model
 26147 ;;
 26148                           
 26149                           	psect	text145
 26150  018504                     __ptext145:
 26151                           	opt callstack 0
 26152  018504                     _DMA1_DMAA_ISR:
 26153                           	opt callstack 14
 26154                           
 26155                           ; BSR set to: 57
 26156                           ;incstack = 0
 26157  018504  EE14  F000         	lfsr	1,___inthi_sp
 26158                           
 26159                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26160  018508  0139               	movlb	57	; () banked
 26161  01850A  97A2               	bcf	162,3,b	;volatile
 26162                           
 26163                           ; BSR set to: 57
 26164  01850C  0011               	retfie		f
 26165  01850E                     __end_of_DMA1_DMAA_ISR:
 26166                           	opt callstack 0
 26167                           
 26168 ;; *************** function _DMA1_DMAOR_ISR *****************
 26169 ;; Defined at:
 26170 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26171 ;; Parameters:    Size  Location     Type
 26172 ;;		None
 26173 ;; Auto vars:     Size  Location     Type
 26174 ;;		None
 26175 ;; Return value:  Size  Location     Type
 26176 ;;                  1    wreg      void 
 26177 ;; Registers used:
 26178 ;;		None
 26179 ;; Tracked objects:
 26180 ;;		On entry : 0/0
 26181 ;;		On exit  : 3F/39
 26182 ;;		Unchanged: 0/0
 26183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26188 ;;Total ram usage:        0 bytes
 26189 ;; Hardware stack levels used:    1
 26190 ;; This function calls:
 26191 ;;		Nothing
 26192 ;; This function is called by:
 26193 ;;		Interrupt level 2
 26194 ;; This function uses a non-reentrant model
 26195 ;;
 26196                           
 26197                           	psect	text146
 26198  018510                     __ptext146:
 26199                           	opt callstack 0
 26200  018510                     _DMA1_DMAOR_ISR:
 26201                           	opt callstack 14
 26202                           
 26203                           ; BSR set to: 57
 26204                           ;incstack = 0
 26205  018510  EE14  F000         	lfsr	1,___inthi_sp
 26206                           
 26207                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26208  018514  0139               	movlb	57	; () banked
 26209  018516  95A2               	bcf	162,2,b	;volatile
 26210                           
 26211                           ; BSR set to: 57
 26212  018518  0011               	retfie		f
 26213  01851A                     __end_of_DMA1_DMAOR_ISR:
 26214                           	opt callstack 0
 26215                           
 26216                           ;
 26217                           ; Interrupt Vector Table @ 0x8
 26218                           ;
 26219                           
 26220                           	psect	ivt0x8
 26221  000008                     __pivt0x8:
 26222                           	opt callstack 0
 26223  000008                     ivt0x8_base:
 26224                           	opt callstack 0
 26225                           
 26226                           ; Vector 0 : SWINT
 26227  000008  6157               	dw	_Default_ISR shr (0+2)
 26228                           
 26229                           ; Vector 1 : HLVD
 26230  00000A  6157               	dw	_Default_ISR shr (0+2)
 26231                           
 26232                           ; Vector 2 : OSF
 26233  00000C  6157               	dw	_Default_ISR shr (0+2)
 26234                           
 26235                           ; Vector 3 : CSW
 26236  00000E  6157               	dw	_Default_ISR shr (0+2)
 26237                           
 26238                           ; Vector 4 : NVM
 26239  000010  6157               	dw	_Default_ISR shr (0+2)
 26240                           
 26241                           ; Vector 5 : SCAN
 26242  000012  6157               	dw	_Default_ISR shr (0+2)
 26243                           
 26244                           ; Vector 6 : CRC
 26245  000014  6157               	dw	_Default_ISR shr (0+2)
 26246                           
 26247                           ; Vector 7 : IOC
 26248  000016  6157               	dw	_Default_ISR shr (0+2)
 26249                           
 26250                           ; Vector 8 : INT0
 26251  000018  6134               	dw	_INT0_ISR shr (0+2)
 26252                           
 26253                           ; Vector 9 : ZCD
 26254  00001A  6157               	dw	_Default_ISR shr (0+2)
 26255                           
 26256                           ; Vector 10 : AD
 26257  00001C  5FC1               	dw	_ADCC_ISR shr (0+2)
 26258                           
 26259                           ; Vector 11 : ADT
 26260  00001E  5D4D               	dw	_ADCC_ThresholdISR shr (0+2)
 26261                           
 26262                           ; Vector 12 : CMP1
 26263  000020  6157               	dw	_Default_ISR shr (0+2)
 26264                           
 26265                           ; Vector 13 : SMT1
 26266  000022  6157               	dw	_Default_ISR shr (0+2)
 26267                           
 26268                           ; Vector 14 : SMT1PRA
 26269  000024  6157               	dw	_Default_ISR shr (0+2)
 26270                           
 26271                           ; Vector 15 : SMT1PRW
 26272  000026  6157               	dw	_Default_ISR shr (0+2)
 26273                           
 26274                           ; Vector 16 : DMA1SCNT
 26275  000028  6138               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26276                           
 26277                           ; Vector 17 : DMA1DCNT
 26278  00002A  613E               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26279                           
 26280                           ; Vector 18 : DMA1OR
 26281  00002C  6144               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26282                           
 26283                           ; Vector 19 : DMA1A
 26284  00002E  6141               	dw	_DMA1_DMAA_ISR shr (0+2)
 26285                           
 26286                           ; Vector 20 : SPI1RX
 26287  000030  6157               	dw	_Default_ISR shr (0+2)
 26288                           
 26289                           ; Vector 21 : SPI1TX
 26290  000032  6157               	dw	_Default_ISR shr (0+2)
 26291                           
 26292                           ; Vector 22 : SPI1
 26293  000034  6157               	dw	_Default_ISR shr (0+2)
 26294                           
 26295                           ; Vector 23 : I2C1RX
 26296  000036  6157               	dw	_Default_ISR shr (0+2)
 26297                           
 26298                           ; Vector 24 : I2C1TX
 26299  000038  6157               	dw	_Default_ISR shr (0+2)
 26300                           
 26301                           ; Vector 25 : I2C1
 26302  00003A  6157               	dw	_Default_ISR shr (0+2)
 26303                           
 26304                           ; Vector 26 : I2C1E
 26305  00003C  6157               	dw	_Default_ISR shr (0+2)
 26306                           
 26307                           ; Vector 27 : U1RX
 26308  00003E  606C               	dw	_UART1_rx_vect_isr shr (0+2)
 26309                           
 26310                           ; Vector 28 : U1TX
 26311  000040  6062               	dw	_UART1_tx_vect_isr shr (0+2)
 26312                           
 26313                           ; Vector 29 : U1E
 26314  000042  6157               	dw	_Default_ISR shr (0+2)
 26315                           
 26316                           ; Vector 30 : U1
 26317  000044  6157               	dw	_Default_ISR shr (0+2)
 26318                           
 26319                           ; Vector 31 : TMR0
 26320  000046  6157               	dw	_Default_ISR shr (0+2)
 26321                           
 26322                           ; Vector 32 : TMR1
 26323  000048  6157               	dw	_Default_ISR shr (0+2)
 26324                           
 26325                           ; Vector 33 : TMR1G
 26326  00004A  6157               	dw	_Default_ISR shr (0+2)
 26327                           
 26328                           ; Vector 34 : TMR2
 26329  00004C  6157               	dw	_Default_ISR shr (0+2)
 26330                           
 26331                           ; Vector 35 : CCP1
 26332  00004E  6157               	dw	_Default_ISR shr (0+2)
 26333                           
 26334                           ; Vector 36 : Undefined
 26335  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26336                           
 26337                           ; Vector 37 : NCO1
 26338  000052  6157               	dw	_Default_ISR shr (0+2)
 26339                           
 26340                           ; Vector 38 : CWG1
 26341  000054  6157               	dw	_Default_ISR shr (0+2)
 26342                           
 26343                           ; Vector 39 : CLC1
 26344  000056  6157               	dw	_Default_ISR shr (0+2)
 26345                           
 26346                           ; Vector 40 : INT1
 26347  000058  5F03               	dw	_INT1_ISR shr (0+2)
 26348                           
 26349                           ; Vector 41 : CMP2
 26350  00005A  6157               	dw	_Default_ISR shr (0+2)
 26351                           
 26352                           ; Vector 42 : DMA2SCNT
 26353  00005C  6157               	dw	_Default_ISR shr (0+2)
 26354                           
 26355                           ; Vector 43 : DMA2DCNT
 26356  00005E  6157               	dw	_Default_ISR shr (0+2)
 26357                           
 26358                           ; Vector 44 : DMA2OR
 26359  000060  6157               	dw	_Default_ISR shr (0+2)
 26360                           
 26361                           ; Vector 45 : DMA2A
 26362  000062  6157               	dw	_Default_ISR shr (0+2)
 26363                           
 26364                           ; Vector 46 : I2C2RX
 26365  000064  6157               	dw	_Default_ISR shr (0+2)
 26366                           
 26367                           ; Vector 47 : I2C2TX
 26368  000066  6157               	dw	_Default_ISR shr (0+2)
 26369                           
 26370                           ; Vector 48 : I2C2
 26371  000068  6157               	dw	_Default_ISR shr (0+2)
 26372                           
 26373                           ; Vector 49 : I2C2E
 26374  00006A  6157               	dw	_Default_ISR shr (0+2)
 26375                           
 26376                           ; Vector 50 : U2RX
 26377  00006C  6080               	dw	_UART2_rx_vect_isr shr (0+2)
 26378                           
 26379                           ; Vector 51 : U2TX
 26380  00006E  6076               	dw	_UART2_tx_vect_isr shr (0+2)
 26381                           
 26382                           ; Vector 52 : U2E
 26383  000070  6157               	dw	_Default_ISR shr (0+2)
 26384                           
 26385                           ; Vector 53 : U2
 26386  000072  6157               	dw	_Default_ISR shr (0+2)
 26387                           
 26388                           ; Vector 54 : TMR3
 26389  000074  6157               	dw	_Default_ISR shr (0+2)
 26390                           
 26391                           ; Vector 55 : TMR3G
 26392  000076  6157               	dw	_Default_ISR shr (0+2)
 26393                           
 26394                           ; Vector 56 : TMR4
 26395  000078  6157               	dw	_Default_ISR shr (0+2)
 26396                           
 26397                           ; Vector 57 : CCP2
 26398  00007A  6157               	dw	_Default_ISR shr (0+2)
 26399                           
 26400                           ; Vector 58 : Undefined
 26401  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26402                           
 26403                           ; Vector 59 : CWG2
 26404  00007E  6157               	dw	_Default_ISR shr (0+2)
 26405                           
 26406                           ; Vector 60 : CLC2
 26407  000080  6157               	dw	_Default_ISR shr (0+2)
 26408                           
 26409                           ; Vector 61 : INT2
 26410  000082  6157               	dw	_Default_ISR shr (0+2)
 26411                           
 26412                           ; Vector 62 : Undefined
 26413  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26414                           
 26415                           ; Vector 63 : Undefined
 26416  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26417                           
 26418                           ; Vector 64 : Undefined
 26419  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26420                           
 26421                           ; Vector 65 : Undefined
 26422  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26423                           
 26424                           ; Vector 66 : Undefined
 26425  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26426                           
 26427                           ; Vector 67 : Undefined
 26428  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26429                           
 26430                           ; Vector 68 : Undefined
 26431  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26432                           
 26433                           ; Vector 69 : Undefined
 26434  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26435                           
 26436                           ; Vector 70 : TMR5
 26437  000094  5E28               	dw	_TMR5_ISR shr (0+2)
 26438                           
 26439                           ; Vector 71 : TMR5G
 26440  000096  6157               	dw	_Default_ISR shr (0+2)
 26441                           
 26442                           ; Vector 72 : TMR6
 26443  000098  60F8               	dw	_TMR6_ISR shr (0+2)
 26444                           
 26445                           ; Vector 73 : CCP3
 26446  00009A  6157               	dw	_Default_ISR shr (0+2)
 26447                           
 26448                           ; Vector 74 : CWG3
 26449  00009C  6157               	dw	_Default_ISR shr (0+2)
 26450                           
 26451                           ; Vector 75 : CLC3
 26452  00009E  6157               	dw	_Default_ISR shr (0+2)
 26453                           
 26454                           ; Vector 76 : Undefined
 26455  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26456                           
 26457                           ; Vector 77 : Undefined
 26458  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26459                           
 26460                           ; Vector 78 : Undefined
 26461  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26462                           
 26463                           ; Vector 79 : Undefined
 26464  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26465                           
 26466                           ; Vector 80 : CCP4
 26467  0000A8  6157               	dw	_Default_ISR shr (0+2)
 26468                           
 26469                           ; Vector 81 : CLC4
 26470  0000AA  6157               	dw	_Default_ISR shr (0+2)
 26471  0000AC                     ivt0x8_undefint:
 26472                           	opt callstack 0
 26473  0000AC  00FF               	reset	
 26474                           
 26475                           	psect	text147
 26476  000000                     __ptext147:
 26477                           	opt callstack 0
 26478                           
 26479                           	psect	rparam
 26480  0000                     
 26481                           	psect	temp
 26482  000032                     btemp:
 26483                           	opt callstack 0
 26484  000032                     	ds	32
 26485  0000                     wtemp0	set	btemp
 26486  0000                     wtemp1	set	btemp+2
 26487  0000                     wtemp2	set	btemp+4
 26488  0000                     wtemp3	set	btemp+6
 26489  0000                     wtemp4	set	btemp+8
 26490  0000                     wtemp5	set	btemp+10
 26491  0000                     wtemp8	set	btemp+1
 26492  0000                     ttemp0	set	btemp
 26493  0000                     ttemp1	set	btemp+3
 26494  0000                     ttemp2	set	btemp+6
 26495  0000                     ttemp3	set	btemp+9
 26496  0000                     ttemp5	set	btemp+1
 26497  0000                     ttemp6	set	btemp+4
 26498  0000                     ttemp7	set	btemp+8
 26499  0000                     ltemp0	set	btemp
 26500  0000                     ltemp1	set	btemp+4
 26501  0000                     ltemp2	set	btemp+8
 26502  0000                     lltemp0	set	btemp
 26503  0000                     lltemp1	set	btemp+8
 26504  0000                     lltemp2	set	btemp+16
 26505  0000                     lltemp3	set	btemp+24
 26506                           tosu	equ	0x3FFF
 26507                           tosh	equ	0x3FFE
 26508                           tosl	equ	0x3FFD
 26509                           stkptr	equ	0x3FFC
 26510                           pclatu	equ	0x3FFB
 26511                           pclath	equ	0x3FFA
 26512                           pcl	equ	0x3FF9
 26513                           tblptru	equ	0x3FF8
 26514                           tblptrh	equ	0x3FF7
 26515                           tblptrl	equ	0x3FF6
 26516                           tablat	equ	0x3FF5
 26517                           prodh	equ	0x3FF4
 26518                           prodl	equ	0x3FF3
 26519                           indf0	equ	0x3FEF
 26520                           postinc0	equ	0x3FEE
 26521                           postdec0	equ	0x3FED
 26522                           preinc0	equ	0x3FEC
 26523                           plusw0	equ	0x3FEB
 26524                           fsr0h	equ	0x3FEA
 26525                           fsr0l	equ	0x3FE9
 26526                           wreg	equ	0x3FE8
 26527                           indf1	equ	0x3FE7
 26528                           postinc1	equ	0x3FE6
 26529                           postdec1	equ	0x3FE5
 26530                           preinc1	equ	0x3FE4
 26531                           plusw1	equ	0x3FE3
 26532                           fsr1h	equ	0x3FE2
 26533                           fsr1l	equ	0x3FE1
 26534                           bsr	equ	0x3FE0
 26535                           indf2	equ	0x3FDF
 26536                           postinc2	equ	0x3FDE
 26537                           postdec2	equ	0x3FDD
 26538                           preinc2	equ	0x3FDC
 26539                           plusw2	equ	0x3FDB
 26540                           fsr2h	equ	0x3FDA
 26541                           fsr2l	equ	0x3FD9
 26542                           status	equ	0x3FD8


Data Sizes:
    Strings     271
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4974_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[14]), STR_9(CODE[14]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3987tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  346948
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _check_switches
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_switches                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  197030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _check_switches
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 04:12:59 2019

                     _SPI1_Exchange8bit 82F6                __end_of_set_display_info 8350  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE5F  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 80BE  
          __end_of_start_switch_handler 82F6                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 854A  
                           __CFG_LVP$ON 000000                                     l171 8466  
                                   l701 7ED2                                     l581 7EA6  
                                   l835 8304                                     _GIE 01FE97  
                                   _abs 7A2C                                     _pad 6622  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8412  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 82B4  
                    _UART1_Transmit_ISR 7E80                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8292                            __CFG_ZCD$OFF 000000  
                                  l1028 7C04                                    l2017 1D78  
                                  l2301 6CBA                                    l1335 77F6  
                                  l2312 6018                                    l1256 3E00  
                                  l1248 3C50                                    l2305 5F44  
                                  l1258 3E06                                    l1551 7CA2  
                                  l1471 6E22                                    l1608 834C  
                                  l1560 54CC                                    l1490 7CD6  
                                  l2339 5EB6                                    l1475 713C  
                                  l1564 5628                                    l2700 5826  
                                  l1654 3786                                    l1808 667E  
                                  l2624 32D8                                    l1568 6840  
                                  l2731 7A6C                                    l2723 5D44  
                                  l1828 386A                                    l2660 25A2  
                                  l1908 0B1A                                    l2900 72D8  
                                  l1693 5BAE                    _ADCC_StartConversion 8480  
                                  l2591 2BEE                                    l1864 123A  
                                  l2762 51D0                                    l2826 6500  
                                  l1946 4B12                                    l2579 2D5E  
                                  l1893 066A                                    l1967 405A  
                                  l2872 59EE                                    l2887 735C  
                                  l9203 6416                                    l8423 7B2E  
                                  l9215 6F9E                                    l9225 702A  
                                  l9217 6FC0                                    l8419 7B04  
                                  l9403 2C2E                                    l9331 297C  
                                  l9315 28D8                                    l9243 2602  
                                  l9229 7068                                    l9413 2C56  
                                  l9325 294A                                    l9261 26C0  
                                  l9253 2658                                    l8631 6184  
                                  l9335 2986                                    l9255 2688  
                                  l9503 5CE6                                    l8633 6194  
                                  l9417 2C5C                                    l9329 296A  
                                  l9273 2732                                    l9249 2642  
                                  l8651 6212                                    l8635 619A  
                                  l8643 61B6                                    l9611 4DE2  
                                  l9451 2D3E                                    l9443 2CFE  
                                  l9363 2A6E                                    l9339 29B6  
                                  l9267 26F2                                    l9515 6B74  
                                  l8717 7EA2                                    l8637 61A0  
                                  l8645 61E2                                    l9605 4D9C  
                                  l9445 2D0E                                    l9429 2CBA  
                                  l9381 2B9E                                    l9357 2A52  
                                  l9285 279A                                    l9277 2748  
                                  l9509 5D3C                                    l9541 44EE  
                                  l8639 61AE                                    l9463 664E  
                                  l9623 4EB4                                    l9711 2F22  
                                  l9439 2CE6                                    l9359 2A64  
                                  l9367 2AA0                                    l9279 2778  
                                  l9527 734C                                    l9473 66C4  
                                  l9705 2EDC                                    l9561 46A4  
                                  l8739 7ECE                                    l8659 6280  
                                  l9467 6676                                    l9651 52C0  
                                  l9643 5238                                    l9811 3284  
                                  l9731 2FB4                                    l9723 2F9A  
                                  l9379 2B78                                    l9555 460C  
                                  l8765 7BEC                                    l9477 670E  
                                  l9469 6688                                    l9485 7A5C  
                                  l9805 3254                                    l9741 3044  
                                  l9717 2F60                                    l9709 2EF2  
                                  l9397 2C10                                    l9389 2BD2  
                                  l9565 4712                                    l9557 465C  
                                  l9751 308C                                    l9399 2C22  
                                  l9583 72C8                                    l9817 32AC  
                                  l9841 1E18                                    l9659 536C  
                                  l9819 32BC                                    l9771 312E  
                                  l9691 2E44                                    l9923 2396  
                                  l9843 1E1E                                    l9835 1DD8  
                                  l9499 5CE2                                    l9765 3112  
                                  l9757 30E0                                    l9749 307A  
                                  l9685 2DFE                                    l9933 23D8  
                                  l9861 1EEC                                    l9853 1EA6  
                                  l9845 1E4E                                    l9599 4D48  
                                  l9775 3154                                    l9759 30E4  
                                  l9679 2DBE                                    l9943 2422  
                                  l9871 1F3E                                    l9863 1F1C  
                                  STR_1 FF62                                    STR_2 FFA4  
                                  l9785 319E                                    l9689 2E14  
                                  l9961 24E2                                    l9929 23B2  
                                  STR_3 FFE0                                    STR_4 FF51  
                                  l9699 2E9C                                    l9947 2428  
                                  l9859 1EE6                                    STR_5 FF73  
                                  STR_6 FFA4                                    l9789 31A4  
                                  l9957 249C                                    STR_7 FFE0  
                                  STR_8 FF40                                    l9799 3218  
                                  l9975 2550                                    l9967 250C  
                                  STR_9 FFB3                                    l9977 256A  
                                  l9997 6046                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  _T6PR 003F93                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u9000 29CE  
                                  u9100 2BC0                                    u9200 2CAA  
                                  u9140 2C34                                    u9060 2A96  
                                  u9205 2C9A                                    u9230 2CCA  
                                  u9160 2C4E                                    u9400 5D36  
                                  u9065 2A86                                    u9330 7A40  
                                  u9410 6BEE                                    u9340 5C66  
                                  u9510 45B2                                    u9430 730A  
                                  u9270 7DB6                                    u8800 6FEE  
                                  u9440 730C                                    u9280 7DB8  
                                  u9345 5C5C                                    u9417 6BE0  
                                  u9610 7E16                                    u9530 468A  
                                  u9515 45A8                                    u9620 7E18  
                                  u9460 4486                                    u9710 4EEC  
                                  u9390 5D34                                    u9470 44D2  
                                  u8830 7DE6                                    u8807 6FE0  
                                  u9535 4680                                    u9640 4D42  
                                  u9800 52EC                                    u8840 7DE8  
                                  u9560 7B7C                                    u9385 5D16  
                                  u9465 447C                                    u8770 640A  
                                  u9730 4F3E                                    u9570 7B7E  
                                  _PLLR 01CEE0                                    u9660 4D98  
                                  u9820 53A4                                    u8940 28FE  
                                  u9580 7286                                    u8790 6486  
                                  u8950 291E                                    u9590 7288  
                                  u9671 4DA2                                    u8951 2918  
                                  u9495 450C                                    u9680 4DDC  
                                  u9840 53F6                                    u9760 5232  
                                  u9496 4512                                    u9497 4520  
                                  u9690 4E0E                                    u9780 5288  
                                  u9790 52BA                                    u8990 29AE  
                                  u8968 2920                                    u8995 299E  
                                  u9980 310C                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 7F2E  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0240  
                                  _atoi 4F66                                    _ctoa 71D6  
                                  _main 3C0C                                    _dtoa 378C  
                                  _nanf 76CA                                    _seed 01BB  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4A28  
                                  btemp 0032                                    _xtoa 4016  
                __end_of_check_adc_scan 8542                           ___fpclassifyf 5BB8  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8314                          _check_switches 8522  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 81B0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0052  
                      __end_of_INT0_ISR 84DE                        __end_of_INT1_ISR 7C4A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 6E2A  
         __end_of_OSCILLATOR_Initialize 846C                                   l10003 605C  
                                 l10031 6156                                   l10023 6122  
                                 l10111 6016                                   l10103 5FE0  
                                 l10009 607C                                   l10051 6554  
                                 l10043 652A                                   l10061 65D4  
                                 l10301 022C                                   l10215 38A4  
                                 l10207 385A                                   l10047 653C  
                                 l10119 79BC                                   l11009 8242  
                                 l10081 6C84                                   l10153 5E4E  
                                 l10145 5E22                                   l10129 5DA0  
                                 l10401 077A                                   l10305 0258  
                                 l10219 38C2                                   l10155 5E64  
                                 l10147 5E3E                                   l10411 0926  
                                 l10331 0396                                   l10315 02FC  
                                 l10323 032A                                   l12011 3E0A  
                                 l10173 798E                                   l10181 71F4  
                                 l10253 3BC2                                   l10229 3AD4  
                                 l10069 6608                                   l10085 6CB8  
                                 l10077 6C42                                   l10093 5F02  
                                 l10341 04D2                                   l11045 6F2A  
                                 l11141 5724                                   l12013 3E38  
                                 l10183 7220                                   l10511 0FD6  
                                 l10335 0406                                   l11151 5786  
                                 l11135 56E2                                   l11127 5676  
                                 l10249 3B86                                   l10513 0FF0  
                                 l10433 0B12                                   l10425 0A48  
                                 l10353 0554                                   l10337 0470  
                                 l11137 56F0                                   l12033 3E90  
                                 l12025 3E6C                                   l10099 5F92  
                                 l10523 1092                                   l10435 0B34  
                                 l10267 00AC                                   l10603 4C6A  
                                 l11147 5752                                   l11139 5706  
                                 l12043 3FD0                                   l10533 10E2  
                                 l10461 0CBA                                   l10373 05F6  
                                 l10365 0594                                   l10357 057C  
                                 l10621 404A                                   l11149 5770  
                                 l10703 5042                                   l10391 06B8  
                                 l10375 0602                                   l10359 058E  
                                 l10279 00F0                                   l10287 0146  
                                 l10607 4CA6                                   l11159 57A4  
                                 l12055 4004                                   l10713 5124  
                                 l10705 505A                                   l10449 0C32  
                                 l10297 01EA                                   l10641 4120  
                                 l10633 40C0                                   l11089 7CE0  
                                 l11169 5806                                   l10723 51C0  
                                 l10707 507E                                   l10395 06F0  
                                 l10299 0216                                   l10627 4084  
                                 l10709 50BC                                   l10549 119A  
                                 l10469 0D24                                   l10477 0D90  
                                 l10485 0EA2                                   l10741 5924  
                                 l10901 1D04                                   l10813 165C  
                                 l10823 16F2                                   l11543 6758  
                                 l11711 5A74                                   l10497 0F3A  
                                 l10593 4BB4                                   l10585 4B48  
                                 l10569 4A94                                   l10681 4386  
                                 l10657 4216                                   l10665 429C  
                                 l10739 58B8                                   l10843 18E8  
                                 l10835 1830                                   l10771 1326  
                                 l10907 1D24                                   l11635 3312  
                                 l11707 5A5C                                   l10589 4B84  
                                 l10773 1360                                   l11661 35D8  
                                 l11645 3430                                   PRLOCK 0039EF  
                                 l10687 4F80                                   l10599 4C3E  
                                 l10847 191C                                   l10775 1376  
                                 l10951 48FC                                   l11921 73AA  
                                 l10697 5016                                   l10689 4FA2  
                                 l10793 14A8                                   l10945 4892  
                                 l11657 353C                                   l11649 350A  
                                 l11915 739A                                   l11595 7CB8  
                                 l10891 1CA6                                   l10867 1A7C  
                                 l10795 14E2                                   l10971 6E54  
                                 l10939 47D4                                   l11675 3754  
                                 l11683 3766                                   l10877 1B2A  
                                 l10797 14F8                                   l10973 6E94  
                                 l11669 36B8                                   l11845 73EA  
                                 l10959 49AA                                   l10897 1D00  
                                 l11857 7FB8                                   l11961 3C32  
                                 l11699 5A30                                   l11963 3C3A  
                                 l11885 549C                                   l11967 3C58  
                                 l11897 55C4                                   l11969 3C6A  
                       __end_of___aodiv 4F66                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 2D68  
                                 _ADCLK 003EFF                         __end_of___aomod 541A  
                                 _ADPCH 003EF1                         __end_of___fldiv 32E2  
                                 _ADREF 003EFD                         __end_of___awdiv 6170  
                       __end_of___flneg 79E6                                   STR_10 FFB3  
                                 STR_11 FF84                                   STR_20 FFCD  
                                 STR_12 FFFB                                   STR_13 FFF8  
                                 STR_21 FF95                                   STR_22 FF95  
                                 STR_23 FF95                                   STR_15 FFC1  
                                 STR_16 FFD7                                   STR_24 FEEF  
                                 STR_33 FF19                                   STR_17 FF1A  
                         __CFG_WDTE$OFF 000000                                   STR_18 FF1A  
                                 STR_42 FFF5                                   STR_34 FFE5  
                                 STR_26 FF2D                                   STR_35 FFED  
                                 STR_19 FFCD                                   STR_27 FF07  
                                 STR_44 FFF5                         __end_of___awmod 6622  
                                 STR_38 FFE9                                   STR_39 FFF1  
                                 _ADRPT 003EEC                         __end_of___flmul 25AC  
                       __end_of___flsub 7A2C                         __end_of___fltol 5EC0  
                                 u10020 3196                                   u10060 31F2  
                                 u10300 24F6                                   u11020 0562  
                                 u10205 2350                                   u10070 322C  
                                 u10080 3268                                   u10240 241A  
                                 u12000 1B7E                                   u10065 31E2  
                                 u10170 1F2C                                   u11050 05C6  
                                 u10420 6580                                   u10350 60A8  
                                 u10440 65F4                                   u10280 2476  
                                 u11320 10B8                                   u11160 0A18  
                                 u12120 6F0A                                   u10185 20C0  
                                 u10370 6142                                   u10290 24B0  
                                 u11090 0648                                   u10195 2188  
                                 u10700 37BE                                   u10540 79B8  
                                 u10620 5E6C                                   u11340 116E  
                                 u11260 0EE4                                   u11420 4BAA  
                                 u12220 579A                                   u10285 2466  
                                 u10550 5D80                                   u11350 1170  
                                 u11430 4BF0                                   u11510 4118  
                                 u12070 4A1E                                   u10800 3B42  
                                 u10720 382E                                   u10480 6CB4  
                                 u10640 5E96                                   u10560 5D94  
                                 u11520 416C                                   u12145 7BB8  
                                 u11601 42E8                                   u10650 796A  
                                 u10810 3B46                                   u10570 5DCE  
                                 u11610 42FE                                   u11530 416E  
                                 _U1P1H 003DED                                   u10555 5D76  
                                 u11611 42FC                                   u12260 75AA  
                                 u10660 798A                                   u10740 3840  
                                 u10900 0194                                   u11460 4CCC  
                                 u11620 4312                                   u12404 334E  
                                 _U1P2H 003DEF                                   u11437 4BE2  
                                 u12405 3348                                   u10830 3B5C  
                                 u10910 0196                                   u11630 4316  
                                 u11550 41CC                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u10575 5DC4  
                                 u10760 3890                                   u11560 41CE  
                                 u11480 4030                                   u11800 13BE  
                                 u12600 5614                                   u12424 3524  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u12425 351E                                   u10770 3AE8  
                                 u10690 37BC                                   u11810 13C0  
                                 u12610 5616                                   _U1P3L 003DF0  
                                 u11660 5012                                   u10940 02A6  
                                 u11580 4298                                   u11820 13E6  
                                 u12444 35F2                                   u12364 32FC  
                                 u12285 75DE                                   u10781 3B18  
                                 u12445 35EC                                   u12365 32F6  
                                 u12286 75E0                                   u12278 75AC  
                                 u10790 3B2E                                   u10950 02A8  
                                 u10870 00DA                                   u11590 42B8  
                                 u12470 361C                                   _U2P1L 003DD4  
                                 u10791 3B2C                                   u11680 516A  
                                 u11760 59B0                                   u11920 1746  
                                 u12464 3614                                   u12384 332C  
                                 u12480 5A0E                                   _U2P2L 003DD6  
                                 u11585 427A                                   u12465 360E  
                                 u12385 3326                                   u11690 516C  
                                 u11850 1540                                   _U2P3L 003DD8  
                                 u11860 1542                                   u10990 050E  
                                 u11950 19D6                                   u11870 1568  
                                 _T5CLK 003F9D                                   u11960 19D8  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 855C  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8188                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 78FA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 83FA                            _DMA1CON1bits 003BFD  
                                 _flags 001F                                   _fputc 63E6  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7B88  
                                 _fputs 701A                         __end_of_isdigit 7E22  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 7D2A                                   _width 001B  
                                 _putch 83C4                         __end_of_islower 7DC2  
                       __end_of_isspace 799E                _INT1_SetInterruptHandler 80BE  
                       __end_of_isupper 7DF2                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 806E  
           _UART1_SetRxInterruptHandler 8046                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 694E                         __end_of_tolower 7366  
                __end_of_check_switches 852A                         __end_of_strncmp 59F8  
                       __end_of_toupper 72E2                     ??_UART1_tx_vect_isr 0057  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 81D6  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 7AB8  
                 __end_of_ringBufS_init 7FA6                         __initialization 694E  
                     _UART2_rx_vect_isr 8200                            __end_of_atoi 51DA  
                          __end_of_ctoa 725E                            __end_of_main 4016  
                          __end_of_dtoa 3C0C                            __end_of_nanf 772C  
                          __end_of_stoa 4CE6                            __end_of_xtoa 43D0  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0052  
               __end_of_TMR2_Initialize 842A                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8096                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 0057               __end_of_UART1_tx_vect_isr 81AE  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 7ED8  
                       _PWM8_Initialize 8440                        _UART1_Initialize 7666  
                     _UART2_tx_vect_isr 81D8                      _UART2_Transmit_ISR 7EAC  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7602  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 7B88  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0052                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 78EC  
                  _start_switch_handler 82D6                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 84C0  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
                                u391_48 82C2            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u822_20 61AA  
                                u822_21 61A4                                  u830_28 82A0  
                                u841_28 825A                                  u826_24 6276  
                                u826_25 6272                                  u828_20 629C  
                                u819_28 618A                                  u828_26 629E  
                                u838_48 827E                                  u797_20 8166  
                                u797_26 8168                        __end_of___xxtofl 5830  
 __end_of_ADCC_DischargeSampleCapacitor 8522  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 851A                __end_of_send_lcd_cmd_dma 794C  
                   ??_UART2_tx_vect_isr 0057               __end_of_UART2_rx_vect_isr 8226  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 84EE  
                      _UART2_Initialize 778E                                  _WaitMs 7CBE  
                       _conv_raw_result 32E2                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 5EC0  
                                ___fleq 6C00                       _ADCC_ThresholdISR 7534  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 70B2  
                                _efgtoa 0000                                  _floorf 43D0  
                    ?_ADCC_ThresholdISR 0052                                  _memset 473C  
                  __size_of_help_button 0038                                  clear_0 69BC  
                                clear_1 69D0                                  clear_2 69E2  
                                clear_3 69EE                                  clear_4 69FA  
                                clear_5 6A06                                  clear_6 6A12  
                                clear_7 6A1E                                  clear_8 6A2A  
                                _printf 772C                      _eaDogM_WriteString 6ED2  
                                _strcpy 6B2C                               ?_ADCC_ISR 0052  
                                _strlen 6F78                      __size_of_TimerDone 0024  
                       _ADCC_Initialize 74C8                          _PMD_Initialize 846C  
             __end_of_UART2_tx_vect_isr 81FE                                  lltemp0 0032  
                                lltemp1 003A                                  lltemp2 0042  
                                lltemp3 004A                     ??_ADCC_ThresholdISR 0052  
                __end_of_start_adc_scan 7666                            __mediumconst FE5E  
                                preinc2 003FDC                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 7846                        __end_of_vfprintf 6ED2  
                            _StartTimer 7C4A           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 7AFE                       _SYSTEM_Initialize 7A72  
                            __accesstop 0060                 __end_of__initialization 6A3C  
                             ?_INT0_ISR 0052                               ?_INT1_ISR 0052  
                  __end_of_display_help 853A                    __end_of_display_info 8532  
             __end_of_CLKREF_Initialize 84F8                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0026                         _TMR5_WriteTimer 7BCA  
                 _set_temp_display_help 84A2               __end_of_ADCC_ThresholdISR 759C  
                __end_of_ringBufS_flush 7144                          __pcstackCOMRAM 0052  
                            ___inthi_sp 1000                              ___intlo_sp 1800  
                          __pidataBANK0 7E22                            __pidataBANK1 6CC4  
                          __pidataBANK2 8492                               ?_TMR5_ISR 0052  
                             ?_TMR6_ISR 0052                          ivt0x8_undefint 00AC  
                         __end_of_fputc 650A                           __end_of_fputs 70B2  
                         __end_of_srand 7D5E                   __end_of_TMR5_CallBack 826E  
                         __end_of_putch 83DE                 __end_of_PWM8_Initialize 8456  
               __end_of_TMR6_Initialize 7F02                       _adc_int_t_handler 7366  
                __end_of_PMD_Initialize 8480                              ??_ADCC_ISR 0052  
                 __end_of_TMR6_CallBack 8292             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8504  
                        _clear_adc_scan 854A                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0010               __end_of_SYSTEM_Initialize 7AB8  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              __pbssBANK7 0700  
                            _check_help 541A                 __end_of_conv_raw_result 378C  
                 _INT0_InterruptHandler 0016                              ??_INT0_ISR 0052  
                            ??_INT1_ISR 00F6                       __end_of_TimerDone 824A  
                      _DMA1_DMADCNT_ISR 84F8              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 83A8                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler 8096                 __end_of_ADCC_Initialize 7532  
                            ??_TMR5_ISR 01C3               __end_of_adc_int_t_handler 73E4  
                            ??_TMR6_ISR 0057                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8136  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 810E  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 8350                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 8550  
                        ?_DMA1_DMAA_ISR 0052                        _DMA1_DMASCNT_ISR 84E0  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001C  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1263_44 73CA  
                               u1263_45 73C4                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0052              __size_of_UART2_tx_vect_isr 0026  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch 7FA6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 7C0A  
               __size_of_switch_handler 0148       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 0068  
                         _mode_lamp_dim 83FA                                 __Lparam 0000  
              __end_of_UART1_Initialize 76CA                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 4CE6                                 ___fladd 25AC  
                               ___aomod 51DA                                 ___fldiv 2D68  
                               ___awdiv 6022                                 ___flneg 799E  
                               ___awmod 650A                                 ___flmul 1D82  
                               ___flsub 79E6                                 ___fltol 5D4E  
             __end_of_UART1_Receive_ISR 836E                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 6B2C  
                               __pcinit 694E                __end_of_mode_lamp_bright 84CE  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand 84B2                                 __ramtop 2000  
           __size_of_UART1_Transmit_ISR 002C                                 __ptext0 3C0C  
                               __ptext1 82D6                                 __ptext2 7602  
                               __ptext3 8480                                 __ptext4 851A  
                               __ptext5 7D2A                                 __ptext6 6A42  
                               __ptext7 7F2E                                 __ptext8 7F56  
                               __ptext9 82F6                       _UART2_Receive_ISR 836E  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize 8456                            __size_of_abs 0046  
                          __size_of_pad 0114                                 _isalpha 7B44  
                               _isdigit 7DF2                                 _mode_sw 0025  
                               us974999 4F50                                 us985999 5408  
                     __end_of_lp_filter 5BB8                                 _islower 7D92  
                               _isspace 794C                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 77EC  
                               _isupper 7DC2              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 6844                                 _tolower 72E2  
                 __size_of_display_help 0008                                 _utctime 00B5  
                 __size_of_display_info 0008                                 _strncmp 5830  
                               _toupper 725E                    end_of_initialization 6A3C  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 8046  
           _UART1_SetTxInterruptHandler 801E     __end_of_UART2_SetRxInterruptHandler 801E  
           _UART2_SetRxInterruptHandler 7FF6                               i2u1266_48 7568  
                             i2u1266_49 757C                       __end_of_set_vterm 83C4  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 855C               __end_of_UART2_Receive_ISR 838C  
                        wdtdelay@dcount 00B9                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0058                   _INT1_InterruptHandler 0013  
                             _PORTBbits 003FCB                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 806E                            _display_help 8532  
                 _TMR5_InterruptHandler 00C1                            _display_info 852A  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 002A  
   __end_of_ADCC_SetADIInterruptHandler 815E             _ADCC_SetADIInterruptHandler 8136  
                            _update_lcd 6736                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 745E  
                       _SPI1_Initialize 842A                   __end_of_get_vterm_ptr 7E80  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 7CF4            __end_of_INTERRUPT_Initialize 7602  
                            _vterm_dump 62B8                          __end_of___flge 6022  
                        __end_of___fleq 6CC4    __end_of_INT0_DefaultInterruptHandler 8566  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8564  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 7846  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 473C             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 00AD                          __end_of_memset 4A28  
                        __end_of_printf 778E                __end_of_DMA1_DMADCNT_ISR 8502  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 82D6  
                        __end_of_strcpy 6C00                          __end_of_strlen 701A  
                   start_initialization 694E    __end_of_TMR5_DefaultInterruptHandler 8186  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 815E  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 7A72  
                 __end_of_INT1_CallBack 82B4               __size_of_set_display_info 001E  
                           __end_of_pad 6736                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 7F7E                          _switch_handler 6170  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0600                   __end_of___fpclassifyf 5D4E  
                         _uart2RxBuffer 0700                           _uart1TxBuffer 03AC  
              __end_of_DMA1_DMASCNT_ISR 84EE                           _uart2TxBuffer 036C  
                        _DMA1_DMAOR_ISR 8510                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8226                           _ringBufS_init 7F7E  
                           __pdataBANK0 00C7                             __pdataBANK1 0100  
                           __pdataBANK2 0290              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 7D92  
                   __end_of_help_button 7CBE         __end_of_eaDogM_WriteStringAtPos 7D2A  
               __end_of_DMA1_Initialize 74C8                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 810E                           __pcstackBANK0 00F6  
                         __pcstackBANK1 01C3                __size_of_TMR2_Initialize 0018  
                __end_of_switch_handler 62B8                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8440                _UART1_RxInterruptHandler 000A  
              _UART2_TxInterruptHandler 000D                               __end_of_T FEEF  
                      _convert_adc_data 73E4               __size_of_ringBufS_put_dma 00AA  
                          _init_display 6A42                  __end_of_DMA1_DMAOR_ISR 851A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00C4  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 78A0  
                _PIN_MANAGER_Initialize 7144                    __end_of_wait_lcd_set 8556  
                         __pmediumconst FE5E                               __ptext100 8440  
                             __ptext101 846C                               __ptext110 745E  
                             __ptext102 7144                               __ptext111 84EE  
                             __ptext103 8456                               __ptext120 7BCA  
                             __ptext112 74C8                               __ptext104 759C  
                             __ptext121 824A                               __ptext113 810E  
                             __ptext105 8542                               __ptext130 8568  
                             __ptext122 815E                               __ptext114 8136  
                             __ptext106 7D5E                               __ptext131 7534  
                             __ptext123 84D0                               __ptext115 7C0C  
                             __ptext107 80BE                               __ptext140 83E0  
                             __ptext132 8188                               __ptext124 82B4  
                             __ptext116 8292                               __ptext108 80E6  
                             __ptext141 826E                               __ptext133 7E80  
                             __ptext125 8564                               __ptext117 8562  
                             __ptext109 7846                               __ptext142 7AFE  
                             __ptext134 81B0                               __ptext126 855C  
                             __ptext118 6170                               __ptext143 84E0  
                             __ptext135 8350                               __ptext127 7F04  
                             __ptext119 78A0                               __ptext144 84F8  
                             __ptext136 81D8                               __ptext128 7366  
                             __ptext145 8504                               __ptext137 7EAC  
                             __ptext129 8566                               __ptext146 8510  
                             __ptext138 8200                               __ptext147 0000  
                             __ptext139 836E                      __end_of_StartTimer 7C86  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 7F04                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 59F8  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 759C                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 84D0                                _INT1_ISR 7C0C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              i2u420_48 7F1A                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u861_48 81C2  
                              i2u863_48 81EA                                i2u865_48 8212  
                              i2u859_48 819A                __size_of_TMR5_Initialize 0046  
                             _set_vterm 83A8                     __size_of_update_lcd 010E  
                           _help_button 7C86              __end_of_UART1_Transmit_ISR 7EAC  
                              _TMR5_ISR 78A0                                _TMR6_ISR 83E0  
                             _port_data 0290                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 824A  
                            _ADCON0bits 003EF8                      __end_of_check_help 562C  
                             _start_lcd 8556                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 826E  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8332                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6962                               copy_data1 6984  
                             copy_data2 69A6                _INT0_SetInterruptHandler 80E6  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 7FF6             _UART2_SetTxInterruptHandler 7FCE  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AA                           _wait_lcd_done 838C  
                          _send_lcd_cmd 7F56                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8568                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 7FCE                   __end_of_DMA1_DMAA_ISR 850E  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 562C  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 84C0                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 7F7E  
                              __ptext11 7FA6                                __ptext20 8522  
                              __ptext12 84B2                                __ptext21 541A  
                              __ptext13 73E4                                __ptext30 77EC  
                              __ptext22 62B8                                __ptext14 59F8  
                              __ptext31 6ED2                                __ptext23 6844  
                              __ptext15 32E2                                __ptext40 725E  
                              __ptext32 8550                                __ptext24 7E52  
                              __ptext16 76CA                                __ptext41 7D92  
                              __ptext33 8556                                __ptext25 7CBE  
                              __ptext17 8314                                __ptext50 5BB8  
                              __ptext42 7B44                                __ptext34 70B2  
                              __ptext26 6736                                __ptext18 562C  
                              __ptext51 5D4E                                __ptext43 5830  
                              __ptext35 473C                                __ptext27 7CF4  
                              __ptext19 854A                                __ptext60 6022  
                              __ptext52 79E6                                __ptext44 4A28  
                              __ptext36 772C                                __ptext28 78FA  
                              __ptext61 378C                                __ptext53 25AC  
                              __ptext45 0000                                __ptext37 6E2A  
                              __ptext29 838C                                __ptext70 83C4  
                              __ptext62 7A2C                                __ptext54 799E  
                              __ptext46 72E2                                __ptext38 1244  
                              __ptext71 6D80                                __ptext63 51DA  
                              __ptext55 1D82                                __ptext47 7DC2  
                              __ptext39 4016                                __ptext80 7B88  
                              __ptext72 4F66                                __ptext64 4CE6  
                              __ptext56 5EC0                                __ptext48 6B2C  
                              __ptext81 7C86                                __ptext73 794C  
                              __ptext65 71D6                                __ptext57 6C00  
                              __ptext49 43D0                                __ptext90 7FF6  
                              __ptext82 8226                                __ptext74 7DF2  
                              __ptext66 6622                                __ptext58 2D68  
                              __ptext91 7666                                __ptext83 7C4A  
                              __ptext75 83A8                                __ptext67 6F78  
                              __ptext59 650A                                __ptext92 801E  
                              __ptext84 852A                                __ptext76 84A2  
                              __ptext68 701A                                __ptext93 8046  
                              __ptext85 8532                                __ptext77 8332  
                              __ptext69 63E6                                __ptext94 7ED8  
                              __ptext86 853A                                __ptext78 83FA  
                              __ptext95 806E                                __ptext87 7A72  
                              __ptext79 84C0                                __ptext96 7AB8  
                              __ptext88 778E                                __ptext97 8096  
                              __ptext89 7FCE                                __ptext98 8412  
                              __ptext99 842A                        __size_of_isupper 0030  
                              us1150999 4096                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1137999 4A3A  
                              us1068999 37A6                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 6D80  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 040A                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
               __size_of_check_switches 0008               _ADCC_ADI_InterruptHandler 0004  
                             stoa@F1166 00EF                      ??_DMA1_DMASCNT_ISR 0058  
          __end_of_ADCC_StartConversion 8492                                _spi_link 00A1  
                              _wdtdelay 77EC              __end_of_UART2_Transmit_ISR 7ED8  
                              _vfprintf 6E2A                __end_of_convert_adc_data 745E  
            __end_of_PWM8_LoadDutyValue 7BCA    __end_of_INT1_DefaultInterruptHandler 8564  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 8562  
                         ??_Default_ISR 0052                             _uart1RxHead 002E  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 0031  
                           _uart2RxHead 0028                             _uart1RxTail 002D  
                        _get_raw_result 8314                             _uart2TxHead 002B  
                           _uart1TxTail 0030                             _uart2RxTail 0027  
                           _uart2TxTail 002A                            _wait_lcd_set 8550  
                    _EXT_INT_Initialize 7D5E    __end_of_TMR6_DefaultInterruptHandler 7B44  
 __size_of_TMR6_DefaultInterruptHandler 0046            _TMR6_DefaultInterruptHandler 7AFE  
  __end_of_ADCC_DefaultInterruptHandler 8568   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler 8566                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long 7F2E  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help 84B2  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 6F78  
                 __end_of_mode_lamp_dim 8412                 __end_of_adc_int_handler 856A  
                __size_of_INT0_CallBack 0022                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0022  
                    __end_of_update_lcd 6844                  _uart2TxBufferRemaining 0029  
                        _FVR_Initialize 8542                  __end_of_get_raw_result 8332  
                      _send_lcd_cmd_dma 78FA                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0021        __end_of_INT1_SetInterruptHandler 80E6  
             __size_of_UART1_Initialize 0064                        ??_DMA1_DMAOR_ISR 0058  
              _UART1_TxInterruptHandler 0007               __end_of_send_lcd_cmd_long 7F56  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR 8562  
        __end_of_PIN_MANAGER_Initialize 71D6               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 63E6                 _eaDogM_WriteStringAtPos 7CF4  
                         _get_vterm_ptr 7E52                          _check_adc_scan 853A  
             __size_of_UART2_Initialize 005E  
