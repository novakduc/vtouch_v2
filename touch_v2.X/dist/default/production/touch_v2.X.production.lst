

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 22 04:34:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=4,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=4,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=4,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=4,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=4,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=4,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=4,class=CODE,delta=1
   127                           	psect	text106,global,reloc=4,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=4,class=CODE,delta=1
   130                           	psect	text109,global,reloc=4,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   135                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   138                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   139  0000                     
   140                           ; Version 2.05
   141                           ; Generated 20/12/2018 GMT
   142                           ; 
   143                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   144                           ; All rights reserved.
   145                           ; 
   146                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   147                           ; 
   148                           ; Redistribution and use in source and binary forms, with or without modification, are
   149                           ; permitted provided that the following conditions are met:
   150                           ; 
   151                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   152                           ;        conditions and the following disclaimer.
   153                           ; 
   154                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   155                           ;        of conditions and the following disclaimer in the documentation and/or other
   156                           ;        materials provided with the distribution.
   157                           ; 
   158                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   159                           ;        software without specific prior written permission.
   160                           ; 
   161                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   162                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   163                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   164                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   165                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   166                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   167                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   168                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   169                           ; 
   170                           ; 
   171                           ; Code-generator required, PIC18F57K42 Definitions
   172                           ; 
   173                           ; SFR Addresses
   174  0000                     
   175 ;;_mode	offset	0
   176 ;;_rxData	offset	0
   177 ;;_t_link	offset=-1 (param)
   178 ;;_k	offset	0
   179 ;;_checksum	offset	2
   180 ;;_i	offset	4
   181 ;;_byte_block	offset=-2 (param)
   182 ;;_length	offset=-3 (param)
   183 ;;_fake	offset=-4 (param)
   184 ;;_s_uart	offset=-5 (param)
   185 ;;_i	offset	0
   186 ;;_sum	offset	2
   187 ;;_byte_block	offset=-2 (param)
   188 ;;_byte_count	offset=-4 (param)
   189 ;;_bufData	offset=-1 (param)
   190 ;;_txData	offset=-1 (param)
   191 ;;_bufData	offset=-1 (param)
   192 ;;_stream	offset=-6 (param)
   193 ;;_function	offset=-7 (param)
   194 ;;_s	offset=-2 (param)
   195 ;;_f	offset	0
   196 ;;_ap	offset	5
   197 ;;_s	offset=-2 (param)
   198 ;;_fmt	offset=-3 (param)
   199 ;;_rxData	offset	0
   200 ;;_r_link	offset=-1 (param)
   201 ;;_txData	offset=-1 (param)
   202 ;;_rxData	offset	0
   203 ;;_m_link	offset=-1 (param)
   204 ;;_stream	offset=-1 (param)
   205 ;;_function	offset=-2 (param)
   206 ;;_byte_block	offset=-1 (param)
   207 ;;_clear	offset=-2 (param)
   208 ;;_numMilliseconds	offset=-2 (param)
   209 ;;_timer	offset=-1 (param)
   210 ;;_timer	offset=-1 (param)
   211 ;;_count	offset=-3 (param)
   212 ;;_readValue	offset	0
   213 ;;_readValue	offset	0
   214 ;;_cmd	offset=-1 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_data	offset=-1 (param)
   217 ;;__this	offset=-2 (param)
   218 ;;_r	offset=-1 (param)
   219 ;;_c	offset=-2 (param)
   220 ;;_strPtr	offset=-3 (param)
   221 ;;_strPtr	offset=-1 (param)
   222 ;;_cmd	offset=-1 (param)
   223 ;;_strPtr	offset=-1 (param)
   224 ;;_delay	offset=-4 (param)
   225 ;;__this	offset=-2 (param)
   226 ;;_clearBuffer	offset=-3 (param)
   227 ;;_s	offset	0
   228 ;;_k	offset	2
   229 ;;_dest	offset=-2 (param)
   230 ;;_c	offset=-4 (param)
   231 ;;_n	offset=-6 (param)
   232 ;;_ap	offset	0
   233 ;;_fmt	offset=-2 (param)
   234 ;;_cfmt	offset	0
   235 ;;_fp	offset=-2 (param)
   236 ;;_fmt	offset=-3 (param)
   237 ;;_ap	offset=-5 (param)
   238 ;;_ll	offset	0
   239 ;;_cp	offset	8
   240 ;;_c	offset	10
   241 ;;_fp	offset=-2 (param)
   242 ;;_fmt	offset=-4 (param)
   243 ;;_ap	offset=-6 (param)
   244 ;;_r	offset	0
   245 ;;_l	offset	1
   246 ;;__l	offset=-1 (param)
   247 ;;__r	offset=-2 (param)
   248 ;;_n	offset=-4 (param)
   249 ;;_nuls	offset	0
   250 ;;_l	offset	7
   251 ;;_p	offset	9
   252 ;;_cp	offset	11
   253 ;;_w	offset	13
   254 ;;_i	offset	15
   255 ;;_fp	offset=-2 (param)
   256 ;;_s	offset=-4 (param)
   257 ;;_dtoa$3931	offset	0
   258 ;;_n	offset	2
   259 ;;_i	offset	10
   260 ;;_s	offset	12
   261 ;;_w	offset	14
   262 ;;_p	offset	16
   263 ;;_fp	offset=-2 (param)
   264 ;;_d	offset=-10 (param)
   265 ;;_a	offset=-2 (param)
   266 ;;_sign	offset	0
   267 ;;_counter	offset	1
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_quotient	offset	0
   271 ;;_sign	offset	8
   272 ;;_counter	offset	9
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_w	offset	0
   276 ;;_fp	offset=-2 (param)
   277 ;;_c	offset=-3 (param)
   278 ;;_w	offset	0
   279 ;;_i	offset	2
   280 ;;_fp	offset=-2 (param)
   281 ;;_buf	offset=-4 (param)
   282 ;;_p	offset=-6 (param)
   283 ;;_a	offset	0
   284 ;;_s	offset=-2 (param)
   285 ;;_i	offset	0
   286 ;;_c	offset	2
   287 ;;_s	offset=-2 (param)
   288 ;;_fp	offset=-4 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_fp	offset=-4 (param)
   291 ;;_c	offset=-1 (param)
   292 ;;__this	offset=-2 (param)
   293 ;;_c	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_state	offset	0
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_i	offset	0
   306 ;;_timerVal	offset=-2 (param)
   307                           
   308                           	psect	idataCOMRAM
   309  006412                     __pidataCOMRAM:
   310                           	opt callstack 0
   311                           
   312                           ;initializer for r_protocol@retry
   313  006412  03                 	db	3
   314                           
   315                           	psect	idataBANK0
   316  00574A                     __pidataBANK0:
   317                           	opt callstack 0
   318                           
   319                           ;initializer for _V
   320  00574A  00                 	db	0
   321  00574B  00                 	db	0
   322  00574C  00                 	db	0
   323  00574D  00                 	db	0
   324  00574E  00                 	db	0
   325  00574F  00                 	db	0
   326  005750  00                 	db	0
   327  005751  00                 	db	0
   328  005752  00                 	db	0
   329  005753  00                 	db	0
   330  005754  00                 	db	0
   331  005755  00                 	db	0
   332  005756  00                 	db	0
   333  005757  00                 	db	0
   334  005758  00                 	db	0
   335  005759  00                 	db	0
   336  00575A  00                 	db	0
   337  00575B  00                 	db	0
   338  00575C  00                 	db	0
   339  00575D  00                 	db	0
   340  00575E  00                 	db	0
   341  00575F  00                 	db	0
   342  005760  00                 	db	0
   343  005761  00                 	db	0
   344  005762  00                 	db	0
   345  005763  00                 	db	0
   346  005764  00                 	db	0
   347  005765  00                 	db	0
   348  005766  00                 	db	0
   349  005767  00                 	db	0
   350  005768  00                 	db	0
   351  005769  00                 	db	0
   352  00576A  00                 	db	0
   353  00576B  00                 	db	0
   354  00576C  00                 	db	0
   355  00576D  00                 	db	0
   356  00576E  00                 	db	0
   357  00576F  00                 	db	0
   358  005770  00                 	db	0
   359  005771  00                 	db	0
   360  005772  00                 	db	0
   361  005773  00                 	db	0
   362  005774  00                 	db	0
   363  005775  00                 	db	0
   364  005776  00                 	db	0
   365  005777  00                 	db	0
   366  005778  00                 	db	0
   367  005779  00                 	db	0
   368  00577A  00                 	db	0
   369  00577B  00                 	db	0
   370  00577C  00                 	db	0
   371  00577D  00                 	db	0
   372  00577E  00                 	db	0
   373  00577F  00                 	db	0
   374  005780  00                 	db	0
   375  005781  00                 	db	0
   376  005782  00                 	db	0
   377  005783  00                 	db	0
   378  005784  00                 	db	0
   379  005785  00                 	db	0
   380  005786  00                 	db	0
   381  005787  00                 	db	0
   382  005788  00                 	db	0
   383  005789  00                 	db	0
   384  00578A  00                 	db	0
   385  00578B  00                 	db	0
   386  00578C  00                 	db	0
   387  00578D  00                 	db	0
   388  00578E  00                 	db	0
   389  00578F  00                 	db	0
   390  005790  0000               	dw	0
   391  005792  0000               	dw	0
   392  005794  0000               	dw	0
   393  005796  0000               	dw	0
   394  005798  00                 	db	0
   395  005799  00                 	db	0
   396  00579A  00                 	db	0
   397  00579B  00                 	db	0
   398  00579C  00                 	db	0
   399  00579D  0000               	dw	0
   400  00579F  0000               	dw	0
   401  0057A1  0000               	dw	0
   402  0057A3  0000               	dw	0
   403  0057A5  00                 	db	0
   404  0057A6  00                 	db	0
   405  0057A7  00                 	db	0
   406  0057A8  00                 	db	0
   407  0057A9  00                 	db	0
   408  0057AA  01                 	db	1
   409  0057AB  2D                 	db	45
   410                           
   411                           	psect	idataBANK1
   412  004E26                     __pidataBANK1:
   413                           	opt callstack 0
   414                           
   415                           ;initializer for stoa@F1144
   416  004E26  28                 	db	40
   417  004E27  6E                 	db	110
   418  004E28  75                 	db	117
   419  004E29  6C                 	db	108
   420  004E2A  6C                 	db	108
   421  004E2B  29                 	db	41
   422  004E2C  00                 	db	0
   423                           
   424                           ;initializer for _H10
   425  004E2D  0000               	dw	0
   426  004E2F  0001               	dw	1
   427  004E31  0000               	dw	0
   428  004E33  01                 	db	1
   429  004E34  80                 	db	128
   430  004E35  01                 	db	1
   431  004E36  81                 	db	129
   432  004E37  00                 	db	0
   433  004E38  00                 	db	0
   434  004E39  0A                 	db	10
   435  004E3A  0000               	dw	0
   436  004E3C  00                 	db	0
   437  004E3D  00                 	db	0
   438  004E3E  00                 	db	0
   439  004E3F  00                 	db	0
   440  004E40  00                 	db	0
   441  004E41  00                 	db	0
   442  004E42  00                 	db	0
   443  004E43  00                 	db	0
   444  004E44  00                 	db	0
   445  004E45  00                 	db	0
   446  004E46  0A                 	db	10
   447  004E47  0000               	dw	0
   448  004E49  0001               	dw	1
   449  004E4B  0000               	dw	0
   450  004E4D  01                 	db	1
   451  004E4E  80                 	db	128
   452  004E4F  00                 	db	0
   453  004E50  01                 	db	1
   454  004E51  00                 	db	0
   455  004E52  00                 	db	0
   456  004E53  0A                 	db	10
   457  004E54  0000               	dw	0
   458  004E56  0001               	dw	1
   459  004E58  0000               	dw	0
   460  004E5A  01                 	db	1
   461  004E5B  80                 	db	128
   462  004E5C  01                 	db	1
   463  004E5D  81                 	db	129
   464  004E5E  00                 	db	0
   465  004E5F  80                 	db	128
   466  004E60  0A                 	db	10
   467  004E61  0000               	dw	0
   468  004E63  0001               	dw	1
   469  004E65  0000               	dw	0
   470  004E67  01                 	db	1
   471  004E68  80                 	db	128
   472  004E69  11                 	db	17
   473  004E6A  82                 	db	130
   474  004E6B  00                 	db	0
   475  004E6C  00                 	db	0
   476  004E6D  0A                 	db	10
   477  004E6E  0000               	dw	0
   478  004E70  0001               	dw	1
   479  004E72  0000               	dw	0
   480  004E74  01                 	db	1
   481  004E75  80                 	db	128
   482  004E76  0F                 	db	15
   483  004E77  81                 	db	129
   484  004E78  00                 	db	0
   485  004E79  00                 	db	0
   486  004E7A  0A                 	db	10
   487  004E7B  0000               	dw	0
   488  004E7D  0001               	dw	1
   489  004E7F  0000               	dw	0
   490  004E81  01                 	db	1
   491  004E82  80                 	db	128
   492  004E83  11                 	db	17
   493  004E84  81                 	db	129
   494  004E85  00                 	db	0
   495  004E86  00                 	db	0
   496  004E87  0A                 	db	10
   497                           
   498                           ;initializer for _H12
   499  004E88  0000               	dw	0
   500  004E8A  00                 	db	0
   501  004E8B  01                 	db	1
   502  004E8C  0001               	dw	1
   503  004E8E  0000               	dw	0
   504  004E90  01                 	db	1
   505  004E91  80                 	db	128
   506  004E92  02                 	db	2
   507  004E93  01                 	db	1
   508  004E94  00                 	db	0
   509  004E95  00                 	db	0
   510  004E96  0C                 	db	12
   511  004E97  0000               	dw	0
   512  004E99  00                 	db	0
   513  004E9A  01                 	db	1
   514  004E9B  0001               	dw	1
   515  004E9D  0000               	dw	0
   516  004E9F  01                 	db	1
   517  004EA0  80                 	db	128
   518  004EA1  0D                 	db	13
   519  004EA2  81                 	db	129
   520  004EA3  00                 	db	0
   521  004EA4  00                 	db	0
   522  004EA5  0C                 	db	12
   523                           
   524                           ;initializer for _H24
   525  004EA6  0000               	dw	0
   526  004EA8  41                 	db	65
   527  004EA9  20                 	db	32
   528  004EAA  30                 	db	48
   529  004EAB  31                 	db	49
   530  004EAC  30                 	db	48
   531  004EAD  39                 	db	57
   532  004EAE  31                 	db	49
   533  004EAF  31                 	db	49
   534  004EB0  30                 	db	48
   535  004EB1  38                 	db	56
   536  004EB2  34                 	db	52
   537  004EB3  36                 	db	54
   538  004EB4  30                 	db	48
   539  004EB5  30                 	db	48
   540  004EB6  0001               	dw	1
   541  004EB8  0000               	dw	0
   542  004EBA  01                 	db	1
   543  004EBB  80                 	db	128
   544  004EBC  12                 	db	18
   545  004EBD  02                 	db	2
   546  004EBE  00                 	db	0
   547  004EBF  00                 	db	0
   548  004EC0  18                 	db	24
   549                           
   550                           ;initializer for _H17
   551  004EC1  0000               	dw	0
   552  004EC3  00                 	db	0
   553  004EC4  01                 	db	1
   554  004EC5  00                 	db	0
   555  004EC6  01                 	db	1
   556  004EC7  21                 	db	33
   557  004EC8  02                 	db	2
   558  004EC9  01                 	db	1
   559  004ECA  0001               	dw	1
   560  004ECC  0000               	dw	0
   561  004ECE  01                 	db	1
   562  004ECF  80                 	db	128
   563  004ED0  0E                 	db	14
   564  004ED1  01                 	db	1
   565  004ED2  00                 	db	0
   566  004ED3  00                 	db	0
   567  004ED4  11                 	db	17
   568                           
   569                           ;initializer for _H14
   570  004ED5  0000               	dw	0
   571  004ED7  00                 	db	0
   572  004ED8  41                 	db	65
   573  004ED9  11                 	db	17
   574  004EDA  01                 	db	1
   575  004EDB  0001               	dw	1
   576  004EDD  0000               	dw	0
   577  004EDF  01                 	db	1
   578  004EE0  80                 	db	128
   579  004EE1  04                 	db	4
   580  004EE2  01                 	db	1
   581  004EE3  00                 	db	0
   582  004EE4  00                 	db	0
   583  004EE5  0E                 	db	14
   584                           
   585                           ;initializer for _H13
   586  004EE6  0000               	dw	0
   587  004EE8  00                 	db	0
   588  004EE9  01                 	db	1
   589  004EEA  21                 	db	33
   590  004EEB  0001               	dw	1
   591  004EED  0000               	dw	0
   592  004EEF  01                 	db	1
   593  004EF0  80                 	db	128
   594  004EF1  0C                 	db	12
   595  004EF2  06                 	db	6
   596  004EF3  00                 	db	0
   597  004EF4  00                 	db	0
   598  004EF5  0D                 	db	13
   599                           
   600                           	psect	idataBANK3
   601  005C84                     __pidataBANK3:
   602                           	opt callstack 0
   603                           
   604                           ;initializer for _H53
   605  005C84  0000               	dw	0
   606  005C86  00                 	db	0
   607  005C87  00                 	db	0
   608  005C88  00                 	db	0
   609  005C89  00                 	db	0
   610  005C8A  00                 	db	0
   611  005C8B  00                 	db	0
   612  005C8C  00                 	db	0
   613  005C8D  00                 	db	0
   614  005C8E  00                 	db	0
   615  005C8F  00                 	db	0
   616  005C90  00                 	db	0
   617  005C91  00                 	db	0
   618  005C92  00                 	db	0
   619  005C93  00                 	db	0
   620  005C94  00                 	db	0
   621  005C95  00                 	db	0
   622  005C96  00                 	db	0
   623  005C97  00                 	db	0
   624  005C98  00                 	db	0
   625  005C99  00                 	db	0
   626  005C9A  00                 	db	0
   627  005C9B  00                 	db	0
   628  005C9C  00                 	db	0
   629  005C9D  00                 	db	0
   630  005C9E  00                 	db	0
   631  005C9F  00                 	db	0
   632  005CA0  00                 	db	0
   633  005CA1  00                 	db	0
   634  005CA2  00                 	db	0
   635  005CA3  00                 	db	0
   636  005CA4  00                 	db	0
   637  005CA5  00                 	db	0
   638  005CA6  00                 	db	0
   639  005CA7  00                 	db	0
   640  005CA8  00                 	db	0
   641  005CA9  00                 	db	0
   642  005CAA  00                 	db	0
   643  005CAB  00                 	db	0
   644  005CAC  00                 	db	0
   645  005CAD  46                 	db	70
   646  005CAE  01                 	db	1
   647  005CAF  41                 	db	65
   648  005CB0  00                 	db	0
   649  005CB1  0001               	dw	1
   650  005CB3  0000               	dw	0
   651  005CB5  01                 	db	1
   652  005CB6  80                 	db	128
   653  005CB7  03                 	db	3
   654  005CB8  8A                 	db	138
   655  005CB9  00                 	db	0
   656  005CBA  00                 	db	0
   657  005CBB  35                 	db	53
   658  0000                     _IVTADL	set	14493
   659  0000                     _IVTADH	set	14494
   660  0000                     _IVTADU	set	14495
   661  0000                     _PIE8bits	set	14744
   662  0000                     _PIR8bits	set	14760
   663  0000                     _SCANPR	set	14839
   664  0000                     _DMA2PR	set	14836
   665  0000                     _DMA1PR	set	14835
   666  0000                     _MAINPR	set	14834
   667  0000                     _ISRPR	set	14833
   668  0000                     _PIE2bits	set	14738
   669  0000                     _PIR2bits	set	14754
   670  0000                     _PIE9bits	set	14745
   671  0000                     _PIR9bits	set	14761
   672  0000                     _PIE6bits	set	14742
   673  0000                     _PIE3bits	set	14739
   674  0000                     _PMD7	set	14791
   675  0000                     _PMD6	set	14790
   676  0000                     _PMD5	set	14789
   677  0000                     _PMD4	set	14788
   678  0000                     _PMD3	set	14787
   679  0000                     _PMD2	set	14786
   680  0000                     _PMD1	set	14785
   681  0000                     _PMD0	set	14784
   682  0000                     _OSCTUNE	set	14814
   683  0000                     _OSCFRQ	set	14815
   684  0000                     _OSCEN	set	14813
   685  0000                     _OSCCON3	set	14811
   686  0000                     _OSCCON1	set	14809
   687  0000                     _IPR8bits	set	14728
   688  0000                     _IPR9bits	set	14729
   689  0000                     _IPR7bits	set	14727
   690  0000                     _IPR5bits	set	14725
   691  0000                     _IPR1bits	set	14721
   692  0000                     _IPR3bits	set	14723
   693  0000                     _IPR6bits	set	14726
   694  0000                     _IPR2bits	set	14722
   695  0000                     _PIE7bits	set	14743
   696  0000                     _PIE5bits	set	14741
   697  0000                     _PIE1bits	set	14737
   698  0000                     _PIR7bits	set	14759
   699  0000                     _PIR5bits	set	14757
   700  0000                     _PIR1bits	set	14753
   701  0000                     _PLLR	set	118496
   702  0000                     _SPI1SDIPPS	set	15071
   703  0000                     _RC6PPS	set	14870
   704  0000                     _RC5PPS	set	14869
   705  0000                     _RA6PPS	set	14854
   706  0000                     _RA5PPS	set	14853
   707  0000                     _RA4PPS	set	14852
   708  0000                     _SPI1SCKPPS	set	15070
   709  0000                     _U1RXPPS	set	15077
   710  0000                     _INT1PPS	set	15041
   711  0000                     _INT2PPS	set	15042
   712  0000                     _INT0PPS	set	15040
   713  0000                     _RC3PPS	set	14867
   714  0000                     _RB6PPS	set	14862
   715  0000                     _U2RXPPS	set	15080
   716  0000                     _SLRCONF	set	14995
   717  0000                     _SLRCONE	set	14979
   718  0000                     _SLRCOND	set	14963
   719  0000                     _SLRCONC	set	14947
   720  0000                     _SLRCONB	set	14931
   721  0000                     _SLRCONA	set	14915
   722  0000                     _ODCOND	set	14962
   723  0000                     _ODCONC	set	14946
   724  0000                     _ODCONB	set	14930
   725  0000                     _ODCONA	set	14914
   726  0000                     _ODCONF	set	14994
   727  0000                     _ODCONE	set	14978
   728  0000                     _WPUC	set	14945
   729  0000                     _WPUA	set	14913
   730  0000                     _WPUB	set	14929
   731  0000                     _WPUE	set	14977
   732  0000                     _WPUF	set	14993
   733  0000                     _WPUD	set	14961
   734  0000                     _ANSELA	set	14912
   735  0000                     _ANSELF	set	14992
   736  0000                     _ANSELE	set	14976
   737  0000                     _ANSELB	set	14928
   738  0000                     _ANSELC	set	14944
   739  0000                     _ANSELD	set	14960
   740  0000                     _DMA1SSA	set	15353
   741  0000                     _DMA1DSZ	set	15342
   742  0000                     _DMA1SSZ	set	15351
   743  0000                     _DMA1DSA	set	15344
   744  0000                     _DMA1CON0bits	set	15356
   745  0000                     _DMA1CON1bits	set	15357
   746  0000                     _DMA1CON0	set	15356
   747  0000                     _DMA1AIRQ	set	15358
   748  0000                     _DMA1SIRQ	set	15359
   749  0000                     _DMA1CON1	set	15357
   750  0000                     _CLC1CON	set	15476
   751  0000                     _CLC1GLS3	set	15485
   752  0000                     _CLC1GLS2	set	15484
   753  0000                     _CLC1GLS1	set	15483
   754  0000                     _CLC1GLS0	set	15482
   755  0000                     _CLC1SEL3	set	15481
   756  0000                     _CLC1SEL2	set	15480
   757  0000                     _CLC1SEL1	set	15479
   758  0000                     _CLC1SEL0	set	15478
   759  0000                     _CLC1POL	set	15477
   760  0000                     _CLKRCON	set	15589
   761  0000                     _CLKRCLK	set	15590
   762  0000                     _MD1CARL	set	15613
   763  0000                     _MD1CARH	set	15614
   764  0000                     _MD1SRC	set	15612
   765  0000                     _MD1CON1bits	set	15611
   766  0000                     _MD1CON0bits	set	15610
   767  0000                     _SPI1INTFbits	set	15642
   768  0000                     _SPI1RXB	set	15632
   769  0000                     _SPI1TXB	set	15633
   770  0000                     _SPI1TCNTL	set	15634
   771  0000                     _SPI1CON0	set	15636
   772  0000                     _SPI1CLK	set	15644
   773  0000                     _SPI1BAUD	set	15641
   774  0000                     _SPI1CON2	set	15638
   775  0000                     _SPI1CON1	set	15637
   776  0000                     _U2RXB	set	15824
   777  0000                     _U2TXB	set	15826
   778  0000                     _U2ERRIE	set	15842
   779  0000                     _U2ERRIR	set	15841
   780  0000                     _U2UIR	set	15840
   781  0000                     _U2FIFO	set	15839
   782  0000                     _U2BRGH	set	15838
   783  0000                     _U2BRGL	set	15837
   784  0000                     _U2CON2	set	15836
   785  0000                     _U2CON1	set	15835
   786  0000                     _U2CON0	set	15834
   787  0000                     _U2P3L	set	15832
   788  0000                     _U2P2L	set	15830
   789  0000                     _U2P1L	set	15828
   790  0000                     _U1RXB	set	15848
   791  0000                     _U1TXB	set	15850
   792  0000                     _U1ERRIE	set	15866
   793  0000                     _U1ERRIR	set	15865
   794  0000                     _U1UIR	set	15864
   795  0000                     _U1FIFO	set	15863
   796  0000                     _U1BRGH	set	15862
   797  0000                     _U1BRGL	set	15861
   798  0000                     _U1CON2	set	15860
   799  0000                     _U1CON1	set	15859
   800  0000                     _U1CON0	set	15858
   801  0000                     _U1P3H	set	15857
   802  0000                     _U1P3L	set	15856
   803  0000                     _U1P2H	set	15855
   804  0000                     _U1P2L	set	15854
   805  0000                     _U1P1H	set	15853
   806  0000                     _U1P1L	set	15852
   807  0000                     _ADCON0	set	16120
   808  0000                     _ADCLK	set	16127
   809  0000                     _ADACT	set	16126
   810  0000                     _ADREF	set	16125
   811  0000                     _ADSTAT	set	16124
   812  0000                     _ADCON3	set	16123
   813  0000                     _ADCON2	set	16122
   814  0000                     _ADCON1	set	16121
   815  0000                     _ADPREH	set	16119
   816  0000                     _ADPREL	set	16118
   817  0000                     _ADCAP	set	16117
   818  0000                     _ADACQH	set	16116
   819  0000                     _ADACQL	set	16115
   820  0000                     _ADPCH	set	16113
   821  0000                     _ADRPT	set	16108
   822  0000                     _ADACCU	set	16106
   823  0000                     _ADSTPTH	set	16101
   824  0000                     _ADSTPTL	set	16100
   825  0000                     _ADUTHH	set	16097
   826  0000                     _ADUTHL	set	16096
   827  0000                     _ADLTHH	set	16095
   828  0000                     _ADLTHL	set	16094
   829  0000                     _NCO1CONbits	set	16190
   830  0000                     _NCO1INCL	set	16187
   831  0000                     _NCO1INCH	set	16188
   832  0000                     _NCO1INCU	set	16189
   833  0000                     _NCO1ACCL	set	16184
   834  0000                     _NCO1ACCH	set	16185
   835  0000                     _NCO1ACCU	set	16186
   836  0000                     _NCO1CLK	set	16191
   837  0000                     _NCO1CON	set	16190
   838  0000                     _LATCbits	set	16316
   839  0000                     _LATDbits	set	16317
   840  0000                     _PORTBbits	set	16331
   841  0000                     _T5CONbits	set	16282
   842  0000                     _T5CON	set	16282
   843  0000                     _TMR5L	set	16280
   844  0000                     _TMR5H	set	16281
   845  0000                     _T5CLK	set	16285
   846  0000                     _T5GATE	set	16284
   847  0000                     _T5GCON	set	16283
   848  0000                     _LATEbits	set	16318
   849  0000                     _T6CON	set	16276
   850  0000                     _T6TMR	set	16274
   851  0000                     _T6PR	set	16275
   852  0000                     _T6RST	set	16279
   853  0000                     _T6HLT	set	16277
   854  0000                     _T6CLKCON	set	16278
   855  0000                     _TRISD	set	16325
   856  0000                     _TRISC	set	16324
   857  0000                     _TRISB	set	16323
   858  0000                     _TRISA	set	16322
   859  0000                     _TRISF	set	16327
   860  0000                     _TRISE	set	16326
   861  0000                     _LATC	set	16316
   862  0000                     _LATB	set	16315
   863  0000                     _LATF	set	16319
   864  0000                     _LATA	set	16314
   865  0000                     _LATD	set	16317
   866  0000                     _LATE	set	16318
   867  0000                     _IVTLOCKbits	set	16340
   868  0000                     _IVTLOCK	set	16340
   869  0000                     _INTCON0bits	set	16338
   870  0000                     _GIE	set	130711
   871                           
   872                           	psect	smallconst
   873  002000                     __psmallconst:
   874                           	opt callstack 0
   875  002000  00                 	db	0
   876  002001                     STR_11:
   877  002001  4C                 	db	76	;'L'
   878  002002  4F                 	db	79	;'O'
   879  002003  47                 	db	71	;'G'
   880  002004  3A                 	db	58	;':'
   881  002005  20                 	db	32
   882  002006  55                 	db	85	;'U'
   883  002007  25                 	db	37
   884  002008  64                 	db	100	;'d'
   885  002009  20                 	db	32
   886  00200A  47                 	db	71	;'G'
   887  00200B  25                 	db	37
   888  00200C  64                 	db	100	;'d'
   889  00200D  20                 	db	32
   890  00200E  25                 	db	37
   891  00200F  64                 	db	100	;'d'
   892  002010  20                 	db	32
   893  002011  25                 	db	37
   894  002012  64                 	db	100	;'d'
   895  002013  20                 	db	32
   896  002014  20                 	db	32
   897  002015  20                 	db	32
   898  002016  20                 	db	32
   899  002017  20                 	db	32
   900  002018  20                 	db	32
   901  002019  23                 	db	35
   902  00201A  00                 	db	0
   903  00201B                     STR_15:
   904  00201B  52                 	db	82	;'R'
   905  00201C  25                 	db	37
   906  00201D  64                 	db	100	;'d'
   907  00201E  20                 	db	32
   908  00201F  25                 	db	37
   909  002020  64                 	db	100	;'d'
   910  002021  2C                 	db	44
   911  002022  20                 	db	32
   912  002023  54                 	db	84	;'T'
   913  002024  25                 	db	37
   914  002025  64                 	db	100	;'d'
   915  002026  20                 	db	32
   916  002027  25                 	db	37
   917  002028  64                 	db	100	;'d'
   918  002029  20                 	db	32
   919  00202A  43                 	db	67	;'C'
   920  00202B  25                 	db	37
   921  00202C  64                 	db	100	;'d'
   922  00202D  20                 	db	32
   923  00202E  20                 	db	32
   924  00202F  20                 	db	32
   925  002030  20                 	db	32
   926  002031  20                 	db	32
   927  002032  20                 	db	32
   928  002033  23                 	db	35
   929  002034  00                 	db	0
   930  002035                     STR_5:
   931  002035  48                 	db	72	;'H'
   932  002036  4F                 	db	79	;'O'
   933  002037  53                 	db	83	;'S'
   934  002038  54                 	db	84	;'T'
   935  002039  3A                 	db	58	;':'
   936  00203A  20                 	db	32
   937  00203B  25                 	db	37
   938  00203C  6C                 	db	108	;'l'
   939  00203D  64                 	db	100	;'d'
   940  00203E  20                 	db	32
   941  00203F  47                 	db	71	;'G'
   942  002040  25                 	db	37
   943  002041  64                 	db	100	;'d'
   944  002042  20                 	db	32
   945  002043  20                 	db	32
   946  002044  20                 	db	32
   947  002045  20                 	db	32
   948  002046  20                 	db	32
   949  002047  20                 	db	32
   950  002048  23                 	db	35
   951  002049  00                 	db	0
   952  00204A                     STR_12:
   953  00204A  20                 	db	32
   954  00204B  53                 	db	83	;'S'
   955  00204C  25                 	db	37
   956  00204D  64                 	db	100	;'d'
   957  00204E  46                 	db	70	;'F'
   958  00204F  25                 	db	37
   959  002050  64                 	db	100	;'d'
   960  002051  20                 	db	32
   961  002052  23                 	db	35
   962  002053  25                 	db	37
   963  002054  6C                 	db	108	;'l'
   964  002055  64                 	db	100	;'d'
   965  002056  20                 	db	32
   966  002057  20                 	db	32
   967  002058  20                 	db	32
   968  002059  20                 	db	32
   969  00205A  20                 	db	32
   970  00205B  20                 	db	32
   971  00205C  00                 	db	0
   972  00205D                     STR_9:
   973  00205D  45                 	db	69	;'E'
   974  00205E  25                 	db	37
   975  00205F  64                 	db	100	;'d'
   976  002060  20                 	db	32
   977  002061  41                 	db	65	;'A'
   978  002062  25                 	db	37
   979  002063  64                 	db	100	;'d'
   980  002064  20                 	db	32
   981  002065  54                 	db	84	;'T'
   982  002066  25                 	db	37
   983  002067  64                 	db	100	;'d'
   984  002068  20                 	db	32
   985  002069  43                 	db	67	;'C'
   986  00206A  25                 	db	37
   987  00206B  64                 	db	100	;'d'
   988  00206C  20                 	db	32
   989  00206D  23                 	db	35
   990  00206E  00                 	db	0
   991  00206F                     STR_1:
   992  00206F  20                 	db	32
   993  002070  52                 	db	82	;'R'
   994  002071  56                 	db	86	;'V'
   995  002072  49                 	db	73	;'I'
   996  002073  20                 	db	32
   997  002074  48                 	db	72	;'H'
   998  002075  4F                 	db	79	;'O'
   999  002076  53                 	db	83	;'S'
  1000  002077  54                 	db	84	;'T'
  1001  002078  20                 	db	32
  1002  002079  54                 	db	84	;'T'
  1003  00207A  45                 	db	69	;'E'
  1004  00207B  53                 	db	83	;'S'
  1005  00207C  54                 	db	84	;'T'
  1006  00207D  45                 	db	69	;'E'
  1007  00207E  52                 	db	82	;'R'
  1008  00207F  00                 	db	0
  1009  002080                     STR_4:
  1010  002080  20                 	db	32
  1011  002081  46                 	db	70	;'F'
  1012  002082  47                 	db	71	;'G'
  1013  002083  42                 	db	66	;'B'
  1014  002084  40                 	db	64	;'@'
  1015  002085  4D                 	db	77	;'M'
  1016  002086  43                 	db	67	;'C'
  1017  002087  48                 	db	72	;'H'
  1018  002088  50                 	db	80	;'P'
  1019  002089  20                 	db	32
  1020  00208A  46                 	db	70	;'F'
  1021  00208B  41                 	db	65	;'A'
  1022  00208C  42                 	db	66	;'B'
  1023  00208D  34                 	db	52	;'4'
  1024  00208E  00                 	db	0
  1025  00208F                     STR_6:
  1026  00208F  20                 	db	32
  1027  002090  53                 	db	83	;'S'
  1028  002091  25                 	db	37
  1029  002092  64                 	db	100	;'d'
  1030  002093  46                 	db	70	;'F'
  1031  002094  25                 	db	37
  1032  002095  64                 	db	100	;'d'
  1033  002096  20                 	db	32
  1034  002097  23                 	db	35
  1035  002098  20                 	db	32
  1036  002099  20                 	db	32
  1037  00209A  20                 	db	32
  1038  00209B  20                 	db	32
  1039  00209C  00                 	db	0
  1040  00209D                     STR_2:
  1041  00209D  20                 	db	32
  1042  00209E  56                 	db	86	;'V'
  1043  00209F  65                 	db	101	;'e'
  1044  0020A0  72                 	db	114	;'r'
  1045  0020A1  73                 	db	115	;'s'
  1046  0020A2  69                 	db	105	;'i'
  1047  0020A3  6F                 	db	111	;'o'
  1048  0020A4  6E                 	db	110	;'n'
  1049  0020A5  20                 	db	32
  1050  0020A6  25                 	db	37
  1051  0020A7  73                 	db	115	;'s'
  1052  0020A8  00                 	db	0
  1053  0020A9                     STR_8:
  1054  0020A9  20                 	db	32
  1055  0020AA  4F                 	db	79	;'O'
  1056  0020AB  4B                 	db	75	;'K'
  1057  0020AC  20                 	db	32
  1058  0020AD  23                 	db	35
  1059  0020AE  00                 	db	0
  1060  0020AF                     STR_7:
  1061  0020AF  20                 	db	32
  1062  0020B0  4F                 	db	79	;'O'
  1063  0020B1  4B                 	db	75	;'K'
  1064  0020B2  51                 	db	81	;'Q'
  1065  0020B3  23                 	db	35
  1066  0020B4  00                 	db	0
  1067  0020B5                     STR_3:
  1068  0020B5  30                 	db	48	;'0'
  1069  0020B6  2E                 	db	46
  1070  0020B7  38                 	db	56	;'8'
  1071  0020B8  35                 	db	53	;'5'
  1072  0020B9  42                 	db	66	;'B'
  1073  0020BA  00                 	db	0
  1074  0020BB                     STR_19:
  1075  0020BB  6C                 	db	108	;'l'
  1076  0020BC  64                 	db	100	;'d'
  1077  0020BD  00                 	db	0
  1078  0020BE                     STR_23:
  1079  0020BE  6C                 	db	108	;'l'
  1080  0020BF  69                 	db	105	;'i'
  1081  0020C0  00                 	db	0
  1082  0020C1                     STR_17:
  1083  0020C1  25                 	db	37
  1084  0020C2  63                 	db	99	;'c'
  1085  0020C3  00                 	db	0
  1086  0000                     
  1087                           ; #config settings
  1088  0020C4  00                 	db	0	; dummy byte at the end
  1089  0000                     
  1090                           	psect	cinit
  1091  004EF6                     __pcinit:
  1092                           	opt callstack 0
  1093  004EF6                     start_initialization:
  1094                           	opt callstack 0
  1095  004EF6                     __initialization:
  1096                           	opt callstack 0
  1097                           
  1098                           ; Initialize objects allocated to BANK3 (56 bytes)
  1099                           ; load TBLPTR registers with __pidataBANK3
  1100  004EF6  0E84               	movlw	low __pidataBANK3
  1101  004EF8  6EF6               	movwf	tblptrl,c
  1102  004EFA  0E5C               	movlw	high __pidataBANK3
  1103  004EFC  6EF7               	movwf	tblptrh,c
  1104  004EFE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1105  004F00  6EF8               	movwf	tblptru,c
  1106  004F02  EE00  F386         	lfsr	0,__pdataBANK3
  1107  004F06  EE20 F038          	lfsr	2,56
  1108  004F0A                     copy_data0:
  1109  004F0A  0009               	tblrd		*+
  1110  004F0C  006F FFD7 FFEE     	movff	tablat,postinc0
  1111  004F12  50DD               	movf	postdec2,w,c
  1112  004F14  50D9               	movf	fsr2l,w,c
  1113  004F16  E1F9               	bnz	copy_data0
  1114                           
  1115                           ; Initialize objects allocated to BANK1 (208 bytes)
  1116                           ; load TBLPTR registers with __pidataBANK1
  1117  004F18  0E26               	movlw	low __pidataBANK1
  1118  004F1A  6EF6               	movwf	tblptrl,c
  1119  004F1C  0E4E               	movlw	high __pidataBANK1
  1120  004F1E  6EF7               	movwf	tblptrh,c
  1121  004F20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1122  004F22  6EF8               	movwf	tblptru,c
  1123  004F24  EE00  F100         	lfsr	0,__pdataBANK1
  1124  004F28  EE20 F0D0          	lfsr	2,208
  1125  004F2C                     copy_data1:
  1126  004F2C  0009               	tblrd		*+
  1127  004F2E  006F FFD7 FFEE     	movff	tablat,postinc0
  1128  004F34  50DD               	movf	postdec2,w,c
  1129  004F36  50D9               	movf	fsr2l,w,c
  1130  004F38  E1F9               	bnz	copy_data1
  1131                           
  1132                           ; Initialize objects allocated to BANK0 (98 bytes)
  1133                           ; load TBLPTR registers with __pidataBANK0
  1134  004F3A  0E4A               	movlw	low __pidataBANK0
  1135  004F3C  6EF6               	movwf	tblptrl,c
  1136  004F3E  0E57               	movlw	high __pidataBANK0
  1137  004F40  6EF7               	movwf	tblptrh,c
  1138  004F42  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1139  004F44  6EF8               	movwf	tblptru,c
  1140  004F46  EE00  F060         	lfsr	0,__pdataBANK0
  1141  004F4A  EE20 F062          	lfsr	2,98
  1142  004F4E                     copy_data2:
  1143  004F4E  0009               	tblrd		*+
  1144  004F50  006F FFD7 FFEE     	movff	tablat,postinc0
  1145  004F56  50DD               	movf	postdec2,w,c
  1146  004F58  50D9               	movf	fsr2l,w,c
  1147  004F5A  E1F9               	bnz	copy_data2
  1148                           
  1149                           ; Initialize objects allocated to COMRAM (1 bytes)
  1150                           ; load TBLPTR registers with __pidataCOMRAM
  1151  004F5C  0E12               	movlw	low __pidataCOMRAM
  1152  004F5E  6EF6               	movwf	tblptrl,c
  1153  004F60  0E64               	movlw	high __pidataCOMRAM
  1154  004F62  6EF7               	movwf	tblptrh,c
  1155  004F64  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1156  004F66  6EF8               	movwf	tblptru,c
  1157  004F68  0009               	tblrd		*+	;fetch initializer
  1158  004F6A  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1159                           
  1160                           ; Clear objects allocated to BANK3 (134 bytes)
  1161  004F70  EE00  F300         	lfsr	0,__pbssBANK3
  1162  004F74  0E86               	movlw	134
  1163  004F76                     clear_0:
  1164  004F76  6AEE               	clrf	postinc0,c
  1165  004F78  06E8               	decf	wreg,f,c
  1166  004F7A  E1FD               	bnz	clear_0
  1167                           
  1168                           ; Clear objects allocated to BANK2 (256 bytes)
  1169  004F7C  EE00  F200         	lfsr	0,__pbssBANK2
  1170  004F80  EE20 F100          	lfsr	2,256
  1171  004F84                     clear_1:
  1172  004F84  6AEE               	clrf	postinc0,c
  1173  004F86  50DD               	movf	postdec2,w,c
  1174  004F88  50D9               	movf	fsr2l,w,c
  1175  004F8A  E1FC               	bnz	clear_1
  1176  004F8C  50DA               	movf	fsr2h,w,c
  1177  004F8E  E1FA               	bnz	clear_1
  1178                           
  1179                           ; Clear objects allocated to BANK1 (40 bytes)
  1180  004F90  EE00  F1D0         	lfsr	0,__pbssBANK1
  1181  004F94  0E28               	movlw	40
  1182  004F96                     clear_2:
  1183  004F96  6AEE               	clrf	postinc0,c
  1184  004F98  06E8               	decf	wreg,f,c
  1185  004F9A  E1FD               	bnz	clear_2
  1186                           
  1187                           ; Clear objects allocated to BANK0 (61 bytes)
  1188  004F9C  EE00  F0C2         	lfsr	0,__pbssBANK0
  1189  004FA0  0E3D               	movlw	61
  1190  004FA2                     clear_3:
  1191  004FA2  6AEE               	clrf	postinc0,c
  1192  004FA4  06E8               	decf	wreg,f,c
  1193  004FA6  E1FD               	bnz	clear_3
  1194                           
  1195                           ; Clear objects allocated to COMRAM (56 bytes)
  1196  004FA8  EE00  F001         	lfsr	0,__pbssCOMRAM
  1197  004FAC  0E38               	movlw	56
  1198  004FAE                     clear_4:
  1199  004FAE  6AEE               	clrf	postinc0,c
  1200  004FB0  06E8               	decf	wreg,f,c
  1201  004FB2  E1FD               	bnz	clear_4
  1202                           
  1203                           ;
  1204                           ; Setup IVTBASE
  1205                           ;
  1206  004FB4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1207  004FB6  6ED5               	movwf	213,c
  1208  004FB8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1209  004FBA  6ED6               	movwf	214,c
  1210  004FBC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1211  004FBE  6ED7               	movwf	215,c
  1212  004FC0                     end_of_initialization:
  1213                           	opt callstack 0
  1214  004FC0                     __end_of__initialization:
  1215                           	opt callstack 0
  1216  004FC0  0100               	movlb	0
  1217  004FC2  EF63  F010         	goto	_main	;jump to C main() function
  1218                           
  1219                           	psect	bssCOMRAM
  1220  000001                     __pbssCOMRAM:
  1221                           	opt callstack 0
  1222  000001                     secs_II_message@block:
  1223                           	opt callstack 0
  1224  000001                     	ds	7
  1225  000008                     _UART1_TxInterruptHandler:
  1226                           	opt callstack 0
  1227  000008                     	ds	3
  1228  00000B                     _UART1_RxInterruptHandler:
  1229                           	opt callstack 0
  1230  00000B                     	ds	3
  1231  00000E                     _UART2_TxInterruptHandler:
  1232                           	opt callstack 0
  1233  00000E                     	ds	3
  1234  000011                     _UART2_RxInterruptHandler:
  1235                           	opt callstack 0
  1236  000011                     	ds	3
  1237  000014                     _INT2_InterruptHandler:
  1238                           	opt callstack 0
  1239  000014                     	ds	3
  1240  000017                     _INT1_InterruptHandler:
  1241                           	opt callstack 0
  1242  000017                     	ds	3
  1243  00001A                     _INT0_InterruptHandler:
  1244                           	opt callstack 0
  1245  00001A                     	ds	3
  1246  00001D                     _width:
  1247                           	opt callstack 0
  1248  00001D                     	ds	2
  1249  00001F                     _prec:
  1250                           	opt callstack 0
  1251  00001F                     	ds	2
  1252  000021                     _flags:
  1253                           	opt callstack 0
  1254  000021                     	ds	2
  1255  000023                     TMR5_ISR@CountCallBack:
  1256                           	opt callstack 0
  1257  000023                     	ds	2
  1258  000025                     _timer5ReloadVal:
  1259                           	opt callstack 0
  1260  000025                     	ds	2
  1261  000027                     secs_gem_state@block:
  1262                           	opt callstack 0
  1263  000027                     	ds	1
  1264  000028                     t_protocol@requeue:
  1265                           	opt callstack 0
  1266  000028                     	ds	1
  1267  000029                     t_protocol@retry:
  1268                           	opt callstack 0
  1269  000029                     	ds	1
  1270  00002A                     r_protocol@rxData_l:
  1271                           	opt callstack 0
  1272  00002A                     	ds	1
  1273  00002B                     m_protocol@rxData_l:
  1274                           	opt callstack 0
  1275  00002B                     	ds	1
  1276  00002C                     _mode_sw:
  1277                           	opt callstack 0
  1278  00002C                     	ds	1
  1279  00002D                     _uart2RxCount:
  1280                           	opt callstack 0
  1281  00002D                     	ds	1
  1282  00002E                     _uart2RxTail:
  1283                           	opt callstack 0
  1284  00002E                     	ds	1
  1285  00002F                     _uart2RxHead:
  1286                           	opt callstack 0
  1287  00002F                     	ds	1
  1288  000030                     _uart2TxBufferRemaining:
  1289                           	opt callstack 0
  1290  000030                     	ds	1
  1291  000031                     _uart2TxTail:
  1292                           	opt callstack 0
  1293  000031                     	ds	1
  1294  000032                     _uart2TxHead:
  1295                           	opt callstack 0
  1296  000032                     	ds	1
  1297  000033                     _uart1RxCount:
  1298                           	opt callstack 0
  1299  000033                     	ds	1
  1300  000034                     _uart1RxTail:
  1301                           	opt callstack 0
  1302  000034                     	ds	1
  1303  000035                     _uart1RxHead:
  1304                           	opt callstack 0
  1305  000035                     	ds	1
  1306  000036                     _uart1TxBufferRemaining:
  1307                           	opt callstack 0
  1308  000036                     	ds	1
  1309  000037                     _uart1TxTail:
  1310                           	opt callstack 0
  1311  000037                     	ds	1
  1312  000038                     _uart1TxHead:
  1313                           	opt callstack 0
  1314  000038                     	ds	1
  1315                           
  1316                           	psect	dataCOMRAM
  1317  00005D                     __pdataCOMRAM:
  1318                           	opt callstack 0
  1319  00005D                     r_protocol@retry:
  1320                           	opt callstack 0
  1321  00005D                     	ds	1
  1322                           
  1323                           	psect	bssBANK0
  1324  0000C2                     __pbssBANK0:
  1325                           	opt callstack 0
  1326  0000C2                     _r_block:
  1327                           	opt callstack 0
  1328  0000C2                     	ds	13
  1329  0000CF                     _spi_link:
  1330                           	opt callstack 0
  1331  0000CF                     	ds	12
  1332  0000DB                     _tickCount:
  1333                           	opt callstack 0
  1334  0000DB                     	ds	12
  1335  0000E7                     t_protocol@block:
  1336                           	opt callstack 0
  1337  0000E7                     	ds	7
  1338  0000EE                     wdtdelay@dcount:
  1339                           	opt callstack 0
  1340  0000EE                     	ds	4
  1341  0000F2                     _TMR5_InterruptHandler:
  1342                           	opt callstack 0
  1343  0000F2                     	ds	3
  1344  0000F5                     _TMR6_InterruptHandler:
  1345                           	opt callstack 0
  1346  0000F5                     	ds	3
  1347  0000F8                     _ADCC_ADI_InterruptHandler:
  1348                           	opt callstack 0
  1349  0000F8                     	ds	3
  1350  0000FB                     _nout:
  1351                           	opt callstack 0
  1352  0000FB                     	ds	2
  1353  0000FD                     run_checksum@sum:
  1354                           	opt callstack 0
  1355  0000FD                     	ds	2
  1356                           
  1357                           	psect	dataBANK0
  1358  000060                     __pdataBANK0:
  1359                           	opt callstack 0
  1360  000060                     _V:
  1361                           	opt callstack 0
  1362  000060                     	ds	98
  1363                           
  1364                           	psect	bssBANK1
  1365  0001D0                     __pbssBANK1:
  1366                           	opt callstack 0
  1367  0001D0                     _dbuf:
  1368                           	opt callstack 0
  1369  0001D0                     	ds	32
  1370  0001F0                     _seed:
  1371                           	opt callstack 0
  1372  0001F0                     	ds	8
  1373                           
  1374                           	psect	dataBANK1
  1375  000100                     __pdataBANK1:
  1376                           	opt callstack 0
  1377  000100                     stoa@F1144:
  1378                           	opt callstack 0
  1379  000100                     	ds	7
  1380  000107                     _H10:
  1381                           	opt callstack 0
  1382  000107                     	ds	91
  1383  000162                     _H12:
  1384                           	opt callstack 0
  1385  000162                     	ds	30
  1386  000180                     _H24:
  1387                           	opt callstack 0
  1388  000180                     	ds	27
  1389  00019B                     _H17:
  1390                           	opt callstack 0
  1391  00019B                     	ds	20
  1392  0001AF                     _H14:
  1393                           	opt callstack 0
  1394  0001AF                     	ds	17
  1395  0001C0                     _H13:
  1396                           	opt callstack 0
  1397  0001C0                     	ds	16
  1398                           
  1399                           	psect	bssBANK2
  1400  000200                     __pbssBANK2:
  1401                           	opt callstack 0
  1402  000200                     _uart2RxBuffer:
  1403                           	opt callstack 0
  1404  000200                     	ds	64
  1405  000240                     _uart2TxBuffer:
  1406                           	opt callstack 0
  1407  000240                     	ds	64
  1408  000280                     _uart1RxBuffer:
  1409                           	opt callstack 0
  1410  000280                     	ds	64
  1411  0002C0                     _uart1TxBuffer:
  1412                           	opt callstack 0
  1413  0002C0                     	ds	64
  1414                           
  1415                           	psect	bssBANK3
  1416  000300                     __pbssBANK3:
  1417                           	opt callstack 0
  1418  000300                     _ring_buf2:
  1419                           	opt callstack 0
  1420  000300                     	ds	67
  1421  000343                     _ring_buf1:
  1422                           	opt callstack 0
  1423  000343                     	ds	67
  1424                           
  1425                           	psect	dataBANK3
  1426  000386                     __pdataBANK3:
  1427                           	opt callstack 0
  1428  000386                     _H53:
  1429                           	opt callstack 0
  1430  000386                     	ds	56
  1431                           
  1432                           	psect	cstackCOMRAM
  1433  000059                     __pcstackCOMRAM:
  1434                           	opt callstack 0
  1435  000059                     ??_TMR6_ISR:
  1436  000059                     
  1437                           ; 1 bytes @ 0x0
  1438  000059                     	ds	1
  1439  00005A                     ??_TMR5_ISR:
  1440                           
  1441                           ; 1 bytes @ 0x1
  1442  00005A                     	ds	3
  1443                           
  1444 ;;
  1445 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1446 ;;
  1447 ;; *************** function _main *****************
  1448 ;; Defined at:
  1449 ;;		line 313 in file "main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  mode            1  [STACK] enum E16897
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1  [STACK] void 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 4/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels required when called:   14
  1469 ;; This function calls:
  1470 ;;		_SYSTEM_Initialize
  1471 ;;		_WaitMs
  1472 ;;		_eaDogM_WriteCommand
  1473 ;;		_eaDogM_WriteStringAtPos
  1474 ;;		_init_display
  1475 ;;		_m_protocol
  1476 ;;		_r_protocol
  1477 ;;		_sprintf
  1478 ;;		_srand
  1479 ;;		_t_protocol
  1480 ;;		_wait_lcd_done
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text0
  1487  0020C6                     __ptext0:
  1488                           	opt callstack 0
  1489  0020C6                     _main:
  1490                           	opt callstack 0
  1491                           
  1492                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1493  0020C6  52E6               	movf	postinc1,f,c
  1494                           
  1495                           ;main.c: 315:  UI_STATES mode;;main.c: 318:  SYSTEM_Initialize();
  1496                           
  1497                           ;incstack = 0
  1498  0020C8  EC67  F02D         	call	_SYSTEM_Initialize	;wreg free
  1499                           
  1500                           ; BSR set to: 60
  1501                           ;main.c: 321:  (INTCON0bits.GIEH = 1);
  1502  0020CC  8ED2               	bsf	16338,7,c	;volatile
  1503                           
  1504                           ; BSR set to: 60
  1505                           ;main.c: 324:  (INTCON0bits.GIEL = 1);
  1506  0020CE  8CD2               	bsf	16338,6,c	;volatile
  1507                           
  1508                           ; BSR set to: 60
  1509                           ;main.c: 326:  V.ui_state = UI_STATE_INIT;
  1510  0020D0  0100               	movlb	0	; () banked
  1511  0020D2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 331:  WaitMs(300);
  1515  0020D4  0E2C               	movlw	44
  1516  0020D6  6EE6               	movwf	postinc1,c
  1517  0020D8  0E01               	movlw	1
  1518  0020DA  6EE6               	movwf	postinc1,c
  1519  0020DC  EC5E  F02E         	call	_WaitMs	;wreg free
  1520                           
  1521                           ;main.c: 332:  if (PORTBbits.RB0) {
  1522  0020E0  A0CB               	btfss	16331,0,c	;volatile
  1523  0020E2  D004               	goto	l9085
  1524                           
  1525                           ;main.c: 333:   mode = UI_STATE_HOST;
  1526                           ;stkvar	_mode @ sp[(-1)+0]
  1527  0020E4  0EFF               	movlw	-1
  1528  0020E6  6AE3               	clrf	plusw1,c
  1529  0020E8  2AE3               	incf	plusw1,f,c
  1530                           
  1531                           ;main.c: 334:  } else {
  1532  0020EA  D004               	goto	l9087
  1533  0020EC                     l9085:
  1534                           
  1535                           ;main.c: 335:   mode = UI_STATE_LOG;
  1536                           ;stkvar	_mode @ sp[(-1)+0]
  1537  0020EC  0EFF               	movlw	-1
  1538  0020EE  6AE3               	clrf	plusw1,c
  1539  0020F0  80E3               	bsf	plusw1,0,c
  1540  0020F2  82E3               	bsf	plusw1,1,c	;indir
  1541  0020F4                     l9087:
  1542                           
  1543                           ;main.c: 338:  if (mode == UI_STATE_HOST) {
  1544                           ;stkvar	_mode @ sp[(-1)+0]
  1545  0020F4  0EFF               	movlw	-1
  1546  0020F6  04E3               	decf	plusw1,w,c
  1547  0020F8  A4D8               	btfss	status,2,c
  1548  0020FA  D003               	goto	l1228
  1549                           
  1550                           ;main.c: 339:   do { LATDbits.LATD0 = 1; } while(0);
  1551  0020FC  80BD               	bsf	16317,0,c	;volatile
  1552                           
  1553                           ;main.c: 340:   do { LATDbits.LATD1 = 1; } while(0);
  1554  0020FE  82BD               	bsf	16317,1,c	;volatile
  1555  002100  D237               	goto	l9251
  1556  002102                     l1228:
  1557  002102  90BD               	bcf	16317,0,c	;volatile
  1558                           
  1559                           ;main.c: 343:   do { LATDbits.LATD1 = 0; } while(0);
  1560  002104  92BD               	bcf	16317,1,c	;volatile
  1561  002106  D234               	goto	l9251
  1562  002108                     l9089:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 349:    init_display();
  1566  002108  EC35  F026         	call	_init_display	;wreg free
  1567                           
  1568                           ; BSR set to: 61
  1569                           ;main.c: 350:    eaDogM_WriteCommand(0b00001100);
  1570  00210C  0E0C               	movlw	12
  1571  00210E  6EE6               	movwf	postinc1,c
  1572  002110  ECB6  F031         	call	_eaDogM_WriteCommand	;wreg free
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 352:    V.ui_state = mode;
  1576                           ;stkvar	_mode @ sp[(-1)+0]
  1577  002114  0EFF               	movlw	-1
  1578  002116  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 353:    V.s_state = SEQ_STATE_INIT;
  1582  00211C  6B60               	clrf	_V& (0+255),b	;volatile
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;main.c: 354:    srand(1957);
  1586  00211E  0EA5               	movlw	165
  1587  002120  6EE6               	movwf	postinc1,c
  1588  002122  0E07               	movlw	7
  1589  002124  6EE6               	movwf	postinc1,c
  1590  002126  EC79  F02E         	call	_srand	;wreg free
  1591                           
  1592                           ; BSR set to: 1
  1593                           ;main.c: 355:    sprintf(V.buf, " RVI HOST TESTER");
  1594  00212A  0E6F               	movlw	STR_1& (0+255)
  1595  00212C  6EE6               	movwf	postinc1,c
  1596  00212E  0E60               	movlw	_V& (0+255)
  1597  002130  0F06               	addlw	6
  1598  002132  6EE6               	movwf	postinc1,c
  1599  002134  0E02               	movlw	2
  1600  002136  6EE6               	movwf	postinc1,c
  1601  002138  ECE3  F027         	call	_sprintf	;wreg free
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 356:    wait_lcd_done();
  1605  00213C  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 357:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1609  002140  0E60               	movlw	_V& (0+255)
  1610  002142  0F06               	addlw	6
  1611  002144  6EE6               	movwf	postinc1,c
  1612  002146  0E00               	movlw	0
  1613  002148  6EE6               	movwf	postinc1,c
  1614  00214A  0E00               	movlw	0
  1615  00214C  6EE6               	movwf	postinc1,c
  1616  00214E  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1617                           
  1618                           ; BSR set to: 59
  1619                           ;main.c: 358:    sprintf(V.buf, " Version %s", "0.85B");
  1620  002152  0EB5               	movlw	STR_3& (0+255)
  1621  002154  6E44               	movwf	btemp+11,c
  1622  002156  0060  F113  FFE6   	movff	btemp+11,postinc1
  1623  00215C  0E20               	movlw	high __smallconst
  1624  00215E  6EE6               	movwf	postinc1,c
  1625  002160  0E9D               	movlw	STR_2& (0+255)
  1626  002162  6EE6               	movwf	postinc1,c
  1627  002164  0E60               	movlw	_V& (0+255)
  1628  002166  0F06               	addlw	6
  1629  002168  6EE6               	movwf	postinc1,c
  1630  00216A  0E04               	movlw	4
  1631  00216C  6EE6               	movwf	postinc1,c
  1632  00216E  ECE3  F027         	call	_sprintf	;wreg free
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;main.c: 359:    wait_lcd_done();
  1636  002172  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 360:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1640  002176  0E60               	movlw	_V& (0+255)
  1641  002178  0F06               	addlw	6
  1642  00217A  6EE6               	movwf	postinc1,c
  1643  00217C  0E00               	movlw	0
  1644  00217E  6EE6               	movwf	postinc1,c
  1645  002180  0E01               	movlw	1
  1646  002182  6EE6               	movwf	postinc1,c
  1647  002184  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1648                           
  1649                           ; BSR set to: 59
  1650                           ;main.c: 361:    sprintf(V.buf, " FGB@MCHP FAB4");
  1651  002188  0E80               	movlw	STR_4& (0+255)
  1652  00218A  6EE6               	movwf	postinc1,c
  1653  00218C  0E60               	movlw	_V& (0+255)
  1654  00218E  0F06               	addlw	6
  1655  002190  6EE6               	movwf	postinc1,c
  1656  002192  0E02               	movlw	2
  1657  002194  6EE6               	movwf	postinc1,c
  1658  002196  ECE3  F027         	call	_sprintf	;wreg free
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;main.c: 362:    wait_lcd_done();
  1662  00219A  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 363:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1666  00219E  0E60               	movlw	_V& (0+255)
  1667  0021A0  0F06               	addlw	6
  1668  0021A2  6EE6               	movwf	postinc1,c
  1669  0021A4  0E00               	movlw	0
  1670  0021A6  6EE6               	movwf	postinc1,c
  1671  0021A8  0E02               	movlw	2
  1672  0021AA  6EE6               	movwf	postinc1,c
  1673  0021AC  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1674                           
  1675                           ; BSR set to: 59
  1676                           ;main.c: 364:    WaitMs(3000);
  1677  0021B0  0EB8               	movlw	184
  1678  0021B2  6EE6               	movwf	postinc1,c
  1679  0021B4  0E0B               	movlw	11
  1680  0021B6  6EE6               	movwf	postinc1,c
  1681  0021B8  EC5E  F02E         	call	_WaitMs	;wreg free
  1682                           
  1683                           ;main.c: 365:    break;
  1684  0021BC  D1ED               	goto	l1269
  1685  0021BE                     l1238:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 369:     V.r_l_state = LINK_STATE_IDLE;
  1689  0021BE  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1690                           
  1691                           ;main.c: 370:     V.t_l_state = LINK_STATE_IDLE;
  1692  0021C0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;main.c: 371:     V.s_state = SEQ_STATE_RX;
  1696  0021C2  0E01               	movlw	1
  1697  0021C4  6F60               	movwf	_V& (0+255),b	;volatile
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 372:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  1701  0021C6  0E0A               	movlw	10
  1702  0021C8  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  1703  0021CA  A4D8               	btfss	status,2,c
  1704  0021CC  D0E7               	goto	l9191
  1705                           
  1706                           ; BSR set to: 0
  1707  0021CE  0E0A               	movlw	10
  1708  0021D0  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  1709  0021D2  A4D8               	btfss	status,2,c
  1710  0021D4  D0E3               	goto	l9191
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;main.c: 373:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  1714  0021D6  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  1715  0021D8  6EE6               	movwf	postinc1,c
  1716  0021DA  0E00               	movlw	0
  1717  0021DC  6EE6               	movwf	postinc1,c
  1718  0021DE  0060  F29B  FFE6   	movff	_V+70,postinc1
  1719  0021E4  0060  F29F  FFE6   	movff	_V+71,postinc1
  1720  0021EA  0060  F2A3  FFE6   	movff	_V+72,postinc1
  1721  0021F0  0060  F2A7  FFE6   	movff	_V+73,postinc1
  1722  0021F6  0E35               	movlw	STR_5& (0+255)
  1723  0021F8  6EE6               	movwf	postinc1,c
  1724  0021FA  0E60               	movlw	_V& (0+255)
  1725  0021FC  0F06               	addlw	6
  1726  0021FE  6EE6               	movwf	postinc1,c
  1727  002200  0E08               	movlw	8
  1728  002202  6EE6               	movwf	postinc1,c
  1729  002204  ECE3  F027         	call	_sprintf	;wreg free
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;main.c: 374:      V.buf[16] = 0;
  1733  002208  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;main.c: 375:      wait_lcd_done();
  1737  00220A  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 376:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1741  00220E  0E60               	movlw	_V& (0+255)
  1742  002210  0F06               	addlw	6
  1743  002212  6EE6               	movwf	postinc1,c
  1744  002214  0E00               	movlw	0
  1745  002216  6EE6               	movwf	postinc1,c
  1746  002218  0E02               	movlw	2
  1747  00221A  6EE6               	movwf	postinc1,c
  1748  00221C  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1749  002220  D0BD               	goto	l9191
  1750  002222                     l9133:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 387:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1754  002222  0E60               	movlw	_V& (0+255)
  1755  002224  0F04               	addlw	4
  1756  002226  6EE6               	movwf	postinc1,c
  1757  002228  EC04  F01A         	call	_r_protocol	;wreg free
  1758  00222C  0E04               	movlw	4
  1759  00222E  1839               	xorwf	btemp,w,c
  1760  002230  A4D8               	btfss	status,2,c
  1761  002232  D029               	goto	l9151
  1762                           
  1763                           ;main.c: 388:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1764  002234  0100               	movlb	0	; () banked
  1765  002236  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  1766  002238  6EE6               	movwf	postinc1,c
  1767  00223A  0E00               	movlw	0
  1768  00223C  6EE6               	movwf	postinc1,c
  1769  00223E  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  1770  002240  6EE6               	movwf	postinc1,c
  1771  002242  0E00               	movlw	0
  1772  002244  6EE6               	movwf	postinc1,c
  1773  002246  0E8F               	movlw	STR_6& (0+255)
  1774  002248  6EE6               	movwf	postinc1,c
  1775  00224A  0E60               	movlw	_V& (0+255)
  1776  00224C  0F06               	addlw	6
  1777  00224E  6EE6               	movwf	postinc1,c
  1778  002250  0E06               	movlw	6
  1779  002252  6EE6               	movwf	postinc1,c
  1780  002254  ECE3  F027         	call	_sprintf	;wreg free
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 389:      V.buf[11] = 0;
  1784  002258  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 390:      wait_lcd_done();
  1788  00225A  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 391:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1792  00225E  0E60               	movlw	_V& (0+255)
  1793  002260  0F06               	addlw	6
  1794  002262  6EE6               	movwf	postinc1,c
  1795  002264  0E00               	movlw	0
  1796  002266  6EE6               	movwf	postinc1,c
  1797  002268  0E00               	movlw	0
  1798  00226A  6EE6               	movwf	postinc1,c
  1799  00226C  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1800                           
  1801                           ; BSR set to: 59
  1802                           ;main.c: 395:      if (V.wbit) {
  1803  002270  0100               	movlb	0	; () banked
  1804  002272  A3BB               	btfss	(_V+91)& (0+255),1,b	;volatile
  1805  002274  D006               	goto	l9149
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;main.c: 396:       V.s_state = SEQ_STATE_TX;
  1809  002276  0E02               	movlw	2
  1810  002278  6F60               	movwf	_V& (0+255),b	;volatile
  1811                           
  1812                           ;main.c: 397:       V.failed_send = 0;
  1813  00227A  0E87               	movlw	-121
  1814  00227C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 398:       V.t_l_state = LINK_STATE_IDLE;
  1818  00227E  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1819                           
  1820                           ;main.c: 399:      } else {
  1821  002280  D002               	goto	l9151
  1822  002282                     l9149:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 400:       V.s_state = SEQ_STATE_TRIGGER;
  1826  002282  0E03               	movlw	3
  1827  002284  6F60               	movwf	_V& (0+255),b	;volatile
  1828  002286                     l9151:
  1829                           
  1830                           ;main.c: 403:     if (V.r_l_state == LINK_STATE_ERROR)
  1831  002286  0E06               	movlw	6
  1832  002288  0100               	movlb	0	; () banked
  1833  00228A  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  1834  00228C  D00F               	goto	L31
  1835  00228E                     l9155:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 410:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1839  00228E  0E60               	movlw	_V& (0+255)
  1840  002290  0F05               	addlw	5
  1841  002292  6EE6               	movwf	postinc1,c
  1842  002294  ECA7  F01F         	call	_t_protocol	;wreg free
  1843  002298  0E04               	movlw	4
  1844  00229A  1839               	xorwf	btemp,w,c
  1845  00229C  A4D8               	btfss	status,2,c
  1846  00229E  D003               	goto	l9159
  1847                           
  1848                           ;main.c: 411:      V.s_state = SEQ_STATE_TRIGGER;
  1849  0022A0  0E03               	movlw	3
  1850  0022A2  0100               	movlb	0	; () banked
  1851  0022A4  6F60               	movwf	_V& (0+255),b	;volatile
  1852  0022A6                     l9159:
  1853                           
  1854                           ;main.c: 413:     if (V.t_l_state == LINK_STATE_ERROR)
  1855  0022A6  0E06               	movlw	6
  1856  0022A8  0100               	movlb	0	; () banked
  1857  0022AA  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  1858  0022AC                     L31:
  1859  0022AC  A4D8               	btfss	status,2,c
  1860  0022AE  D076               	goto	l9191
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 414:      V.s_state = SEQ_STATE_ERROR;
  1864  0022B0  0E06               	movlw	6
  1865  0022B2  6F60               	movwf	_V& (0+255),b	;volatile
  1866  0022B4  D073               	goto	l9191
  1867  0022B6                     l1249:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;main.c: 417:     if (V.queue) {
  1871  0022B6  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  1872  0022B8  D00E               	goto	l9169
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main.c: 418:      V.r_l_state = LINK_STATE_IDLE;
  1876  0022BA  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1877                           
  1878                           ;main.c: 419:      V.t_l_state = LINK_STATE_IDLE;
  1879  0022BC  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 420:      V.s_state = SEQ_STATE_TX;
  1883  0022BE  0E02               	movlw	2
  1884  0022C0  6F60               	movwf	_V& (0+255),b	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;main.c: 421:      sprintf(V.buf, " OKQ#");
  1888  0022C2  0EAF               	movlw	STR_7& (0+255)
  1889  0022C4  6EE6               	movwf	postinc1,c
  1890  0022C6  0E60               	movlw	_V& (0+255)
  1891  0022C8  0F06               	addlw	6
  1892  0022CA  6EE6               	movwf	postinc1,c
  1893  0022CC  0E02               	movlw	2
  1894  0022CE  6EE6               	movwf	postinc1,c
  1895  0022D0  ECE3  F027         	call	_sprintf	;wreg free
  1896                           
  1897                           ;main.c: 422:     } else {
  1898  0022D4  D00B               	goto	l9173
  1899  0022D6                     l9169:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;main.c: 423:      V.s_state = SEQ_STATE_DONE;
  1903  0022D6  0E05               	movlw	5
  1904  0022D8  6F60               	movwf	_V& (0+255),b	;volatile
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 424:      sprintf(V.buf, " OK #");
  1908  0022DA  0EA9               	movlw	STR_8& (0+255)
  1909  0022DC  6EE6               	movwf	postinc1,c
  1910  0022DE  0E60               	movlw	_V& (0+255)
  1911  0022E0  0F06               	addlw	6
  1912  0022E2  6EE6               	movwf	postinc1,c
  1913  0022E4  0E02               	movlw	2
  1914  0022E6  6EE6               	movwf	postinc1,c
  1915  0022E8  ECE3  F027         	call	_sprintf	;wreg free
  1916  0022EC                     l9173:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 426:     wait_lcd_done();
  1920  0022EC  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 427:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1924  0022F0  0E60               	movlw	_V& (0+255)
  1925  0022F2  0F06               	addlw	6
  1926  0022F4  6EE6               	movwf	postinc1,c
  1927  0022F6  0E0B               	movlw	11
  1928  0022F8  6EE6               	movwf	postinc1,c
  1929  0022FA  0E00               	movlw	0
  1930  0022FC  6EE6               	movwf	postinc1,c
  1931  0022FE  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1932                           
  1933                           ;main.c: 428:     break;
  1934  002302  D04C               	goto	l9191
  1935  002304                     l1252:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 430:     V.s_state = SEQ_STATE_INIT;
  1939  002304  6B60               	clrf	_V& (0+255),b	;volatile
  1940                           
  1941                           ;main.c: 431:     break;
  1942  002306  D04A               	goto	l9191
  1943  002308                     l1254:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;main.c: 434:     V.s_state = SEQ_STATE_INIT;
  1947  002308  6B60               	clrf	_V& (0+255),b	;volatile
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;main.c: 435:     sprintf(V.buf, "E%d A%d T%d C%d #", V.error, V.abort, V.timer_error, V
      +                          .checksum_error);
  1951  00230A  0060  F2DF  FFE6   	movff	_V+87,postinc1
  1952  002310  0060  F2E3  FFE6   	movff	_V+88,postinc1
  1953  002316  0060  F2E7  FFE6   	movff	_V+89,postinc1
  1954  00231C  0060  F2EB  FFE6   	movff	_V+90,postinc1
  1955  002322  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  1956  002324  6EE6               	movwf	postinc1,c
  1957  002326  0E00               	movlw	0
  1958  002328  6EE6               	movwf	postinc1,c
  1959  00232A  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  1960  00232C  6EE6               	movwf	postinc1,c
  1961  00232E  0E00               	movlw	0
  1962  002330  6EE6               	movwf	postinc1,c
  1963  002332  0E5D               	movlw	STR_9& (0+255)
  1964  002334  6EE6               	movwf	postinc1,c
  1965  002336  0E60               	movlw	_V& (0+255)
  1966  002338  0F06               	addlw	6
  1967  00233A  6EE6               	movwf	postinc1,c
  1968  00233C  0E0A               	movlw	10
  1969  00233E  6EE6               	movwf	postinc1,c
  1970  002340  ECE3  F027         	call	_sprintf	;wreg free
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;main.c: 436:     V.buf[16] = 0;
  1974  002344  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;main.c: 437:     wait_lcd_done();
  1978  002346  EC3C  F031         	call	_wait_lcd_done	;wreg free
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;main.c: 438:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1982  00234A  0E60               	movlw	_V& (0+255)
  1983  00234C  0F06               	addlw	6
  1984  00234E  6EE6               	movwf	postinc1,c
  1985  002350  0E00               	movlw	0
  1986  002352  6EE6               	movwf	postinc1,c
  1987  002354  0E02               	movlw	2
  1988  002356  6EE6               	movwf	postinc1,c
  1989  002358  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  1990                           
  1991                           ; BSR set to: 59
  1992                           ;main.c: 439:     WaitMs(2000);
  1993  00235C  0ED0               	movlw	208
  1994  00235E  6EE6               	movwf	postinc1,c
  1995  002360  0E07               	movlw	7
  1996  002362  6EE6               	movwf	postinc1,c
  1997  002364  EC5E  F02E         	call	_WaitMs	;wreg free
  1998                           
  1999                           ;main.c: 440:     break;
  2000  002368  D019               	goto	l9191
  2001  00236A                     l9189:
  2002                           
  2003                           ; BSR set to: 0
  2004  00236A  5160               	movf	_V& (0+255),w,b	;volatile
  2005  00236C  6E43               	movwf	btemp+10,c
  2006  00236E  6A44               	clrf	btemp+11,c
  2007                           
  2008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 1, Range of values is 0 to 0
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            4     3 (average)
  2014                           ;	Chosen strategy is simple_byte
  2015  002370  5044               	movf	btemp+11,w,c
  2016  002372  0A00               	xorlw	0	; case 0
  2017  002374  A4D8               	btfss	status,2,c
  2018  002376  D7C8               	goto	l1254
  2019                           
  2020                           ; BSR set to: 0
  2021                           ; Switch size 1, requested type "simple"
  2022                           ; Number of cases is 6, Range of values is 0 to 6
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte           19    10 (average)
  2026                           ;	Chosen strategy is simple_byte
  2027  002378  5043               	movf	btemp+10,w,c
  2028  00237A  0A00               	xorlw	0	; case 0
  2029  00237C  B4D8               	btfsc	status,2,c
  2030  00237E  D71F               	goto	l1238
  2031  002380  0A01               	xorlw	1	; case 1
  2032  002382  B4D8               	btfsc	status,2,c
  2033  002384  D74E               	goto	l9133
  2034  002386  0A03               	xorlw	3	; case 2
  2035  002388  B4D8               	btfsc	status,2,c
  2036  00238A  D781               	goto	l9155
  2037  00238C  0A01               	xorlw	1	; case 3
  2038  00238E  B4D8               	btfsc	status,2,c
  2039  002390  D792               	goto	l1249
  2040  002392  0A06               	xorlw	6	; case 5
  2041  002394  B4D8               	btfsc	status,2,c
  2042  002396  D7B6               	goto	l1252
  2043  002398  0A03               	xorlw	3	; case 6
  2044  00239A  D7B6               	goto	l1254
  2045  00239C                     l9191:
  2046                           
  2047                           ;main.c: 442:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2048  00239C  0E0A               	movlw	10
  2049  00239E  0100               	movlb	0	; () banked
  2050  0023A0  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2051  0023A2  A4D8               	btfss	status,2,c
  2052  0023A4  D0F9               	goto	l1269
  2053                           
  2054                           ; BSR set to: 0
  2055  0023A6  0E0A               	movlw	10
  2056  0023A8  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2057  0023AA  A4D8               	btfss	status,2,c
  2058  0023AC  D0F5               	goto	l1269
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 443:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2062  0023AE  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2063  0023B0  6EE6               	movwf	postinc1,c
  2064  0023B2  0E00               	movlw	0
  2065  0023B4  6EE6               	movwf	postinc1,c
  2066  0023B6  0060  F29B  FFE6   	movff	_V+70,postinc1
  2067  0023BC  0060  F29F  FFE6   	movff	_V+71,postinc1
  2068  0023C2  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2069  0023C8  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2070  0023CE  0E35               	movlw	STR_5& (0+255)
  2071  0023D0  6EE6               	movwf	postinc1,c
  2072  0023D2  0E60               	movlw	_V& (0+255)
  2073  0023D4  0F06               	addlw	6
  2074  0023D6  6EE6               	movwf	postinc1,c
  2075  0023D8  0E08               	movlw	8
  2076  0023DA  6EE6               	movwf	postinc1,c
  2077  0023DC  ECE3  F027         	call	_sprintf	;wreg free
  2078  0023E0                     l9197:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;main.c: 444:     V.buf[16] = 0;
  2082  0023E0  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 445:     wait_lcd_done();
  2086  0023E2  EC3C  F031         	call	_wait_lcd_done	;wreg free
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;main.c: 446:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2090  0023E6  0E60               	movlw	_V& (0+255)
  2091  0023E8  0F06               	addlw	6
  2092  0023EA  6EE6               	movwf	postinc1,c
  2093  0023EC  0E00               	movlw	0
  2094  0023EE  6EE6               	movwf	postinc1,c
  2095  0023F0  0E02               	movlw	2
  2096  0023F2  6EE6               	movwf	postinc1,c
  2097  0023F4  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2098  0023F8  D0CF               	goto	l1269
  2099  0023FA                     l1258:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;main.c: 452:     V.m_l_state = LINK_STATE_IDLE;
  2103  0023FA  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 453:     V.s_state = SEQ_STATE_RX;
  2107  0023FC  0E01               	movlw	1
  2108  0023FE  6F60               	movwf	_V& (0+255),b	;volatile
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 454:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2112  002400  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2113  002406  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2114  00240C  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2115  002412  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2116  002418  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2117  00241A  6EE6               	movwf	postinc1,c
  2118  00241C  0E00               	movlw	0
  2119  00241E  6EE6               	movwf	postinc1,c
  2120  002420  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2121  002422  6EE6               	movwf	postinc1,c
  2122  002424  0E00               	movlw	0
  2123  002426  6EE6               	movwf	postinc1,c
  2124  002428  0E01               	movlw	STR_11& (0+255)
  2125  00242A  6EE6               	movwf	postinc1,c
  2126  00242C  0E60               	movlw	_V& (0+255)
  2127  00242E  0F06               	addlw	6
  2128  002430  6EE6               	movwf	postinc1,c
  2129  002432  0E0A               	movlw	10
  2130  002434  6EE6               	movwf	postinc1,c
  2131  002436  ECE3  F027         	call	_sprintf	;wreg free
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;main.c: 455:     V.buf[16] = 0;
  2135  00243A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;main.c: 456:     wait_lcd_done();
  2139  00243C  EC3C  F031         	call	_wait_lcd_done	;wreg free
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 457:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2143  002440  0E60               	movlw	_V& (0+255)
  2144  002442  0F06               	addlw	6
  2145  002444  6EE6               	movwf	postinc1,c
  2146  002446  0E00               	movlw	0
  2147  002448  6EE6               	movwf	postinc1,c
  2148  00244A  0E02               	movlw	2
  2149  00244C  6EE6               	movwf	postinc1,c
  2150  00244E  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2151                           
  2152                           ;main.c: 465:     break;
  2153  002452  D06D               	goto	l9241
  2154  002454                     l9213:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;main.c: 470:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2158  002454  0E60               	movlw	_V& (0+255)
  2159  002456  0F03               	addlw	3
  2160  002458  6EE6               	movwf	postinc1,c
  2161  00245A  EC7A  F015         	call	_m_protocol	;wreg free
  2162  00245E  0E04               	movlw	4
  2163  002460  1839               	xorwf	btemp,w,c
  2164  002462  A4D8               	btfss	status,2,c
  2165  002464  D02D               	goto	l9225
  2166                           
  2167                           ;main.c: 471:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2168  002466  0060  F29B  FFE6   	movff	_V+70,postinc1
  2169  00246C  0060  F29F  FFE6   	movff	_V+71,postinc1
  2170  002472  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2171  002478  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2172  00247E  0100               	movlb	0	; () banked
  2173  002480  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2174  002482  6EE6               	movwf	postinc1,c
  2175  002484  0E00               	movlw	0
  2176  002486  6EE6               	movwf	postinc1,c
  2177  002488  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2178  00248A  6EE6               	movwf	postinc1,c
  2179  00248C  0E00               	movlw	0
  2180  00248E  6EE6               	movwf	postinc1,c
  2181  002490  0E4A               	movlw	STR_12& (0+255)
  2182  002492  6EE6               	movwf	postinc1,c
  2183  002494  0E60               	movlw	_V& (0+255)
  2184  002496  0F06               	addlw	6
  2185  002498  6EE6               	movwf	postinc1,c
  2186  00249A  0E0A               	movlw	10
  2187  00249C  6EE6               	movwf	postinc1,c
  2188  00249E  ECE3  F027         	call	_sprintf	;wreg free
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main.c: 472:      V.buf[13] = 0;
  2192  0024A2  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;main.c: 473:      wait_lcd_done();
  2196  0024A4  EC3C  F031         	call	_wait_lcd_done	;wreg free
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 474:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2200  0024A8  0E60               	movlw	_V& (0+255)
  2201  0024AA  0F06               	addlw	6
  2202  0024AC  6EE6               	movwf	postinc1,c
  2203  0024AE  0E00               	movlw	0
  2204  0024B0  6EE6               	movwf	postinc1,c
  2205  0024B2  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2206  0024B4  6EE6               	movwf	postinc1,c
  2207  0024B6  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2208                           
  2209                           ; BSR set to: 59
  2210                           ;main.c: 475:      V.s_state = SEQ_STATE_TRIGGER;
  2211  0024BA  0E03               	movlw	3
  2212  0024BC  0100               	movlb	0	; () banked
  2213  0024BE  6F60               	movwf	_V& (0+255),b	;volatile
  2214  0024C0                     l9225:
  2215                           
  2216                           ;main.c: 477:     if (V.m_l_state == LINK_STATE_ERROR)
  2217  0024C0  0E06               	movlw	6
  2218  0024C2  0100               	movlb	0	; () banked
  2219  0024C4  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2220  0024C6  A4D8               	btfss	status,2,c
  2221  0024C8  D032               	goto	l9241
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 478:      V.s_state = SEQ_STATE_ERROR;
  2225  0024CA  0E06               	movlw	6
  2226  0024CC  6F60               	movwf	_V& (0+255),b	;volatile
  2227  0024CE  D02F               	goto	l9241
  2228  0024D0                     l9229:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;main.c: 481:     V.s_state = SEQ_STATE_DONE;
  2232  0024D0  0E05               	movlw	5
  2233  0024D2  6F60               	movwf	_V& (0+255),b	;volatile
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;main.c: 482:     sprintf(V.buf, " OK #");
  2237  0024D4  0EA9               	movlw	STR_8& (0+255)
  2238  0024D6  6EE6               	movwf	postinc1,c
  2239  0024D8  0E60               	movlw	_V& (0+255)
  2240  0024DA  0F06               	addlw	6
  2241  0024DC  6EE6               	movwf	postinc1,c
  2242  0024DE  0E02               	movlw	2
  2243  0024E0  6EE6               	movwf	postinc1,c
  2244  0024E2  ECE3  F027         	call	_sprintf	;wreg free
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 483:     wait_lcd_done();
  2248  0024E6  EC3C  F031         	call	_wait_lcd_done	;wreg free
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;main.c: 484:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2252  0024EA  0E60               	movlw	_V& (0+255)
  2253  0024EC  0F06               	addlw	6
  2254  0024EE  6EE6               	movwf	postinc1,c
  2255  0024F0  0E0D               	movlw	13
  2256  0024F2  6EE6               	movwf	postinc1,c
  2257  0024F4  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2258  0024F6  6EE6               	movwf	postinc1,c
  2259  0024F8  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2260                           
  2261                           ;main.c: 485:     break;
  2262  0024FC  D018               	goto	l9241
  2263  0024FE                     l1264:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;main.c: 491:     V.s_state = SEQ_STATE_INIT;
  2267                           
  2268                           ;main.c: 490:    default:
  2269                           
  2270                           ;main.c: 488:     break;
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;main.c: 487:     V.s_state = SEQ_STATE_INIT;
  2274  0024FE  6B60               	clrf	_V& (0+255),b	;volatile
  2275                           
  2276                           ;main.c: 492:     break;
  2277  002500  D016               	goto	l9241
  2278  002502                     l9239:
  2279                           
  2280                           ; BSR set to: 0
  2281  002502  5160               	movf	_V& (0+255),w,b	;volatile
  2282  002504  6E43               	movwf	btemp+10,c
  2283  002506  6A44               	clrf	btemp+11,c
  2284                           
  2285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2286                           ; Switch size 1, requested type "simple"
  2287                           ; Number of cases is 1, Range of values is 0 to 0
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte            4     3 (average)
  2291                           ;	Chosen strategy is simple_byte
  2292  002508  5044               	movf	btemp+11,w,c
  2293  00250A  0A00               	xorlw	0	; case 0
  2294  00250C  A4D8               	btfss	status,2,c
  2295  00250E  D7F7               	goto	l1264
  2296                           
  2297                           ; BSR set to: 0
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 5, Range of values is 0 to 6
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           16     9 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304  002510  5043               	movf	btemp+10,w,c
  2305  002512  0A00               	xorlw	0	; case 0
  2306  002514  B4D8               	btfsc	status,2,c
  2307  002516  D771               	goto	l1258
  2308  002518  0A01               	xorlw	1	; case 1
  2309  00251A  B4D8               	btfsc	status,2,c
  2310  00251C  D79B               	goto	l9213
  2311  00251E  0A02               	xorlw	2	; case 3
  2312  002520  B4D8               	btfsc	status,2,c
  2313  002522  D7D6               	goto	l9229
  2314  002524  0A06               	xorlw	6	; case 5
  2315  002526  B4D8               	btfsc	status,2,c
  2316  002528  D7EA               	goto	l1264
  2317  00252A  0A03               	xorlw	3	; case 6
  2318  00252C  D7E8               	goto	l1264
  2319  00252E                     l9241:
  2320                           
  2321                           ;main.c: 494:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2322  00252E  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2323  002534  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2324  00253A  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2325  002540  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2326  002546  0100               	movlb	0	; () banked
  2327  002548  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2328  00254A  6EE6               	movwf	postinc1,c
  2329  00254C  0E00               	movlw	0
  2330  00254E  6EE6               	movwf	postinc1,c
  2331  002550  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2332  002552  6EE6               	movwf	postinc1,c
  2333  002554  0E00               	movlw	0
  2334  002556  6EE6               	movwf	postinc1,c
  2335  002558  0E01               	movlw	STR_11& (0+255)
  2336  00255A  6EE6               	movwf	postinc1,c
  2337  00255C  0E60               	movlw	_V& (0+255)
  2338  00255E  0F06               	addlw	6
  2339  002560  6EE6               	movwf	postinc1,c
  2340  002562  0E0A               	movlw	10
  2341  002564  6EE6               	movwf	postinc1,c
  2342  002566  ECE3  F027         	call	_sprintf	;wreg free
  2343  00256A  D73A               	goto	l9197
  2344  00256C                     l1268:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;main.c: 501:    V.ui_state = UI_STATE_INIT;
  2348  00256C  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2349                           
  2350                           ;main.c: 502:    break;
  2351  00256E  D014               	goto	l1269
  2352  002570                     l9251:
  2353  002570  0100               	movlb	0	; () banked
  2354  002572  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2355  002574  6E43               	movwf	btemp+10,c
  2356  002576  6A44               	clrf	btemp+11,c
  2357                           
  2358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 1, Range of values is 0 to 0
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte            4     3 (average)
  2364                           ;	Chosen strategy is simple_byte
  2365  002578  5044               	movf	btemp+11,w,c
  2366  00257A  0A00               	xorlw	0	; case 0
  2367  00257C  A4D8               	btfss	status,2,c
  2368  00257E  D7F6               	goto	l1268
  2369                           
  2370                           ; BSR set to: 0
  2371                           ; Switch size 1, requested type "simple"
  2372                           ; Number of cases is 4, Range of values is 0 to 4
  2373                           ; switch strategies available:
  2374                           ; Name         Instructions Cycles
  2375                           ; simple_byte           13     7 (average)
  2376                           ;	Chosen strategy is simple_byte
  2377  002580  5043               	movf	btemp+10,w,c
  2378  002582  0A00               	xorlw	0	; case 0
  2379  002584  B4D8               	btfsc	status,2,c
  2380  002586  D5C0               	goto	l9089
  2381  002588  0A01               	xorlw	1	; case 1
  2382  00258A  B4D8               	btfsc	status,2,c
  2383  00258C  D6EE               	goto	l9189
  2384  00258E  0A02               	xorlw	2	; case 3
  2385  002590  B4D8               	btfsc	status,2,c
  2386  002592  D7B7               	goto	l9239
  2387  002594  0A07               	xorlw	7	; case 4
  2388  002596  D7EA               	goto	l1268
  2389  002598                     l1269:
  2390  002598  84BE               	bsf	16318,2,c	;volatile
  2391                           
  2392                           ;main.c: 505:   if (V.ticks) {
  2393  00259A  0100               	movlb	0	; () banked
  2394  00259C  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2395  00259E  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2396  0025A0  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2397  0025A2  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2398  0025A4  B4D8               	btfsc	status,2,c
  2399  0025A6  D016               	goto	l9259
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;main.c: 506:    if (V.failed_receive) {
  2403  0025A8  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2404  0025AA  0B0F               	andlw	15
  2405  0025AC  0900               	iorlw	0
  2406  0025AE  B4D8               	btfsc	status,2,c
  2407  0025B0  D003               	goto	l1278
  2408                           
  2409                           ; BSR set to: 0
  2410                           
  2411                           ;main.c: 507:     do { LATDbits.LATD4 = 0; } while(0);
  2412  0025B2  98BD               	bcf	16317,4,c	;volatile
  2413                           
  2414                           ; BSR set to: 0
  2415                           
  2416                           ;main.c: 508:     do { LATDbits.LATD5 = 1; } while(0);
  2417  0025B4  8ABD               	bsf	16317,5,c	;volatile
  2418  0025B6  D002               	goto	l9257
  2419  0025B8                     l1278:
  2420                           
  2421                           ; BSR set to: 0
  2422  0025B8  88BD               	bsf	16317,4,c	;volatile
  2423                           
  2424                           ; BSR set to: 0
  2425                           
  2426                           ;main.c: 511:     do { LATDbits.LATD5 = 0; } while(0);
  2427  0025BA  9ABD               	bcf	16317,5,c	;volatile
  2428  0025BC                     l9257:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;main.c: 513:    if (V.failed_send) {
  2432  0025BC  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2433  0025BE  32E8               	rrcf	wreg,f,c
  2434  0025C0  32E8               	rrcf	wreg,f,c
  2435  0025C2  0B0F               	andlw	15
  2436  0025C4  0900               	iorlw	0
  2437  0025C6  B4D8               	btfsc	status,2,c
  2438  0025C8  D003               	goto	l1288
  2439                           
  2440                           ; BSR set to: 0
  2441                           
  2442                           ;main.c: 514:     do { LATDbits.LATD6 = 0; } while(0);
  2443  0025CA  9CBD               	bcf	16317,6,c	;volatile
  2444                           
  2445                           ; BSR set to: 0
  2446                           
  2447                           ;main.c: 515:     do { LATDbits.LATD7 = 1; } while(0);
  2448  0025CC  8EBD               	bsf	16317,7,c	;volatile
  2449  0025CE  D002               	goto	l9259
  2450  0025D0                     l1288:
  2451                           
  2452                           ; BSR set to: 0
  2453  0025D0  8CBD               	bsf	16317,6,c	;volatile
  2454                           
  2455                           ; BSR set to: 0
  2456                           
  2457                           ;main.c: 518:     do { LATDbits.LATD7 = 0; } while(0);
  2458  0025D2  9EBD               	bcf	16317,7,c	;volatile
  2459  0025D4                     l9259:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;main.c: 521:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  2463  0025D4  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2464  0025DA  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2465  0025E0  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2466  0025E2  32E8               	rrcf	wreg,f,c
  2467  0025E4  32E8               	rrcf	wreg,f,c
  2468  0025E6  0B0F               	andlw	15
  2469  0025E8  6EE6               	movwf	postinc1,c
  2470  0025EA  0E00               	movlw	0
  2471  0025EC  6EE6               	movwf	postinc1,c
  2472  0025EE  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2473  0025F0  6EE6               	movwf	postinc1,c
  2474  0025F2  0E00               	movlw	0
  2475  0025F4  6EE6               	movwf	postinc1,c
  2476  0025F6  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2477  0025F8  0B0F               	andlw	15
  2478  0025FA  6EE6               	movwf	postinc1,c
  2479  0025FC  0E00               	movlw	0
  2480  0025FE  6EE6               	movwf	postinc1,c
  2481  002600  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2482  002602  6EE6               	movwf	postinc1,c
  2483  002604  0E00               	movlw	0
  2484  002606  6EE6               	movwf	postinc1,c
  2485  002608  0E1B               	movlw	STR_15& (0+255)
  2486  00260A  6EE6               	movwf	postinc1,c
  2487  00260C  0E60               	movlw	_V& (0+255)
  2488  00260E  0F06               	addlw	6
  2489  002610  6EE6               	movwf	postinc1,c
  2490  002612  0E0C               	movlw	12
  2491  002614  6EE6               	movwf	postinc1,c
  2492  002616  ECE3  F027         	call	_sprintf	;wreg free
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;main.c: 522:   V.buf[16] = 0;
  2496  00261A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 523:   wait_lcd_done();
  2500  00261C  EC3C  F031         	call	_wait_lcd_done	;wreg free
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;main.c: 524:   if (mode != UI_STATE_LOG)
  2504                           ;stkvar	_mode @ sp[(-1)+0]
  2505  002620  0EFF               	movlw	-1
  2506  002622  006F FF8C  F039    	movff	plusw1,btemp
  2507  002628  0E03               	movlw	3
  2508  00262A  1839               	xorwf	btemp,w,c
  2509  00262C  B4D8               	btfsc	status,2,c
  2510  00262E  D009               	goto	l9269
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;main.c: 525:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2514  002630  0E60               	movlw	_V& (0+255)
  2515  002632  0F06               	addlw	6
  2516  002634  6EE6               	movwf	postinc1,c
  2517  002636  0E00               	movlw	0
  2518  002638  6EE6               	movwf	postinc1,c
  2519  00263A  0E01               	movlw	1
  2520  00263C  6EE6               	movwf	postinc1,c
  2521  00263E  ECA9  F02E         	call	_eaDogM_WriteStringAtPos	;wreg free
  2522  002642                     l9269:
  2523  002642  94BE               	bcf	16318,2,c	;volatile
  2524  002644  D795               	goto	l9251
  2525  002646                     __end_of_main:
  2526                           	opt callstack 0
  2527                           
  2528 ;; *************** function _t_protocol *****************
  2529 ;; Defined at:
  2530 ;;		line 330 in file "gemsecs.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  t_link          1  [STACK] PTR enum E16173
  2533 ;;		 -> V(98), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  rxData          1  [STACK] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1  [STACK] enum E16913
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    5
  2552 ;; This function calls:
  2553 ;;		_StartTimer
  2554 ;;		_TimerDone
  2555 ;;		_UART1_Read
  2556 ;;		_UART1_Write
  2557 ;;		_UART1_is_rx_ready
  2558 ;;		_UART1_put_buffer
  2559 ;;		_secs_II_message
  2560 ;;		_secs_send
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text1
  2567  003F4E                     __ptext1:
  2568                           	opt callstack 0
  2569  003F4E                     _t_protocol:
  2570                           	opt callstack 0
  2571                           
  2572                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2573  003F4E  52E6               	movf	postinc1,f,c
  2574                           
  2575                           ;gemsecs.c: 330: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 331: {;gemsecs.
      +                          c: 332:  uint8_t rxData;;gemsecs.c: 333:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          334:  static response_type block;;gemsecs.c: 336:  switch (*t_link) {
  2576                           
  2577                           ;incstack = 0
  2578  003F50  D113               	goto	l8861
  2579  003F52                     l8763:
  2580                           
  2581                           ;gemsecs.c: 338:   V.error = LINK_ERROR_NONE;
  2582  003F52  0E0A               	movlw	10
  2583  003F54  0100               	movlb	0	; () banked
  2584  003F56  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2585                           
  2586                           ;gemsecs.c: 339:   retry = 3;
  2587  003F58  0E03               	movlw	3
  2588  003F5A  6E29               	movwf	t_protocol@retry,c
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;gemsecs.c: 340:   UART1_Write(0x05);
  2592  003F5C  0E05               	movlw	5
  2593  003F5E  6EE6               	movwf	postinc1,c
  2594  003F60  ECC7  F02D         	call	_UART1_Write	;wreg free
  2595                           
  2596                           ; BSR set to: 57
  2597                           ;gemsecs.c: 341:   StartTimer(TMR_T2, 2000);
  2598  003F64  0ED0               	movlw	208
  2599  003F66  6EE6               	movwf	postinc1,c
  2600  003F68  0E07               	movlw	7
  2601  003F6A  6EE6               	movwf	postinc1,c
  2602  003F6C  0E02               	movlw	2
  2603  003F6E  6EE6               	movwf	postinc1,c
  2604  003F70  EC24  F02E         	call	_StartTimer	;wreg free
  2605                           
  2606                           ;gemsecs.c: 342:   *t_link = LINK_STATE_ENQ;
  2607                           ;stkvar	_t_link @ sp[(-1)+-1]
  2608  003F74  0EFE               	movlw	-2
  2609  003F76  50E3               	movf	plusw1,w,c
  2610  003F78  6ED9               	movwf	fsr2l,c
  2611  003F7A  6ADA               	clrf	fsr2h,c
  2612  003F7C  0E01               	movlw	1
  2613  003F7E  D0FA               	goto	L5
  2614  003F80                     l8771:
  2615                           
  2616                           ;gemsecs.c: 349:   if (TimerDone(TMR_T2)) {
  2617  003F80  0E02               	movlw	2
  2618  003F82  6EE6               	movwf	postinc1,c
  2619  003F84  EC93  F030         	call	_TimerDone	;wreg free
  2620  003F88  5039               	movf	btemp,w,c
  2621  003F8A  B4D8               	btfsc	status,2,c
  2622  003F8C  D01C               	goto	l8783
  2623                           
  2624                           ;gemsecs.c: 350:    V.timer_error++;
  2625  003F8E  0100               	movlb	0	; () banked
  2626  003F90  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  2627  003F92  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;gemsecs.c: 351:    if (!retry--) {
  2631  003F94  0629               	decf	t_protocol@retry,f,c
  2632  003F96  2829               	incf	t_protocol@retry,w,c
  2633  003F98  A4D8               	btfss	status,2,c
  2634  003F9A  D00C               	goto	l8781
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;gemsecs.c: 352:     V.error = LINK_ERROR_T2;
  2638  003F9C  0E0C               	movlw	12
  2639  003F9E  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2640                           
  2641                           ;gemsecs.c: 353:     V.failed_send = 1;
  2642  003FA0  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2643  003FA2  0B87               	andlw	-121
  2644  003FA4  0908               	iorlw	8
  2645  003FA6  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;gemsecs.c: 354:     *t_link = LINK_STATE_NAK;
  2649                           ;stkvar	_t_link @ sp[(-1)+-1]
  2650  003FA8  0EFE               	movlw	-2
  2651  003FAA  50E3               	movf	plusw1,w,c
  2652  003FAC  6ED9               	movwf	fsr2l,c
  2653  003FAE  6ADA               	clrf	fsr2h,c
  2654  003FB0  0E05               	movlw	5
  2655  003FB2  D0E0               	goto	L5
  2656  003FB4                     l8781:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;gemsecs.c: 356:     StartTimer(TMR_T2, 2000);
  2660  003FB4  0ED0               	movlw	208
  2661  003FB6  6EE6               	movwf	postinc1,c
  2662  003FB8  0E07               	movlw	7
  2663  003FBA  6EE6               	movwf	postinc1,c
  2664  003FBC  0E02               	movlw	2
  2665  003FBE  6EE6               	movwf	postinc1,c
  2666  003FC0  EC24  F02E         	call	_StartTimer	;wreg free
  2667  003FC4  D0FA               	goto	l8863
  2668  003FC6                     l8783:
  2669                           
  2670                           ;gemsecs.c: 359:    if (UART1_is_rx_ready()) {
  2671  003FC6  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  2672  003FCA  5039               	movf	btemp,w,c
  2673  003FCC  B4D8               	btfsc	status,2,c
  2674  003FCE  D0F5               	goto	l8863
  2675                           
  2676                           ;gemsecs.c: 360:     rxData = UART1_Read();
  2677  003FD0  EC05  F02E         	call	_UART1_Read	;wreg free
  2678                           
  2679                           ;stkvar	_rxData @ sp[(-1)+0]
  2680  003FD4  0EFF               	movlw	-1
  2681  003FD6  0060  F0E7  FFE3   	movff	btemp,plusw1
  2682                           
  2683                           ; BSR set to: 57
  2684                           ;gemsecs.c: 361:     if (rxData == 0x04) {
  2685                           ;stkvar	_rxData @ sp[(-1)+0]
  2686  003FDC  0EFF               	movlw	-1
  2687  003FDE  006F FF8C  F039    	movff	plusw1,btemp
  2688  003FE4  0E04               	movlw	4
  2689  003FE6  1839               	xorwf	btemp,w,c
  2690  003FE8  A4D8               	btfss	status,2,c
  2691  003FEA  D00E               	goto	l8793
  2692                           
  2693                           ; BSR set to: 57
  2694                           ;gemsecs.c: 362:      StartTimer(TMR_T3, 5000);
  2695  003FEC  0E88               	movlw	136
  2696  003FEE  6EE6               	movwf	postinc1,c
  2697  003FF0  0E13               	movlw	19
  2698  003FF2  6EE6               	movwf	postinc1,c
  2699  003FF4  0E03               	movlw	3
  2700  003FF6  6EE6               	movwf	postinc1,c
  2701  003FF8  EC24  F02E         	call	_StartTimer	;wreg free
  2702                           
  2703                           ;gemsecs.c: 363:      *t_link = LINK_STATE_EOT;
  2704                           ;stkvar	_t_link @ sp[(-1)+-1]
  2705  003FFC  0EFE               	movlw	-2
  2706  003FFE  50E3               	movf	plusw1,w,c
  2707  004000  6ED9               	movwf	fsr2l,c
  2708  004002  6ADA               	clrf	fsr2h,c
  2709  004004  0E02               	movlw	2
  2710  004006  6EDF               	movwf	indf2,c
  2711  004008                     l8793:
  2712                           
  2713                           ;gemsecs.c: 365:     if (rxData == 0x05) {
  2714                           ;stkvar	_rxData @ sp[(-1)+0]
  2715  004008  0EFF               	movlw	-1
  2716  00400A  006F FF8C  F039    	movff	plusw1,btemp
  2717  004010  0E05               	movlw	5
  2718  004012  1839               	xorwf	btemp,w,c
  2719  004014  A4D8               	btfss	status,2,c
  2720  004016  D0D1               	goto	l8863
  2721                           
  2722                           ;gemsecs.c: 366:      UART1_put_buffer(0x04);
  2723  004018  0E04               	movlw	4
  2724  00401A  6EE6               	movwf	postinc1,c
  2725  00401C  EC17  F02F         	call	_UART1_put_buffer	;wreg free
  2726  004020                     l8797:
  2727                           
  2728                           ;gemsecs.c: 367:      *t_link = LINK_STATE_DONE;
  2729                           ;stkvar	_t_link @ sp[(-1)+-1]
  2730  004020  0EFE               	movlw	-2
  2731  004022  50E3               	movf	plusw1,w,c
  2732  004024  6ED9               	movwf	fsr2l,c
  2733  004026  6ADA               	clrf	fsr2h,c
  2734  004028  0E04               	movlw	4
  2735  00402A  D0A4               	goto	L5
  2736  00402C                     l8799:
  2737                           
  2738                           ;gemsecs.c: 373:   if (!requeue)
  2739  00402C  5028               	movf	t_protocol@requeue,w,c
  2740  00402E  A4D8               	btfss	status,2,c
  2741  004030  D010               	goto	l8803
  2742                           
  2743                           ;gemsecs.c: 374:    block = secs_II_message(V.stream, V.function);
  2744  004032  0100               	movlb	0	; () banked
  2745  004034  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2746  004036  6EE6               	movwf	postinc1,c
  2747  004038  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2748  00403A  6EE6               	movwf	postinc1,c
  2749  00403C  EC1B  F022         	call	_secs_II_message	;wreg free
  2750  004040  EE20  F0E7         	lfsr	2,t_protocol@block
  2751  004044  0E06               	movlw	6
  2752  004046                     u5471:
  2753  004046  52E5               	movf	postdec1,f,c
  2754  004048  006F FF9F FFDB     	movff	indf1,plusw2
  2755  00404E  06E8               	decf	wreg,f,c
  2756  004050  E2FA               	bc	u5471
  2757  004052                     l8803:
  2758                           
  2759                           ;gemsecs.c: 376:   if (V.abort == LINK_ERROR_ABORT) {
  2760  004052  0E11               	movlw	17
  2761  004054  0100               	movlb	0	; () banked
  2762  004056  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2763  004058  A4D8               	btfss	status,2,c
  2764  00405A  D019               	goto	l8811
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;gemsecs.c: 377:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2768  00405C  0E01               	movlw	1
  2769  00405E  6EE6               	movwf	postinc1,c
  2770  004060  0E00               	movlw	0
  2771  004062  6EE6               	movwf	postinc1,c
  2772  004064  51E9               	movf	(t_protocol@block+2)& (0+255),w,b
  2773  004066  6EE6               	movwf	postinc1,c
  2774  004068  0060  F39F  FFE6   	movff	t_protocol@block,postinc1
  2775  00406E  0060  F3A3  FFE6   	movff	t_protocol@block+1,postinc1
  2776  004074  ECE6  F020         	call	_secs_send	;wreg free
  2777                           
  2778                           ;gemsecs.c: 378:    V.failed_send = 2;
  2779  004078  0100               	movlb	0	; () banked
  2780  00407A  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2781  00407C  0B87               	andlw	-121
  2782  00407E  0910               	iorlw	16
  2783  004080  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;gemsecs.c: 379:    *t_link = LINK_STATE_ERROR;
  2787                           ;stkvar	_t_link @ sp[(-1)+-1]
  2788  004082  0EFE               	movlw	-2
  2789  004084  50E3               	movf	plusw1,w,c
  2790  004086  6ED9               	movwf	fsr2l,c
  2791  004088  6ADA               	clrf	fsr2h,c
  2792  00408A  0E06               	movlw	6
  2793  00408C  D073               	goto	L5
  2794  00408E                     l8811:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;gemsecs.c: 381:    if (!requeue) {
  2798  00408E  5028               	movf	t_protocol@requeue,w,c
  2799  004090  A4D8               	btfss	status,2,c
  2800  004092  D014               	goto	l1684
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;gemsecs.c: 382:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2804  004094  0E01               	movlw	1
  2805  004096  6EE6               	movwf	postinc1,c
  2806  004098  0E00               	movlw	0
  2807  00409A  6EE6               	movwf	postinc1,c
  2808  00409C  51E9               	movf	(t_protocol@block+2)& (0+255),w,b
  2809  00409E  6EE6               	movwf	postinc1,c
  2810  0040A0  0060  F39F  FFE6   	movff	t_protocol@block,postinc1
  2811  0040A6  0060  F3A3  FFE6   	movff	t_protocol@block+1,postinc1
  2812  0040AC  ECE6  F020         	call	_secs_send	;wreg free
  2813                           
  2814                           ;gemsecs.c: 383:     if (V.queue)
  2815  0040B0  0100               	movlb	0	; () banked
  2816  0040B2  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  2817  0040B4  D013               	goto	l8821
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;gemsecs.c: 384:      requeue = 1;
  2821  0040B6  0E01               	movlw	1
  2822  0040B8  6E28               	movwf	t_protocol@requeue,c
  2823  0040BA  D010               	goto	l8821
  2824  0040BC                     l1684:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;gemsecs.c: 386:     requeue = 0;
  2828  0040BC  6A28               	clrf	t_protocol@requeue,c
  2829                           
  2830                           ;gemsecs.c: 387:     V.queue = 0;
  2831  0040BE  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;gemsecs.c: 388:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2835  0040C0  0E01               	movlw	1
  2836  0040C2  6EE6               	movwf	postinc1,c
  2837  0040C4  0E00               	movlw	0
  2838  0040C6  6EE6               	movwf	postinc1,c
  2839  0040C8  51EC               	movf	(t_protocol@block+5)& (0+255),w,b
  2840  0040CA  6EE6               	movwf	postinc1,c
  2841  0040CC  0060  F3AB  FFE6   	movff	t_protocol@block+3,postinc1
  2842  0040D2  0060  F3AF  FFE6   	movff	t_protocol@block+4,postinc1
  2843  0040D8  ECE6  F020         	call	_secs_send	;wreg free
  2844  0040DC                     l8821:
  2845                           
  2846                           ;gemsecs.c: 390:    if (V.error == LINK_ERROR_NONE) {
  2847  0040DC  0E0A               	movlw	10
  2848  0040DE  0100               	movlb	0	; () banked
  2849  0040E0  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2850  0040E2  A4D8               	btfss	status,2,c
  2851  0040E4  D006               	goto	l8825
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;gemsecs.c: 391:     *t_link = LINK_STATE_ACK;
  2855                           ;stkvar	_t_link @ sp[(-1)+-1]
  2856  0040E6  0EFE               	movlw	-2
  2857  0040E8  50E3               	movf	plusw1,w,c
  2858  0040EA  6ED9               	movwf	fsr2l,c
  2859  0040EC  6ADA               	clrf	fsr2h,c
  2860  0040EE  0E03               	movlw	3
  2861  0040F0  D041               	goto	L5
  2862  0040F2                     l8825:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;gemsecs.c: 393:     V.failed_send = 3;
  2866  0040F2  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2867  0040F4  0B87               	andlw	-121
  2868  0040F6  0918               	iorlw	24
  2869  0040F8  D7C3               	goto	L6
  2870  0040FA                     l8829:
  2871                           
  2872                           ;gemsecs.c: 406:   if (TimerDone(TMR_T3)) {
  2873  0040FA  0E03               	movlw	3
  2874  0040FC  6EE6               	movwf	postinc1,c
  2875  0040FE  EC93  F030         	call	_TimerDone	;wreg free
  2876  004102  5039               	movf	btemp,w,c
  2877  004104  B4D8               	btfsc	status,2,c
  2878  004106  D009               	goto	l8839
  2879                           
  2880                           ;gemsecs.c: 407:    V.timer_error++;
  2881  004108  0100               	movlb	0	; () banked
  2882  00410A  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  2883  00410C  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;gemsecs.c: 408:    V.error = LINK_ERROR_T3;
  2887  00410E  0E0D               	movlw	13
  2888  004110  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;gemsecs.c: 409:    V.failed_send = 4;
  2892  004112  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2893  004114  0B87               	andlw	-121
  2894  004116  0920               	iorlw	32
  2895  004118  D746               	goto	L7
  2896  00411A                     l8839:
  2897                           
  2898                           ;gemsecs.c: 412:    if (UART1_is_rx_ready()) {
  2899  00411A  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  2900  00411E  5039               	movf	btemp,w,c
  2901  004120  B4D8               	btfsc	status,2,c
  2902  004122  D04B               	goto	l8863
  2903                           
  2904                           ;gemsecs.c: 413:     rxData = UART1_Read();
  2905  004124  EC05  F02E         	call	_UART1_Read	;wreg free
  2906                           
  2907                           ;stkvar	_rxData @ sp[(-1)+0]
  2908  004128  0EFF               	movlw	-1
  2909  00412A  0060  F0E7  FFE3   	movff	btemp,plusw1
  2910                           
  2911                           ; BSR set to: 57
  2912                           ;gemsecs.c: 414:     if (rxData == 0x06) {
  2913                           ;stkvar	_rxData @ sp[(-1)+0]
  2914  004130  0EFF               	movlw	-1
  2915  004132  006F FF8C  F039    	movff	plusw1,btemp
  2916  004138  0E06               	movlw	6
  2917  00413A  1839               	xorwf	btemp,w,c
  2918  00413C  A4D8               	btfss	status,2,c
  2919  00413E  D03D               	goto	l8863
  2920                           
  2921                           ; BSR set to: 57
  2922                           ;gemsecs.c: 415:      V.failed_send = 0;
  2923  004140  0E87               	movlw	-121
  2924  004142  0100               	movlb	0	; () banked
  2925  004144  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  2926  004146  D76C               	goto	l8797
  2927  004148                     l8849:
  2928                           
  2929                           ;gemsecs.c: 422:   *t_link = LINK_STATE_ERROR;
  2930                           ;stkvar	_t_link @ sp[(-1)+-1]
  2931  004148  0EFE               	movlw	-2
  2932  00414A  50E3               	movf	plusw1,w,c
  2933  00414C  6ED9               	movwf	fsr2l,c
  2934  00414E  6ADA               	clrf	fsr2h,c
  2935  004150  0E06               	movlw	6
  2936  004152  6EDF               	movwf	indf2,c
  2937                           
  2938                           ;gemsecs.c: 423:   while ((uart1RxCount)) {
  2939  004154  D002               	goto	l8853
  2940  004156                     l8851:
  2941                           
  2942                           ;gemsecs.c: 424:    UART1_Read();
  2943  004156  EC05  F02E         	call	_UART1_Read	;wreg free
  2944  00415A                     l8853:
  2945                           
  2946                           ;gemsecs.c: 423:   while ((uart1RxCount)) {
  2947  00415A  5033               	movf	_uart1RxCount,w,c	;volatile
  2948  00415C  B4D8               	btfsc	status,2,c
  2949  00415E  D02D               	goto	l8863
  2950  004160  D7FA               	goto	l8851
  2951  004162                     l8855:
  2952                           
  2953                           ;gemsecs.c: 430:   V.failed_send = 0;
  2954  004162  0E87               	movlw	-121
  2955  004164  0100               	movlb	0	; () banked
  2956  004166  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  2957                           
  2958                           ;gemsecs.c: 431:   break;
  2959  004168  D028               	goto	l8863
  2960  00416A                     l8857:
  2961                           
  2962                           ;gemsecs.c: 433:   *t_link = LINK_STATE_IDLE;
  2963                           ;stkvar	_t_link @ sp[(-1)+-1]
  2964  00416A  0EFE               	movlw	-2
  2965  00416C  50E3               	movf	plusw1,w,c
  2966  00416E  6ED9               	movwf	fsr2l,c
  2967  004170  6ADA               	clrf	fsr2h,c
  2968  004172  0E00               	movlw	0
  2969  004174                     L5:
  2970  004174  6EDF               	movwf	indf2,c
  2971                           
  2972                           ;gemsecs.c: 435:   break;
  2973  004176  D021               	goto	l8863
  2974  004178                     l8861:
  2975                           
  2976                           ;stkvar	_t_link @ sp[(-1)+-1]
  2977  004178  0EFE               	movlw	-2
  2978  00417A  50E3               	movf	plusw1,w,c
  2979  00417C  6ED9               	movwf	fsr2l,c
  2980  00417E  6ADA               	clrf	fsr2h,c
  2981  004180  50DF               	movf	indf2,w,c
  2982  004182  6E43               	movwf	btemp+10,c
  2983  004184  6A44               	clrf	btemp+11,c
  2984                           
  2985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2986                           ; Switch size 1, requested type "simple"
  2987                           ; Number of cases is 1, Range of values is 0 to 0
  2988                           ; switch strategies available:
  2989                           ; Name         Instructions Cycles
  2990                           ; simple_byte            4     3 (average)
  2991                           ;	Chosen strategy is simple_byte
  2992  004186  5044               	movf	btemp+11,w,c
  2993  004188  0A00               	xorlw	0	; case 0
  2994  00418A  A4D8               	btfss	status,2,c
  2995  00418C  D7EE               	goto	l8857
  2996                           
  2997                           ; Switch size 1, requested type "simple"
  2998                           ; Number of cases is 7, Range of values is 0 to 6
  2999                           ; switch strategies available:
  3000                           ; Name         Instructions Cycles
  3001                           ; simple_byte           22    12 (average)
  3002                           ;	Chosen strategy is simple_byte
  3003  00418E  5043               	movf	btemp+10,w,c
  3004  004190  0A00               	xorlw	0	; case 0
  3005  004192  B4D8               	btfsc	status,2,c
  3006  004194  D6DE               	goto	l8763
  3007  004196  0A01               	xorlw	1	; case 1
  3008  004198  B4D8               	btfsc	status,2,c
  3009  00419A  D6F2               	goto	l8771
  3010  00419C  0A03               	xorlw	3	; case 2
  3011  00419E  B4D8               	btfsc	status,2,c
  3012  0041A0  D745               	goto	l8799
  3013  0041A2  0A01               	xorlw	1	; case 3
  3014  0041A4  B4D8               	btfsc	status,2,c
  3015  0041A6  D7A9               	goto	l8829
  3016  0041A8  0A07               	xorlw	7	; case 4
  3017  0041AA  B4D8               	btfsc	status,2,c
  3018  0041AC  D7DA               	goto	l8855
  3019  0041AE  0A01               	xorlw	1	; case 5
  3020  0041B0  B4D8               	btfsc	status,2,c
  3021  0041B2  D7CA               	goto	l8849
  3022  0041B4  0A03               	xorlw	3	; case 6
  3023  0041B6  A4D8               	btfss	status,2,c
  3024  0041B8  D7D8               	goto	l8857
  3025  0041BA                     l8863:
  3026                           
  3027                           ;gemsecs.c: 438:  return *t_link;
  3028                           ;stkvar	_t_link @ sp[(-1)+-1]
  3029  0041BA  0EFE               	movlw	-2
  3030  0041BC  50E3               	movf	plusw1,w,c
  3031  0041BE  6ED9               	movwf	fsr2l,c
  3032  0041C0  6ADA               	clrf	fsr2h,c
  3033  0041C2  50DF               	movf	indf2,w,c
  3034  0041C4  6E39               	movwf	btemp,c
  3035                           
  3036                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3037  0041C6  52E5               	movf	postdec1,f,c
  3038  0041C8  52E5               	movf	postdec1,f,c
  3039  0041CA  0012               	return		;funcret
  3040  0041CC                     __end_of_t_protocol:
  3041                           	opt callstack 0
  3042                           
  3043 ;; *************** function _secs_send *****************
  3044 ;; Defined at:
  3045 ;;		line 442 in file "gemsecs.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  byte_block      2  [STACK] PTR unsigned char 
  3048 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3049 ;;		 -> H13(16), H12(30), H10(91), 
  3050 ;;  length          1  [STACK] unsigned char 
  3051 ;;  fake            1  [STACK] _Bool 
  3052 ;;  s_uart          1  [STACK] unsigned char 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  k               2  [STACK] PTR unsigned char 
  3055 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3056 ;;		 -> H13(16), H12(30), H10(91), 
  3057 ;;  checksum        2  [STACK] unsigned short 
  3058 ;;  i               1  [STACK] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1  [STACK] _Bool 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3063 ;; Tracked objects:
  3064 ;;		On entry : 3F/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    4
  3075 ;; This function calls:
  3076 ;;		_UART1_Write
  3077 ;;		_UART1_is_tx_ready
  3078 ;;		_UART1_put_buffer
  3079 ;;		_UART2_Write
  3080 ;;		_UART2_is_tx_ready
  3081 ;;		_UART2_put_buffer
  3082 ;;		_block_checksum
  3083 ;; This function is called by:
  3084 ;;		_t_protocol
  3085 ;; This function uses a reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text2
  3089  0041CC                     __ptext2:
  3090                           	opt callstack 0
  3091  0041CC                     _secs_send:
  3092                           	opt callstack 0
  3093                           
  3094                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3095  0041CC  0E05               	movlw	5
  3096  0041CE  26E1               	addwf	fsr1l,f,c
  3097  0041D0  0E00               	movlw	0
  3098  0041D2  22E2               	addwfc	fsr1h,f,c
  3099                           
  3100                           ;gemsecs.c: 442: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 443: {;gemsecs.c: 444:  uint8_t i, *k;;gemsecs.c: 445:  uint16_t ch
      +                          ecksum;;gemsecs.c: 447:  k = (uint8_t *) byte_block;
  3101                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3102                           
  3103                           ;incstack = 0
  3104  0041D4  0EF9               	movlw	-7
  3105  0041D6  006F FF8C  F043    	movff	plusw1,btemp+10
  3106  0041DC  0EFA               	movlw	-6
  3107  0041DE  006F FF8C  F044    	movff	plusw1,btemp+11
  3108                           
  3109                           ;stkvar	_k @ sp[(-5)+0]
  3110  0041E4  0EFC               	movlw	-4
  3111  0041E6  0060  F113  FFE3   	movff	btemp+11,plusw1
  3112  0041EC  0EFB               	movlw	-5
  3113  0041EE  0060  F10F  FFE3   	movff	btemp+10,plusw1
  3114                           
  3115                           ;gemsecs.c: 449:  ++V.ticks;
  3116  0041F4  0E01               	movlw	1
  3117  0041F6  0100               	movlb	0	; () banked
  3118  0041F8  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  3119  0041FA  0E00               	movlw	0
  3120  0041FC  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  3121  0041FE  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  3122  004200  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;gemsecs.c: 450:  V.error = LINK_ERROR_NONE;
  3126  004202  0E0A               	movlw	10
  3127  004204  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;gemsecs.c: 451:  if ((length - 3) != k[length - 1]) {
  3131                           ;stkvar	_length @ sp[(-5)+-3]
  3132  004206  0EF8               	movlw	-8
  3133  004208  50E3               	movf	plusw1,w,c
  3134  00420A  6E43               	movwf	btemp+10,c
  3135  00420C  6A44               	clrf	btemp+11,c
  3136                           
  3137                           ;stkvar	_k @ sp[(-5)+0]
  3138  00420E  0EFB               	movlw	-5
  3139  004210  50E3               	movf	plusw1,w,c
  3140  004212  2643               	addwf	btemp+10,f,c
  3141  004214  0EFC               	movlw	-4
  3142  004216  50E3               	movf	plusw1,w,c
  3143  004218  2244               	addwfc	btemp+11,f,c
  3144  00421A  0EFF               	movlw	255
  3145  00421C  2443               	addwf	btemp+10,w,c
  3146  00421E  6ED9               	movwf	fsr2l,c
  3147  004220  0EFF               	movlw	255
  3148  004222  2044               	addwfc	btemp+11,w,c
  3149  004224  6EDA               	movwf	fsr2h,c
  3150  004226  50DF               	movf	indf2,w,c
  3151  004228  6E43               	movwf	btemp+10,c
  3152  00422A  6A44               	clrf	btemp+11,c
  3153  00422C  0EFD               	movlw	253
  3154  00422E  6E41               	movwf	btemp+8,c
  3155  004230  0EFF               	movlw	255
  3156  004232  6E42               	movwf	btemp+9,c
  3157                           
  3158                           ;stkvar	_length @ sp[(-5)+-3]
  3159  004234  0EF8               	movlw	-8
  3160  004236  50E3               	movf	plusw1,w,c
  3161  004238  6E3F               	movwf	btemp+6,c
  3162  00423A  6A40               	clrf	btemp+7,c
  3163  00423C  5041               	movf	btemp+8,w,c
  3164  00423E  263F               	addwf	btemp+6,f,c
  3165  004240  5042               	movf	btemp+9,w,c
  3166  004242  2240               	addwfc	btemp+7,f,c
  3167  004244  5043               	movf	btemp+10,w,c
  3168  004246  183F               	xorwf	btemp+6,w,c
  3169  004248  E104               	bnz	u5140
  3170  00424A  5044               	movf	btemp+11,w,c
  3171  00424C  1840               	xorwf	btemp+7,w,c
  3172  00424E  B4D8               	btfsc	status,2,c
  3173  004250  D003               	goto	l8455
  3174  004252                     u5140:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;gemsecs.c: 452:   V.error = LINK_ERROR_SEND;
  3178  004252  0E12               	movlw	18
  3179  004254  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3180  004256  D0EA               	goto	l1705
  3181  004258                     l8455:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;gemsecs.c: 461:  checksum = block_checksum(&k[2], length - 3);
  3185  004258  0EFD               	movlw	253
  3186  00425A  6E43               	movwf	btemp+10,c
  3187  00425C  0EFF               	movlw	255
  3188  00425E  6E44               	movwf	btemp+11,c
  3189                           
  3190                           ;stkvar	_length @ sp[(-5)+-3]
  3191  004260  0EF8               	movlw	-8
  3192  004262  50E3               	movf	plusw1,w,c
  3193  004264  6E41               	movwf	btemp+8,c
  3194  004266  6A42               	clrf	btemp+9,c
  3195  004268  5043               	movf	btemp+10,w,c
  3196  00426A  2641               	addwf	btemp+8,f,c
  3197  00426C  5044               	movf	btemp+11,w,c
  3198  00426E  2242               	addwfc	btemp+9,f,c
  3199  004270  0060  F107  FFE6   	movff	btemp+8,postinc1
  3200  004276  0060  F10B  FFE6   	movff	btemp+9,postinc1
  3201                           
  3202                           ;stkvar	_k @ sp[(-7)+0]
  3203  00427C  0EF9               	movlw	-7
  3204  00427E  50E3               	movf	plusw1,w,c
  3205  004280  0F02               	addlw	2
  3206  004282  6E43               	movwf	btemp+10,c
  3207  004284  0EFA               	movlw	-6
  3208  004286  006F FF8C  F044    	movff	plusw1,btemp+11
  3209  00428C  0E00               	movlw	0
  3210  00428E  2244               	addwfc	btemp+11,f,c
  3211  004290  0060  F10F  FFE6   	movff	btemp+10,postinc1
  3212  004296  0060  F113  FFE6   	movff	btemp+11,postinc1
  3213  00429C  ECAA  F026         	call	_block_checksum	;wreg free
  3214                           
  3215                           ;stkvar	_checksum @ sp[(-5)+2]
  3216  0042A0  0EFD               	movlw	-3
  3217  0042A2  0060  F0E7  FFE3   	movff	btemp,plusw1
  3218  0042A8  0EFE               	movlw	-2
  3219  0042AA  0060  F0EB  FFE3   	movff	btemp+1,plusw1
  3220                           
  3221                           ;gemsecs.c: 462:  k[0] = checksum & 0xff;
  3222                           ;stkvar	_checksum @ sp[(-5)+2]
  3223                           ;stkvar	_k @ sp[(-5)+0]
  3224  0042B0  0EFB               	movlw	-5
  3225  0042B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  3226  0042B8  0EFC               	movlw	-4
  3227  0042BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  3228  0042C0  0EFD               	movlw	-3
  3229  0042C2  006F FF8F FFDF     	movff	plusw1,indf2
  3230                           
  3231                           ;gemsecs.c: 463:  k[1] = (checksum >> 8)&0xff;
  3232                           ;stkvar	_checksum @ sp[(-5)+2]
  3233  0042C8  0EFE               	movlw	254
  3234  0042CA  24E1               	addwf	fsr1l,w,c
  3235  0042CC  6ED9               	movwf	fsr2l,c
  3236  0042CE  0EFF               	movlw	255
  3237  0042D0  20E2               	addwfc	fsr1h,w,c
  3238  0042D2  6EDA               	movwf	fsr2h,c
  3239                           
  3240                           ;stkvar	_k @ sp[(-5)+0]
  3241  0042D4  0EFB               	movlw	-5
  3242  0042D6  006F FF8C  F043    	movff	plusw1,btemp+10
  3243  0042DC  0EFC               	movlw	-4
  3244  0042DE  006F FF8C  F044    	movff	plusw1,btemp+11
  3245  0042E4  0E01               	movlw	1
  3246  0042E6  2443               	addwf	btemp+10,w,c
  3247  0042E8  6EE9               	movwf	fsr0l,c
  3248  0042EA  0E00               	movlw	0
  3249  0042EC  2044               	addwfc	btemp+11,w,c
  3250  0042EE  6EEA               	movwf	fsr0h,c
  3251  0042F0  006F FF7F FFEF     	movff	indf2,indf0
  3252                           
  3253                           ;gemsecs.c: 464:  V.t_checksum = checksum;
  3254                           ;stkvar	_checksum @ sp[(-5)+2]
  3255  0042F6  0EFD               	movlw	-3
  3256  0042F8  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  3257  0042FE  0EFE               	movlw	-2
  3258  004300  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  3259                           
  3260                           ;gemsecs.c: 466:  switch (s_uart) {
  3261  004306  D082               	goto	l8501
  3262  004308                     l8463:
  3263  004308  ECEB  F031         	call	_UART2_is_tx_ready	;wreg free
  3264  00430C  0E3F               	movlw	63
  3265  00430E  6439               	cpfsgt	btemp,c
  3266  004310  D7FB               	goto	l8463
  3267                           
  3268                           ;gemsecs.c: 469:   for (i = length; i > 0; i--) {
  3269                           ;stkvar	_length @ sp[(-5)+-3]
  3270                           ;stkvar	_i @ sp[(-5)+4]
  3271  004312  0EF8               	movlw	-8
  3272  004314  006F FF8C  F039    	movff	plusw1,btemp
  3273  00431A  0EFF               	movlw	-1
  3274  00431C  0060  F0E7  FFE3   	movff	btemp,plusw1
  3275  004322                     l8467:
  3276                           
  3277                           ;stkvar	_i @ sp[(-5)+4]
  3278  004322  0EFF               	movlw	-1
  3279  004324  50E3               	movf	plusw1,w,c
  3280  004326  B4D8               	btfsc	status,2,c
  3281  004328  D081               	goto	l1705
  3282                           
  3283                           ;gemsecs.c: 470:    if (fake) {
  3284                           ;stkvar	_fake @ sp[(-5)+-4]
  3285  00432A  0EF7               	movlw	-9
  3286  00432C  50E3               	movf	plusw1,w,c
  3287  00432E  B4D8               	btfsc	status,2,c
  3288  004330  D015               	goto	l8475
  3289                           
  3290                           ;gemsecs.c: 471:     UART2_put_buffer(k[i - 1]);
  3291                           ;stkvar	_i @ sp[(-5)+4]
  3292  004332  0EFF               	movlw	-1
  3293  004334  50E3               	movf	plusw1,w,c
  3294  004336  6E43               	movwf	btemp+10,c
  3295  004338  6A44               	clrf	btemp+11,c
  3296                           
  3297                           ;stkvar	_k @ sp[(-5)+0]
  3298  00433A  0EFB               	movlw	-5
  3299  00433C  50E3               	movf	plusw1,w,c
  3300  00433E  2643               	addwf	btemp+10,f,c
  3301  004340  0EFC               	movlw	-4
  3302  004342  50E3               	movf	plusw1,w,c
  3303  004344  2244               	addwfc	btemp+11,f,c
  3304  004346  0EFF               	movlw	255
  3305  004348  2443               	addwf	btemp+10,w,c
  3306  00434A  6ED9               	movwf	fsr2l,c
  3307  00434C  0EFF               	movlw	255
  3308  00434E  2044               	addwfc	btemp+11,w,c
  3309  004350  6EDA               	movwf	fsr2h,c
  3310  004352  50DF               	movf	indf2,w,c
  3311  004354  6EE6               	movwf	postinc1,c
  3312  004356  EC02  F02F         	call	_UART2_put_buffer	;wreg free
  3313                           
  3314                           ;gemsecs.c: 472:    } else {
  3315  00435A  D014               	goto	l8477
  3316  00435C                     l8475:
  3317                           
  3318                           ;gemsecs.c: 474:     UART2_Write(k[i - 1]);
  3319                           ;stkvar	_i @ sp[(-5)+4]
  3320  00435C  0EFF               	movlw	-1
  3321  00435E  50E3               	movf	plusw1,w,c
  3322  004360  6E43               	movwf	btemp+10,c
  3323  004362  6A44               	clrf	btemp+11,c
  3324                           
  3325                           ;stkvar	_k @ sp[(-5)+0]
  3326  004364  0EFB               	movlw	-5
  3327  004366  50E3               	movf	plusw1,w,c
  3328  004368  2643               	addwf	btemp+10,f,c
  3329  00436A  0EFC               	movlw	-4
  3330  00436C  50E3               	movf	plusw1,w,c
  3331  00436E  2244               	addwfc	btemp+11,f,c
  3332  004370  0EFF               	movlw	255
  3333  004372  2443               	addwf	btemp+10,w,c
  3334  004374  6ED9               	movwf	fsr2l,c
  3335  004376  0EFF               	movlw	255
  3336  004378  2044               	addwfc	btemp+11,w,c
  3337  00437A  6EDA               	movwf	fsr2h,c
  3338  00437C  50DF               	movf	indf2,w,c
  3339  00437E  6EE6               	movwf	postinc1,c
  3340  004380  ECA8  F02D         	call	_UART2_Write	;wreg free
  3341  004384                     l8477:
  3342                           
  3343                           ; BSR set to: 57
  3344                           ;gemsecs.c: 476:   }
  3345                           ;stkvar	_i @ sp[(-5)+4]
  3346  004384  0EFF               	movlw	-1
  3347  004386  06E3               	decf	plusw1,f,c
  3348  004388  D7CC               	goto	l8467
  3349  00438A                     l8481:
  3350  00438A  ECEF  F031         	call	_UART1_is_tx_ready	;wreg free
  3351  00438E  0E3F               	movlw	63
  3352  004390  6439               	cpfsgt	btemp,c
  3353  004392  D7FB               	goto	l8481
  3354                           
  3355                           ;gemsecs.c: 481:   for (i = length; i > 0; i--) {
  3356                           ;stkvar	_length @ sp[(-5)+-3]
  3357                           ;stkvar	_i @ sp[(-5)+4]
  3358  004394  0EF8               	movlw	-8
  3359  004396  006F FF8C  F039    	movff	plusw1,btemp
  3360  00439C  0EFF               	movlw	-1
  3361  00439E  0060  F0E7  FFE3   	movff	btemp,plusw1
  3362  0043A4                     l8485:
  3363                           
  3364                           ;stkvar	_i @ sp[(-5)+4]
  3365  0043A4  0EFF               	movlw	-1
  3366  0043A6  50E3               	movf	plusw1,w,c
  3367  0043A8  B4D8               	btfsc	status,2,c
  3368  0043AA  D040               	goto	l1705
  3369                           
  3370                           ;gemsecs.c: 482:    if (fake) {
  3371                           ;stkvar	_fake @ sp[(-5)+-4]
  3372  0043AC  0EF7               	movlw	-9
  3373  0043AE  50E3               	movf	plusw1,w,c
  3374  0043B0  B4D8               	btfsc	status,2,c
  3375  0043B2  D015               	goto	l8493
  3376                           
  3377                           ;gemsecs.c: 483:     UART1_put_buffer(k[i - 1]);
  3378                           ;stkvar	_i @ sp[(-5)+4]
  3379  0043B4  0EFF               	movlw	-1
  3380  0043B6  50E3               	movf	plusw1,w,c
  3381  0043B8  6E43               	movwf	btemp+10,c
  3382  0043BA  6A44               	clrf	btemp+11,c
  3383                           
  3384                           ;stkvar	_k @ sp[(-5)+0]
  3385  0043BC  0EFB               	movlw	-5
  3386  0043BE  50E3               	movf	plusw1,w,c
  3387  0043C0  2643               	addwf	btemp+10,f,c
  3388  0043C2  0EFC               	movlw	-4
  3389  0043C4  50E3               	movf	plusw1,w,c
  3390  0043C6  2244               	addwfc	btemp+11,f,c
  3391  0043C8  0EFF               	movlw	255
  3392  0043CA  2443               	addwf	btemp+10,w,c
  3393  0043CC  6ED9               	movwf	fsr2l,c
  3394  0043CE  0EFF               	movlw	255
  3395  0043D0  2044               	addwfc	btemp+11,w,c
  3396  0043D2  6EDA               	movwf	fsr2h,c
  3397  0043D4  50DF               	movf	indf2,w,c
  3398  0043D6  6EE6               	movwf	postinc1,c
  3399  0043D8  EC17  F02F         	call	_UART1_put_buffer	;wreg free
  3400                           
  3401                           ;gemsecs.c: 484:    } else {
  3402  0043DC  D014               	goto	l8495
  3403  0043DE                     l8493:
  3404                           
  3405                           ;gemsecs.c: 486:     UART1_Write(k[i - 1]);
  3406                           ;stkvar	_i @ sp[(-5)+4]
  3407  0043DE  0EFF               	movlw	-1
  3408  0043E0  50E3               	movf	plusw1,w,c
  3409  0043E2  6E43               	movwf	btemp+10,c
  3410  0043E4  6A44               	clrf	btemp+11,c
  3411                           
  3412                           ;stkvar	_k @ sp[(-5)+0]
  3413  0043E6  0EFB               	movlw	-5
  3414  0043E8  50E3               	movf	plusw1,w,c
  3415  0043EA  2643               	addwf	btemp+10,f,c
  3416  0043EC  0EFC               	movlw	-4
  3417  0043EE  50E3               	movf	plusw1,w,c
  3418  0043F0  2244               	addwfc	btemp+11,f,c
  3419  0043F2  0EFF               	movlw	255
  3420  0043F4  2443               	addwf	btemp+10,w,c
  3421  0043F6  6ED9               	movwf	fsr2l,c
  3422  0043F8  0EFF               	movlw	255
  3423  0043FA  2044               	addwfc	btemp+11,w,c
  3424  0043FC  6EDA               	movwf	fsr2h,c
  3425  0043FE  50DF               	movf	indf2,w,c
  3426  004400  6EE6               	movwf	postinc1,c
  3427  004402  ECC7  F02D         	call	_UART1_Write	;wreg free
  3428  004406                     l8495:
  3429                           
  3430                           ; BSR set to: 57
  3431                           ;gemsecs.c: 488:   }
  3432                           ;stkvar	_i @ sp[(-5)+4]
  3433  004406  0EFF               	movlw	-1
  3434  004408  06E3               	decf	plusw1,f,c
  3435  00440A  D7CC               	goto	l8485
  3436  00440C                     l8501:
  3437                           
  3438                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3439  00440C  0EF6               	movlw	-10
  3440  00440E  50E3               	movf	plusw1,w,c
  3441  004410  6E43               	movwf	btemp+10,c
  3442  004412  6A44               	clrf	btemp+11,c
  3443                           
  3444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3445                           ; Switch size 1, requested type "simple"
  3446                           ; Number of cases is 1, Range of values is 0 to 0
  3447                           ; switch strategies available:
  3448                           ; Name         Instructions Cycles
  3449                           ; simple_byte            4     3 (average)
  3450                           ;	Chosen strategy is simple_byte
  3451  004414  5044               	movf	btemp+11,w,c
  3452  004416  0A00               	xorlw	0	; case 0
  3453  004418  A4D8               	btfss	status,2,c
  3454  00441A  D7B7               	goto	l8481
  3455                           
  3456                           ; Switch size 1, requested type "simple"
  3457                           ; Number of cases is 2, Range of values is 1 to 2
  3458                           ; switch strategies available:
  3459                           ; Name         Instructions Cycles
  3460                           ; simple_byte            7     4 (average)
  3461                           ;	Chosen strategy is simple_byte
  3462  00441C  5043               	movf	btemp+10,w,c
  3463  00441E  0A01               	xorlw	1	; case 1
  3464  004420  B4D8               	btfsc	status,2,c
  3465  004422  D7B3               	goto	l8481
  3466  004424  0A03               	xorlw	3	; case 2
  3467  004426  B4D8               	btfsc	status,2,c
  3468  004428  D76F               	goto	l8463
  3469  00442A  D7AF               	goto	l8481
  3470  00442C                     l1705:
  3471                           
  3472                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3473  00442C  0EF6               	movlw	246
  3474  00442E  26E1               	addwf	fsr1l,f,c
  3475  004430  0EFF               	movlw	255
  3476  004432  22E2               	addwfc	fsr1h,f,c
  3477  004434  0012               	return		;funcret
  3478  004436                     __end_of_secs_send:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _block_checksum *****************
  3482 ;; Defined at:
  3483 ;;		line 18 in file "gemsecs.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  byte_block      2  [STACK] PTR unsigned char 
  3486 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3487 ;;		 -> H13(16), H12(30), H10(91), 
  3488 ;;  byte_count      2  [STACK] unsigned short 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               2  [STACK] unsigned short 
  3491 ;;  sum             2  [STACK] unsigned short 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2  [STACK] unsigned short 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3496 ;; Tracked objects:
  3497 ;;		On entry : 3F/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    3
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_secs_send
  3512 ;; This function uses a reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text3
  3516  004D54                     __ptext3:
  3517                           	opt callstack 0
  3518  004D54                     _block_checksum:
  3519                           	opt callstack 0
  3520                           
  3521                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3522  004D54  52E6               	movf	postinc1,f,c
  3523  004D56  52E6               	movf	postinc1,f,c
  3524  004D58  52E6               	movf	postinc1,f,c
  3525  004D5A  52E6               	movf	postinc1,f,c
  3526                           
  3527                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  3528                           ;stkvar	_sum @ sp[(-4)+2]
  3529                           
  3530                           ;incstack = 0
  3531  004D5C  0EFE               	movlw	-2
  3532  004D5E  6AE3               	clrf	plusw1,c
  3533  004D60  0EFF               	movlw	-1
  3534  004D62  6AE3               	clrf	plusw1,c
  3535                           
  3536                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  3537                           ;stkvar	_i @ sp[(-4)+0]
  3538  004D64  0EFC               	movlw	-4
  3539  004D66  6AE3               	clrf	plusw1,c
  3540  004D68  0EFD               	movlw	-3
  3541  004D6A  6AE3               	clrf	plusw1,c
  3542  004D6C  D039               	goto	l8383
  3543  004D6E                     l8379:
  3544                           
  3545                           ;gemsecs.c: 23:   sum += byte_block[i];
  3546                           ;stkvar	_i @ sp[(-4)+0]
  3547  004D6E  0EFC               	movlw	-4
  3548  004D70  006F FF8C  F043    	movff	plusw1,btemp+10
  3549  004D76  0EFD               	movlw	-3
  3550  004D78  006F FF8C  F044    	movff	plusw1,btemp+11
  3551                           
  3552                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3553  004D7E  0EFA               	movlw	-6
  3554  004D80  006F FF8C  F041    	movff	plusw1,btemp+8
  3555  004D86  0EFB               	movlw	-5
  3556  004D88  006F FF8C  F042    	movff	plusw1,btemp+9
  3557  004D8E  5043               	movf	btemp+10,w,c
  3558  004D90  2441               	addwf	btemp+8,w,c
  3559  004D92  6ED9               	movwf	fsr2l,c
  3560  004D94  5044               	movf	btemp+11,w,c
  3561  004D96  2042               	addwfc	btemp+9,w,c
  3562  004D98  6EDA               	movwf	fsr2h,c
  3563  004D9A  50DF               	movf	indf2,w,c
  3564  004D9C  6E44               	movwf	btemp+11,c
  3565                           
  3566                           ;stkvar	_sum @ sp[(-4)+2]
  3567  004D9E  0EFE               	movlw	-2
  3568  004DA0  50E3               	movf	plusw1,w,c
  3569  004DA2  2444               	addwf	btemp+11,w,c
  3570  004DA4  6E39               	movwf	btemp,c
  3571  004DA6  0EFE               	movlw	-2
  3572  004DA8  0060  F0E7  FFE3   	movff	btemp,plusw1
  3573  004DAE  6A39               	clrf	btemp,c
  3574  004DB0  0EFF               	movlw	-1
  3575  004DB2  50E3               	movf	plusw1,w,c
  3576  004DB4  2239               	addwfc	btemp,f,c
  3577  004DB6  0EFF               	movlw	-1
  3578  004DB8  0060  F0E7  FFE3   	movff	btemp,plusw1
  3579                           
  3580                           ;gemsecs.c: 24:  }
  3581                           ;stkvar	_i @ sp[(-4)+0]
  3582  004DBE  0EFC               	movlw	-4
  3583  004DC0  50E3               	movf	plusw1,w,c
  3584  004DC2  0F01               	addlw	1
  3585  004DC4  6E39               	movwf	btemp,c
  3586  004DC6  0EFC               	movlw	-4
  3587  004DC8  0060  F0E7  FFE3   	movff	btemp,plusw1
  3588  004DCE  6A39               	clrf	btemp,c
  3589  004DD0  0EFD               	movlw	-3
  3590  004DD2  50E3               	movf	plusw1,w,c
  3591  004DD4  2039               	addwfc	btemp,w,c
  3592  004DD6  6E39               	movwf	btemp,c
  3593  004DD8  0EFD               	movlw	-3
  3594  004DDA  0060  F0E7  FFE3   	movff	btemp,plusw1
  3595  004DE0                     l8383:
  3596                           
  3597                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3598  004DE0  0EF8               	movlw	-8
  3599  004DE2  006F FF8C  F043    	movff	plusw1,btemp+10
  3600  004DE8  0EF9               	movlw	-7
  3601  004DEA  006F FF8C  F044    	movff	plusw1,btemp+11
  3602                           
  3603                           ;stkvar	_i @ sp[(-4)+0]
  3604  004DF0  0EFC               	movlw	-4
  3605  004DF2  006F FF8C  F041    	movff	plusw1,btemp+8
  3606  004DF8  0EFD               	movlw	-3
  3607  004DFA  006F FF8C  F042    	movff	plusw1,btemp+9
  3608  004E00  5043               	movf	btemp+10,w,c
  3609  004E02  5C41               	subwf	btemp+8,w,c
  3610  004E04  5044               	movf	btemp+11,w,c
  3611  004E06  5842               	subwfb	btemp+9,w,c
  3612  004E08  A0D8               	btfss	status,0,c
  3613  004E0A  D7B1               	goto	l8379
  3614                           
  3615                           ;gemsecs.c: 29:  return sum;
  3616                           ;stkvar	_sum @ sp[(-4)+2]
  3617  004E0C  0EFE               	movlw	-2
  3618  004E0E  006F FF8C  F039    	movff	plusw1,btemp
  3619  004E14  0EFF               	movlw	-1
  3620  004E16  006F FF8C  F03A    	movff	plusw1,btemp+1
  3621                           
  3622                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3623  004E1C  0EF8               	movlw	248
  3624  004E1E  26E1               	addwf	fsr1l,f,c
  3625  004E20  0EFF               	movlw	255
  3626  004E22  22E2               	addwfc	fsr1h,f,c
  3627  004E24  0012               	return		;funcret
  3628  004E26                     __end_of_block_checksum:
  3629                           	opt callstack 0
  3630                           
  3631 ;; *************** function _UART2_put_buffer *****************
  3632 ;; Defined at:
  3633 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  bufData         1  [STACK] unsigned char 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1  [STACK] void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 3F/39
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    3
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_secs_send
  3658 ;; This function uses a reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text4
  3662  005E04                     __ptext4:
  3663                           	opt callstack 0
  3664  005E04                     _UART2_put_buffer:
  3665                           	opt callstack 25
  3666                           
  3667                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  3668                           
  3669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3670                           ;incstack = 0
  3671  005E04  0139               	movlb	57	; () banked
  3672  005E06  9596               	bcf	150,2,b	;volatile
  3673                           
  3674                           ; BSR set to: 57
  3675                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  3676                           ;stkvar	_bufData @ sp[(0)+-1]
  3677  005E08  0E00               	movlw	low _uart2RxBuffer
  3678  005E0A  242F               	addwf	_uart2RxHead,w,c	;volatile
  3679  005E0C  6ED9               	movwf	fsr2l,c
  3680  005E0E  6ADA               	clrf	fsr2h,c
  3681  005E10  0E02               	movlw	high _uart2RxBuffer
  3682  005E12  22DA               	addwfc	fsr2h,f,c
  3683  005E14  0EFF               	movlw	-1
  3684  005E16  006F FF8F FFDF     	movff	plusw1,indf2
  3685                           
  3686                           ; BSR set to: 57
  3687  005E1C  2A2F               	incf	_uart2RxHead,f,c	;volatile
  3688                           
  3689                           ; BSR set to: 57
  3690                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  3691  005E1E  0E3F               	movlw	63
  3692  005E20  642F               	cpfsgt	_uart2RxHead,c
  3693  005E22  D001               	goto	l5815
  3694                           
  3695                           ; BSR set to: 57
  3696                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  3697  005E24  6A2F               	clrf	_uart2RxHead,c	;volatile
  3698  005E26                     l5815:
  3699                           
  3700                           ; BSR set to: 57
  3701                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  3702  005E26  2A2D               	incf	_uart2RxCount,f,c	;volatile
  3703                           
  3704                           ; BSR set to: 57
  3705                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  3706  005E28  8596               	bsf	150,2,b	;volatile
  3707                           
  3708                           ; BSR set to: 57
  3709                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3710  005E2A  52E5               	movf	postdec1,f,c
  3711  005E2C  0012               	return		;funcret
  3712  005E2E                     __end_of_UART2_put_buffer:
  3713                           	opt callstack 0
  3714                           
  3715 ;; *************** function _UART2_is_tx_ready *****************
  3716 ;; Defined at:
  3717 ;;		line 142 in file "mcc_generated_files/uart2.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1  [STACK] unsigned char 
  3724 ;; Registers used:
  3725 ;;		btemp
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    3
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_secs_send
  3742 ;; This function uses a reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text5
  3746  0063D6                     __ptext5:
  3747                           	opt callstack 0
  3748  0063D6                     _UART2_is_tx_ready:
  3749                           	opt callstack 25
  3750                           
  3751                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  3752                           
  3753                           ; BSR set to: 57
  3754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3755                           ;incstack = 0
  3756  0063D6  0060  F0C0  F039   	movff	_uart2TxBufferRemaining,btemp	;volatile
  3757                           
  3758                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3759  0063DC  0012               	return		;funcret
  3760  0063DE                     __end_of_UART2_is_tx_ready:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _UART2_Write *****************
  3764 ;; Defined at:
  3765 ;;		line 172 in file "mcc_generated_files/uart2.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  txData          1  [STACK] unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1  [STACK] void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 3F/39
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    3
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_secs_send
  3790 ;; This function uses a reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text6
  3794  005B50                     __ptext6:
  3795                           	opt callstack 0
  3796  005B50                     _UART2_Write:
  3797                           	opt callstack 25
  3798                           
  3799                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3800                           
  3801                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3802                           
  3803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3804                           ;incstack = 0
  3805  005B50  5030               	movf	_uart2TxBufferRemaining,w,c	;volatile
  3806  005B52  B4D8               	btfsc	status,2,c
  3807  005B54  D7FD               	goto	_UART2_Write
  3808                           
  3809                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  3810  005B56  0139               	movlb	57	; () banked
  3811  005B58  B796               	btfsc	150,3,b	;volatile
  3812  005B5A  D005               	goto	l699
  3813                           
  3814                           ; BSR set to: 57
  3815                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  3816                           ;stkvar	_txData @ sp[(0)+-1]
  3817  005B5C  0EFF               	movlw	-1
  3818  005B5E  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  3819                           
  3820                           ;mcc_generated_files/uart2.c: 181:     }
  3821  005B64  D011               	goto	l5803
  3822  005B66                     l699:
  3823                           
  3824                           ; BSR set to: 57
  3825                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  3826  005B66  9796               	bcf	150,3,b	;volatile
  3827                           
  3828                           ; BSR set to: 57
  3829                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  3830                           ;stkvar	_txData @ sp[(0)+-1]
  3831  005B68  0E40               	movlw	low _uart2TxBuffer
  3832  005B6A  2432               	addwf	_uart2TxHead,w,c	;volatile
  3833  005B6C  6ED9               	movwf	fsr2l,c
  3834  005B6E  6ADA               	clrf	fsr2h,c
  3835  005B70  0E02               	movlw	high _uart2TxBuffer
  3836  005B72  22DA               	addwfc	fsr2h,f,c
  3837  005B74  0EFF               	movlw	-1
  3838  005B76  006F FF8F FFDF     	movff	plusw1,indf2
  3839                           
  3840                           ; BSR set to: 57
  3841  005B7C  2A32               	incf	_uart2TxHead,f,c	;volatile
  3842                           
  3843                           ; BSR set to: 57
  3844                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  3845  005B7E  0E3F               	movlw	63
  3846  005B80  6432               	cpfsgt	_uart2TxHead,c
  3847  005B82  D001               	goto	l5801
  3848                           
  3849                           ; BSR set to: 57
  3850                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  3851  005B84  6A32               	clrf	_uart2TxHead,c	;volatile
  3852  005B86                     l5801:
  3853                           
  3854                           ; BSR set to: 57
  3855                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  3856  005B86  0630               	decf	_uart2TxBufferRemaining,f,c	;volatile
  3857  005B88                     l5803:
  3858                           
  3859                           ; BSR set to: 57
  3860                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  3861  005B88  8796               	bsf	150,3,b	;volatile
  3862                           
  3863                           ; BSR set to: 57
  3864                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3865  005B8A  52E5               	movf	postdec1,f,c
  3866  005B8C  0012               	return		;funcret
  3867  005B8E                     __end_of_UART2_Write:
  3868                           	opt callstack 0
  3869                           
  3870 ;; *************** function _UART1_put_buffer *****************
  3871 ;; Defined at:
  3872 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  bufData         1  [STACK] unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1  [STACK] void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/39
  3883 ;;		On exit  : 3F/39
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    3
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_t_protocol
  3897 ;;		_secs_send
  3898 ;; This function uses a reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text7
  3902  005E2E                     __ptext7:
  3903                           	opt callstack 0
  3904  005E2E                     _UART1_put_buffer:
  3905                           	opt callstack 25
  3906                           
  3907                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3908                           
  3909                           ; BSR set to: 57
  3910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3911                           ;incstack = 0
  3912  005E2E  0139               	movlb	57	; () banked
  3913  005E30  9793               	bcf	147,3,b	;volatile
  3914                           
  3915                           ; BSR set to: 57
  3916                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3917                           ;stkvar	_bufData @ sp[(0)+-1]
  3918  005E32  0E80               	movlw	low _uart1RxBuffer
  3919  005E34  2435               	addwf	_uart1RxHead,w,c	;volatile
  3920  005E36  6ED9               	movwf	fsr2l,c
  3921  005E38  6ADA               	clrf	fsr2h,c
  3922  005E3A  0E02               	movlw	high _uart1RxBuffer
  3923  005E3C  22DA               	addwfc	fsr2h,f,c
  3924  005E3E  0EFF               	movlw	-1
  3925  005E40  006F FF8F FFDF     	movff	plusw1,indf2
  3926                           
  3927                           ; BSR set to: 57
  3928  005E46  2A35               	incf	_uart1RxHead,f,c	;volatile
  3929                           
  3930                           ; BSR set to: 57
  3931                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3932  005E48  0E3F               	movlw	63
  3933  005E4A  6435               	cpfsgt	_uart1RxHead,c
  3934  005E4C  D001               	goto	l5775
  3935                           
  3936                           ; BSR set to: 57
  3937                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3938  005E4E  6A35               	clrf	_uart1RxHead,c	;volatile
  3939  005E50                     l5775:
  3940                           
  3941                           ; BSR set to: 57
  3942                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3943  005E50  2A33               	incf	_uart1RxCount,f,c	;volatile
  3944                           
  3945                           ; BSR set to: 57
  3946                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3947  005E52  8793               	bsf	147,3,b	;volatile
  3948                           
  3949                           ; BSR set to: 57
  3950                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3951  005E54  52E5               	movf	postdec1,f,c
  3952  005E56  0012               	return		;funcret
  3953  005E58                     __end_of_UART1_put_buffer:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function _UART1_is_tx_ready *****************
  3957 ;; Defined at:
  3958 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1  [STACK] unsigned char 
  3965 ;; Registers used:
  3966 ;;		btemp
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_secs_send
  3983 ;; This function uses a reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text8
  3987  0063DE                     __ptext8:
  3988                           	opt callstack 0
  3989  0063DE                     _UART1_is_tx_ready:
  3990                           	opt callstack 25
  3991                           
  3992                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3993                           
  3994                           ; BSR set to: 57
  3995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3996                           ;incstack = 0
  3997  0063DE  0060  F0D8  F039   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3998                           
  3999                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4000  0063E4  0012               	return		;funcret
  4001  0063E6                     __end_of_UART1_is_tx_ready:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function _secs_II_message *****************
  4005 ;; Defined at:
  4006 ;;		line 498 in file "gemsecs.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  stream          1  [STACK] unsigned char 
  4009 ;;  function        1  [STACK] unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  7  [STACK] struct response_type
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  4016 ;; Tracked objects:
  4017 ;;		On entry : 3F/0
  4018 ;;		On exit  : 3E/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    3
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_t_protocol
  4032 ;; This function uses a reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text9
  4036  004436                     __ptext9:
  4037                           	opt callstack 0
  4038  004436                     _secs_II_message:
  4039                           	opt callstack 0
  4040                           
  4041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  4042  004436  0E05               	movlw	5
  4043  004438  26E1               	addwf	fsr1l,f,c
  4044  00443A  0E00               	movlw	0
  4045  00443C  22E2               	addwfc	fsr1h,f,c
  4046                           
  4047                           ;gemsecs.c: 498: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 499: {;gemsecs.c: 500:  static response_type block;;gemsecs.c: 502:  V.abort = LINK_
      +                          ERROR_NONE;
  4048                           
  4049                           ;incstack = 0
  4050  00443E  0E0A               	movlw	10
  4051  004440  0100               	movlb	0	; () banked
  4052  004442  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;gemsecs.c: 503:  V.queue = 0;
  4056  004444  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;gemsecs.c: 504:  block.respond = 0;
  4060  004446  9007               	bcf	secs_II_message@block+6,0,c
  4061                           
  4062                           ;gemsecs.c: 506:  switch (stream) {
  4063  004448  D0F3               	goto	l6529
  4064  00444A                     l6397:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;gemsecs.c: 510:    block.header = (uint8_t*) & H12[0];
  4068  00444A  0E62               	movlw	low _H12
  4069  00444C  6E01               	movwf	secs_II_message@block,c
  4070  00444E  0E01               	movlw	high _H12
  4071  004450  6E02               	movwf	secs_II_message@block+1,c
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;gemsecs.c: 511:    block.length = sizeof(header12);
  4075  004452  0E0F               	movlw	15
  4076  004454  6E03               	movwf	secs_II_message@block+2,c
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;gemsecs.c: 512:    H12[0].block.block.systemb = V.systemb;
  4080  004456  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  4081  00445A  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  4082  00445E  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  4083  004462  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;gemsecs.c: 513:    H10[0].block.block.systemb = V.systemb;
  4087  004466  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  4088  00446A  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  4089  00446E  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  4090  004472  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;gemsecs.c: 514:    block.respond = 1;
  4094  004476  8007               	bsf	secs_II_message@block+6,0,c
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;gemsecs.c: 515:    block.reply = (uint8_t*) & H10[0];
  4098  004478  0E07               	movlw	low _H10
  4099  00447A  6E04               	movwf	secs_II_message@block+3,c
  4100  00447C  0E01               	movlw	high _H10
  4101  00447E  6E05               	movwf	secs_II_message@block+4,c
  4102                           
  4103                           ;gemsecs.c: 516:    block.reply_length = sizeof(header10);
  4104  004480  0E0D               	movlw	13
  4105  004482                     L8:
  4106  004482  6E06               	movwf	secs_II_message@block+5,c
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;gemsecs.c: 517:    V.queue = 1;
  4110  004484  89BC               	bsf	(_V+92)& (0+255),4,b	;volatile
  4111                           
  4112                           ;gemsecs.c: 518:    break;
  4113  004486  D0ED               	goto	l6531
  4114  004488                     l6411:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;gemsecs.c: 520:    block.header = (uint8_t*) & H14[0];
  4118  004488  0EAF               	movlw	low _H14
  4119  00448A  6E01               	movwf	secs_II_message@block,c
  4120  00448C  0E01               	movlw	high _H14
  4121  00448E  6E02               	movwf	secs_II_message@block+1,c
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;gemsecs.c: 521:    block.length = sizeof(header14);
  4125  004490  0E11               	movlw	17
  4126  004492  6E03               	movwf	secs_II_message@block+2,c
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;gemsecs.c: 522:    H14[0].block.block.systemb = V.systemb;
  4130  004494  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  4131  004498  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  4132  00449C  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  4133  0044A0  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  4134                           
  4135                           ;gemsecs.c: 523:    break;
  4136  0044A4  D0DE               	goto	l6531
  4137  0044A6                     l6417:
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;gemsecs.c: 525:    block.header = (uint8_t*) & H17[0];
  4141  0044A6  0E9B               	movlw	low _H17
  4142  0044A8  6E01               	movwf	secs_II_message@block,c
  4143  0044AA  0E01               	movlw	high _H17
  4144  0044AC  6E02               	movwf	secs_II_message@block+1,c
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;gemsecs.c: 526:    block.length = sizeof(header17);
  4148  0044AE  0E14               	movlw	20
  4149  0044B0  6E03               	movwf	secs_II_message@block+2,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;gemsecs.c: 527:    H17[0].block.block.systemb = V.systemb;
  4153  0044B2  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  4154  0044B6  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  4155  0044BA  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  4156  0044BE  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;gemsecs.c: 528:    H12[1].block.block.systemb = V.systemb;
  4160  0044C2  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  4161  0044C6  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  4162  0044CA  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  4163  0044CE  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;gemsecs.c: 529:    block.respond = 1;
  4167  0044D2  8007               	bsf	secs_II_message@block+6,0,c
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;gemsecs.c: 530:    block.reply = (uint8_t*) & H12[1];
  4171  0044D4  0E71               	movlw	low (_H12+15)
  4172  0044D6  6E04               	movwf	secs_II_message@block+3,c
  4173  0044D8  0E01               	movlw	high (_H12+15)
  4174  0044DA  6E05               	movwf	secs_II_message@block+4,c
  4175                           
  4176                           ;gemsecs.c: 531:    block.reply_length = sizeof(header12);
  4177  0044DC  0E0F               	movlw	15
  4178  0044DE  D7D1               	goto	L8
  4179  0044E0                     l6431:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;gemsecs.c: 535:    block.header = (uint8_t*) & H10[2];
  4183  0044E0  0E21               	movlw	low (_H10+26)
  4184  0044E2  6E01               	movwf	secs_II_message@block,c
  4185  0044E4  0E01               	movlw	high (_H10+26)
  4186  0044E6  6E02               	movwf	secs_II_message@block+1,c
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;gemsecs.c: 536:    block.length = sizeof(header10);
  4190  0044E8  0E0D               	movlw	13
  4191  0044EA  6E03               	movwf	secs_II_message@block+2,c
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;gemsecs.c: 537:    H10[2].block.block.systemb = V.systemb;
  4195  0044EC  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  4196  0044F0  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  4197  0044F4  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  4198  0044F8  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;gemsecs.c: 538:    V.abort = LINK_ERROR_ABORT;
  4202  0044FC  0E11               	movlw	17
  4203  0044FE  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4204                           
  4205                           ;gemsecs.c: 539:    break;
  4206  004500  D0B0               	goto	l6531
  4207  004502                     l6441:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;stkvar	_function @ sp[(0)+-7]
  4211  004502  0EF9               	movlw	-7
  4212  004504  50E3               	movf	plusw1,w,c
  4213  004506  6E43               	movwf	btemp+10,c
  4214  004508  6A44               	clrf	btemp+11,c
  4215                           
  4216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4217                           ; Switch size 1, requested type "simple"
  4218                           ; Number of cases is 1, Range of values is 0 to 0
  4219                           ; switch strategies available:
  4220                           ; Name         Instructions Cycles
  4221                           ; simple_byte            4     3 (average)
  4222                           ;	Chosen strategy is simple_byte
  4223  00450A  5044               	movf	btemp+11,w,c
  4224  00450C  0A00               	xorlw	0	; case 0
  4225  00450E  A4D8               	btfss	status,2,c
  4226  004510  D7E7               	goto	l6431
  4227                           
  4228                           ; BSR set to: 0
  4229                           ; Switch size 1, requested type "simple"
  4230                           ; Number of cases is 3, Range of values is 1 to 13
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; simple_byte           10     6 (average)
  4234                           ;	Chosen strategy is simple_byte
  4235  004512  5043               	movf	btemp+10,w,c
  4236  004514  0A01               	xorlw	1	; case 1
  4237  004516  B4D8               	btfsc	status,2,c
  4238  004518  D798               	goto	l6397
  4239  00451A  0A02               	xorlw	2	; case 3
  4240  00451C  B4D8               	btfsc	status,2,c
  4241  00451E  D7B4               	goto	l6411
  4242  004520  0A0E               	xorlw	14	; case 13
  4243  004522  B4D8               	btfsc	status,2,c
  4244  004524  D7C0               	goto	l6417
  4245  004526  D7DC               	goto	l6431
  4246  004528                     l6443:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;gemsecs.c: 545:    block.header = (uint8_t*) & H24[0];
  4250  004528  0E80               	movlw	low _H24
  4251  00452A  6E01               	movwf	secs_II_message@block,c
  4252  00452C  0E01               	movlw	high _H24
  4253  00452E  6E02               	movwf	secs_II_message@block+1,c
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;gemsecs.c: 546:    block.length = sizeof(header24);
  4257  004530  0E1B               	movlw	27
  4258  004532  6E03               	movwf	secs_II_message@block+2,c
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;gemsecs.c: 547:    H24[0].block.block.systemb = V.systemb;
  4262  004534  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  4263  004538  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  4264  00453C  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  4265  004540  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;gemsecs.c: 548:    H24[0].data[12] = 12;
  4269  004544  0E0C               	movlw	12
  4270  004546  0101               	movlb	1	; () banked
  4271  004548  6F8E               	movwf	(_H24+14)& (0+255),b
  4272                           
  4273                           ;gemsecs.c: 549:    break;
  4274  00454A  D08B               	goto	l6531
  4275  00454C                     l6461:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;stkvar	_function @ sp[(0)+-7]
  4279  00454C  0EF9               	movlw	-7
  4280  00454E  50E3               	movf	plusw1,w,c
  4281  004550  6E43               	movwf	btemp+10,c
  4282  004552  6A44               	clrf	btemp+11,c
  4283                           
  4284                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4285                           ; Switch size 1, requested type "simple"
  4286                           ; Number of cases is 1, Range of values is 0 to 0
  4287                           ; switch strategies available:
  4288                           ; Name         Instructions Cycles
  4289                           ; simple_byte            4     3 (average)
  4290                           ;	Chosen strategy is simple_byte
  4291  004554  5044               	movf	btemp+11,w,c
  4292  004556  0A00               	xorlw	0	; case 0
  4293  004558  A4D8               	btfss	status,2,c
  4294  00455A  D7C2               	goto	l6431
  4295                           
  4296                           ; BSR set to: 0
  4297                           ; Switch size 1, requested type "simple"
  4298                           ; Number of cases is 1, Range of values is 17 to 17
  4299                           ; switch strategies available:
  4300                           ; Name         Instructions Cycles
  4301                           ; simple_byte            4     3 (average)
  4302                           ;	Chosen strategy is simple_byte
  4303  00455C  5043               	movf	btemp+10,w,c
  4304  00455E  0A11               	xorlw	17	; case 17
  4305  004560  B4D8               	btfsc	status,2,c
  4306  004562  D7E2               	goto	l6443
  4307  004564  D7BD               	goto	l6431
  4308  004566                     l6463:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;gemsecs.c: 561:    block.header = (uint8_t*) & H13[0];
  4312  004566  0EC0               	movlw	low _H13
  4313  004568  6E01               	movwf	secs_II_message@block,c
  4314  00456A  0E01               	movlw	high _H13
  4315  00456C  6E02               	movwf	secs_II_message@block+1,c
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;gemsecs.c: 562:    block.length = sizeof(header13);
  4319  00456E  0E10               	movlw	16
  4320  004570  6E03               	movwf	secs_II_message@block+2,c
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;gemsecs.c: 563:    H13[0].block.block.systemb = V.systemb;
  4324  004572  C0AA  F1C5         	movff	_V+74,_H13+5	;volatile
  4325  004576  C0AB  F1C6         	movff	_V+75,_H13+6	;volatile
  4326  00457A  C0AC  F1C7         	movff	_V+76,_H13+7	;volatile
  4327  00457E  C0AD  F1C8         	movff	_V+77,_H13+8	;volatile
  4328                           
  4329                           ;gemsecs.c: 564:    break;
  4330  004582  D06F               	goto	l6531
  4331  004584                     l6479:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;stkvar	_function @ sp[(0)+-7]
  4335  004584  0EF9               	movlw	-7
  4336  004586  50E3               	movf	plusw1,w,c
  4337  004588  6E43               	movwf	btemp+10,c
  4338  00458A  6A44               	clrf	btemp+11,c
  4339                           
  4340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4341                           ; Switch size 1, requested type "simple"
  4342                           ; Number of cases is 1, Range of values is 0 to 0
  4343                           ; switch strategies available:
  4344                           ; Name         Instructions Cycles
  4345                           ; simple_byte            4     3 (average)
  4346                           ;	Chosen strategy is simple_byte
  4347  00458C  5044               	movf	btemp+11,w,c
  4348  00458E  0A00               	xorlw	0	; case 0
  4349  004590  A4D8               	btfss	status,2,c
  4350  004592  D7A6               	goto	l6431
  4351                           
  4352                           ; BSR set to: 0
  4353                           ; Switch size 1, requested type "simple"
  4354                           ; Number of cases is 1, Range of values is 11 to 11
  4355                           ; switch strategies available:
  4356                           ; Name         Instructions Cycles
  4357                           ; simple_byte            4     3 (average)
  4358                           ;	Chosen strategy is simple_byte
  4359  004594  5043               	movf	btemp+10,w,c
  4360  004596  0A0B               	xorlw	11	; case 11
  4361  004598  B4D8               	btfsc	status,2,c
  4362  00459A  D7E5               	goto	l6463
  4363  00459C  D7A1               	goto	l6431
  4364  00459E                     l6491:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;stkvar	_function @ sp[(0)+-7]
  4368  00459E  0EF9               	movlw	-7
  4369  0045A0  50E3               	movf	plusw1,w,c
  4370  0045A2  6E43               	movwf	btemp+10,c
  4371  0045A4  6A44               	clrf	btemp+11,c
  4372                           
  4373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4374                           ; Switch size 1, requested type "simple"
  4375                           ; Number of cases is 1, Range of values is 0 to 0
  4376                           ; switch strategies available:
  4377                           ; Name         Instructions Cycles
  4378                           ; simple_byte            4     3 (average)
  4379                           ;	Chosen strategy is simple_byte
  4380  0045A6  5044               	movf	btemp+11,w,c
  4381  0045A8  0A00               	xorlw	0	; case 0
  4382  0045AA  A4D8               	btfss	status,2,c
  4383  0045AC  D799               	goto	l6431
  4384                           
  4385                           ; BSR set to: 0
  4386                           ; Switch size 1, requested type "simple"
  4387                           ; Number of cases is 7, Range of values is 1 to 13
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte           22    12 (average)
  4391                           ;	Chosen strategy is simple_byte
  4392  0045AE  5043               	movf	btemp+10,w,c
  4393  0045B0  0A01               	xorlw	1	; case 1
  4394  0045B2  B4D8               	btfsc	status,2,c
  4395  0045B4  D056               	goto	l6531
  4396  0045B6  0A02               	xorlw	2	; case 3
  4397  0045B8  B4D8               	btfsc	status,2,c
  4398  0045BA  D053               	goto	l6531
  4399  0045BC  0A06               	xorlw	6	; case 5
  4400  0045BE  B4D8               	btfsc	status,2,c
  4401  0045C0  D050               	goto	l6531
  4402  0045C2  0A02               	xorlw	2	; case 7
  4403  0045C4  B4D8               	btfsc	status,2,c
  4404  0045C6  D04D               	goto	l6531
  4405  0045C8  0A0E               	xorlw	14	; case 9
  4406  0045CA  B4D8               	btfsc	status,2,c
  4407  0045CC  D04A               	goto	l6531
  4408  0045CE  0A02               	xorlw	2	; case 11
  4409  0045D0  B4D8               	btfsc	status,2,c
  4410  0045D2  D047               	goto	l6531
  4411  0045D4  0A06               	xorlw	6	; case 13
  4412  0045D6  B4D8               	btfsc	status,2,c
  4413  0045D8  D044               	goto	l6531
  4414  0045DA  D782               	goto	l6431
  4415  0045DC                     l6493:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;gemsecs.c: 600:    block.header = (uint8_t*) & H12[0];
  4419  0045DC  0E62               	movlw	low _H12
  4420  0045DE  6E01               	movwf	secs_II_message@block,c
  4421  0045E0  0E01               	movlw	high _H12
  4422  0045E2  6E02               	movwf	secs_II_message@block+1,c
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;gemsecs.c: 601:    block.length = sizeof(header12);
  4426  0045E4  0E0F               	movlw	15
  4427  0045E6  6E03               	movwf	secs_II_message@block+2,c
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;gemsecs.c: 602:    H12[0].block.block.systemb = V.systemb;
  4431  0045E8  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  4432  0045EC  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  4433  0045F0  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  4434  0045F4  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;gemsecs.c: 603:    H53[0].block.block.systemb = V.systemb;
  4438  0045F8  C0AA  F3B3         	movff	_V+74,_H53+45	;volatile
  4439  0045FC  C0AB  F3B4         	movff	_V+75,_H53+46	;volatile
  4440  004600  C0AC  F3B5         	movff	_V+76,_H53+47	;volatile
  4441  004604  C0AD  F3B6         	movff	_V+77,_H53+48	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;gemsecs.c: 604:    block.respond = 1;
  4445  004608  8007               	bsf	secs_II_message@block+6,0,c
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;gemsecs.c: 605:    block.reply = (uint8_t*) & H53[0];
  4449  00460A  0E86               	movlw	low _H53
  4450  00460C  6E04               	movwf	secs_II_message@block+3,c
  4451  00460E  0E03               	movlw	high _H53
  4452  004610  6E05               	movwf	secs_II_message@block+4,c
  4453                           
  4454                           ;gemsecs.c: 606:    block.reply_length = sizeof(header53);
  4455  004612  0E38               	movlw	56
  4456  004614  D736               	goto	L8
  4457  004616                     l6517:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;stkvar	_function @ sp[(0)+-7]
  4461  004616  0EF9               	movlw	-7
  4462  004618  50E3               	movf	plusw1,w,c
  4463  00461A  6E43               	movwf	btemp+10,c
  4464  00461C  6A44               	clrf	btemp+11,c
  4465                           
  4466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4467                           ; Switch size 1, requested type "simple"
  4468                           ; Number of cases is 1, Range of values is 0 to 0
  4469                           ; switch strategies available:
  4470                           ; Name         Instructions Cycles
  4471                           ; simple_byte            4     3 (average)
  4472                           ;	Chosen strategy is simple_byte
  4473  00461E  5044               	movf	btemp+11,w,c
  4474  004620  0A00               	xorlw	0	; case 0
  4475  004622  A4D8               	btfss	status,2,c
  4476  004624  D75D               	goto	l6431
  4477                           
  4478                           ; BSR set to: 0
  4479                           ; Switch size 1, requested type "simple"
  4480                           ; Number of cases is 1, Range of values is 1 to 1
  4481                           ; switch strategies available:
  4482                           ; Name         Instructions Cycles
  4483                           ; simple_byte            4     3 (average)
  4484                           ;	Chosen strategy is simple_byte
  4485  004626  5043               	movf	btemp+10,w,c
  4486  004628  0A01               	xorlw	1	; case 1
  4487  00462A  B4D8               	btfsc	status,2,c
  4488  00462C  D7D7               	goto	l6493
  4489  00462E  D758               	goto	l6431
  4490  004630                     l6529:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;stkvar	_stream @ sp[(0)+-6]
  4494  004630  0EFA               	movlw	-6
  4495  004632  50E3               	movf	plusw1,w,c
  4496  004634  6E43               	movwf	btemp+10,c
  4497  004636  6A44               	clrf	btemp+11,c
  4498                           
  4499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4500                           ; Switch size 1, requested type "simple"
  4501                           ; Number of cases is 1, Range of values is 0 to 0
  4502                           ; switch strategies available:
  4503                           ; Name         Instructions Cycles
  4504                           ; simple_byte            4     3 (average)
  4505                           ;	Chosen strategy is simple_byte
  4506  004638  5044               	movf	btemp+11,w,c
  4507  00463A  0A00               	xorlw	0	; case 0
  4508  00463C  A4D8               	btfss	status,2,c
  4509  00463E  D750               	goto	l6431
  4510                           
  4511                           ; BSR set to: 0
  4512                           ; Switch size 1, requested type "simple"
  4513                           ; Number of cases is 5, Range of values is 1 to 10
  4514                           ; switch strategies available:
  4515                           ; Name         Instructions Cycles
  4516                           ; simple_byte           16     9 (average)
  4517                           ;	Chosen strategy is simple_byte
  4518  004640  5043               	movf	btemp+10,w,c
  4519  004642  0A01               	xorlw	1	; case 1
  4520  004644  B4D8               	btfsc	status,2,c
  4521  004646  D75D               	goto	l6441
  4522  004648  0A03               	xorlw	3	; case 2
  4523  00464A  B4D8               	btfsc	status,2,c
  4524  00464C  D77F               	goto	l6461
  4525  00464E  0A04               	xorlw	4	; case 6
  4526  004650  B4D8               	btfsc	status,2,c
  4527  004652  D798               	goto	l6479
  4528  004654  0A0F               	xorlw	15	; case 9
  4529  004656  B4D8               	btfsc	status,2,c
  4530  004658  D7A2               	goto	l6491
  4531  00465A  0A03               	xorlw	3	; case 10
  4532  00465C  B4D8               	btfsc	status,2,c
  4533  00465E  D7DB               	goto	l6517
  4534  004660  D73F               	goto	l6431
  4535  004662                     l6531:
  4536                           
  4537                           ;gemsecs.c: 625:  return(block);
  4538  004662  EE20  F001         	lfsr	2,secs_II_message@block
  4539                           
  4540                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4541  004666  0E07               	movlw	7
  4542  004668  6E39               	movwf	btemp,c
  4543  00466A  0EF9               	movlw	-7
  4544  00466C                     us348999:
  4545  00466C  006F FF7B FFE3     	movff	postinc2,plusw1
  4546  004672  28E8               	incf	wreg,w,c
  4547  004674  2E39               	decfsz	btemp,f,c
  4548  004676  D7FA               	bra	us348999
  4549                           
  4550                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4551  004678  0012               	return		;funcret
  4552  00467A                     __end_of_secs_II_message:
  4553                           	opt callstack 0
  4554                           
  4555 ;; *************** function _srand *****************
  4556 ;; Defined at:
  4557 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  s               2  [STACK] unsigned int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1  [STACK] void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4566 ;; Tracked objects:
  4567 ;;		On entry : 3F/0
  4568 ;;		On exit  : 3F/1
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    3
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text10
  4586  005CF2                     __ptext10:
  4587                           	opt callstack 0
  4588  005CF2                     _srand:
  4589                           	opt callstack 27
  4590                           
  4591                           ;stkvar	_s @ sp[(0)+-2]
  4592                           
  4593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4594                           ;incstack = 0
  4595  005CF2  0EFE               	movlw	-2
  4596  005CF4  50E3               	movf	plusw1,w,c
  4597  005CF6  0FFF               	addlw	255
  4598  005CF8  6E43               	movwf	btemp+10,c
  4599  005CFA  0EFF               	movlw	-1
  4600  005CFC  006F FF8C  F044    	movff	plusw1,btemp+11
  4601  005D02  0EFF               	movlw	255
  4602  005D04  2244               	addwfc	btemp+11,f,c
  4603  005D06  0060  F10C  F1F0   	movff	btemp+10,_seed
  4604  005D0C  0060  F110  F1F1   	movff	btemp+11,_seed+1
  4605  005D12  0101               	movlb	1	; () banked
  4606  005D14  6BF2               	clrf	(_seed+2)& (0+255),b
  4607  005D16  6BF3               	clrf	(_seed+3)& (0+255),b
  4608  005D18  6BF4               	clrf	(_seed+4)& (0+255),b
  4609  005D1A  6BF5               	clrf	(_seed+5)& (0+255),b
  4610  005D1C  6BF6               	clrf	(_seed+6)& (0+255),b
  4611  005D1E  6BF7               	clrf	(_seed+7)& (0+255),b
  4612                           
  4613                           ; BSR set to: 1
  4614                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4615  005D20  52E5               	movf	postdec1,f,c
  4616  005D22  52E5               	movf	postdec1,f,c
  4617  005D24  0012               	return		;funcret
  4618  005D26                     __end_of_srand:
  4619                           	opt callstack 0
  4620                           
  4621 ;; *************** function _sprintf *****************
  4622 ;; Defined at:
  4623 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  s               1  [STACK] PTR unsigned char 
  4626 ;;		 -> V(98), 
  4627 ;;  fmt             1  [STACK] PTR const unsigned char 
  4628 ;;		 -> STR_15(26), STR_14(26), STR_13(6), STR_12(19), 
  4629 ;;		 -> STR_11(26), STR_10(21), STR_9(18), STR_8(6), 
  4630 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
  4631 ;;		 -> STR_2(12), STR_1(17), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  f               5  [STACK] struct _IO_FILE
  4634 ;;  ap              2  [STACK] PTR void [1]
  4635 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4636 ;;  ret             2    0        int 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2  [STACK] int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4641 ;; Tracked objects:
  4642 ;;		On entry : 4/1
  4643 ;;		On exit  : 3F/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:   11
  4653 ;; This function calls:
  4654 ;;		_vfprintf
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;; This function uses a reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text11
  4661  004FC6                     __ptext11:
  4662                           	opt callstack 0
  4663  004FC6                     _sprintf:
  4664                           	opt callstack 0
  4665                           
  4666                           ; BSR set to: 1
  4667                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4668  004FC6  0E07               	movlw	7
  4669  004FC8  26E1               	addwf	fsr1l,f,c
  4670  004FCA  0E00               	movlw	0
  4671  004FCC  22E2               	addwfc	fsr1h,f,c
  4672                           
  4673                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4674                           
  4675                           ;incstack = 0
  4676  004FCE  0EF6               	movlw	246
  4677  004FD0  24E1               	addwf	fsr1l,w,c
  4678  004FD2  6E43               	movwf	btemp+10,c
  4679  004FD4  0EFF               	movlw	255
  4680  004FD6  20E2               	addwfc	fsr1h,w,c
  4681  004FD8  6E44               	movwf	btemp+11,c
  4682                           
  4683                           ;stkvar	_ap @ sp[(-7)+5]
  4684  004FDA  0EFF               	movlw	-1
  4685  004FDC  0060  F113  FFE3   	movff	btemp+11,plusw1
  4686  004FE2  0EFE               	movlw	-2
  4687  004FE4  0060  F10F  FFE3   	movff	btemp+10,plusw1
  4688                           
  4689                           ;stkvar	_s @ sp[(-7)+-2]
  4690  004FEA  0EF7               	movlw	-9
  4691  004FEC  006F FF8C  F044    	movff	plusw1,btemp+11
  4692                           
  4693                           ;stkvar	_f @ sp[(-7)+0]
  4694  004FF2  0EF9               	movlw	-7
  4695  004FF4  0060  F113  FFE3   	movff	btemp+11,plusw1
  4696                           
  4697                           ;stkvar	_f @ sp[(-7)+0]
  4698  004FFA  0EFA               	movlw	250
  4699  004FFC  24E1               	addwf	fsr1l,w,c
  4700  004FFE  6ED9               	movwf	fsr2l,c
  4701  005000  0EFF               	movlw	255
  4702  005002  20E2               	addwfc	fsr1h,w,c
  4703  005004  6EDA               	movwf	fsr2h,c
  4704  005006  0E00               	movlw	0
  4705  005008  6EDE               	movwf	postinc2,c
  4706  00500A  0E00               	movlw	0
  4707  00500C  6EDD               	movwf	postdec2,c
  4708                           
  4709                           ;stkvar	_f @ sp[(-7)+0]
  4710  00500E  0EFC               	movlw	252
  4711  005010  24E1               	addwf	fsr1l,w,c
  4712  005012  6ED9               	movwf	fsr2l,c
  4713  005014  0EFF               	movlw	255
  4714  005016  20E2               	addwfc	fsr1h,w,c
  4715  005018  6EDA               	movwf	fsr2h,c
  4716  00501A  0E00               	movlw	0
  4717  00501C  6EDE               	movwf	postinc2,c
  4718  00501E  0E00               	movlw	0
  4719  005020  6EDD               	movwf	postdec2,c
  4720                           
  4721                           ;stkvar	_ap @ sp[(-7)+5]
  4722  005022  0EFE               	movlw	254
  4723  005024  24E1               	addwf	fsr1l,w,c
  4724  005026  6E39               	movwf	btemp,c
  4725  005028  0EFF               	movlw	255
  4726  00502A  20E2               	addwfc	fsr1h,w,c
  4727  00502C  6E3A               	movwf	btemp+1,c
  4728  00502E  0060  F0E7  FFE6   	movff	btemp,postinc1
  4729  005034  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  4730                           
  4731                           ;stkvar	_fmt @ sp[(-9)+-3]
  4732  00503A  0EF4               	movlw	-12
  4733  00503C  50E3               	movf	plusw1,w,c
  4734  00503E  6EE6               	movwf	postinc1,c
  4735                           
  4736                           ;stkvar	_f @ sp[(-10)+0]
  4737  005040  0EF6               	movlw	246
  4738  005042  24E1               	addwf	fsr1l,w,c
  4739  005044  6E39               	movwf	btemp,c
  4740  005046  0EFF               	movlw	255
  4741  005048  20E2               	addwfc	fsr1h,w,c
  4742  00504A  6E3A               	movwf	btemp+1,c
  4743  00504C  0060  F0E7  FFE6   	movff	btemp,postinc1
  4744  005052  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  4745  005058  ECE6  F029         	call	_vfprintf	;wreg free
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;stkvar	_f @ sp[(-7)+0]
  4749  00505C  0EFA               	movlw	250
  4750  00505E  24E1               	addwf	fsr1l,w,c
  4751  005060  6ED9               	movwf	fsr2l,c
  4752  005062  0EFF               	movlw	255
  4753  005064  20E2               	addwfc	fsr1h,w,c
  4754  005066  6EDA               	movwf	fsr2h,c
  4755  005068  50DF               	movf	indf2,w,c
  4756  00506A  6E44               	movwf	btemp+11,c
  4757                           
  4758                           ;stkvar	_s @ sp[(-7)+-2]
  4759  00506C  0EF7               	movlw	-9
  4760  00506E  50E3               	movf	plusw1,w,c
  4761  005070  2444               	addwf	btemp+11,w,c
  4762  005072  6ED9               	movwf	fsr2l,c
  4763  005074  6ADA               	clrf	fsr2h,c
  4764  005076  0E00               	movlw	0
  4765  005078  6EDF               	movwf	indf2,c
  4766                           
  4767                           ; BSR set to: 0
  4768                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  4769  00507A  0EF9               	movlw	249
  4770  00507C  26E1               	addwf	fsr1l,f,c
  4771  00507E  0EFF               	movlw	255
  4772  005080  22E2               	addwfc	fsr1h,f,c
  4773  005082  52E5               	movf	postdec1,f,c
  4774  005084  50E7               	movf	indf1,w,c
  4775  005086  5EE1               	subwf	fsr1l,f,c
  4776  005088  0E00               	movlw	0
  4777  00508A  5AE2               	subwfb	fsr1h,f,c
  4778  00508C  0012               	return		;funcret
  4779  00508E                     __end_of_sprintf:
  4780                           	opt callstack 0
  4781                           
  4782 ;; *************** function _r_protocol *****************
  4783 ;; Defined at:
  4784 ;;		line 212 in file "gemsecs.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  r_link          1  [STACK] PTR enum E16173
  4787 ;;		 -> V(98), 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  rxData          1  [STACK] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1  [STACK] enum E16913
  4792 ;; Registers used:
  4793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    5
  4806 ;; This function calls:
  4807 ;;		_StartTimer
  4808 ;;		_TimerDone
  4809 ;;		_UART1_Read
  4810 ;;		_UART1_Write
  4811 ;;		_UART1_is_rx_ready
  4812 ;;		_WaitMs
  4813 ;;		_run_checksum
  4814 ;;		_secs_gem_state
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text12
  4821  003408                     __ptext12:
  4822                           	opt callstack 0
  4823  003408                     _r_protocol:
  4824                           	opt callstack 0
  4825                           
  4826                           ; BSR set to: 0
  4827                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4828  003408  52E6               	movf	postinc1,f,c
  4829                           
  4830                           ;gemsecs.c: 212: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 213: {;gemsecs.
      +                          c: 214:  uint8_t rxData;;gemsecs.c: 215:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 217:  switch (*r_link) {
  4831                           
  4832                           ;incstack = 0
  4833  00340A  D162               	goto	l8749
  4834  00340C                     l8623:
  4835                           
  4836                           ;gemsecs.c: 219:   if (UART1_is_rx_ready()) {
  4837  00340C  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  4838  003410  5039               	movf	btemp,w,c
  4839  003412  B4D8               	btfsc	status,2,c
  4840  003414  D17E               	goto	l8751
  4841                           
  4842                           ;gemsecs.c: 220:    rxData = UART1_Read();
  4843  003416  EC05  F02E         	call	_UART1_Read	;wreg free
  4844                           
  4845                           ;stkvar	_rxData @ sp[(-1)+0]
  4846  00341A  0EFF               	movlw	-1
  4847  00341C  0060  F0E7  FFE3   	movff	btemp,plusw1
  4848                           
  4849                           ; BSR set to: 57
  4850                           ;gemsecs.c: 221:    if (rxData == 0x05) {
  4851                           ;stkvar	_rxData @ sp[(-1)+0]
  4852  003422  0EFF               	movlw	-1
  4853  003424  006F FF8C  F039    	movff	plusw1,btemp
  4854  00342A  0E05               	movlw	5
  4855  00342C  1839               	xorwf	btemp,w,c
  4856  00342E  A4D8               	btfss	status,2,c
  4857  003430  D170               	goto	l8751
  4858                           
  4859                           ; BSR set to: 57
  4860                           ;gemsecs.c: 222:     V.error = LINK_ERROR_NONE;
  4861  003432  0E0A               	movlw	10
  4862  003434  0100               	movlb	0	; () banked
  4863  003436  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;gemsecs.c: 223:     *r_link = LINK_STATE_ENQ;
  4867                           ;stkvar	_r_link @ sp[(-1)+-1]
  4868  003438  0EFE               	movlw	-2
  4869  00343A  50E3               	movf	plusw1,w,c
  4870  00343C  6ED9               	movwf	fsr2l,c
  4871  00343E  6ADA               	clrf	fsr2h,c
  4872  003440  0E01               	movlw	1
  4873  003442  D12D               	goto	L13
  4874  003444                     l1630:
  4875                           
  4876                           ;gemsecs.c: 228:   rxData_l = 0;
  4877  003444  6A2A               	clrf	r_protocol@rxData_l,c
  4878                           
  4879                           ;gemsecs.c: 229:   UART1_Write(0x04);
  4880  003446  0E04               	movlw	4
  4881  003448  6EE6               	movwf	postinc1,c
  4882  00344A  ECC7  F02D         	call	_UART1_Write	;wreg free
  4883                           
  4884                           ; BSR set to: 57
  4885                           ;gemsecs.c: 230:   StartTimer(TMR_T2, 2000);
  4886  00344E  0ED0               	movlw	208
  4887  003450  6EE6               	movwf	postinc1,c
  4888  003452  0E07               	movlw	7
  4889  003454  6EE6               	movwf	postinc1,c
  4890  003456  0E02               	movlw	2
  4891  003458  6EE6               	movwf	postinc1,c
  4892  00345A  EC24  F02E         	call	_StartTimer	;wreg free
  4893                           
  4894                           ;gemsecs.c: 231:   *r_link = LINK_STATE_EOT;
  4895                           ;stkvar	_r_link @ sp[(-1)+-1]
  4896  00345E  0EFE               	movlw	-2
  4897  003460  50E3               	movf	plusw1,w,c
  4898  003462  6ED9               	movwf	fsr2l,c
  4899  003464  6ADA               	clrf	fsr2h,c
  4900  003466  0E02               	movlw	2
  4901  003468  D11A               	goto	L13
  4902  00346A                     l8639:
  4903                           
  4904                           ;gemsecs.c: 241:   if (TimerDone(TMR_T2)) {
  4905  00346A  0E02               	movlw	2
  4906  00346C  6EE6               	movwf	postinc1,c
  4907  00346E  EC93  F030         	call	_TimerDone	;wreg free
  4908  003472  5039               	movf	btemp,w,c
  4909  003474  B4D8               	btfsc	status,2,c
  4910  003476  D019               	goto	l8651
  4911                           
  4912                           ;gemsecs.c: 242:    V.timer_error++;
  4913  003478  0100               	movlb	0	; () banked
  4914  00347A  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  4915  00347C  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;gemsecs.c: 243:    if (!retry--) {
  4919  00347E  065D               	decf	r_protocol@retry,f,c
  4920  003480  285D               	incf	r_protocol@retry,w,c
  4921  003482  A4D8               	btfss	status,2,c
  4922  003484  D00C               	goto	l8649
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;gemsecs.c: 244:     V.error = LINK_ERROR_T2;
  4926  003486  0E0C               	movlw	12
  4927  003488  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4928                           
  4929                           ;gemsecs.c: 245:     V.failed_receive = 1;
  4930  00348A  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  4931  00348C  0BF0               	andlw	-16
  4932  00348E  0901               	iorlw	1
  4933  003490  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;gemsecs.c: 246:     *r_link = LINK_STATE_NAK;
  4937                           ;stkvar	_r_link @ sp[(-1)+-1]
  4938  003492  0EFE               	movlw	-2
  4939  003494  50E3               	movf	plusw1,w,c
  4940  003496  6ED9               	movwf	fsr2l,c
  4941  003498  6ADA               	clrf	fsr2h,c
  4942  00349A  0E05               	movlw	5
  4943  00349C  D100               	goto	L13
  4944  00349E                     l8649:
  4945                           
  4946                           ;gemsecs.c: 248:     *r_link = LINK_STATE_IDLE;
  4947                           ;stkvar	_r_link @ sp[(-1)+-1]
  4948  00349E  0EFE               	movlw	-2
  4949  0034A0  50E3               	movf	plusw1,w,c
  4950  0034A2  6ED9               	movwf	fsr2l,c
  4951  0034A4  6ADA               	clrf	fsr2h,c
  4952  0034A6  0E00               	movlw	0
  4953  0034A8  D0FA               	goto	L13
  4954  0034AA                     l8651:
  4955                           
  4956                           ;gemsecs.c: 251:    if (UART1_is_rx_ready()) {
  4957  0034AA  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  4958  0034AE  5039               	movf	btemp,w,c
  4959  0034B0  B4D8               	btfsc	status,2,c
  4960  0034B2  D12F               	goto	l8751
  4961                           
  4962                           ;gemsecs.c: 252:     rxData = UART1_Read();
  4963  0034B4  EC05  F02E         	call	_UART1_Read	;wreg free
  4964                           
  4965                           ;stkvar	_rxData @ sp[(-1)+0]
  4966  0034B8  0EFF               	movlw	-1
  4967  0034BA  0060  F0E7  FFE3   	movff	btemp,plusw1
  4968                           
  4969                           ; BSR set to: 57
  4970                           ;gemsecs.c: 253:     if (rxData_l == 0) {
  4971  0034C0  502A               	movf	r_protocol@rxData_l,w,c
  4972  0034C2  A4D8               	btfss	status,2,c
  4973  0034C4  D00C               	goto	l8663
  4974                           
  4975                           ; BSR set to: 57
  4976                           ;gemsecs.c: 254:      r_block.length = rxData;
  4977                           ;stkvar	_rxData @ sp[(-1)+0]
  4978  0034C6  0EFF               	movlw	-1
  4979  0034C8  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  4980                           
  4981                           ; BSR set to: 57
  4982                           ;gemsecs.c: 255:      run_checksum(0, 1);
  4983  0034CE  0E01               	movlw	1
  4984  0034D0  6EE6               	movwf	postinc1,c
  4985  0034D2  0E00               	movlw	0
  4986  0034D4  6EE6               	movwf	postinc1,c
  4987  0034D6  EC93  F02E         	call	_run_checksum	;wreg free
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;gemsecs.c: 256:      rxData_l++;
  4991  0034DA  2A2A               	incf	r_protocol@rxData_l,f,c
  4992                           
  4993                           ;gemsecs.c: 257:     } else {
  4994  0034DC  D11A               	goto	l8751
  4995  0034DE                     l8663:
  4996                           
  4997                           ; BSR set to: 57
  4998                           ;gemsecs.c: 261:      if (rxData_l <= sizeof(block10))
  4999  0034DE  0E0B               	movlw	11
  5000  0034E0  602A               	cpfslt	r_protocol@rxData_l,c
  5001  0034E2  D00C               	goto	l8667
  5002                           
  5003                           ; BSR set to: 57
  5004                           ;gemsecs.c: 262:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5005                           ;stkvar	_rxData @ sp[(-1)+0]
  5006  0034E4  502A               	movf	r_protocol@rxData_l,w,c
  5007  0034E6  0820               	sublw	low (_H10+25)
  5008  0034E8  6ED9               	movwf	fsr2l,c
  5009  0034EA  0E00               	movlw	0
  5010  0034EC  A0D8               	btfss	status,0,c
  5011  0034EE  2AE8               	incf	wreg,f,c
  5012  0034F0  0801               	sublw	high (_H10+25)
  5013  0034F2  6EDA               	movwf	fsr2h,c
  5014  0034F4  0EFF               	movlw	-1
  5015  0034F6  006F FF8F FFDF     	movff	plusw1,indf2
  5016  0034FC                     l8667:
  5017                           
  5018                           ; BSR set to: 57
  5019                           ;gemsecs.c: 264:      if (rxData_l == sizeof(block10) + 1)
  5020  0034FC  0E0B               	movlw	11
  5021  0034FE  182A               	xorwf	r_protocol@rxData_l,w,c
  5022  003500  A4D8               	btfss	status,2,c
  5023  003502  D004               	goto	l8671
  5024                           
  5025                           ; BSR set to: 57
  5026                           ;gemsecs.c: 265:       V.ack[2] = rxData;
  5027                           ;stkvar	_rxData @ sp[(-1)+0]
  5028  003504  0EFF               	movlw	-1
  5029  003506  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  5030  00350C                     l8671:
  5031                           
  5032                           ; BSR set to: 57
  5033                           ;gemsecs.c: 266:      if (rxData_l == sizeof(block10) + 2)
  5034  00350C  0E0C               	movlw	12
  5035  00350E  182A               	xorwf	r_protocol@rxData_l,w,c
  5036  003510  A4D8               	btfss	status,2,c
  5037  003512  D004               	goto	l8675
  5038                           
  5039                           ; BSR set to: 57
  5040                           ;gemsecs.c: 267:       V.ack[1] = rxData;
  5041                           ;stkvar	_rxData @ sp[(-1)+0]
  5042  003514  0EFF               	movlw	-1
  5043  003516  006F FF8C  F0BE    	movff	plusw1,_V+94	;volatile
  5044  00351C                     l8675:
  5045                           
  5046                           ; BSR set to: 57
  5047                           ;gemsecs.c: 268:      if (rxData_l == sizeof(block10) + 3)
  5048  00351C  0E0D               	movlw	13
  5049  00351E  182A               	xorwf	r_protocol@rxData_l,w,c
  5050  003520  A4D8               	btfss	status,2,c
  5051  003522  D004               	goto	l8679
  5052                           
  5053                           ; BSR set to: 57
  5054                           ;gemsecs.c: 269:       V.ack[0] = rxData;
  5055                           ;stkvar	_rxData @ sp[(-1)+0]
  5056  003524  0EFF               	movlw	-1
  5057  003526  006F FF8C  F0BD    	movff	plusw1,_V+93	;volatile
  5058  00352C                     l8679:
  5059                           
  5060                           ; BSR set to: 57
  5061                           ;gemsecs.c: 271:      if (rxData_l <= r_block.length)
  5062  00352C  502A               	movf	r_protocol@rxData_l,w,c
  5063  00352E  0100               	movlb	0	; () banked
  5064  003530  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5065  003532  A0D8               	btfss	status,0,c
  5066  003534  D00D               	goto	l8683
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;gemsecs.c: 272:       V.r_checksum = run_checksum(rxData, 0);
  5070  003536  0E00               	movlw	0
  5071  003538  6EE6               	movwf	postinc1,c
  5072                           
  5073                           ;stkvar	_rxData @ sp[(-2)+0]
  5074  00353A  0EFE               	movlw	-2
  5075  00353C  50E3               	movf	plusw1,w,c
  5076  00353E  6EE6               	movwf	postinc1,c
  5077  003540  EC93  F02E         	call	_run_checksum	;wreg free
  5078  003544  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5079  00354A  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5080  003550                     l8683:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;gemsecs.c: 274:      if (rxData_l == r_block.length + 1)
  5084  003550  502A               	movf	r_protocol@rxData_l,w,c
  5085  003552  6E43               	movwf	btemp+10,c
  5086  003554  6A44               	clrf	btemp+11,c
  5087  003556  51CE               	movf	(_r_block+12)& (0+255),w,b
  5088  003558  6E41               	movwf	btemp+8,c
  5089  00355A  6A42               	clrf	btemp+9,c
  5090  00355C  0E01               	movlw	1
  5091  00355E  2641               	addwf	btemp+8,f,c
  5092  003560  0E00               	movlw	0
  5093  003562  2242               	addwfc	btemp+9,f,c
  5094  003564  5043               	movf	btemp+10,w,c
  5095  003566  1841               	xorwf	btemp+8,w,c
  5096  003568  E109               	bnz	l8687
  5097  00356A  5044               	movf	btemp+11,w,c
  5098  00356C  1842               	xorwf	btemp+9,w,c
  5099  00356E  A4D8               	btfss	status,2,c
  5100  003570  D005               	goto	l8687
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;gemsecs.c: 275:       H10[1].checksum = (uint16_t) rxData << 8;
  5104                           ;stkvar	_rxData @ sp[(-1)+0]
  5105  003572  0EFF               	movlw	-1
  5106  003574  50E3               	movf	plusw1,w,c
  5107  003576  0101               	movlb	1	; () banked
  5108  003578  6F15               	movwf	(_H10+14)& (0+255),b
  5109  00357A  6B14               	clrf	(_H10+13)& (0+255),b
  5110  00357C                     l8687:
  5111                           
  5112                           ;gemsecs.c: 276:      if (rxData_l == r_block.length + 2)
  5113  00357C  502A               	movf	r_protocol@rxData_l,w,c
  5114  00357E  6E43               	movwf	btemp+10,c
  5115  003580  6A44               	clrf	btemp+11,c
  5116  003582  0100               	movlb	0	; () banked
  5117  003584  51CE               	movf	(_r_block+12)& (0+255),w,b
  5118  003586  6E41               	movwf	btemp+8,c
  5119  003588  6A42               	clrf	btemp+9,c
  5120  00358A  0E02               	movlw	2
  5121  00358C  2641               	addwf	btemp+8,f,c
  5122  00358E  0E00               	movlw	0
  5123  003590  2242               	addwfc	btemp+9,f,c
  5124  003592  5043               	movf	btemp+10,w,c
  5125  003594  1841               	xorwf	btemp+8,w,c
  5126  003596  E10A               	bnz	l8691
  5127  003598  5044               	movf	btemp+11,w,c
  5128  00359A  1842               	xorwf	btemp+9,w,c
  5129  00359C  A4D8               	btfss	status,2,c
  5130  00359E  D006               	goto	l8691
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;gemsecs.c: 277:       H10[1].checksum += rxData;
  5134                           ;stkvar	_rxData @ sp[(-1)+0]
  5135  0035A0  0EFF               	movlw	-1
  5136  0035A2  50E3               	movf	plusw1,w,c
  5137  0035A4  0101               	movlb	1	; () banked
  5138  0035A6  2714               	addwf	(_H10+13)& (0+255),f,b
  5139  0035A8  0E00               	movlw	0
  5140  0035AA  2315               	addwfc	(_H10+14)& (0+255),f,b
  5141  0035AC                     l8691:
  5142                           
  5143                           ;gemsecs.c: 279:      rxData_l++;
  5144  0035AC  2A2A               	incf	r_protocol@rxData_l,f,c
  5145                           
  5146                           ;gemsecs.c: 280:      if (rxData_l > (r_block.length + 2)) {
  5147  0035AE  502A               	movf	r_protocol@rxData_l,w,c
  5148  0035B0  6E43               	movwf	btemp+10,c
  5149  0035B2  6A44               	clrf	btemp+11,c
  5150  0035B4  0100               	movlb	0	; () banked
  5151  0035B6  51CE               	movf	(_r_block+12)& (0+255),w,b
  5152  0035B8  6E41               	movwf	btemp+8,c
  5153  0035BA  6A42               	clrf	btemp+9,c
  5154  0035BC  0E02               	movlw	2
  5155  0035BE  2641               	addwf	btemp+8,f,c
  5156  0035C0  0E00               	movlw	0
  5157  0035C2  2242               	addwfc	btemp+9,f,c
  5158  0035C4  5043               	movf	btemp+10,w,c
  5159  0035C6  5C41               	subwf	btemp+8,w,c
  5160  0035C8  5042               	movf	btemp+9,w,c
  5161  0035CA  0A80               	xorlw	128
  5162  0035CC  6E39               	movwf	btemp,c
  5163  0035CE  5044               	movf	btemp+11,w,c
  5164  0035D0  0A80               	xorlw	128
  5165  0035D2  5839               	subwfb	btemp,w,c
  5166  0035D4  B0D8               	btfsc	status,0,c
  5167  0035D6  D09D               	goto	l8751
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;gemsecs.c: 281:       if (V.r_checksum == H10[1].checksum) {
  5171  0035D8  0101               	movlb	1	; () banked
  5172  0035DA  5114               	movf	(_H10+13)& (0+255),w,b
  5173  0035DC  0100               	movlb	0	; () banked
  5174  0035DE  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5175  0035E0  E10E               	bnz	l8701
  5176  0035E2  0101               	movlb	1	; () banked
  5177  0035E4  5115               	movf	(_H10+14)& (0+255),w,b
  5178  0035E6  0100               	movlb	0	; () banked
  5179  0035E8  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5180  0035EA  A4D8               	btfss	status,2,c
  5181  0035EC  D008               	goto	l8701
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;gemsecs.c: 282:        *r_link = LINK_STATE_ACK;
  5185                           ;stkvar	_r_link @ sp[(-1)+-1]
  5186  0035EE  0EFE               	movlw	-2
  5187  0035F0  50E3               	movf	plusw1,w,c
  5188  0035F2  6ED9               	movwf	fsr2l,c
  5189  0035F4  6ADA               	clrf	fsr2h,c
  5190  0035F6  0E03               	movlw	3
  5191  0035F8  D052               	goto	L13
  5192  0035FA                     l8699:
  5193  0035FA  EC05  F02E         	call	_UART1_Read	;wreg free
  5194  0035FE                     l8701:
  5195                           
  5196                           ;gemsecs.c: 284:        while (UART1_is_rx_ready())
  5197  0035FE  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  5198  003602  5039               	movf	btemp,w,c
  5199  003604  A4D8               	btfss	status,2,c
  5200  003606  D7F9               	goto	l8699
  5201                           
  5202                           ;gemsecs.c: 286:        WaitMs(500);
  5203  003608  0EF4               	movlw	244
  5204  00360A  6EE6               	movwf	postinc1,c
  5205  00360C  0E01               	movlw	1
  5206  00360E  6EE6               	movwf	postinc1,c
  5207  003610  EC5E  F02E         	call	_WaitMs	;wreg free
  5208                           
  5209                           ;gemsecs.c: 287:        V.error = LINK_ERROR_CHECKSUM;
  5210  003614  0E0F               	movlw	15
  5211  003616  0100               	movlb	0	; () banked
  5212  003618  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;gemsecs.c: 288:        V.checksum_error++;
  5216  00361A  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5217  00361C  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;gemsecs.c: 289:        V.failed_receive = 2;
  5221  00361E  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5222  003620  0BF0               	andlw	-16
  5223  003622  0902               	iorlw	2
  5224  003624  D735               	goto	L14
  5225  003626                     l8713:
  5226                           
  5227                           ;gemsecs.c: 298:   V.stream = H10[1].block.block.stream;
  5228  003626  0101               	movlb	1	; () banked
  5229  003628  511D               	movf	(_H10+22)& (0+255),w,b
  5230  00362A  0B7F               	andlw	127
  5231  00362C  0100               	movlb	0	; () banked
  5232  00362E  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;gemsecs.c: 299:   V.function = H10[1].block.block.function;
  5236  003630  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;gemsecs.c: 300:   V.systemb = H10[1].block.block.systemb;
  5240  003634  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5241  003638  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5242  00363C  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5243  003640  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;gemsecs.c: 301:   V.rbit = H10[1].block.block.rbit;
  5247  003644  0101               	movlb	1	; () banked
  5248  003646  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5249  003648  D003               	bra	u5375
  5250  00364A  0100               	movlb	0	; () banked
  5251  00364C  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  5252  00364E  D002               	bra	u5377
  5253  003650                     u5375:
  5254  003650  0100               	movlb	0	; () banked
  5255  003652  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  5256  003654                     u5377:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;gemsecs.c: 302:   V.wbit = H10[1].block.block.wbit;
  5260  003654  0101               	movlb	1	; () banked
  5261  003656  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5262  003658  D003               	bra	u5385
  5263  00365A  0100               	movlb	0	; () banked
  5264  00365C  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  5265  00365E  D002               	bra	u5387
  5266  003660                     u5385:
  5267  003660  0100               	movlb	0	; () banked
  5268  003662  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  5269  003664                     u5387:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;gemsecs.c: 303:   V.ebit = H10[1].block.block.ebit;
  5273  003664  0101               	movlb	1	; () banked
  5274  003666  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5275  003668  D003               	bra	u5395
  5276  00366A  0100               	movlb	0	; () banked
  5277  00366C  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  5278  00366E  D002               	bra	u5397
  5279  003670                     u5395:
  5280  003670  0100               	movlb	0	; () banked
  5281  003672  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  5282  003674                     u5397:
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;gemsecs.c: 304:   V.g_state = secs_gem_state(V.stream, V.function);
  5286  003674  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5287  003676  6EE6               	movwf	postinc1,c
  5288  003678  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5289  00367A  6EE6               	movwf	postinc1,c
  5290  00367C  EC47  F028         	call	_secs_gem_state	;wreg free
  5291  003680  5039               	movf	btemp,w,c
  5292  003682  0100               	movlb	0	; () banked
  5293  003684  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;gemsecs.c: 305:   UART1_Write(0x06);
  5297  003686  0E06               	movlw	6
  5298  003688  6EE6               	movwf	postinc1,c
  5299  00368A  ECC7  F02D         	call	_UART1_Write	;wreg free
  5300                           
  5301                           ; BSR set to: 57
  5302                           ;gemsecs.c: 306:   V.failed_receive = 0;
  5303  00368E  0EF0               	movlw	-16
  5304  003690  0100               	movlb	0	; () banked
  5305  003692  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;gemsecs.c: 307:   *r_link = LINK_STATE_DONE;
  5309                           ;stkvar	_r_link @ sp[(-1)+-1]
  5310  003694  0EFE               	movlw	-2
  5311  003696  50E3               	movf	plusw1,w,c
  5312  003698  6ED9               	movwf	fsr2l,c
  5313  00369A  6ADA               	clrf	fsr2h,c
  5314  00369C  0E04               	movlw	4
  5315  00369E                     L13:
  5316  00369E  6EDF               	movwf	indf2,c
  5317                           
  5318                           ;gemsecs.c: 308:   break;
  5319  0036A0  D038               	goto	l8751
  5320  0036A2                     l8733:
  5321                           
  5322                           ;gemsecs.c: 310:   UART1_Write(0x15);
  5323  0036A2  0E15               	movlw	21
  5324  0036A4  6EE6               	movwf	postinc1,c
  5325  0036A6  ECC7  F02D         	call	_UART1_Write	;wreg free
  5326                           
  5327                           ; BSR set to: 57
  5328                           ;gemsecs.c: 311:   *r_link = LINK_STATE_ERROR;
  5329                           ;stkvar	_r_link @ sp[(-1)+-1]
  5330  0036AA  0EFE               	movlw	-2
  5331  0036AC  50E3               	movf	plusw1,w,c
  5332  0036AE  6ED9               	movwf	fsr2l,c
  5333  0036B0  6ADA               	clrf	fsr2h,c
  5334  0036B2  0E06               	movlw	6
  5335  0036B4  6EDF               	movwf	indf2,c
  5336                           
  5337                           ;gemsecs.c: 312:   while ((uart1RxCount)) {
  5338  0036B6  D002               	goto	l8739
  5339  0036B8                     l8737:
  5340                           
  5341                           ; BSR set to: 57
  5342                           ;gemsecs.c: 313:    UART1_Read();
  5343  0036B8  EC05  F02E         	call	_UART1_Read	;wreg free
  5344  0036BC                     l8739:
  5345                           
  5346                           ; BSR set to: 57
  5347                           ;gemsecs.c: 312:   while ((uart1RxCount)) {
  5348  0036BC  5033               	movf	_uart1RxCount,w,c	;volatile
  5349  0036BE  A4D8               	btfss	status,2,c
  5350  0036C0  D7FB               	goto	l8737
  5351                           
  5352                           ; BSR set to: 57
  5353                           ;gemsecs.c: 315:   retry = 3;
  5354  0036C2  0E03               	movlw	3
  5355  0036C4  6E5D               	movwf	r_protocol@retry,c
  5356                           
  5357                           ;gemsecs.c: 316:   break;
  5358  0036C6  D025               	goto	l8751
  5359  0036C8                     l8743:
  5360                           
  5361                           ;gemsecs.c: 320:   V.failed_receive = 0;
  5362  0036C8  0EF0               	movlw	-16
  5363  0036CA  0100               	movlb	0	; () banked
  5364  0036CC  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5365  0036CE  D6E7               	goto	l8649
  5366  0036D0                     l8749:
  5367                           
  5368                           ;stkvar	_r_link @ sp[(-1)+-1]
  5369  0036D0  0EFE               	movlw	-2
  5370  0036D2  50E3               	movf	plusw1,w,c
  5371  0036D4  6ED9               	movwf	fsr2l,c
  5372  0036D6  6ADA               	clrf	fsr2h,c
  5373  0036D8  50DF               	movf	indf2,w,c
  5374  0036DA  6E43               	movwf	btemp+10,c
  5375  0036DC  6A44               	clrf	btemp+11,c
  5376                           
  5377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5378                           ; Switch size 1, requested type "simple"
  5379                           ; Number of cases is 1, Range of values is 0 to 0
  5380                           ; switch strategies available:
  5381                           ; Name         Instructions Cycles
  5382                           ; simple_byte            4     3 (average)
  5383                           ;	Chosen strategy is simple_byte
  5384  0036DE  5044               	movf	btemp+11,w,c
  5385  0036E0  0A00               	xorlw	0	; case 0
  5386  0036E2  A4D8               	btfss	status,2,c
  5387  0036E4  D6DC               	goto	l8649
  5388                           
  5389                           ; Switch size 1, requested type "simple"
  5390                           ; Number of cases is 7, Range of values is 0 to 6
  5391                           ; switch strategies available:
  5392                           ; Name         Instructions Cycles
  5393                           ; simple_byte           22    12 (average)
  5394                           ;	Chosen strategy is simple_byte
  5395  0036E6  5043               	movf	btemp+10,w,c
  5396  0036E8  0A00               	xorlw	0	; case 0
  5397  0036EA  B4D8               	btfsc	status,2,c
  5398  0036EC  D68F               	goto	l8623
  5399  0036EE  0A01               	xorlw	1	; case 1
  5400  0036F0  B4D8               	btfsc	status,2,c
  5401  0036F2  D6A8               	goto	l1630
  5402  0036F4  0A03               	xorlw	3	; case 2
  5403  0036F6  B4D8               	btfsc	status,2,c
  5404  0036F8  D6B8               	goto	l8639
  5405  0036FA  0A01               	xorlw	1	; case 3
  5406  0036FC  B4D8               	btfsc	status,2,c
  5407  0036FE  D793               	goto	l8713
  5408  003700  0A07               	xorlw	7	; case 4
  5409  003702  B4D8               	btfsc	status,2,c
  5410  003704  D7E1               	goto	l8743
  5411  003706  0A01               	xorlw	1	; case 5
  5412  003708  B4D8               	btfsc	status,2,c
  5413  00370A  D7CB               	goto	l8733
  5414  00370C  0A03               	xorlw	3	; case 6
  5415  00370E  A4D8               	btfss	status,2,c
  5416  003710  D6C6               	goto	l8649
  5417  003712                     l8751:
  5418                           
  5419                           ;gemsecs.c: 327:  return *r_link;
  5420                           ;stkvar	_r_link @ sp[(-1)+-1]
  5421  003712  0EFE               	movlw	-2
  5422  003714  50E3               	movf	plusw1,w,c
  5423  003716  6ED9               	movwf	fsr2l,c
  5424  003718  6ADA               	clrf	fsr2h,c
  5425  00371A  50DF               	movf	indf2,w,c
  5426  00371C  6E39               	movwf	btemp,c
  5427                           
  5428                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5429  00371E  52E5               	movf	postdec1,f,c
  5430  003720  52E5               	movf	postdec1,f,c
  5431  003722  0012               	return		;funcret
  5432  003724                     __end_of_r_protocol:
  5433                           	opt callstack 0
  5434                           
  5435 ;; *************** function _UART1_Write *****************
  5436 ;; Defined at:
  5437 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  txData          1  [STACK] unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1  [STACK] void 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 3F/39
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    3
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_r_protocol
  5462 ;;		_t_protocol
  5463 ;;		_secs_send
  5464 ;; This function uses a reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text13
  5468  005B8E                     __ptext13:
  5469                           	opt callstack 0
  5470  005B8E                     _UART1_Write:
  5471                           	opt callstack 25
  5472                           
  5473                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5474                           
  5475                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5476                           
  5477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5478                           ;incstack = 0
  5479  005B8E  5036               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5480  005B90  B4D8               	btfsc	status,2,c
  5481  005B92  D7FD               	goto	_UART1_Write
  5482                           
  5483                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5484  005B94  0139               	movlb	57	; () banked
  5485  005B96  B993               	btfsc	147,4,b	;volatile
  5486  005B98  D005               	goto	l579
  5487                           
  5488                           ; BSR set to: 57
  5489                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5490                           ;stkvar	_txData @ sp[(0)+-1]
  5491  005B9A  0EFF               	movlw	-1
  5492  005B9C  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5493                           
  5494                           ;mcc_generated_files/uart1.c: 186:  } else {
  5495  005BA2  D011               	goto	l5763
  5496  005BA4                     l579:
  5497                           
  5498                           ; BSR set to: 57
  5499                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5500  005BA4  9993               	bcf	147,4,b	;volatile
  5501                           
  5502                           ; BSR set to: 57
  5503                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5504                           ;stkvar	_txData @ sp[(0)+-1]
  5505  005BA6  0EC0               	movlw	low _uart1TxBuffer
  5506  005BA8  2438               	addwf	_uart1TxHead,w,c	;volatile
  5507  005BAA  6ED9               	movwf	fsr2l,c
  5508  005BAC  6ADA               	clrf	fsr2h,c
  5509  005BAE  0E02               	movlw	high _uart1TxBuffer
  5510  005BB0  22DA               	addwfc	fsr2h,f,c
  5511  005BB2  0EFF               	movlw	-1
  5512  005BB4  006F FF8F FFDF     	movff	plusw1,indf2
  5513                           
  5514                           ; BSR set to: 57
  5515  005BBA  2A38               	incf	_uart1TxHead,f,c	;volatile
  5516                           
  5517                           ; BSR set to: 57
  5518                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5519  005BBC  0E3F               	movlw	63
  5520  005BBE  6438               	cpfsgt	_uart1TxHead,c
  5521  005BC0  D001               	goto	l5761
  5522                           
  5523                           ; BSR set to: 57
  5524                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5525  005BC2  6A38               	clrf	_uart1TxHead,c	;volatile
  5526  005BC4                     l5761:
  5527                           
  5528                           ; BSR set to: 57
  5529                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5530  005BC4  0636               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5531  005BC6                     l5763:
  5532                           
  5533                           ; BSR set to: 57
  5534                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5535  005BC6  8993               	bsf	147,4,b	;volatile
  5536                           
  5537                           ; BSR set to: 57
  5538                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5539  005BC8  52E5               	movf	postdec1,f,c
  5540  005BCA  0012               	return		;funcret
  5541  005BCC                     __end_of_UART1_Write:
  5542                           	opt callstack 0
  5543                           
  5544 ;; *************** function _m_protocol *****************
  5545 ;; Defined at:
  5546 ;;		line 46 in file "gemsecs.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  m_link          1  [STACK] PTR enum E16173
  5549 ;;		 -> V(98), 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  rxData          1  [STACK] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1  [STACK] enum E16913
  5554 ;; Registers used:
  5555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5565 ;;Total ram usage:        0 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    5
  5568 ;; This function calls:
  5569 ;;		_StartTimer
  5570 ;;		_TimerDone
  5571 ;;		_UART1_Read
  5572 ;;		_UART1_is_rx_ready
  5573 ;;		_UART2_Read
  5574 ;;		_UART2_is_rx_ready
  5575 ;;		_WaitMs
  5576 ;;		_run_checksum
  5577 ;;		_secs_gem_state
  5578 ;; This function is called by:
  5579 ;;		_main
  5580 ;; This function uses a reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text14
  5584  002AF4                     __ptext14:
  5585                           	opt callstack 0
  5586  002AF4                     _m_protocol:
  5587                           	opt callstack 0
  5588                           
  5589                           ; BSR set to: 57
  5590                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5591  002AF4  52E6               	movf	postinc1,f,c
  5592                           
  5593                           ;gemsecs.c: 46: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 47: {;gemsecs.c: 
      +                          48:  uint8_t rxData;;gemsecs.c: 49:  static uint8_t rxData_l = 0;;gemsecs.c: 51:  switch
      +                           (*m_link) {
  5594                           
  5595                           ;incstack = 0
  5596  002AF6  D21E               	goto	l9053
  5597  002AF8                     l8875:
  5598                           
  5599                           ;gemsecs.c: 56:   if (UART1_is_rx_ready()) {
  5600  002AF8  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  5601  002AFC  5039               	movf	btemp,w,c
  5602  002AFE  B4D8               	btfsc	status,2,c
  5603  002B00  D022               	goto	l8889
  5604                           
  5605                           ;gemsecs.c: 57:    rxData = UART1_Read();
  5606  002B02  EC05  F02E         	call	_UART1_Read	;wreg free
  5607                           
  5608                           ;stkvar	_rxData @ sp[(-1)+0]
  5609  002B06  0EFF               	movlw	-1
  5610  002B08  0060  F0E7  FFE3   	movff	btemp,plusw1
  5611                           
  5612                           ; BSR set to: 57
  5613                           ;gemsecs.c: 58:    if (rxData == 0x05) {
  5614                           ;stkvar	_rxData @ sp[(-1)+0]
  5615  002B0E  0EFF               	movlw	-1
  5616  002B10  006F FF8C  F039    	movff	plusw1,btemp
  5617  002B16  0E05               	movlw	5
  5618  002B18  1839               	xorwf	btemp,w,c
  5619  002B1A  A4D8               	btfss	status,2,c
  5620  002B1C  D014               	goto	l8889
  5621                           
  5622                           ; BSR set to: 57
  5623                           ;gemsecs.c: 59:     V.uart = 1;
  5624  002B1E  0E01               	movlw	1
  5625  002B20  0100               	movlb	0	; () banked
  5626  002B22  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;gemsecs.c: 60:     StartTimer(TMR_T2, 2000);
  5630  002B24  0ED0               	movlw	208
  5631  002B26  6EE6               	movwf	postinc1,c
  5632  002B28  0E07               	movlw	7
  5633  002B2A  6EE6               	movwf	postinc1,c
  5634  002B2C  0E02               	movlw	2
  5635  002B2E  6EE6               	movwf	postinc1,c
  5636  002B30  EC24  F02E         	call	_StartTimer	;wreg free
  5637                           
  5638                           ;gemsecs.c: 61:     V.error = LINK_ERROR_NONE;
  5639  002B34  0E0A               	movlw	10
  5640  002B36  0100               	movlb	0	; () banked
  5641  002B38  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;gemsecs.c: 62:     *m_link = LINK_STATE_ENQ;
  5645                           ;stkvar	_m_link @ sp[(-1)+-1]
  5646  002B3A  0EFE               	movlw	-2
  5647  002B3C  50E3               	movf	plusw1,w,c
  5648  002B3E  6ED9               	movwf	fsr2l,c
  5649  002B40  6ADA               	clrf	fsr2h,c
  5650  002B42  0E01               	movlw	1
  5651  002B44  6EDF               	movwf	indf2,c
  5652  002B46                     l8889:
  5653                           
  5654                           ;gemsecs.c: 65:   if (UART2_is_rx_ready()) {
  5655  002B46  ECF3  F031         	call	_UART2_is_rx_ready	;wreg free
  5656  002B4A  5039               	movf	btemp,w,c
  5657  002B4C  B4D8               	btfsc	status,2,c
  5658  002B4E  D213               	goto	l9055
  5659                           
  5660                           ;gemsecs.c: 66:    rxData = UART2_Read();
  5661  002B50  ECE6  F02D         	call	_UART2_Read	;wreg free
  5662                           
  5663                           ;stkvar	_rxData @ sp[(-1)+0]
  5664  002B54  0EFF               	movlw	-1
  5665  002B56  0060  F0E7  FFE3   	movff	btemp,plusw1
  5666                           
  5667                           ; BSR set to: 57
  5668                           ;gemsecs.c: 67:    if (rxData == 0x05) {
  5669                           ;stkvar	_rxData @ sp[(-1)+0]
  5670  002B5C  0EFF               	movlw	-1
  5671  002B5E  006F FF8C  F039    	movff	plusw1,btemp
  5672  002B64  0E05               	movlw	5
  5673  002B66  1839               	xorwf	btemp,w,c
  5674  002B68  A4D8               	btfss	status,2,c
  5675  002B6A  D205               	goto	l9055
  5676                           
  5677                           ; BSR set to: 57
  5678                           ;gemsecs.c: 68:     V.uart = 2;
  5679  002B6C  0E02               	movlw	2
  5680  002B6E  0100               	movlb	0	; () banked
  5681  002B70  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;gemsecs.c: 69:     StartTimer(TMR_T2, 2000);
  5685  002B72  0ED0               	movlw	208
  5686  002B74  6EE6               	movwf	postinc1,c
  5687  002B76  0E07               	movlw	7
  5688  002B78  6EE6               	movwf	postinc1,c
  5689  002B7A  0E02               	movlw	2
  5690  002B7C  6EE6               	movwf	postinc1,c
  5691  002B7E  EC24  F02E         	call	_StartTimer	;wreg free
  5692                           
  5693                           ;gemsecs.c: 70:     V.error = LINK_ERROR_NONE;
  5694  002B82  0E0A               	movlw	10
  5695  002B84  0100               	movlb	0	; () banked
  5696  002B86  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;gemsecs.c: 71:     *m_link = LINK_STATE_ENQ;
  5700                           ;stkvar	_m_link @ sp[(-1)+-1]
  5701  002B88  0EFE               	movlw	-2
  5702  002B8A  50E3               	movf	plusw1,w,c
  5703  002B8C  6ED9               	movwf	fsr2l,c
  5704  002B8E  6ADA               	clrf	fsr2h,c
  5705  002B90  0E01               	movlw	1
  5706  002B92  D1CE               	goto	L20
  5707  002B94                     l1577:
  5708                           
  5709                           ;gemsecs.c: 76:   rxData_l = 0;
  5710  002B94  6A2B               	clrf	m_protocol@rxData_l,c
  5711                           
  5712                           ;gemsecs.c: 90:   V.error = LINK_ERROR_NONE;
  5713  002B96  0E0A               	movlw	10
  5714  002B98  0100               	movlb	0	; () banked
  5715  002B9A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;gemsecs.c: 91:   *m_link = LINK_STATE_EOT;
  5719                           ;stkvar	_m_link @ sp[(-1)+-1]
  5720  002B9C  0EFE               	movlw	-2
  5721  002B9E  50E3               	movf	plusw1,w,c
  5722  002BA0  6ED9               	movwf	fsr2l,c
  5723  002BA2  6ADA               	clrf	fsr2h,c
  5724  002BA4  0E02               	movlw	2
  5725  002BA6  6EDF               	movwf	indf2,c
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;gemsecs.c: 92:   StartTimer(TMR_T2, 2000);
  5729  002BA8  0ED0               	movlw	208
  5730  002BAA  6EE6               	movwf	postinc1,c
  5731  002BAC  0E07               	movlw	7
  5732  002BAE  6EE6               	movwf	postinc1,c
  5733  002BB0  0E02               	movlw	2
  5734  002BB2  6EE6               	movwf	postinc1,c
  5735  002BB4  EC24  F02E         	call	_StartTimer	;wreg free
  5736                           
  5737                           ;gemsecs.c: 93:   break;
  5738  002BB8  D1DE               	goto	l9055
  5739  002BBA                     l8909:
  5740                           
  5741                           ;gemsecs.c: 95:   if (TimerDone(TMR_T2)) {
  5742  002BBA  0E02               	movlw	2
  5743  002BBC  6EE6               	movwf	postinc1,c
  5744  002BBE  EC93  F030         	call	_TimerDone	;wreg free
  5745  002BC2  5039               	movf	btemp,w,c
  5746  002BC4  B4D8               	btfsc	status,2,c
  5747  002BC6  D00F               	goto	l8919
  5748                           
  5749                           ;gemsecs.c: 96:    V.error = LINK_ERROR_T2;
  5750  002BC8  0E0C               	movlw	12
  5751  002BCA  0100               	movlb	0	; () banked
  5752  002BCC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;gemsecs.c: 97:    V.timer_error++;
  5756  002BCE  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  5757  002BD0  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;gemsecs.c: 98:    V.failed_receive = 2;
  5761  002BD2  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5762  002BD4  0BF0               	andlw	-16
  5763  002BD6  0902               	iorlw	2
  5764  002BD8  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;gemsecs.c: 99:    *m_link = LINK_STATE_NAK;
  5768                           ;stkvar	_m_link @ sp[(-1)+-1]
  5769  002BDA  0EFE               	movlw	-2
  5770  002BDC  50E3               	movf	plusw1,w,c
  5771  002BDE  6ED9               	movwf	fsr2l,c
  5772  002BE0  6ADA               	clrf	fsr2h,c
  5773  002BE2  0E05               	movlw	5
  5774  002BE4  D1A5               	goto	L20
  5775  002BE6                     l8919:
  5776                           
  5777                           ;gemsecs.c: 101:    if (UART1_is_rx_ready()) {
  5778  002BE6  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  5779  002BEA  5039               	movf	btemp,w,c
  5780  002BEC  B4D8               	btfsc	status,2,c
  5781  002BEE  D0A7               	goto	l8969
  5782                           
  5783                           ;gemsecs.c: 102:     rxData = UART1_Read();
  5784  002BF0  EC05  F02E         	call	_UART1_Read	;wreg free
  5785                           
  5786                           ;stkvar	_rxData @ sp[(-1)+0]
  5787  002BF4  0EFF               	movlw	-1
  5788  002BF6  0060  F0E7  FFE3   	movff	btemp,plusw1
  5789                           
  5790                           ; BSR set to: 57
  5791                           ;gemsecs.c: 103:     if (rxData_l == 0) {
  5792  002BFC  502B               	movf	m_protocol@rxData_l,w,c
  5793  002BFE  A4D8               	btfss	status,2,c
  5794  002C00  D00C               	goto	l8931
  5795                           
  5796                           ; BSR set to: 57
  5797                           ;gemsecs.c: 104:      r_block.length = rxData;
  5798                           ;stkvar	_rxData @ sp[(-1)+0]
  5799  002C02  0EFF               	movlw	-1
  5800  002C04  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  5801                           
  5802                           ; BSR set to: 57
  5803                           ;gemsecs.c: 105:      run_checksum(0, 1);
  5804  002C0A  0E01               	movlw	1
  5805  002C0C  6EE6               	movwf	postinc1,c
  5806  002C0E  0E00               	movlw	0
  5807  002C10  6EE6               	movwf	postinc1,c
  5808  002C12  EC93  F02E         	call	_run_checksum	;wreg free
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;gemsecs.c: 106:      rxData_l++;
  5812  002C16  2A2B               	incf	m_protocol@rxData_l,f,c
  5813                           
  5814                           ;gemsecs.c: 107:     } else {
  5815  002C18  D092               	goto	l8969
  5816  002C1A                     l8931:
  5817                           
  5818                           ; BSR set to: 57
  5819                           ;gemsecs.c: 111:      if (rxData_l <= sizeof(block10))
  5820  002C1A  0E0B               	movlw	11
  5821  002C1C  602B               	cpfslt	m_protocol@rxData_l,c
  5822  002C1E  D00C               	goto	l8935
  5823                           
  5824                           ; BSR set to: 57
  5825                           ;gemsecs.c: 112:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5826                           ;stkvar	_rxData @ sp[(-1)+0]
  5827  002C20  502B               	movf	m_protocol@rxData_l,w,c
  5828  002C22  0820               	sublw	low (_H10+25)
  5829  002C24  6ED9               	movwf	fsr2l,c
  5830  002C26  0E00               	movlw	0
  5831  002C28  A0D8               	btfss	status,0,c
  5832  002C2A  2AE8               	incf	wreg,f,c
  5833  002C2C  0801               	sublw	high (_H10+25)
  5834  002C2E  6EDA               	movwf	fsr2h,c
  5835  002C30  0EFF               	movlw	-1
  5836  002C32  006F FF8F FFDF     	movff	plusw1,indf2
  5837  002C38                     l8935:
  5838                           
  5839                           ; BSR set to: 57
  5840                           ;gemsecs.c: 113:      if (rxData_l <= r_block.length)
  5841  002C38  502B               	movf	m_protocol@rxData_l,w,c
  5842  002C3A  0100               	movlb	0	; () banked
  5843  002C3C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5844  002C3E  A0D8               	btfss	status,0,c
  5845  002C40  D00D               	goto	l8939
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;gemsecs.c: 114:       V.r_checksum = run_checksum(rxData, 0);
  5849  002C42  0E00               	movlw	0
  5850  002C44  6EE6               	movwf	postinc1,c
  5851                           
  5852                           ;stkvar	_rxData @ sp[(-2)+0]
  5853  002C46  0EFE               	movlw	-2
  5854  002C48  50E3               	movf	plusw1,w,c
  5855  002C4A  6EE6               	movwf	postinc1,c
  5856  002C4C  EC93  F02E         	call	_run_checksum	;wreg free
  5857  002C50  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  5858  002C56  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  5859  002C5C                     l8939:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;gemsecs.c: 116:      if (rxData_l == r_block.length + 1)
  5863  002C5C  502B               	movf	m_protocol@rxData_l,w,c
  5864  002C5E  6E43               	movwf	btemp+10,c
  5865  002C60  6A44               	clrf	btemp+11,c
  5866  002C62  51CE               	movf	(_r_block+12)& (0+255),w,b
  5867  002C64  6E41               	movwf	btemp+8,c
  5868  002C66  6A42               	clrf	btemp+9,c
  5869  002C68  0E01               	movlw	1
  5870  002C6A  2641               	addwf	btemp+8,f,c
  5871  002C6C  0E00               	movlw	0
  5872  002C6E  2242               	addwfc	btemp+9,f,c
  5873  002C70  5043               	movf	btemp+10,w,c
  5874  002C72  1841               	xorwf	btemp+8,w,c
  5875  002C74  E109               	bnz	l8943
  5876  002C76  5044               	movf	btemp+11,w,c
  5877  002C78  1842               	xorwf	btemp+9,w,c
  5878  002C7A  A4D8               	btfss	status,2,c
  5879  002C7C  D005               	goto	l8943
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;gemsecs.c: 117:       H10[1].checksum = (uint16_t) rxData << 8;
  5883                           ;stkvar	_rxData @ sp[(-1)+0]
  5884  002C7E  0EFF               	movlw	-1
  5885  002C80  50E3               	movf	plusw1,w,c
  5886  002C82  0101               	movlb	1	; () banked
  5887  002C84  6F15               	movwf	(_H10+14)& (0+255),b
  5888  002C86  6B14               	clrf	(_H10+13)& (0+255),b
  5889  002C88                     l8943:
  5890                           
  5891                           ;gemsecs.c: 118:      if (rxData_l == r_block.length + 2)
  5892  002C88  502B               	movf	m_protocol@rxData_l,w,c
  5893  002C8A  6E43               	movwf	btemp+10,c
  5894  002C8C  6A44               	clrf	btemp+11,c
  5895  002C8E  0100               	movlb	0	; () banked
  5896  002C90  51CE               	movf	(_r_block+12)& (0+255),w,b
  5897  002C92  6E41               	movwf	btemp+8,c
  5898  002C94  6A42               	clrf	btemp+9,c
  5899  002C96  0E02               	movlw	2
  5900  002C98  2641               	addwf	btemp+8,f,c
  5901  002C9A  0E00               	movlw	0
  5902  002C9C  2242               	addwfc	btemp+9,f,c
  5903  002C9E  5043               	movf	btemp+10,w,c
  5904  002CA0  1841               	xorwf	btemp+8,w,c
  5905  002CA2  E10A               	bnz	l8947
  5906  002CA4  5044               	movf	btemp+11,w,c
  5907  002CA6  1842               	xorwf	btemp+9,w,c
  5908  002CA8  A4D8               	btfss	status,2,c
  5909  002CAA  D006               	goto	l8947
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;gemsecs.c: 119:       H10[1].checksum += rxData;
  5913                           ;stkvar	_rxData @ sp[(-1)+0]
  5914  002CAC  0EFF               	movlw	-1
  5915  002CAE  50E3               	movf	plusw1,w,c
  5916  002CB0  0101               	movlb	1	; () banked
  5917  002CB2  2714               	addwf	(_H10+13)& (0+255),f,b
  5918  002CB4  0E00               	movlw	0
  5919  002CB6  2315               	addwfc	(_H10+14)& (0+255),f,b
  5920  002CB8                     l8947:
  5921                           
  5922                           ;gemsecs.c: 121:      rxData_l++;
  5923  002CB8  2A2B               	incf	m_protocol@rxData_l,f,c
  5924                           
  5925                           ;gemsecs.c: 122:      if (rxData_l > (r_block.length + 2)) {
  5926  002CBA  502B               	movf	m_protocol@rxData_l,w,c
  5927  002CBC  6E43               	movwf	btemp+10,c
  5928  002CBE  6A44               	clrf	btemp+11,c
  5929  002CC0  0100               	movlb	0	; () banked
  5930  002CC2  51CE               	movf	(_r_block+12)& (0+255),w,b
  5931  002CC4  6E41               	movwf	btemp+8,c
  5932  002CC6  6A42               	clrf	btemp+9,c
  5933  002CC8  0E02               	movlw	2
  5934  002CCA  2641               	addwf	btemp+8,f,c
  5935  002CCC  0E00               	movlw	0
  5936  002CCE  2242               	addwfc	btemp+9,f,c
  5937  002CD0  5043               	movf	btemp+10,w,c
  5938  002CD2  5C41               	subwf	btemp+8,w,c
  5939  002CD4  5042               	movf	btemp+9,w,c
  5940  002CD6  0A80               	xorlw	128
  5941  002CD8  6E39               	movwf	btemp,c
  5942  002CDA  5044               	movf	btemp+11,w,c
  5943  002CDC  0A80               	xorlw	128
  5944  002CDE  5839               	subwfb	btemp,w,c
  5945  002CE0  B0D8               	btfsc	status,0,c
  5946  002CE2  D02D               	goto	l8969
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;gemsecs.c: 123:       if (V.r_checksum == H10[1].checksum) {
  5950  002CE4  0101               	movlb	1	; () banked
  5951  002CE6  5114               	movf	(_H10+13)& (0+255),w,b
  5952  002CE8  0100               	movlb	0	; () banked
  5953  002CEA  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5954  002CEC  E10E               	bnz	l8957
  5955  002CEE  0101               	movlb	1	; () banked
  5956  002CF0  5115               	movf	(_H10+14)& (0+255),w,b
  5957  002CF2  0100               	movlb	0	; () banked
  5958  002CF4  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5959  002CF6  A4D8               	btfss	status,2,c
  5960  002CF8  D008               	goto	l8957
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;gemsecs.c: 124:        *m_link = LINK_STATE_ACK;
  5964                           ;stkvar	_m_link @ sp[(-1)+-1]
  5965  002CFA  0EFE               	movlw	-2
  5966  002CFC  50E3               	movf	plusw1,w,c
  5967  002CFE  6ED9               	movwf	fsr2l,c
  5968  002D00  6ADA               	clrf	fsr2h,c
  5969  002D02  0E03               	movlw	3
  5970  002D04  D01B               	goto	L17
  5971  002D06                     l8955:
  5972  002D06  EC05  F02E         	call	_UART1_Read	;wreg free
  5973  002D0A                     l8957:
  5974                           
  5975                           ;gemsecs.c: 126:        while (UART1_is_rx_ready())
  5976  002D0A  ECF7  F031         	call	_UART1_is_rx_ready	;wreg free
  5977  002D0E  5039               	movf	btemp,w,c
  5978  002D10  A4D8               	btfss	status,2,c
  5979  002D12  D7F9               	goto	l8955
  5980                           
  5981                           ;gemsecs.c: 128:        WaitMs(500);
  5982  002D14  0EF4               	movlw	244
  5983  002D16  6EE6               	movwf	postinc1,c
  5984  002D18  0E01               	movlw	1
  5985  002D1A  6EE6               	movwf	postinc1,c
  5986  002D1C  EC5E  F02E         	call	_WaitMs	;wreg free
  5987                           
  5988                           ;gemsecs.c: 129:        V.error = LINK_ERROR_CHECKSUM;
  5989  002D20  0E0F               	movlw	15
  5990  002D22  0100               	movlb	0	; () banked
  5991  002D24  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;gemsecs.c: 130:        V.checksum_error++;
  5995  002D26  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5996  002D28  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;gemsecs.c: 131:        V.failed_receive = 3;
  6000  002D2A  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6001  002D2C  0BF0               	andlw	-16
  6002  002D2E  0903               	iorlw	3
  6003  002D30  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;gemsecs.c: 132:        *m_link = LINK_STATE_NAK;
  6007                           ;stkvar	_m_link @ sp[(-1)+-1]
  6008  002D32  0EFE               	movlw	-2
  6009  002D34  50E3               	movf	plusw1,w,c
  6010  002D36  6ED9               	movwf	fsr2l,c
  6011  002D38  6ADA               	clrf	fsr2h,c
  6012  002D3A  0E05               	movlw	5
  6013  002D3C                     L17:
  6014  002D3C  6EDF               	movwf	indf2,c
  6015  002D3E                     l8969:
  6016                           
  6017                           ;gemsecs.c: 138:    if (UART2_is_rx_ready()) {
  6018  002D3E  ECF3  F031         	call	_UART2_is_rx_ready	;wreg free
  6019  002D42  5039               	movf	btemp,w,c
  6020  002D44  B4D8               	btfsc	status,2,c
  6021  002D46  D117               	goto	l9055
  6022                           
  6023                           ;gemsecs.c: 139:     rxData = UART2_Read();
  6024  002D48  ECE6  F02D         	call	_UART2_Read	;wreg free
  6025                           
  6026                           ;stkvar	_rxData @ sp[(-1)+0]
  6027  002D4C  0EFF               	movlw	-1
  6028  002D4E  0060  F0E7  FFE3   	movff	btemp,plusw1
  6029                           
  6030                           ; BSR set to: 57
  6031                           ;gemsecs.c: 140:     if (rxData_l == 0) {
  6032  002D54  502B               	movf	m_protocol@rxData_l,w,c
  6033  002D56  A4D8               	btfss	status,2,c
  6034  002D58  D00C               	goto	l8981
  6035                           
  6036                           ; BSR set to: 57
  6037                           ;gemsecs.c: 141:      r_block.length = rxData;
  6038                           ;stkvar	_rxData @ sp[(-1)+0]
  6039  002D5A  0EFF               	movlw	-1
  6040  002D5C  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  6041                           
  6042                           ; BSR set to: 57
  6043                           ;gemsecs.c: 142:      run_checksum(0, 1);
  6044  002D62  0E01               	movlw	1
  6045  002D64  6EE6               	movwf	postinc1,c
  6046  002D66  0E00               	movlw	0
  6047  002D68  6EE6               	movwf	postinc1,c
  6048  002D6A  EC93  F02E         	call	_run_checksum	;wreg free
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;gemsecs.c: 143:      rxData_l++;
  6052  002D6E  2A2B               	incf	m_protocol@rxData_l,f,c
  6053                           
  6054                           ;gemsecs.c: 144:     } else {
  6055  002D70  D102               	goto	l9055
  6056  002D72                     l8981:
  6057                           
  6058                           ; BSR set to: 57
  6059                           ;gemsecs.c: 148:      if (rxData_l <= sizeof(block10))
  6060  002D72  0E0B               	movlw	11
  6061  002D74  602B               	cpfslt	m_protocol@rxData_l,c
  6062  002D76  D00C               	goto	l8985
  6063                           
  6064                           ; BSR set to: 57
  6065                           ;gemsecs.c: 149:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6066                           ;stkvar	_rxData @ sp[(-1)+0]
  6067  002D78  502B               	movf	m_protocol@rxData_l,w,c
  6068  002D7A  0820               	sublw	low (_H10+25)
  6069  002D7C  6ED9               	movwf	fsr2l,c
  6070  002D7E  0E00               	movlw	0
  6071  002D80  A0D8               	btfss	status,0,c
  6072  002D82  2AE8               	incf	wreg,f,c
  6073  002D84  0801               	sublw	high (_H10+25)
  6074  002D86  6EDA               	movwf	fsr2h,c
  6075  002D88  0EFF               	movlw	-1
  6076  002D8A  006F FF8F FFDF     	movff	plusw1,indf2
  6077  002D90                     l8985:
  6078                           
  6079                           ; BSR set to: 57
  6080                           ;gemsecs.c: 150:      if (rxData_l <= r_block.length)
  6081  002D90  502B               	movf	m_protocol@rxData_l,w,c
  6082  002D92  0100               	movlb	0	; () banked
  6083  002D94  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  6084  002D96  A0D8               	btfss	status,0,c
  6085  002D98  D00D               	goto	l8989
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;gemsecs.c: 151:       V.r_checksum = run_checksum(rxData, 0);
  6089  002D9A  0E00               	movlw	0
  6090  002D9C  6EE6               	movwf	postinc1,c
  6091                           
  6092                           ;stkvar	_rxData @ sp[(-2)+0]
  6093  002D9E  0EFE               	movlw	-2
  6094  002DA0  50E3               	movf	plusw1,w,c
  6095  002DA2  6EE6               	movwf	postinc1,c
  6096  002DA4  EC93  F02E         	call	_run_checksum	;wreg free
  6097  002DA8  0060  F0E4  F0B3   	movff	btemp,_V+83	;volatile
  6098  002DAE  0060  F0E8  F0B4   	movff	btemp+1,_V+84	;volatile
  6099  002DB4                     l8989:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;gemsecs.c: 153:      if (rxData_l == r_block.length + 1)
  6103  002DB4  502B               	movf	m_protocol@rxData_l,w,c
  6104  002DB6  6E43               	movwf	btemp+10,c
  6105  002DB8  6A44               	clrf	btemp+11,c
  6106  002DBA  51CE               	movf	(_r_block+12)& (0+255),w,b
  6107  002DBC  6E41               	movwf	btemp+8,c
  6108  002DBE  6A42               	clrf	btemp+9,c
  6109  002DC0  0E01               	movlw	1
  6110  002DC2  2641               	addwf	btemp+8,f,c
  6111  002DC4  0E00               	movlw	0
  6112  002DC6  2242               	addwfc	btemp+9,f,c
  6113  002DC8  5043               	movf	btemp+10,w,c
  6114  002DCA  1841               	xorwf	btemp+8,w,c
  6115  002DCC  E109               	bnz	l8993
  6116  002DCE  5044               	movf	btemp+11,w,c
  6117  002DD0  1842               	xorwf	btemp+9,w,c
  6118  002DD2  A4D8               	btfss	status,2,c
  6119  002DD4  D005               	goto	l8993
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;gemsecs.c: 154:       H10[1].checksum = (uint16_t) rxData << 8;
  6123                           ;stkvar	_rxData @ sp[(-1)+0]
  6124  002DD6  0EFF               	movlw	-1
  6125  002DD8  50E3               	movf	plusw1,w,c
  6126  002DDA  0101               	movlb	1	; () banked
  6127  002DDC  6F15               	movwf	(_H10+14)& (0+255),b
  6128  002DDE  6B14               	clrf	(_H10+13)& (0+255),b
  6129  002DE0                     l8993:
  6130                           
  6131                           ;gemsecs.c: 155:      if (rxData_l == r_block.length + 2)
  6132  002DE0  502B               	movf	m_protocol@rxData_l,w,c
  6133  002DE2  6E43               	movwf	btemp+10,c
  6134  002DE4  6A44               	clrf	btemp+11,c
  6135  002DE6  0100               	movlb	0	; () banked
  6136  002DE8  51CE               	movf	(_r_block+12)& (0+255),w,b
  6137  002DEA  6E41               	movwf	btemp+8,c
  6138  002DEC  6A42               	clrf	btemp+9,c
  6139  002DEE  0E02               	movlw	2
  6140  002DF0  2641               	addwf	btemp+8,f,c
  6141  002DF2  0E00               	movlw	0
  6142  002DF4  2242               	addwfc	btemp+9,f,c
  6143  002DF6  5043               	movf	btemp+10,w,c
  6144  002DF8  1841               	xorwf	btemp+8,w,c
  6145  002DFA  E10A               	bnz	l8997
  6146  002DFC  5044               	movf	btemp+11,w,c
  6147  002DFE  1842               	xorwf	btemp+9,w,c
  6148  002E00  A4D8               	btfss	status,2,c
  6149  002E02  D006               	goto	l8997
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;gemsecs.c: 156:       H10[1].checksum += rxData;
  6153                           ;stkvar	_rxData @ sp[(-1)+0]
  6154  002E04  0EFF               	movlw	-1
  6155  002E06  50E3               	movf	plusw1,w,c
  6156  002E08  0101               	movlb	1	; () banked
  6157  002E0A  2714               	addwf	(_H10+13)& (0+255),f,b
  6158  002E0C  0E00               	movlw	0
  6159  002E0E  2315               	addwfc	(_H10+14)& (0+255),f,b
  6160  002E10                     l8997:
  6161                           
  6162                           ;gemsecs.c: 158:      rxData_l++;
  6163  002E10  2A2B               	incf	m_protocol@rxData_l,f,c
  6164                           
  6165                           ;gemsecs.c: 159:      if (rxData_l > (r_block.length + 2)) {
  6166  002E12  502B               	movf	m_protocol@rxData_l,w,c
  6167  002E14  6E43               	movwf	btemp+10,c
  6168  002E16  6A44               	clrf	btemp+11,c
  6169  002E18  0100               	movlb	0	; () banked
  6170  002E1A  51CE               	movf	(_r_block+12)& (0+255),w,b
  6171  002E1C  6E41               	movwf	btemp+8,c
  6172  002E1E  6A42               	clrf	btemp+9,c
  6173  002E20  0E02               	movlw	2
  6174  002E22  2641               	addwf	btemp+8,f,c
  6175  002E24  0E00               	movlw	0
  6176  002E26  2242               	addwfc	btemp+9,f,c
  6177  002E28  5043               	movf	btemp+10,w,c
  6178  002E2A  5C41               	subwf	btemp+8,w,c
  6179  002E2C  5042               	movf	btemp+9,w,c
  6180  002E2E  0A80               	xorlw	128
  6181  002E30  6E39               	movwf	btemp,c
  6182  002E32  5044               	movf	btemp+11,w,c
  6183  002E34  0A80               	xorlw	128
  6184  002E36  5839               	subwfb	btemp,w,c
  6185  002E38  B0D8               	btfsc	status,0,c
  6186  002E3A  D09D               	goto	l9055
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;gemsecs.c: 160:       if (V.r_checksum == H10[1].checksum) {
  6190  002E3C  0101               	movlb	1	; () banked
  6191  002E3E  5114               	movf	(_H10+13)& (0+255),w,b
  6192  002E40  0100               	movlb	0	; () banked
  6193  002E42  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  6194  002E44  E10E               	bnz	l9007
  6195  002E46  0101               	movlb	1	; () banked
  6196  002E48  5115               	movf	(_H10+14)& (0+255),w,b
  6197  002E4A  0100               	movlb	0	; () banked
  6198  002E4C  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  6199  002E4E  A4D8               	btfss	status,2,c
  6200  002E50  D008               	goto	l9007
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;gemsecs.c: 161:        *m_link = LINK_STATE_ACK;
  6204                           ;stkvar	_m_link @ sp[(-1)+-1]
  6205  002E52  0EFE               	movlw	-2
  6206  002E54  50E3               	movf	plusw1,w,c
  6207  002E56  6ED9               	movwf	fsr2l,c
  6208  002E58  6ADA               	clrf	fsr2h,c
  6209  002E5A  0E03               	movlw	3
  6210  002E5C  D069               	goto	L20
  6211  002E5E                     l9005:
  6212  002E5E  ECE6  F02D         	call	_UART2_Read	;wreg free
  6213  002E62                     l9007:
  6214                           
  6215                           ;gemsecs.c: 163:        while (UART2_is_rx_ready())
  6216  002E62  ECF3  F031         	call	_UART2_is_rx_ready	;wreg free
  6217  002E66  5039               	movf	btemp,w,c
  6218  002E68  A4D8               	btfss	status,2,c
  6219  002E6A  D7F9               	goto	l9005
  6220                           
  6221                           ;gemsecs.c: 165:        WaitMs(500);
  6222  002E6C  0EF4               	movlw	244
  6223  002E6E  6EE6               	movwf	postinc1,c
  6224  002E70  0E01               	movlw	1
  6225  002E72  6EE6               	movwf	postinc1,c
  6226  002E74  EC5E  F02E         	call	_WaitMs	;wreg free
  6227                           
  6228                           ;gemsecs.c: 166:        V.error = LINK_ERROR_CHECKSUM;
  6229  002E78  0E0F               	movlw	15
  6230  002E7A  0100               	movlb	0	; () banked
  6231  002E7C  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;gemsecs.c: 167:        V.checksum_error++;
  6235  002E7E  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6236  002E80  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;gemsecs.c: 168:        V.failed_receive = 4;
  6240  002E82  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6241  002E84  0BF0               	andlw	-16
  6242  002E86  0904               	iorlw	4
  6243  002E88  D6A7               	goto	L19
  6244  002E8A                     l9019:
  6245                           
  6246                           ;gemsecs.c: 180:   V.stream = H10[1].block.block.stream;
  6247  002E8A  0101               	movlb	1	; () banked
  6248  002E8C  511D               	movf	(_H10+22)& (0+255),w,b
  6249  002E8E  0B7F               	andlw	127
  6250  002E90  0100               	movlb	0	; () banked
  6251  002E92  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;gemsecs.c: 181:   V.function = H10[1].block.block.function;
  6255  002E94  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;gemsecs.c: 182:   V.systemb = H10[1].block.block.systemb;
  6259  002E98  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  6260  002E9C  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  6261  002EA0  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  6262  002EA4  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;gemsecs.c: 183:   V.rbit = H10[1].block.block.rbit;
  6266  002EA8  0101               	movlb	1	; () banked
  6267  002EAA  AF1F               	btfss	(_H10+24)& (0+255),7,b
  6268  002EAC  D003               	bra	u5795
  6269  002EAE  0100               	movlb	0	; () banked
  6270  002EB0  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  6271  002EB2  D002               	bra	u5797
  6272  002EB4                     u5795:
  6273  002EB4  0100               	movlb	0	; () banked
  6274  002EB6  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  6275  002EB8                     u5797:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;gemsecs.c: 184:   V.wbit = H10[1].block.block.wbit;
  6279  002EB8  0101               	movlb	1	; () banked
  6280  002EBA  AF1D               	btfss	(_H10+22)& (0+255),7,b
  6281  002EBC  D003               	bra	u5805
  6282  002EBE  0100               	movlb	0	; () banked
  6283  002EC0  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  6284  002EC2  D002               	bra	u5807
  6285  002EC4                     u5805:
  6286  002EC4  0100               	movlb	0	; () banked
  6287  002EC6  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  6288  002EC8                     u5807:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;gemsecs.c: 185:   V.ebit = H10[1].block.block.ebit;
  6292  002EC8  0101               	movlb	1	; () banked
  6293  002ECA  AF1B               	btfss	(_H10+20)& (0+255),7,b
  6294  002ECC  D003               	bra	u5815
  6295  002ECE  0100               	movlb	0	; () banked
  6296  002ED0  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  6297  002ED2  D002               	bra	u5817
  6298  002ED4                     u5815:
  6299  002ED4  0100               	movlb	0	; () banked
  6300  002ED6  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  6301  002ED8                     u5817:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;gemsecs.c: 186:   V.failed_receive = 0;
  6305  002ED8  0EF0               	movlw	-16
  6306  002EDA  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;gemsecs.c: 187:   V.g_state = secs_gem_state(V.stream, V.function);
  6310  002EDC  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  6311  002EDE  6EE6               	movwf	postinc1,c
  6312  002EE0  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  6313  002EE2  6EE6               	movwf	postinc1,c
  6314  002EE4  EC47  F028         	call	_secs_gem_state	;wreg free
  6315  002EE8  5039               	movf	btemp,w,c
  6316  002EEA  0100               	movlb	0	; () banked
  6317  002EEC  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;gemsecs.c: 188:   *m_link = LINK_STATE_DONE;
  6321                           ;stkvar	_m_link @ sp[(-1)+-1]
  6322  002EEE  0EFE               	movlw	-2
  6323  002EF0  50E3               	movf	plusw1,w,c
  6324  002EF2  6ED9               	movwf	fsr2l,c
  6325  002EF4  6ADA               	clrf	fsr2h,c
  6326  002EF6  0E04               	movlw	4
  6327  002EF8  D01B               	goto	L20
  6328  002EFA                     l9037:
  6329                           
  6330                           ;gemsecs.c: 191:   *m_link = LINK_STATE_ERROR;
  6331                           ;stkvar	_m_link @ sp[(-1)+-1]
  6332  002EFA  0EFE               	movlw	-2
  6333  002EFC  50E3               	movf	plusw1,w,c
  6334  002EFE  6ED9               	movwf	fsr2l,c
  6335  002F00  6ADA               	clrf	fsr2h,c
  6336  002F02  0E06               	movlw	6
  6337  002F04  6EDF               	movwf	indf2,c
  6338                           
  6339                           ;gemsecs.c: 192:   while ((uart1RxCount)) {
  6340  002F06  D002               	goto	l9041
  6341  002F08                     l9039:
  6342                           
  6343                           ;gemsecs.c: 193:    UART1_Read();
  6344  002F08  EC05  F02E         	call	_UART1_Read	;wreg free
  6345  002F0C                     l9041:
  6346                           
  6347                           ;gemsecs.c: 192:   while ((uart1RxCount)) {
  6348  002F0C  5033               	movf	_uart1RxCount,w,c	;volatile
  6349  002F0E  B4D8               	btfsc	status,2,c
  6350  002F10  D003               	goto	l9045
  6351  002F12  D7FA               	goto	l9039
  6352  002F14                     l9043:
  6353                           
  6354                           ;gemsecs.c: 196:    UART2_Read();
  6355  002F14  ECE6  F02D         	call	_UART2_Read	;wreg free
  6356  002F18                     l9045:
  6357                           
  6358                           ;gemsecs.c: 195:   while ((uart2RxCount)) {
  6359  002F18  502D               	movf	_uart2RxCount,w,c	;volatile
  6360  002F1A  B4D8               	btfsc	status,2,c
  6361  002F1C  D02C               	goto	l9055
  6362  002F1E  D7FA               	goto	l9043
  6363  002F20                     l9047:
  6364                           
  6365                           ;gemsecs.c: 202:   V.failed_receive = 0;
  6366  002F20  0EF0               	movlw	-16
  6367  002F22  0100               	movlb	0	; () banked
  6368  002F24  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6369  002F26                     l9049:
  6370                           
  6371                           ;gemsecs.c: 204:   *m_link = LINK_STATE_IDLE;
  6372                           ;stkvar	_m_link @ sp[(-1)+-1]
  6373  002F26  0EFE               	movlw	-2
  6374  002F28  50E3               	movf	plusw1,w,c
  6375  002F2A  6ED9               	movwf	fsr2l,c
  6376  002F2C  6ADA               	clrf	fsr2h,c
  6377  002F2E  0E00               	movlw	0
  6378  002F30                     L20:
  6379  002F30  6EDF               	movwf	indf2,c
  6380                           
  6381                           ;gemsecs.c: 206:   break;
  6382  002F32  D021               	goto	l9055
  6383  002F34                     l9053:
  6384                           
  6385                           ;stkvar	_m_link @ sp[(-1)+-1]
  6386  002F34  0EFE               	movlw	-2
  6387  002F36  50E3               	movf	plusw1,w,c
  6388  002F38  6ED9               	movwf	fsr2l,c
  6389  002F3A  6ADA               	clrf	fsr2h,c
  6390  002F3C  50DF               	movf	indf2,w,c
  6391  002F3E  6E43               	movwf	btemp+10,c
  6392  002F40  6A44               	clrf	btemp+11,c
  6393                           
  6394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6395                           ; Switch size 1, requested type "simple"
  6396                           ; Number of cases is 1, Range of values is 0 to 0
  6397                           ; switch strategies available:
  6398                           ; Name         Instructions Cycles
  6399                           ; simple_byte            4     3 (average)
  6400                           ;	Chosen strategy is simple_byte
  6401  002F42  5044               	movf	btemp+11,w,c
  6402  002F44  0A00               	xorlw	0	; case 0
  6403  002F46  A4D8               	btfss	status,2,c
  6404  002F48  D7EE               	goto	l9049
  6405                           
  6406                           ; Switch size 1, requested type "simple"
  6407                           ; Number of cases is 7, Range of values is 0 to 6
  6408                           ; switch strategies available:
  6409                           ; Name         Instructions Cycles
  6410                           ; simple_byte           22    12 (average)
  6411                           ;	Chosen strategy is simple_byte
  6412  002F4A  5043               	movf	btemp+10,w,c
  6413  002F4C  0A00               	xorlw	0	; case 0
  6414  002F4E  B4D8               	btfsc	status,2,c
  6415  002F50  D5D3               	goto	l8875
  6416  002F52  0A01               	xorlw	1	; case 1
  6417  002F54  B4D8               	btfsc	status,2,c
  6418  002F56  D61E               	goto	l1577
  6419  002F58  0A03               	xorlw	3	; case 2
  6420  002F5A  B4D8               	btfsc	status,2,c
  6421  002F5C  D62E               	goto	l8909
  6422  002F5E  0A01               	xorlw	1	; case 3
  6423  002F60  B4D8               	btfsc	status,2,c
  6424  002F62  D793               	goto	l9019
  6425  002F64  0A07               	xorlw	7	; case 4
  6426  002F66  B4D8               	btfsc	status,2,c
  6427  002F68  D7DB               	goto	l9047
  6428  002F6A  0A01               	xorlw	1	; case 5
  6429  002F6C  B4D8               	btfsc	status,2,c
  6430  002F6E  D7C5               	goto	l9037
  6431  002F70  0A03               	xorlw	3	; case 6
  6432  002F72  A4D8               	btfss	status,2,c
  6433  002F74  D7D8               	goto	l9049
  6434  002F76                     l9055:
  6435                           
  6436                           ;gemsecs.c: 209:  return *m_link;
  6437                           ;stkvar	_m_link @ sp[(-1)+-1]
  6438  002F76  0EFE               	movlw	-2
  6439  002F78  50E3               	movf	plusw1,w,c
  6440  002F7A  6ED9               	movwf	fsr2l,c
  6441  002F7C  6ADA               	clrf	fsr2h,c
  6442  002F7E  50DF               	movf	indf2,w,c
  6443  002F80  6E39               	movwf	btemp,c
  6444                           
  6445                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6446  002F82  52E5               	movf	postdec1,f,c
  6447  002F84  52E5               	movf	postdec1,f,c
  6448  002F86  0012               	return		;funcret
  6449  002F88                     __end_of_m_protocol:
  6450                           	opt callstack 0
  6451                           
  6452 ;; *************** function _secs_gem_state *****************
  6453 ;; Defined at:
  6454 ;;		line 631 in file "gemsecs.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  stream          1  [STACK] unsigned char 
  6457 ;;  function        1  [STACK] unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1  [STACK] enum E16164
  6462 ;; Registers used:
  6463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6464 ;; Tracked objects:
  6465 ;;		On entry : 3F/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    3
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_m_protocol
  6480 ;;		_r_protocol
  6481 ;; This function uses a reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text15
  6485  00508E                     __ptext15:
  6486                           	opt callstack 0
  6487  00508E                     _secs_gem_state:
  6488                           	opt callstack 26
  6489                           
  6490                           ;gemsecs.c: 631: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          632: {;gemsecs.c: 633:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 635:  sw
      +                          itch (stream) {
  6491                           
  6492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6493                           ;incstack = 0
  6494  00508E  D041               	goto	l6377
  6495  005090                     l6333:
  6496                           
  6497                           ;gemsecs.c: 642:    block = GEM_STATE_REMOTE;
  6498  005090  0E04               	movlw	4
  6499  005092                     L22:
  6500  005092  6E27               	movwf	secs_gem_state@block,c
  6501                           
  6502                           ;gemsecs.c: 643:    V.ticker = 0;
  6503  005094  0100               	movlb	0	; () banked
  6504  005096  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  6505                           
  6506                           ;gemsecs.c: 644:    break;
  6507  005098  D04F               	goto	l6379
  6508  00509A                     l6337:
  6509                           
  6510                           ;gemsecs.c: 649:    block = GEM_STATE_COMM;
  6511  00509A  0E01               	movlw	1
  6512  00509C  6E27               	movwf	secs_gem_state@block,c
  6513                           
  6514                           ;gemsecs.c: 650:    V.ticker = 15;
  6515  00509E  0E0F               	movlw	15
  6516  0050A0  D035               	goto	L24
  6517  0050A2                     l6339:
  6518                           
  6519                           ;gemsecs.c: 656:    block = GEM_STATE_OFFLINE;
  6520  0050A2  0E02               	movlw	2
  6521  0050A4  D7F6               	goto	L22
  6522  0050A6                     l6343:
  6523                           
  6524                           ;gemsecs.c: 663:    block = GEM_STATE_ONLINE;
  6525  0050A6  0E03               	movlw	3
  6526  0050A8  D7F4               	goto	L22
  6527  0050AA                     l6347:
  6528                           
  6529                           ;gemsecs.c: 667:    if (block == GEM_STATE_DISABLE) {
  6530  0050AA  5027               	movf	secs_gem_state@block,w,c
  6531  0050AC  B4D8               	btfsc	status,2,c
  6532  0050AE  D7F5               	goto	l6337
  6533  0050B0  D043               	goto	l6379
  6534  0050B2                     l6353:
  6535                           
  6536                           ;stkvar	_function @ sp[(0)+-2]
  6537  0050B2  0EFE               	movlw	-2
  6538  0050B4  50E3               	movf	plusw1,w,c
  6539  0050B6  6E43               	movwf	btemp+10,c
  6540  0050B8  6A44               	clrf	btemp+11,c
  6541                           
  6542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6543                           ; Switch size 1, requested type "simple"
  6544                           ; Number of cases is 1, Range of values is 0 to 0
  6545                           ; switch strategies available:
  6546                           ; Name         Instructions Cycles
  6547                           ; simple_byte            4     3 (average)
  6548                           ;	Chosen strategy is simple_byte
  6549  0050BA  5044               	movf	btemp+11,w,c
  6550  0050BC  0A00               	xorlw	0	; case 0
  6551  0050BE  A4D8               	btfss	status,2,c
  6552  0050C0  D7F4               	goto	l6347
  6553                           
  6554                           ; Switch size 1, requested type "simple"
  6555                           ; Number of cases is 4, Range of values is 2 to 18
  6556                           ; switch strategies available:
  6557                           ; Name         Instructions Cycles
  6558                           ; simple_byte           13     7 (average)
  6559                           ;	Chosen strategy is simple_byte
  6560  0050C2  5043               	movf	btemp+10,w,c
  6561  0050C4  0A02               	xorlw	2	; case 2
  6562  0050C6  B4D8               	btfsc	status,2,c
  6563  0050C8  D7E3               	goto	l6333
  6564  0050CA  0A0C               	xorlw	12	; case 14
  6565  0050CC  B4D8               	btfsc	status,2,c
  6566  0050CE  D7E5               	goto	l6337
  6567  0050D0  0A1E               	xorlw	30	; case 16
  6568  0050D2  B4D8               	btfsc	status,2,c
  6569  0050D4  D7E6               	goto	l6339
  6570  0050D6  0A02               	xorlw	2	; case 18
  6571  0050D8  B4D8               	btfsc	status,2,c
  6572  0050DA  D7E5               	goto	l6343
  6573  0050DC  D7E6               	goto	l6347
  6574  0050DE                     l6355:
  6575                           
  6576                           ;gemsecs.c: 677:    block = GEM_STATE_ALARM;
  6577  0050DE  0E05               	movlw	5
  6578  0050E0  6E27               	movwf	secs_gem_state@block,c
  6579                           
  6580                           ;gemsecs.c: 678:    if (V.ticker != 45)
  6581  0050E2  0E2D               	movlw	45
  6582  0050E4  0100               	movlb	0	; () banked
  6583  0050E6  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6584  0050E8  B4D8               	btfsc	status,2,c
  6585  0050EA  D026               	goto	l6379
  6586  0050EC                     u3450:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;gemsecs.c: 679:     V.ticker = 15;
  6590  0050EC  0E0F               	movlw	15
  6591  0050EE  D00F               	goto	L23
  6592  0050F0                     l6363:
  6593                           
  6594                           ;gemsecs.c: 686:    block = GEM_STATE_ERROR;
  6595  0050F0  0E06               	movlw	6
  6596  0050F2  6E27               	movwf	secs_gem_state@block,c
  6597                           
  6598                           ;gemsecs.c: 687:    if (V.ticker != 45)
  6599  0050F4  0E2D               	movlw	45
  6600  0050F6  0100               	movlb	0	; () banked
  6601  0050F8  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6602  0050FA  A4D8               	btfss	status,2,c
  6603  0050FC  D7F7               	goto	u3450
  6604  0050FE  D01C               	goto	l6379
  6605  005100                     l6371:
  6606                           
  6607                           ;gemsecs.c: 693:   if (block == GEM_STATE_DISABLE) {
  6608  005100  5027               	movf	secs_gem_state@block,w,c
  6609  005102  A4D8               	btfss	status,2,c
  6610  005104  D019               	goto	l6379
  6611                           
  6612                           ;gemsecs.c: 694:    block = GEM_STATE_COMM;
  6613  005106  0E01               	movlw	1
  6614  005108  6E27               	movwf	secs_gem_state@block,c
  6615                           
  6616                           ;gemsecs.c: 695:    V.ticker = 45;
  6617  00510A  0E2D               	movlw	45
  6618  00510C                     L24:
  6619  00510C  0100               	movlb	0	; () banked
  6620  00510E                     L23:
  6621  00510E  6FC1               	movwf	(_V+97)& (0+255),b	;volatile
  6622  005110  D013               	goto	l6379
  6623  005112                     l6377:
  6624                           
  6625                           ;stkvar	_stream @ sp[(0)+-1]
  6626  005112  0EFF               	movlw	-1
  6627  005114  50E3               	movf	plusw1,w,c
  6628  005116  6E43               	movwf	btemp+10,c
  6629  005118  6A44               	clrf	btemp+11,c
  6630                           
  6631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6632                           ; Switch size 1, requested type "simple"
  6633                           ; Number of cases is 1, Range of values is 0 to 0
  6634                           ; switch strategies available:
  6635                           ; Name         Instructions Cycles
  6636                           ; simple_byte            4     3 (average)
  6637                           ;	Chosen strategy is simple_byte
  6638  00511A  5044               	movf	btemp+11,w,c
  6639  00511C  0A00               	xorlw	0	; case 0
  6640  00511E  A4D8               	btfss	status,2,c
  6641  005120  D7EF               	goto	l6371
  6642                           
  6643                           ; Switch size 1, requested type "simple"
  6644                           ; Number of cases is 3, Range of values is 1 to 9
  6645                           ; switch strategies available:
  6646                           ; Name         Instructions Cycles
  6647                           ; simple_byte           10     6 (average)
  6648                           ;	Chosen strategy is simple_byte
  6649  005122  5043               	movf	btemp+10,w,c
  6650  005124  0A01               	xorlw	1	; case 1
  6651  005126  B4D8               	btfsc	status,2,c
  6652  005128  D7C4               	goto	l6353
  6653  00512A  0A04               	xorlw	4	; case 5
  6654  00512C  B4D8               	btfsc	status,2,c
  6655  00512E  D7D7               	goto	l6355
  6656  005130  0A0C               	xorlw	12	; case 9
  6657  005132  B4D8               	btfsc	status,2,c
  6658  005134  D7DD               	goto	l6363
  6659  005136  D7E4               	goto	l6371
  6660  005138                     l6379:
  6661                           
  6662                           ;gemsecs.c: 700:  return(block);
  6663  005138  0060  F09C  F039   	movff	secs_gem_state@block,btemp
  6664                           
  6665                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  6666  00513E  52E5               	movf	postdec1,f,c
  6667  005140  52E5               	movf	postdec1,f,c
  6668  005142  0012               	return		;funcret
  6669  005144                     __end_of_secs_gem_state:
  6670                           	opt callstack 0
  6671                           
  6672 ;; *************** function _run_checksum *****************
  6673 ;; Defined at:
  6674 ;;		line 35 in file "gemsecs.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  byte_block      1  [STACK] unsigned char 
  6677 ;;  clear           1  [STACK] _Bool 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2  [STACK] unsigned short 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6684 ;; Tracked objects:
  6685 ;;		On entry : 6/39
  6686 ;;		On exit  : 3F/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    3
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_m_protocol
  6700 ;;		_r_protocol
  6701 ;; This function uses a reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text16
  6705  005D26                     __ptext16:
  6706                           	opt callstack 0
  6707  005D26                     _run_checksum:
  6708                           	opt callstack 26
  6709                           
  6710                           ;gemsecs.c: 35: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 36: {;
      +                          gemsecs.c: 37:  static uint16_t sum = 0;;gemsecs.c: 39:  if (clear)
  6711                           ;stkvar	_clear @ sp[(0)+-2]
  6712                           
  6713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6714                           ;incstack = 0
  6715  005D26  0EFE               	movlw	-2
  6716  005D28  50E3               	movf	plusw1,w,c
  6717  005D2A  B4D8               	btfsc	status,2,c
  6718  005D2C  D003               	goto	l6325
  6719                           
  6720                           ;gemsecs.c: 40:   sum = 0;
  6721  005D2E  0100               	movlb	0	; () banked
  6722  005D30  6BFD               	clrf	run_checksum@sum& (0+255),b
  6723  005D32  6BFE               	clrf	(run_checksum@sum+1)& (0+255),b
  6724  005D34                     l6325:
  6725                           
  6726                           ;gemsecs.c: 42:  sum += byte_block;
  6727                           ;stkvar	_byte_block @ sp[(0)+-1]
  6728  005D34  0EFF               	movlw	-1
  6729  005D36  50E3               	movf	plusw1,w,c
  6730  005D38  0100               	movlb	0	; () banked
  6731  005D3A  27FD               	addwf	run_checksum@sum& (0+255),f,b
  6732  005D3C  0E00               	movlw	0
  6733  005D3E  23FE               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;gemsecs.c: 43:  return sum;
  6737  005D40  0060  F3F4  F039   	movff	run_checksum@sum,btemp
  6738  005D46  0060  F3F8  F03A   	movff	run_checksum@sum+1,btemp+1
  6739                           
  6740                           ; BSR set to: 0
  6741                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6742  005D4C  52E5               	movf	postdec1,f,c
  6743  005D4E  52E5               	movf	postdec1,f,c
  6744  005D50  0012               	return		;funcret
  6745  005D52                     __end_of_run_checksum:
  6746                           	opt callstack 0
  6747                           
  6748 ;; *************** function _WaitMs *****************
  6749 ;; Defined at:
  6750 ;;		line 32 in file "timers.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  numMilliseco    2  [STACK] unsigned short 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1  [STACK] void 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    4
  6771 ;; This function calls:
  6772 ;;		_StartTimer
  6773 ;;		_TimerDone
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;;		_m_protocol
  6777 ;;		_r_protocol
  6778 ;; This function uses a reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text17
  6782  005CBC                     __ptext17:
  6783                           	opt callstack 0
  6784  005CBC                     _WaitMs:
  6785                           	opt callstack 25
  6786                           
  6787                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6788                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6789                           
  6790                           ; BSR set to: 0
  6791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6792                           ;incstack = 0
  6793  005CBC  0EFE               	movlw	-2
  6794  005CBE  006F FF8F FFE6     	movff	plusw1,postinc1
  6795  005CC4  006F FF8F FFE6     	movff	plusw1,postinc1
  6796  005CCA  0E00               	movlw	0
  6797  005CCC  6EE6               	movwf	postinc1,c
  6798  005CCE  EC24  F02E         	call	_StartTimer	;wreg free
  6799                           
  6800                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6801  005CD2  D005               	goto	l6267
  6802  005CD4                     l1808:
  6803                           
  6804                           ;timers.c: 36:   __nop();
  6805  005CD4  F000               	nop	
  6806                           
  6807                           ;timers.c: 37:   __nop();
  6808  005CD6  F000               	nop	
  6809                           
  6810                           ;timers.c: 38:   __nop();
  6811  005CD8  F000               	nop	
  6812                           
  6813                           ;timers.c: 39:   __nop();
  6814  005CDA  F000               	nop	
  6815  005CDC  0004               	clrwdt		;# 
  6816  005CDE                     l6267:
  6817                           
  6818                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6819  005CDE  0E00               	movlw	0
  6820  005CE0  6EE6               	movwf	postinc1,c
  6821  005CE2  EC93  F030         	call	_TimerDone	;wreg free
  6822  005CE6  5039               	movf	btemp,w,c
  6823  005CE8  B4D8               	btfsc	status,2,c
  6824  005CEA  D7F4               	goto	l1808
  6825                           
  6826                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6827  005CEC  52E5               	movf	postdec1,f,c
  6828  005CEE  52E5               	movf	postdec1,f,c
  6829  005CF0  0012               	return		;funcret
  6830  005CF2                     __end_of_WaitMs:
  6831                           	opt callstack 0
  6832                           
  6833 ;; *************** function _TimerDone *****************
  6834 ;; Defined at:
  6835 ;;		line 20 in file "timers.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  timer           1  [STACK] unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1  [STACK] _Bool 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6853 ;;Total ram usage:        0 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    3
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_m_protocol
  6860 ;;		_r_protocol
  6861 ;;		_t_protocol
  6862 ;;		_WaitMs
  6863 ;; This function uses a reentrant model
  6864 ;;
  6865                           
  6866                           	psect	text18
  6867  006126                     __ptext18:
  6868                           	opt callstack 0
  6869  006126                     _TimerDone:
  6870                           	opt callstack 26
  6871                           
  6872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6873                           ;incstack = 0
  6874  006126  0004               	clrwdt		;# 
  6875                           
  6876                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  6877                           ;stkvar	_timer @ sp[(0)+-1]
  6878  006128  0EFF               	movlw	-1
  6879  00612A  50E3               	movf	plusw1,w,c
  6880  00612C  0D02               	mullw	2
  6881  00612E  50F3               	movf	prodl,w,c
  6882  006130  0FDB               	addlw	low _tickCount
  6883  006132  6ED9               	movwf	fsr2l,c
  6884  006134  6ADA               	clrf	fsr2h,c
  6885  006136  50DE               	movf	postinc2,w,c
  6886  006138  10DE               	iorwf	postinc2,w,c
  6887  00613A  A4D8               	btfss	status,2,c
  6888  00613C  D002               	goto	l5873
  6889                           
  6890                           ;timers.c: 24:   return 1;
  6891  00613E  0E01               	movlw	1
  6892  006140  D001               	goto	L25
  6893  006142                     l5873:
  6894                           
  6895                           ;timers.c: 26:  return 0;
  6896  006142  0E00               	movlw	0
  6897  006144                     L25:
  6898  006144  6E39               	movwf	btemp,c
  6899                           
  6900                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6901  006146  52E5               	movf	postdec1,f,c
  6902  006148  0012               	return		;funcret
  6903  00614A                     __end_of_TimerDone:
  6904                           	opt callstack 0
  6905                           
  6906 ;; *************** function _StartTimer *****************
  6907 ;; Defined at:
  6908 ;;		line 12 in file "timers.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  timer           1  [STACK] unsigned char 
  6911 ;;  count           2  [STACK] unsigned short 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1  [STACK] void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/39
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    3
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_m_protocol
  6934 ;;		_r_protocol
  6935 ;;		_t_protocol
  6936 ;;		_WaitMs
  6937 ;; This function uses a reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text19
  6941  005C48                     __ptext19:
  6942                           	opt callstack 0
  6943  005C48                     _StartTimer:
  6944                           	opt callstack 26
  6945                           
  6946                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6947                           ;stkvar	_count @ sp[(0)+-3]
  6948                           
  6949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6950                           ;incstack = 0
  6951  005C48  0EFD               	movlw	-3
  6952  005C4A  006F FF8C  F043    	movff	plusw1,btemp+10
  6953  005C50  0EFE               	movlw	-2
  6954  005C52  006F FF8C  F044    	movff	plusw1,btemp+11
  6955  005C58  90D8               	bcf	status,0,c
  6956  005C5A  3443               	rlcf	btemp+10,w,c
  6957  005C5C  6E41               	movwf	btemp+8,c
  6958  005C5E  3444               	rlcf	btemp+11,w,c
  6959  005C60  6E42               	movwf	btemp+9,c
  6960                           
  6961                           ;stkvar	_timer @ sp[(0)+-1]
  6962  005C62  0EFF               	movlw	-1
  6963  005C64  50E3               	movf	plusw1,w,c
  6964  005C66  0D02               	mullw	2
  6965  005C68  50F3               	movf	prodl,w,c
  6966  005C6A  0FDB               	addlw	low _tickCount
  6967  005C6C  6ED9               	movwf	fsr2l,c
  6968  005C6E  6ADA               	clrf	fsr2h,c
  6969  005C70  0060  F107  FFDE   	movff	btemp+8,postinc2
  6970  005C76  0060  F10B  FFDD   	movff	btemp+9,postdec2
  6971                           
  6972                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6973  005C7C  52E5               	movf	postdec1,f,c
  6974  005C7E  52E5               	movf	postdec1,f,c
  6975  005C80  52E5               	movf	postdec1,f,c
  6976  005C82  0012               	return		;funcret
  6977  005C84                     __end_of_StartTimer:
  6978                           	opt callstack 0
  6979                           
  6980 ;; *************** function _UART2_is_rx_ready *****************
  6981 ;; Defined at:
  6982 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1  [STACK] unsigned char 
  6989 ;; Registers used:
  6990 ;;		btemp
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    3
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_m_protocol
  7007 ;; This function uses a reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text20
  7011  0063E6                     __ptext20:
  7012                           	opt callstack 0
  7013  0063E6                     _UART2_is_rx_ready:
  7014                           	opt callstack 26
  7015                           
  7016                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7017                           
  7018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7019                           ;incstack = 0
  7020  0063E6  0060  F0B4  F039   	movff	_uart2RxCount,btemp	;volatile
  7021                           
  7022                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7023  0063EC  0012               	return		;funcret
  7024  0063EE                     __end_of_UART2_is_rx_ready:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _UART2_Read *****************
  7028 ;; Defined at:
  7029 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  readValue       1  [STACK] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1  [STACK] unsigned char 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 3F/39
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    3
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_m_protocol
  7054 ;; This function uses a reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text21
  7058  005BCC                     __ptext21:
  7059                           	opt callstack 0
  7060  005BCC                     _UART2_Read:
  7061                           	opt callstack 0
  7062                           
  7063                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7064  005BCC  52E6               	movf	postinc1,f,c
  7065  005BCE                     
  7066                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7067                           
  7068                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7069  005BCE  502D               	movf	_uart2RxCount,w,c	;volatile
  7070  005BD0  B4D8               	btfsc	status,2,c
  7071  005BD2  D7FD               	goto	l6229
  7072                           
  7073                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7074  005BD4  0E00               	movlw	low _uart2RxBuffer
  7075  005BD6  242E               	addwf	_uart2RxTail,w,c	;volatile
  7076  005BD8  6ED9               	movwf	fsr2l,c
  7077  005BDA  6ADA               	clrf	fsr2h,c
  7078  005BDC  0E02               	movlw	high _uart2RxBuffer
  7079  005BDE  22DA               	addwfc	fsr2h,f,c
  7080  005BE0  50DF               	movf	indf2,w,c
  7081  005BE2  6E44               	movwf	btemp+11,c
  7082                           
  7083                           ;stkvar	_readValue @ sp[(-1)+0]
  7084  005BE4  0EFF               	movlw	-1
  7085  005BE6  0060  F113  FFE3   	movff	btemp+11,plusw1
  7086  005BEC  2A2E               	incf	_uart2RxTail,f,c	;volatile
  7087                           
  7088                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7089  005BEE  0E3F               	movlw	63
  7090  005BF0  642E               	cpfsgt	_uart2RxTail,c
  7091  005BF2  D001               	goto	l692
  7092                           
  7093                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7094  005BF4  6A2E               	clrf	_uart2RxTail,c	;volatile
  7095  005BF6                     l692:
  7096                           
  7097                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7098  005BF6  0139               	movlb	57	; () banked
  7099  005BF8  9596               	bcf	150,2,b	;volatile
  7100                           
  7101                           ; BSR set to: 57
  7102                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7103  005BFA  062D               	decf	_uart2RxCount,f,c	;volatile
  7104                           
  7105                           ; BSR set to: 57
  7106                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7107  005BFC  8596               	bsf	150,2,b	;volatile
  7108                           
  7109                           ; BSR set to: 57
  7110                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7111                           ;stkvar	_readValue @ sp[(-1)+0]
  7112  005BFE  0EFF               	movlw	-1
  7113  005C00  006F FF8C  F039    	movff	plusw1,btemp
  7114                           
  7115                           ; BSR set to: 57
  7116                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7117  005C06  52E5               	movf	postdec1,f,c
  7118  005C08  0012               	return		;funcret
  7119  005C0A                     __end_of_UART2_Read:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function _UART1_is_rx_ready *****************
  7123 ;; Defined at:
  7124 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1  [STACK] unsigned char 
  7131 ;; Registers used:
  7132 ;;		btemp
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    3
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_m_protocol
  7149 ;;		_r_protocol
  7150 ;;		_t_protocol
  7151 ;; This function uses a reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text22
  7155  0063EE                     __ptext22:
  7156                           	opt callstack 0
  7157  0063EE                     _UART1_is_rx_ready:
  7158                           	opt callstack 26
  7159                           
  7160                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7161                           
  7162                           ; BSR set to: 57
  7163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7164                           ;incstack = 0
  7165  0063EE  0060  F0CC  F039   	movff	_uart1RxCount,btemp	;volatile
  7166                           
  7167                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7168  0063F4  0012               	return		;funcret
  7169  0063F6                     __end_of_UART1_is_rx_ready:
  7170                           	opt callstack 0
  7171                           
  7172 ;; *************** function _UART1_Read *****************
  7173 ;; Defined at:
  7174 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;		None
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  readValue       1  [STACK] unsigned char 
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1  [STACK] unsigned char 
  7181 ;; Registers used:
  7182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 3F/39
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7192 ;;Total ram usage:        0 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    3
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_m_protocol
  7199 ;;		_r_protocol
  7200 ;;		_t_protocol
  7201 ;; This function uses a reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text23
  7205  005C0A                     __ptext23:
  7206                           	opt callstack 0
  7207  005C0A                     _UART1_Read:
  7208                           	opt callstack 0
  7209                           
  7210                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7211  005C0A  52E6               	movf	postinc1,f,c
  7212  005C0C                     
  7213                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7214                           
  7215                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7216  005C0C  5033               	movf	_uart1RxCount,w,c	;volatile
  7217  005C0E  B4D8               	btfsc	status,2,c
  7218  005C10  D7FD               	goto	l6205
  7219                           
  7220                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7221  005C12  0E80               	movlw	low _uart1RxBuffer
  7222  005C14  2434               	addwf	_uart1RxTail,w,c	;volatile
  7223  005C16  6ED9               	movwf	fsr2l,c
  7224  005C18  6ADA               	clrf	fsr2h,c
  7225  005C1A  0E02               	movlw	high _uart1RxBuffer
  7226  005C1C  22DA               	addwfc	fsr2h,f,c
  7227  005C1E  50DF               	movf	indf2,w,c
  7228  005C20  6E44               	movwf	btemp+11,c
  7229                           
  7230                           ;stkvar	_readValue @ sp[(-1)+0]
  7231  005C22  0EFF               	movlw	-1
  7232  005C24  0060  F113  FFE3   	movff	btemp+11,plusw1
  7233  005C2A  2A34               	incf	_uart1RxTail,f,c	;volatile
  7234                           
  7235                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7236  005C2C  0E3F               	movlw	63
  7237  005C2E  6434               	cpfsgt	_uart1RxTail,c
  7238  005C30  D001               	goto	l572
  7239                           
  7240                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7241  005C32  6A34               	clrf	_uart1RxTail,c	;volatile
  7242  005C34                     l572:
  7243                           
  7244                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7245  005C34  0139               	movlb	57	; () banked
  7246  005C36  9793               	bcf	147,3,b	;volatile
  7247                           
  7248                           ; BSR set to: 57
  7249                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7250  005C38  0633               	decf	_uart1RxCount,f,c	;volatile
  7251                           
  7252                           ; BSR set to: 57
  7253                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7254  005C3A  8793               	bsf	147,3,b	;volatile
  7255                           
  7256                           ; BSR set to: 57
  7257                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7258                           ;stkvar	_readValue @ sp[(-1)+0]
  7259  005C3C  0EFF               	movlw	-1
  7260  005C3E  006F FF8C  F039    	movff	plusw1,btemp
  7261                           
  7262                           ; BSR set to: 57
  7263                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7264  005C44  52E5               	movf	postdec1,f,c
  7265  005C46  0012               	return		;funcret
  7266  005C48                     __end_of_UART1_Read:
  7267                           	opt callstack 0
  7268                           
  7269 ;; *************** function _init_display *****************
  7270 ;; Defined at:
  7271 ;;		line 35 in file "eadog.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1  [STACK] void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 3F/3D
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    5
  7292 ;; This function calls:
  7293 ;;		_ringBufS_init
  7294 ;;		_send_lcd_cmd
  7295 ;;		_send_lcd_cmd_long
  7296 ;;		_wdtdelay
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text24
  7303  004C6A                     __ptext24:
  7304                           	opt callstack 0
  7305  004C6A                     _init_display:
  7306                           	opt callstack 25
  7307                           
  7308                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7309                           
  7310                           ; BSR set to: 57
  7311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7312                           ;incstack = 0
  7313  004C6A  0E43               	movlw	low _ring_buf1
  7314  004C6C  0100               	movlb	0	; () banked
  7315  004C6E  6FD5               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7316  004C70  0E03               	movlw	high _ring_buf1
  7317  004C72  6FD6               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7318                           
  7319                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7320  004C74  0E00               	movlw	low _ring_buf2
  7321  004C76  6FD3               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7322  004C78  0E03               	movlw	high _ring_buf2
  7323  004C7A  6FD4               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7327  004C7C  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  7328  004C82  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  7329  004C88  EC54  F02F         	call	_ringBufS_init	;wreg free
  7330                           
  7331                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7332  004C8C  0060  F34F  FFE6   	movff	_spi_link+4,postinc1
  7333  004C92  0060  F353  FFE6   	movff	_spi_link+5,postinc1
  7334  004C98  EC54  F02F         	call	_ringBufS_init	;wreg free
  7335                           
  7336                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7337  004C9C  80BE               	bsf	16318,0,c	;volatile
  7338  004C9E  84BC               	bsf	16316,2,c	;volatile
  7339                           
  7340                           ;eadog.c: 44:  wdtdelay(350000);
  7341  004CA0  0E30               	movlw	48
  7342  004CA2  6EE6               	movwf	postinc1,c
  7343  004CA4  0E57               	movlw	87
  7344  004CA6  6EE6               	movwf	postinc1,c
  7345  004CA8  0E05               	movlw	5
  7346  004CAA  6EE6               	movwf	postinc1,c
  7347  004CAC  0E00               	movlw	0
  7348  004CAE  6EE6               	movwf	postinc1,c
  7349  004CB0  EC36  F02C         	call	_wdtdelay	;wreg free
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7353  004CB4  0E39               	movlw	57
  7354  004CB6  6EE6               	movwf	postinc1,c
  7355  004CB8  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7359  004CBC  0E1D               	movlw	29
  7360  004CBE  6EE6               	movwf	postinc1,c
  7361  004CC0  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7365  004CC4  0E50               	movlw	80
  7366  004CC6  6EE6               	movwf	postinc1,c
  7367  004CC8  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7371  004CCC  0E6C               	movlw	108
  7372  004CCE  6EE6               	movwf	postinc1,c
  7373  004CD0  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7377  004CD4  0E76               	movlw	118
  7378  004CD6  6EE6               	movwf	postinc1,c
  7379  004CD8  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7383  004CDC  0E38               	movlw	56
  7384  004CDE  6EE6               	movwf	postinc1,c
  7385  004CE0  EC2C  F02F         	call	_send_lcd_cmd_long	;wreg free
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7389  004CE4  0E0F               	movlw	15
  7390  004CE6  6EE6               	movwf	postinc1,c
  7391  004CE8  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7395  004CEC  0E01               	movlw	1
  7396  004CEE  6EE6               	movwf	postinc1,c
  7397  004CF0  EC2C  F02F         	call	_send_lcd_cmd_long	;wreg free
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7401  004CF4  0E02               	movlw	2
  7402  004CF6  6EE6               	movwf	postinc1,c
  7403  004CF8  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7407  004CFC  0E06               	movlw	6
  7408  004CFE  6EE6               	movwf	postinc1,c
  7409  004D00  EC40  F02F         	call	_send_lcd_cmd	;wreg free
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;eadog.c: 55:  wdtdelay(30);
  7413  004D04  0E1E               	movlw	30
  7414  004D06  6EE6               	movwf	postinc1,c
  7415  004D08  0E00               	movlw	0
  7416  004D0A  6EE6               	movwf	postinc1,c
  7417  004D0C  0E00               	movlw	0
  7418  004D0E  6EE6               	movwf	postinc1,c
  7419  004D10  0E00               	movlw	0
  7420  004D12  6EE6               	movwf	postinc1,c
  7421  004D14  EC36  F02C         	call	_wdtdelay	;wreg free
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7425  004D18  0E02               	movlw	2
  7426  004D1A  013D               	movlb	61	; () banked
  7427  004D1C  6F16               	movwf	22,b	;volatile
  7428                           
  7429                           ; BSR set to: 61
  7430                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7431  004D1E  0E40               	movlw	64
  7432  004D20  6F15               	movwf	21,b	;volatile
  7433                           
  7434                           ; BSR set to: 61
  7435                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7436  004D22  0E83               	movlw	131
  7437  004D24  6F14               	movwf	20,b	;volatile
  7438                           
  7439                           ; BSR set to: 61
  7440                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7441  004D26  931A               	bcf	26,1,b	;volatile
  7442                           
  7443                           ; BSR set to: 61
  7444                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7445  004D28  0E3F               	movlw	-193
  7446  004D2A  013B               	movlb	59	; () banked
  7447  004D2C  17FD               	andwf	253,f,b	;volatile
  7448                           
  7449                           ; BSR set to: 59
  7450                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7451  004D2E  9BFD               	bcf	253,5,b	;volatile
  7452                           
  7453                           ; BSR set to: 59
  7454                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7455  004D30  51FD               	movf	253,w,b	;volatile
  7456  004D32  0BF9               	andlw	-7
  7457  004D34  0902               	iorlw	2
  7458  004D36  6FFD               	movwf	253,b	;volatile
  7459                           
  7460                           ; BSR set to: 59
  7461                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7462  004D38  0EE7               	movlw	-25
  7463  004D3A  17FD               	andwf	253,f,b	;volatile
  7464                           
  7465                           ; BSR set to: 59
  7466                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7467  004D3C  81FD               	bsf	253,0,b	;volatile
  7468                           
  7469                           ; BSR set to: 59
  7470                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7471  004D3E  0E43               	movlw	low _ring_buf1
  7472  004D40  6FF9               	movwf	249,b	;volatile
  7473  004D42  0E03               	movlw	high _ring_buf1
  7474  004D44  6FFA               	movwf	250,b	;volatile
  7475  004D46  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7476  004D48  6FFB               	movwf	251,b	;volatile
  7477                           
  7478                           ; BSR set to: 59
  7479                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7480  004D4A  9BFC               	bcf	252,5,b	;volatile
  7481                           
  7482                           ; BSR set to: 59
  7483                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7484  004D4C  013D               	movlb	61	; () banked
  7485  004D4E  831A               	bsf	26,1,b	;volatile
  7486                           
  7487                           ; BSR set to: 61
  7488                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7489  004D50  90BE               	bcf	16318,0,c	;volatile
  7490                           
  7491                           ; BSR set to: 61
  7492                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7493  004D52  0012               	return		;funcret
  7494  004D54                     __end_of_init_display:
  7495                           	opt callstack 0
  7496                           
  7497 ;; *************** function _send_lcd_cmd_long *****************
  7498 ;; Defined at:
  7499 ;;		line 97 in file "eadog.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  cmd             1  [STACK] unsigned char 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1  [STACK] void 
  7506 ;; Registers used:
  7507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7508 ;; Tracked objects:
  7509 ;;		On entry : 3F/0
  7510 ;;		On exit  : 3F/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    4
  7520 ;; This function calls:
  7521 ;;		_SPI1_Exchange8bit
  7522 ;;		_wdtdelay
  7523 ;; This function is called by:
  7524 ;;		_init_display
  7525 ;; This function uses a reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text25
  7529  005E58                     __ptext25:
  7530                           	opt callstack 0
  7531  005E58                     _send_lcd_cmd_long:
  7532                           	opt callstack 25
  7533                           
  7534                           ; BSR set to: 61
  7535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7536                           ;incstack = 0
  7537                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7538  005E58  92BC               	bcf	16316,1,c	;volatile
  7539                           
  7540                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7541  005E5A  94BC               	bcf	16316,2,c	;volatile
  7542                           
  7543                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7544                           ;stkvar	_cmd @ sp[(0)+-1]
  7545  005E5C  0EFF               	movlw	-1
  7546  005E5E  50E3               	movf	plusw1,w,c
  7547  005E60  6EE6               	movwf	postinc1,c
  7548  005E62  EC2D  F031         	call	_SPI1_Exchange8bit	;wreg free
  7549                           
  7550                           ; BSR set to: 57
  7551                           ;eadog.c: 102:  wdtdelay(800);
  7552  005E66  0E20               	movlw	32
  7553  005E68  6EE6               	movwf	postinc1,c
  7554  005E6A  0E03               	movlw	3
  7555  005E6C  6EE6               	movwf	postinc1,c
  7556  005E6E  0E00               	movlw	0
  7557  005E70  6EE6               	movwf	postinc1,c
  7558  005E72  0E00               	movlw	0
  7559  005E74  6EE6               	movwf	postinc1,c
  7560  005E76  EC36  F02C         	call	_wdtdelay	;wreg free
  7561                           
  7562                           ; BSR set to: 0
  7563  005E7A  82BC               	bsf	16316,1,c	;volatile
  7564                           
  7565                           ; BSR set to: 0
  7566                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7567  005E7C  52E5               	movf	postdec1,f,c
  7568  005E7E  0012               	return		;funcret
  7569  005E80                     __end_of_send_lcd_cmd_long:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _send_lcd_cmd *****************
  7573 ;; Defined at:
  7574 ;;		line 85 in file "eadog.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  cmd             1  [STACK] unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1  [STACK] void 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7583 ;; Tracked objects:
  7584 ;;		On entry : 3F/0
  7585 ;;		On exit  : 3F/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;Total ram usage:        0 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:    4
  7595 ;; This function calls:
  7596 ;;		_SPI1_Exchange8bit
  7597 ;;		_wdtdelay
  7598 ;; This function is called by:
  7599 ;;		_init_display
  7600 ;; This function uses a reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text26
  7604  005E80                     __ptext26:
  7605                           	opt callstack 0
  7606  005E80                     _send_lcd_cmd:
  7607                           	opt callstack 25
  7608                           
  7609                           ; BSR set to: 0
  7610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7611                           ;incstack = 0
  7612                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7613  005E80  92BC               	bcf	16316,1,c	;volatile
  7614                           
  7615                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7616  005E82  94BC               	bcf	16316,2,c	;volatile
  7617                           
  7618                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7619                           ;stkvar	_cmd @ sp[(0)+-1]
  7620  005E84  0EFF               	movlw	-1
  7621  005E86  50E3               	movf	plusw1,w,c
  7622  005E88  6EE6               	movwf	postinc1,c
  7623  005E8A  EC2D  F031         	call	_SPI1_Exchange8bit	;wreg free
  7624                           
  7625                           ; BSR set to: 57
  7626                           ;eadog.c: 90:  wdtdelay(30);
  7627  005E8E  0E1E               	movlw	30
  7628  005E90  6EE6               	movwf	postinc1,c
  7629  005E92  0E00               	movlw	0
  7630  005E94  6EE6               	movwf	postinc1,c
  7631  005E96  0E00               	movlw	0
  7632  005E98  6EE6               	movwf	postinc1,c
  7633  005E9A  0E00               	movlw	0
  7634  005E9C  6EE6               	movwf	postinc1,c
  7635  005E9E  EC36  F02C         	call	_wdtdelay	;wreg free
  7636                           
  7637                           ; BSR set to: 0
  7638  005EA2  82BC               	bsf	16316,1,c	;volatile
  7639                           
  7640                           ; BSR set to: 0
  7641                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7642  005EA4  52E5               	movf	postdec1,f,c
  7643  005EA6  0012               	return		;funcret
  7644  005EA8                     __end_of_send_lcd_cmd:
  7645                           	opt callstack 0
  7646                           
  7647 ;; *************** function _SPI1_Exchange8bit *****************
  7648 ;; Defined at:
  7649 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  data            1  [STACK] unsigned char 
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1  [STACK] unsigned char 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 3F/39
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7667 ;;Total ram usage:        0 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    3
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_send_lcd_cmd
  7674 ;;		_send_lcd_cmd_long
  7675 ;; This function uses a reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text27
  7679  00625A                     __ptext27:
  7680                           	opt callstack 0
  7681  00625A                     _SPI1_Exchange8bit:
  7682                           	opt callstack 25
  7683                           
  7684                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7685                           
  7686                           ; BSR set to: 0
  7687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7688                           ;incstack = 0
  7689  00625A  0E01               	movlw	1
  7690  00625C  013D               	movlb	61	; () banked
  7691  00625E  6F12               	movwf	18,b	;volatile
  7692                           
  7693                           ; BSR set to: 61
  7694                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7695                           ;stkvar	_data @ sp[(0)+-1]
  7696  006260  0EFF               	movlw	-1
  7697  006262  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7698  006268                     l851:
  7699                           
  7700                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7701  006268  0139               	movlb	57	; () banked
  7702  00626A  A9A2               	btfss	162,4,b	;volatile
  7703  00626C  D7FD               	goto	l851
  7704                           
  7705                           ; BSR set to: 57
  7706                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7707  00626E  006F F440  F039    	movff	15632,btemp	;volatile
  7708                           
  7709                           ; BSR set to: 57
  7710                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7711  006274  52E5               	movf	postdec1,f,c
  7712  006276  0012               	return		;funcret
  7713  006278                     __end_of_SPI1_Exchange8bit:
  7714                           	opt callstack 0
  7715                           
  7716 ;; *************** function _ringBufS_init *****************
  7717 ;; Defined at:
  7718 ;;		line 22 in file "ringbufs.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  _this           2  [STACK] PTR volatile struct ring
  7721 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1  [STACK] void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    4
  7740 ;; This function calls:
  7741 ;;		_memset
  7742 ;; This function is called by:
  7743 ;;		_init_display
  7744 ;; This function uses a reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text28
  7748  005EA8                     __ptext28:
  7749                           	opt callstack 0
  7750  005EA8                     _ringBufS_init:
  7751                           	opt callstack 25
  7752                           
  7753                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7754                           
  7755                           ; BSR set to: 57
  7756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7757                           ;incstack = 0
  7758  005EA8  0E43               	movlw	67
  7759  005EAA  6EE6               	movwf	postinc1,c
  7760  005EAC  0E00               	movlw	0
  7761  005EAE  6EE6               	movwf	postinc1,c
  7762  005EB0  0E00               	movlw	0
  7763  005EB2  6EE6               	movwf	postinc1,c
  7764  005EB4  0E00               	movlw	0
  7765  005EB6  6EE6               	movwf	postinc1,c
  7766                           
  7767                           ;stkvar	__this @ sp[(-4)+-2]
  7768  005EB8  0EFA               	movlw	-6
  7769  005EBA  006F FF8F FFE6     	movff	plusw1,postinc1
  7770  005EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  7771  005EC6  EC92  F01B         	call	_memset	;wreg free
  7772                           
  7773                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7774  005ECA  52E5               	movf	postdec1,f,c
  7775  005ECC  52E5               	movf	postdec1,f,c
  7776  005ECE  0012               	return		;funcret
  7777  005ED0                     __end_of_ringBufS_init:
  7778                           	opt callstack 0
  7779                           
  7780 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7781 ;; Defined at:
  7782 ;;		line 223 in file "eadog.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  r               1  [STACK] unsigned char 
  7785 ;;  c               1  [STACK] unsigned char 
  7786 ;;  strPtr          1  [STACK] PTR unsigned char 
  7787 ;;		 -> V(98), 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;		None
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1  [STACK] void 
  7792 ;; Registers used:
  7793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7794 ;; Tracked objects:
  7795 ;;		On entry : 3F/0
  7796 ;;		On exit  : 3F/3B
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;Total ram usage:        0 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:   13
  7806 ;; This function calls:
  7807 ;;		_eaDogM_WriteString
  7808 ;;		_send_lcd_cmd_dma
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text29
  7815  005D52                     __ptext29:
  7816                           	opt callstack 0
  7817  005D52                     _eaDogM_WriteStringAtPos:
  7818                           	opt callstack 17
  7819                           
  7820                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7821                           ;stkvar	_c @ sp[(0)+-2]
  7822                           
  7823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7824                           ;incstack = 0
  7825  005D52  0EFE               	movlw	-2
  7826  005D54  006F FF8C  F044    	movff	plusw1,btemp+11
  7827                           
  7828                           ;stkvar	_r @ sp[(0)+-1]
  7829  005D5A  0EFF               	movlw	-1
  7830  005D5C  50E3               	movf	plusw1,w,c
  7831  005D5E  0D10               	mullw	16
  7832  005D60  50F3               	movf	prodl,w,c
  7833  005D62  2444               	addwf	btemp+11,w,c
  7834  005D64  0F80               	addlw	128
  7835  005D66  6EE6               	movwf	postinc1,c
  7836  005D68  EC64  F02C         	call	_send_lcd_cmd_dma	;wreg free
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  7840                           ;stkvar	_strPtr @ sp[(0)+-3]
  7841  005D6C  0EFD               	movlw	-3
  7842  005D6E  50E3               	movf	plusw1,w,c
  7843  005D70  6EE6               	movwf	postinc1,c
  7844  005D72  EC48  F029         	call	_eaDogM_WriteString	;wreg free
  7845                           
  7846                           ; BSR set to: 59
  7847                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7848  005D76  52E5               	movf	postdec1,f,c
  7849  005D78  52E5               	movf	postdec1,f,c
  7850  005D7A  52E5               	movf	postdec1,f,c
  7851  005D7C  0012               	return		;funcret
  7852  005D7E                     __end_of_eaDogM_WriteStringAtPos:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _eaDogM_WriteString *****************
  7856 ;; Defined at:
  7857 ;;		line 167 in file "eadog.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  strPtr          1  [STACK] PTR unsigned char 
  7860 ;;		 -> V(98), 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1  [STACK] void 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7867 ;; Tracked objects:
  7868 ;;		On entry : 3F/0
  7869 ;;		On exit  : 3F/3B
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:   12
  7879 ;; This function calls:
  7880 ;;		_printf
  7881 ;;		_ringBufS_flush
  7882 ;;		_start_lcd
  7883 ;;		_strlen
  7884 ;;		_wait_lcd_set
  7885 ;; This function is called by:
  7886 ;;		_eaDogM_WriteStringAtPos
  7887 ;; This function uses a reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text30
  7891  005290                     __ptext30:
  7892                           	opt callstack 0
  7893  005290                     _eaDogM_WriteString:
  7894                           	opt callstack 17
  7895                           
  7896                           ; BSR set to: 59
  7897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7898                           ;incstack = 0
  7899                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  7900  005290  82BE               	bsf	16318,1,c	;volatile
  7901                           
  7902                           ;eadog.c: 170:  wait_lcd_set();
  7903  005292  ECFB  F031         	call	_wait_lcd_set	;wreg free
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  7907  005296  0E00               	movlw	0
  7908  005298  6EE6               	movwf	postinc1,c
  7909  00529A  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  7910  0052A0  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  7911  0052A6  EC7E  F02A         	call	_ringBufS_flush	;wreg free
  7912  0052AA  94BC               	bcf	16316,2,c	;volatile
  7913                           
  7914                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7915                           ;stkvar	_strPtr @ sp[(0)+-1]
  7916  0052AC  0EFF               	movlw	-1
  7917  0052AE  006F FF8C  F044    	movff	plusw1,btemp+11
  7918  0052B4  0060  F113  FFE6   	movff	btemp+11,postinc1
  7919  0052BA  0E00               	movlw	0
  7920  0052BC  6EE6               	movwf	postinc1,c
  7921  0052BE  ECF7  F028         	call	_strlen	;wreg free
  7922  0052C2  503A               	movf	btemp+1,w,c
  7923  0052C4  E104               	bnz	u5130
  7924  0052C6  0E41               	movlw	65
  7925  0052C8  5C39               	subwf	btemp,w,c
  7926  0052CA  A0D8               	btfss	status,0,c
  7927  0052CC  D008               	goto	l8433
  7928  0052CE                     u5130:
  7929                           
  7930                           ;stkvar	_strPtr @ sp[(0)+-1]
  7931  0052CE  0EFF               	movlw	-1
  7932  0052D0  50E3               	movf	plusw1,w,c
  7933  0052D2  6ED9               	movwf	fsr2l,c
  7934  0052D4  6ADA               	clrf	fsr2h,c
  7935  0052D6  0E40               	movlw	64
  7936  0052D8  26D9               	addwf	fsr2l,f,c
  7937  0052DA  0E00               	movlw	0
  7938  0052DC  6EDF               	movwf	indf2,c
  7939  0052DE                     l8433:
  7940                           
  7941                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  7942  0052DE  013B               	movlb	59	; () banked
  7943  0052E0  9FFC               	bcf	252,7,b	;volatile
  7944                           
  7945                           ; BSR set to: 59
  7946                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  7947                           ;stkvar	_strPtr @ sp[(0)+-1]
  7948  0052E2  0EFF               	movlw	-1
  7949  0052E4  006F FF8C  F044    	movff	plusw1,btemp+11
  7950  0052EA  0060  F113  FFE6   	movff	btemp+11,postinc1
  7951  0052F0  0E00               	movlw	0
  7952  0052F2  6EE6               	movwf	postinc1,c
  7953  0052F4  ECF7  F028         	call	_strlen	;wreg free
  7954  0052F8  0060  F0E7  FBF7   	movff	btemp,15351	;volatile
  7955  0052FE  0060  F0EB  FBF8   	movff	btemp+1,15352	;volatile
  7956                           
  7957                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  7958  005304  013B               	movlb	59	; () banked
  7959  005306  8FFC               	bsf	252,7,b	;volatile
  7960                           
  7961                           ; BSR set to: 59
  7962                           ;eadog.c: 178:  printf("%s", strPtr);
  7963                           ;stkvar	_strPtr @ sp[(0)+-1]
  7964  005308  0EFF               	movlw	-1
  7965  00530A  006F FF8C  F044    	movff	plusw1,btemp+11
  7966  005310  0060  F113  FFE6   	movff	btemp+11,postinc1
  7967  005316  0E00               	movlw	0
  7968  005318  6EE6               	movwf	postinc1,c
  7969  00531A  0EA6               	movlw	(STR_2+9)& (0+255)
  7970  00531C  6EE6               	movwf	postinc1,c
  7971  00531E  0E03               	movlw	3
  7972  005320  6EE6               	movwf	postinc1,c
  7973  005322  ECD6  F02B         	call	_printf	;wreg free
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;eadog.c: 179:  start_lcd();
  7977  005326  ECFE  F031         	call	_start_lcd	;wreg free
  7978                           
  7979                           ; BSR set to: 59
  7980                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7981  00532A  52E5               	movf	postdec1,f,c
  7982  00532C  0012               	return		;funcret
  7983  00532E                     __end_of_eaDogM_WriteString:
  7984                           	opt callstack 0
  7985                           
  7986 ;; *************** function _eaDogM_WriteCommand *****************
  7987 ;; Defined at:
  7988 ;;		line 143 in file "eadog.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  cmd             1  [STACK] unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1  [STACK] void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7997 ;; Tracked objects:
  7998 ;;		On entry : 3F/3D
  7999 ;;		On exit  : 3F/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8006 ;;Total ram usage:        0 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:   13
  8009 ;; This function calls:
  8010 ;;		_send_lcd_cmd_dma
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text31
  8017  00636C                     __ptext31:
  8018                           	opt callstack 0
  8019  00636C                     _eaDogM_WriteCommand:
  8020                           	opt callstack 17
  8021                           
  8022                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8023                           ;stkvar	_cmd @ sp[(0)+-1]
  8024                           
  8025                           ; BSR set to: 59
  8026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8027                           ;incstack = 0
  8028  00636C  0EFF               	movlw	-1
  8029  00636E  50E3               	movf	plusw1,w,c
  8030  006370  6EE6               	movwf	postinc1,c
  8031  006372  EC64  F02C         	call	_send_lcd_cmd_dma	;wreg free
  8032                           
  8033                           ; BSR set to: 0
  8034                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8035  006376  52E5               	movf	postdec1,f,c
  8036  006378  0012               	return		;funcret
  8037  00637A                     __end_of_eaDogM_WriteCommand:
  8038                           	opt callstack 0
  8039                           
  8040 ;; *************** function _send_lcd_cmd_dma *****************
  8041 ;; Defined at:
  8042 ;;		line 188 in file "eadog.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  strPtr          1  [STACK] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1  [STACK] void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 3F/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:   12
  8063 ;; This function calls:
  8064 ;;		_printf
  8065 ;;		_ringBufS_flush
  8066 ;;		_start_lcd
  8067 ;;		_wait_lcd_done
  8068 ;;		_wait_lcd_set
  8069 ;; This function is called by:
  8070 ;;		_eaDogM_WriteCommand
  8071 ;;		_eaDogM_WriteStringAtPos
  8072 ;; This function uses a reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text32
  8076  0058C8                     __ptext32:
  8077                           	opt callstack 0
  8078  0058C8                     _send_lcd_cmd_dma:
  8079                           	opt callstack 17
  8080                           
  8081                           ; BSR set to: 0
  8082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8083                           ;incstack = 0
  8084                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8085  0058C8  82BE               	bsf	16318,1,c	;volatile
  8086                           
  8087                           ;eadog.c: 191:  wait_lcd_set();
  8088  0058CA  ECFB  F031         	call	_wait_lcd_set	;wreg free
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  8092  0058CE  0E00               	movlw	0
  8093  0058D0  6EE6               	movwf	postinc1,c
  8094  0058D2  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8095  0058D8  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8096  0058DE  EC7E  F02A         	call	_ringBufS_flush	;wreg free
  8097  0058E2  92BC               	bcf	16316,1,c	;volatile
  8098  0058E4  94BC               	bcf	16316,2,c	;volatile
  8099                           
  8100                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  8101  0058E6  013B               	movlb	59	; () banked
  8102  0058E8  9FFC               	bcf	252,7,b	;volatile
  8103                           
  8104                           ; BSR set to: 59
  8105                           ;eadog.c: 197:  DMA1SSZ = 1;
  8106  0058EA  0E00               	movlw	0
  8107  0058EC  6FF8               	movwf	248,b	;volatile
  8108  0058EE  0E01               	movlw	1
  8109  0058F0  6FF7               	movwf	247,b	;volatile
  8110                           
  8111                           ; BSR set to: 59
  8112                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  8113  0058F2  8FFC               	bsf	252,7,b	;volatile
  8114                           
  8115                           ; BSR set to: 59
  8116                           ;eadog.c: 199:  printf("%c", strPtr);
  8117                           ;stkvar	_strPtr @ sp[(0)+-1]
  8118  0058F4  0EFF               	movlw	-1
  8119  0058F6  50E3               	movf	plusw1,w,c
  8120  0058F8  6EE6               	movwf	postinc1,c
  8121  0058FA  0E00               	movlw	0
  8122  0058FC  6EE6               	movwf	postinc1,c
  8123  0058FE  0EC1               	movlw	STR_17& (0+255)
  8124  005900  6EE6               	movwf	postinc1,c
  8125  005902  0E03               	movlw	3
  8126  005904  6EE6               	movwf	postinc1,c
  8127  005906  ECD6  F02B         	call	_printf	;wreg free
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;eadog.c: 200:  start_lcd();
  8131  00590A  ECFE  F031         	call	_start_lcd	;wreg free
  8132                           
  8133                           ; BSR set to: 59
  8134                           ;eadog.c: 201:  wait_lcd_done();
  8135  00590E  EC3C  F031         	call	_wait_lcd_done	;wreg free
  8136                           
  8137                           ; BSR set to: 0
  8138  005912  82BC               	bsf	16316,1,c	;volatile
  8139                           
  8140                           ; BSR set to: 0
  8141                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8142  005914  52E5               	movf	postdec1,f,c
  8143  005916  0012               	return		;funcret
  8144  005918                     __end_of_send_lcd_cmd_dma:
  8145                           	opt callstack 0
  8146                           
  8147 ;; *************** function _wait_lcd_set *****************
  8148 ;; Defined at:
  8149 ;;		line 114 in file "eadog.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1  [STACK] void 
  8156 ;; Registers used:
  8157 ;;		None
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 3F/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8167 ;;Total ram usage:        0 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    3
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_eaDogM_WriteString
  8174 ;;		_send_lcd_cmd_dma
  8175 ;; This function uses a reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text33
  8179  0063F6                     __ptext33:
  8180                           	opt callstack 0
  8181  0063F6                     _wait_lcd_set:
  8182                           	opt callstack 25
  8183                           
  8184                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8185                           
  8186                           ; BSR set to: 0
  8187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8188                           ;incstack = 0
  8189  0063F6  0100               	movlb	0	; () banked
  8190  0063F8  87CF               	bsf	_spi_link& (0+255),3,b	;volatile
  8191                           
  8192                           ; BSR set to: 0
  8193                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8194  0063FA  0012               	return		;funcret
  8195  0063FC                     __end_of_wait_lcd_set:
  8196                           	opt callstack 0
  8197                           
  8198 ;; *************** function _wait_lcd_done *****************
  8199 ;; Defined at:
  8200 ;;		line 124 in file "eadog.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;		None
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1  [STACK] void 
  8207 ;; Registers used:
  8208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8209 ;; Tracked objects:
  8210 ;;		On entry : 4/0
  8211 ;;		On exit  : 3F/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8218 ;;Total ram usage:        0 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    4
  8221 ;; This function calls:
  8222 ;;		_wdtdelay
  8223 ;; This function is called by:
  8224 ;;		_main
  8225 ;;		_send_lcd_cmd_dma
  8226 ;; This function uses a reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text34
  8230  006278                     __ptext34:
  8231                           	opt callstack 0
  8232  006278                     _wait_lcd_done:
  8233                           	opt callstack 26
  8234                           
  8235                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8236                           
  8237                           ; BSR set to: 0
  8238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8239                           ;incstack = 0
  8240  006278  0100               	movlb	0	; () banked
  8241  00627A  B7CF               	btfsc	_spi_link& (0+255),3,b	;volatile
  8242  00627C  D7FD               	goto	_wait_lcd_done
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;eadog.c: 127:  wdtdelay(50);
  8246  00627E  0E32               	movlw	50
  8247  006280  6EE6               	movwf	postinc1,c
  8248  006282  0E00               	movlw	0
  8249  006284  6EE6               	movwf	postinc1,c
  8250  006286  0E00               	movlw	0
  8251  006288  6EE6               	movwf	postinc1,c
  8252  00628A  0E00               	movlw	0
  8253  00628C  6EE6               	movwf	postinc1,c
  8254  00628E  EC36  F02C         	call	_wdtdelay	;wreg free
  8255                           
  8256                           ; BSR set to: 0
  8257                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8258  006292  0012               	return		;funcret
  8259  006294                     __end_of_wait_lcd_done:
  8260                           	opt callstack 0
  8261                           
  8262 ;; *************** function _wdtdelay *****************
  8263 ;; Defined at:
  8264 ;;		line 21 in file "eadog.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  delay           4  [STACK] unsigned long 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1  [STACK] void 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 3F/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    3
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_init_display
  8289 ;;		_send_lcd_cmd
  8290 ;;		_send_lcd_cmd_long
  8291 ;;		_wait_lcd_done
  8292 ;; This function uses a reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text35
  8296  00586C                     __ptext35:
  8297                           	opt callstack 0
  8298  00586C                     _wdtdelay:
  8299                           	opt callstack 26
  8300                           
  8301                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8302                           
  8303                           ; BSR set to: 0
  8304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8305                           ;incstack = 0
  8306  00586C  0100               	movlb	0	; () banked
  8307  00586E  6BEE               	clrf	wdtdelay@dcount& (0+255),b
  8308  005870  6BEF               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8309  005872  6BF0               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8310  005874  6BF1               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8311  005876  D009               	goto	l5675
  8312  005878                     l1351:
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;eadog.c: 26:   __nop();
  8316  005878  F000               	nop	
  8317  00587A  0004               	clrwdt		;# 
  8318                           
  8319                           ;eadog.c: 28:  };
  8320  00587C  0E01               	movlw	1
  8321  00587E  0100               	movlb	0	; () banked
  8322  005880  27EE               	addwf	wdtdelay@dcount& (0+255),f,b
  8323  005882  0E00               	movlw	0
  8324  005884  23EF               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8325  005886  23F0               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8326  005888  23F1               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8327  00588A                     l5675:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;stkvar	_delay @ sp[(0)+-4]
  8331  00588A  0EFC               	movlw	-4
  8332  00588C  006F FF8C  F039    	movff	plusw1,btemp
  8333  005892  51EE               	movf	wdtdelay@dcount& (0+255),w,b
  8334  005894  5C39               	subwf	btemp,w,c
  8335  005896  0EFD               	movlw	-3
  8336  005898  006F FF8C  F039    	movff	plusw1,btemp
  8337  00589E  51EF               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8338  0058A0  5839               	subwfb	btemp,w,c
  8339  0058A2  0EFE               	movlw	-2
  8340  0058A4  006F FF8C  F039    	movff	plusw1,btemp
  8341  0058AA  51F0               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8342  0058AC  5839               	subwfb	btemp,w,c
  8343  0058AE  0EFF               	movlw	-1
  8344  0058B0  006F FF8C  F039    	movff	plusw1,btemp
  8345  0058B6  51F1               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8346  0058B8  5839               	subwfb	btemp,w,c
  8347  0058BA  B0D8               	btfsc	status,0,c
  8348  0058BC  D7DD               	goto	l1351
  8349                           
  8350                           ; BSR set to: 0
  8351                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8352  0058BE  52E5               	movf	postdec1,f,c
  8353  0058C0  52E5               	movf	postdec1,f,c
  8354  0058C2  52E5               	movf	postdec1,f,c
  8355  0058C4  52E5               	movf	postdec1,f,c
  8356  0058C6  0012               	return		;funcret
  8357  0058C8                     __end_of_wdtdelay:
  8358                           	opt callstack 0
  8359                           
  8360 ;; *************** function _start_lcd *****************
  8361 ;; Defined at:
  8362 ;;		line 109 in file "eadog.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1  [STACK] void 
  8369 ;; Registers used:
  8370 ;;		None
  8371 ;; Tracked objects:
  8372 ;;		On entry : 3F/0
  8373 ;;		On exit  : 3F/3B
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8380 ;;Total ram usage:        0 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    3
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_eaDogM_WriteString
  8387 ;;		_send_lcd_cmd_dma
  8388 ;; This function uses a reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text36
  8392  0063FC                     __ptext36:
  8393                           	opt callstack 0
  8394  0063FC                     _start_lcd:
  8395                           	opt callstack 25
  8396                           
  8397                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8398                           
  8399                           ; BSR set to: 0
  8400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8401                           ;incstack = 0
  8402  0063FC  013B               	movlb	59	; () banked
  8403  0063FE  8DFC               	bsf	252,6,b	;volatile
  8404                           
  8405                           ; BSR set to: 59
  8406                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8407  006400  0012               	return		;funcret
  8408  006402                     __end_of_start_lcd:
  8409                           	opt callstack 0
  8410                           
  8411 ;; *************** function _ringBufS_flush *****************
  8412 ;; Defined at:
  8413 ;;		line 76 in file "ringbufs.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8416 ;;		 -> ring_buf1(67), 
  8417 ;;  clearBuffer     1  [STACK] const char 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1  [STACK] void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8424 ;; Tracked objects:
  8425 ;;		On entry : 3F/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8433 ;;Total ram usage:        0 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    4
  8436 ;; This function calls:
  8437 ;;		_memset
  8438 ;; This function is called by:
  8439 ;;		_eaDogM_WriteString
  8440 ;;		_send_lcd_cmd_dma
  8441 ;; This function uses a reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text37
  8445  0054FC                     __ptext37:
  8446                           	opt callstack 0
  8447  0054FC                     _ringBufS_flush:
  8448                           	opt callstack 24
  8449                           
  8450                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8451                           ;stkvar	__this @ sp[(0)+-2]
  8452                           
  8453                           ; BSR set to: 59
  8454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8455                           ;incstack = 0
  8456  0054FC  0EFE               	movlw	-2
  8457  0054FE  006F FF8C  F043    	movff	plusw1,btemp+10
  8458  005504  0EFF               	movlw	-1
  8459  005506  006F FF8C  F044    	movff	plusw1,btemp+11
  8460  00550C  0E42               	movlw	66
  8461  00550E  2443               	addwf	btemp+10,w,c
  8462  005510  6ED9               	movwf	fsr2l,c
  8463  005512  0E00               	movlw	0
  8464  005514  2044               	addwfc	btemp+11,w,c
  8465  005516  6EDA               	movwf	fsr2h,c
  8466  005518  0E00               	movlw	0
  8467  00551A  6EDF               	movwf	indf2,c
  8468                           
  8469                           ;ringbufs.c: 79:  _this->head = 0;
  8470                           ;stkvar	__this @ sp[(0)+-2]
  8471  00551C  0EFE               	movlw	-2
  8472  00551E  006F FF8C  F043    	movff	plusw1,btemp+10
  8473  005524  0EFF               	movlw	-1
  8474  005526  006F FF8C  F044    	movff	plusw1,btemp+11
  8475  00552C  0E40               	movlw	64
  8476  00552E  2443               	addwf	btemp+10,w,c
  8477  005530  6ED9               	movwf	fsr2l,c
  8478  005532  0E00               	movlw	0
  8479  005534  2044               	addwfc	btemp+11,w,c
  8480  005536  6EDA               	movwf	fsr2h,c
  8481  005538  0E00               	movlw	0
  8482  00553A  6EDF               	movwf	indf2,c
  8483                           
  8484                           ;ringbufs.c: 80:  _this->tail = 0;
  8485                           ;stkvar	__this @ sp[(0)+-2]
  8486  00553C  0EFE               	movlw	-2
  8487  00553E  006F FF8C  F043    	movff	plusw1,btemp+10
  8488  005544  0EFF               	movlw	-1
  8489  005546  006F FF8C  F044    	movff	plusw1,btemp+11
  8490  00554C  0E41               	movlw	65
  8491  00554E  2443               	addwf	btemp+10,w,c
  8492  005550  6ED9               	movwf	fsr2l,c
  8493  005552  0E00               	movlw	0
  8494  005554  2044               	addwfc	btemp+11,w,c
  8495  005556  6EDA               	movwf	fsr2h,c
  8496  005558  0E00               	movlw	0
  8497  00555A  6EDF               	movwf	indf2,c
  8498                           
  8499                           ;ringbufs.c: 81:  if (clearBuffer) {
  8500                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8501  00555C  0EFD               	movlw	-3
  8502  00555E  50E3               	movf	plusw1,w,c
  8503  005560  B4D8               	btfsc	status,2,c
  8504  005562  D011               	goto	l1491
  8505                           
  8506                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8507  005564  0E40               	movlw	64
  8508  005566  6EE6               	movwf	postinc1,c
  8509  005568  0E00               	movlw	0
  8510  00556A  6EE6               	movwf	postinc1,c
  8511  00556C  0E00               	movlw	0
  8512  00556E  6EE6               	movwf	postinc1,c
  8513  005570  0E00               	movlw	0
  8514  005572  6EE6               	movwf	postinc1,c
  8515                           
  8516                           ;stkvar	__this @ sp[(-4)+-2]
  8517  005574  0EFA               	movlw	-6
  8518  005576  006F FF8F FFE6     	movff	plusw1,postinc1
  8519  00557C  006F FF8F FFE6     	movff	plusw1,postinc1
  8520  005582  EC92  F01B         	call	_memset	;wreg free
  8521  005586                     l1491:
  8522                           
  8523                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8524  005586  52E5               	movf	postdec1,f,c
  8525  005588  52E5               	movf	postdec1,f,c
  8526  00558A  52E5               	movf	postdec1,f,c
  8527  00558C  0012               	return		;funcret
  8528  00558E                     __end_of_ringBufS_flush:
  8529                           	opt callstack 0
  8530                           
  8531 ;; *************** function _memset *****************
  8532 ;; Defined at:
  8533 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  dest            2  [STACK] PTR void 
  8536 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8537 ;;  c               2  [STACK] int 
  8538 ;;  n               2  [STACK] unsigned int 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  s               2  [STACK] PTR unsigned char 
  8541 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8542 ;;  k               2  [STACK] unsigned int 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  2  [STACK] PTR void 
  8545 ;; Registers used:
  8546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    3
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_ringBufS_init
  8563 ;;		_ringBufS_flush
  8564 ;; This function uses a reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text38
  8568  003724                     __ptext38:
  8569                           	opt callstack 0
  8570  003724                     _memset:
  8571                           	opt callstack 0
  8572                           
  8573                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8574  003724  52E6               	movf	postinc1,f,c
  8575  003726  52E6               	movf	postinc1,f,c
  8576  003728  52E6               	movf	postinc1,f,c
  8577  00372A  52E6               	movf	postinc1,f,c
  8578                           
  8579                           ;stkvar	_dest @ sp[(-4)+-2]
  8580                           
  8581                           ;incstack = 0
  8582  00372C  0EFA               	movlw	-6
  8583  00372E  006F FF8C  F043    	movff	plusw1,btemp+10
  8584  003734  0EFB               	movlw	-5
  8585  003736  006F FF8C  F044    	movff	plusw1,btemp+11
  8586                           
  8587                           ;stkvar	_s @ sp[(-4)+0]
  8588  00373C  0EFD               	movlw	-3
  8589  00373E  0060  F113  FFE3   	movff	btemp+11,plusw1
  8590  003744  0EFC               	movlw	-4
  8591  003746  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8592                           
  8593                           ;stkvar	_n @ sp[(-4)+-6]
  8594  00374C  0EF6               	movlw	-10
  8595  00374E  006F FF8C  F039    	movff	plusw1,btemp
  8596  003754  0EF7               	movlw	-9
  8597  003756  50E3               	movf	plusw1,w,c
  8598  003758  1039               	iorwf	btemp,w,c
  8599  00375A  B4D8               	btfsc	status,2,c
  8600  00375C  D154               	goto	u5090
  8601                           
  8602                           ;stkvar	_c @ sp[(-4)+-4]
  8603                           ;stkvar	_s @ sp[(-4)+0]
  8604  00375E  0EFC               	movlw	-4
  8605  003760  006F FF8F FFD9     	movff	plusw1,fsr2l
  8606  003766  0EFD               	movlw	-3
  8607  003768  006F FF8F FFDA     	movff	plusw1,fsr2h
  8608  00376E  0EF8               	movlw	-8
  8609  003770  006F FF8F FFDF     	movff	plusw1,indf2
  8610                           
  8611                           ;stkvar	_c @ sp[(-4)+-4]
  8612                           ;stkvar	_n @ sp[(-4)+-6]
  8613                           ;stkvar	_s @ sp[(-4)+0]
  8614  003776  0EFC               	movlw	-4
  8615  003778  006F FF8C  F043    	movff	plusw1,btemp+10
  8616  00377E  0EFD               	movlw	-3
  8617  003780  006F FF8C  F044    	movff	plusw1,btemp+11
  8618  003786  0EF6               	movlw	-10
  8619  003788  50E3               	movf	plusw1,w,c
  8620  00378A  2643               	addwf	btemp+10,f,c
  8621  00378C  0EF7               	movlw	-9
  8622  00378E  50E3               	movf	plusw1,w,c
  8623  003790  2244               	addwfc	btemp+11,f,c
  8624  003792  0EFF               	movlw	255
  8625  003794  2443               	addwf	btemp+10,w,c
  8626  003796  6ED9               	movwf	fsr2l,c
  8627  003798  0EFF               	movlw	255
  8628  00379A  2044               	addwfc	btemp+11,w,c
  8629  00379C  6EDA               	movwf	fsr2h,c
  8630  00379E  0EF8               	movlw	-8
  8631  0037A0  006F FF8F FFDF     	movff	plusw1,indf2
  8632                           
  8633                           ;stkvar	_n @ sp[(-4)+-6]
  8634  0037A6  0EF7               	movlw	-9
  8635  0037A8  50E3               	movf	plusw1,w,c
  8636  0037AA  E108               	bnz	l8323
  8637  0037AC  0EF6               	movlw	-10
  8638  0037AE  006F FF8C  F039    	movff	plusw1,btemp
  8639  0037B4  0E03               	movlw	3
  8640  0037B6  5E39               	subwf	btemp,f,c
  8641  0037B8  A0D8               	btfss	status,0,c
  8642  0037BA  D125               	goto	u5090
  8643  0037BC                     l8323:
  8644                           
  8645                           ;stkvar	_c @ sp[(-4)+-4]
  8646                           ;stkvar	_s @ sp[(-4)+0]
  8647  0037BC  0EFC               	movlw	-4
  8648  0037BE  006F FF8C  F043    	movff	plusw1,btemp+10
  8649  0037C4  0EFD               	movlw	-3
  8650  0037C6  006F FF8C  F044    	movff	plusw1,btemp+11
  8651  0037CC  0E01               	movlw	1
  8652  0037CE  2443               	addwf	btemp+10,w,c
  8653  0037D0  6ED9               	movwf	fsr2l,c
  8654  0037D2  0E00               	movlw	0
  8655  0037D4  2044               	addwfc	btemp+11,w,c
  8656  0037D6  6EDA               	movwf	fsr2h,c
  8657  0037D8  0EF8               	movlw	-8
  8658  0037DA  006F FF8F FFDF     	movff	plusw1,indf2
  8659                           
  8660                           ;stkvar	_c @ sp[(-4)+-4]
  8661                           ;stkvar	_s @ sp[(-4)+0]
  8662  0037E0  0EFC               	movlw	-4
  8663  0037E2  006F FF8C  F043    	movff	plusw1,btemp+10
  8664  0037E8  0EFD               	movlw	-3
  8665  0037EA  006F FF8C  F044    	movff	plusw1,btemp+11
  8666  0037F0  0E02               	movlw	2
  8667  0037F2  2443               	addwf	btemp+10,w,c
  8668  0037F4  6ED9               	movwf	fsr2l,c
  8669  0037F6  0E00               	movlw	0
  8670  0037F8  2044               	addwfc	btemp+11,w,c
  8671  0037FA  6EDA               	movwf	fsr2h,c
  8672  0037FC  0EF8               	movlw	-8
  8673  0037FE  006F FF8F FFDF     	movff	plusw1,indf2
  8674                           
  8675                           ;stkvar	_c @ sp[(-4)+-4]
  8676                           ;stkvar	_n @ sp[(-4)+-6]
  8677                           ;stkvar	_s @ sp[(-4)+0]
  8678  003804  0EFC               	movlw	-4
  8679  003806  006F FF8C  F043    	movff	plusw1,btemp+10
  8680  00380C  0EFD               	movlw	-3
  8681  00380E  006F FF8C  F044    	movff	plusw1,btemp+11
  8682  003814  0EF6               	movlw	-10
  8683  003816  50E3               	movf	plusw1,w,c
  8684  003818  2643               	addwf	btemp+10,f,c
  8685  00381A  0EF7               	movlw	-9
  8686  00381C  50E3               	movf	plusw1,w,c
  8687  00381E  2244               	addwfc	btemp+11,f,c
  8688  003820  0EFE               	movlw	254
  8689  003822  2443               	addwf	btemp+10,w,c
  8690  003824  6ED9               	movwf	fsr2l,c
  8691  003826  0EFF               	movlw	255
  8692  003828  2044               	addwfc	btemp+11,w,c
  8693  00382A  6EDA               	movwf	fsr2h,c
  8694  00382C  0EF8               	movlw	-8
  8695  00382E  006F FF8F FFDF     	movff	plusw1,indf2
  8696                           
  8697                           ;stkvar	_c @ sp[(-4)+-4]
  8698                           ;stkvar	_n @ sp[(-4)+-6]
  8699                           ;stkvar	_s @ sp[(-4)+0]
  8700  003834  0EFC               	movlw	-4
  8701  003836  006F FF8C  F043    	movff	plusw1,btemp+10
  8702  00383C  0EFD               	movlw	-3
  8703  00383E  006F FF8C  F044    	movff	plusw1,btemp+11
  8704  003844  0EF6               	movlw	-10
  8705  003846  50E3               	movf	plusw1,w,c
  8706  003848  2643               	addwf	btemp+10,f,c
  8707  00384A  0EF7               	movlw	-9
  8708  00384C  50E3               	movf	plusw1,w,c
  8709  00384E  2244               	addwfc	btemp+11,f,c
  8710  003850  0EFD               	movlw	253
  8711  003852  2443               	addwf	btemp+10,w,c
  8712  003854  6ED9               	movwf	fsr2l,c
  8713  003856  0EFF               	movlw	255
  8714  003858  2044               	addwfc	btemp+11,w,c
  8715  00385A  6EDA               	movwf	fsr2h,c
  8716  00385C  0EF8               	movlw	-8
  8717  00385E  006F FF8F FFDF     	movff	plusw1,indf2
  8718                           
  8719                           ;stkvar	_n @ sp[(-4)+-6]
  8720  003864  0EF7               	movlw	-9
  8721  003866  50E3               	movf	plusw1,w,c
  8722  003868  E108               	bnz	l8329
  8723  00386A  0EF6               	movlw	-10
  8724  00386C  006F FF8C  F039    	movff	plusw1,btemp
  8725  003872  0E07               	movlw	7
  8726  003874  5E39               	subwf	btemp,f,c
  8727  003876  A0D8               	btfss	status,0,c
  8728  003878  D0C6               	goto	u5090
  8729  00387A                     l8329:
  8730                           
  8731                           ;stkvar	_c @ sp[(-4)+-4]
  8732                           ;stkvar	_s @ sp[(-4)+0]
  8733  00387A  0EFC               	movlw	-4
  8734  00387C  006F FF8C  F043    	movff	plusw1,btemp+10
  8735  003882  0EFD               	movlw	-3
  8736  003884  006F FF8C  F044    	movff	plusw1,btemp+11
  8737  00388A  0E03               	movlw	3
  8738  00388C  2443               	addwf	btemp+10,w,c
  8739  00388E  6ED9               	movwf	fsr2l,c
  8740  003890  0E00               	movlw	0
  8741  003892  2044               	addwfc	btemp+11,w,c
  8742  003894  6EDA               	movwf	fsr2h,c
  8743  003896  0EF8               	movlw	-8
  8744  003898  006F FF8F FFDF     	movff	plusw1,indf2
  8745                           
  8746                           ;stkvar	_c @ sp[(-4)+-4]
  8747                           ;stkvar	_n @ sp[(-4)+-6]
  8748                           ;stkvar	_s @ sp[(-4)+0]
  8749  00389E  0EFC               	movlw	-4
  8750  0038A0  006F FF8C  F043    	movff	plusw1,btemp+10
  8751  0038A6  0EFD               	movlw	-3
  8752  0038A8  006F FF8C  F044    	movff	plusw1,btemp+11
  8753  0038AE  0EF6               	movlw	-10
  8754  0038B0  50E3               	movf	plusw1,w,c
  8755  0038B2  2643               	addwf	btemp+10,f,c
  8756  0038B4  0EF7               	movlw	-9
  8757  0038B6  50E3               	movf	plusw1,w,c
  8758  0038B8  2244               	addwfc	btemp+11,f,c
  8759  0038BA  0EFC               	movlw	252
  8760  0038BC  2443               	addwf	btemp+10,w,c
  8761  0038BE  6ED9               	movwf	fsr2l,c
  8762  0038C0  0EFF               	movlw	255
  8763  0038C2  2044               	addwfc	btemp+11,w,c
  8764  0038C4  6EDA               	movwf	fsr2h,c
  8765  0038C6  0EF8               	movlw	-8
  8766  0038C8  006F FF8F FFDF     	movff	plusw1,indf2
  8767                           
  8768                           ;stkvar	_n @ sp[(-4)+-6]
  8769  0038CE  0EF7               	movlw	-9
  8770  0038D0  50E3               	movf	plusw1,w,c
  8771  0038D2  E108               	bnz	l8335
  8772  0038D4  0EF6               	movlw	-10
  8773  0038D6  006F FF8C  F039    	movff	plusw1,btemp
  8774  0038DC  0E09               	movlw	9
  8775  0038DE  5E39               	subwf	btemp,f,c
  8776  0038E0  A0D8               	btfss	status,0,c
  8777  0038E2  D091               	goto	u5090
  8778  0038E4                     l8335:
  8779                           
  8780                           ;stkvar	_s @ sp[(-4)+0]
  8781  0038E4  0EFC               	movlw	-4
  8782  0038E6  006F FF8C  F043    	movff	plusw1,btemp+10
  8783  0038EC  1E43               	comf	btemp+10,f,c
  8784  0038EE  0EFD               	movlw	-3
  8785  0038F0  006F FF8C  F044    	movff	plusw1,btemp+11
  8786  0038F6  1E44               	comf	btemp+11,f,c
  8787  0038F8  2A43               	incf	btemp+10,f,c
  8788  0038FA  B4D8               	btfsc	status,2,c
  8789  0038FC  2A44               	incf	btemp+11,f,c
  8790  0038FE  0E03               	movlw	3
  8791  003900  1643               	andwf	btemp+10,f,c
  8792  003902  0E00               	movlw	0
  8793  003904  1644               	andwf	btemp+11,f,c
  8794                           
  8795                           ;stkvar	_k @ sp[(-4)+2]
  8796  003906  0EFE               	movlw	-2
  8797  003908  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8798  00390E  0EFF               	movlw	-1
  8799  003910  0060  F113  FFE3   	movff	btemp+11,plusw1
  8800                           
  8801                           ;stkvar	_k @ sp[(-4)+2]
  8802                           ;stkvar	_s @ sp[(-4)+0]
  8803  003916  0EFC               	movlw	-4
  8804  003918  50E3               	movf	plusw1,w,c
  8805  00391A  6E39               	movwf	btemp,c
  8806  00391C  0EFE               	movlw	-2
  8807  00391E  50E3               	movf	plusw1,w,c
  8808  003920  2639               	addwf	btemp,f,c
  8809  003922  0EFC               	movlw	-4
  8810  003924  0060  F0E7  FFE3   	movff	btemp,plusw1
  8811  00392A  0EFD               	movlw	-3
  8812  00392C  50E3               	movf	plusw1,w,c
  8813  00392E  6E39               	movwf	btemp,c
  8814  003930  0EFF               	movlw	-1
  8815  003932  50E3               	movf	plusw1,w,c
  8816  003934  2239               	addwfc	btemp,f,c
  8817  003936  0EFD               	movlw	-3
  8818  003938  0060  F0E7  FFE3   	movff	btemp,plusw1
  8819                           
  8820                           ;stkvar	_k @ sp[(-4)+2]
  8821                           ;stkvar	_n @ sp[(-4)+-6]
  8822  00393E  0EF6               	movlw	-10
  8823  003940  50E3               	movf	plusw1,w,c
  8824  003942  6E39               	movwf	btemp,c
  8825  003944  0EFE               	movlw	-2
  8826  003946  50E3               	movf	plusw1,w,c
  8827  003948  5E39               	subwf	btemp,f,c
  8828  00394A  0EF6               	movlw	-10
  8829  00394C  0060  F0E7  FFE3   	movff	btemp,plusw1
  8830  003952  0EF7               	movlw	-9
  8831  003954  50E3               	movf	plusw1,w,c
  8832  003956  6E39               	movwf	btemp,c
  8833  003958  0EFF               	movlw	-1
  8834  00395A  50E3               	movf	plusw1,w,c
  8835  00395C  5A39               	subwfb	btemp,f,c
  8836  00395E  0EF7               	movlw	-9
  8837  003960  0060  F0E7  FFE3   	movff	btemp,plusw1
  8838  003966  0EFC               	movlw	252
  8839  003968  6E43               	movwf	btemp+10,c
  8840  00396A  0EFF               	movlw	255
  8841  00396C  6E44               	movwf	btemp+11,c
  8842                           
  8843                           ;stkvar	_n @ sp[(-4)+-6]
  8844  00396E  0EF6               	movlw	-10
  8845  003970  006F FF8C  F039    	movff	plusw1,btemp
  8846  003976  5043               	movf	btemp+10,w,c
  8847  003978  1639               	andwf	btemp,f,c
  8848  00397A  0EF6               	movlw	-10
  8849  00397C  0060  F0E7  FFE3   	movff	btemp,plusw1
  8850  003982  0EF7               	movlw	-9
  8851  003984  006F FF8C  F039    	movff	plusw1,btemp
  8852  00398A  5044               	movf	btemp+11,w,c
  8853  00398C  1639               	andwf	btemp,f,c
  8854  00398E  0EF7               	movlw	-9
  8855  003990  D02E               	goto	L26
  8856  003992                     l8343:
  8857                           
  8858                           ;stkvar	_c @ sp[(-4)+-4]
  8859                           ;stkvar	_s @ sp[(-4)+0]
  8860  003992  0EFC               	movlw	-4
  8861  003994  006F FF8F FFD9     	movff	plusw1,fsr2l
  8862  00399A  0EFD               	movlw	-3
  8863  00399C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8864  0039A2  0EF8               	movlw	-8
  8865  0039A4  006F FF8F FFDF     	movff	plusw1,indf2
  8866                           
  8867                           ;stkvar	_n @ sp[(-4)+-6]
  8868  0039AA  0EF6               	movlw	-10
  8869  0039AC  006F FF8C  F039    	movff	plusw1,btemp
  8870  0039B2  0E01               	movlw	1
  8871  0039B4  5E39               	subwf	btemp,f,c
  8872  0039B6  0EF6               	movlw	-10
  8873  0039B8  0060  F0E7  FFE3   	movff	btemp,plusw1
  8874  0039BE  0EF7               	movlw	-9
  8875  0039C0  006F FF8C  F039    	movff	plusw1,btemp
  8876  0039C6  0E00               	movlw	0
  8877  0039C8  5A39               	subwfb	btemp,f,c
  8878  0039CA  0EF7               	movlw	-9
  8879  0039CC  0060  F0E7  FFE3   	movff	btemp,plusw1
  8880                           
  8881                           ;stkvar	_s @ sp[(-4)+0]
  8882  0039D2  0EFC               	movlw	-4
  8883  0039D4  50E3               	movf	plusw1,w,c
  8884  0039D6  0F01               	addlw	1
  8885  0039D8  6E39               	movwf	btemp,c
  8886  0039DA  0EFC               	movlw	-4
  8887  0039DC  0060  F0E7  FFE3   	movff	btemp,plusw1
  8888  0039E2  6A39               	clrf	btemp,c
  8889  0039E4  0EFD               	movlw	-3
  8890  0039E6  50E3               	movf	plusw1,w,c
  8891  0039E8  2039               	addwfc	btemp,w,c
  8892  0039EA  6E39               	movwf	btemp,c
  8893  0039EC  0EFD               	movlw	-3
  8894  0039EE                     L26:
  8895  0039EE  0060  F0E7  FFE3   	movff	btemp,plusw1
  8896                           
  8897                           ;stkvar	_n @ sp[(-4)+-6]
  8898  0039F4  0EF6               	movlw	-10
  8899  0039F6  006F FF8C  F039    	movff	plusw1,btemp
  8900  0039FC  0EF7               	movlw	-9
  8901  0039FE  50E3               	movf	plusw1,w,c
  8902  003A00  1039               	iorwf	btemp,w,c
  8903  003A02  A4D8               	btfss	status,2,c
  8904  003A04  D7C6               	goto	l8343
  8905  003A06                     u5090:
  8906                           
  8907                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8908  003A06  0EF6               	movlw	246
  8909  003A08  26E1               	addwf	fsr1l,f,c
  8910  003A0A  0EFF               	movlw	255
  8911  003A0C  22E2               	addwfc	fsr1h,f,c
  8912  003A0E  0012               	return		;funcret
  8913  003A10                     __end_of_memset:
  8914                           	opt callstack 0
  8915                           
  8916 ;; *************** function _printf *****************
  8917 ;; Defined at:
  8918 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  fmt             1  [STACK] PTR const unsigned char 
  8921 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  ap              2  [STACK] PTR void [1]
  8924 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8925 ;;  ret             2    0        int 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  2  [STACK] int 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8930 ;; Tracked objects:
  8931 ;;		On entry : 3F/3B
  8932 ;;		On exit  : 3F/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8939 ;;Total ram usage:        0 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   11
  8942 ;; This function calls:
  8943 ;;		_vfprintf
  8944 ;; This function is called by:
  8945 ;;		_eaDogM_WriteString
  8946 ;;		_send_lcd_cmd_dma
  8947 ;; This function uses a reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text39
  8951  0057AC                     __ptext39:
  8952                           	opt callstack 0
  8953  0057AC                     _printf:
  8954                           	opt callstack 0
  8955                           
  8956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8957  0057AC  52E6               	movf	postinc1,f,c
  8958  0057AE  52E6               	movf	postinc1,f,c
  8959                           
  8960                           ;stkvar	?_printf @ sp[(-2)+-3]
  8961                           
  8962                           ;incstack = 0
  8963  0057B0  0EFB               	movlw	251
  8964  0057B2  24E1               	addwf	fsr1l,w,c
  8965  0057B4  6E43               	movwf	btemp+10,c
  8966  0057B6  0EFF               	movlw	255
  8967  0057B8  20E2               	addwfc	fsr1h,w,c
  8968  0057BA  6E44               	movwf	btemp+11,c
  8969  0057BC  0E01               	movlw	1
  8970  0057BE  2643               	addwf	btemp+10,f,c
  8971  0057C0  0E00               	movlw	0
  8972  0057C2  2244               	addwfc	btemp+11,f,c
  8973                           
  8974                           ;stkvar	_ap @ sp[(-2)+0]
  8975  0057C4  0EFF               	movlw	-1
  8976  0057C6  0060  F113  FFE3   	movff	btemp+11,plusw1
  8977  0057CC  0EFE               	movlw	-2
  8978  0057CE  0060  F10F  FFE3   	movff	btemp+10,plusw1
  8979                           
  8980                           ;stkvar	_ap @ sp[(-2)+0]
  8981  0057D4  0EFE               	movlw	254
  8982  0057D6  24E1               	addwf	fsr1l,w,c
  8983  0057D8  6E39               	movwf	btemp,c
  8984  0057DA  0EFF               	movlw	255
  8985  0057DC  20E2               	addwfc	fsr1h,w,c
  8986  0057DE  6E3A               	movwf	btemp+1,c
  8987  0057E0  0060  F0E7  FFE6   	movff	btemp,postinc1
  8988  0057E6  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  8989                           
  8990                           ;stkvar	_fmt @ sp[(-4)+-2]
  8991  0057EC  0EFA               	movlw	-6
  8992  0057EE  50E3               	movf	plusw1,w,c
  8993  0057F0  6EE6               	movwf	postinc1,c
  8994  0057F2  0E00               	movlw	0
  8995  0057F4  6EE6               	movwf	postinc1,c
  8996  0057F6  0E00               	movlw	0
  8997  0057F8  6EE6               	movwf	postinc1,c
  8998  0057FA  ECE6  F029         	call	_vfprintf	;wreg free
  8999                           
  9000                           ; BSR set to: 0
  9001                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9002  0057FE  52E5               	movf	postdec1,f,c
  9003  005800  52E5               	movf	postdec1,f,c
  9004  005802  52E5               	movf	postdec1,f,c
  9005  005804  50E7               	movf	indf1,w,c
  9006  005806  5EE1               	subwf	fsr1l,f,c
  9007  005808  0E00               	movlw	0
  9008  00580A  5AE2               	subwfb	fsr1h,f,c
  9009  00580C  0012               	return		;funcret
  9010  00580E                     __end_of_printf:
  9011                           	opt callstack 0
  9012                           
  9013 ;; *************** function _vfprintf *****************
  9014 ;; Defined at:
  9015 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9018 ;;		 -> f(5), NULL(0), 
  9019 ;;  fmt             1  [STACK] PTR const unsigned char 
  9020 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9021 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9022 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9023 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9024 ;;		 -> STR_1(17), 
  9025 ;;  ap              2  [STACK] PTR PTR void 
  9026 ;;		 -> ap(2), ap(2), 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  cfmt            1  [STACK] PTR unsigned char 
  9029 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9030 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9031 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9032 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9033 ;;		 -> STR_1(17), 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2  [STACK] int 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/1
  9040 ;;		On exit  : 3F/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:   10
  9050 ;; This function calls:
  9051 ;;		_vfpfcnvrt
  9052 ;; This function is called by:
  9053 ;;		_sprintf
  9054 ;;		_printf
  9055 ;; This function uses a reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text40
  9059  0053CC                     __ptext40:
  9060                           	opt callstack 0
  9061  0053CC                     _vfprintf:
  9062                           	opt callstack 0
  9063                           
  9064                           ; BSR set to: 0
  9065                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9066  0053CC  52E6               	movf	postinc1,f,c
  9067                           
  9068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9069                           ;stkvar	_fmt @ sp[(-1)+-3]
  9070                           
  9071                           ;incstack = 0
  9072  0053CE  0EFC               	movlw	-4
  9073  0053D0  006F FF8C  F044    	movff	plusw1,btemp+11
  9074                           
  9075                           ;stkvar	_cfmt @ sp[(-1)+0]
  9076  0053D6  0EFF               	movlw	-1
  9077  0053D8  0060  F113  FFE3   	movff	btemp+11,plusw1
  9078                           
  9079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9080  0053DE  0100               	movlb	0	; () banked
  9081  0053E0  6BFB               	clrf	_nout& (0+255),b
  9082  0053E2  6BFC               	clrf	(_nout+1)& (0+255),b
  9083                           
  9084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9085  0053E4  D021               	goto	l8357
  9086  0053E6                     l8355:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9090                           ;stkvar	_ap @ sp[(-1)+-5]
  9091  0053E6  0EFA               	movlw	-6
  9092  0053E8  006F FF8F FFE6     	movff	plusw1,postinc1
  9093  0053EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9094                           
  9095                           ;stkvar	_cfmt @ sp[(-3)+0]
  9096  0053F4  0EFD               	movlw	253
  9097  0053F6  24E1               	addwf	fsr1l,w,c
  9098  0053F8  6E39               	movwf	btemp,c
  9099  0053FA  0EFF               	movlw	255
  9100  0053FC  20E2               	addwfc	fsr1h,w,c
  9101  0053FE  6E3A               	movwf	btemp+1,c
  9102  005400  0060  F0E7  FFE6   	movff	btemp,postinc1
  9103  005406  0060  F0EB  FFE6   	movff	btemp+1,postinc1
  9104                           
  9105                           ;stkvar	_fp @ sp[(-5)+-2]
  9106  00540C  0EF9               	movlw	-7
  9107  00540E  006F FF8F FFE6     	movff	plusw1,postinc1
  9108  005414  006F FF8F FFE6     	movff	plusw1,postinc1
  9109  00541A  EC23  F013         	call	_vfpfcnvrt	;wreg free
  9110  00541E  5039               	movf	btemp,w,c
  9111  005420  0100               	movlb	0	; () banked
  9112  005422  27FB               	addwf	_nout& (0+255),f,b
  9113  005424  503A               	movf	btemp+1,w,c
  9114  005426  23FC               	addwfc	(_nout+1)& (0+255),f,b
  9115  005428                     l8357:
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9119                           ;stkvar	_cfmt @ sp[(-1)+0]
  9120  005428  50E1               	movf	fsr1l,w,c
  9121  00542A  0FFF               	addlw	-1
  9122  00542C  6ED9               	movwf	fsr2l,c
  9123  00542E  50E2               	movf	fsr1h,w,c
  9124  005430  6EDA               	movwf	fsr2h,c
  9125  005432  0EFF               	movlw	255
  9126  005434  22DA               	addwfc	fsr2h,f,c
  9127  005436  006F FF7F FFF6     	movff	indf2,tblptrl
  9128  00543C                     	if	1	;There is more than 1 active tblptr byte
  9129  00543C  0E20               	movlw	high __smallconst
  9130  00543E  6EF7               	movwf	tblptrh,c
  9131  005440                     	endif
  9132  005440                     	if	0	;tblptru may be non-zero
  9133  005440                     	endif
  9134  005440                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9135  005440  0E00               	movlw	low (__smallconst shr (0+16))
  9136  005442  6EF8               	movwf	tblptru,c
  9137  005444                     	endif
  9138  005444  0008               	tblrd		*
  9139  005446  50F5               	movf	tablat,w,c
  9140  005448  0900               	iorlw	0
  9141  00544A  A4D8               	btfss	status,2,c
  9142  00544C  D7CC               	goto	l8355
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9146  00544E  0060  F3EC  F039   	movff	_nout,btemp
  9147  005454  0060  F3F0  F03A   	movff	_nout+1,btemp+1
  9148                           
  9149                           ; BSR set to: 0
  9150                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9151  00545A  0EFA               	movlw	250
  9152  00545C  26E1               	addwf	fsr1l,f,c
  9153  00545E  0EFF               	movlw	255
  9154  005460  22E2               	addwfc	fsr1h,f,c
  9155  005462  0012               	return		;funcret
  9156  005464                     __end_of_vfprintf:
  9157                           	opt callstack 0
  9158                           
  9159 ;; *************** function _vfpfcnvrt *****************
  9160 ;; Defined at:
  9161 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9164 ;;		 -> f(5), NULL(0), 
  9165 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9166 ;;		 -> cfmt(1), 
  9167 ;;  ap              2  [STACK] PTR PTR void 
  9168 ;;		 -> ap(2), ap(2), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  ll              8  [STACK] long long 
  9171 ;;  llu             8    0        unsigned long long 
  9172 ;;  f               4    0        unsigned long long 
  9173 ;;  vp              3    0        PTR void 
  9174 ;;  ct              3    0        unsigned char [3]
  9175 ;;  cp              2  [STACK] PTR unsigned char 
  9176 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
  9177 ;;  i               2    0        int 
  9178 ;;  done            2    0        int 
  9179 ;;  c               1  [STACK] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  2  [STACK] int 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    9
  9196 ;; This function calls:
  9197 ;;		_ctoa
  9198 ;;		_dtoa
  9199 ;;		_fputc
  9200 ;;		_stoa
  9201 ;;		_strncmp
  9202 ;; This function is called by:
  9203 ;;		_vfprintf
  9204 ;; This function uses a reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text41
  9208  002646                     __ptext41:
  9209                           	opt callstack 0
  9210  002646                     _vfpfcnvrt:
  9211                           	opt callstack 0
  9212                           
  9213                           ; BSR set to: 0
  9214                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9215  002646  0E0B               	movlw	11
  9216  002648  26E1               	addwf	fsr1l,f,c
  9217  00264A  0E00               	movlw	0
  9218  00264C  22E2               	addwfc	fsr1h,f,c
  9219                           
  9220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9221                           ;stkvar	_fmt @ sp[(-11)+-4]
  9222                           
  9223                           ;incstack = 0
  9224  00264E  0EF1               	movlw	-15
  9225  002650  006F FF8F FFD9     	movff	plusw1,fsr2l
  9226  002656  0EF2               	movlw	-14
  9227  002658  006F FF8F FFDA     	movff	plusw1,fsr2h
  9228  00265E  006F FF7F FFF6     	movff	indf2,tblptrl
  9229  002664                     	if	1	;There is more than 1 active tblptr byte
  9230  002664  0E20               	movlw	high __smallconst
  9231  002666  6EF7               	movwf	tblptrh,c
  9232  002668                     	endif
  9233  002668                     	if	0	;tblptru may be non-zero
  9234  002668                     	endif
  9235  002668                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9236  002668  0E00               	movlw	low (__smallconst shr (0+16))
  9237  00266A  6EF8               	movwf	tblptru,c
  9238  00266C                     	endif
  9239  00266C  0008               	tblrd		*
  9240  00266E  50F5               	movf	tablat,w,c
  9241  002670  0A25               	xorlw	37
  9242  002672  A4D8               	btfss	status,2,c
  9243  002674  D213               	goto	l8301
  9244                           
  9245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9246                           ;stkvar	_fmt @ sp[(-11)+-4]
  9247  002676  0EF1               	movlw	-15
  9248  002678  006F FF8F FFD9     	movff	plusw1,fsr2l
  9249  00267E  0EF2               	movlw	-14
  9250  002680  006F FF8F FFDA     	movff	plusw1,fsr2h
  9251  002686  2ADF               	incf	indf2,f,c
  9252                           
  9253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9254  002688  6A1D               	clrf	_width,c
  9255  00268A  6A1E               	clrf	_width+1,c
  9256  00268C  6A21               	clrf	_flags,c
  9257  00268E  6A22               	clrf	_flags+1,c
  9258                           
  9259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9260  002690  681F               	setf	_prec,c
  9261  002692  6820               	setf	_prec+1,c
  9262                           
  9263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9264                           ;stkvar	_fmt @ sp[(-11)+-4]
  9265  002694  0EF1               	movlw	-15
  9266  002696  006F FF8F FFD9     	movff	plusw1,fsr2l
  9267  00269C  0EF2               	movlw	-14
  9268  00269E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9269  0026A4  006F FF7F FFF6     	movff	indf2,tblptrl
  9270  0026AA                     	if	1	;There is more than 1 active tblptr byte
  9271  0026AA  0E20               	movlw	high __smallconst
  9272  0026AC  6EF7               	movwf	tblptrh,c
  9273  0026AE                     	endif
  9274  0026AE                     	if	0	;tblptru may be non-zero
  9275  0026AE                     	endif
  9276  0026AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9277  0026AE  0E00               	movlw	low (__smallconst shr (0+16))
  9278  0026B0  6EF8               	movwf	tblptru,c
  9279  0026B2                     	endif
  9280  0026B2  0008               	tblrd		*
  9281  0026B4  50F5               	movf	tablat,w,c
  9282  0026B6  0A63               	xorlw	99
  9283  0026B8  A4D8               	btfss	status,2,c
  9284  0026BA  D034               	goto	l8251
  9285                           
  9286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9287                           ;stkvar	_fmt @ sp[(-11)+-4]
  9288  0026BC  0EF1               	movlw	-15
  9289  0026BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9290  0026C4  0EF2               	movlw	-14
  9291  0026C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9292  0026CC  2ADF               	incf	indf2,f,c
  9293                           
  9294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9295                           ;stkvar	_ap @ sp[(-11)+-6]
  9296  0026CE  0EEF               	movlw	-17
  9297  0026D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9298  0026D6  0EF0               	movlw	-16
  9299  0026D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9300  0026DE  0E02               	movlw	2
  9301  0026E0  5EDE               	subwf	postinc2,f,c
  9302  0026E2  0E00               	movlw	0
  9303  0026E4  5ADD               	subwfb	postdec2,f,c
  9304  0026E6  006F FF78  F043    	movff	postinc2,btemp+10
  9305  0026EC  006F FF74  F044    	movff	postdec2,btemp+11
  9306  0026F2  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9307  0026F8  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9308  0026FE  50DF               	movf	indf2,w,c
  9309  002700  6E44               	movwf	btemp+11,c
  9310                           
  9311                           ;stkvar	_c @ sp[(-11)+10]
  9312  002702  0EFF               	movlw	-1
  9313  002704  0060  F113  FFE3   	movff	btemp+11,plusw1
  9314                           
  9315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9316                           ;stkvar	_c @ sp[(-11)+10]
  9317  00270A  0EFF               	movlw	-1
  9318  00270C  50E3               	movf	plusw1,w,c
  9319  00270E  6EE6               	movwf	postinc1,c
  9320                           
  9321                           ;stkvar	_fp @ sp[(-12)+-2]
  9322  002710  0EF2               	movlw	-14
  9323  002712  006F FF8F FFE6     	movff	plusw1,postinc1
  9324  002718  006F FF8F FFE6     	movff	plusw1,postinc1
  9325  00271E  ECC7  F02A         	call	_ctoa	;wreg free
  9326  002722  D1E3               	goto	l1905
  9327  002724                     l8251:
  9328                           
  9329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9330                           ;stkvar	_fmt @ sp[(-11)+-4]
  9331  002724  0EF1               	movlw	-15
  9332  002726  006F FF8F FFD9     	movff	plusw1,fsr2l
  9333  00272C  0EF2               	movlw	-14
  9334  00272E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9335  002734  006F FF7F FFF6     	movff	indf2,tblptrl
  9336  00273A                     	if	1	;There is more than 1 active tblptr byte
  9337  00273A  0E20               	movlw	high __smallconst
  9338  00273C  6EF7               	movwf	tblptrh,c
  9339  00273E                     	endif
  9340  00273E                     	if	0	;tblptru may be non-zero
  9341  00273E                     	endif
  9342  00273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9343  00273E  0E00               	movlw	low (__smallconst shr (0+16))
  9344  002740  6EF8               	movwf	tblptru,c
  9345  002742                     	endif
  9346  002742  0008               	tblrd		*
  9347  002744  50F5               	movf	tablat,w,c
  9348  002746  0A64               	xorlw	100
  9349  002748  B4D8               	btfsc	status,2,c
  9350  00274A  D014               	goto	u5000
  9351                           
  9352                           ;stkvar	_fmt @ sp[(-11)+-4]
  9353  00274C  0EF1               	movlw	-15
  9354  00274E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9355  002754  0EF2               	movlw	-14
  9356  002756  006F FF8F FFDA     	movff	plusw1,fsr2h
  9357  00275C  006F FF7F FFF6     	movff	indf2,tblptrl
  9358  002762                     	if	1	;There is more than 1 active tblptr byte
  9359  002762  0E20               	movlw	high __smallconst
  9360  002764  6EF7               	movwf	tblptrh,c
  9361  002766                     	endif
  9362  002766                     	if	0	;tblptru may be non-zero
  9363  002766                     	endif
  9364  002766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9365  002766  0E00               	movlw	low (__smallconst shr (0+16))
  9366  002768  6EF8               	movwf	tblptru,c
  9367  00276A                     	endif
  9368  00276A  0008               	tblrd		*
  9369  00276C  50F5               	movf	tablat,w,c
  9370  00276E  0A69               	xorlw	105
  9371  002770  A4D8               	btfss	status,2,c
  9372  002772  D073               	goto	l8263
  9373  002774                     u5000:
  9374                           
  9375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9376                           ;stkvar	_fmt @ sp[(-11)+-4]
  9377  002774  0EF1               	movlw	-15
  9378  002776  006F FF8F FFD9     	movff	plusw1,fsr2l
  9379  00277C  0EF2               	movlw	-14
  9380  00277E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9381  002784  2ADF               	incf	indf2,f,c
  9382                           
  9383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9384                           ;stkvar	_ap @ sp[(-11)+-6]
  9385  002786  0EEF               	movlw	-17
  9386  002788  006F FF8F FFD9     	movff	plusw1,fsr2l
  9387  00278E  0EF0               	movlw	-16
  9388  002790  006F FF8F FFDA     	movff	plusw1,fsr2h
  9389  002796  0E02               	movlw	2
  9390  002798  5EDE               	subwf	postinc2,f,c
  9391  00279A  0E00               	movlw	0
  9392  00279C  5ADD               	subwfb	postdec2,f,c
  9393  00279E  006F FF78  F043    	movff	postinc2,btemp+10
  9394  0027A4  006F FF74  F044    	movff	postdec2,btemp+11
  9395  0027AA  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9396  0027B0  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9397  0027B6  006F FF78  F043    	movff	postinc2,btemp+10
  9398  0027BC  006F FF74  F044    	movff	postdec2,btemp+11
  9399                           
  9400                           ;stkvar	_ll @ sp[(-11)+0]
  9401  0027C2  0EF5               	movlw	-11
  9402  0027C4  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9403  0027CA  0EF6               	movlw	-10
  9404  0027CC  0060  F113  FFE3   	movff	btemp+11,plusw1
  9405  0027D2  6A39               	clrf	btemp,c
  9406  0027D4  BEE3               	btfsc	plusw1,7,c
  9407  0027D6  6839               	setf	btemp,c
  9408  0027D8  0EF7               	movlw	-9
  9409  0027DA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9410  0027E0  0EF8               	movlw	-8
  9411  0027E2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9412  0027E8  0EF9               	movlw	-7
  9413  0027EA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9414  0027F0  0EFA               	movlw	-6
  9415  0027F2  0060  F0E7  FFE3   	movff	btemp,plusw1
  9416  0027F8  0EFB               	movlw	-5
  9417  0027FA  0060  F0E7  FFE3   	movff	btemp,plusw1
  9418  002800  0EFC               	movlw	-4
  9419  002802  0060  F0E7  FFE3   	movff	btemp,plusw1
  9420  002808                     l8259:
  9421                           
  9422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9423                           ;stkvar	_ll @ sp[(-11)+0]
  9424  002808  50E1               	movf	fsr1l,w,c
  9425  00280A  0FF5               	addlw	-11
  9426  00280C  6ED9               	movwf	fsr2l,c
  9427  00280E  50E2               	movf	fsr1h,w,c
  9428  002810  6EDA               	movwf	fsr2h,c
  9429  002812  0EFF               	movlw	255
  9430  002814  22DA               	addwfc	fsr2h,f,c
  9431  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  9432  00281C  006F FF7B FFE6     	movff	postinc2,postinc1
  9433  002822  006F FF7B FFE6     	movff	postinc2,postinc1
  9434  002828  006F FF7B FFE6     	movff	postinc2,postinc1
  9435  00282E  006F FF7B FFE6     	movff	postinc2,postinc1
  9436  002834  006F FF7B FFE6     	movff	postinc2,postinc1
  9437  00283A  006F FF7B FFE6     	movff	postinc2,postinc1
  9438  002840  006F FF7B FFE6     	movff	postinc2,postinc1
  9439                           
  9440                           ;stkvar	_fp @ sp[(-19)+-2]
  9441  002846  0EEB               	movlw	-21
  9442  002848  006F FF8F FFE6     	movff	plusw1,postinc1
  9443  00284E  006F FF8F FFE6     	movff	plusw1,postinc1
  9444  002854  ECC4  F017         	call	_dtoa	;wreg free
  9445  002858  D148               	goto	l1905
  9446  00285A                     l8263:
  9447                           
  9448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9449  00285A  0E02               	movlw	2
  9450  00285C  6EE6               	movwf	postinc1,c
  9451  00285E  0E00               	movlw	0
  9452  002860  6EE6               	movwf	postinc1,c
  9453  002862  0EBB               	movlw	STR_19& (0+255)
  9454  002864  6EE6               	movwf	postinc1,c
  9455                           
  9456                           ;stkvar	_fmt @ sp[(-14)+-4]
  9457  002866  0EEE               	movlw	-18
  9458  002868  006F FF8F FFD9     	movff	plusw1,fsr2l
  9459  00286E  0EEF               	movlw	-17
  9460  002870  006F FF8F FFDA     	movff	plusw1,fsr2h
  9461  002876  50DF               	movf	indf2,w,c
  9462  002878  6EE6               	movwf	postinc1,c
  9463  00287A  EC5D  F024         	call	_strncmp	;wreg free
  9464  00287E  5039               	movf	btemp,w,c
  9465  002880  103A               	iorwf	btemp+1,w,c
  9466  002882  B4D8               	btfsc	status,2,c
  9467  002884  D016               	goto	u5020
  9468  002886  0E02               	movlw	2
  9469  002888  6EE6               	movwf	postinc1,c
  9470  00288A  0E00               	movlw	0
  9471  00288C  6EE6               	movwf	postinc1,c
  9472  00288E  0EBE               	movlw	STR_23& (0+255)
  9473  002890  6EE6               	movwf	postinc1,c
  9474                           
  9475                           ;stkvar	_fmt @ sp[(-14)+-4]
  9476  002892  0EEE               	movlw	-18
  9477  002894  006F FF8F FFD9     	movff	plusw1,fsr2l
  9478  00289A  0EEF               	movlw	-17
  9479  00289C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9480  0028A2  50DF               	movf	indf2,w,c
  9481  0028A4  6EE6               	movwf	postinc1,c
  9482  0028A6  EC5D  F024         	call	_strncmp	;wreg free
  9483  0028AA  5039               	movf	btemp,w,c
  9484  0028AC  103A               	iorwf	btemp+1,w,c
  9485  0028AE  A4D8               	btfss	status,2,c
  9486  0028B0  D067               	goto	l8275
  9487  0028B2                     u5020:
  9488                           
  9489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9490                           ;stkvar	_fmt @ sp[(-11)+-4]
  9491  0028B2  0EF1               	movlw	-15
  9492  0028B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9493  0028BA  0EF2               	movlw	-14
  9494  0028BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9495  0028C2  0E02               	movlw	2
  9496  0028C4  26DF               	addwf	indf2,f,c
  9497                           
  9498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9499                           ;stkvar	_ap @ sp[(-11)+-6]
  9500  0028C6  0EEF               	movlw	-17
  9501  0028C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9502  0028CE  0EF0               	movlw	-16
  9503  0028D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9504  0028D6  0E04               	movlw	4
  9505  0028D8  5EDE               	subwf	postinc2,f,c
  9506  0028DA  0E00               	movlw	0
  9507  0028DC  5ADD               	subwfb	postdec2,f,c
  9508  0028DE  006F FF78  F043    	movff	postinc2,btemp+10
  9509  0028E4  006F FF74  F044    	movff	postdec2,btemp+11
  9510  0028EA  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9511  0028F0  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9512  0028F6  006F FF78  F041    	movff	postinc2,btemp+8
  9513  0028FC  006F FF78  F042    	movff	postinc2,btemp+9
  9514  002902  006F FF78  F043    	movff	postinc2,btemp+10
  9515  002908  006F FF78  F044    	movff	postinc2,btemp+11
  9516  00290E  0060  F104  F049   	movff	btemp+8,btemp+16
  9517  002914  0060  F108  F04A   	movff	btemp+9,btemp+17
  9518  00291A  0060  F10C  F04B   	movff	btemp+10,btemp+18
  9519  002920  0060  F110  F04C   	movff	btemp+11,btemp+19
  9520  002926  6A4D               	clrf	btemp+20,c
  9521  002928  BE4C               	btfsc	btemp+19,7,c
  9522  00292A  684D               	setf	btemp+20,c
  9523  00292C  0060  F134  F04E   	movff	btemp+20,btemp+21
  9524  002932  0060  F134  F04F   	movff	btemp+20,btemp+22
  9525  002938  0060  F134  F050   	movff	btemp+20,btemp+23
  9526                           
  9527                           ;stkvar	_ll @ sp[(-11)+0]
  9528  00293E  0EF5               	movlw	-11
  9529  002940  0060  F127  FFE3   	movff	btemp+16,plusw1
  9530  002946  0EF6               	movlw	-10
  9531  002948  0060  F12B  FFE3   	movff	btemp+17,plusw1
  9532  00294E  0EF7               	movlw	-9
  9533  002950  0060  F12F  FFE3   	movff	btemp+18,plusw1
  9534  002956  0EF8               	movlw	-8
  9535  002958  0060  F133  FFE3   	movff	btemp+19,plusw1
  9536  00295E  0EF9               	movlw	-7
  9537  002960  0060  F137  FFE3   	movff	btemp+20,plusw1
  9538  002966  0EFA               	movlw	-6
  9539  002968  0060  F13B  FFE3   	movff	btemp+21,plusw1
  9540  00296E  0EFB               	movlw	-5
  9541  002970  0060  F13F  FFE3   	movff	btemp+22,plusw1
  9542  002976  0EFC               	movlw	-4
  9543  002978  0060  F143  FFE3   	movff	btemp+23,plusw1
  9544  00297E  D744               	goto	l8259
  9545  002980                     l8275:
  9546                           
  9547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9548                           ;stkvar	_fmt @ sp[(-11)+-4]
  9549  002980  0EF1               	movlw	-15
  9550  002982  006F FF8F FFD9     	movff	plusw1,fsr2l
  9551  002988  0EF2               	movlw	-14
  9552  00298A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9553  002990  006F FF7F FFF6     	movff	indf2,tblptrl
  9554  002996                     	if	1	;There is more than 1 active tblptr byte
  9555  002996  0E20               	movlw	high __smallconst
  9556  002998  6EF7               	movwf	tblptrh,c
  9557  00299A                     	endif
  9558  00299A                     	if	0	;tblptru may be non-zero
  9559  00299A                     	endif
  9560  00299A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9561  00299A  0E00               	movlw	low (__smallconst shr (0+16))
  9562  00299C  6EF8               	movwf	tblptru,c
  9563  00299E                     	endif
  9564  00299E  0008               	tblrd		*
  9565  0029A0  50F5               	movf	tablat,w,c
  9566  0029A2  0A73               	xorlw	115
  9567  0029A4  A4D8               	btfss	status,2,c
  9568  0029A6  D040               	goto	l8285
  9569                           
  9570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9571                           ;stkvar	_fmt @ sp[(-11)+-4]
  9572  0029A8  0EF1               	movlw	-15
  9573  0029AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9574  0029B0  0EF2               	movlw	-14
  9575  0029B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9576  0029B8  2ADF               	incf	indf2,f,c
  9577                           
  9578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9579                           ;stkvar	_ap @ sp[(-11)+-6]
  9580  0029BA  0EEF               	movlw	-17
  9581  0029BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9582  0029C2  0EF0               	movlw	-16
  9583  0029C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9584  0029CA  0E02               	movlw	2
  9585  0029CC  5EDE               	subwf	postinc2,f,c
  9586  0029CE  0E00               	movlw	0
  9587  0029D0  5ADD               	subwfb	postdec2,f,c
  9588  0029D2  006F FF78  F043    	movff	postinc2,btemp+10
  9589  0029D8  006F FF74  F044    	movff	postdec2,btemp+11
  9590  0029DE  0060  F10F  FFD9   	movff	btemp+10,fsr2l
  9591  0029E4  0060  F113  FFDA   	movff	btemp+11,fsr2h
  9592  0029EA  006F FF78  F043    	movff	postinc2,btemp+10
  9593  0029F0  006F FF74  F044    	movff	postdec2,btemp+11
  9594                           
  9595                           ;stkvar	_cp @ sp[(-11)+8]
  9596  0029F6  0EFE               	movlw	-2
  9597  0029F8  0060  F113  FFE3   	movff	btemp+11,plusw1
  9598  0029FE  0EFD               	movlw	-3
  9599  002A00  0060  F10F  FFE3   	movff	btemp+10,plusw1
  9600                           
  9601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9602                           ;stkvar	_cp @ sp[(-11)+8]
  9603  002A06  0EFD               	movlw	-3
  9604  002A08  006F FF8F FFE6     	movff	plusw1,postinc1
  9605  002A0E  006F FF8F FFE6     	movff	plusw1,postinc1
  9606                           
  9607                           ;stkvar	_fp @ sp[(-13)+-2]
  9608  002A14  0EF1               	movlw	-15
  9609  002A16  006F FF8F FFE6     	movff	plusw1,postinc1
  9610  002A1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9611  002A22  EC08  F01D         	call	_stoa	;wreg free
  9612  002A26  D061               	goto	l1905
  9613  002A28                     l8285:
  9614                           
  9615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9616                           ;stkvar	_fmt @ sp[(-11)+-4]
  9617  002A28  0EF1               	movlw	-15
  9618  002A2A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9619  002A30  0EF2               	movlw	-14
  9620  002A32  006F FF8F FFDA     	movff	plusw1,fsr2h
  9621  002A38  006F FF7F FFF6     	movff	indf2,tblptrl
  9622  002A3E                     	if	1	;There is more than 1 active tblptr byte
  9623  002A3E  0E20               	movlw	high __smallconst
  9624  002A40  6EF7               	movwf	tblptrh,c
  9625  002A42                     	endif
  9626  002A42                     	if	0	;tblptru may be non-zero
  9627  002A42                     	endif
  9628  002A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9629  002A42  0E00               	movlw	low (__smallconst shr (0+16))
  9630  002A44  6EF8               	movwf	tblptru,c
  9631  002A46                     	endif
  9632  002A46  0008               	tblrd		*
  9633  002A48  50F5               	movf	tablat,w,c
  9634  002A4A  0A25               	xorlw	37
  9635  002A4C  A4D8               	btfss	status,2,c
  9636  002A4E  D018               	goto	l8295
  9637                           
  9638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9639                           ;stkvar	_fmt @ sp[(-11)+-4]
  9640  002A50  0EF1               	movlw	-15
  9641  002A52  006F FF8F FFD9     	movff	plusw1,fsr2l
  9642  002A58  0EF2               	movlw	-14
  9643  002A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9644  002A60  2ADF               	incf	indf2,f,c
  9645                           
  9646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9647                           ;stkvar	_fp @ sp[(-11)+-2]
  9648  002A62  0EF3               	movlw	-13
  9649  002A64  006F FF8F FFE6     	movff	plusw1,postinc1
  9650  002A6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9651  002A70  0E25               	movlw	37
  9652  002A72  6EE6               	movwf	postinc1,c
  9653  002A74  0E00               	movlw	0
  9654  002A76  6EE6               	movwf	postinc1,c
  9655  002A78  ECAF  F025         	call	_fputc	;wreg free
  9656  002A7C                     l8291:
  9657                           
  9658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9659  002A7C  0E01               	movlw	1
  9660  002A7E  D00A               	goto	L27
  9661  002A80                     l8295:
  9662                           
  9663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9664                           ;stkvar	_fmt @ sp[(-11)+-4]
  9665  002A80  0EF1               	movlw	-15
  9666  002A82  006F FF8F FFD9     	movff	plusw1,fsr2l
  9667  002A88  0EF2               	movlw	-14
  9668  002A8A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9669  002A90  2ADF               	incf	indf2,f,c
  9670                           
  9671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9672  002A92  0E00               	movlw	0
  9673  002A94                     L27:
  9674  002A94  6E39               	movwf	btemp,c
  9675  002A96  0E00               	movlw	0
  9676  002A98  6E3A               	movwf	btemp+1,c
  9677  002A9A  D027               	goto	l1905
  9678  002A9C                     l8301:
  9679                           
  9680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9681                           ;stkvar	_fp @ sp[(-11)+-2]
  9682  002A9C  0EF3               	movlw	-13
  9683  002A9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9684  002AA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9685                           
  9686                           ;stkvar	_fmt @ sp[(-13)+-4]
  9687  002AAA  0EEF               	movlw	-17
  9688  002AAC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9689  002AB2  0EF0               	movlw	-16
  9690  002AB4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9691  002ABA  006F FF7F FFF6     	movff	indf2,tblptrl
  9692  002AC0                     	if	1	;There is more than 1 active tblptr byte
  9693  002AC0  0E20               	movlw	high __smallconst
  9694  002AC2  6EF7               	movwf	tblptrh,c
  9695  002AC4                     	endif
  9696  002AC4                     	if	0	;tblptru may be non-zero
  9697  002AC4                     	endif
  9698  002AC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9699  002AC4  0E00               	movlw	low (__smallconst shr (0+16))
  9700  002AC6  6EF8               	movwf	tblptru,c
  9701  002AC8                     	endif
  9702  002AC8  0008               	tblrd		*
  9703  002ACA  50F5               	movf	tablat,w,c
  9704  002ACC  6EE6               	movwf	postinc1,c
  9705  002ACE  0E00               	movlw	0
  9706  002AD0  6EE6               	movwf	postinc1,c
  9707  002AD2  ECAF  F025         	call	_fputc	;wreg free
  9708                           
  9709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9710                           ;stkvar	_fmt @ sp[(-11)+-4]
  9711  002AD6  0EF1               	movlw	-15
  9712  002AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9713  002ADE  0EF2               	movlw	-14
  9714  002AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9715  002AE6  2ADF               	incf	indf2,f,c
  9716  002AE8  D7C9               	goto	l8291
  9717  002AEA                     l1905:
  9718                           
  9719                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9720  002AEA  0EEF               	movlw	239
  9721  002AEC  26E1               	addwf	fsr1l,f,c
  9722  002AEE  0EFF               	movlw	255
  9723  002AF0  22E2               	addwfc	fsr1h,f,c
  9724  002AF2  0012               	return		;funcret
  9725  002AF4                     __end_of_vfpfcnvrt:
  9726                           	opt callstack 0
  9727                           
  9728 ;; *************** function _strncmp *****************
  9729 ;; Defined at:
  9730 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  _l              1  [STACK] PTR const unsigned char 
  9733 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9734 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9735 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9736 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9737 ;;		 -> STR_1(17), 
  9738 ;;  _r              1  [STACK] PTR const unsigned char 
  9739 ;;		 -> STR_25(3), STR_21(3), 
  9740 ;;  n               2  [STACK] unsigned int 
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;  r               1  [STACK] PTR const unsigned char 
  9743 ;;		 -> STR_25(3), STR_21(3), 
  9744 ;;  l               1  [STACK] PTR const unsigned char 
  9745 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9746 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9747 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9748 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9749 ;;		 -> STR_1(17), 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  2  [STACK] int 
  9752 ;; Registers used:
  9753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;Total ram usage:        0 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:    3
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_vfpfcnvrt
  9770 ;; This function uses a reentrant model
  9771 ;;
  9772                           
  9773                           	psect	text42
  9774  0048BA                     __ptext42:
  9775                           	opt callstack 0
  9776  0048BA                     _strncmp:
  9777                           	opt callstack 0
  9778                           
  9779                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9780  0048BA  52E6               	movf	postinc1,f,c
  9781  0048BC  52E6               	movf	postinc1,f,c
  9782                           
  9783                           ;stkvar	__l @ sp[(-2)+-1]
  9784                           
  9785                           ;incstack = 0
  9786  0048BE  0EFD               	movlw	-3
  9787  0048C0  006F FF8C  F044    	movff	plusw1,btemp+11
  9788                           
  9789                           ;stkvar	_l @ sp[(-2)+1]
  9790  0048C6  0EFF               	movlw	-1
  9791  0048C8  0060  F113  FFE3   	movff	btemp+11,plusw1
  9792                           
  9793                           ;stkvar	__r @ sp[(-2)+-2]
  9794  0048CE  0EFC               	movlw	-4
  9795  0048D0  006F FF8C  F044    	movff	plusw1,btemp+11
  9796                           
  9797                           ;stkvar	_r @ sp[(-2)+0]
  9798  0048D6  0EFE               	movlw	-2
  9799  0048D8  0060  F113  FFE3   	movff	btemp+11,plusw1
  9800                           
  9801                           ;stkvar	_n @ sp[(-2)+-4]
  9802  0048DE  0EFA               	movlw	-6
  9803  0048E0  006F FF8C  F039    	movff	plusw1,btemp
  9804  0048E6  0E01               	movlw	1
  9805  0048E8  5E39               	subwf	btemp,f,c
  9806  0048EA  0EFA               	movlw	-6
  9807  0048EC  0060  F0E7  FFE3   	movff	btemp,plusw1
  9808  0048F2  0EFB               	movlw	-5
  9809  0048F4  006F FF8C  F039    	movff	plusw1,btemp
  9810  0048FA  0E00               	movlw	0
  9811  0048FC  5A39               	subwfb	btemp,f,c
  9812  0048FE  0EFB               	movlw	-5
  9813  004900  0060  F0E7  FFE3   	movff	btemp,plusw1
  9814  004906  0EFA               	movlw	-6
  9815  004908  28E3               	incf	plusw1,w,c
  9816  00490A  E121               	bnz	l5583
  9817  00490C  0EFB               	movlw	-5
  9818  00490E  28E3               	incf	plusw1,w,c
  9819  004910  A4D8               	btfss	status,2,c
  9820  004912  D01D               	goto	l5583
  9821  004914  0E00               	movlw	0
  9822  004916  6E39               	movwf	btemp,c
  9823  004918  0E00               	movlw	0
  9824  00491A  6E3A               	movwf	btemp+1,c
  9825  00491C  D091               	goto	l2662
  9826  00491E                     l5579:
  9827                           
  9828                           ;stkvar	_l @ sp[(-2)+1]
  9829  00491E  0EFF               	movlw	-1
  9830  004920  2AE3               	incf	plusw1,f,c
  9831                           
  9832                           ;stkvar	_r @ sp[(-2)+0]
  9833  004922  0EFE               	movlw	-2
  9834  004924  2AE3               	incf	plusw1,f,c
  9835                           
  9836                           ;stkvar	_n @ sp[(-2)+-4]
  9837  004926  0EFA               	movlw	-6
  9838  004928  006F FF8C  F039    	movff	plusw1,btemp
  9839  00492E  0E01               	movlw	1
  9840  004930  5E39               	subwf	btemp,f,c
  9841  004932  0EFA               	movlw	-6
  9842  004934  0060  F0E7  FFE3   	movff	btemp,plusw1
  9843  00493A  0EFB               	movlw	-5
  9844  00493C  006F FF8C  F039    	movff	plusw1,btemp
  9845  004942  0E00               	movlw	0
  9846  004944  5A39               	subwfb	btemp,f,c
  9847  004946  0EFB               	movlw	-5
  9848  004948  0060  F0E7  FFE3   	movff	btemp,plusw1
  9849  00494E                     l5583:
  9850                           
  9851                           ;stkvar	_l @ sp[(-2)+1]
  9852  00494E  50E1               	movf	fsr1l,w,c
  9853  004950  0FFF               	addlw	-1
  9854  004952  6ED9               	movwf	fsr2l,c
  9855  004954  50E2               	movf	fsr1h,w,c
  9856  004956  6EDA               	movwf	fsr2h,c
  9857  004958  0EFF               	movlw	255
  9858  00495A  22DA               	addwfc	fsr2h,f,c
  9859  00495C  006F FF7F FFF6     	movff	indf2,tblptrl
  9860  004962                     	if	1	;There is more than 1 active tblptr byte
  9861  004962  0E20               	movlw	high __smallconst
  9862  004964  6EF7               	movwf	tblptrh,c
  9863  004966                     	endif
  9864  004966                     	if	0	;tblptru may be non-zero
  9865  004966                     	endif
  9866  004966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9867  004966  0E00               	movlw	low (__smallconst shr (0+16))
  9868  004968  6EF8               	movwf	tblptru,c
  9869  00496A                     	endif
  9870  00496A  0008               	tblrd		*
  9871  00496C  50F5               	movf	tablat,w,c
  9872  00496E  0900               	iorlw	0
  9873  004970  B4D8               	btfsc	status,2,c
  9874  004972  D041               	goto	u3010
  9875                           
  9876                           ;stkvar	_r @ sp[(-2)+0]
  9877  004974  50E1               	movf	fsr1l,w,c
  9878  004976  0FFE               	addlw	-2
  9879  004978  6ED9               	movwf	fsr2l,c
  9880  00497A  50E2               	movf	fsr1h,w,c
  9881  00497C  6EDA               	movwf	fsr2h,c
  9882  00497E  0EFF               	movlw	255
  9883  004980  22DA               	addwfc	fsr2h,f,c
  9884  004982  006F FF7F FFF6     	movff	indf2,tblptrl
  9885  004988                     	if	1	;There is more than 1 active tblptr byte
  9886  004988  0E20               	movlw	high __smallconst
  9887  00498A  6EF7               	movwf	tblptrh,c
  9888  00498C                     	endif
  9889  00498C                     	if	0	;tblptru may be non-zero
  9890  00498C                     	endif
  9891  00498C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9892  00498C  0E00               	movlw	low (__smallconst shr (0+16))
  9893  00498E  6EF8               	movwf	tblptru,c
  9894  004990                     	endif
  9895  004990  0008               	tblrd		*
  9896  004992  50F5               	movf	tablat,w,c
  9897  004994  0900               	iorlw	0
  9898  004996  B4D8               	btfsc	status,2,c
  9899  004998  D02E               	goto	u3010
  9900                           
  9901                           ;stkvar	_n @ sp[(-2)+-4]
  9902  00499A  0EFA               	movlw	-6
  9903  00499C  006F FF8C  F039    	movff	plusw1,btemp
  9904  0049A2  0EFB               	movlw	-5
  9905  0049A4  50E3               	movf	plusw1,w,c
  9906  0049A6  1039               	iorwf	btemp,w,c
  9907  0049A8  B4D8               	btfsc	status,2,c
  9908  0049AA  D025               	goto	u3010
  9909                           
  9910                           ;stkvar	_l @ sp[(-2)+1]
  9911  0049AC  50E1               	movf	fsr1l,w,c
  9912  0049AE  0FFF               	addlw	-1
  9913  0049B0  6ED9               	movwf	fsr2l,c
  9914  0049B2  50E2               	movf	fsr1h,w,c
  9915  0049B4  6EDA               	movwf	fsr2h,c
  9916  0049B6  0EFF               	movlw	255
  9917  0049B8  22DA               	addwfc	fsr2h,f,c
  9918  0049BA  006F FF7F FFF6     	movff	indf2,tblptrl
  9919  0049C0                     	if	1	;There is more than 1 active tblptr byte
  9920  0049C0  0E20               	movlw	high __smallconst
  9921  0049C2  6EF7               	movwf	tblptrh,c
  9922  0049C4                     	endif
  9923  0049C4                     	if	0	;tblptru may be non-zero
  9924  0049C4                     	endif
  9925  0049C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9926  0049C4  0E00               	movlw	low (__smallconst shr (0+16))
  9927  0049C6  6EF8               	movwf	tblptru,c
  9928  0049C8                     	endif
  9929  0049C8  0008               	tblrd		*
  9930  0049CA  006F FFD4  F044    	movff	tablat,btemp+11
  9931                           
  9932                           ;stkvar	_r @ sp[(-2)+0]
  9933  0049D0  50E1               	movf	fsr1l,w,c
  9934  0049D2  0FFE               	addlw	-2
  9935  0049D4  6ED9               	movwf	fsr2l,c
  9936  0049D6  50E2               	movf	fsr1h,w,c
  9937  0049D8  6EDA               	movwf	fsr2h,c
  9938  0049DA  0EFF               	movlw	255
  9939  0049DC  22DA               	addwfc	fsr2h,f,c
  9940  0049DE  006F FF7F FFF6     	movff	indf2,tblptrl
  9941  0049E4                     	if	1	;There is more than 1 active tblptr byte
  9942  0049E4  0E20               	movlw	high __smallconst
  9943  0049E6  6EF7               	movwf	tblptrh,c
  9944  0049E8                     	endif
  9945  0049E8                     	if	0	;tblptru may be non-zero
  9946  0049E8                     	endif
  9947  0049E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9948  0049E8  0E00               	movlw	low (__smallconst shr (0+16))
  9949  0049EA  6EF8               	movwf	tblptru,c
  9950  0049EC                     	endif
  9951  0049EC  0008               	tblrd		*
  9952  0049EE  50F5               	movf	tablat,w,c
  9953  0049F0  1844               	xorwf	btemp+11,w,c
  9954  0049F2  B4D8               	btfsc	status,2,c
  9955  0049F4  D794               	goto	l5579
  9956  0049F6                     u3010:
  9957                           
  9958                           ;stkvar	_l @ sp[(-2)+1]
  9959  0049F6  50E1               	movf	fsr1l,w,c
  9960  0049F8  0FFF               	addlw	-1
  9961  0049FA  6ED9               	movwf	fsr2l,c
  9962  0049FC  50E2               	movf	fsr1h,w,c
  9963  0049FE  6EDA               	movwf	fsr2h,c
  9964  004A00  0EFF               	movlw	255
  9965  004A02  22DA               	addwfc	fsr2h,f,c
  9966  004A04  006F FF7F FFF6     	movff	indf2,tblptrl
  9967  004A0A                     	if	1	;There is more than 1 active tblptr byte
  9968  004A0A  0E20               	movlw	high __smallconst
  9969  004A0C  6EF7               	movwf	tblptrh,c
  9970  004A0E                     	endif
  9971  004A0E                     	if	0	;tblptru may be non-zero
  9972  004A0E                     	endif
  9973  004A0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9974  004A0E  0E00               	movlw	low (__smallconst shr (0+16))
  9975  004A10  6EF8               	movwf	tblptru,c
  9976  004A12                     	endif
  9977  004A12  0008               	tblrd		*
  9978  004A14  50F5               	movf	tablat,w,c
  9979  004A16  6E39               	movwf	btemp,c
  9980  004A18  6A3A               	clrf	btemp+1,c
  9981                           
  9982                           ;stkvar	_r @ sp[(-2)+0]
  9983  004A1A  50E1               	movf	fsr1l,w,c
  9984  004A1C  0FFE               	addlw	-2
  9985  004A1E  6ED9               	movwf	fsr2l,c
  9986  004A20  50E2               	movf	fsr1h,w,c
  9987  004A22  6EDA               	movwf	fsr2h,c
  9988  004A24  0EFF               	movlw	255
  9989  004A26  22DA               	addwfc	fsr2h,f,c
  9990  004A28  006F FF7F FFF6     	movff	indf2,tblptrl
  9991  004A2E                     	if	1	;There is more than 1 active tblptr byte
  9992  004A2E  0E20               	movlw	high __smallconst
  9993  004A30  6EF7               	movwf	tblptrh,c
  9994  004A32                     	endif
  9995  004A32                     	if	0	;tblptru may be non-zero
  9996  004A32                     	endif
  9997  004A32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9998  004A32  0E00               	movlw	low (__smallconst shr (0+16))
  9999  004A34  6EF8               	movwf	tblptru,c
 10000  004A36                     	endif
 10001  004A36  0008               	tblrd		*
 10002  004A38  50F5               	movf	tablat,w,c
 10003  004A3A  5E39               	subwf	btemp,f,c
 10004  004A3C  0E00               	movlw	0
 10005  004A3E  5A3A               	subwfb	btemp+1,f,c
 10006  004A40                     l2662:
 10007                           
 10008                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10009  004A40  0EFA               	movlw	250
 10010  004A42  26E1               	addwf	fsr1l,f,c
 10011  004A44  0EFF               	movlw	255
 10012  004A46  22E2               	addwfc	fsr1h,f,c
 10013  004A48  0012               	return		;funcret
 10014  004A4A                     __end_of_strncmp:
 10015                           	opt callstack 0
 10016                           
 10017 ;; *************** function _stoa *****************
 10018 ;; Defined at:
 10019 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10022 ;;		 -> f(5), NULL(0), 
 10023 ;;  s               2  [STACK] PTR unsigned char 
 10024 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  nuls            7  [STACK] unsigned char [7]
 10027 ;;  l               2  [STACK] int 
 10028 ;;  p               2  [STACK] int 
 10029 ;;  cp              2  [STACK] PTR unsigned char 
 10030 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10031 ;;		 -> V(98), 
 10032 ;;  w               2  [STACK] int 
 10033 ;;  i               2  [STACK] int 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  2  [STACK] int 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    6
 10050 ;; This function calls:
 10051 ;;		_fputc
 10052 ;;		_strlen
 10053 ;; This function is called by:
 10054 ;;		_vfpfcnvrt
 10055 ;; This function uses a reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text43
 10059  003A10                     __ptext43:
 10060                           	opt callstack 0
 10061  003A10                     _stoa:
 10062                           	opt callstack 0
 10063                           
 10064                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10065  003A10  0E11               	movlw	17
 10066  003A12  26E1               	addwf	fsr1l,f,c
 10067  003A14  0E00               	movlw	0
 10068  003A16  22E2               	addwfc	fsr1h,f,c
 10069                           
 10070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10071                           
 10072                           ;incstack = 0
 10073  003A18  EE20  F100         	lfsr	2,stoa@F1144
 10074                           
 10075                           ;stkvar	_nuls @ sp[(-17)+0]
 10076  003A1C  0E07               	movlw	7
 10077  003A1E  6E39               	movwf	btemp,c
 10078  003A20  0EEF               	movlw	-17
 10079  003A22                     us487999:
 10080  003A22  006F FF7B FFE3     	movff	postinc2,plusw1
 10081  003A28  28E8               	incf	wreg,w,c
 10082  003A2A  2E39               	decfsz	btemp,f,c
 10083  003A2C  D7FA               	bra	us487999
 10084                           
 10085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10086                           ;stkvar	_s @ sp[(-17)+-4]
 10087  003A2E  0EEB               	movlw	-21
 10088  003A30  006F FF8C  F043    	movff	plusw1,btemp+10
 10089  003A36  0EEC               	movlw	-20
 10090  003A38  006F FF8C  F044    	movff	plusw1,btemp+11
 10091                           
 10092                           ;stkvar	_cp @ sp[(-17)+11]
 10093  003A3E  0EFB               	movlw	-5
 10094  003A40  0060  F113  FFE3   	movff	btemp+11,plusw1
 10095  003A46  0EFA               	movlw	-6
 10096  003A48  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10097                           
 10098                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10099                           ;stkvar	_cp @ sp[(-17)+11]
 10100  003A4E  0EFA               	movlw	-6
 10101  003A50  006F FF8C  F039    	movff	plusw1,btemp
 10102  003A56  0EFB               	movlw	-5
 10103  003A58  50E3               	movf	plusw1,w,c
 10104  003A5A  1039               	iorwf	btemp,w,c
 10105  003A5C  A4D8               	btfss	status,2,c
 10106  003A5E  D00E               	goto	l8189
 10107                           
 10108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10109                           ;stkvar	_nuls @ sp[(-17)+0]
 10110  003A60  0EEF               	movlw	239
 10111  003A62  24E1               	addwf	fsr1l,w,c
 10112  003A64  6E43               	movwf	btemp+10,c
 10113  003A66  0EFF               	movlw	255
 10114  003A68  20E2               	addwfc	fsr1h,w,c
 10115  003A6A  6E44               	movwf	btemp+11,c
 10116                           
 10117                           ;stkvar	_cp @ sp[(-17)+11]
 10118  003A6C  0EFB               	movlw	-5
 10119  003A6E  0060  F113  FFE3   	movff	btemp+11,plusw1
 10120  003A74  0EFA               	movlw	-6
 10121  003A76  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10122  003A7C                     l8189:
 10123                           
 10124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10125                           ;stkvar	_cp @ sp[(-17)+11]
 10126  003A7C  0EFA               	movlw	-6
 10127  003A7E  006F FF8F FFE6     	movff	plusw1,postinc1
 10128  003A84  006F FF8F FFE6     	movff	plusw1,postinc1
 10129  003A8A  ECF7  F028         	call	_strlen	;wreg free
 10130                           
 10131                           ;stkvar	_l @ sp[(-17)+7]
 10132  003A8E  0EF6               	movlw	-10
 10133  003A90  0060  F0E7  FFE3   	movff	btemp,plusw1
 10134  003A96  0EF7               	movlw	-9
 10135  003A98  0060  F0EB  FFE3   	movff	btemp+1,plusw1
 10136                           
 10137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10138                           ;stkvar	_p @ sp[(-17)+9]
 10139  003A9E  0EF8               	movlw	-8
 10140  003AA0  0060  F07F  FFE3   	movff	_prec,plusw1
 10141  003AA6  0EF9               	movlw	-7
 10142  003AA8  0060  F083  FFE3   	movff	_prec+1,plusw1
 10143                           
 10144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10145                           ;stkvar	_p @ sp[(-17)+9]
 10146  003AAE  0EF9               	movlw	-7
 10147  003AB0  BEE3               	btfsc	plusw1,7,c
 10148  003AB2  D023               	goto	l1886
 10149                           
 10150                           ;stkvar	_l @ sp[(-17)+7]
 10151                           ;stkvar	_p @ sp[(-17)+9]
 10152  003AB4  50E1               	movf	fsr1l,w,c
 10153  003AB6  0FF8               	addlw	-8
 10154  003AB8  6ED9               	movwf	fsr2l,c
 10155  003ABA  50E2               	movf	fsr1h,w,c
 10156  003ABC  6EDA               	movwf	fsr2h,c
 10157  003ABE  0EFF               	movlw	255
 10158  003AC0  22DA               	addwfc	fsr2h,f,c
 10159  003AC2  0EF6               	movlw	-10
 10160  003AC4  50E3               	movf	plusw1,w,c
 10161  003AC6  5CDE               	subwf	postinc2,w,c
 10162  003AC8  50DE               	movf	postinc2,w,c
 10163  003ACA  0A80               	xorlw	128
 10164  003ACC  6E39               	movwf	btemp,c
 10165  003ACE  0EF7               	movlw	-9
 10166  003AD0  50E3               	movf	plusw1,w,c
 10167  003AD2  0A80               	xorlw	128
 10168  003AD4  5839               	subwfb	btemp,w,c
 10169  003AD6  B0D8               	btfsc	status,0,c
 10170  003AD8  D010               	goto	l1886
 10171                           
 10172                           ;stkvar	_p @ sp[(-17)+9]
 10173                           ;stkvar	_l @ sp[(-17)+7]
 10174  003ADA  0EF8               	movlw	-8
 10175  003ADC  006F FF8C  F039    	movff	plusw1,btemp
 10176  003AE2  0EF6               	movlw	-10
 10177  003AE4  0060  F0E7  FFE3   	movff	btemp,plusw1
 10178  003AEA  0EF9               	movlw	-7
 10179  003AEC  006F FF8C  F039    	movff	plusw1,btemp
 10180  003AF2  0EF7               	movlw	-9
 10181  003AF4  0060  F0E7  FFE3   	movff	btemp,plusw1
 10182  003AFA                     l1886:
 10183                           
 10184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10185                           ;stkvar	_l @ sp[(-17)+7]
 10186                           ;stkvar	_p @ sp[(-17)+9]
 10187  003AFA  0EF6               	movlw	-10
 10188  003AFC  006F FF8C  F039    	movff	plusw1,btemp
 10189  003B02  0EF8               	movlw	-8
 10190  003B04  0060  F0E7  FFE3   	movff	btemp,plusw1
 10191  003B0A  0EF7               	movlw	-9
 10192  003B0C  006F FF8C  F039    	movff	plusw1,btemp
 10193  003B12  0EF9               	movlw	-7
 10194  003B14  0060  F0E7  FFE3   	movff	btemp,plusw1
 10195                           
 10196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10197                           ;stkvar	_w @ sp[(-17)+13]
 10198  003B1A  0EFC               	movlw	-4
 10199  003B1C  0060  F077  FFE3   	movff	_width,plusw1
 10200  003B22  0EFD               	movlw	-3
 10201  003B24  0060  F07B  FFE3   	movff	_width+1,plusw1
 10202                           
 10203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10204  003B2A  A021               	btfss	_flags,0,c
 10205  003B2C  D01F               	goto	l8209
 10206  003B2E  D031               	goto	u4920
 10207  003B30                     l8205:
 10208                           
 10209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10210                           ;stkvar	_fp @ sp[(-17)+-2]
 10211  003B30  0EED               	movlw	-19
 10212  003B32  006F FF8F FFE6     	movff	plusw1,postinc1
 10213  003B38  006F FF8F FFE6     	movff	plusw1,postinc1
 10214  003B3E  0E20               	movlw	32
 10215  003B40  6EE6               	movwf	postinc1,c
 10216  003B42  0E00               	movlw	0
 10217  003B44  6EE6               	movwf	postinc1,c
 10218  003B46  ECAF  F025         	call	_fputc	;wreg free
 10219                           
 10220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10221                           ;stkvar	_l @ sp[(-17)+7]
 10222  003B4A  0EF6               	movlw	-10
 10223  003B4C  50E3               	movf	plusw1,w,c
 10224  003B4E  0F01               	addlw	1
 10225  003B50  6E39               	movwf	btemp,c
 10226  003B52  0EF6               	movlw	-10
 10227  003B54  0060  F0E7  FFE3   	movff	btemp,plusw1
 10228  003B5A  6A39               	clrf	btemp,c
 10229  003B5C  0EF7               	movlw	-9
 10230  003B5E  50E3               	movf	plusw1,w,c
 10231  003B60  2039               	addwfc	btemp,w,c
 10232  003B62  6E39               	movwf	btemp,c
 10233  003B64  0EF7               	movlw	-9
 10234  003B66  0060  F0E7  FFE3   	movff	btemp,plusw1
 10235  003B6C                     l8209:
 10236                           
 10237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10238                           ;stkvar	_w @ sp[(-17)+13]
 10239                           ;stkvar	_l @ sp[(-17)+7]
 10240  003B6C  50E1               	movf	fsr1l,w,c
 10241  003B6E  0FF6               	addlw	-10
 10242  003B70  6ED9               	movwf	fsr2l,c
 10243  003B72  50E2               	movf	fsr1h,w,c
 10244  003B74  6EDA               	movwf	fsr2h,c
 10245  003B76  0EFF               	movlw	255
 10246  003B78  22DA               	addwfc	fsr2h,f,c
 10247  003B7A  0EFC               	movlw	-4
 10248  003B7C  50E3               	movf	plusw1,w,c
 10249  003B7E  5CDE               	subwf	postinc2,w,c
 10250  003B80  50DE               	movf	postinc2,w,c
 10251  003B82  0A80               	xorlw	128
 10252  003B84  6E39               	movwf	btemp,c
 10253  003B86  0EFD               	movlw	-3
 10254  003B88  50E3               	movf	plusw1,w,c
 10255  003B8A  0A80               	xorlw	128
 10256  003B8C  5839               	subwfb	btemp,w,c
 10257  003B8E  A0D8               	btfss	status,0,c
 10258  003B90  D7CF               	goto	l8205
 10259  003B92                     u4920:
 10260                           
 10261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10262                           ;stkvar	_i @ sp[(-17)+15]
 10263  003B92  0EFE               	movlw	-2
 10264  003B94  6AE3               	clrf	plusw1,c
 10265  003B96  0EFF               	movlw	-1
 10266  003B98  6AE3               	clrf	plusw1,c
 10267                           
 10268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10269  003B9A  D045               	goto	l8219
 10270  003B9C                     l8213:
 10271                           
 10272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10273                           ;stkvar	_fp @ sp[(-17)+-2]
 10274  003B9C  0EED               	movlw	-19
 10275  003B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10276  003BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10277                           
 10278                           ;stkvar	_cp @ sp[(-19)+11]
 10279  003BAA  0EF8               	movlw	-8
 10280  003BAC  006F FF8F FFF6     	movff	plusw1,tblptrl
 10281  003BB2  0EF9               	movlw	-7
 10282  003BB4  006F FF8F FFF7     	movff	plusw1,tblptrh
 10283  003BBA  0E00               	movlw	low (__smallconst shr (0+16))
 10284  003BBC  6EF8               	movwf	tblptru,c
 10285  003BBE  0E1F               	movlw	(high __ramtop+-1)
 10286  003BC0  64F7               	cpfsgt	tblptrh,c
 10287  003BC2  D003               	bra	u4937
 10288  003BC4  0008               	tblrd		*
 10289  003BC6  50F5               	movf	tablat,w,c
 10290  003BC8  D007               	bra	u4930
 10291  003BCA                     u4937:
 10292  003BCA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10293  003BD0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10294  003BD6  50EF               	movf	indf0,w,c
 10295  003BD8                     u4930:
 10296  003BD8  6EE6               	movwf	postinc1,c
 10297  003BDA  0E00               	movlw	0
 10298  003BDC  6EE6               	movwf	postinc1,c
 10299  003BDE  ECAF  F025         	call	_fputc	;wreg free
 10300                           
 10301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10302                           ;stkvar	_cp @ sp[(-17)+11]
 10303  003BE2  0EFA               	movlw	-6
 10304  003BE4  50E3               	movf	plusw1,w,c
 10305  003BE6  0F01               	addlw	1
 10306  003BE8  6E39               	movwf	btemp,c
 10307  003BEA  0EFA               	movlw	-6
 10308  003BEC  0060  F0E7  FFE3   	movff	btemp,plusw1
 10309  003BF2  6A39               	clrf	btemp,c
 10310  003BF4  0EFB               	movlw	-5
 10311  003BF6  50E3               	movf	plusw1,w,c
 10312  003BF8  2039               	addwfc	btemp,w,c
 10313  003BFA  6E39               	movwf	btemp,c
 10314  003BFC  0EFB               	movlw	-5
 10315  003BFE  0060  F0E7  FFE3   	movff	btemp,plusw1
 10316                           
 10317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10318                           ;stkvar	_i @ sp[(-17)+15]
 10319  003C04  0EFE               	movlw	-2
 10320  003C06  50E3               	movf	plusw1,w,c
 10321  003C08  0F01               	addlw	1
 10322  003C0A  6E39               	movwf	btemp,c
 10323  003C0C  0EFE               	movlw	-2
 10324  003C0E  0060  F0E7  FFE3   	movff	btemp,plusw1
 10325  003C14  6A39               	clrf	btemp,c
 10326  003C16  0EFF               	movlw	-1
 10327  003C18  50E3               	movf	plusw1,w,c
 10328  003C1A  2039               	addwfc	btemp,w,c
 10329  003C1C  6E39               	movwf	btemp,c
 10330  003C1E  0EFF               	movlw	-1
 10331  003C20  0060  F0E7  FFE3   	movff	btemp,plusw1
 10332  003C26                     l8219:
 10333                           
 10334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10335                           ;stkvar	_p @ sp[(-17)+9]
 10336                           ;stkvar	_i @ sp[(-17)+15]
 10337  003C26  50E1               	movf	fsr1l,w,c
 10338  003C28  0FFE               	addlw	-2
 10339  003C2A  6ED9               	movwf	fsr2l,c
 10340  003C2C  50E2               	movf	fsr1h,w,c
 10341  003C2E  6EDA               	movwf	fsr2h,c
 10342  003C30  0EFF               	movlw	255
 10343  003C32  22DA               	addwfc	fsr2h,f,c
 10344  003C34  0EF8               	movlw	-8
 10345  003C36  50E3               	movf	plusw1,w,c
 10346  003C38  5CDE               	subwf	postinc2,w,c
 10347  003C3A  50DE               	movf	postinc2,w,c
 10348  003C3C  0A80               	xorlw	128
 10349  003C3E  6E39               	movwf	btemp,c
 10350  003C40  0EF9               	movlw	-7
 10351  003C42  50E3               	movf	plusw1,w,c
 10352  003C44  0A80               	xorlw	128
 10353  003C46  5839               	subwfb	btemp,w,c
 10354  003C48  A0D8               	btfss	status,0,c
 10355  003C4A  D7A8               	goto	l8213
 10356                           
 10357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10358  003C4C  B021               	btfsc	_flags,0,c
 10359  003C4E  D01F               	goto	l8227
 10360  003C50  D031               	goto	u4960
 10361  003C52                     l8223:
 10362                           
 10363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10364                           ;stkvar	_fp @ sp[(-17)+-2]
 10365  003C52  0EED               	movlw	-19
 10366  003C54  006F FF8F FFE6     	movff	plusw1,postinc1
 10367  003C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10368  003C60  0E20               	movlw	32
 10369  003C62  6EE6               	movwf	postinc1,c
 10370  003C64  0E00               	movlw	0
 10371  003C66  6EE6               	movwf	postinc1,c
 10372  003C68  ECAF  F025         	call	_fputc	;wreg free
 10373                           
 10374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10375                           ;stkvar	_l @ sp[(-17)+7]
 10376  003C6C  0EF6               	movlw	-10
 10377  003C6E  50E3               	movf	plusw1,w,c
 10378  003C70  0F01               	addlw	1
 10379  003C72  6E39               	movwf	btemp,c
 10380  003C74  0EF6               	movlw	-10
 10381  003C76  0060  F0E7  FFE3   	movff	btemp,plusw1
 10382  003C7C  6A39               	clrf	btemp,c
 10383  003C7E  0EF7               	movlw	-9
 10384  003C80  50E3               	movf	plusw1,w,c
 10385  003C82  2039               	addwfc	btemp,w,c
 10386  003C84  6E39               	movwf	btemp,c
 10387  003C86  0EF7               	movlw	-9
 10388  003C88  0060  F0E7  FFE3   	movff	btemp,plusw1
 10389  003C8E                     l8227:
 10390                           
 10391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10392                           ;stkvar	_w @ sp[(-17)+13]
 10393                           ;stkvar	_l @ sp[(-17)+7]
 10394  003C8E  50E1               	movf	fsr1l,w,c
 10395  003C90  0FF6               	addlw	-10
 10396  003C92  6ED9               	movwf	fsr2l,c
 10397  003C94  50E2               	movf	fsr1h,w,c
 10398  003C96  6EDA               	movwf	fsr2h,c
 10399  003C98  0EFF               	movlw	255
 10400  003C9A  22DA               	addwfc	fsr2h,f,c
 10401  003C9C  0EFC               	movlw	-4
 10402  003C9E  50E3               	movf	plusw1,w,c
 10403  003CA0  5CDE               	subwf	postinc2,w,c
 10404  003CA2  50DE               	movf	postinc2,w,c
 10405  003CA4  0A80               	xorlw	128
 10406  003CA6  6E39               	movwf	btemp,c
 10407  003CA8  0EFD               	movlw	-3
 10408  003CAA  50E3               	movf	plusw1,w,c
 10409  003CAC  0A80               	xorlw	128
 10410  003CAE  5839               	subwfb	btemp,w,c
 10411  003CB0  A0D8               	btfss	status,0,c
 10412  003CB2  D7CF               	goto	l8223
 10413  003CB4                     u4960:
 10414                           
 10415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10416                           ;stkvar	_l @ sp[(-17)+7]
 10417  003CB4  0EF6               	movlw	-10
 10418  003CB6  006F FF8C  F039    	movff	plusw1,btemp
 10419  003CBC  0EF7               	movlw	-9
 10420  003CBE  006F FF8C  F03A    	movff	plusw1,btemp+1
 10421                           
 10422                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10423  003CC4  0EEB               	movlw	235
 10424  003CC6  26E1               	addwf	fsr1l,f,c
 10425  003CC8  0EFF               	movlw	255
 10426  003CCA  22E2               	addwfc	fsr1h,f,c
 10427  003CCC  0012               	return		;funcret
 10428  003CCE                     __end_of_stoa:
 10429                           	opt callstack 0
 10430                           
 10431 ;; *************** function _dtoa *****************
 10432 ;; Defined at:
 10433 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10436 ;;		 -> f(5), NULL(0), 
 10437 ;;  d               8  [STACK] long long 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  n               8  [STACK] long long 
 10440 ;;  i               2  [STACK] int 
 10441 ;;  s               2  [STACK] int 
 10442 ;;  w               2  [STACK] int 
 10443 ;;  p               2  [STACK] int 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  2  [STACK] int 
 10446 ;; Registers used:
 10447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10457 ;;Total ram usage:        0 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    8
 10460 ;; This function calls:
 10461 ;;		___aodiv
 10462 ;;		___aomod
 10463 ;;		_abs
 10464 ;;		_pad
 10465 ;; This function is called by:
 10466 ;;		_vfpfcnvrt
 10467 ;; This function uses a reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text44
 10471  002F88                     __ptext44:
 10472                           	opt callstack 0
 10473  002F88                     _dtoa:
 10474                           	opt callstack 0
 10475                           
 10476                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10477  002F88  0E12               	movlw	18
 10478  002F8A  26E1               	addwf	fsr1l,f,c
 10479  002F8C  0E00               	movlw	0
 10480  002F8E  22E2               	addwfc	fsr1h,f,c
 10481                           
 10482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10483                           ;stkvar	_d @ sp[(-18)+-10]
 10484                           
 10485                           ;incstack = 0
 10486  002F90  0EE4               	movlw	228
 10487  002F92  24E1               	addwf	fsr1l,w,c
 10488  002F94  6ED9               	movwf	fsr2l,c
 10489  002F96  0EFF               	movlw	255
 10490  002F98  20E2               	addwfc	fsr1h,w,c
 10491  002F9A  6EDA               	movwf	fsr2h,c
 10492                           
 10493                           ;stkvar	_n @ sp[(-18)+2]
 10494  002F9C  0E08               	movlw	8
 10495  002F9E  6E39               	movwf	btemp,c
 10496  002FA0  0EF0               	movlw	-16
 10497  002FA2                     us470999:
 10498  002FA2  006F FF7B FFE3     	movff	postinc2,plusw1
 10499  002FA8  28E8               	incf	wreg,w,c
 10500  002FAA  2E39               	decfsz	btemp,f,c
 10501  002FAC  D7FA               	bra	us470999
 10502                           
 10503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10504                           ;stkvar	_n @ sp[(-18)+2]
 10505  002FAE  0EF7               	movlw	-9
 10506  002FB0  AEE3               	btfss	plusw1,7,c
 10507  002FB2  D002               	goto	u4710
 10508  002FB4  0E01               	movlw	1
 10509  002FB6  D001               	goto	u4720
 10510  002FB8                     u4710:
 10511  002FB8  0E00               	movlw	0
 10512  002FBA                     u4720:
 10513  002FBA  6E43               	movwf	btemp+10,c
 10514  002FBC  6A44               	clrf	btemp+11,c
 10515                           
 10516                           ;stkvar	_s @ sp[(-18)+12]
 10517  002FBE  0EFA               	movlw	-6
 10518  002FC0  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10519  002FC6  0EFB               	movlw	-5
 10520  002FC8  0060  F113  FFE3   	movff	btemp+11,plusw1
 10521                           
 10522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10523                           ;stkvar	_s @ sp[(-18)+12]
 10524  002FCE  0EFA               	movlw	-6
 10525  002FD0  006F FF8C  F039    	movff	plusw1,btemp
 10526  002FD6  0EFB               	movlw	-5
 10527  002FD8  50E3               	movf	plusw1,w,c
 10528  002FDA  1039               	iorwf	btemp,w,c
 10529  002FDC  B4D8               	btfsc	status,2,c
 10530  002FDE  D025               	goto	u4740
 10531                           
 10532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10533                           ;stkvar	_n @ sp[(-18)+2]
 10534                           ;stkvar	_n @ sp[(-18)+2]
 10535  002FE0  0EF0               	movlw	-16
 10536  002FE2  6CE3               	negf	plusw1,c
 10537  002FE4  0EF1               	movlw	-15
 10538  002FE6  1EE3               	comf	plusw1,f,c
 10539  002FE8  0EF2               	movlw	-14
 10540  002FEA  1EE3               	comf	plusw1,f,c
 10541  002FEC  0EF3               	movlw	-13
 10542  002FEE  1EE3               	comf	plusw1,f,c
 10543  002FF0  0EF4               	movlw	-12
 10544  002FF2  1EE3               	comf	plusw1,f,c
 10545  002FF4  0EF5               	movlw	-11
 10546  002FF6  1EE3               	comf	plusw1,f,c
 10547  002FF8  0EF6               	movlw	-10
 10548  002FFA  1EE3               	comf	plusw1,f,c
 10549  002FFC  0EF7               	movlw	-9
 10550  002FFE  1EE3               	comf	plusw1,f,c
 10551  003000  E314               	bnc	u4740
 10552  003002  0EF1               	movlw	-15
 10553  003004  2AE3               	incf	plusw1,f,c
 10554  003006  E311               	bnc	u4740
 10555  003008  0EF2               	movlw	-14
 10556  00300A  2AE3               	incf	plusw1,f,c
 10557  00300C  E30E               	bnc	u4740
 10558  00300E  0EF3               	movlw	-13
 10559  003010  2AE3               	incf	plusw1,f,c
 10560  003012  E30B               	bnc	u4740
 10561  003014  0EF4               	movlw	-12
 10562  003016  2AE3               	incf	plusw1,f,c
 10563  003018  E308               	bnc	u4740
 10564  00301A  0EF5               	movlw	-11
 10565  00301C  2AE3               	incf	plusw1,f,c
 10566  00301E  E305               	bnc	u4740
 10567  003020  0EF6               	movlw	-10
 10568  003022  2AE3               	incf	plusw1,f,c
 10569  003024  E302               	bnc	u4740
 10570  003026  0EF7               	movlw	-9
 10571  003028  2AE3               	incf	plusw1,f,c
 10572  00302A                     u4740:
 10573                           
 10574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10575  00302A  AE20               	btfss	_prec+1,7,c
 10576                           
 10577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10578  00302C  9221               	bcf	_flags,1,c
 10579                           
 10580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10581  00302E  BE20               	btfsc	_prec+1,7,c
 10582  003030  D005               	goto	u4760
 10583  003032  5020               	movf	_prec+1,w,c
 10584  003034  E110               	bnz	l8131
 10585  003036  041F               	decf	_prec,w,c
 10586  003038  B0D8               	btfsc	status,0,c
 10587  00303A  D00D               	goto	l8131
 10588  00303C                     u4760:
 10589  00303C  0E01               	movlw	1
 10590  00303E  6E43               	movwf	btemp+10,c
 10591  003040  0E00               	movlw	0
 10592  003042  6E44               	movwf	btemp+11,c
 10593                           
 10594                           ;stkvar	_p @ sp[(-18)+16]
 10595  003044  0EFE               	movlw	-2
 10596  003046  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10597  00304C  0EFF               	movlw	-1
 10598  00304E  0060  F113  FFE3   	movff	btemp+11,plusw1
 10599  003054  D008               	goto	l1859
 10600  003056                     l8131:
 10601                           
 10602                           ;stkvar	_p @ sp[(-18)+16]
 10603  003056  0EFE               	movlw	-2
 10604  003058  0060  F07F  FFE3   	movff	_prec,plusw1
 10605  00305E  0EFF               	movlw	-1
 10606  003060  0060  F083  FFE3   	movff	_prec+1,plusw1
 10607  003066                     l1859:
 10608                           
 10609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10610                           ;stkvar	_w @ sp[(-18)+14]
 10611  003066  0EFC               	movlw	-4
 10612  003068  0060  F077  FFE3   	movff	_width,plusw1
 10613  00306E  0EFD               	movlw	-3
 10614  003070  0060  F07B  FFE3   	movff	_width+1,plusw1
 10615                           
 10616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10617                           ;stkvar	_s @ sp[(-18)+12]
 10618  003076  0EFA               	movlw	-6
 10619  003078  006F FF8C  F039    	movff	plusw1,btemp
 10620  00307E  0EFB               	movlw	-5
 10621  003080  50E3               	movf	plusw1,w,c
 10622  003082  1039               	iorwf	btemp,w,c
 10623  003084  A4D8               	btfss	status,2,c
 10624  003086  D002               	goto	u4780
 10625  003088  A421               	btfss	_flags,2,c
 10626  00308A  D00A               	goto	l8139
 10627  00308C                     u4780:
 10628                           
 10629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10630                           ;stkvar	_w @ sp[(-18)+14]
 10631  00308C  50E1               	movf	fsr1l,w,c
 10632  00308E  0FFC               	addlw	-4
 10633  003090  6ED9               	movwf	fsr2l,c
 10634  003092  50E2               	movf	fsr1h,w,c
 10635  003094  6EDA               	movwf	fsr2h,c
 10636  003096  0EFF               	movlw	255
 10637  003098  22DA               	addwfc	fsr2h,f,c
 10638  00309A  06DE               	decf	postinc2,f,c
 10639  00309C  0E00               	movlw	0
 10640  00309E  5ADD               	subwfb	postdec2,f,c
 10641  0030A0                     l8139:
 10642                           
 10643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10644  0030A0  0E1F               	movlw	31
 10645  0030A2  6E43               	movwf	btemp+10,c
 10646  0030A4  0E00               	movlw	0
 10647  0030A6  6E44               	movwf	btemp+11,c
 10648                           
 10649                           ;stkvar	_i @ sp[(-18)+10]
 10650  0030A8  0EF8               	movlw	-8
 10651  0030AA  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10652  0030B0  0EF9               	movlw	-7
 10653  0030B2  0060  F113  FFE3   	movff	btemp+11,plusw1
 10654                           
 10655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10656  0030B8  0101               	movlb	1	; () banked
 10657  0030BA  6BEF               	clrf	(_dbuf+31)& (0+255),b
 10658                           
 10659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10660  0030BC  D109               	goto	l8153
 10661  0030BE                     l8143:
 10662                           
 10663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10664                           ;stkvar	_i @ sp[(-18)+10]
 10665  0030BE  50E1               	movf	fsr1l,w,c
 10666  0030C0  0FF8               	addlw	-8
 10667  0030C2  6ED9               	movwf	fsr2l,c
 10668  0030C4  50E2               	movf	fsr1h,w,c
 10669  0030C6  6EDA               	movwf	fsr2h,c
 10670  0030C8  0EFF               	movlw	255
 10671  0030CA  22DA               	addwfc	fsr2h,f,c
 10672  0030CC  06DE               	decf	postinc2,f,c
 10673  0030CE  0E00               	movlw	0
 10674  0030D0  5ADD               	subwfb	postdec2,f,c
 10675                           
 10676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10677  0030D2  0E0A               	movlw	10
 10678  0030D4  6EE6               	movwf	postinc1,c
 10679  0030D6  0E00               	movlw	0
 10680  0030D8  6EE6               	movwf	postinc1,c
 10681  0030DA  0E00               	movlw	0
 10682  0030DC  6EE6               	movwf	postinc1,c
 10683  0030DE  0E00               	movlw	0
 10684  0030E0  6EE6               	movwf	postinc1,c
 10685  0030E2  0E00               	movlw	0
 10686  0030E4  6EE6               	movwf	postinc1,c
 10687  0030E6  0E00               	movlw	0
 10688  0030E8  6EE6               	movwf	postinc1,c
 10689  0030EA  0E00               	movlw	0
 10690  0030EC  6EE6               	movwf	postinc1,c
 10691  0030EE  0E00               	movlw	0
 10692  0030F0  6EE6               	movwf	postinc1,c
 10693                           
 10694                           ;stkvar	_n @ sp[(-26)+2]
 10695  0030F2  50E1               	movf	fsr1l,w,c
 10696  0030F4  0FE8               	addlw	-24
 10697  0030F6  6ED9               	movwf	fsr2l,c
 10698  0030F8  50E2               	movf	fsr1h,w,c
 10699  0030FA  6EDA               	movwf	fsr2h,c
 10700  0030FC  0EFF               	movlw	255
 10701  0030FE  22DA               	addwfc	fsr2h,f,c
 10702  003100  006F FF7B FFE6     	movff	postinc2,postinc1
 10703  003106  006F FF7B FFE6     	movff	postinc2,postinc1
 10704  00310C  006F FF7B FFE6     	movff	postinc2,postinc1
 10705  003112  006F FF7B FFE6     	movff	postinc2,postinc1
 10706  003118  006F FF7B FFE6     	movff	postinc2,postinc1
 10707  00311E  006F FF7B FFE6     	movff	postinc2,postinc1
 10708  003124  006F FF7B FFE6     	movff	postinc2,postinc1
 10709  00312A  006F FF7B FFE6     	movff	postinc2,postinc1
 10710  003130  EC3D  F023         	call	___aomod	;wreg free
 10711  003134  52E5               	movf	postdec1,f,c
 10712  003136  006F FF9C  F050    	movff	indf1,btemp+23
 10713  00313C  52E5               	movf	postdec1,f,c
 10714  00313E  006F FF9C  F04F    	movff	indf1,btemp+22
 10715  003144  52E5               	movf	postdec1,f,c
 10716  003146  006F FF9C  F04E    	movff	indf1,btemp+21
 10717  00314C  52E5               	movf	postdec1,f,c
 10718  00314E  006F FF9C  F04D    	movff	indf1,btemp+20
 10719  003154  52E5               	movf	postdec1,f,c
 10720  003156  006F FF9C  F04C    	movff	indf1,btemp+19
 10721  00315C  52E5               	movf	postdec1,f,c
 10722  00315E  006F FF9C  F04B    	movff	indf1,btemp+18
 10723  003164  52E5               	movf	postdec1,f,c
 10724  003166  006F FF9C  F04A    	movff	indf1,btemp+17
 10725  00316C  52E5               	movf	postdec1,f,c
 10726  00316E  006F FF9C  F049    	movff	indf1,btemp+16
 10727  003174  0EF8               	movlw	248
 10728  003176  26E1               	addwf	fsr1l,f,c
 10729  003178  0EFF               	movlw	255
 10730  00317A  22E2               	addwfc	fsr1h,f,c
 10731  00317C  0060  F124  F043   	movff	btemp+16,btemp+10
 10732  003182  0060  F128  F044   	movff	btemp+17,btemp+11
 10733  003188  0060  F10F  FFE6   	movff	btemp+10,postinc1
 10734  00318E  0060  F113  FFE6   	movff	btemp+11,postinc1
 10735  003194  ECFE  F02C         	call	_abs	;wreg free
 10736  003198  0E30               	movlw	48
 10737  00319A  2639               	addwf	btemp,f,c
 10738                           
 10739                           ;stkvar	_i @ sp[(-18)+10]
 10740  00319C  0EF8               	movlw	-8
 10741  00319E  006F FF8C  F043    	movff	plusw1,btemp+10
 10742  0031A4  0EF9               	movlw	-7
 10743  0031A6  006F FF8C  F044    	movff	plusw1,btemp+11
 10744  0031AC  0ED0               	movlw	low _dbuf
 10745  0031AE  2443               	addwf	btemp+10,w,c
 10746  0031B0  6ED9               	movwf	fsr2l,c
 10747  0031B2  0E01               	movlw	high _dbuf
 10748  0031B4  2044               	addwfc	btemp+11,w,c
 10749  0031B6  6EDA               	movwf	fsr2h,c
 10750  0031B8  0060  F0E7  FFDF   	movff	btemp,indf2
 10751                           
 10752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10753                           ;stkvar	_p @ sp[(-18)+16]
 10754  0031BE  50E1               	movf	fsr1l,w,c
 10755  0031C0  0FFE               	addlw	-2
 10756  0031C2  6ED9               	movwf	fsr2l,c
 10757  0031C4  50E2               	movf	fsr1h,w,c
 10758  0031C6  6EDA               	movwf	fsr2h,c
 10759  0031C8  0EFF               	movlw	255
 10760  0031CA  22DA               	addwfc	fsr2h,f,c
 10761  0031CC  06DE               	decf	postinc2,f,c
 10762  0031CE  0E00               	movlw	0
 10763  0031D0  5ADD               	subwfb	postdec2,f,c
 10764                           
 10765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10766                           ;stkvar	_w @ sp[(-18)+14]
 10767  0031D2  50E1               	movf	fsr1l,w,c
 10768  0031D4  0FFC               	addlw	-4
 10769  0031D6  6ED9               	movwf	fsr2l,c
 10770  0031D8  50E2               	movf	fsr1h,w,c
 10771  0031DA  6EDA               	movwf	fsr2h,c
 10772  0031DC  0EFF               	movlw	255
 10773  0031DE  22DA               	addwfc	fsr2h,f,c
 10774  0031E0  06DE               	decf	postinc2,f,c
 10775  0031E2  0E00               	movlw	0
 10776  0031E4  5ADD               	subwfb	postdec2,f,c
 10777                           
 10778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10779  0031E6  0E0A               	movlw	10
 10780  0031E8  6EE6               	movwf	postinc1,c
 10781  0031EA  0E00               	movlw	0
 10782  0031EC  6EE6               	movwf	postinc1,c
 10783  0031EE  0E00               	movlw	0
 10784  0031F0  6EE6               	movwf	postinc1,c
 10785  0031F2  0E00               	movlw	0
 10786  0031F4  6EE6               	movwf	postinc1,c
 10787  0031F6  0E00               	movlw	0
 10788  0031F8  6EE6               	movwf	postinc1,c
 10789  0031FA  0E00               	movlw	0
 10790  0031FC  6EE6               	movwf	postinc1,c
 10791  0031FE  0E00               	movlw	0
 10792  003200  6EE6               	movwf	postinc1,c
 10793  003202  0E00               	movlw	0
 10794  003204  6EE6               	movwf	postinc1,c
 10795                           
 10796                           ;stkvar	_n @ sp[(-26)+2]
 10797  003206  50E1               	movf	fsr1l,w,c
 10798  003208  0FE8               	addlw	-24
 10799  00320A  6ED9               	movwf	fsr2l,c
 10800  00320C  50E2               	movf	fsr1h,w,c
 10801  00320E  6EDA               	movwf	fsr2h,c
 10802  003210  0EFF               	movlw	255
 10803  003212  22DA               	addwfc	fsr2h,f,c
 10804  003214  006F FF7B FFE6     	movff	postinc2,postinc1
 10805  00321A  006F FF7B FFE6     	movff	postinc2,postinc1
 10806  003220  006F FF7B FFE6     	movff	postinc2,postinc1
 10807  003226  006F FF7B FFE6     	movff	postinc2,postinc1
 10808  00322C  006F FF7B FFE6     	movff	postinc2,postinc1
 10809  003232  006F FF7B FFE6     	movff	postinc2,postinc1
 10810  003238  006F FF7B FFE6     	movff	postinc2,postinc1
 10811  00323E  006F FF7B FFE6     	movff	postinc2,postinc1
 10812  003244  EC67  F01E         	call	___aodiv	;wreg free
 10813  003248  52E5               	movf	postdec1,f,c
 10814  00324A  006F FF9C  F050    	movff	indf1,btemp+23
 10815  003250  52E5               	movf	postdec1,f,c
 10816  003252  006F FF9C  F04F    	movff	indf1,btemp+22
 10817  003258  52E5               	movf	postdec1,f,c
 10818  00325A  006F FF9C  F04E    	movff	indf1,btemp+21
 10819  003260  52E5               	movf	postdec1,f,c
 10820  003262  006F FF9C  F04D    	movff	indf1,btemp+20
 10821  003268  52E5               	movf	postdec1,f,c
 10822  00326A  006F FF9C  F04C    	movff	indf1,btemp+19
 10823  003270  52E5               	movf	postdec1,f,c
 10824  003272  006F FF9C  F04B    	movff	indf1,btemp+18
 10825  003278  52E5               	movf	postdec1,f,c
 10826  00327A  006F FF9C  F04A    	movff	indf1,btemp+17
 10827  003280  52E5               	movf	postdec1,f,c
 10828  003282  006F FF9C  F049    	movff	indf1,btemp+16
 10829  003288  0EF8               	movlw	248
 10830  00328A  26E1               	addwf	fsr1l,f,c
 10831  00328C  0EFF               	movlw	255
 10832  00328E  22E2               	addwfc	fsr1h,f,c
 10833                           
 10834                           ;stkvar	_n @ sp[(-18)+2]
 10835  003290  0EF0               	movlw	-16
 10836  003292  0060  F127  FFE3   	movff	btemp+16,plusw1
 10837  003298  0EF1               	movlw	-15
 10838  00329A  0060  F12B  FFE3   	movff	btemp+17,plusw1
 10839  0032A0  0EF2               	movlw	-14
 10840  0032A2  0060  F12F  FFE3   	movff	btemp+18,plusw1
 10841  0032A8  0EF3               	movlw	-13
 10842  0032AA  0060  F133  FFE3   	movff	btemp+19,plusw1
 10843  0032B0  0EF4               	movlw	-12
 10844  0032B2  0060  F137  FFE3   	movff	btemp+20,plusw1
 10845  0032B8  0EF5               	movlw	-11
 10846  0032BA  0060  F13B  FFE3   	movff	btemp+21,plusw1
 10847  0032C0  0EF6               	movlw	-10
 10848  0032C2  0060  F13F  FFE3   	movff	btemp+22,plusw1
 10849  0032C8  0EF7               	movlw	-9
 10850  0032CA  0060  F143  FFE3   	movff	btemp+23,plusw1
 10851  0032D0                     l8153:
 10852                           
 10853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10854                           ;stkvar	_i @ sp[(-18)+10]
 10855  0032D0  0EF9               	movlw	-7
 10856  0032D2  BEE3               	btfsc	plusw1,7,c
 10857  0032D4  D036               	goto	u4830
 10858  0032D6  0EF9               	movlw	-7
 10859  0032D8  50E3               	movf	plusw1,w,c
 10860  0032DA  E104               	bnz	u4790
 10861  0032DC  0EF8               	movlw	-8
 10862  0032DE  04E3               	decf	plusw1,w,c
 10863  0032E0  A0D8               	btfss	status,0,c
 10864  0032E2  D02F               	goto	u4830
 10865  0032E4                     u4790:
 10866                           
 10867                           ;stkvar	_n @ sp[(-18)+2]
 10868  0032E4  0EF0               	movlw	-16
 10869  0032E6  50E3               	movf	plusw1,w,c
 10870  0032E8  E115               	bnz	u4801
 10871  0032EA  0EF1               	movlw	-15
 10872  0032EC  50E3               	movf	plusw1,w,c
 10873  0032EE  E112               	bnz	u4801
 10874  0032F0  0EF2               	movlw	-14
 10875  0032F2  50E3               	movf	plusw1,w,c
 10876  0032F4  E10F               	bnz	u4801
 10877  0032F6  0EF3               	movlw	-13
 10878  0032F8  50E3               	movf	plusw1,w,c
 10879  0032FA  E10C               	bnz	u4801
 10880  0032FC  0EF4               	movlw	-12
 10881  0032FE  50E3               	movf	plusw1,w,c
 10882  003300  E109               	bnz	u4801
 10883  003302  0EF5               	movlw	-11
 10884  003304  50E3               	movf	plusw1,w,c
 10885  003306  E106               	bnz	u4801
 10886  003308  0EF6               	movlw	-10
 10887  00330A  50E3               	movf	plusw1,w,c
 10888  00330C  E103               	bnz	u4801
 10889  00330E  0EF7               	movlw	-9
 10890  003310  50E3               	movf	plusw1,w,c
 10891  003312  A4D8               	btfss	status,2,c
 10892  003314                     u4801:
 10893  003314  D6D4               	goto	l8143
 10894                           
 10895                           ;stkvar	_p @ sp[(-18)+16]
 10896  003316  0EFF               	movlw	-1
 10897  003318  BEE3               	btfsc	plusw1,7,c
 10898  00331A  D007               	goto	u4810
 10899  00331C  0EFF               	movlw	-1
 10900  00331E  50E3               	movf	plusw1,w,c
 10901  003320  E103               	bnz	u4811
 10902  003322  0EFE               	movlw	-2
 10903  003324  04E3               	decf	plusw1,w,c
 10904  003326  B0D8               	btfsc	status,0,c
 10905  003328                     u4811:
 10906  003328  D6CA               	goto	l8143
 10907  00332A                     u4810:
 10908                           
 10909                           ;stkvar	_w @ sp[(-18)+14]
 10910  00332A  0EFD               	movlw	-3
 10911  00332C  BEE3               	btfsc	plusw1,7,c
 10912  00332E  D009               	goto	u4830
 10913  003330  0EFD               	movlw	-3
 10914  003332  50E3               	movf	plusw1,w,c
 10915  003334  E104               	bnz	u4820
 10916  003336  0EFC               	movlw	-4
 10917  003338  04E3               	decf	plusw1,w,c
 10918  00333A  A0D8               	btfss	status,0,c
 10919  00333C  D002               	goto	u4830
 10920  00333E                     u4820:
 10921  00333E  B221               	btfsc	_flags,1,c
 10922  003340  D6BE               	goto	l8143
 10923  003342                     u4830:
 10924                           
 10925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10926                           ;stkvar	_s @ sp[(-18)+12]
 10927  003342  0EFA               	movlw	-6
 10928  003344  006F FF8C  F039    	movff	plusw1,btemp
 10929  00334A  0EFB               	movlw	-5
 10930  00334C  50E3               	movf	plusw1,w,c
 10931  00334E  1039               	iorwf	btemp,w,c
 10932  003350  A4D8               	btfss	status,2,c
 10933  003352  D002               	goto	u4850
 10934  003354  A421               	btfss	_flags,2,c
 10935  003356  D033               	goto	l8177
 10936  003358                     u4850:
 10937                           
 10938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10939                           ;stkvar	_i @ sp[(-18)+10]
 10940  003358  50E1               	movf	fsr1l,w,c
 10941  00335A  0FF8               	addlw	-8
 10942  00335C  6ED9               	movwf	fsr2l,c
 10943  00335E  50E2               	movf	fsr1h,w,c
 10944  003360  6EDA               	movwf	fsr2h,c
 10945  003362  0EFF               	movlw	255
 10946  003364  22DA               	addwfc	fsr2h,f,c
 10947  003366  06DE               	decf	postinc2,f,c
 10948  003368  0E00               	movlw	0
 10949  00336A  5ADD               	subwfb	postdec2,f,c
 10950                           
 10951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10952                           ;stkvar	_s @ sp[(-18)+12]
 10953  00336C  0EFA               	movlw	-6
 10954  00336E  006F FF8C  F039    	movff	plusw1,btemp
 10955  003374  0EFB               	movlw	-5
 10956  003376  50E3               	movf	plusw1,w,c
 10957  003378  1039               	iorwf	btemp,w,c
 10958  00337A  A4D8               	btfss	status,2,c
 10959  00337C  D002               	goto	l8173
 10960  00337E  0E2B               	movlw	43
 10961  003380  D001               	goto	L28
 10962  003382                     l8173:
 10963  003382  0E2D               	movlw	45
 10964  003384                     L28:
 10965  003384  6E43               	movwf	btemp+10,c
 10966  003386  0E00               	movlw	0
 10967  003388  6E44               	movwf	btemp+11,c
 10968                           
 10969                           ;stkvar	_dtoa$3931 @ sp[(-18)+0]
 10970  00338A  0EEE               	movlw	-18
 10971  00338C  0060  F10F  FFE3   	movff	btemp+10,plusw1
 10972  003392  0EEF               	movlw	-17
 10973  003394  0060  F113  FFE3   	movff	btemp+11,plusw1
 10974                           
 10975                           ;stkvar	_dtoa$3931 @ sp[(-18)+0]
 10976                           ;stkvar	_i @ sp[(-18)+10]
 10977  00339A  0EF8               	movlw	-8
 10978  00339C  006F FF8C  F043    	movff	plusw1,btemp+10
 10979  0033A2  0EF9               	movlw	-7
 10980  0033A4  006F FF8C  F044    	movff	plusw1,btemp+11
 10981  0033AA  0ED0               	movlw	low _dbuf
 10982  0033AC  2443               	addwf	btemp+10,w,c
 10983  0033AE  6ED9               	movwf	fsr2l,c
 10984  0033B0  0E01               	movlw	high _dbuf
 10985  0033B2  2044               	addwfc	btemp+11,w,c
 10986  0033B4  6EDA               	movwf	fsr2h,c
 10987  0033B6  0EEE               	movlw	-18
 10988  0033B8  006F FF8F FFDF     	movff	plusw1,indf2
 10989  0033BE                     l8177:
 10990                           
 10991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10992                           ;stkvar	_w @ sp[(-18)+14]
 10993  0033BE  0EFC               	movlw	-4
 10994  0033C0  006F FF8F FFE6     	movff	plusw1,postinc1
 10995  0033C6  006F FF8F FFE6     	movff	plusw1,postinc1
 10996                           
 10997                           ;stkvar	_i @ sp[(-20)+10]
 10998  0033CC  0ED0               	movlw	low _dbuf
 10999  0033CE  6E43               	movwf	btemp+10,c
 11000  0033D0  0E01               	movlw	high _dbuf
 11001  0033D2  6E44               	movwf	btemp+11,c
 11002  0033D4  0EF6               	movlw	-10
 11003  0033D6  50E3               	movf	plusw1,w,c
 11004  0033D8  2643               	addwf	btemp+10,f,c
 11005  0033DA  0EF7               	movlw	-9
 11006  0033DC  50E3               	movf	plusw1,w,c
 11007  0033DE  2244               	addwfc	btemp+11,f,c
 11008  0033E0  0060  F10F  FFE6   	movff	btemp+10,postinc1
 11009  0033E6  0060  F113  FFE6   	movff	btemp+11,postinc1
 11010                           
 11011                           ;stkvar	_fp @ sp[(-22)+-2]
 11012  0033EC  0EE8               	movlw	-24
 11013  0033EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11014  0033F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11015  0033FA  EC25  F025         	call	_pad	;wreg free
 11016                           
 11017                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11018  0033FE  0EE4               	movlw	228
 11019  003400  26E1               	addwf	fsr1l,f,c
 11020  003402  0EFF               	movlw	255
 11021  003404  22E2               	addwfc	fsr1h,f,c
 11022  003406  0012               	return		;funcret
 11023  003408                     __end_of_dtoa:
 11024                           	opt callstack 0
 11025                           
 11026 ;; *************** function _abs *****************
 11027 ;; Defined at:
 11028 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;  a               2  [STACK] int 
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;		None
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  2  [STACK] int 
 11035 ;; Registers used:
 11036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11037 ;; Tracked objects:
 11038 ;;		On entry : 0/1
 11039 ;;		On exit  : 0/0
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11046 ;;Total ram usage:        0 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; Hardware stack levels required when called:    3
 11049 ;; This function calls:
 11050 ;;		Nothing
 11051 ;; This function is called by:
 11052 ;;		_dtoa
 11053 ;; This function uses a reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text45
 11057  0059FC                     __ptext45:
 11058                           	opt callstack 0
 11059  0059FC                     _abs:
 11060                           	opt callstack 23
 11061                           
 11062                           ;stkvar	_a @ sp[(0)+-2]
 11063                           
 11064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11065                           ;incstack = 0
 11066  0059FC  0EFF               	movlw	-1
 11067  0059FE  BEE3               	btfsc	plusw1,7,c
 11068  005A00  D007               	goto	u2450
 11069  005A02  0EFF               	movlw	-1
 11070  005A04  50E3               	movf	plusw1,w,c
 11071  005A06  E112               	bnz	l5355
 11072  005A08  0EFE               	movlw	-2
 11073  005A0A  04E3               	decf	plusw1,w,c
 11074  005A0C  B0D8               	btfsc	status,0,c
 11075  005A0E  D00E               	goto	l5355
 11076  005A10                     u2450:
 11077                           
 11078                           ;stkvar	_a @ sp[(0)+-2]
 11079  005A10  0EFE               	movlw	-2
 11080  005A12  006F FF8C  F039    	movff	plusw1,btemp
 11081  005A18  1E39               	comf	btemp,f,c
 11082  005A1A  0EFF               	movlw	-1
 11083  005A1C  006F FF8C  F03A    	movff	plusw1,btemp+1
 11084  005A22  1E3A               	comf	btemp+1,f,c
 11085  005A24  2A39               	incf	btemp,f,c
 11086  005A26  B4D8               	btfsc	status,2,c
 11087  005A28  2A3A               	incf	btemp+1,f,c
 11088  005A2A  D008               	goto	l2600
 11089  005A2C                     l5355:
 11090                           
 11091                           ;stkvar	_a @ sp[(0)+-2]
 11092  005A2C  0EFE               	movlw	-2
 11093  005A2E  006F FF8C  F039    	movff	plusw1,btemp
 11094  005A34  0EFF               	movlw	-1
 11095  005A36  006F FF8C  F03A    	movff	plusw1,btemp+1
 11096  005A3C                     l2600:
 11097                           
 11098                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11099  005A3C  52E5               	movf	postdec1,f,c
 11100  005A3E  52E5               	movf	postdec1,f,c
 11101  005A40  0012               	return		;funcret
 11102  005A42                     __end_of_abs:
 11103                           	opt callstack 0
 11104                           
 11105 ;; *************** function ___aomod *****************
 11106 ;; Defined at:
 11107 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  dividend        8  [STACK] long long 
 11110 ;;  divisor         8  [STACK] long long 
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;  sign            1  [STACK] unsigned char 
 11113 ;;  counter         1  [STACK] unsigned char 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  8  [STACK] long long 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/1
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11127 ;;Total ram usage:        0 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    3
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_dtoa
 11134 ;; This function uses a reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text46
 11138  00467A                     __ptext46:
 11139                           	opt callstack 0
 11140  00467A                     ___aomod:
 11141                           	opt callstack 0
 11142                           
 11143                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11144  00467A  52E6               	movf	postinc1,f,c
 11145  00467C  52E6               	movf	postinc1,f,c
 11146                           
 11147                           ;stkvar	_sign @ sp[(-2)+0]
 11148                           
 11149                           ;incstack = 0
 11150  00467E  0EFE               	movlw	-2
 11151  004680  6AE3               	clrf	plusw1,c
 11152                           
 11153                           ;stkvar	_dividend @ sp[(-2)+-8]
 11154  004682  0EFD               	movlw	-3
 11155  004684  AEE3               	btfss	plusw1,7,c
 11156  004686  D028               	goto	l5411
 11157                           
 11158                           ;stkvar	_dividend @ sp[(-2)+-8]
 11159                           ;stkvar	_dividend @ sp[(-2)+-8]
 11160  004688  0EF6               	movlw	-10
 11161  00468A  6CE3               	negf	plusw1,c
 11162  00468C  0EF7               	movlw	-9
 11163  00468E  1EE3               	comf	plusw1,f,c
 11164  004690  0EF8               	movlw	-8
 11165  004692  1EE3               	comf	plusw1,f,c
 11166  004694  0EF9               	movlw	-7
 11167  004696  1EE3               	comf	plusw1,f,c
 11168  004698  0EFA               	movlw	-6
 11169  00469A  1EE3               	comf	plusw1,f,c
 11170  00469C  0EFB               	movlw	-5
 11171  00469E  1EE3               	comf	plusw1,f,c
 11172  0046A0  0EFC               	movlw	-4
 11173  0046A2  1EE3               	comf	plusw1,f,c
 11174  0046A4  0EFD               	movlw	-3
 11175  0046A6  1EE3               	comf	plusw1,f,c
 11176  0046A8  E314               	bnc	u2590
 11177  0046AA  0EF7               	movlw	-9
 11178  0046AC  2AE3               	incf	plusw1,f,c
 11179  0046AE  E311               	bnc	u2590
 11180  0046B0  0EF8               	movlw	-8
 11181  0046B2  2AE3               	incf	plusw1,f,c
 11182  0046B4  E30E               	bnc	u2590
 11183  0046B6  0EF9               	movlw	-7
 11184  0046B8  2AE3               	incf	plusw1,f,c
 11185  0046BA  E30B               	bnc	u2590
 11186  0046BC  0EFA               	movlw	-6
 11187  0046BE  2AE3               	incf	plusw1,f,c
 11188  0046C0  E308               	bnc	u2590
 11189  0046C2  0EFB               	movlw	-5
 11190  0046C4  2AE3               	incf	plusw1,f,c
 11191  0046C6  E305               	bnc	u2590
 11192  0046C8  0EFC               	movlw	-4
 11193  0046CA  2AE3               	incf	plusw1,f,c
 11194  0046CC  E302               	bnc	u2590
 11195  0046CE  0EFD               	movlw	-3
 11196  0046D0  2AE3               	incf	plusw1,f,c
 11197  0046D2                     u2590:
 11198                           
 11199                           ;stkvar	_sign @ sp[(-2)+0]
 11200  0046D2  0EFE               	movlw	-2
 11201  0046D4  6AE3               	clrf	plusw1,c
 11202  0046D6  2AE3               	incf	plusw1,f,c
 11203  0046D8                     l5411:
 11204                           
 11205                           ;stkvar	_divisor @ sp[(-2)+-16]
 11206  0046D8  0EF5               	movlw	-11
 11207  0046DA  AEE3               	btfss	plusw1,7,c
 11208  0046DC  D025               	goto	u2610
 11209                           
 11210                           ;stkvar	_divisor @ sp[(-2)+-16]
 11211                           ;stkvar	_divisor @ sp[(-2)+-16]
 11212  0046DE  0EEE               	movlw	-18
 11213  0046E0  6CE3               	negf	plusw1,c
 11214  0046E2  0EEF               	movlw	-17
 11215  0046E4  1EE3               	comf	plusw1,f,c
 11216  0046E6  0EF0               	movlw	-16
 11217  0046E8  1EE3               	comf	plusw1,f,c
 11218  0046EA  0EF1               	movlw	-15
 11219  0046EC  1EE3               	comf	plusw1,f,c
 11220  0046EE  0EF2               	movlw	-14
 11221  0046F0  1EE3               	comf	plusw1,f,c
 11222  0046F2  0EF3               	movlw	-13
 11223  0046F4  1EE3               	comf	plusw1,f,c
 11224  0046F6  0EF4               	movlw	-12
 11225  0046F8  1EE3               	comf	plusw1,f,c
 11226  0046FA  0EF5               	movlw	-11
 11227  0046FC  1EE3               	comf	plusw1,f,c
 11228  0046FE  E314               	bnc	u2610
 11229  004700  0EEF               	movlw	-17
 11230  004702  2AE3               	incf	plusw1,f,c
 11231  004704  E311               	bnc	u2610
 11232  004706  0EF0               	movlw	-16
 11233  004708  2AE3               	incf	plusw1,f,c
 11234  00470A  E30E               	bnc	u2610
 11235  00470C  0EF1               	movlw	-15
 11236  00470E  2AE3               	incf	plusw1,f,c
 11237  004710  E30B               	bnc	u2610
 11238  004712  0EF2               	movlw	-14
 11239  004714  2AE3               	incf	plusw1,f,c
 11240  004716  E308               	bnc	u2610
 11241  004718  0EF3               	movlw	-13
 11242  00471A  2AE3               	incf	plusw1,f,c
 11243  00471C  E305               	bnc	u2610
 11244  00471E  0EF4               	movlw	-12
 11245  004720  2AE3               	incf	plusw1,f,c
 11246  004722  E302               	bnc	u2610
 11247  004724  0EF5               	movlw	-11
 11248  004726  2AE3               	incf	plusw1,f,c
 11249  004728                     u2610:
 11250                           
 11251                           ;stkvar	_divisor @ sp[(-2)+-16]
 11252  004728  0EEE               	movlw	-18
 11253  00472A  50E3               	movf	plusw1,w,c
 11254  00472C  E116               	bnz	u2620
 11255  00472E  0EEF               	movlw	-17
 11256  004730  50E3               	movf	plusw1,w,c
 11257  004732  E113               	bnz	u2620
 11258  004734  0EF0               	movlw	-16
 11259  004736  50E3               	movf	plusw1,w,c
 11260  004738  E110               	bnz	u2620
 11261  00473A  0EF1               	movlw	-15
 11262  00473C  50E3               	movf	plusw1,w,c
 11263  00473E  E10D               	bnz	u2620
 11264  004740  0EF2               	movlw	-14
 11265  004742  50E3               	movf	plusw1,w,c
 11266  004744  E10A               	bnz	u2620
 11267  004746  0EF3               	movlw	-13
 11268  004748  50E3               	movf	plusw1,w,c
 11269  00474A  E107               	bnz	u2620
 11270  00474C  0EF4               	movlw	-12
 11271  00474E  50E3               	movf	plusw1,w,c
 11272  004750  E104               	bnz	u2620
 11273  004752  0EF5               	movlw	-11
 11274  004754  50E3               	movf	plusw1,w,c
 11275  004756  B4D8               	btfsc	status,2,c
 11276  004758  D075               	goto	u2650
 11277  00475A                     u2620:
 11278                           
 11279                           ;stkvar	_counter @ sp[(-2)+1]
 11280  00475A  0EFF               	movlw	-1
 11281  00475C  6AE3               	clrf	plusw1,c
 11282  00475E  D012               	goto	L29
 11283  004760                     l5419:
 11284                           
 11285                           ;stkvar	_divisor @ sp[(-2)+-16]
 11286  004760  90D8               	bcf	status,0,c
 11287  004762  0EEE               	movlw	-18
 11288  004764  36E3               	rlcf	plusw1,f,c
 11289  004766  0EEF               	movlw	-17
 11290  004768  36E3               	rlcf	plusw1,f,c
 11291  00476A  0EF0               	movlw	-16
 11292  00476C  36E3               	rlcf	plusw1,f,c
 11293  00476E  0EF1               	movlw	-15
 11294  004770  36E3               	rlcf	plusw1,f,c
 11295  004772  0EF2               	movlw	-14
 11296  004774  36E3               	rlcf	plusw1,f,c
 11297  004776  0EF3               	movlw	-13
 11298  004778  36E3               	rlcf	plusw1,f,c
 11299  00477A  0EF4               	movlw	-12
 11300  00477C  36E3               	rlcf	plusw1,f,c
 11301  00477E  0EF5               	movlw	-11
 11302  004780  36E3               	rlcf	plusw1,f,c
 11303                           
 11304                           ;stkvar	_counter @ sp[(-2)+1]
 11305  004782  0EFF               	movlw	-1
 11306  004784                     L29:
 11307  004784  2AE3               	incf	plusw1,f,c
 11308                           
 11309                           ;stkvar	_divisor @ sp[(-2)+-16]
 11310  004786  0EF5               	movlw	-11
 11311  004788  AEE3               	btfss	plusw1,7,c
 11312  00478A  D7EA               	goto	l5419
 11313  00478C                     u2630:
 11314                           
 11315                           ;stkvar	_divisor @ sp[(-2)+-16]
 11316                           ;stkvar	_dividend @ sp[(-2)+-8]
 11317  00478C  50E1               	movf	fsr1l,w,c
 11318  00478E  0FF6               	addlw	-10
 11319  004790  6ED9               	movwf	fsr2l,c
 11320  004792  50E2               	movf	fsr1h,w,c
 11321  004794  6EDA               	movwf	fsr2h,c
 11322  004796  0EFF               	movlw	255
 11323  004798  22DA               	addwfc	fsr2h,f,c
 11324  00479A  0EEE               	movlw	-18
 11325  00479C  50E3               	movf	plusw1,w,c
 11326  00479E  5CDE               	subwf	postinc2,w,c
 11327  0047A0  0EEF               	movlw	-17
 11328  0047A2  50E3               	movf	plusw1,w,c
 11329  0047A4  58DE               	subwfb	postinc2,w,c
 11330  0047A6  0EF0               	movlw	-16
 11331  0047A8  50E3               	movf	plusw1,w,c
 11332  0047AA  58DE               	subwfb	postinc2,w,c
 11333  0047AC  0EF1               	movlw	-15
 11334  0047AE  50E3               	movf	plusw1,w,c
 11335  0047B0  58DE               	subwfb	postinc2,w,c
 11336  0047B2  0EF2               	movlw	-14
 11337  0047B4  50E3               	movf	plusw1,w,c
 11338  0047B6  58DE               	subwfb	postinc2,w,c
 11339  0047B8  0EF3               	movlw	-13
 11340  0047BA  50E3               	movf	plusw1,w,c
 11341  0047BC  58DE               	subwfb	postinc2,w,c
 11342  0047BE  0EF4               	movlw	-12
 11343  0047C0  50E3               	movf	plusw1,w,c
 11344  0047C2  58DE               	subwfb	postinc2,w,c
 11345  0047C4  0EF5               	movlw	-11
 11346  0047C6  50E3               	movf	plusw1,w,c
 11347  0047C8  58DE               	subwfb	postinc2,w,c
 11348  0047CA  A0D8               	btfss	status,0,c
 11349  0047CC  D01F               	goto	l5427
 11350                           
 11351                           ;stkvar	_divisor @ sp[(-2)+-16]
 11352                           ;stkvar	_dividend @ sp[(-2)+-8]
 11353  0047CE  50E1               	movf	fsr1l,w,c
 11354  0047D0  0FF6               	addlw	-10
 11355  0047D2  6ED9               	movwf	fsr2l,c
 11356  0047D4  50E2               	movf	fsr1h,w,c
 11357  0047D6  6EDA               	movwf	fsr2h,c
 11358  0047D8  0EFF               	movlw	255
 11359  0047DA  22DA               	addwfc	fsr2h,f,c
 11360  0047DC  0EEE               	movlw	-18
 11361  0047DE  50E3               	movf	plusw1,w,c
 11362  0047E0  5EDE               	subwf	postinc2,f,c
 11363  0047E2  0EEF               	movlw	-17
 11364  0047E4  50E3               	movf	plusw1,w,c
 11365  0047E6  5ADE               	subwfb	postinc2,f,c
 11366  0047E8  0EF0               	movlw	-16
 11367  0047EA  50E3               	movf	plusw1,w,c
 11368  0047EC  5ADE               	subwfb	postinc2,f,c
 11369  0047EE  0EF1               	movlw	-15
 11370  0047F0  50E3               	movf	plusw1,w,c
 11371  0047F2  5ADE               	subwfb	postinc2,f,c
 11372  0047F4  0EF2               	movlw	-14
 11373  0047F6  50E3               	movf	plusw1,w,c
 11374  0047F8  5ADE               	subwfb	postinc2,f,c
 11375  0047FA  0EF3               	movlw	-13
 11376  0047FC  50E3               	movf	plusw1,w,c
 11377  0047FE  5ADE               	subwfb	postinc2,f,c
 11378  004800  0EF4               	movlw	-12
 11379  004802  50E3               	movf	plusw1,w,c
 11380  004804  5ADE               	subwfb	postinc2,f,c
 11381  004806  0EF5               	movlw	-11
 11382  004808  50E3               	movf	plusw1,w,c
 11383  00480A  5ADE               	subwfb	postinc2,f,c
 11384  00480C                     l5427:
 11385                           
 11386                           ;stkvar	_divisor @ sp[(-2)+-16]
 11387  00480C  90D8               	bcf	status,0,c
 11388  00480E  0EF5               	movlw	-11
 11389  004810  32E3               	rrcf	plusw1,f,c
 11390  004812  0EF4               	movlw	-12
 11391  004814  32E3               	rrcf	plusw1,f,c
 11392  004816  0EF3               	movlw	-13
 11393  004818  32E3               	rrcf	plusw1,f,c
 11394  00481A  0EF2               	movlw	-14
 11395  00481C  32E3               	rrcf	plusw1,f,c
 11396  00481E  0EF1               	movlw	-15
 11397  004820  32E3               	rrcf	plusw1,f,c
 11398  004822  0EF0               	movlw	-16
 11399  004824  32E3               	rrcf	plusw1,f,c
 11400  004826  0EEF               	movlw	-17
 11401  004828  32E3               	rrcf	plusw1,f,c
 11402  00482A  0EEE               	movlw	-18
 11403  00482C  32E3               	rrcf	plusw1,f,c
 11404                           
 11405                           ;stkvar	_counter @ sp[(-2)+1]
 11406  00482E  0EFF               	movlw	-1
 11407  004830  50E3               	movf	plusw1,w,c
 11408  004832  6E39               	movwf	btemp,c
 11409  004834  0E01               	movlw	1
 11410  004836  5E39               	subwf	btemp,f,c
 11411  004838  0EFF               	movlw	-1
 11412  00483A  0060  F0E7  FFE3   	movff	btemp,plusw1
 11413  004840  A4D8               	btfss	status,2,c
 11414  004842  D7A4               	goto	u2630
 11415  004844                     u2650:
 11416                           
 11417                           ;stkvar	_sign @ sp[(-2)+0]
 11418  004844  0EFE               	movlw	-2
 11419  004846  50E3               	movf	plusw1,w,c
 11420  004848  B4D8               	btfsc	status,2,c
 11421  00484A  D025               	goto	u2670
 11422                           
 11423                           ;stkvar	_dividend @ sp[(-2)+-8]
 11424                           ;stkvar	_dividend @ sp[(-2)+-8]
 11425  00484C  0EF6               	movlw	-10
 11426  00484E  6CE3               	negf	plusw1,c
 11427  004850  0EF7               	movlw	-9
 11428  004852  1EE3               	comf	plusw1,f,c
 11429  004854  0EF8               	movlw	-8
 11430  004856  1EE3               	comf	plusw1,f,c
 11431  004858  0EF9               	movlw	-7
 11432  00485A  1EE3               	comf	plusw1,f,c
 11433  00485C  0EFA               	movlw	-6
 11434  00485E  1EE3               	comf	plusw1,f,c
 11435  004860  0EFB               	movlw	-5
 11436  004862  1EE3               	comf	plusw1,f,c
 11437  004864  0EFC               	movlw	-4
 11438  004866  1EE3               	comf	plusw1,f,c
 11439  004868  0EFD               	movlw	-3
 11440  00486A  1EE3               	comf	plusw1,f,c
 11441  00486C  E314               	bnc	u2670
 11442  00486E  0EF7               	movlw	-9
 11443  004870  2AE3               	incf	plusw1,f,c
 11444  004872  E311               	bnc	u2670
 11445  004874  0EF8               	movlw	-8
 11446  004876  2AE3               	incf	plusw1,f,c
 11447  004878  E30E               	bnc	u2670
 11448  00487A  0EF9               	movlw	-7
 11449  00487C  2AE3               	incf	plusw1,f,c
 11450  00487E  E30B               	bnc	u2670
 11451  004880  0EFA               	movlw	-6
 11452  004882  2AE3               	incf	plusw1,f,c
 11453  004884  E308               	bnc	u2670
 11454  004886  0EFB               	movlw	-5
 11455  004888  2AE3               	incf	plusw1,f,c
 11456  00488A  E305               	bnc	u2670
 11457  00488C  0EFC               	movlw	-4
 11458  00488E  2AE3               	incf	plusw1,f,c
 11459  004890  E302               	bnc	u2670
 11460  004892  0EFD               	movlw	-3
 11461  004894  2AE3               	incf	plusw1,f,c
 11462  004896                     u2670:
 11463                           
 11464                           ;stkvar	_dividend @ sp[(-2)+-8]
 11465  004896  0EF6               	movlw	246
 11466  004898  24E1               	addwf	fsr1l,w,c
 11467  00489A  6ED9               	movwf	fsr2l,c
 11468  00489C  0EFF               	movlw	255
 11469  00489E  20E2               	addwfc	fsr1h,w,c
 11470  0048A0  6EDA               	movwf	fsr2h,c
 11471                           
 11472                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11473  0048A2  0E08               	movlw	8
 11474  0048A4  6E39               	movwf	btemp,c
 11475  0048A6  0EF6               	movlw	-10
 11476  0048A8                     us268999:
 11477  0048A8  006F FF7B FFE3     	movff	postinc2,plusw1
 11478  0048AE  28E8               	incf	wreg,w,c
 11479  0048B0  2E39               	decfsz	btemp,f,c
 11480  0048B2  D7FA               	bra	us268999
 11481                           
 11482                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11483  0048B4  52E5               	movf	postdec1,f,c
 11484  0048B6  52E5               	movf	postdec1,f,c
 11485  0048B8  0012               	return		;funcret
 11486  0048BA                     __end_of___aomod:
 11487                           	opt callstack 0
 11488                           
 11489 ;; *************** function ___aodiv *****************
 11490 ;; Defined at:
 11491 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  dividend        8  [STACK] long long 
 11494 ;;  divisor         8  [STACK] long long 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  quotient        8  [STACK] long long 
 11497 ;;  sign            1  [STACK] unsigned char 
 11498 ;;  counter         1  [STACK] unsigned char 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  8  [STACK] long long 
 11501 ;; Registers used:
 11502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/1
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;Total ram usage:        0 bytes
 11513 ;; Hardware stack levels used:    1
 11514 ;; Hardware stack levels required when called:    3
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_dtoa
 11519 ;; This function uses a reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text47
 11523  003CCE                     __ptext47:
 11524                           	opt callstack 0
 11525  003CCE                     ___aodiv:
 11526                           	opt callstack 0
 11527                           
 11528                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11529  003CCE  0E0A               	movlw	10
 11530  003CD0  26E1               	addwf	fsr1l,f,c
 11531  003CD2  0E00               	movlw	0
 11532  003CD4  22E2               	addwfc	fsr1h,f,c
 11533                           
 11534                           ;stkvar	_sign @ sp[(-10)+8]
 11535                           
 11536                           ;incstack = 0
 11537  003CD6  0EFE               	movlw	-2
 11538  003CD8  6AE3               	clrf	plusw1,c
 11539                           
 11540                           ;stkvar	_divisor @ sp[(-10)+-16]
 11541  003CDA  0EED               	movlw	-19
 11542  003CDC  AEE3               	btfss	plusw1,7,c
 11543  003CDE  D028               	goto	l5367
 11544                           
 11545                           ;stkvar	_divisor @ sp[(-10)+-16]
 11546                           ;stkvar	_divisor @ sp[(-10)+-16]
 11547  003CE0  0EE6               	movlw	-26
 11548  003CE2  6CE3               	negf	plusw1,c
 11549  003CE4  0EE7               	movlw	-25
 11550  003CE6  1EE3               	comf	plusw1,f,c
 11551  003CE8  0EE8               	movlw	-24
 11552  003CEA  1EE3               	comf	plusw1,f,c
 11553  003CEC  0EE9               	movlw	-23
 11554  003CEE  1EE3               	comf	plusw1,f,c
 11555  003CF0  0EEA               	movlw	-22
 11556  003CF2  1EE3               	comf	plusw1,f,c
 11557  003CF4  0EEB               	movlw	-21
 11558  003CF6  1EE3               	comf	plusw1,f,c
 11559  003CF8  0EEC               	movlw	-20
 11560  003CFA  1EE3               	comf	plusw1,f,c
 11561  003CFC  0EED               	movlw	-19
 11562  003CFE  1EE3               	comf	plusw1,f,c
 11563  003D00  E314               	bnc	u2470
 11564  003D02  0EE7               	movlw	-25
 11565  003D04  2AE3               	incf	plusw1,f,c
 11566  003D06  E311               	bnc	u2470
 11567  003D08  0EE8               	movlw	-24
 11568  003D0A  2AE3               	incf	plusw1,f,c
 11569  003D0C  E30E               	bnc	u2470
 11570  003D0E  0EE9               	movlw	-23
 11571  003D10  2AE3               	incf	plusw1,f,c
 11572  003D12  E30B               	bnc	u2470
 11573  003D14  0EEA               	movlw	-22
 11574  003D16  2AE3               	incf	plusw1,f,c
 11575  003D18  E308               	bnc	u2470
 11576  003D1A  0EEB               	movlw	-21
 11577  003D1C  2AE3               	incf	plusw1,f,c
 11578  003D1E  E305               	bnc	u2470
 11579  003D20  0EEC               	movlw	-20
 11580  003D22  2AE3               	incf	plusw1,f,c
 11581  003D24  E302               	bnc	u2470
 11582  003D26  0EED               	movlw	-19
 11583  003D28  2AE3               	incf	plusw1,f,c
 11584  003D2A                     u2470:
 11585                           
 11586                           ;stkvar	_sign @ sp[(-10)+8]
 11587  003D2A  0EFE               	movlw	-2
 11588  003D2C  6AE3               	clrf	plusw1,c
 11589  003D2E  2AE3               	incf	plusw1,f,c
 11590  003D30                     l5367:
 11591                           
 11592                           ;stkvar	_dividend @ sp[(-10)+-8]
 11593  003D30  0EF5               	movlw	-11
 11594  003D32  AEE3               	btfss	plusw1,7,c
 11595  003D34  D027               	goto	l5373
 11596                           
 11597                           ;stkvar	_dividend @ sp[(-10)+-8]
 11598                           ;stkvar	_dividend @ sp[(-10)+-8]
 11599  003D36  0EEE               	movlw	-18
 11600  003D38  6CE3               	negf	plusw1,c
 11601  003D3A  0EEF               	movlw	-17
 11602  003D3C  1EE3               	comf	plusw1,f,c
 11603  003D3E  0EF0               	movlw	-16
 11604  003D40  1EE3               	comf	plusw1,f,c
 11605  003D42  0EF1               	movlw	-15
 11606  003D44  1EE3               	comf	plusw1,f,c
 11607  003D46  0EF2               	movlw	-14
 11608  003D48  1EE3               	comf	plusw1,f,c
 11609  003D4A  0EF3               	movlw	-13
 11610  003D4C  1EE3               	comf	plusw1,f,c
 11611  003D4E  0EF4               	movlw	-12
 11612  003D50  1EE3               	comf	plusw1,f,c
 11613  003D52  0EF5               	movlw	-11
 11614  003D54  1EE3               	comf	plusw1,f,c
 11615  003D56  E314               	bnc	u2490
 11616  003D58  0EEF               	movlw	-17
 11617  003D5A  2AE3               	incf	plusw1,f,c
 11618  003D5C  E311               	bnc	u2490
 11619  003D5E  0EF0               	movlw	-16
 11620  003D60  2AE3               	incf	plusw1,f,c
 11621  003D62  E30E               	bnc	u2490
 11622  003D64  0EF1               	movlw	-15
 11623  003D66  2AE3               	incf	plusw1,f,c
 11624  003D68  E30B               	bnc	u2490
 11625  003D6A  0EF2               	movlw	-14
 11626  003D6C  2AE3               	incf	plusw1,f,c
 11627  003D6E  E308               	bnc	u2490
 11628  003D70  0EF3               	movlw	-13
 11629  003D72  2AE3               	incf	plusw1,f,c
 11630  003D74  E305               	bnc	u2490
 11631  003D76  0EF4               	movlw	-12
 11632  003D78  2AE3               	incf	plusw1,f,c
 11633  003D7A  E302               	bnc	u2490
 11634  003D7C  0EF5               	movlw	-11
 11635  003D7E  2AE3               	incf	plusw1,f,c
 11636  003D80                     u2490:
 11637                           
 11638                           ;stkvar	_sign @ sp[(-10)+8]
 11639  003D80  0EFE               	movlw	-2
 11640  003D82  70E3               	btg	plusw1,0,c
 11641  003D84                     l5373:
 11642                           
 11643                           ;stkvar	_quotient @ sp[(-10)+0]
 11644  003D84  0E07               	movlw	7
 11645  003D86  6E39               	movwf	btemp,c
 11646  003D88  0EF6               	movlw	-10
 11647  003D8A                     u2501:
 11648  003D8A  6AE3               	clrf	plusw1,c
 11649  003D8C  2AE8               	incf	wreg,f,c
 11650  003D8E  0639               	decf	btemp,f,c
 11651  003D90  E2FC               	bc	u2501
 11652                           
 11653                           ;stkvar	_divisor @ sp[(-10)+-16]
 11654  003D92  0EE6               	movlw	-26
 11655  003D94  50E3               	movf	plusw1,w,c
 11656  003D96  E116               	bnz	u2510
 11657  003D98  0EE7               	movlw	-25
 11658  003D9A  50E3               	movf	plusw1,w,c
 11659  003D9C  E113               	bnz	u2510
 11660  003D9E  0EE8               	movlw	-24
 11661  003DA0  50E3               	movf	plusw1,w,c
 11662  003DA2  E110               	bnz	u2510
 11663  003DA4  0EE9               	movlw	-23
 11664  003DA6  50E3               	movf	plusw1,w,c
 11665  003DA8  E10D               	bnz	u2510
 11666  003DAA  0EEA               	movlw	-22
 11667  003DAC  50E3               	movf	plusw1,w,c
 11668  003DAE  E10A               	bnz	u2510
 11669  003DB0  0EEB               	movlw	-21
 11670  003DB2  50E3               	movf	plusw1,w,c
 11671  003DB4  E107               	bnz	u2510
 11672  003DB6  0EEC               	movlw	-20
 11673  003DB8  50E3               	movf	plusw1,w,c
 11674  003DBA  E104               	bnz	u2510
 11675  003DBC  0EED               	movlw	-19
 11676  003DBE  50E3               	movf	plusw1,w,c
 11677  003DC0  B4D8               	btfsc	status,2,c
 11678  003DC2  D088               	goto	u2540
 11679  003DC4                     u2510:
 11680                           
 11681                           ;stkvar	_counter @ sp[(-10)+9]
 11682  003DC4  0EFF               	movlw	-1
 11683  003DC6  6AE3               	clrf	plusw1,c
 11684  003DC8  D012               	goto	L30
 11685  003DCA                     l5379:
 11686                           
 11687                           ;stkvar	_divisor @ sp[(-10)+-16]
 11688  003DCA  90D8               	bcf	status,0,c
 11689  003DCC  0EE6               	movlw	-26
 11690  003DCE  36E3               	rlcf	plusw1,f,c
 11691  003DD0  0EE7               	movlw	-25
 11692  003DD2  36E3               	rlcf	plusw1,f,c
 11693  003DD4  0EE8               	movlw	-24
 11694  003DD6  36E3               	rlcf	plusw1,f,c
 11695  003DD8  0EE9               	movlw	-23
 11696  003DDA  36E3               	rlcf	plusw1,f,c
 11697  003DDC  0EEA               	movlw	-22
 11698  003DDE  36E3               	rlcf	plusw1,f,c
 11699  003DE0  0EEB               	movlw	-21
 11700  003DE2  36E3               	rlcf	plusw1,f,c
 11701  003DE4  0EEC               	movlw	-20
 11702  003DE6  36E3               	rlcf	plusw1,f,c
 11703  003DE8  0EED               	movlw	-19
 11704  003DEA  36E3               	rlcf	plusw1,f,c
 11705                           
 11706                           ;stkvar	_counter @ sp[(-10)+9]
 11707  003DEC  0EFF               	movlw	-1
 11708  003DEE                     L30:
 11709  003DEE  2AE3               	incf	plusw1,f,c
 11710                           
 11711                           ;stkvar	_divisor @ sp[(-10)+-16]
 11712  003DF0  0EED               	movlw	-19
 11713  003DF2  AEE3               	btfss	plusw1,7,c
 11714  003DF4  D7EA               	goto	l5379
 11715  003DF6                     u2520:
 11716                           
 11717                           ;stkvar	_quotient @ sp[(-10)+0]
 11718  003DF6  90D8               	bcf	status,0,c
 11719  003DF8  0EF6               	movlw	-10
 11720  003DFA  36E3               	rlcf	plusw1,f,c
 11721  003DFC  0EF7               	movlw	-9
 11722  003DFE  36E3               	rlcf	plusw1,f,c
 11723  003E00  0EF8               	movlw	-8
 11724  003E02  36E3               	rlcf	plusw1,f,c
 11725  003E04  0EF9               	movlw	-7
 11726  003E06  36E3               	rlcf	plusw1,f,c
 11727  003E08  0EFA               	movlw	-6
 11728  003E0A  36E3               	rlcf	plusw1,f,c
 11729  003E0C  0EFB               	movlw	-5
 11730  003E0E  36E3               	rlcf	plusw1,f,c
 11731  003E10  0EFC               	movlw	-4
 11732  003E12  36E3               	rlcf	plusw1,f,c
 11733  003E14  0EFD               	movlw	-3
 11734  003E16  36E3               	rlcf	plusw1,f,c
 11735                           
 11736                           ;stkvar	_divisor @ sp[(-10)+-16]
 11737                           ;stkvar	_dividend @ sp[(-10)+-8]
 11738  003E18  50E1               	movf	fsr1l,w,c
 11739  003E1A  0FEE               	addlw	-18
 11740  003E1C  6ED9               	movwf	fsr2l,c
 11741  003E1E  50E2               	movf	fsr1h,w,c
 11742  003E20  6EDA               	movwf	fsr2h,c
 11743  003E22  0EFF               	movlw	255
 11744  003E24  22DA               	addwfc	fsr2h,f,c
 11745  003E26  0EE6               	movlw	-26
 11746  003E28  50E3               	movf	plusw1,w,c
 11747  003E2A  5CDE               	subwf	postinc2,w,c
 11748  003E2C  0EE7               	movlw	-25
 11749  003E2E  50E3               	movf	plusw1,w,c
 11750  003E30  58DE               	subwfb	postinc2,w,c
 11751  003E32  0EE8               	movlw	-24
 11752  003E34  50E3               	movf	plusw1,w,c
 11753  003E36  58DE               	subwfb	postinc2,w,c
 11754  003E38  0EE9               	movlw	-23
 11755  003E3A  50E3               	movf	plusw1,w,c
 11756  003E3C  58DE               	subwfb	postinc2,w,c
 11757  003E3E  0EEA               	movlw	-22
 11758  003E40  50E3               	movf	plusw1,w,c
 11759  003E42  58DE               	subwfb	postinc2,w,c
 11760  003E44  0EEB               	movlw	-21
 11761  003E46  50E3               	movf	plusw1,w,c
 11762  003E48  58DE               	subwfb	postinc2,w,c
 11763  003E4A  0EEC               	movlw	-20
 11764  003E4C  50E3               	movf	plusw1,w,c
 11765  003E4E  58DE               	subwfb	postinc2,w,c
 11766  003E50  0EED               	movlw	-19
 11767  003E52  50E3               	movf	plusw1,w,c
 11768  003E54  58DE               	subwfb	postinc2,w,c
 11769  003E56  A0D8               	btfss	status,0,c
 11770  003E58  D021               	goto	l5391
 11771                           
 11772                           ;stkvar	_divisor @ sp[(-10)+-16]
 11773                           ;stkvar	_dividend @ sp[(-10)+-8]
 11774  003E5A  50E1               	movf	fsr1l,w,c
 11775  003E5C  0FEE               	addlw	-18
 11776  003E5E  6ED9               	movwf	fsr2l,c
 11777  003E60  50E2               	movf	fsr1h,w,c
 11778  003E62  6EDA               	movwf	fsr2h,c
 11779  003E64  0EFF               	movlw	255
 11780  003E66  22DA               	addwfc	fsr2h,f,c
 11781  003E68  0EE6               	movlw	-26
 11782  003E6A  50E3               	movf	plusw1,w,c
 11783  003E6C  5EDE               	subwf	postinc2,f,c
 11784  003E6E  0EE7               	movlw	-25
 11785  003E70  50E3               	movf	plusw1,w,c
 11786  003E72  5ADE               	subwfb	postinc2,f,c
 11787  003E74  0EE8               	movlw	-24
 11788  003E76  50E3               	movf	plusw1,w,c
 11789  003E78  5ADE               	subwfb	postinc2,f,c
 11790  003E7A  0EE9               	movlw	-23
 11791  003E7C  50E3               	movf	plusw1,w,c
 11792  003E7E  5ADE               	subwfb	postinc2,f,c
 11793  003E80  0EEA               	movlw	-22
 11794  003E82  50E3               	movf	plusw1,w,c
 11795  003E84  5ADE               	subwfb	postinc2,f,c
 11796  003E86  0EEB               	movlw	-21
 11797  003E88  50E3               	movf	plusw1,w,c
 11798  003E8A  5ADE               	subwfb	postinc2,f,c
 11799  003E8C  0EEC               	movlw	-20
 11800  003E8E  50E3               	movf	plusw1,w,c
 11801  003E90  5ADE               	subwfb	postinc2,f,c
 11802  003E92  0EED               	movlw	-19
 11803  003E94  50E3               	movf	plusw1,w,c
 11804  003E96  5ADE               	subwfb	postinc2,f,c
 11805                           
 11806                           ;stkvar	_quotient @ sp[(-10)+0]
 11807  003E98  0EF6               	movlw	-10
 11808  003E9A  80E3               	bsf	plusw1,0,c
 11809  003E9C                     l5391:
 11810                           
 11811                           ;stkvar	_divisor @ sp[(-10)+-16]
 11812  003E9C  90D8               	bcf	status,0,c
 11813  003E9E  0EED               	movlw	-19
 11814  003EA0  32E3               	rrcf	plusw1,f,c
 11815  003EA2  0EEC               	movlw	-20
 11816  003EA4  32E3               	rrcf	plusw1,f,c
 11817  003EA6  0EEB               	movlw	-21
 11818  003EA8  32E3               	rrcf	plusw1,f,c
 11819  003EAA  0EEA               	movlw	-22
 11820  003EAC  32E3               	rrcf	plusw1,f,c
 11821  003EAE  0EE9               	movlw	-23
 11822  003EB0  32E3               	rrcf	plusw1,f,c
 11823  003EB2  0EE8               	movlw	-24
 11824  003EB4  32E3               	rrcf	plusw1,f,c
 11825  003EB6  0EE7               	movlw	-25
 11826  003EB8  32E3               	rrcf	plusw1,f,c
 11827  003EBA  0EE6               	movlw	-26
 11828  003EBC  32E3               	rrcf	plusw1,f,c
 11829                           
 11830                           ;stkvar	_counter @ sp[(-10)+9]
 11831  003EBE  0EFF               	movlw	-1
 11832  003EC0  50E3               	movf	plusw1,w,c
 11833  003EC2  6E39               	movwf	btemp,c
 11834  003EC4  0E01               	movlw	1
 11835  003EC6  5E39               	subwf	btemp,f,c
 11836  003EC8  0EFF               	movlw	-1
 11837  003ECA  0060  F0E7  FFE3   	movff	btemp,plusw1
 11838  003ED0  A4D8               	btfss	status,2,c
 11839  003ED2  D791               	goto	u2520
 11840  003ED4                     u2540:
 11841                           
 11842                           ;stkvar	_sign @ sp[(-10)+8]
 11843  003ED4  0EFE               	movlw	-2
 11844  003ED6  50E3               	movf	plusw1,w,c
 11845  003ED8  B4D8               	btfsc	status,2,c
 11846  003EDA  D025               	goto	u2560
 11847                           
 11848                           ;stkvar	_quotient @ sp[(-10)+0]
 11849                           ;stkvar	_quotient @ sp[(-10)+0]
 11850  003EDC  0EF6               	movlw	-10
 11851  003EDE  6CE3               	negf	plusw1,c
 11852  003EE0  0EF7               	movlw	-9
 11853  003EE2  1EE3               	comf	plusw1,f,c
 11854  003EE4  0EF8               	movlw	-8
 11855  003EE6  1EE3               	comf	plusw1,f,c
 11856  003EE8  0EF9               	movlw	-7
 11857  003EEA  1EE3               	comf	plusw1,f,c
 11858  003EEC  0EFA               	movlw	-6
 11859  003EEE  1EE3               	comf	plusw1,f,c
 11860  003EF0  0EFB               	movlw	-5
 11861  003EF2  1EE3               	comf	plusw1,f,c
 11862  003EF4  0EFC               	movlw	-4
 11863  003EF6  1EE3               	comf	plusw1,f,c
 11864  003EF8  0EFD               	movlw	-3
 11865  003EFA  1EE3               	comf	plusw1,f,c
 11866  003EFC  E314               	bnc	u2560
 11867  003EFE  0EF7               	movlw	-9
 11868  003F00  2AE3               	incf	plusw1,f,c
 11869  003F02  E311               	bnc	u2560
 11870  003F04  0EF8               	movlw	-8
 11871  003F06  2AE3               	incf	plusw1,f,c
 11872  003F08  E30E               	bnc	u2560
 11873  003F0A  0EF9               	movlw	-7
 11874  003F0C  2AE3               	incf	plusw1,f,c
 11875  003F0E  E30B               	bnc	u2560
 11876  003F10  0EFA               	movlw	-6
 11877  003F12  2AE3               	incf	plusw1,f,c
 11878  003F14  E308               	bnc	u2560
 11879  003F16  0EFB               	movlw	-5
 11880  003F18  2AE3               	incf	plusw1,f,c
 11881  003F1A  E305               	bnc	u2560
 11882  003F1C  0EFC               	movlw	-4
 11883  003F1E  2AE3               	incf	plusw1,f,c
 11884  003F20  E302               	bnc	u2560
 11885  003F22  0EFD               	movlw	-3
 11886  003F24  2AE3               	incf	plusw1,f,c
 11887  003F26                     u2560:
 11888                           
 11889                           ;stkvar	_quotient @ sp[(-10)+0]
 11890  003F26  0EF6               	movlw	246
 11891  003F28  24E1               	addwf	fsr1l,w,c
 11892  003F2A  6ED9               	movwf	fsr2l,c
 11893  003F2C  0EFF               	movlw	255
 11894  003F2E  20E2               	addwfc	fsr1h,w,c
 11895  003F30  6EDA               	movwf	fsr2h,c
 11896                           
 11897                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11898  003F32  0E08               	movlw	8
 11899  003F34  6E39               	movwf	btemp,c
 11900  003F36  0EEE               	movlw	-18
 11901  003F38                     us257999:
 11902  003F38  006F FF7B FFE3     	movff	postinc2,plusw1
 11903  003F3E  28E8               	incf	wreg,w,c
 11904  003F40  2E39               	decfsz	btemp,f,c
 11905  003F42  D7FA               	bra	us257999
 11906                           
 11907                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11908  003F44  0EF6               	movlw	246
 11909  003F46  26E1               	addwf	fsr1l,f,c
 11910  003F48  0EFF               	movlw	255
 11911  003F4A  22E2               	addwfc	fsr1h,f,c
 11912  003F4C  0012               	return		;funcret
 11913  003F4E                     __end_of___aodiv:
 11914                           	opt callstack 0
 11915                           
 11916 ;; *************** function _ctoa *****************
 11917 ;; Defined at:
 11918 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11921 ;;		 -> f(5), NULL(0), 
 11922 ;;  c               1  [STACK] unsigned char 
 11923 ;; Auto vars:     Size  Location     Type
 11924 ;;  w               2  [STACK] int 
 11925 ;;  l               2    0        int 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  2  [STACK] int 
 11928 ;; Registers used:
 11929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11939 ;;Total ram usage:        0 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; Hardware stack levels required when called:    8
 11942 ;; This function calls:
 11943 ;;		_pad
 11944 ;; This function is called by:
 11945 ;;		_vfpfcnvrt
 11946 ;; This function uses a reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text48
 11950  00558E                     __ptext48:
 11951                           	opt callstack 0
 11952  00558E                     _ctoa:
 11953                           	opt callstack 0
 11954                           
 11955                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11956  00558E  52E6               	movf	postinc1,f,c
 11957  005590  52E6               	movf	postinc1,f,c
 11958                           
 11959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11960                           
 11961                           ;incstack = 0
 11962  005592  501D               	movf	_width,w,c
 11963  005594  101E               	iorwf	_width+1,w,c
 11964  005596  A4D8               	btfss	status,2,c
 11965  005598  D009               	goto	l8105
 11966                           
 11967                           ;stkvar	_w @ sp[(-2)+0]
 11968  00559A  0EFE               	movlw	-2
 11969  00559C  0060  F077  FFE3   	movff	_width,plusw1
 11970  0055A2  0EFF               	movlw	-1
 11971  0055A4  0060  F07B  FFE3   	movff	_width+1,plusw1
 11972  0055AA  D016               	goto	l8107
 11973  0055AC                     l8105:
 11974  0055AC  0EFF               	movlw	255
 11975  0055AE  6E43               	movwf	btemp+10,c
 11976  0055B0  0EFF               	movlw	255
 11977  0055B2  6E44               	movwf	btemp+11,c
 11978  0055B4  0060  F074  F041   	movff	_width,btemp+8
 11979  0055BA  0060  F078  F042   	movff	_width+1,btemp+9
 11980  0055C0  5043               	movf	btemp+10,w,c
 11981  0055C2  2641               	addwf	btemp+8,f,c
 11982  0055C4  5044               	movf	btemp+11,w,c
 11983  0055C6  2242               	addwfc	btemp+9,f,c
 11984                           
 11985                           ;stkvar	_w @ sp[(-2)+0]
 11986  0055C8  0EFE               	movlw	-2
 11987  0055CA  0060  F107  FFE3   	movff	btemp+8,plusw1
 11988  0055D0  0EFF               	movlw	-1
 11989  0055D2  0060  F10B  FFE3   	movff	btemp+9,plusw1
 11990  0055D8                     l8107:
 11991                           
 11992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11993                           ;stkvar	_c @ sp[(-2)+-3]
 11994  0055D8  0EFB               	movlw	-5
 11995  0055DA  006F FF8C  F1D0    	movff	plusw1,_dbuf
 11996                           
 11997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11998  0055E0  0101               	movlb	1	; () banked
 11999  0055E2  6BD1               	clrf	(_dbuf+1)& (0+255),b
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12003                           ;stkvar	_w @ sp[(-2)+0]
 12004  0055E4  0EFE               	movlw	-2
 12005  0055E6  006F FF8F FFE6     	movff	plusw1,postinc1
 12006  0055EC  006F FF8F FFE6     	movff	plusw1,postinc1
 12007  0055F2  0ED0               	movlw	low _dbuf
 12008  0055F4  6EE6               	movwf	postinc1,c
 12009  0055F6  0E01               	movlw	high _dbuf
 12010  0055F8  6EE6               	movwf	postinc1,c
 12011                           
 12012                           ;stkvar	_fp @ sp[(-6)+-2]
 12013  0055FA  0EF8               	movlw	-8
 12014  0055FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12015  005602  006F FF8F FFE6     	movff	plusw1,postinc1
 12016  005608  EC25  F025         	call	_pad	;wreg free
 12017                           
 12018                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12019  00560C  0EFB               	movlw	251
 12020  00560E  26E1               	addwf	fsr1l,f,c
 12021  005610  0EFF               	movlw	255
 12022  005612  22E2               	addwfc	fsr1h,f,c
 12023  005614  0012               	return		;funcret
 12024  005616                     __end_of_ctoa:
 12025                           	opt callstack 0
 12026                           
 12027 ;; *************** function _pad *****************
 12028 ;; Defined at:
 12029 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12032 ;;		 -> f(5), NULL(0), 
 12033 ;;  buf             2  [STACK] PTR unsigned char 
 12034 ;;		 -> dbuf(32), 
 12035 ;;  p               2  [STACK] int 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  w               2  [STACK] int 
 12038 ;;  i               2  [STACK] int 
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  2  [STACK] int 
 12041 ;; Registers used:
 12042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/1
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12052 ;;Total ram usage:        0 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:    7
 12055 ;; This function calls:
 12056 ;;		_fputc
 12057 ;;		_fputs
 12058 ;;		_strlen
 12059 ;; This function is called by:
 12060 ;;		_ctoa
 12061 ;;		_dtoa
 12062 ;; This function uses a reentrant model
 12063 ;;
 12064                           
 12065                           	psect	text49
 12066  004A4A                     __ptext49:
 12067                           	opt callstack 0
 12068  004A4A                     _pad:
 12069                           	opt callstack 0
 12070                           
 12071                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12072  004A4A  52E6               	movf	postinc1,f,c
 12073  004A4C  52E6               	movf	postinc1,f,c
 12074  004A4E  52E6               	movf	postinc1,f,c
 12075  004A50  52E6               	movf	postinc1,f,c
 12076                           
 12077                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12078                           
 12079                           ;incstack = 0
 12080  004A52  A021               	btfss	_flags,0,c
 12081  004A54  D010               	goto	l8083
 12082                           
 12083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12084                           ;stkvar	_fp @ sp[(-4)+-2]
 12085  004A56  0EFA               	movlw	-6
 12086  004A58  006F FF8F FFE6     	movff	plusw1,postinc1
 12087  004A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 12088                           
 12089                           ;stkvar	_buf @ sp[(-6)+-4]
 12090  004A64  0EF6               	movlw	-10
 12091  004A66  006F FF8F FFE6     	movff	plusw1,postinc1
 12092  004A6C  006F FF8F FFE6     	movff	plusw1,postinc1
 12093  004A72  EC32  F02A         	call	_fputs	;wreg free
 12094  004A76                     l8083:
 12095                           
 12096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12097                           ;stkvar	_p @ sp[(-4)+-6]
 12098  004A76  0EF7               	movlw	-9
 12099  004A78  BEE3               	btfsc	plusw1,7,c
 12100  004A7A  D011               	goto	l8087
 12101                           
 12102                           ;stkvar	_p @ sp[(-4)+-6]
 12103                           ;stkvar	_w @ sp[(-4)+0]
 12104  004A7C  0EF6               	movlw	-10
 12105  004A7E  006F FF8C  F039    	movff	plusw1,btemp
 12106  004A84  0EFC               	movlw	-4
 12107  004A86  0060  F0E7  FFE3   	movff	btemp,plusw1
 12108  004A8C  0EF7               	movlw	-9
 12109  004A8E  006F FF8C  F039    	movff	plusw1,btemp
 12110  004A94  0EFD               	movlw	-3
 12111  004A96  0060  F0E7  FFE3   	movff	btemp,plusw1
 12112  004A9C  D004               	goto	l1839
 12113  004A9E                     l8087:
 12114                           
 12115                           ;stkvar	_w @ sp[(-4)+0]
 12116  004A9E  0EFC               	movlw	-4
 12117  004AA0  6AE3               	clrf	plusw1,c
 12118  004AA2  0EFD               	movlw	-3
 12119  004AA4  6AE3               	clrf	plusw1,c
 12120  004AA6                     l1839:
 12121                           
 12122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12123                           ;stkvar	_i @ sp[(-4)+2]
 12124  004AA6  0EFE               	movlw	-2
 12125  004AA8  6AE3               	clrf	plusw1,c
 12126  004AAA  0EFF               	movlw	-1
 12127  004AAC  6AE3               	clrf	plusw1,c
 12128                           
 12129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12130  004AAE  D01E               	goto	l8093
 12131  004AB0                     l8089:
 12132                           
 12133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12134                           ;stkvar	_fp @ sp[(-4)+-2]
 12135  004AB0  0EFA               	movlw	-6
 12136  004AB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  004AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  004ABE  0E20               	movlw	32
 12139  004AC0  6EE6               	movwf	postinc1,c
 12140  004AC2  0E00               	movlw	0
 12141  004AC4  6EE6               	movwf	postinc1,c
 12142  004AC6  ECAF  F025         	call	_fputc	;wreg free
 12143                           
 12144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12145                           ;stkvar	_i @ sp[(-4)+2]
 12146  004ACA  0EFE               	movlw	-2
 12147  004ACC  50E3               	movf	plusw1,w,c
 12148  004ACE  0F01               	addlw	1
 12149  004AD0  6E39               	movwf	btemp,c
 12150  004AD2  0EFE               	movlw	-2
 12151  004AD4  0060  F0E7  FFE3   	movff	btemp,plusw1
 12152  004ADA  6A39               	clrf	btemp,c
 12153  004ADC  0EFF               	movlw	-1
 12154  004ADE  50E3               	movf	plusw1,w,c
 12155  004AE0  2039               	addwfc	btemp,w,c
 12156  004AE2  6E39               	movwf	btemp,c
 12157  004AE4  0EFF               	movlw	-1
 12158  004AE6  0060  F0E7  FFE3   	movff	btemp,plusw1
 12159  004AEC                     l8093:
 12160                           
 12161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12162                           ;stkvar	_w @ sp[(-4)+0]
 12163                           ;stkvar	_i @ sp[(-4)+2]
 12164  004AEC  50E1               	movf	fsr1l,w,c
 12165  004AEE  0FFE               	addlw	-2
 12166  004AF0  6ED9               	movwf	fsr2l,c
 12167  004AF2  50E2               	movf	fsr1h,w,c
 12168  004AF4  6EDA               	movwf	fsr2h,c
 12169  004AF6  0EFF               	movlw	255
 12170  004AF8  22DA               	addwfc	fsr2h,f,c
 12171  004AFA  0EFC               	movlw	-4
 12172  004AFC  50E3               	movf	plusw1,w,c
 12173  004AFE  5CDE               	subwf	postinc2,w,c
 12174  004B00  50DE               	movf	postinc2,w,c
 12175  004B02  0A80               	xorlw	128
 12176  004B04  6E39               	movwf	btemp,c
 12177  004B06  0EFD               	movlw	-3
 12178  004B08  50E3               	movf	plusw1,w,c
 12179  004B0A  0A80               	xorlw	128
 12180  004B0C  5839               	subwfb	btemp,w,c
 12181  004B0E  A0D8               	btfss	status,0,c
 12182  004B10  D7CF               	goto	l8089
 12183                           
 12184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12185  004B12  B021               	btfsc	_flags,0,c
 12186  004B14  D010               	goto	l8097
 12187                           
 12188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12189                           ;stkvar	_fp @ sp[(-4)+-2]
 12190  004B16  0EFA               	movlw	-6
 12191  004B18  006F FF8F FFE6     	movff	plusw1,postinc1
 12192  004B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 12193                           
 12194                           ;stkvar	_buf @ sp[(-6)+-4]
 12195  004B24  0EF6               	movlw	-10
 12196  004B26  006F FF8F FFE6     	movff	plusw1,postinc1
 12197  004B2C  006F FF8F FFE6     	movff	plusw1,postinc1
 12198  004B32  EC32  F02A         	call	_fputs	;wreg free
 12199  004B36                     l8097:
 12200                           
 12201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12202                           ;stkvar	_w @ sp[(-4)+0]
 12203                           ;stkvar	_buf @ sp[(-4)+-4]
 12204  004B36  0EF8               	movlw	-8
 12205  004B38  006F FF8F FFE6     	movff	plusw1,postinc1
 12206  004B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  004B44  ECF7  F028         	call	_strlen	;wreg free
 12208  004B48  0EFC               	movlw	-4
 12209  004B4A  50E3               	movf	plusw1,w,c
 12210  004B4C  2639               	addwf	btemp,f,c
 12211  004B4E  0EFD               	movlw	-3
 12212  004B50  50E3               	movf	plusw1,w,c
 12213  004B52  223A               	addwfc	btemp+1,f,c
 12214                           
 12215                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12216  004B54  0EF6               	movlw	246
 12217  004B56  26E1               	addwf	fsr1l,f,c
 12218  004B58  0EFF               	movlw	255
 12219  004B5A  22E2               	addwfc	fsr1h,f,c
 12220  004B5C  0012               	return		;funcret
 12221  004B5E                     __end_of_pad:
 12222                           	opt callstack 0
 12223                           
 12224 ;; *************** function _strlen *****************
 12225 ;; Defined at:
 12226 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;  s               2  [STACK] PTR const unsigned char 
 12229 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12230 ;;		 -> STR_3(6), V(98), 
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;  a               2  [STACK] PTR const unsigned char 
 12233 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12234 ;;		 -> STR_3(6), V(98), 
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  2  [STACK] unsigned int 
 12237 ;; Registers used:
 12238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12248 ;;Total ram usage:        0 bytes
 12249 ;; Hardware stack levels used:    1
 12250 ;; Hardware stack levels required when called:    3
 12251 ;; This function calls:
 12252 ;;		Nothing
 12253 ;; This function is called by:
 12254 ;;		_eaDogM_WriteString
 12255 ;;		_pad
 12256 ;;		_stoa
 12257 ;; This function uses a reentrant model
 12258 ;;
 12259                           
 12260                           	psect	text50
 12261  0051EE                     __ptext50:
 12262                           	opt callstack 0
 12263  0051EE                     _strlen:
 12264                           	opt callstack 0
 12265                           
 12266                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12267  0051EE  52E6               	movf	postinc1,f,c
 12268  0051F0  52E6               	movf	postinc1,f,c
 12269                           
 12270                           ;stkvar	_s @ sp[(-2)+-2]
 12271                           
 12272                           ;incstack = 0
 12273  0051F2  0EFC               	movlw	-4
 12274  0051F4  006F FF8C  F043    	movff	plusw1,btemp+10
 12275  0051FA  0EFD               	movlw	-3
 12276  0051FC  006F FF8C  F044    	movff	plusw1,btemp+11
 12277                           
 12278                           ;stkvar	_a @ sp[(-2)+0]
 12279  005202  0EFF               	movlw	-1
 12280  005204  0060  F113  FFE3   	movff	btemp+11,plusw1
 12281  00520A  0EFE               	movlw	-2
 12282  00520C  0060  F10F  FFE3   	movff	btemp+10,plusw1
 12283  005212  D011               	goto	l8065
 12284  005214                     l8063:
 12285                           
 12286                           ;stkvar	_s @ sp[(-2)+-2]
 12287  005214  0EFC               	movlw	-4
 12288  005216  50E3               	movf	plusw1,w,c
 12289  005218  0F01               	addlw	1
 12290  00521A  6E39               	movwf	btemp,c
 12291  00521C  0EFC               	movlw	-4
 12292  00521E  0060  F0E7  FFE3   	movff	btemp,plusw1
 12293  005224  6A39               	clrf	btemp,c
 12294  005226  0EFD               	movlw	-3
 12295  005228  50E3               	movf	plusw1,w,c
 12296  00522A  2039               	addwfc	btemp,w,c
 12297  00522C  6E39               	movwf	btemp,c
 12298  00522E  0EFD               	movlw	-3
 12299  005230  0060  F0E7  FFE3   	movff	btemp,plusw1
 12300  005236                     l8065:
 12301                           
 12302                           ;stkvar	_s @ sp[(-2)+-2]
 12303  005236  0EFC               	movlw	-4
 12304  005238  006F FF8F FFF6     	movff	plusw1,tblptrl
 12305  00523E  0EFD               	movlw	-3
 12306  005240  006F FF8F FFF7     	movff	plusw1,tblptrh
 12307  005246  0E00               	movlw	low (__smallconst shr (0+16))
 12308  005248  6EF8               	movwf	tblptru,c
 12309  00524A  0E1F               	movlw	(high __ramtop+-1)
 12310  00524C  64F7               	cpfsgt	tblptrh,c
 12311  00524E  D003               	bra	u4627
 12312  005250  0008               	tblrd		*
 12313  005252  50F5               	movf	tablat,w,c
 12314  005254  D007               	bra	u4620
 12315  005256                     u4627:
 12316  005256  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12317  00525C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12318  005262  50EF               	movf	indf0,w,c
 12319  005264                     u4620:
 12320  005264  0900               	iorlw	0
 12321  005266  A4D8               	btfss	status,2,c
 12322  005268  D7D5               	goto	l8063
 12323                           
 12324                           ;stkvar	_a @ sp[(-2)+0]
 12325                           ;stkvar	_s @ sp[(-2)+-2]
 12326  00526A  0EFC               	movlw	-4
 12327  00526C  006F FF8C  F039    	movff	plusw1,btemp
 12328  005272  0EFD               	movlw	-3
 12329  005274  006F FF8C  F03A    	movff	plusw1,btemp+1
 12330  00527A  0EFE               	movlw	-2
 12331  00527C  50E3               	movf	plusw1,w,c
 12332  00527E  5E39               	subwf	btemp,f,c
 12333  005280  0EFF               	movlw	-1
 12334  005282  50E3               	movf	plusw1,w,c
 12335  005284  5A3A               	subwfb	btemp+1,f,c
 12336                           
 12337                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12338  005286  52E5               	movf	postdec1,f,c
 12339  005288  52E5               	movf	postdec1,f,c
 12340  00528A  52E5               	movf	postdec1,f,c
 12341  00528C  52E5               	movf	postdec1,f,c
 12342  00528E  0012               	return		;funcret
 12343  005290                     __end_of_strlen:
 12344                           	opt callstack 0
 12345                           
 12346 ;; *************** function _fputs *****************
 12347 ;; Defined at:
 12348 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;  s               2  [STACK] PTR const unsigned char 
 12351 ;;		 -> dbuf(32), 
 12352 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12353 ;;		 -> f(5), NULL(0), 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  i               2  [STACK] int 
 12356 ;;  c               1  [STACK] unsigned char 
 12357 ;; Return value:  Size  Location     Type
 12358 ;;                  2  [STACK] int 
 12359 ;; Registers used:
 12360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12361 ;; Tracked objects:
 12362 ;;		On entry : 0/1
 12363 ;;		On exit  : 0/0
 12364 ;;		Unchanged: 0/0
 12365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12370 ;;Total ram usage:        0 bytes
 12371 ;; Hardware stack levels used:    1
 12372 ;; Hardware stack levels required when called:    6
 12373 ;; This function calls:
 12374 ;;		_fputc
 12375 ;; This function is called by:
 12376 ;;		_pad
 12377 ;; This function uses a reentrant model
 12378 ;;
 12379                           
 12380                           	psect	text51
 12381  005464                     __ptext51:
 12382                           	opt callstack 0
 12383  005464                     _fputs:
 12384                           	opt callstack 0
 12385                           
 12386                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12387  005464  52E6               	movf	postinc1,f,c
 12388  005466  52E6               	movf	postinc1,f,c
 12389  005468  52E6               	movf	postinc1,f,c
 12390                           
 12391                           ;stkvar	_i @ sp[(-3)+0]
 12392                           
 12393                           ;incstack = 0
 12394  00546A  0EFD               	movlw	-3
 12395  00546C  6AE3               	clrf	plusw1,c
 12396  00546E  0EFE               	movlw	-2
 12397  005470  6AE3               	clrf	plusw1,c
 12398  005472  D01F               	goto	l8077
 12399  005474                     l8073:
 12400                           
 12401                           ;stkvar	_fp @ sp[(-3)+-4]
 12402  005474  0EF9               	movlw	-7
 12403  005476  006F FF8F FFE6     	movff	plusw1,postinc1
 12404  00547C  006F FF8F FFE6     	movff	plusw1,postinc1
 12405                           
 12406                           ;stkvar	_c @ sp[(-5)+2]
 12407  005482  0EFD               	movlw	-3
 12408  005484  50E3               	movf	plusw1,w,c
 12409  005486  6EE6               	movwf	postinc1,c
 12410  005488  0E00               	movlw	0
 12411  00548A  6EE6               	movwf	postinc1,c
 12412  00548C  ECAF  F025         	call	_fputc	;wreg free
 12413                           
 12414                           ;stkvar	_i @ sp[(-3)+0]
 12415  005490  0EFD               	movlw	-3
 12416  005492  50E3               	movf	plusw1,w,c
 12417  005494  0F01               	addlw	1
 12418  005496  6E39               	movwf	btemp,c
 12419  005498  0EFD               	movlw	-3
 12420  00549A  0060  F0E7  FFE3   	movff	btemp,plusw1
 12421  0054A0  6A39               	clrf	btemp,c
 12422  0054A2  0EFE               	movlw	-2
 12423  0054A4  50E3               	movf	plusw1,w,c
 12424  0054A6  2039               	addwfc	btemp,w,c
 12425  0054A8  6E39               	movwf	btemp,c
 12426  0054AA  0EFE               	movlw	-2
 12427  0054AC  0060  F0E7  FFE3   	movff	btemp,plusw1
 12428  0054B2                     l8077:
 12429                           
 12430                           ;stkvar	_i @ sp[(-3)+0]
 12431  0054B2  0EFD               	movlw	-3
 12432  0054B4  006F FF8C  F043    	movff	plusw1,btemp+10
 12433  0054BA  0EFE               	movlw	-2
 12434  0054BC  006F FF8C  F044    	movff	plusw1,btemp+11
 12435                           
 12436                           ;stkvar	_s @ sp[(-3)+-2]
 12437  0054C2  0EFB               	movlw	-5
 12438  0054C4  006F FF8C  F041    	movff	plusw1,btemp+8
 12439  0054CA  0EFC               	movlw	-4
 12440  0054CC  006F FF8C  F042    	movff	plusw1,btemp+9
 12441  0054D2  5043               	movf	btemp+10,w,c
 12442  0054D4  2441               	addwf	btemp+8,w,c
 12443  0054D6  6ED9               	movwf	fsr2l,c
 12444  0054D8  5044               	movf	btemp+11,w,c
 12445  0054DA  2042               	addwfc	btemp+9,w,c
 12446  0054DC  6EDA               	movwf	fsr2h,c
 12447  0054DE  50DF               	movf	indf2,w,c
 12448  0054E0  6E44               	movwf	btemp+11,c
 12449                           
 12450                           ;stkvar	_c @ sp[(-3)+2]
 12451  0054E2  0EFF               	movlw	-1
 12452  0054E4  0060  F113  FFE3   	movff	btemp+11,plusw1
 12453  0054EA  0EFF               	movlw	-1
 12454  0054EC  50E3               	movf	plusw1,w,c
 12455  0054EE  A4D8               	btfss	status,2,c
 12456  0054F0  D7C1               	goto	l8073
 12457                           
 12458                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12459  0054F2  0EF9               	movlw	249
 12460  0054F4  26E1               	addwf	fsr1l,f,c
 12461  0054F6  0EFF               	movlw	255
 12462  0054F8  22E2               	addwfc	fsr1h,f,c
 12463  0054FA  0012               	return		;funcret
 12464  0054FC                     __end_of_fputs:
 12465                           	opt callstack 0
 12466                           
 12467 ;; *************** function _fputc *****************
 12468 ;; Defined at:
 12469 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  c               2  [STACK] int 
 12472 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12473 ;;		 -> f(5), NULL(0), 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  2  [STACK] int 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    5
 12492 ;; This function calls:
 12493 ;;		_putch
 12494 ;; This function is called by:
 12495 ;;		_pad
 12496 ;;		_stoa
 12497 ;;		_vfpfcnvrt
 12498 ;;		_fputs
 12499 ;; This function uses a reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text52
 12503  004B5E                     __ptext52:
 12504                           	opt callstack 0
 12505  004B5E                     _fputc:
 12506                           	opt callstack 21
 12507                           
 12508                           ;stkvar	_fp @ sp[(0)+-4]
 12509                           
 12510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12511                           ;incstack = 0
 12512  004B5E  0EFC               	movlw	-4
 12513  004B60  006F FF8C  F039    	movff	plusw1,btemp
 12514  004B66  0EFD               	movlw	-3
 12515  004B68  50E3               	movf	plusw1,w,c
 12516  004B6A  1039               	iorwf	btemp,w,c
 12517  004B6C  B4D8               	btfsc	status,2,c
 12518  004B6E  D009               	goto	u4590
 12519                           
 12520                           ;stkvar	_fp @ sp[(0)+-4]
 12521  004B70  0EFC               	movlw	-4
 12522  004B72  006F FF8C  F039    	movff	plusw1,btemp
 12523  004B78  0EFD               	movlw	-3
 12524  004B7A  50E3               	movf	plusw1,w,c
 12525  004B7C  1039               	iorwf	btemp,w,c
 12526  004B7E  A4D8               	btfss	status,2,c
 12527  004B80  D006               	goto	l8053
 12528  004B82                     u4590:
 12529                           
 12530                           ;stkvar	_c @ sp[(0)+-2]
 12531  004B82  0EFE               	movlw	-2
 12532  004B84  50E3               	movf	plusw1,w,c
 12533  004B86  6EE6               	movwf	postinc1,c
 12534  004B88  EC66  F031         	call	_putch	;wreg free
 12535  004B8C  D069               	goto	l2622
 12536  004B8E                     l8053:
 12537                           
 12538                           ;stkvar	_fp @ sp[(0)+-4]
 12539  004B8E  0EFC               	movlw	-4
 12540  004B90  006F FF8C  F043    	movff	plusw1,btemp+10
 12541  004B96  0EFD               	movlw	-3
 12542  004B98  006F FF8C  F044    	movff	plusw1,btemp+11
 12543  004B9E  0E03               	movlw	3
 12544  004BA0  2443               	addwf	btemp+10,w,c
 12545  004BA2  6ED9               	movwf	fsr2l,c
 12546  004BA4  0E00               	movlw	0
 12547  004BA6  2044               	addwfc	btemp+11,w,c
 12548  004BA8  6EDA               	movwf	fsr2h,c
 12549  004BAA  50DE               	movf	postinc2,w,c
 12550  004BAC  10DE               	iorwf	postinc2,w,c
 12551  004BAE  B4D8               	btfsc	status,2,c
 12552  004BB0  D026               	goto	u4610
 12553                           
 12554                           ;stkvar	_fp @ sp[(0)+-4]
 12555  004BB2  0EFC               	movlw	-4
 12556  004BB4  006F FF8C  F043    	movff	plusw1,btemp+10
 12557  004BBA  0EFD               	movlw	-3
 12558  004BBC  006F FF8C  F044    	movff	plusw1,btemp+11
 12559  004BC2  0E03               	movlw	3
 12560  004BC4  2443               	addwf	btemp+10,w,c
 12561  004BC6  6ED9               	movwf	fsr2l,c
 12562  004BC8  0E00               	movlw	0
 12563  004BCA  2044               	addwfc	btemp+11,w,c
 12564  004BCC  6EDA               	movwf	fsr2h,c
 12565                           
 12566                           ;stkvar	_fp @ sp[(0)+-4]
 12567  004BCE  0EFC               	movlw	-4
 12568  004BD0  006F FF8C  F043    	movff	plusw1,btemp+10
 12569  004BD6  0EFD               	movlw	-3
 12570  004BD8  006F FF8C  F044    	movff	plusw1,btemp+11
 12571  004BDE  0E01               	movlw	1
 12572  004BE0  2443               	addwf	btemp+10,w,c
 12573  004BE2  6EE9               	movwf	fsr0l,c
 12574  004BE4  0E00               	movlw	0
 12575  004BE6  2044               	addwfc	btemp+11,w,c
 12576  004BE8  6EEA               	movwf	fsr0h,c
 12577  004BEA  50DE               	movf	postinc2,w,c
 12578  004BEC  5CEE               	subwf	postinc0,w,c
 12579  004BEE  50EE               	movf	postinc0,w,c
 12580  004BF0  0A80               	xorlw	128
 12581  004BF2  6E39               	movwf	btemp,c
 12582  004BF4  50DE               	movf	postinc2,w,c
 12583  004BF6  0A80               	xorlw	128
 12584  004BF8  5839               	subwfb	btemp,w,c
 12585  004BFA  B0D8               	btfsc	status,0,c
 12586  004BFC  D031               	goto	l2622
 12587  004BFE                     u4610:
 12588                           
 12589                           ;stkvar	_c @ sp[(0)+-2]
 12590                           ;stkvar	_fp @ sp[(0)+-4]
 12591  004BFE  0EFC               	movlw	-4
 12592  004C00  006F FF8C  F043    	movff	plusw1,btemp+10
 12593  004C06  0EFD               	movlw	-3
 12594  004C08  006F FF8C  F044    	movff	plusw1,btemp+11
 12595  004C0E  0E01               	movlw	1
 12596  004C10  2443               	addwf	btemp+10,w,c
 12597  004C12  6ED9               	movwf	fsr2l,c
 12598  004C14  0E00               	movlw	0
 12599  004C16  2044               	addwfc	btemp+11,w,c
 12600  004C18  6EDA               	movwf	fsr2h,c
 12601  004C1A  50DF               	movf	indf2,w,c
 12602  004C1C  6E44               	movwf	btemp+11,c
 12603                           
 12604                           ;stkvar	_fp @ sp[(0)+-4]
 12605  004C1E  0EFC               	movlw	-4
 12606  004C20  006F FF8F FFD9     	movff	plusw1,fsr2l
 12607  004C26  0EFD               	movlw	-3
 12608  004C28  006F FF8F FFDA     	movff	plusw1,fsr2h
 12609  004C2E  50DF               	movf	indf2,w,c
 12610  004C30  2444               	addwf	btemp+11,w,c
 12611  004C32  6ED9               	movwf	fsr2l,c
 12612  004C34  6ADA               	clrf	fsr2h,c
 12613  004C36  0EFE               	movlw	-2
 12614  004C38  006F FF8F FFDF     	movff	plusw1,indf2
 12615                           
 12616                           ;stkvar	_fp @ sp[(0)+-4]
 12617  004C3E  0EFC               	movlw	-4
 12618  004C40  006F FF8C  F043    	movff	plusw1,btemp+10
 12619  004C46  0EFD               	movlw	-3
 12620  004C48  006F FF8C  F044    	movff	plusw1,btemp+11
 12621  004C4E  0E01               	movlw	1
 12622  004C50  2443               	addwf	btemp+10,w,c
 12623  004C52  6ED9               	movwf	fsr2l,c
 12624  004C54  0E00               	movlw	0
 12625  004C56  2044               	addwfc	btemp+11,w,c
 12626  004C58  6EDA               	movwf	fsr2h,c
 12627  004C5A  2ADE               	incf	postinc2,f,c
 12628  004C5C  0E00               	movlw	0
 12629  004C5E  22DD               	addwfc	postdec2,f,c
 12630  004C60                     l2622:
 12631                           
 12632                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12633  004C60  52E5               	movf	postdec1,f,c
 12634  004C62  52E5               	movf	postdec1,f,c
 12635  004C64  52E5               	movf	postdec1,f,c
 12636  004C66  52E5               	movf	postdec1,f,c
 12637  004C68  0012               	return		;funcret
 12638  004C6A                     __end_of_fputc:
 12639                           	opt callstack 0
 12640                           
 12641 ;; *************** function _putch *****************
 12642 ;; Defined at:
 12643 ;;		line 138 in file "eadog.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  c               1  [STACK] unsigned char 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;		None
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1  [STACK] void 
 12650 ;; Registers used:
 12651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;Total ram usage:        0 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; Hardware stack levels required when called:    4
 12664 ;; This function calls:
 12665 ;;		_ringBufS_put_dma
 12666 ;; This function is called by:
 12667 ;;		_fputc
 12668 ;; This function uses a reentrant model
 12669 ;;
 12670                           
 12671                           	psect	text53
 12672  0062CC                     __ptext53:
 12673                           	opt callstack 0
 12674  0062CC                     _putch:
 12675                           	opt callstack 21
 12676                           
 12677                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12678                           ;stkvar	_c @ sp[(0)+-1]
 12679                           
 12680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12681                           ;incstack = 0
 12682  0062CC  0EFF               	movlw	-1
 12683  0062CE  50E3               	movf	plusw1,w,c
 12684  0062D0  6EE6               	movwf	postinc1,c
 12685  0062D2  0060  F357  FFE6   	movff	_spi_link+6,postinc1
 12686  0062D8  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
 12687  0062DE  ECA2  F028         	call	_ringBufS_put_dma	;wreg free
 12688                           
 12689                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12690  0062E2  52E5               	movf	postdec1,f,c
 12691  0062E4  0012               	return		;funcret
 12692  0062E6                     __end_of_putch:
 12693                           	opt callstack 0
 12694                           
 12695 ;; *************** function _ringBufS_put_dma *****************
 12696 ;; Defined at:
 12697 ;;		line 67 in file "ringbufs.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12700 ;;		 -> ring_buf1(67), 
 12701 ;;  c               1  [STACK] const unsigned char 
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;		None
 12704 ;; Return value:  Size  Location     Type
 12705 ;;                  1  [STACK] void 
 12706 ;; Registers used:
 12707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12708 ;; Tracked objects:
 12709 ;;		On entry : 0/0
 12710 ;;		On exit  : 0/0
 12711 ;;		Unchanged: 0/0
 12712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12717 ;;Total ram usage:        0 bytes
 12718 ;; Hardware stack levels used:    1
 12719 ;; Hardware stack levels required when called:    3
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_putch
 12724 ;; This function uses a reentrant model
 12725 ;;
 12726                           
 12727                           	psect	text54
 12728  005144                     __ptext54:
 12729                           	opt callstack 0
 12730  005144                     _ringBufS_put_dma:
 12731                           	opt callstack 21
 12732                           
 12733                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12734                           ;stkvar	__this @ sp[(0)+-2]
 12735                           
 12736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12737                           ;incstack = 0
 12738  005144  0EFE               	movlw	-2
 12739  005146  006F FF8C  F043    	movff	plusw1,btemp+10
 12740  00514C  0EFF               	movlw	-1
 12741  00514E  006F FF8C  F044    	movff	plusw1,btemp+11
 12742  005154  0E42               	movlw	66
 12743  005156  2443               	addwf	btemp+10,w,c
 12744  005158  6ED9               	movwf	fsr2l,c
 12745  00515A  0E00               	movlw	0
 12746  00515C  2044               	addwfc	btemp+11,w,c
 12747  00515E  6EDA               	movwf	fsr2h,c
 12748  005160  0E40               	movlw	64
 12749  005162  60DF               	cpfslt	indf2,c
 12750  005164  D040               	goto	l1487
 12751                           
 12752                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12753                           ;stkvar	_c @ sp[(0)+-3]
 12754                           ;stkvar	__this @ sp[(0)+-2]
 12755  005166  0EFE               	movlw	-2
 12756  005168  006F FF8C  F043    	movff	plusw1,btemp+10
 12757  00516E  0EFF               	movlw	-1
 12758  005170  006F FF8C  F044    	movff	plusw1,btemp+11
 12759  005176  0E40               	movlw	64
 12760  005178  2443               	addwf	btemp+10,w,c
 12761  00517A  6ED9               	movwf	fsr2l,c
 12762  00517C  0E00               	movlw	0
 12763  00517E  2044               	addwfc	btemp+11,w,c
 12764  005180  6EDA               	movwf	fsr2h,c
 12765  005182  50DF               	movf	indf2,w,c
 12766  005184  6E44               	movwf	btemp+11,c
 12767                           
 12768                           ;stkvar	__this @ sp[(0)+-2]
 12769  005186  0EFE               	movlw	-2
 12770  005188  006F FF8C  F041    	movff	plusw1,btemp+8
 12771  00518E  0EFF               	movlw	-1
 12772  005190  006F FF8C  F042    	movff	plusw1,btemp+9
 12773  005196  5044               	movf	btemp+11,w,c
 12774  005198  2441               	addwf	btemp+8,w,c
 12775  00519A  6ED9               	movwf	fsr2l,c
 12776  00519C  0E00               	movlw	0
 12777  00519E  2042               	addwfc	btemp+9,w,c
 12778  0051A0  6EDA               	movwf	fsr2h,c
 12779  0051A2  0EFD               	movlw	-3
 12780  0051A4  006F FF8F FFDF     	movff	plusw1,indf2
 12781                           
 12782                           ;ringbufs.c: 71:   ++_this->head;
 12783                           ;stkvar	__this @ sp[(0)+-2]
 12784  0051AA  0EFE               	movlw	-2
 12785  0051AC  006F FF8C  F043    	movff	plusw1,btemp+10
 12786  0051B2  0EFF               	movlw	-1
 12787  0051B4  006F FF8C  F044    	movff	plusw1,btemp+11
 12788  0051BA  0E40               	movlw	64
 12789  0051BC  2443               	addwf	btemp+10,w,c
 12790  0051BE  6ED9               	movwf	fsr2l,c
 12791  0051C0  0E00               	movlw	0
 12792  0051C2  2044               	addwfc	btemp+11,w,c
 12793  0051C4  6EDA               	movwf	fsr2h,c
 12794  0051C6  2ADF               	incf	indf2,f,c
 12795                           
 12796                           ;ringbufs.c: 72:   ++_this->count;
 12797                           ;stkvar	__this @ sp[(0)+-2]
 12798  0051C8  0EFE               	movlw	-2
 12799  0051CA  006F FF8C  F043    	movff	plusw1,btemp+10
 12800  0051D0  0EFF               	movlw	-1
 12801  0051D2  006F FF8C  F044    	movff	plusw1,btemp+11
 12802  0051D8  0E42               	movlw	66
 12803  0051DA  2443               	addwf	btemp+10,w,c
 12804  0051DC  6ED9               	movwf	fsr2l,c
 12805  0051DE  0E00               	movlw	0
 12806  0051E0  2044               	addwfc	btemp+11,w,c
 12807  0051E2  6EDA               	movwf	fsr2h,c
 12808  0051E4  2ADF               	incf	indf2,f,c
 12809  0051E6                     l1487:
 12810                           
 12811                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12812  0051E6  52E5               	movf	postdec1,f,c
 12813  0051E8  52E5               	movf	postdec1,f,c
 12814  0051EA  52E5               	movf	postdec1,f,c
 12815  0051EC  0012               	return		;funcret
 12816  0051EE                     __end_of_ringBufS_put_dma:
 12817                           	opt callstack 0
 12818                           
 12819 ;; *************** function _SYSTEM_Initialize *****************
 12820 ;; Defined at:
 12821 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;		None
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1  [STACK] void 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 3F/3C
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12839 ;;Total ram usage:        0 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; Hardware stack levels required when called:    5
 12842 ;; This function calls:
 12843 ;;		_ADCC_Initialize
 12844 ;;		_CLC1_Initialize
 12845 ;;		_CLKREF_Initialize
 12846 ;;		_DMA1_Initialize
 12847 ;;		_DSM_Initialize
 12848 ;;		_EXT_INT_Initialize
 12849 ;;		_INTERRUPT_Initialize
 12850 ;;		_NCO1_Initialize
 12851 ;;		_OSCILLATOR_Initialize
 12852 ;;		_PIN_MANAGER_Initialize
 12853 ;;		_PMD_Initialize
 12854 ;;		_SPI1_Initialize
 12855 ;;		_TMR5_Initialize
 12856 ;;		_TMR6_Initialize
 12857 ;;		_UART1_Initialize
 12858 ;;		_UART2_Initialize
 12859 ;; This function is called by:
 12860 ;;		_main
 12861 ;; This function uses a reentrant model
 12862 ;;
 12863                           
 12864                           	psect	text55
 12865  005ACE                     __ptext55:
 12866                           	opt callstack 0
 12867  005ACE                     _SYSTEM_Initialize:
 12868                           	opt callstack 25
 12869                           
 12870                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12871                           
 12872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12873                           ;incstack = 0
 12874  005ACE  EC40  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12875                           
 12876                           ; BSR set to: 57
 12877                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12878  005AD2  ECA4  F031         	call	_PMD_Initialize	;wreg free
 12879                           
 12880                           ; BSR set to: 57
 12881                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12882  005AD6  EC97  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 12883                           
 12884                           ; BSR set to: 58
 12885                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12886  005ADA  EC99  F031         	call	_OSCILLATOR_Initialize	;wreg free
 12887                           
 12888                           ; BSR set to: 57
 12889                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12890  005ADE  ECD9  F02C         	call	_ADCC_Initialize	;wreg free
 12891                           
 12892                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12893  005AE2  EC4A  F031         	call	_NCO1_Initialize	;wreg free
 12894                           
 12895                           ; BSR set to: 63
 12896                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12897  005AE6  ECB3  F02C         	call	_EXT_INT_Initialize	;wreg free
 12898                           
 12899                           ; BSR set to: 57
 12900                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12901  005AEA  ECB8  F02F         	call	_TMR6_Initialize	;wreg free
 12902                           
 12903                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12904  005AEE  ECC9  F030         	call	_CLC1_Initialize	;wreg free
 12905                           
 12906                           ; BSR set to: 60
 12907                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12908  005AF2  EC21  F02D         	call	_TMR5_Initialize	;wreg free
 12909                           
 12910                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12911  005AF6  EC58  F031         	call	_DSM_Initialize	;wreg free
 12912                           
 12913                           ; BSR set to: 60
 12914                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12915  005AFA  EC73  F02B         	call	_UART1_Initialize	;wreg free
 12916                           
 12917                           ; BSR set to: 57
 12918                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12919  005AFE  EC07  F02C         	call	_UART2_Initialize	;wreg free
 12920                           
 12921                           ; BSR set to: 57
 12922                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12923  005B02  EC8E  F031         	call	_SPI1_Initialize	;wreg free
 12924                           
 12925                           ; BSR set to: 61
 12926                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12927  005B06  EC0B  F02B         	call	_DMA1_Initialize	;wreg free
 12928                           
 12929                           ; BSR set to: 59
 12930                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12931  005B0A  ECD5  F031         	call	_CLKREF_Initialize	;wreg free
 12932                           
 12933                           ; BSR set to: 60
 12934                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12935  005B0E  0012               	return		;funcret
 12936  005B10                     __end_of_SYSTEM_Initialize:
 12937                           	opt callstack 0
 12938                           
 12939 ;; *************** function _UART2_Initialize *****************
 12940 ;; Defined at:
 12941 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;		None
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1  [STACK] void 
 12948 ;; Registers used:
 12949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12950 ;; Tracked objects:
 12951 ;;		On entry : 3F/39
 12952 ;;		On exit  : 3F/39
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12959 ;;Total ram usage:        0 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    4
 12962 ;; This function calls:
 12963 ;;		_UART2_SetRxInterruptHandler
 12964 ;;		_UART2_SetTxInterruptHandler
 12965 ;; This function is called by:
 12966 ;;		_SYSTEM_Initialize
 12967 ;; This function uses a reentrant model
 12968 ;;
 12969                           
 12970                           	psect	text56
 12971  00580E                     __ptext56:
 12972                           	opt callstack 0
 12973  00580E                     _UART2_Initialize:
 12974                           	opt callstack 25
 12975                           
 12976                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12977                           
 12978                           ; BSR set to: 60
 12979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12980                           ;incstack = 0
 12981  00580E  0139               	movlb	57	; () banked
 12982  005810  9596               	bcf	150,2,b	;volatile
 12983                           
 12984                           ; BSR set to: 57
 12985                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12986  005812  0E3A               	movlw	low _UART2_Receive_ISR
 12987  005814  6EE6               	movwf	postinc1,c
 12988  005816  0E62               	movlw	high _UART2_Receive_ISR
 12989  005818  6EE6               	movwf	postinc1,c
 12990  00581A  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12991  00581C  6EE6               	movwf	postinc1,c
 12992  00581E  EC7C  F02F         	call	_UART2_SetRxInterruptHandler	;wreg free
 12993                           
 12994                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12995  005822  0139               	movlb	57	; () banked
 12996  005824  9796               	bcf	150,3,b	;volatile
 12997                           
 12998                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12999  005826  0ED8               	movlw	low _UART2_Transmit_ISR
 13000  005828  6EE6               	movwf	postinc1,c
 13001  00582A  0E5D               	movlw	high _UART2_Transmit_ISR
 13002  00582C  6EE6               	movwf	postinc1,c
 13003  00582E  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13004  005830  6EE6               	movwf	postinc1,c
 13005  005832  EC68  F02F         	call	_UART2_SetTxInterruptHandler	;wreg free
 13006                           
 13007                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13008  005836  013D               	movlb	61	; () banked
 13009  005838  6BD4               	clrf	212,b	;volatile
 13010                           
 13011                           ; BSR set to: 61
 13012                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13013  00583A  6BD6               	clrf	214,b	;volatile
 13014                           
 13015                           ; BSR set to: 61
 13016                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13017  00583C  6BD8               	clrf	216,b	;volatile
 13018                           
 13019                           ; BSR set to: 61
 13020                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13021  00583E  0EB0               	movlw	176
 13022  005840  6FDA               	movwf	218,b	;volatile
 13023                           
 13024                           ; BSR set to: 61
 13025                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13026  005842  0E80               	movlw	128
 13027  005844  6FDB               	movwf	219,b	;volatile
 13028                           
 13029                           ; BSR set to: 61
 13030                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13031  005846  6BDC               	clrf	220,b	;volatile
 13032                           
 13033                           ; BSR set to: 61
 13034                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13035  005848  0E82               	movlw	130
 13036  00584A  6FDD               	movwf	221,b	;volatile
 13037                           
 13038                           ; BSR set to: 61
 13039                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13040  00584C  0E06               	movlw	6
 13041  00584E  6FDE               	movwf	222,b	;volatile
 13042                           
 13043                           ; BSR set to: 61
 13044                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13045  005850  6BDF               	clrf	223,b	;volatile
 13046                           
 13047                           ; BSR set to: 61
 13048                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13049  005852  6BE0               	clrf	224,b	;volatile
 13050                           
 13051                           ; BSR set to: 61
 13052                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13053  005854  6BE1               	clrf	225,b	;volatile
 13054                           
 13055                           ; BSR set to: 61
 13056                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13057  005856  6BE2               	clrf	226,b	;volatile
 13058                           
 13059                           ; BSR set to: 61
 13060                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13061  005858  6A32               	clrf	_uart2TxHead,c	;volatile
 13062                           
 13063                           ; BSR set to: 61
 13064                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13065  00585A  6A31               	clrf	_uart2TxTail,c	;volatile
 13066                           
 13067                           ; BSR set to: 61
 13068                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13069  00585C  0E40               	movlw	64
 13070  00585E  6E30               	movwf	_uart2TxBufferRemaining,c	;volatile
 13071                           
 13072                           ; BSR set to: 61
 13073                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13074  005860  6A2F               	clrf	_uart2RxHead,c	;volatile
 13075                           
 13076                           ; BSR set to: 61
 13077                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13078  005862  6A2E               	clrf	_uart2RxTail,c	;volatile
 13079                           
 13080                           ; BSR set to: 61
 13081                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13082  005864  6A2D               	clrf	_uart2RxCount,c	;volatile
 13083                           
 13084                           ; BSR set to: 61
 13085                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13086  005866  0139               	movlb	57	; () banked
 13087  005868  8596               	bsf	150,2,b	;volatile
 13088                           
 13089                           ; BSR set to: 57
 13090                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13091  00586A  0012               	return		;funcret
 13092  00586C                     __end_of_UART2_Initialize:
 13093                           	opt callstack 0
 13094                           
 13095 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13096 ;; Defined at:
 13097 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13100 ;;		 -> UART2_Transmit_ISR(1), 
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  1  [STACK] void 
 13105 ;; Registers used:
 13106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13107 ;; Tracked objects:
 13108 ;;		On entry : 3F/39
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;Total ram usage:        0 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    3
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_UART2_Initialize
 13123 ;; This function uses a reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text57
 13127  005ED0                     __ptext57:
 13128                           	opt callstack 0
 13129  005ED0                     _UART2_SetTxInterruptHandler:
 13130                           	opt callstack 25
 13131                           
 13132                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13133                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13134                           
 13135                           ; BSR set to: 57
 13136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13137                           ;incstack = 0
 13138  005ED0  50E1               	movf	fsr1l,w,c
 13139  005ED2  0FFD               	addlw	-3
 13140  005ED4  6ED9               	movwf	fsr2l,c
 13141  005ED6  50E2               	movf	fsr1h,w,c
 13142  005ED8  6EDA               	movwf	fsr2h,c
 13143  005EDA  0EFF               	movlw	255
 13144  005EDC  22DA               	addwfc	fsr2h,f,c
 13145  005EDE  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13146  005EE4  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13147  005EEA  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13148                           
 13149                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13150  005EF0  52E5               	movf	postdec1,f,c
 13151  005EF2  52E5               	movf	postdec1,f,c
 13152  005EF4  52E5               	movf	postdec1,f,c
 13153  005EF6  0012               	return		;funcret
 13154  005EF8                     __end_of_UART2_SetTxInterruptHandler:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13158 ;; Defined at:
 13159 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13162 ;;		 -> UART2_Receive_ISR(1), 
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1  [STACK] void 
 13167 ;; Registers used:
 13168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13169 ;; Tracked objects:
 13170 ;;		On entry : 3F/39
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    3
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_UART2_Initialize
 13185 ;; This function uses a reentrant model
 13186 ;;
 13187                           
 13188                           	psect	text58
 13189  005EF8                     __ptext58:
 13190                           	opt callstack 0
 13191  005EF8                     _UART2_SetRxInterruptHandler:
 13192                           	opt callstack 25
 13193                           
 13194                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13195                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13196                           
 13197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13198                           ;incstack = 0
 13199  005EF8  50E1               	movf	fsr1l,w,c
 13200  005EFA  0FFD               	addlw	-3
 13201  005EFC  6ED9               	movwf	fsr2l,c
 13202  005EFE  50E2               	movf	fsr1h,w,c
 13203  005F00  6EDA               	movwf	fsr2h,c
 13204  005F02  0EFF               	movlw	255
 13205  005F04  22DA               	addwfc	fsr2h,f,c
 13206  005F06  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13207  005F0C  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13208  005F12  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13209                           
 13210                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13211  005F18  52E5               	movf	postdec1,f,c
 13212  005F1A  52E5               	movf	postdec1,f,c
 13213  005F1C  52E5               	movf	postdec1,f,c
 13214  005F1E  0012               	return		;funcret
 13215  005F20                     __end_of_UART2_SetRxInterruptHandler:
 13216                           	opt callstack 0
 13217                           
 13218 ;; *************** function _UART1_Initialize *****************
 13219 ;; Defined at:
 13220 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;		None
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1  [STACK] void 
 13227 ;; Registers used:
 13228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13229 ;; Tracked objects:
 13230 ;;		On entry : 3F/3C
 13231 ;;		On exit  : 3F/39
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13238 ;;Total ram usage:        0 bytes
 13239 ;; Hardware stack levels used:    1
 13240 ;; Hardware stack levels required when called:    4
 13241 ;; This function calls:
 13242 ;;		_UART1_SetRxInterruptHandler
 13243 ;;		_UART1_SetTxInterruptHandler
 13244 ;; This function is called by:
 13245 ;;		_SYSTEM_Initialize
 13246 ;; This function uses a reentrant model
 13247 ;;
 13248                           
 13249                           	psect	text59
 13250  0056E6                     __ptext59:
 13251                           	opt callstack 0
 13252  0056E6                     _UART1_Initialize:
 13253                           	opt callstack 25
 13254                           
 13255                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13256                           
 13257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13258                           ;incstack = 0
 13259  0056E6  0139               	movlb	57	; () banked
 13260  0056E8  9793               	bcf	147,3,b	;volatile
 13261                           
 13262                           ; BSR set to: 57
 13263                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13264  0056EA  0E1A               	movlw	low _UART1_Receive_ISR
 13265  0056EC  6EE6               	movwf	postinc1,c
 13266  0056EE  0E62               	movlw	high _UART1_Receive_ISR
 13267  0056F0  6EE6               	movwf	postinc1,c
 13268  0056F2  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13269  0056F4  6EE6               	movwf	postinc1,c
 13270  0056F6  ECA4  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13271                           
 13272                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13273  0056FA  0139               	movlb	57	; () banked
 13274  0056FC  9993               	bcf	147,4,b	;volatile
 13275                           
 13276                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13277  0056FE  0EAC               	movlw	low _UART1_Transmit_ISR
 13278  005700  6EE6               	movwf	postinc1,c
 13279  005702  0E5D               	movlw	high _UART1_Transmit_ISR
 13280  005704  6EE6               	movwf	postinc1,c
 13281  005706  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13282  005708  6EE6               	movwf	postinc1,c
 13283  00570A  EC90  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13284                           
 13285                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13286  00570E  013D               	movlb	61	; () banked
 13287  005710  6BEC               	clrf	236,b	;volatile
 13288                           
 13289                           ; BSR set to: 61
 13290                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13291  005712  6BED               	clrf	237,b	;volatile
 13292                           
 13293                           ; BSR set to: 61
 13294                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13295  005714  6BEE               	clrf	238,b	;volatile
 13296                           
 13297                           ; BSR set to: 61
 13298                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13299  005716  6BEF               	clrf	239,b	;volatile
 13300                           
 13301                           ; BSR set to: 61
 13302                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13303  005718  6BF0               	clrf	240,b	;volatile
 13304                           
 13305                           ; BSR set to: 61
 13306                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13307  00571A  6BF1               	clrf	241,b	;volatile
 13308                           
 13309                           ; BSR set to: 61
 13310                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13311  00571C  0EB0               	movlw	176
 13312  00571E  6FF2               	movwf	242,b	;volatile
 13313                           
 13314                           ; BSR set to: 61
 13315                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13316  005720  0E80               	movlw	128
 13317  005722  6FF3               	movwf	243,b	;volatile
 13318                           
 13319                           ; BSR set to: 61
 13320                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13321  005724  6BF4               	clrf	244,b	;volatile
 13322                           
 13323                           ; BSR set to: 61
 13324                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13325  005726  0E82               	movlw	130
 13326  005728  6FF5               	movwf	245,b	;volatile
 13327                           
 13328                           ; BSR set to: 61
 13329                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13330  00572A  0E06               	movlw	6
 13331  00572C  6FF6               	movwf	246,b	;volatile
 13332                           
 13333                           ; BSR set to: 61
 13334                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13335  00572E  6BF7               	clrf	247,b	;volatile
 13336                           
 13337                           ; BSR set to: 61
 13338                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13339  005730  6BF8               	clrf	248,b	;volatile
 13340                           
 13341                           ; BSR set to: 61
 13342                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13343  005732  6BF9               	clrf	249,b	;volatile
 13344                           
 13345                           ; BSR set to: 61
 13346                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13347  005734  6BFA               	clrf	250,b	;volatile
 13348                           
 13349                           ; BSR set to: 61
 13350                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13351  005736  6A38               	clrf	_uart1TxHead,c	;volatile
 13352                           
 13353                           ; BSR set to: 61
 13354                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13355  005738  6A37               	clrf	_uart1TxTail,c	;volatile
 13356                           
 13357                           ; BSR set to: 61
 13358                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13359  00573A  0E40               	movlw	64
 13360  00573C  6E36               	movwf	_uart1TxBufferRemaining,c	;volatile
 13361                           
 13362                           ; BSR set to: 61
 13363                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13364  00573E  6A35               	clrf	_uart1RxHead,c	;volatile
 13365                           
 13366                           ; BSR set to: 61
 13367                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13368  005740  6A34               	clrf	_uart1RxTail,c	;volatile
 13369                           
 13370                           ; BSR set to: 61
 13371                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13372  005742  6A33               	clrf	_uart1RxCount,c	;volatile
 13373                           
 13374                           ; BSR set to: 61
 13375                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13376  005744  0139               	movlb	57	; () banked
 13377  005746  8793               	bsf	147,3,b	;volatile
 13378                           
 13379                           ; BSR set to: 57
 13380                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13381  005748  0012               	return		;funcret
 13382  00574A                     __end_of_UART1_Initialize:
 13383                           	opt callstack 0
 13384                           
 13385 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13386 ;; Defined at:
 13387 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13388 ;; Parameters:    Size  Location     Type
 13389 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13390 ;;		 -> UART1_Transmit_ISR(1), 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1  [STACK] void 
 13395 ;; Registers used:
 13396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13397 ;; Tracked objects:
 13398 ;;		On entry : 3F/39
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;Total ram usage:        0 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:    3
 13409 ;; This function calls:
 13410 ;;		Nothing
 13411 ;; This function is called by:
 13412 ;;		_UART1_Initialize
 13413 ;; This function uses a reentrant model
 13414 ;;
 13415                           
 13416                           	psect	text60
 13417  005F20                     __ptext60:
 13418                           	opt callstack 0
 13419  005F20                     _UART1_SetTxInterruptHandler:
 13420                           	opt callstack 25
 13421                           
 13422                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13423                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13424                           
 13425                           ; BSR set to: 57
 13426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13427                           ;incstack = 0
 13428  005F20  50E1               	movf	fsr1l,w,c
 13429  005F22  0FFD               	addlw	-3
 13430  005F24  6ED9               	movwf	fsr2l,c
 13431  005F26  50E2               	movf	fsr1h,w,c
 13432  005F28  6EDA               	movwf	fsr2h,c
 13433  005F2A  0EFF               	movlw	255
 13434  005F2C  22DA               	addwfc	fsr2h,f,c
 13435  005F2E  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 13436  005F34  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 13437  005F3A  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 13438                           
 13439                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13440  005F40  52E5               	movf	postdec1,f,c
 13441  005F42  52E5               	movf	postdec1,f,c
 13442  005F44  52E5               	movf	postdec1,f,c
 13443  005F46  0012               	return		;funcret
 13444  005F48                     __end_of_UART1_SetTxInterruptHandler:
 13445                           	opt callstack 0
 13446                           
 13447 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13448 ;; Defined at:
 13449 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13452 ;;		 -> UART1_Receive_ISR(1), 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1  [STACK] void 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13459 ;; Tracked objects:
 13460 ;;		On entry : 3F/39
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;Total ram usage:        0 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    3
 13471 ;; This function calls:
 13472 ;;		Nothing
 13473 ;; This function is called by:
 13474 ;;		_UART1_Initialize
 13475 ;; This function uses a reentrant model
 13476 ;;
 13477                           
 13478                           	psect	text61
 13479  005F48                     __ptext61:
 13480                           	opt callstack 0
 13481  005F48                     _UART1_SetRxInterruptHandler:
 13482                           	opt callstack 25
 13483                           
 13484                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13485                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13486                           
 13487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13488                           ;incstack = 0
 13489  005F48  50E1               	movf	fsr1l,w,c
 13490  005F4A  0FFD               	addlw	-3
 13491  005F4C  6ED9               	movwf	fsr2l,c
 13492  005F4E  50E2               	movf	fsr1h,w,c
 13493  005F50  6EDA               	movwf	fsr2h,c
 13494  005F52  0EFF               	movlw	255
 13495  005F54  22DA               	addwfc	fsr2h,f,c
 13496  005F56  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 13497  005F5C  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 13498  005F62  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 13499                           
 13500                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13501  005F68  52E5               	movf	postdec1,f,c
 13502  005F6A  52E5               	movf	postdec1,f,c
 13503  005F6C  52E5               	movf	postdec1,f,c
 13504  005F6E  0012               	return		;funcret
 13505  005F70                     __end_of_UART1_SetRxInterruptHandler:
 13506                           	opt callstack 0
 13507                           
 13508 ;; *************** function _TMR6_Initialize *****************
 13509 ;; Defined at:
 13510 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;		None
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1  [STACK] void 
 13517 ;; Registers used:
 13518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13519 ;; Tracked objects:
 13520 ;;		On entry : 3F/39
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;Total ram usage:        0 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    4
 13531 ;; This function calls:
 13532 ;;		_TMR6_SetInterruptHandler
 13533 ;; This function is called by:
 13534 ;;		_SYSTEM_Initialize
 13535 ;; This function uses a reentrant model
 13536 ;;
 13537                           
 13538                           	psect	text62
 13539  005F70                     __ptext62:
 13540                           	opt callstack 0
 13541  005F70                     _TMR6_Initialize:
 13542                           	opt callstack 25
 13543                           
 13544                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13545                           
 13546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13547                           ;incstack = 0
 13548  005F70  0E01               	movlw	1
 13549  005F72  6E96               	movwf	16278,c	;volatile
 13550                           
 13551                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13552  005F74  6A95               	clrf	16277,c	;volatile
 13553                           
 13554                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13555  005F76  6A97               	clrf	16279,c	;volatile
 13556                           
 13557                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13558  005F78  0E03               	movlw	3
 13559  005F7A  6E93               	movwf	16275,c	;volatile
 13560                           
 13561                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13562  005F7C  6A92               	clrf	16274,c	;volatile
 13563                           
 13564                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13565  005F7E  0139               	movlb	57	; () banked
 13566  005F80  91A9               	bcf	169,0,b	;volatile
 13567                           
 13568                           ; BSR set to: 57
 13569                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13570  005F82  8199               	bsf	153,0,b	;volatile
 13571                           
 13572                           ; BSR set to: 57
 13573                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13574  005F84  0E88               	movlw	low _TMR6_DefaultInterruptHandler
 13575  005F86  6EE6               	movwf	postinc1,c
 13576  005F88  0E5A               	movlw	high _TMR6_DefaultInterruptHandler
 13577  005F8A  6EE6               	movwf	postinc1,c
 13578  005F8C  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13579  005F8E  6EE6               	movwf	postinc1,c
 13580  005F90  ECCC  F02F         	call	_TMR6_SetInterruptHandler	;wreg free
 13581                           
 13582                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13583  005F94  6894               	setf	16276,c	;volatile
 13584                           
 13585                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13586  005F96  0012               	return		;funcret
 13587  005F98                     __end_of_TMR6_Initialize:
 13588                           	opt callstack 0
 13589                           
 13590 ;; *************** function _TMR6_SetInterruptHandler *****************
 13591 ;; Defined at:
 13592 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13593 ;; Parameters:    Size  Location     Type
 13594 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13595 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1  [STACK] void 
 13600 ;; Registers used:
 13601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13602 ;; Tracked objects:
 13603 ;;		On entry : 3F/39
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:    3
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_TMR6_Initialize
 13618 ;; This function uses a reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text63
 13622  005F98                     __ptext63:
 13623                           	opt callstack 0
 13624  005F98                     _TMR6_SetInterruptHandler:
 13625                           	opt callstack 25
 13626                           
 13627                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13628                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13629                           
 13630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13631                           ;incstack = 0
 13632  005F98  50E1               	movf	fsr1l,w,c
 13633  005F9A  0FFD               	addlw	-3
 13634  005F9C  6ED9               	movwf	fsr2l,c
 13635  005F9E  50E2               	movf	fsr1h,w,c
 13636  005FA0  6EDA               	movwf	fsr2h,c
 13637  005FA2  0EFF               	movlw	255
 13638  005FA4  22DA               	addwfc	fsr2h,f,c
 13639  005FA6  006F FF78  F0F5    	movff	postinc2,_TMR6_InterruptHandler
 13640  005FAC  006F FF78  F0F6    	movff	postinc2,_TMR6_InterruptHandler+1
 13641  005FB2  006F FF74  F0F7    	movff	postdec2,_TMR6_InterruptHandler+2
 13642                           
 13643                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13644  005FB8  52E5               	movf	postdec1,f,c
 13645  005FBA  52E5               	movf	postdec1,f,c
 13646  005FBC  52E5               	movf	postdec1,f,c
 13647  005FBE  0012               	return		;funcret
 13648  005FC0                     __end_of_TMR6_SetInterruptHandler:
 13649                           	opt callstack 0
 13650                           
 13651 ;; *************** function _TMR5_Initialize *****************
 13652 ;; Defined at:
 13653 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;		None
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;		None
 13658 ;; Return value:  Size  Location     Type
 13659 ;;                  1  [STACK] void 
 13660 ;; Registers used:
 13661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13662 ;; Tracked objects:
 13663 ;;		On entry : 3F/3C
 13664 ;;		On exit  : 0/0
 13665 ;;		Unchanged: 0/0
 13666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13671 ;;Total ram usage:        0 bytes
 13672 ;; Hardware stack levels used:    1
 13673 ;; Hardware stack levels required when called:    4
 13674 ;; This function calls:
 13675 ;;		_TMR5_SetInterruptHandler
 13676 ;; This function is called by:
 13677 ;;		_SYSTEM_Initialize
 13678 ;; This function uses a reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text64
 13682  005A42                     __ptext64:
 13683                           	opt callstack 0
 13684  005A42                     _TMR5_Initialize:
 13685                           	opt callstack 25
 13686                           
 13687                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 13688                           
 13689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13690                           ;incstack = 0
 13691  005A42  6A9B               	clrf	16283,c	;volatile
 13692                           
 13693                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 13694  005A44  6A9C               	clrf	16284,c	;volatile
 13695                           
 13696                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 13697  005A46  0E01               	movlw	1
 13698  005A48  6E9D               	movwf	16285,c	;volatile
 13699                           
 13700                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 13701  005A4A  0E63               	movlw	99
 13702  005A4C  6E99               	movwf	16281,c	;volatile
 13703                           
 13704                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 13705  005A4E  0EC0               	movlw	192
 13706  005A50  6E98               	movwf	16280,c	;volatile
 13707                           
 13708                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13709  005A52  5098               	movf	16280,w,c	;volatile
 13710  005A54  006F FE64  F039    	movff	16281,btemp	;volatile
 13711  005A5A  6A3A               	clrf	btemp+1,c
 13712  005A5C  0060  F0E4  F03A   	movff	btemp,btemp+1
 13713  005A62  6A39               	clrf	btemp,c
 13714  005A64  1039               	iorwf	btemp,w,c
 13715  005A66  6E25               	movwf	_timer5ReloadVal,c	;volatile
 13716  005A68  503A               	movf	btemp+1,w,c
 13717  005A6A  6E26               	movwf	_timer5ReloadVal+1,c	;volatile
 13718                           
 13719                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 13720  005A6C  0139               	movlb	57	; () banked
 13721  005A6E  9DA8               	bcf	168,6,b	;volatile
 13722                           
 13723                           ; BSR set to: 57
 13724                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 13725  005A70  8D98               	bsf	152,6,b	;volatile
 13726                           
 13727                           ; BSR set to: 57
 13728                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13729  005A72  0E02               	movlw	low _TMR5_DefaultInterruptHandler
 13730  005A74  6EE6               	movwf	postinc1,c
 13731  005A76  0E63               	movlw	high _TMR5_DefaultInterruptHandler
 13732  005A78  6EE6               	movwf	postinc1,c
 13733  005A7A  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13734  005A7C  6EE6               	movwf	postinc1,c
 13735  005A7E  ECE0  F02F         	call	_TMR5_SetInterruptHandler	;wreg free
 13736                           
 13737                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 13738  005A82  0E31               	movlw	49
 13739  005A84  6E9A               	movwf	16282,c	;volatile
 13740                           
 13741                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13742  005A86  0012               	return		;funcret
 13743  005A88                     __end_of_TMR5_Initialize:
 13744                           	opt callstack 0
 13745                           
 13746 ;; *************** function _TMR5_SetInterruptHandler *****************
 13747 ;; Defined at:
 13748 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13751 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;		None
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1  [STACK] void 
 13756 ;; Registers used:
 13757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13758 ;; Tracked objects:
 13759 ;;		On entry : 3F/39
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;Total ram usage:        0 bytes
 13768 ;; Hardware stack levels used:    1
 13769 ;; Hardware stack levels required when called:    3
 13770 ;; This function calls:
 13771 ;;		Nothing
 13772 ;; This function is called by:
 13773 ;;		_TMR5_Initialize
 13774 ;; This function uses a reentrant model
 13775 ;;
 13776                           
 13777                           	psect	text65
 13778  005FC0                     __ptext65:
 13779                           	opt callstack 0
 13780  005FC0                     _TMR5_SetInterruptHandler:
 13781                           	opt callstack 25
 13782                           
 13783                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13784                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13785                           
 13786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13787                           ;incstack = 0
 13788  005FC0  50E1               	movf	fsr1l,w,c
 13789  005FC2  0FFD               	addlw	-3
 13790  005FC4  6ED9               	movwf	fsr2l,c
 13791  005FC6  50E2               	movf	fsr1h,w,c
 13792  005FC8  6EDA               	movwf	fsr2h,c
 13793  005FCA  0EFF               	movlw	255
 13794  005FCC  22DA               	addwfc	fsr2h,f,c
 13795  005FCE  006F FF78  F0F2    	movff	postinc2,_TMR5_InterruptHandler
 13796  005FD4  006F FF78  F0F3    	movff	postinc2,_TMR5_InterruptHandler+1
 13797  005FDA  006F FF74  F0F4    	movff	postdec2,_TMR5_InterruptHandler+2
 13798                           
 13799                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13800  005FE0  52E5               	movf	postdec1,f,c
 13801  005FE2  52E5               	movf	postdec1,f,c
 13802  005FE4  52E5               	movf	postdec1,f,c
 13803  005FE6  0012               	return		;funcret
 13804  005FE8                     __end_of_TMR5_SetInterruptHandler:
 13805                           	opt callstack 0
 13806                           
 13807 ;; *************** function _SPI1_Initialize *****************
 13808 ;; Defined at:
 13809 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;		None
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1  [STACK] void 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2
 13818 ;; Tracked objects:
 13819 ;;		On entry : 3F/39
 13820 ;;		On exit  : 3F/3D
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    3
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_SYSTEM_Initialize
 13834 ;; This function uses a reentrant model
 13835 ;;
 13836                           
 13837                           	psect	text66
 13838  00631C                     __ptext66:
 13839                           	opt callstack 0
 13840  00631C                     _SPI1_Initialize:
 13841                           	opt callstack 26
 13842                           
 13843                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13844                           
 13845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13846                           ;incstack = 0
 13847  00631C  0E40               	movlw	64
 13848  00631E  013D               	movlb	61	; () banked
 13849  006320  6F15               	movwf	21,b	;volatile
 13850                           
 13851                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13852  006322  0E03               	movlw	3
 13853  006324  6F16               	movwf	22,b	;volatile
 13854                           
 13855                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13856  006326  0E4F               	movlw	79
 13857  006328  6F19               	movwf	25,b	;volatile
 13858                           
 13859                           ; BSR set to: 61
 13860                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13861  00632A  6B1C               	clrf	28,b	;volatile
 13862                           
 13863                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13864  00632C  0E83               	movlw	131
 13865  00632E  6F14               	movwf	20,b	;volatile
 13866                           
 13867                           ; BSR set to: 61
 13868                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13869  006330  0012               	return		;funcret
 13870  006332                     __end_of_SPI1_Initialize:
 13871                           	opt callstack 0
 13872                           
 13873 ;; *************** function _PMD_Initialize *****************
 13874 ;; Defined at:
 13875 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;		None
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;		None
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  1  [STACK] void 
 13882 ;; Registers used:
 13883 ;;		None
 13884 ;; Tracked objects:
 13885 ;;		On entry : 3F/39
 13886 ;;		On exit  : 3F/39
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;Total ram usage:        0 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:    3
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_SYSTEM_Initialize
 13900 ;; This function uses a reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text67
 13904  006348                     __ptext67:
 13905                           	opt callstack 0
 13906  006348                     _PMD_Initialize:
 13907                           	opt callstack 26
 13908                           
 13909                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13910                           
 13911                           ; BSR set to: 61
 13912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13913                           ;incstack = 0
 13914  006348  0139               	movlb	57	; () banked
 13915  00634A  6BC0               	clrf	192,b	;volatile
 13916                           
 13917                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13918  00634C  6BC1               	clrf	193,b	;volatile
 13919                           
 13920                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13921  00634E  6BC2               	clrf	194,b	;volatile
 13922                           
 13923                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13924  006350  6BC3               	clrf	195,b	;volatile
 13925                           
 13926                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13927  006352  6BC4               	clrf	196,b	;volatile
 13928                           
 13929                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13930  006354  6BC5               	clrf	197,b	;volatile
 13931                           
 13932                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13933  006356  6BC6               	clrf	198,b	;volatile
 13934                           
 13935                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13936  006358  6BC7               	clrf	199,b	;volatile
 13937                           
 13938                           ; BSR set to: 57
 13939                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13940  00635A  0012               	return		;funcret
 13941  00635C                     __end_of_PMD_Initialize:
 13942                           	opt callstack 0
 13943                           
 13944 ;; *************** function _PIN_MANAGER_Initialize *****************
 13945 ;; Defined at:
 13946 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;		None
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;		None
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  1  [STACK] void 
 13953 ;; Registers used:
 13954 ;;		wreg, status,2
 13955 ;; Tracked objects:
 13956 ;;		On entry : 3F/39
 13957 ;;		On exit  : 3F/3A
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13964 ;;Total ram usage:        0 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; Hardware stack levels required when called:    3
 13967 ;; This function calls:
 13968 ;;		Nothing
 13969 ;; This function is called by:
 13970 ;;		_SYSTEM_Initialize
 13971 ;; This function uses a reentrant model
 13972 ;;
 13973                           
 13974                           	psect	text68
 13975  00532E                     __ptext68:
 13976                           	opt callstack 0
 13977  00532E                     _PIN_MANAGER_Initialize:
 13978                           	opt callstack 26
 13979                           
 13980                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13981                           
 13982                           ; BSR set to: 57
 13983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13984                           ;incstack = 0
 13985  00532E  0E07               	movlw	7
 13986  005330  6EBE               	movwf	16318,c	;volatile
 13987                           
 13988                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13989  005332  6ABD               	clrf	16317,c	;volatile
 13990                           
 13991                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13992  005334  6ABA               	clrf	16314,c	;volatile
 13993                           
 13994                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13995  005336  6ABF               	clrf	16319,c	;volatile
 13996                           
 13997                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13998  005338  6ABB               	clrf	16315,c	;volatile
 13999                           
 14000                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14001  00533A  0E06               	movlw	6
 14002  00533C  6EBC               	movwf	16316,c	;volatile
 14003                           
 14004                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14005  00533E  6AC6               	clrf	16326,c	;volatile
 14006                           
 14007                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14008  005340  68C7               	setf	16327,c	;volatile
 14009                           
 14010                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14011  005342  0E8F               	movlw	143
 14012  005344  6EC2               	movwf	16322,c	;volatile
 14013                           
 14014                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14015  005346  0EBF               	movlw	191
 14016  005348  6EC3               	movwf	16323,c	;volatile
 14017                           
 14018                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14019  00534A  0E91               	movlw	145
 14020  00534C  6EC4               	movwf	16324,c	;volatile
 14021                           
 14022                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14023  00534E  0E0C               	movlw	12
 14024  005350  6EC5               	movwf	16325,c	;volatile
 14025                           
 14026                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14027  005352  013A               	movlb	58	; () banked
 14028  005354  6B70               	clrf	112,b	;volatile
 14029                           
 14030                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14031  005356  0E01               	movlw	1
 14032  005358  6F60               	movwf	96,b	;volatile
 14033                           
 14034                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14035  00535A  0E38               	movlw	56
 14036  00535C  6F50               	movwf	80,b	;volatile
 14037                           
 14038                           ; BSR set to: 58
 14039                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14040  00535E  6B80               	clrf	128,b	;volatile
 14041                           
 14042                           ; BSR set to: 58
 14043                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14044  005360  6990               	setf	144,b	;volatile
 14045                           
 14046                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14047  005362  0E8F               	movlw	143
 14048  005364  6F40               	movwf	64,b	;volatile
 14049                           
 14050                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14051  005366  0EFC               	movlw	252
 14052  005368  6F71               	movwf	113,b	;volatile
 14053                           
 14054                           ; BSR set to: 58
 14055                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14056  00536A  6B91               	clrf	145,b	;volatile
 14057                           
 14058                           ; BSR set to: 58
 14059                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14060  00536C  6B81               	clrf	129,b	;volatile
 14061                           
 14062                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14063  00536E  0E87               	movlw	135
 14064  005370  6F51               	movwf	81,b	;volatile
 14065                           
 14066                           ; BSR set to: 58
 14067                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14068  005372  6B41               	clrf	65,b	;volatile
 14069                           
 14070                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14071  005374  0E90               	movlw	144
 14072  005376  6F61               	movwf	97,b	;volatile
 14073                           
 14074                           ; BSR set to: 58
 14075                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14076  005378  6B82               	clrf	130,b	;volatile
 14077                           
 14078                           ; BSR set to: 58
 14079                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14080  00537A  6B92               	clrf	146,b	;volatile
 14081                           
 14082                           ; BSR set to: 58
 14083                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14084  00537C  6B42               	clrf	66,b	;volatile
 14085                           
 14086                           ; BSR set to: 58
 14087                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14088  00537E  6B52               	clrf	82,b	;volatile
 14089                           
 14090                           ; BSR set to: 58
 14091                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14092  005380  6B62               	clrf	98,b	;volatile
 14093                           
 14094                           ; BSR set to: 58
 14095                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14096  005382  6B72               	clrf	114,b	;volatile
 14097                           
 14098                           ; BSR set to: 58
 14099                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14100  005384  6943               	setf	67,b	;volatile
 14101                           
 14102                           ; BSR set to: 58
 14103                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14104  005386  6953               	setf	83,b	;volatile
 14105                           
 14106                           ; BSR set to: 58
 14107                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14108  005388  6963               	setf	99,b	;volatile
 14109                           
 14110                           ; BSR set to: 58
 14111                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14112  00538A  6973               	setf	115,b	;volatile
 14113                           
 14114                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14115  00538C  0E07               	movlw	7
 14116  00538E  6F83               	movwf	131,b	;volatile
 14117                           
 14118                           ; BSR set to: 58
 14119                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14120  005390  6993               	setf	147,b	;volatile
 14121                           
 14122                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14123  005392  0E0F               	movlw	15
 14124  005394  6FE8               	movwf	232,b	;volatile
 14125                           
 14126                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14127  005396  0E16               	movlw	22
 14128  005398  6F0E               	movwf	14,b	;volatile
 14129                           
 14130                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14131  00539A  0E1E               	movlw	30
 14132  00539C  6F13               	movwf	19,b	;volatile
 14133                           
 14134                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14135  00539E  0E08               	movlw	8
 14136  0053A0  6FC0               	movwf	192,b	;volatile
 14137                           
 14138                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14139  0053A2  0E0A               	movlw	10
 14140  0053A4  6FC2               	movwf	194,b	;volatile
 14141                           
 14142                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14143  0053A6  0E09               	movlw	9
 14144  0053A8  6FC1               	movwf	193,b	;volatile
 14145                           
 14146                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14147  0053AA  0E17               	movlw	23
 14148  0053AC  6FE5               	movwf	229,b	;volatile
 14149                           
 14150                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14151  0053AE  0E13               	movlw	19
 14152  0053B0  6FDE               	movwf	222,b	;volatile
 14153                           
 14154                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14155  0053B2  0E01               	movlw	1
 14156  0053B4  6F04               	movwf	4,b	;volatile
 14157                           
 14158                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14159  0053B6  0E26               	movlw	38
 14160  0053B8  6F05               	movwf	5,b	;volatile
 14161                           
 14162                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14163  0053BA  0E28               	movlw	40
 14164  0053BC  6F06               	movwf	6,b	;volatile
 14165                           
 14166                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14167  0053BE  0E1F               	movlw	31
 14168  0053C0  6F15               	movwf	21,b	;volatile
 14169                           
 14170                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14171  0053C2  0E13               	movlw	19
 14172  0053C4  6F16               	movwf	22,b	;volatile
 14173                           
 14174                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14175  0053C6  0E14               	movlw	20
 14176  0053C8  6FDF               	movwf	223,b	;volatile
 14177                           
 14178                           ; BSR set to: 58
 14179                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14180  0053CA  0012               	return		;funcret
 14181  0053CC                     __end_of_PIN_MANAGER_Initialize:
 14182                           	opt callstack 0
 14183                           
 14184 ;; *************** function _OSCILLATOR_Initialize *****************
 14185 ;; Defined at:
 14186 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;		None
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;		None
 14191 ;; Return value:  Size  Location     Type
 14192 ;;                  1  [STACK] void 
 14193 ;; Registers used:
 14194 ;;		wreg, status,2
 14195 ;; Tracked objects:
 14196 ;;		On entry : 3F/3A
 14197 ;;		On exit  : 3F/39
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;Total ram usage:        0 bytes
 14205 ;; Hardware stack levels used:    1
 14206 ;; Hardware stack levels required when called:    3
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_SYSTEM_Initialize
 14211 ;; This function uses a reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text69
 14215  006332                     __ptext69:
 14216                           	opt callstack 0
 14217  006332                     _OSCILLATOR_Initialize:
 14218                           	opt callstack 26
 14219                           
 14220                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14221                           
 14222                           ; BSR set to: 58
 14223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14224                           ;incstack = 0
 14225  006332  0E20               	movlw	32
 14226  006334  0139               	movlb	57	; () banked
 14227  006336  6FD9               	movwf	217,b	;volatile
 14228                           
 14229                           ; BSR set to: 57
 14230                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14231  006338  6BDB               	clrf	219,b	;volatile
 14232                           
 14233                           ; BSR set to: 57
 14234                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14235  00633A  6BDD               	clrf	221,b	;volatile
 14236                           
 14237                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14238  00633C  0E02               	movlw	2
 14239  00633E  6FDF               	movwf	223,b	;volatile
 14240                           
 14241                           ; BSR set to: 57
 14242                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14243  006340  6BDE               	clrf	222,b	;volatile
 14244  006342                     l194:
 14245                           
 14246                           ; BSR set to: 57
 14247                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14248  006342  B1DC               	btfsc	220,0,b	;volatile
 14249  006344  0012               	return	
 14250  006346  D7FD               	goto	l194
 14251  006348                     __end_of_OSCILLATOR_Initialize:
 14252                           	opt callstack 0
 14253                           
 14254 ;; *************** function _NCO1_Initialize *****************
 14255 ;; Defined at:
 14256 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;		None
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1  [STACK] void 
 14263 ;; Registers used:
 14264 ;;		wreg, status,2
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/39
 14267 ;;		On exit  : 3F/3F
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14274 ;;Total ram usage:        0 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    3
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_SYSTEM_Initialize
 14281 ;; This function uses a reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text70
 14285  006294                     __ptext70:
 14286                           	opt callstack 0
 14287  006294                     _NCO1_Initialize:
 14288                           	opt callstack 26
 14289                           
 14290                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14291                           
 14292                           ; BSR set to: 57
 14293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14294                           ;incstack = 0
 14295  006294  013F               	movlb	63	; () banked
 14296  006296  6B3E               	clrf	62,b	;volatile
 14297                           
 14298                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14299  006298  6B3F               	clrf	63,b	;volatile
 14300                           
 14301                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14302  00629A  6B3A               	clrf	58,b	;volatile
 14303                           
 14304                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14305  00629C  6B39               	clrf	57,b	;volatile
 14306                           
 14307                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14308  00629E  6B38               	clrf	56,b	;volatile
 14309                           
 14310                           ; BSR set to: 63
 14311                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14312  0062A0  0E06               	movlw	6
 14313  0062A2  6F3D               	movwf	61,b	;volatile
 14314                           
 14315                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14316  0062A4  0EC7               	movlw	199
 14317  0062A6  6F3C               	movwf	60,b	;volatile
 14318                           
 14319                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14320  0062A8  0EAE               	movlw	174
 14321  0062AA  6F3B               	movwf	59,b	;volatile
 14322                           
 14323                           ; BSR set to: 63
 14324                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14325  0062AC  8F3E               	bsf	62,7,b	;volatile
 14326                           
 14327                           ; BSR set to: 63
 14328                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14329  0062AE  0012               	return		;funcret
 14330  0062B0                     __end_of_NCO1_Initialize:
 14331                           	opt callstack 0
 14332                           
 14333 ;; *************** function _INTERRUPT_Initialize *****************
 14334 ;; Defined at:
 14335 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;		None
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;  state           1  [STACK] _Bool 
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  1  [STACK] void 
 14342 ;; Registers used:
 14343 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 3F/39
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;Total ram usage:        0 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; Hardware stack levels required when called:    3
 14356 ;; This function calls:
 14357 ;;		Nothing
 14358 ;; This function is called by:
 14359 ;;		_SYSTEM_Initialize
 14360 ;; This function uses a reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text71
 14364  005680                     __ptext71:
 14365                           	opt callstack 0
 14366  005680                     _INTERRUPT_Initialize:
 14367                           	opt callstack 0
 14368                           
 14369                           ; BSR set to: 63
 14370                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14371  005680  52E6               	movf	postinc1,f,c
 14372                           
 14373                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14374                           
 14375                           ;incstack = 0
 14376  005682  8AD2               	bsf	16338,5,c	;volatile
 14377                           
 14378                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14379  005684  AED2               	btfss	16338,7,c	;volatile
 14380  005686  D003               	goto	u3300
 14381  005688  6A44               	clrf	btemp+11,c
 14382  00568A  2A44               	incf	btemp+11,f,c
 14383  00568C  D001               	goto	u3318
 14384  00568E                     u3300:
 14385  00568E  6A44               	clrf	btemp+11,c
 14386  005690                     u3318:
 14387                           
 14388                           ;stkvar	_state @ sp[(-1)+0]
 14389  005690  0EFF               	movlw	-1
 14390  005692  0060  F113  FFE3   	movff	btemp+11,plusw1
 14391                           
 14392                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14393  005698  9ED2               	bcf	16338,7,c	;volatile
 14394                           
 14395                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14396  00569A  0E55               	movlw	85
 14397  00569C  6ED4               	movwf	16340,c	;volatile
 14398                           
 14399                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14400  00569E  0EAA               	movlw	170
 14401  0056A0  6ED4               	movwf	16340,c	;volatile
 14402                           
 14403                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14404  0056A2  90D4               	bcf	16340,0,c	;volatile
 14405                           
 14406                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14407  0056A4  0138               	movlb	56	; () banked
 14408  0056A6  6B9F               	clrf	159,b	;volatile
 14409                           
 14410                           ; BSR set to: 56
 14411                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14412  0056A8  6B9E               	clrf	158,b	;volatile
 14413                           
 14414                           ; BSR set to: 56
 14415                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14416  0056AA  0E08               	movlw	8
 14417  0056AC  6F9D               	movwf	157,b	;volatile
 14418                           
 14419                           ; BSR set to: 56
 14420                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14421  0056AE  0E55               	movlw	85
 14422  0056B0  6ED4               	movwf	16340,c	;volatile
 14423                           
 14424                           ; BSR set to: 56
 14425                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14426  0056B2  0EAA               	movlw	170
 14427  0056B4  6ED4               	movwf	16340,c	;volatile
 14428                           
 14429                           ; BSR set to: 56
 14430                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14431  0056B6  80D4               	bsf	16340,0,c	;volatile
 14432                           
 14433                           ; BSR set to: 56
 14434                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14435                           ;stkvar	_state @ sp[(-1)+0]
 14436  0056B8  0EFF               	movlw	-1
 14437  0056BA  B0E3               	btfsc	plusw1,0,c
 14438  0056BC  D002               	bra	u3325
 14439  0056BE  9ED2               	bcf	16338,7,c	;volatile
 14440  0056C0  D001               	bra	u3326
 14441  0056C2                     u3325:
 14442  0056C2  8ED2               	bsf	16338,7,c	;volatile
 14443  0056C4                     u3326:
 14444                           
 14445                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14446  0056C4  0139               	movlb	57	; () banked
 14447  0056C6  8782               	bsf	130,3,b	;volatile
 14448                           
 14449                           ; BSR set to: 57
 14450                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14451  0056C8  8382               	bsf	130,1,b	;volatile
 14452                           
 14453                           ; BSR set to: 57
 14454                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14455  0056CA  8182               	bsf	130,0,b	;volatile
 14456                           
 14457                           ; BSR set to: 57
 14458                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14459  0056CC  8582               	bsf	130,2,b	;volatile
 14460                           
 14461                           ; BSR set to: 57
 14462                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14463  0056CE  8786               	bsf	134,3,b	;volatile
 14464                           
 14465                           ; BSR set to: 57
 14466                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14467  0056D0  8586               	bsf	134,2,b	;volatile
 14468                           
 14469                           ; BSR set to: 57
 14470                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14471  0056D2  8983               	bsf	131,4,b	;volatile
 14472                           
 14473                           ; BSR set to: 57
 14474                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14475  0056D4  8783               	bsf	131,3,b	;volatile
 14476                           
 14477                           ; BSR set to: 57
 14478                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14479  0056D6  8181               	bsf	129,0,b	;volatile
 14480                           
 14481                           ; BSR set to: 57
 14482                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14483  0056D8  8185               	bsf	133,0,b	;volatile
 14484                           
 14485                           ; BSR set to: 57
 14486                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14487  0056DA  8B87               	bsf	135,5,b	;volatile
 14488                           
 14489                           ; BSR set to: 57
 14490                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14491  0056DC  8189               	bsf	137,0,b	;volatile
 14492                           
 14493                           ; BSR set to: 57
 14494                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14495  0056DE  8D88               	bsf	136,6,b	;volatile
 14496                           
 14497                           ; BSR set to: 57
 14498                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14499  0056E0  8581               	bsf	129,2,b	;volatile
 14500                           
 14501                           ; BSR set to: 57
 14502                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14503  0056E2  52E5               	movf	postdec1,f,c
 14504  0056E4  0012               	return		;funcret
 14505  0056E6                     __end_of_INTERRUPT_Initialize:
 14506                           	opt callstack 0
 14507                           
 14508 ;; *************** function _EXT_INT_Initialize *****************
 14509 ;; Defined at:
 14510 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;		None
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;		None
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1  [STACK] void 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14519 ;; Tracked objects:
 14520 ;;		On entry : 3F/3F
 14521 ;;		On exit  : 3F/39
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14528 ;;Total ram usage:        0 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:    4
 14531 ;; This function calls:
 14532 ;;		_INT0_SetInterruptHandler
 14533 ;;		_INT1_SetInterruptHandler
 14534 ;;		_INT2_SetInterruptHandler
 14535 ;; This function is called by:
 14536 ;;		_SYSTEM_Initialize
 14537 ;; This function uses a reentrant model
 14538 ;;
 14539                           
 14540                           	psect	text72
 14541  005966                     __ptext72:
 14542                           	opt callstack 0
 14543  005966                     _EXT_INT_Initialize:
 14544                           	opt callstack 25
 14545                           
 14546                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14547                           
 14548                           ; BSR set to: 57
 14549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14550                           ;incstack = 0
 14551  005966  0139               	movlb	57	; () banked
 14552  005968  91A1               	bcf	161,0,b	;volatile
 14553                           
 14554                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14555  00596A  90D2               	bcf	16338,0,c	;volatile
 14556                           
 14557                           ; BSR set to: 57
 14558                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14559  00596C  0E0A               	movlw	low _INT0_DefaultInterruptHandler
 14560  00596E  6EE6               	movwf	postinc1,c
 14561  005970  0E64               	movlw	high _INT0_DefaultInterruptHandler
 14562  005972  6EE6               	movwf	postinc1,c
 14563  005974  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14564  005976  6EE6               	movwf	postinc1,c
 14565  005978  EC1C  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14566                           
 14567                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14568  00597C  0139               	movlb	57	; () banked
 14569  00597E  8191               	bsf	145,0,b	;volatile
 14570                           
 14571                           ; BSR set to: 57
 14572                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14573  005980  91A5               	bcf	165,0,b	;volatile
 14574                           
 14575                           ; BSR set to: 57
 14576                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14577  005982  92D2               	bcf	16338,1,c	;volatile
 14578                           
 14579                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14580  005984  0E0C               	movlw	low _INT1_DefaultInterruptHandler
 14581  005986  6EE6               	movwf	postinc1,c
 14582  005988  0E64               	movlw	high _INT1_DefaultInterruptHandler
 14583  00598A  6EE6               	movwf	postinc1,c
 14584  00598C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14585  00598E  6EE6               	movwf	postinc1,c
 14586  005990  EC08  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14587                           
 14588                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14589  005994  0139               	movlb	57	; () banked
 14590  005996  8195               	bsf	149,0,b	;volatile
 14591                           
 14592                           ; BSR set to: 57
 14593                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14594  005998  9BA7               	bcf	167,5,b	;volatile
 14595                           
 14596                           ; BSR set to: 57
 14597                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14598  00599A  94D2               	bcf	16338,2,c	;volatile
 14599                           
 14600                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14601  00599C  0E0E               	movlw	low _INT2_DefaultInterruptHandler
 14602  00599E  6EE6               	movwf	postinc1,c
 14603  0059A0  0E64               	movlw	high _INT2_DefaultInterruptHandler
 14604  0059A2  6EE6               	movwf	postinc1,c
 14605  0059A4  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14606  0059A6  6EE6               	movwf	postinc1,c
 14607  0059A8  ECF4  F02F         	call	_INT2_SetInterruptHandler	;wreg free
 14608                           
 14609                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14610  0059AC  0139               	movlb	57	; () banked
 14611  0059AE  8B97               	bsf	151,5,b	;volatile
 14612                           
 14613                           ; BSR set to: 57
 14614                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14615  0059B0  0012               	return		;funcret
 14616  0059B2                     __end_of_EXT_INT_Initialize:
 14617                           	opt callstack 0
 14618                           
 14619 ;; *************** function _INT2_SetInterruptHandler *****************
 14620 ;; Defined at:
 14621 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14624 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;		None
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1  [STACK] void 
 14629 ;; Registers used:
 14630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14631 ;; Tracked objects:
 14632 ;;		On entry : 3F/39
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14640 ;;Total ram usage:        0 bytes
 14641 ;; Hardware stack levels used:    1
 14642 ;; Hardware stack levels required when called:    3
 14643 ;; This function calls:
 14644 ;;		Nothing
 14645 ;; This function is called by:
 14646 ;;		_EXT_INT_Initialize
 14647 ;; This function uses a reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text73
 14651  005FE8                     __ptext73:
 14652                           	opt callstack 0
 14653  005FE8                     _INT2_SetInterruptHandler:
 14654                           	opt callstack 25
 14655                           
 14656                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14657                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14658                           
 14659                           ; BSR set to: 57
 14660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14661                           ;incstack = 0
 14662  005FE8  50E1               	movf	fsr1l,w,c
 14663  005FEA  0FFD               	addlw	-3
 14664  005FEC  6ED9               	movwf	fsr2l,c
 14665  005FEE  50E2               	movf	fsr1h,w,c
 14666  005FF0  6EDA               	movwf	fsr2h,c
 14667  005FF2  0EFF               	movlw	255
 14668  005FF4  22DA               	addwfc	fsr2h,f,c
 14669  005FF6  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 14670  005FFC  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 14671  006002  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 14672                           
 14673                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14674  006008  52E5               	movf	postdec1,f,c
 14675  00600A  52E5               	movf	postdec1,f,c
 14676  00600C  52E5               	movf	postdec1,f,c
 14677  00600E  0012               	return		;funcret
 14678  006010                     __end_of_INT2_SetInterruptHandler:
 14679                           	opt callstack 0
 14680                           
 14681 ;; *************** function _INT1_SetInterruptHandler *****************
 14682 ;; Defined at:
 14683 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14686 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;		None
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  1  [STACK] void 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14693 ;; Tracked objects:
 14694 ;;		On entry : 3F/39
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14702 ;;Total ram usage:        0 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:    3
 14705 ;; This function calls:
 14706 ;;		Nothing
 14707 ;; This function is called by:
 14708 ;;		_EXT_INT_Initialize
 14709 ;; This function uses a reentrant model
 14710 ;;
 14711                           
 14712                           	psect	text74
 14713  006010                     __ptext74:
 14714                           	opt callstack 0
 14715  006010                     _INT1_SetInterruptHandler:
 14716                           	opt callstack 25
 14717                           
 14718                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14719                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14720                           
 14721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14722                           ;incstack = 0
 14723  006010  50E1               	movf	fsr1l,w,c
 14724  006012  0FFD               	addlw	-3
 14725  006014  6ED9               	movwf	fsr2l,c
 14726  006016  50E2               	movf	fsr1h,w,c
 14727  006018  6EDA               	movwf	fsr2h,c
 14728  00601A  0EFF               	movlw	255
 14729  00601C  22DA               	addwfc	fsr2h,f,c
 14730  00601E  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 14731  006024  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 14732  00602A  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 14733                           
 14734                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14735  006030  52E5               	movf	postdec1,f,c
 14736  006032  52E5               	movf	postdec1,f,c
 14737  006034  52E5               	movf	postdec1,f,c
 14738  006036  0012               	return		;funcret
 14739  006038                     __end_of_INT1_SetInterruptHandler:
 14740                           	opt callstack 0
 14741                           
 14742 ;; *************** function _INT0_SetInterruptHandler *****************
 14743 ;; Defined at:
 14744 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14747 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1  [STACK] void 
 14752 ;; Registers used:
 14753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14754 ;; Tracked objects:
 14755 ;;		On entry : 3F/39
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14763 ;;Total ram usage:        0 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:    3
 14766 ;; This function calls:
 14767 ;;		Nothing
 14768 ;; This function is called by:
 14769 ;;		_EXT_INT_Initialize
 14770 ;; This function uses a reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text75
 14774  006038                     __ptext75:
 14775                           	opt callstack 0
 14776  006038                     _INT0_SetInterruptHandler:
 14777                           	opt callstack 25
 14778                           
 14779                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14780                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14781                           
 14782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14783                           ;incstack = 0
 14784  006038  50E1               	movf	fsr1l,w,c
 14785  00603A  0FFD               	addlw	-3
 14786  00603C  6ED9               	movwf	fsr2l,c
 14787  00603E  50E2               	movf	fsr1h,w,c
 14788  006040  6EDA               	movwf	fsr2h,c
 14789  006042  0EFF               	movlw	255
 14790  006044  22DA               	addwfc	fsr2h,f,c
 14791  006046  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 14792  00604C  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 14793  006052  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 14794                           
 14795                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14796  006058  52E5               	movf	postdec1,f,c
 14797  00605A  52E5               	movf	postdec1,f,c
 14798  00605C  52E5               	movf	postdec1,f,c
 14799  00605E  0012               	return		;funcret
 14800  006060                     __end_of_INT0_SetInterruptHandler:
 14801                           	opt callstack 0
 14802                           
 14803 ;; *************** function _DSM_Initialize *****************
 14804 ;; Defined at:
 14805 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;		None
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;		None
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1  [STACK] void 
 14812 ;; Registers used:
 14813 ;;		wreg, status,2
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/3C
 14816 ;;		On exit  : 3F/3C
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14823 ;;Total ram usage:        0 bytes
 14824 ;; Hardware stack levels used:    1
 14825 ;; Hardware stack levels required when called:    3
 14826 ;; This function calls:
 14827 ;;		Nothing
 14828 ;; This function is called by:
 14829 ;;		_SYSTEM_Initialize
 14830 ;; This function uses a reentrant model
 14831 ;;
 14832                           
 14833                           	psect	text76
 14834  0062B0                     __ptext76:
 14835                           	opt callstack 0
 14836  0062B0                     _DSM_Initialize:
 14837                           	opt callstack 26
 14838                           
 14839                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14840                           
 14841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14842                           ;incstack = 0
 14843  0062B0  013C               	movlb	60	; () banked
 14844  0062B2  99FA               	bcf	250,4,b	;volatile
 14845                           
 14846                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14847  0062B4  81FB               	bsf	251,0,b	;volatile
 14848                           
 14849                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14850  0062B6  93FB               	bcf	251,1,b	;volatile
 14851                           
 14852                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14853  0062B8  89FB               	bsf	251,4,b	;volatile
 14854                           
 14855                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14856  0062BA  9BFB               	bcf	251,5,b	;volatile
 14857                           
 14858                           ; BSR set to: 60
 14859                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14860  0062BC  0E13               	movlw	19
 14861  0062BE  6FFC               	movwf	252,b	;volatile
 14862                           
 14863                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14864  0062C0  0E0E               	movlw	14
 14865  0062C2  6FFE               	movwf	254,b	;volatile
 14866                           
 14867                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14868  0062C4  0E04               	movlw	4
 14869  0062C6  6FFD               	movwf	253,b	;volatile
 14870                           
 14871                           ; BSR set to: 60
 14872                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14873  0062C8  8FFA               	bsf	250,7,b	;volatile
 14874                           
 14875                           ; BSR set to: 60
 14876                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14877  0062CA  0012               	return		;funcret
 14878  0062CC                     __end_of_DSM_Initialize:
 14879                           	opt callstack 0
 14880                           
 14881 ;; *************** function _DMA1_Initialize *****************
 14882 ;; Defined at:
 14883 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14884 ;; Parameters:    Size  Location     Type
 14885 ;;		None
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;		None
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1  [STACK] void 
 14890 ;; Registers used:
 14891 ;;		wreg, status,2
 14892 ;; Tracked objects:
 14893 ;;		On entry : 3F/3D
 14894 ;;		On exit  : 3F/3B
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14901 ;;Total ram usage:        0 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; Hardware stack levels required when called:    3
 14904 ;; This function calls:
 14905 ;;		Nothing
 14906 ;; This function is called by:
 14907 ;;		_SYSTEM_Initialize
 14908 ;; This function uses a reentrant model
 14909 ;;
 14910                           
 14911                           	psect	text77
 14912  005616                     __ptext77:
 14913                           	opt callstack 0
 14914  005616                     _DMA1_Initialize:
 14915                           	opt callstack 26
 14916                           
 14917                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14918                           
 14919                           ; BSR set to: 60
 14920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14921                           ;incstack = 0
 14922  005616  0E00               	movlw	0
 14923  005618  013B               	movlb	59	; () banked
 14924  00561A  6FF9               	movwf	249,b	;volatile
 14925  00561C  0E10               	movlw	16
 14926  00561E  6FFA               	movwf	250,b	;volatile
 14927  005620  0E00               	movlw	0
 14928  005622  6FFB               	movwf	251,b	;volatile
 14929                           
 14930                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14931  005624  0E3D               	movlw	61
 14932  005626  6FF1               	movwf	241,b	;volatile
 14933  005628  0E11               	movlw	17
 14934  00562A  6FF0               	movwf	240,b	;volatile
 14935                           
 14936                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14937  00562C  0E03               	movlw	3
 14938  00562E  6FFD               	movwf	253,b	;volatile
 14939                           
 14940                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14941  005630  0E00               	movlw	0
 14942  005632  6FF8               	movwf	248,b	;volatile
 14943  005634  0E01               	movlw	1
 14944  005636  6FF7               	movwf	247,b	;volatile
 14945                           
 14946                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14947  005638  0E00               	movlw	0
 14948  00563A  6FEF               	movwf	239,b	;volatile
 14949  00563C  0E01               	movlw	1
 14950  00563E  6FEE               	movwf	238,b	;volatile
 14951                           
 14952                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14953  005640  0E15               	movlw	21
 14954  005642  6FFF               	movwf	255,b	;volatile
 14955                           
 14956                           ; BSR set to: 59
 14957                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14958  005644  6BFE               	clrf	254,b	;volatile
 14959                           
 14960                           ; BSR set to: 59
 14961                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14962  005646  0139               	movlb	57	; () banked
 14963  005648  93A2               	bcf	162,1,b	;volatile
 14964                           
 14965                           ; BSR set to: 57
 14966                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14967  00564A  91A2               	bcf	162,0,b	;volatile
 14968                           
 14969                           ; BSR set to: 57
 14970                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14971  00564C  97A2               	bcf	162,3,b	;volatile
 14972                           
 14973                           ; BSR set to: 57
 14974                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14975  00564E  95A2               	bcf	162,2,b	;volatile
 14976                           
 14977                           ; BSR set to: 57
 14978                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14979  005650  8392               	bsf	146,1,b	;volatile
 14980                           
 14981                           ; BSR set to: 57
 14982                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14983  005652  8192               	bsf	146,0,b	;volatile
 14984                           
 14985                           ; BSR set to: 57
 14986                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14987  005654  8792               	bsf	146,3,b	;volatile
 14988                           
 14989                           ; BSR set to: 57
 14990                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14991  005656  8592               	bsf	146,2,b	;volatile
 14992                           
 14993                           ; BSR set to: 57
 14994                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14995  005658  6BF1               	clrf	241,b	;volatile
 14996                           
 14997                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14998  00565A  0E01               	movlw	1
 14999  00565C  6FF2               	movwf	242,b	;volatile
 15000                           
 15001                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15002  00565E  0E04               	movlw	4
 15003  005660  6FF3               	movwf	243,b	;volatile
 15004                           
 15005                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15006  005662  0E02               	movlw	2
 15007  005664  6FF4               	movwf	244,b	;volatile
 15008                           
 15009                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15010  005666  0E03               	movlw	3
 15011  005668  6FF7               	movwf	247,b	;volatile
 15012  00566A  9ED2               	bcf	16338,7,c	;# 
 15013  00566C  0139               	banksel	14831	;# 
 15014  00566E  0E55               	movlw	85	;# 
 15015  005670  6FEF               	movwf	14831,b	;# 
 15016  005672  0EAA               	movlw	170	;# 
 15017  005674  6FEF               	movwf	14831,b	;# 
 15018  005676  81EF               	bsf	14831,0,b	;# 
 15019  005678  8ED2               	bsf	16338,7,c	;# 
 15020                           
 15021                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15022  00567A  013B               	movlb	59	; () banked
 15023  00567C  6BFC               	clrf	252,b	;volatile
 15024                           
 15025                           ; BSR set to: 59
 15026                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15027  00567E  0012               	return		;funcret
 15028  005680                     __end_of_DMA1_Initialize:
 15029                           	opt callstack 0
 15030                           
 15031 ;; *************** function _CLKREF_Initialize *****************
 15032 ;; Defined at:
 15033 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1  [STACK] void 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2
 15042 ;; Tracked objects:
 15043 ;;		On entry : 3F/3B
 15044 ;;		On exit  : 3F/3C
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15051 ;;Total ram usage:        0 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; Hardware stack levels required when called:    3
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_SYSTEM_Initialize
 15058 ;; This function uses a reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text78
 15062  0063AA                     __ptext78:
 15063                           	opt callstack 0
 15064  0063AA                     _CLKREF_Initialize:
 15065                           	opt callstack 26
 15066                           
 15067                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15068                           
 15069                           ; BSR set to: 59
 15070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15071                           ;incstack = 0
 15072  0063AA  013C               	movlb	60	; () banked
 15073  0063AC  6BE6               	clrf	230,b	;volatile
 15074                           
 15075                           ; BSR set to: 60
 15076                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15077  0063AE  0E94               	movlw	148
 15078  0063B0  6FE5               	movwf	229,b	;volatile
 15079                           
 15080                           ; BSR set to: 60
 15081                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15082  0063B2  0012               	return		;funcret
 15083  0063B4                     __end_of_CLKREF_Initialize:
 15084                           	opt callstack 0
 15085                           
 15086 ;; *************** function _CLC1_Initialize *****************
 15087 ;; Defined at:
 15088 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;		None
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;		None
 15093 ;; Return value:  Size  Location     Type
 15094 ;;                  1  [STACK] void 
 15095 ;; Registers used:
 15096 ;;		wreg, status,2
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/39
 15099 ;;		On exit  : 3F/3C
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15106 ;;Total ram usage:        0 bytes
 15107 ;; Hardware stack levels used:    1
 15108 ;; Hardware stack levels required when called:    3
 15109 ;; This function calls:
 15110 ;;		Nothing
 15111 ;; This function is called by:
 15112 ;;		_SYSTEM_Initialize
 15113 ;; This function uses a reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text79
 15117  006192                     __ptext79:
 15118                           	opt callstack 0
 15119  006192                     _CLC1_Initialize:
 15120                           	opt callstack 26
 15121                           
 15122                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15123                           
 15124                           ; BSR set to: 60
 15125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15126                           ;incstack = 0
 15127  006192  013C               	movlb	60	; () banked
 15128  006194  6B75               	clrf	117,b	;volatile
 15129                           
 15130                           ; BSR set to: 60
 15131                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15132  006196  0E04               	movlw	4
 15133  006198  6F76               	movwf	118,b	;volatile
 15134                           
 15135                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15136  00619A  0E04               	movlw	4
 15137  00619C  6F77               	movwf	119,b	;volatile
 15138                           
 15139                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15140  00619E  0E04               	movlw	4
 15141  0061A0  6F78               	movwf	120,b	;volatile
 15142                           
 15143                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15144  0061A2  0E04               	movlw	4
 15145  0061A4  6F79               	movwf	121,b	;volatile
 15146                           
 15147                           ; BSR set to: 60
 15148                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15149  0061A6  6B7A               	clrf	122,b	;volatile
 15150                           
 15151                           ; BSR set to: 60
 15152                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15153  0061A8  6B7B               	clrf	123,b	;volatile
 15154                           
 15155                           ; BSR set to: 60
 15156                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15157  0061AA  6B7C               	clrf	124,b	;volatile
 15158                           
 15159                           ; BSR set to: 60
 15160                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15161  0061AC  6B7D               	clrf	125,b	;volatile
 15162                           
 15163                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15164  0061AE  0E81               	movlw	129
 15165  0061B0  6F74               	movwf	116,b	;volatile
 15166                           
 15167                           ; BSR set to: 60
 15168                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15169  0061B2  0012               	return		;funcret
 15170  0061B4                     __end_of_CLC1_Initialize:
 15171                           	opt callstack 0
 15172                           
 15173 ;; *************** function _ADCC_Initialize *****************
 15174 ;; Defined at:
 15175 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;		None
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1  [STACK] void 
 15182 ;; Registers used:
 15183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15184 ;; Tracked objects:
 15185 ;;		On entry : 3F/39
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15193 ;;Total ram usage:        0 bytes
 15194 ;; Hardware stack levels used:    1
 15195 ;; Hardware stack levels required when called:    4
 15196 ;; This function calls:
 15197 ;;		_ADCC_SetADIInterruptHandler
 15198 ;; This function is called by:
 15199 ;;		_SYSTEM_Initialize
 15200 ;; This function uses a reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text80
 15204  0059B2                     __ptext80:
 15205                           	opt callstack 0
 15206  0059B2                     _ADCC_Initialize:
 15207                           	opt callstack 25
 15208                           
 15209                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15210                           
 15211                           ; BSR set to: 60
 15212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15213                           ;incstack = 0
 15214  0059B2  013E               	movlb	62	; () banked
 15215  0059B4  6BDE               	clrf	222,b	;volatile
 15216                           
 15217                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15218  0059B6  6BDF               	clrf	223,b	;volatile
 15219                           
 15220                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15221  0059B8  6BE0               	clrf	224,b	;volatile
 15222                           
 15223                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15224  0059BA  6BE1               	clrf	225,b	;volatile
 15225                           
 15226                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15227  0059BC  6BE4               	clrf	228,b	;volatile
 15228                           
 15229                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15230  0059BE  6BE5               	clrf	229,b	;volatile
 15231                           
 15232                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15233  0059C0  6BEA               	clrf	234,b	;volatile
 15234                           
 15235                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15236  0059C2  6BEC               	clrf	236,b	;volatile
 15237                           
 15238                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15239  0059C4  6BF1               	clrf	241,b	;volatile
 15240                           
 15241                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15242  0059C6  6BF3               	clrf	243,b	;volatile
 15243                           
 15244                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15245  0059C8  6BF4               	clrf	244,b	;volatile
 15246                           
 15247                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15248  0059CA  6BF5               	clrf	245,b	;volatile
 15249                           
 15250                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15251  0059CC  6BF6               	clrf	246,b	;volatile
 15252                           
 15253                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15254  0059CE  6BF7               	clrf	247,b	;volatile
 15255                           
 15256                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15257  0059D0  6BF9               	clrf	249,b	;volatile
 15258                           
 15259                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15260  0059D2  6BFA               	clrf	250,b	;volatile
 15261                           
 15262                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15263  0059D4  6BFB               	clrf	251,b	;volatile
 15264                           
 15265                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15266  0059D6  6BFC               	clrf	252,b	;volatile
 15267                           
 15268                           ; BSR set to: 62
 15269                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15270  0059D8  0E02               	movlw	2
 15271  0059DA  6FFD               	movwf	253,b	;volatile
 15272                           
 15273                           ; BSR set to: 62
 15274                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15275  0059DC  6BFE               	clrf	254,b	;volatile
 15276                           
 15277                           ; BSR set to: 62
 15278                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15279  0059DE  6BFF               	clrf	255,b	;volatile
 15280                           
 15281                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15282  0059E0  0E94               	movlw	148
 15283  0059E2  6FF8               	movwf	248,b	;volatile
 15284                           
 15285                           ; BSR set to: 62
 15286                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15287  0059E4  0139               	movlb	57	; () banked
 15288  0059E6  95A1               	bcf	161,2,b	;volatile
 15289                           
 15290                           ; BSR set to: 57
 15291                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15292  0059E8  8591               	bsf	145,2,b	;volatile
 15293                           
 15294                           ; BSR set to: 57
 15295                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15296  0059EA  0E10               	movlw	low _ADCC_DefaultInterruptHandler
 15297  0059EC  6EE6               	movwf	postinc1,c
 15298  0059EE  0E64               	movlw	high _ADCC_DefaultInterruptHandler
 15299  0059F0  6EE6               	movwf	postinc1,c
 15300  0059F2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15301  0059F4  6EE6               	movwf	postinc1,c
 15302  0059F6  EC30  F030         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15303                           
 15304                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15305  0059FA  0012               	return		;funcret
 15306  0059FC                     __end_of_ADCC_Initialize:
 15307                           	opt callstack 0
 15308                           
 15309 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15310 ;; Defined at:
 15311 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15314 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1  [STACK] void 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15321 ;; Tracked objects:
 15322 ;;		On entry : 3F/39
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    3
 15333 ;; This function calls:
 15334 ;;		Nothing
 15335 ;; This function is called by:
 15336 ;;		_ADCC_Initialize
 15337 ;; This function uses a reentrant model
 15338 ;;
 15339                           
 15340                           	psect	text81
 15341  006060                     __ptext81:
 15342                           	opt callstack 0
 15343  006060                     _ADCC_SetADIInterruptHandler:
 15344                           	opt callstack 25
 15345                           
 15346                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15347                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15348                           
 15349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15350                           ;incstack = 0
 15351  006060  50E1               	movf	fsr1l,w,c
 15352  006062  0FFD               	addlw	-3
 15353  006064  6ED9               	movwf	fsr2l,c
 15354  006066  50E2               	movf	fsr1h,w,c
 15355  006068  6EDA               	movwf	fsr2h,c
 15356  00606A  0EFF               	movlw	255
 15357  00606C  22DA               	addwfc	fsr2h,f,c
 15358  00606E  006F FF78  F0F8    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15359  006074  006F FF78  F0F9    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15360  00607A  006F FF74  F0FA    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15361                           
 15362                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15363  006080  52E5               	movf	postdec1,f,c
 15364  006082  52E5               	movf	postdec1,f,c
 15365  006084  52E5               	movf	postdec1,f,c
 15366  006086  0012               	return		;funcret
 15367  006088                     __end_of_ADCC_SetADIInterruptHandler:
 15368                           	opt callstack 0
 15369                           
 15370 ;; *************** function _INT0_ISR *****************
 15371 ;; Defined at:
 15372 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;		None
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;		None
 15377 ;; Return value:  Size  Location     Type
 15378 ;;                  1    wreg      void 
 15379 ;; Registers used:
 15380 ;;		wreg, status,2, status,0, pclath, tosl
 15381 ;; Tracked objects:
 15382 ;;		On entry : 0/0
 15383 ;;		On exit  : 0/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15390 ;;Total ram usage:        0 bytes
 15391 ;; Hardware stack levels used:    1
 15392 ;; Hardware stack levels required when called:    2
 15393 ;; This function calls:
 15394 ;;		_INT0_CallBack
 15395 ;; This function is called by:
 15396 ;;		Interrupt level 2
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text82
 15401  00637C                     __ptext82:
 15402                           	opt callstack 0
 15403  00637C                     _INT0_ISR:
 15404                           	opt callstack 17
 15405                           
 15406                           ;incstack = 0
 15407  00637C  EE13  F12A         	lfsr	1,___inthi_sp
 15408                           
 15409                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15410  006380  0139               	movlb	57	; () banked
 15411  006382  91A1               	bcf	161,0,b	;volatile
 15412                           
 15413                           ; BSR set to: 57
 15414                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15415  006384  ECDA  F030         	call	_INT0_CallBack	;wreg free
 15416  006388  0011               	retfie		f
 15417  00638A                     __end_of_INT0_ISR:
 15418                           	opt callstack 0
 15419                           
 15420 ;; *************** function _INT0_CallBack *****************
 15421 ;; Defined at:
 15422 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;		None
 15425 ;; Auto vars:     Size  Location     Type
 15426 ;;		None
 15427 ;; Return value:  Size  Location     Type
 15428 ;;                  1  [STACK] void 
 15429 ;; Registers used:
 15430 ;;		wreg, status,2, status,0, pclath, tosl
 15431 ;; Tracked objects:
 15432 ;;		On entry : 3F/39
 15433 ;;		On exit  : 0/0
 15434 ;;		Unchanged: 0/0
 15435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15440 ;;Total ram usage:        0 bytes
 15441 ;; Hardware stack levels used:    1
 15442 ;; Hardware stack levels required when called:    1
 15443 ;; This function calls:
 15444 ;;		Absolute function
 15445 ;;		_INT0_DefaultInterruptHandler
 15446 ;; This function is called by:
 15447 ;;		_INT0_ISR
 15448 ;; This function uses a reentrant model
 15449 ;;
 15450                           
 15451                           	psect	text83
 15452  0061B4                     __ptext83:
 15453                           	opt callstack 0
 15454  0061B4                     _INT0_CallBack:
 15455                           	opt callstack 17
 15456                           
 15457                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15458                           
 15459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15460                           ;incstack = 0
 15461  0061B4  501A               	movf	_INT0_InterruptHandler,w,c
 15462  0061B6  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 15463  0061B8  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 15464  0061BA  B4D8               	btfsc	status,2,c
 15465  0061BC  0012               	return	
 15466                           
 15467                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15468  0061BE  D801               	call	u125_48
 15469  0061C0  0012               	return	
 15470  0061C2                     u125_48:
 15471  0061C2  0005               	push	
 15472  0061C4  6EFA               	movwf	pclath,c
 15473  0061C6  501A               	movf	_INT0_InterruptHandler,w,c
 15474  0061C8  6EFD               	movwf	tosl,c
 15475  0061CA  501B               	movf	_INT0_InterruptHandler+1,w,c
 15476  0061CC  6EFE               	movwf	tosh,c
 15477  0061CE  501C               	movf	_INT0_InterruptHandler+2,w,c
 15478  0061D0  6EFF               	movwf	tosu,c
 15479  0061D2  50FA               	movf	pclath,w,c
 15480  0061D4  0012               	return		;indir
 15481  0061D6                     __end_of_INT0_CallBack:
 15482                           	opt callstack 0
 15483                           
 15484 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15485 ;; Defined at:
 15486 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1  [STACK] void 
 15493 ;; Registers used:
 15494 ;;		None
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/39
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_EXT_INT_Initialize
 15510 ;;		_INT0_CallBack
 15511 ;; This function uses a reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text84
 15515  00640A                     __ptext84:
 15516                           	opt callstack 0
 15517  00640A                     _INT0_DefaultInterruptHandler:
 15518                           	opt callstack 17
 15519                           
 15520                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15521                           
 15522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15523                           ;incstack = 0
 15524  00640A  0012               	return		;funcret
 15525  00640C                     __end_of_INT0_DefaultInterruptHandler:
 15526                           	opt callstack 0
 15527                           
 15528 ;; *************** function _INT1_ISR *****************
 15529 ;; Defined at:
 15530 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15531 ;; Parameters:    Size  Location     Type
 15532 ;;		None
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0, pclath, tosl
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15548 ;;Total ram usage:        0 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    2
 15551 ;; This function calls:
 15552 ;;		_INT1_CallBack
 15553 ;; This function is called by:
 15554 ;;		Interrupt level 2
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text85
 15559  00638C                     __ptext85:
 15560                           	opt callstack 0
 15561  00638C                     _INT1_ISR:
 15562                           	opt callstack 17
 15563                           
 15564                           ;incstack = 0
 15565  00638C  EE13  F12A         	lfsr	1,___inthi_sp
 15566                           
 15567                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15568  006390  0139               	movlb	57	; () banked
 15569  006392  91A5               	bcf	165,0,b	;volatile
 15570                           
 15571                           ; BSR set to: 57
 15572                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15573  006394  ECEB  F030         	call	_INT1_CallBack	;wreg free
 15574  006398  0011               	retfie		f
 15575  00639A                     __end_of_INT1_ISR:
 15576                           	opt callstack 0
 15577                           
 15578 ;; *************** function _INT1_CallBack *****************
 15579 ;; Defined at:
 15580 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;		None
 15583 ;; Auto vars:     Size  Location     Type
 15584 ;;		None
 15585 ;; Return value:  Size  Location     Type
 15586 ;;                  1  [STACK] void 
 15587 ;; Registers used:
 15588 ;;		wreg, status,2, status,0, pclath, tosl
 15589 ;; Tracked objects:
 15590 ;;		On entry : 3F/39
 15591 ;;		On exit  : 0/0
 15592 ;;		Unchanged: 0/0
 15593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15598 ;;Total ram usage:        0 bytes
 15599 ;; Hardware stack levels used:    1
 15600 ;; Hardware stack levels required when called:    1
 15601 ;; This function calls:
 15602 ;;		Absolute function
 15603 ;;		_INT1_DefaultInterruptHandler
 15604 ;; This function is called by:
 15605 ;;		_INT1_ISR
 15606 ;; This function uses a reentrant model
 15607 ;;
 15608                           
 15609                           	psect	text86
 15610  0061D6                     __ptext86:
 15611                           	opt callstack 0
 15612  0061D6                     _INT1_CallBack:
 15613                           	opt callstack 17
 15614                           
 15615                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15616                           
 15617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15618                           ;incstack = 0
 15619  0061D6  5017               	movf	_INT1_InterruptHandler,w,c
 15620  0061D8  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 15621  0061DA  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 15622  0061DC  B4D8               	btfsc	status,2,c
 15623  0061DE  0012               	return	
 15624                           
 15625                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15626  0061E0  D801               	call	u127_48
 15627  0061E2  0012               	return	
 15628  0061E4                     u127_48:
 15629  0061E4  0005               	push	
 15630  0061E6  6EFA               	movwf	pclath,c
 15631  0061E8  5017               	movf	_INT1_InterruptHandler,w,c
 15632  0061EA  6EFD               	movwf	tosl,c
 15633  0061EC  5018               	movf	_INT1_InterruptHandler+1,w,c
 15634  0061EE  6EFE               	movwf	tosh,c
 15635  0061F0  5019               	movf	_INT1_InterruptHandler+2,w,c
 15636  0061F2  6EFF               	movwf	tosu,c
 15637  0061F4  50FA               	movf	pclath,w,c
 15638  0061F6  0012               	return		;indir
 15639  0061F8                     __end_of_INT1_CallBack:
 15640                           	opt callstack 0
 15641                           
 15642 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15643 ;; Defined at:
 15644 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;		None
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;		None
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  1  [STACK] void 
 15651 ;; Registers used:
 15652 ;;		None
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/39
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15662 ;;Total ram usage:        0 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		_EXT_INT_Initialize
 15668 ;;		_INT1_CallBack
 15669 ;; This function uses a reentrant model
 15670 ;;
 15671                           
 15672                           	psect	text87
 15673  00640C                     __ptext87:
 15674                           	opt callstack 0
 15675  00640C                     _INT1_DefaultInterruptHandler:
 15676                           	opt callstack 17
 15677                           
 15678                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15679                           
 15680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15681                           ;incstack = 0
 15682  00640C  0012               	return		;funcret
 15683  00640E                     __end_of_INT1_DefaultInterruptHandler:
 15684                           	opt callstack 0
 15685                           
 15686 ;; *************** function _INT2_ISR *****************
 15687 ;; Defined at:
 15688 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;		None
 15691 ;; Auto vars:     Size  Location     Type
 15692 ;;		None
 15693 ;; Return value:  Size  Location     Type
 15694 ;;                  1    wreg      void 
 15695 ;; Registers used:
 15696 ;;		wreg, status,2, status,0, pclath, tosl
 15697 ;; Tracked objects:
 15698 ;;		On entry : 0/0
 15699 ;;		On exit  : 0/0
 15700 ;;		Unchanged: 0/0
 15701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;Total ram usage:        0 bytes
 15707 ;; Hardware stack levels used:    1
 15708 ;; Hardware stack levels required when called:    2
 15709 ;; This function calls:
 15710 ;;		_INT2_CallBack
 15711 ;; This function is called by:
 15712 ;;		Interrupt level 2
 15713 ;; This function uses a non-reentrant model
 15714 ;;
 15715                           
 15716                           	psect	text88
 15717  00639C                     __ptext88:
 15718                           	opt callstack 0
 15719  00639C                     _INT2_ISR:
 15720                           	opt callstack 17
 15721                           
 15722                           ;incstack = 0
 15723  00639C  EE13  F12A         	lfsr	1,___inthi_sp
 15724                           
 15725                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15726  0063A0  0139               	movlb	57	; () banked
 15727  0063A2  9BA7               	bcf	167,5,b	;volatile
 15728                           
 15729                           ; BSR set to: 57
 15730                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15731  0063A4  ECFC  F030         	call	_INT2_CallBack	;wreg free
 15732  0063A8  0011               	retfie		f
 15733  0063AA                     __end_of_INT2_ISR:
 15734                           	opt callstack 0
 15735                           
 15736 ;; *************** function _INT2_CallBack *****************
 15737 ;; Defined at:
 15738 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15739 ;; Parameters:    Size  Location     Type
 15740 ;;		None
 15741 ;; Auto vars:     Size  Location     Type
 15742 ;;		None
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  1  [STACK] void 
 15745 ;; Registers used:
 15746 ;;		wreg, status,2, status,0, pclath, tosl
 15747 ;; Tracked objects:
 15748 ;;		On entry : 3F/39
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15756 ;;Total ram usage:        0 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; Hardware stack levels required when called:    1
 15759 ;; This function calls:
 15760 ;;		Absolute function
 15761 ;;		_INT2_DefaultInterruptHandler
 15762 ;; This function is called by:
 15763 ;;		_INT2_ISR
 15764 ;; This function uses a reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text89
 15768  0061F8                     __ptext89:
 15769                           	opt callstack 0
 15770  0061F8                     _INT2_CallBack:
 15771                           	opt callstack 17
 15772                           
 15773                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15774                           
 15775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15776                           ;incstack = 0
 15777  0061F8  5014               	movf	_INT2_InterruptHandler,w,c
 15778  0061FA  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 15779  0061FC  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 15780  0061FE  B4D8               	btfsc	status,2,c
 15781  006200  0012               	return	
 15782                           
 15783                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15784  006202  D801               	call	u129_48
 15785  006204  0012               	return	
 15786  006206                     u129_48:
 15787  006206  0005               	push	
 15788  006208  6EFA               	movwf	pclath,c
 15789  00620A  5014               	movf	_INT2_InterruptHandler,w,c
 15790  00620C  6EFD               	movwf	tosl,c
 15791  00620E  5015               	movf	_INT2_InterruptHandler+1,w,c
 15792  006210  6EFE               	movwf	tosh,c
 15793  006212  5016               	movf	_INT2_InterruptHandler+2,w,c
 15794  006214  6EFF               	movwf	tosu,c
 15795  006216  50FA               	movf	pclath,w,c
 15796  006218  0012               	return		;indir
 15797  00621A                     __end_of_INT2_CallBack:
 15798                           	opt callstack 0
 15799                           
 15800 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15801 ;; Defined at:
 15802 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;		None
 15805 ;; Auto vars:     Size  Location     Type
 15806 ;;		None
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  1  [STACK] void 
 15809 ;; Registers used:
 15810 ;;		None
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/39
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15820 ;;Total ram usage:        0 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; This function calls:
 15823 ;;		Nothing
 15824 ;; This function is called by:
 15825 ;;		_EXT_INT_Initialize
 15826 ;;		_INT2_CallBack
 15827 ;; This function uses a reentrant model
 15828 ;;
 15829                           
 15830                           	psect	text90
 15831  00640E                     __ptext90:
 15832                           	opt callstack 0
 15833  00640E                     _INT2_DefaultInterruptHandler:
 15834                           	opt callstack 17
 15835                           
 15836                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15837                           
 15838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15839                           ;incstack = 0
 15840  00640E  0012               	return		;funcret
 15841  006410                     __end_of_INT2_DefaultInterruptHandler:
 15842                           	opt callstack 0
 15843                           
 15844 ;; *************** function _Default_ISR *****************
 15845 ;; Defined at:
 15846 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15847 ;; Parameters:    Size  Location     Type
 15848 ;;		None
 15849 ;; Auto vars:     Size  Location     Type
 15850 ;;		None
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  1    wreg      void 
 15853 ;; Registers used:
 15854 ;;		None
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15864 ;;Total ram usage:        0 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; This function calls:
 15867 ;;		Nothing
 15868 ;; This function is called by:
 15869 ;;		Interrupt level 2
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           	psect	text91
 15874  006404                     __ptext91:
 15875                           	opt callstack 0
 15876  006404                     _Default_ISR:
 15877                           	opt callstack 19
 15878                           
 15879                           ;incstack = 0
 15880  006404  EE13  F12A         	lfsr	1,___inthi_sp
 15881  006408  0011               	retfie		f
 15882  00640A                     __end_of_Default_ISR:
 15883                           	opt callstack 0
 15884                           
 15885 ;; *************** function _ADCC_ISR *****************
 15886 ;; Defined at:
 15887 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;		None
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;		None
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0, pclath, tosl
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15905 ;;Total ram usage:        0 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    1
 15908 ;; This function calls:
 15909 ;;		Absolute function
 15910 ;;		_ADCC_DefaultInterruptHandler
 15911 ;; This function is called by:
 15912 ;;		Interrupt level 2
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text92
 15917  005D80                     __ptext92:
 15918                           	opt callstack 0
 15919  005D80                     _ADCC_ISR:
 15920                           	opt callstack 18
 15921                           
 15922                           ;incstack = 0
 15923  005D80  EE13  F12A         	lfsr	1,___inthi_sp
 15924                           
 15925                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15926  005D84  0139               	movlb	57	; () banked
 15927  005D86  95A1               	bcf	161,2,b	;volatile
 15928                           
 15929                           ; BSR set to: 57
 15930                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15931  005D88  0100               	movlb	0	; () banked
 15932  005D8A  51F8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 15933  005D8C  11F9               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 15934  005D8E  11FA               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 15935  005D90  B4D8               	btfsc	status,2,c
 15936  005D92  0011               	retfie		f
 15937                           
 15938                           ; BSR set to: 0
 15939                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15940  005D94  D801               	call	i2u585_48
 15941  005D96  0011               	retfie		f
 15942  005D98                     i2u585_48:
 15943  005D98  0005               	push	
 15944  005D9A  6EFA               	movwf	pclath,c
 15945  005D9C  51F8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 15946  005D9E  6EFD               	movwf	tosl,c
 15947  005DA0  51F9               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 15948  005DA2  6EFE               	movwf	tosh,c
 15949  005DA4  51FA               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 15950  005DA6  6EFF               	movwf	tosu,c
 15951  005DA8  50FA               	movf	pclath,w,c
 15952  005DAA  0012               	return		;indir
 15953  005DAC                     __end_of_ADCC_ISR:
 15954                           	opt callstack 0
 15955                           
 15956 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15957 ;; Defined at:
 15958 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;		None
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;		None
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1  [STACK] void 
 15965 ;; Registers used:
 15966 ;;		None
 15967 ;; Tracked objects:
 15968 ;;		On entry : 3F/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15976 ;;Total ram usage:        0 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; This function calls:
 15979 ;;		Nothing
 15980 ;; This function is called by:
 15981 ;;		_ADCC_Initialize
 15982 ;;		_ADCC_ISR
 15983 ;; This function uses a reentrant model
 15984 ;;
 15985                           
 15986                           	psect	text93
 15987  006410                     __ptext93:
 15988                           	opt callstack 0
 15989  006410                     _ADCC_DefaultInterruptHandler:
 15990                           	opt callstack 18
 15991                           
 15992                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15993                           
 15994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15995                           ;incstack = 0
 15996  006410  0012               	return		;funcret
 15997  006412                     __end_of_ADCC_DefaultInterruptHandler:
 15998                           	opt callstack 0
 15999                           
 16000 ;; *************** function _UART1_tx_vect_isr *****************
 16001 ;; Defined at:
 16002 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;		None
 16005 ;; Auto vars:     Size  Location     Type
 16006 ;;		None
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  1    wreg      void 
 16009 ;; Registers used:
 16010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16011 ;; Tracked objects:
 16012 ;;		On entry : 0/0
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16020 ;;Total ram usage:        0 bytes
 16021 ;; Hardware stack levels used:    1
 16022 ;; Hardware stack levels required when called:    1
 16023 ;; This function calls:
 16024 ;;		Absolute function
 16025 ;;		_UART1_Transmit_ISR
 16026 ;; This function is called by:
 16027 ;;		Interrupt level 2
 16028 ;; This function uses a non-reentrant model
 16029 ;;
 16030                           
 16031                           	psect	text94
 16032  006088                     __ptext94:
 16033                           	opt callstack 0
 16034  006088                     _UART1_tx_vect_isr:
 16035                           	opt callstack 18
 16036                           
 16037                           ;incstack = 0
 16038  006088  EE13  F12A         	lfsr	1,___inthi_sp
 16039                           
 16040                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16041  00608C  5008               	movf	_UART1_TxInterruptHandler,w,c
 16042  00608E  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16043  006090  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16044  006092  B4D8               	btfsc	status,2,c
 16045  006094  0011               	retfie		f
 16046                           
 16047                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16048  006096  D801               	call	i2u431_48
 16049  006098  0011               	retfie		f
 16050  00609A                     i2u431_48:
 16051  00609A  0005               	push	
 16052  00609C  6EFA               	movwf	pclath,c
 16053  00609E  5008               	movf	_UART1_TxInterruptHandler,w,c
 16054  0060A0  6EFD               	movwf	tosl,c
 16055  0060A2  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16056  0060A4  6EFE               	movwf	tosh,c
 16057  0060A6  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16058  0060A8  6EFF               	movwf	tosu,c
 16059  0060AA  50FA               	movf	pclath,w,c
 16060  0060AC  0012               	return		;indir
 16061  0060AE                     __end_of_UART1_tx_vect_isr:
 16062                           	opt callstack 0
 16063                           
 16064 ;; *************** function _UART1_Transmit_ISR *****************
 16065 ;; Defined at:
 16066 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;		None
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;		None
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1  [STACK] void 
 16073 ;; Registers used:
 16074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 3B/39
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16084 ;;Total ram usage:        0 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_UART1_Initialize
 16090 ;;		_UART1_tx_vect_isr
 16091 ;; This function uses a reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text95
 16095  005DAC                     __ptext95:
 16096                           	opt callstack 0
 16097  005DAC                     _UART1_Transmit_ISR:
 16098                           	opt callstack 18
 16099                           
 16100                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16101                           
 16102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16103                           ;incstack = 0
 16104  005DAC  0E40               	movlw	64
 16105  005DAE  6036               	cpfslt	_uart1TxBufferRemaining,c
 16106  005DB0  D010               	goto	l597
 16107                           
 16108                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16109  005DB2  0EC0               	movlw	low _uart1TxBuffer
 16110  005DB4  2437               	addwf	_uart1TxTail,w,c	;volatile
 16111  005DB6  6ED9               	movwf	fsr2l,c
 16112  005DB8  6ADA               	clrf	fsr2h,c
 16113  005DBA  0E02               	movlw	high _uart1TxBuffer
 16114  005DBC  22DA               	addwfc	fsr2h,f,c
 16115  005DBE  50DF               	movf	indf2,w,c
 16116  005DC0  013D               	movlb	61	; () banked
 16117  005DC2  6FEA               	movwf	234,b	;volatile
 16118                           
 16119                           ; BSR set to: 61
 16120  005DC4  2A37               	incf	_uart1TxTail,f,c	;volatile
 16121                           
 16122                           ; BSR set to: 61
 16123                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16124  005DC6  0E3F               	movlw	63
 16125  005DC8  6437               	cpfsgt	_uart1TxTail,c
 16126  005DCA  D001               	goto	l6691
 16127                           
 16128                           ; BSR set to: 61
 16129                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16130  005DCC  6A37               	clrf	_uart1TxTail,c	;volatile
 16131  005DCE                     l6691:
 16132                           
 16133                           ; BSR set to: 61
 16134                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16135  005DCE  2A36               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16136                           
 16137                           ;mcc_generated_files/uart1.c: 220:  } else {
 16138  005DD0  0012               	return	
 16139  005DD2                     l597:
 16140                           
 16141                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16142  005DD2  0139               	movlb	57	; () banked
 16143  005DD4  9993               	bcf	147,4,b	;volatile
 16144                           
 16145                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16146  005DD6  0012               	return		;funcret
 16147  005DD8                     __end_of_UART1_Transmit_ISR:
 16148                           	opt callstack 0
 16149                           
 16150 ;; *************** function _UART1_rx_vect_isr *****************
 16151 ;; Defined at:
 16152 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16170 ;;Total ram usage:        0 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    1
 16173 ;; This function calls:
 16174 ;;		Absolute function
 16175 ;;		_UART1_Receive_ISR
 16176 ;; This function is called by:
 16177 ;;		Interrupt level 2
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           	psect	text96
 16182  0060B0                     __ptext96:
 16183                           	opt callstack 0
 16184  0060B0                     _UART1_rx_vect_isr:
 16185                           	opt callstack 18
 16186                           
 16187                           ;incstack = 0
 16188  0060B0  EE13  F12A         	lfsr	1,___inthi_sp
 16189                           
 16190                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16191  0060B4  500B               	movf	_UART1_RxInterruptHandler,w,c
 16192  0060B6  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16193  0060B8  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16194  0060BA  B4D8               	btfsc	status,2,c
 16195  0060BC  0011               	retfie		f
 16196                           
 16197                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16198  0060BE  D801               	call	i2u433_48
 16199  0060C0  0011               	retfie		f
 16200  0060C2                     i2u433_48:
 16201  0060C2  0005               	push	
 16202  0060C4  6EFA               	movwf	pclath,c
 16203  0060C6  500B               	movf	_UART1_RxInterruptHandler,w,c
 16204  0060C8  6EFD               	movwf	tosl,c
 16205  0060CA  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16206  0060CC  6EFE               	movwf	tosh,c
 16207  0060CE  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16208  0060D0  6EFF               	movwf	tosu,c
 16209  0060D2  50FA               	movf	pclath,w,c
 16210  0060D4  0012               	return		;indir
 16211  0060D6                     __end_of_UART1_rx_vect_isr:
 16212                           	opt callstack 0
 16213                           
 16214 ;; *************** function _UART1_Receive_ISR *****************
 16215 ;; Defined at:
 16216 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;		None
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1  [STACK] void 
 16223 ;; Registers used:
 16224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;Total ram usage:        0 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_UART1_Initialize
 16240 ;;		_UART1_rx_vect_isr
 16241 ;; This function uses a reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text97
 16245  00621A                     __ptext97:
 16246                           	opt callstack 0
 16247  00621A                     _UART1_Receive_ISR:
 16248                           	opt callstack 18
 16249                           
 16250                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16251                           
 16252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16253                           ;incstack = 0
 16254  00621A  0E80               	movlw	low _uart1RxBuffer
 16255  00621C  2435               	addwf	_uart1RxHead,w,c	;volatile
 16256  00621E  6ED9               	movwf	fsr2l,c
 16257  006220  6ADA               	clrf	fsr2h,c
 16258  006222  0E02               	movlw	high _uart1RxBuffer
 16259  006224  22DA               	addwfc	fsr2h,f,c
 16260  006226  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16261  00622C  2A35               	incf	_uart1RxHead,f,c	;volatile
 16262                           
 16263                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16264  00622E  0E3F               	movlw	63
 16265  006230  6435               	cpfsgt	_uart1RxHead,c
 16266  006232  D001               	goto	l6701
 16267                           
 16268                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16269  006234  6A35               	clrf	_uart1RxHead,c	;volatile
 16270  006236                     l6701:
 16271                           
 16272                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16273  006236  2A33               	incf	_uart1RxCount,f,c	;volatile
 16274                           
 16275                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16276  006238  0012               	return		;funcret
 16277  00623A                     __end_of_UART1_Receive_ISR:
 16278                           	opt callstack 0
 16279                           
 16280 ;; *************** function _UART2_tx_vect_isr *****************
 16281 ;; Defined at:
 16282 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    1
 16303 ;; This function calls:
 16304 ;;		Absolute function
 16305 ;;		_UART2_Transmit_ISR
 16306 ;; This function is called by:
 16307 ;;		Interrupt level 2
 16308 ;; This function uses a non-reentrant model
 16309 ;;
 16310                           
 16311                           	psect	text98
 16312  0060D8                     __ptext98:
 16313                           	opt callstack 0
 16314  0060D8                     _UART2_tx_vect_isr:
 16315                           	opt callstack 18
 16316                           
 16317                           ;incstack = 0
 16318  0060D8  EE13  F12A         	lfsr	1,___inthi_sp
 16319                           
 16320                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16321  0060DC  500E               	movf	_UART2_TxInterruptHandler,w,c
 16322  0060DE  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16323  0060E0  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16324  0060E2  B4D8               	btfsc	status,2,c
 16325  0060E4  0011               	retfie		f
 16326                           
 16327                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16328  0060E6  D801               	call	i2u435_48
 16329  0060E8  0011               	retfie		f
 16330  0060EA                     i2u435_48:
 16331  0060EA  0005               	push	
 16332  0060EC  6EFA               	movwf	pclath,c
 16333  0060EE  500E               	movf	_UART2_TxInterruptHandler,w,c
 16334  0060F0  6EFD               	movwf	tosl,c
 16335  0060F2  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 16336  0060F4  6EFE               	movwf	tosh,c
 16337  0060F6  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 16338  0060F8  6EFF               	movwf	tosu,c
 16339  0060FA  50FA               	movf	pclath,w,c
 16340  0060FC  0012               	return		;indir
 16341  0060FE                     __end_of_UART2_tx_vect_isr:
 16342                           	opt callstack 0
 16343                           
 16344 ;; *************** function _UART2_Transmit_ISR *****************
 16345 ;; Defined at:
 16346 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16347 ;; Parameters:    Size  Location     Type
 16348 ;;		None
 16349 ;; Auto vars:     Size  Location     Type
 16350 ;;		None
 16351 ;; Return value:  Size  Location     Type
 16352 ;;                  1  [STACK] void 
 16353 ;; Registers used:
 16354 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16355 ;; Tracked objects:
 16356 ;;		On entry : 0/0
 16357 ;;		On exit  : 3B/39
 16358 ;;		Unchanged: 0/0
 16359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16364 ;;Total ram usage:        0 bytes
 16365 ;; Hardware stack levels used:    1
 16366 ;; This function calls:
 16367 ;;		Nothing
 16368 ;; This function is called by:
 16369 ;;		_UART2_Initialize
 16370 ;;		_UART2_tx_vect_isr
 16371 ;; This function uses a reentrant model
 16372 ;;
 16373                           
 16374                           	psect	text99
 16375  005DD8                     __ptext99:
 16376                           	opt callstack 0
 16377  005DD8                     _UART2_Transmit_ISR:
 16378                           	opt callstack 18
 16379                           
 16380                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16381                           
 16382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16383                           ;incstack = 0
 16384  005DD8  0E40               	movlw	64
 16385  005DDA  6030               	cpfslt	_uart2TxBufferRemaining,c
 16386  005DDC  D010               	goto	l717
 16387                           
 16388                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16389  005DDE  0E40               	movlw	low _uart2TxBuffer
 16390  005DE0  2431               	addwf	_uart2TxTail,w,c	;volatile
 16391  005DE2  6ED9               	movwf	fsr2l,c
 16392  005DE4  6ADA               	clrf	fsr2h,c
 16393  005DE6  0E02               	movlw	high _uart2TxBuffer
 16394  005DE8  22DA               	addwfc	fsr2h,f,c
 16395  005DEA  50DF               	movf	indf2,w,c
 16396  005DEC  013D               	movlb	61	; () banked
 16397  005DEE  6FD2               	movwf	210,b	;volatile
 16398                           
 16399                           ; BSR set to: 61
 16400  005DF0  2A31               	incf	_uart2TxTail,f,c	;volatile
 16401                           
 16402                           ; BSR set to: 61
 16403                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16404  005DF2  0E3F               	movlw	63
 16405  005DF4  6431               	cpfsgt	_uart2TxTail,c
 16406  005DF6  D001               	goto	l6713
 16407                           
 16408                           ; BSR set to: 61
 16409                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16410  005DF8  6A31               	clrf	_uart2TxTail,c	;volatile
 16411  005DFA                     l6713:
 16412                           
 16413                           ; BSR set to: 61
 16414                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16415  005DFA  2A30               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16416                           
 16417                           ;mcc_generated_files/uart2.c: 224:     }
 16418  005DFC  0012               	return	
 16419  005DFE                     l717:
 16420                           
 16421                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16422  005DFE  0139               	movlb	57	; () banked
 16423  005E00  9796               	bcf	150,3,b	;volatile
 16424                           
 16425                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16426  005E02  0012               	return		;funcret
 16427  005E04                     __end_of_UART2_Transmit_ISR:
 16428                           	opt callstack 0
 16429                           
 16430 ;; *************** function _UART2_rx_vect_isr *****************
 16431 ;; Defined at:
 16432 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16433 ;; Parameters:    Size  Location     Type
 16434 ;;		None
 16435 ;; Auto vars:     Size  Location     Type
 16436 ;;		None
 16437 ;; Return value:  Size  Location     Type
 16438 ;;                  1    wreg      void 
 16439 ;; Registers used:
 16440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16441 ;; Tracked objects:
 16442 ;;		On entry : 0/0
 16443 ;;		On exit  : 0/0
 16444 ;;		Unchanged: 0/0
 16445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16450 ;;Total ram usage:        0 bytes
 16451 ;; Hardware stack levels used:    1
 16452 ;; Hardware stack levels required when called:    1
 16453 ;; This function calls:
 16454 ;;		Absolute function
 16455 ;;		_UART2_Receive_ISR
 16456 ;; This function is called by:
 16457 ;;		Interrupt level 2
 16458 ;; This function uses a non-reentrant model
 16459 ;;
 16460                           
 16461                           	psect	text100
 16462  006100                     __ptext100:
 16463                           	opt callstack 0
 16464  006100                     _UART2_rx_vect_isr:
 16465                           	opt callstack 18
 16466                           
 16467                           ;incstack = 0
 16468  006100  EE13  F12A         	lfsr	1,___inthi_sp
 16469                           
 16470                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16471  006104  5011               	movf	_UART2_RxInterruptHandler,w,c
 16472  006106  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16473  006108  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16474  00610A  B4D8               	btfsc	status,2,c
 16475  00610C  0011               	retfie		f
 16476                           
 16477                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16478  00610E  D801               	call	i2u437_48
 16479  006110  0011               	retfie		f
 16480  006112                     i2u437_48:
 16481  006112  0005               	push	
 16482  006114  6EFA               	movwf	pclath,c
 16483  006116  5011               	movf	_UART2_RxInterruptHandler,w,c
 16484  006118  6EFD               	movwf	tosl,c
 16485  00611A  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 16486  00611C  6EFE               	movwf	tosh,c
 16487  00611E  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 16488  006120  6EFF               	movwf	tosu,c
 16489  006122  50FA               	movf	pclath,w,c
 16490  006124  0012               	return		;indir
 16491  006126                     __end_of_UART2_rx_vect_isr:
 16492                           	opt callstack 0
 16493                           
 16494 ;; *************** function _UART2_Receive_ISR *****************
 16495 ;; Defined at:
 16496 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16497 ;; Parameters:    Size  Location     Type
 16498 ;;		None
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;		None
 16501 ;; Return value:  Size  Location     Type
 16502 ;;                  1  [STACK] void 
 16503 ;; Registers used:
 16504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16505 ;; Tracked objects:
 16506 ;;		On entry : 0/0
 16507 ;;		On exit  : 0/0
 16508 ;;		Unchanged: 0/0
 16509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16514 ;;Total ram usage:        0 bytes
 16515 ;; Hardware stack levels used:    1
 16516 ;; This function calls:
 16517 ;;		Nothing
 16518 ;; This function is called by:
 16519 ;;		_UART2_Initialize
 16520 ;;		_UART2_rx_vect_isr
 16521 ;; This function uses a reentrant model
 16522 ;;
 16523                           
 16524                           	psect	text101
 16525  00623A                     __ptext101:
 16526                           	opt callstack 0
 16527  00623A                     _UART2_Receive_ISR:
 16528                           	opt callstack 18
 16529                           
 16530                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16531                           
 16532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16533                           ;incstack = 0
 16534  00623A  0E00               	movlw	low _uart2RxBuffer
 16535  00623C  242F               	addwf	_uart2RxHead,w,c	;volatile
 16536  00623E  6ED9               	movwf	fsr2l,c
 16537  006240  6ADA               	clrf	fsr2h,c
 16538  006242  0E02               	movlw	high _uart2RxBuffer
 16539  006244  22DA               	addwfc	fsr2h,f,c
 16540  006246  006F F743 FFDF     	movff	15824,indf2	;volatile
 16541  00624C  2A2F               	incf	_uart2RxHead,f,c	;volatile
 16542                           
 16543                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16544  00624E  0E3F               	movlw	63
 16545  006250  642F               	cpfsgt	_uart2RxHead,c
 16546  006252  D001               	goto	l6723
 16547                           
 16548                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16549  006254  6A2F               	clrf	_uart2RxHead,c	;volatile
 16550  006256                     l6723:
 16551                           
 16552                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16553  006256  2A2D               	incf	_uart2RxCount,f,c	;volatile
 16554                           
 16555                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16556  006258  0012               	return		;funcret
 16557  00625A                     __end_of_UART2_Receive_ISR:
 16558                           	opt callstack 0
 16559                           
 16560 ;; *************** function _TMR6_ISR *****************
 16561 ;; Defined at:
 16562 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;		None
 16565 ;; Auto vars:     Size  Location     Type
 16566 ;;		None
 16567 ;; Return value:  Size  Location     Type
 16568 ;;                  1    wreg      void 
 16569 ;; Registers used:
 16570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16571 ;; Tracked objects:
 16572 ;;		On entry : 0/0
 16573 ;;		On exit  : 0/0
 16574 ;;		Unchanged: 0/0
 16575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16580 ;;Total ram usage:        1 bytes
 16581 ;; Hardware stack levels used:    1
 16582 ;; Hardware stack levels required when called:    2
 16583 ;; This function calls:
 16584 ;;		_TMR6_CallBack
 16585 ;; This function is called by:
 16586 ;;		Interrupt level 2
 16587 ;; This function uses a non-reentrant model
 16588 ;;
 16589                           
 16590                           	psect	text102
 16591  0062E8                     __ptext102:
 16592                           	opt callstack 0
 16593  0062E8                     _TMR6_ISR:
 16594                           	opt callstack 17
 16595                           
 16596                           ;incstack = 0
 16597  0062E8  0060  F0E4  F059   	movff	btemp,??_TMR6_ISR
 16598  0062EE  EE13  F12A         	lfsr	1,___inthi_sp
 16599                           
 16600                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16601  0062F2  0139               	movlb	57	; () banked
 16602  0062F4  91A9               	bcf	169,0,b	;volatile
 16603                           
 16604                           ; BSR set to: 57
 16605                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16606  0062F6  ECA5  F030         	call	_TMR6_CallBack	;wreg free
 16607  0062FA  0060  F164  F039   	movff	??_TMR6_ISR,btemp
 16608  006300  0011               	retfie		f
 16609  006302                     __end_of_TMR6_ISR:
 16610                           	opt callstack 0
 16611                           
 16612 ;; *************** function _TMR6_CallBack *****************
 16613 ;; Defined at:
 16614 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;		None
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  1  [STACK] void 
 16621 ;; Registers used:
 16622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16623 ;; Tracked objects:
 16624 ;;		On entry : 3F/39
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16632 ;;Total ram usage:        0 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:    1
 16635 ;; This function calls:
 16636 ;;		Absolute function
 16637 ;;		_TMR6_DefaultInterruptHandler
 16638 ;; This function is called by:
 16639 ;;		_TMR6_ISR
 16640 ;; This function uses a reentrant model
 16641 ;;
 16642                           
 16643                           	psect	text103
 16644  00614A                     __ptext103:
 16645                           	opt callstack 0
 16646  00614A                     _TMR6_CallBack:
 16647                           	opt callstack 17
 16648                           
 16649                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16650                           
 16651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16652                           ;incstack = 0
 16653  00614A  0100               	movlb	0	; () banked
 16654  00614C  51F5               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16655  00614E  11F6               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16656  006150  11F7               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16657  006152  B4D8               	btfsc	status,2,c
 16658  006154  0012               	return	
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16662  006156  D801               	call	u363_48
 16663  006158  0012               	return	
 16664  00615A                     u363_48:
 16665  00615A  0005               	push	
 16666  00615C  6EFA               	movwf	pclath,c
 16667  00615E  51F5               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16668  006160  6EFD               	movwf	tosl,c
 16669  006162  51F6               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16670  006164  6EFE               	movwf	tosh,c
 16671  006166  51F7               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16672  006168  6EFF               	movwf	tosu,c
 16673  00616A  50FA               	movf	pclath,w,c
 16674  00616C  0012               	return		;indir
 16675  00616E                     __end_of_TMR6_CallBack:
 16676                           	opt callstack 0
 16677                           
 16678 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16679 ;; Defined at:
 16680 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;		None
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;  i               1  [STACK] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1  [STACK] void 
 16687 ;; Registers used:
 16688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16689 ;; Tracked objects:
 16690 ;;		On entry : 3F/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16698 ;;Total ram usage:        0 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; This function calls:
 16701 ;;		Nothing
 16702 ;; This function is called by:
 16703 ;;		_TMR6_Initialize
 16704 ;;		_TMR6_CallBack
 16705 ;; This function uses a reentrant model
 16706 ;;
 16707                           
 16708                           	psect	text104
 16709  005A88                     __ptext104:
 16710                           	opt callstack 0
 16711  005A88                     _TMR6_DefaultInterruptHandler:
 16712                           	opt callstack 0
 16713                           
 16714                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16715  005A88  52E6               	movf	postinc1,f,c
 16716                           
 16717                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16718                           ;stkvar	_i @ sp[(-1)+0]
 16719                           
 16720                           ;incstack = 0
 16721  005A8A  0EFF               	movlw	-1
 16722  005A8C  6AE3               	clrf	plusw1,c
 16723  005A8E                     l6255:
 16724                           
 16725                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16726                           ;stkvar	_i @ sp[(-1)+0]
 16727  005A8E  0EFF               	movlw	-1
 16728  005A90  50E3               	movf	plusw1,w,c
 16729  005A92  0D02               	mullw	2
 16730  005A94  50F3               	movf	prodl,w,c
 16731  005A96  0FDB               	addlw	low _tickCount
 16732  005A98  6ED9               	movwf	fsr2l,c
 16733  005A9A  6ADA               	clrf	fsr2h,c
 16734  005A9C  50DE               	movf	postinc2,w,c
 16735  005A9E  10DE               	iorwf	postinc2,w,c
 16736  005AA0  B4D8               	btfsc	status,2,c
 16737  005AA2  D00A               	goto	l6259
 16738                           
 16739                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16740                           ;stkvar	_i @ sp[(-1)+0]
 16741  005AA4  0EFF               	movlw	-1
 16742  005AA6  50E3               	movf	plusw1,w,c
 16743  005AA8  0D02               	mullw	2
 16744  005AAA  50F3               	movf	prodl,w,c
 16745  005AAC  0FDB               	addlw	low _tickCount
 16746  005AAE  6ED9               	movwf	fsr2l,c
 16747  005AB0  6ADA               	clrf	fsr2h,c
 16748  005AB2  06DE               	decf	postinc2,f,c
 16749  005AB4  0E00               	movlw	0
 16750  005AB6  5ADD               	subwfb	postdec2,f,c
 16751  005AB8                     l6259:
 16752                           
 16753                           ;mcc_generated_files/tmr6.c: 207:  }
 16754                           ;stkvar	_i @ sp[(-1)+0]
 16755  005AB8  0EFF               	movlw	-1
 16756  005ABA  2AE3               	incf	plusw1,f,c
 16757                           
 16758                           ;stkvar	_i @ sp[(-1)+0]
 16759  005ABC  0EFF               	movlw	-1
 16760  005ABE  006F FF8C  F039    	movff	plusw1,btemp
 16761  005AC4  0E05               	movlw	5
 16762  005AC6  6439               	cpfsgt	btemp,c
 16763  005AC8  D7E2               	goto	l6255
 16764                           
 16765                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16766  005ACA  52E5               	movf	postdec1,f,c
 16767  005ACC  0012               	return		;funcret
 16768  005ACE                     __end_of_TMR6_DefaultInterruptHandler:
 16769                           	opt callstack 0
 16770                           
 16771 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16772 ;; Defined at:
 16773 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16774 ;; Parameters:    Size  Location     Type
 16775 ;;		None
 16776 ;; Auto vars:     Size  Location     Type
 16777 ;;		None
 16778 ;; Return value:  Size  Location     Type
 16779 ;;                  1    wreg      void 
 16780 ;; Registers used:
 16781 ;;		None
 16782 ;; Tracked objects:
 16783 ;;		On entry : 0/0
 16784 ;;		On exit  : 3F/0
 16785 ;;		Unchanged: 0/0
 16786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16791 ;;Total ram usage:        0 bytes
 16792 ;; Hardware stack levels used:    1
 16793 ;; This function calls:
 16794 ;;		Nothing
 16795 ;; This function is called by:
 16796 ;;		Interrupt level 2
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text105
 16801  00635C                     __ptext105:
 16802                           	opt callstack 0
 16803  00635C                     _DMA1_DMASCNT_ISR:
 16804                           	opt callstack 19
 16805                           
 16806                           ;incstack = 0
 16807  00635C  EE13  F12A         	lfsr	1,___inthi_sp
 16808                           
 16809                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16810  006360  0139               	movlb	57	; () banked
 16811  006362  91A2               	bcf	162,0,b	;volatile
 16812                           
 16813                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16814  006364  0100               	movlb	0	; () banked
 16815  006366  97CF               	bcf	_spi_link& (0+255),3,b	;volatile
 16816                           
 16817                           ; BSR set to: 0
 16818                           
 16819                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 16820  006368  92BE               	bcf	16318,1,c	;volatile
 16821                           
 16822                           ; BSR set to: 0
 16823  00636A  0011               	retfie		f
 16824  00636C                     __end_of_DMA1_DMASCNT_ISR:
 16825                           	opt callstack 0
 16826                           
 16827 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16828 ;; Defined at:
 16829 ;;		line 134 in file "mcc_generated_files/dma1.c"
 16830 ;; Parameters:    Size  Location     Type
 16831 ;;		None
 16832 ;; Auto vars:     Size  Location     Type
 16833 ;;		None
 16834 ;; Return value:  Size  Location     Type
 16835 ;;                  1    wreg      void 
 16836 ;; Registers used:
 16837 ;;		None
 16838 ;; Tracked objects:
 16839 ;;		On entry : 0/0
 16840 ;;		On exit  : 3F/39
 16841 ;;		Unchanged: 0/0
 16842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16847 ;;Total ram usage:        0 bytes
 16848 ;; Hardware stack levels used:    1
 16849 ;; This function calls:
 16850 ;;		Nothing
 16851 ;; This function is called by:
 16852 ;;		Interrupt level 2
 16853 ;; This function uses a non-reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text106
 16857  0063B4                     __ptext106:
 16858                           	opt callstack 0
 16859  0063B4                     _DMA1_DMADCNT_ISR:
 16860                           	opt callstack 19
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;incstack = 0
 16864  0063B4  EE13  F12A         	lfsr	1,___inthi_sp
 16865                           
 16866                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 16867  0063B8  0139               	movlb	57	; () banked
 16868  0063BA  93A2               	bcf	162,1,b	;volatile
 16869                           
 16870                           ; BSR set to: 57
 16871  0063BC  0011               	retfie		f
 16872  0063BE                     __end_of_DMA1_DMADCNT_ISR:
 16873                           	opt callstack 0
 16874                           
 16875 ;; *************** function _DMA1_DMAA_ISR *****************
 16876 ;; Defined at:
 16877 ;;		line 144 in file "mcc_generated_files/dma1.c"
 16878 ;; Parameters:    Size  Location     Type
 16879 ;;		None
 16880 ;; Auto vars:     Size  Location     Type
 16881 ;;		None
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  1    wreg      void 
 16884 ;; Registers used:
 16885 ;;		None
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 3F/39
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16895 ;;Total ram usage:        0 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; This function calls:
 16898 ;;		Nothing
 16899 ;; This function is called by:
 16900 ;;		Interrupt level 2
 16901 ;; This function uses a non-reentrant model
 16902 ;;
 16903                           
 16904                           	psect	text107
 16905  0063C0                     __ptext107:
 16906                           	opt callstack 0
 16907  0063C0                     _DMA1_DMAA_ISR:
 16908                           	opt callstack 19
 16909                           
 16910                           ; BSR set to: 57
 16911                           ;incstack = 0
 16912  0063C0  EE13  F12A         	lfsr	1,___inthi_sp
 16913                           
 16914                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 16915  0063C4  0139               	movlb	57	; () banked
 16916  0063C6  97A2               	bcf	162,3,b	;volatile
 16917                           
 16918                           ; BSR set to: 57
 16919  0063C8  0011               	retfie		f
 16920  0063CA                     __end_of_DMA1_DMAA_ISR:
 16921                           	opt callstack 0
 16922                           
 16923 ;; *************** function _DMA1_DMAOR_ISR *****************
 16924 ;; Defined at:
 16925 ;;		line 155 in file "mcc_generated_files/dma1.c"
 16926 ;; Parameters:    Size  Location     Type
 16927 ;;		None
 16928 ;; Auto vars:     Size  Location     Type
 16929 ;;		None
 16930 ;; Return value:  Size  Location     Type
 16931 ;;                  1    wreg      void 
 16932 ;; Registers used:
 16933 ;;		None
 16934 ;; Tracked objects:
 16935 ;;		On entry : 0/0
 16936 ;;		On exit  : 3F/39
 16937 ;;		Unchanged: 0/0
 16938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16943 ;;Total ram usage:        0 bytes
 16944 ;; Hardware stack levels used:    1
 16945 ;; This function calls:
 16946 ;;		Nothing
 16947 ;; This function is called by:
 16948 ;;		Interrupt level 2
 16949 ;; This function uses a non-reentrant model
 16950 ;;
 16951                           
 16952                           	psect	text108
 16953  0063CC                     __ptext108:
 16954                           	opt callstack 0
 16955  0063CC                     _DMA1_DMAOR_ISR:
 16956                           	opt callstack 19
 16957                           
 16958                           ; BSR set to: 57
 16959                           ;incstack = 0
 16960  0063CC  EE13  F12A         	lfsr	1,___inthi_sp
 16961                           
 16962                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 16963  0063D0  0139               	movlb	57	; () banked
 16964  0063D2  95A2               	bcf	162,2,b	;volatile
 16965                           
 16966                           ; BSR set to: 57
 16967  0063D4  0011               	retfie		f
 16968  0063D6                     __end_of_DMA1_DMAOR_ISR:
 16969                           	opt callstack 0
 16970                           
 16971 ;; *************** function _TMR5_ISR *****************
 16972 ;; Defined at:
 16973 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 16974 ;; Parameters:    Size  Location     Type
 16975 ;;		None
 16976 ;; Auto vars:     Size  Location     Type
 16977 ;;		None
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  1    wreg      void 
 16980 ;; Registers used:
 16981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16990 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16991 ;;Total ram usage:        3 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; Hardware stack levels required when called:    2
 16994 ;; This function calls:
 16995 ;;		_TMR5_CallBack
 16996 ;;		_TMR5_WriteTimer
 16997 ;; This function is called by:
 16998 ;;		Interrupt level 2
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           	psect	text109
 17003  005918                     __ptext109:
 17004                           	opt callstack 0
 17005  005918                     _TMR5_ISR:
 17006                           	opt callstack 17
 17007                           
 17008                           ; BSR set to: 57
 17009                           ;incstack = 0
 17010  005918  0060  F110  F05C   	movff	btemp+11,??_TMR5_ISR+2
 17011  00591E  EE13  F12A         	lfsr	1,___inthi_sp
 17012                           
 17013                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17014  005922  0139               	movlb	57	; () banked
 17015  005924  9DA8               	bcf	168,6,b	;volatile
 17016                           
 17017                           ; BSR set to: 57
 17018                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17019  005926  0060  F097  FFE6   	movff	_timer5ReloadVal,postinc1
 17020  00592C  0060  F09B  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17021  005932  EC88  F02D         	call	_TMR5_WriteTimer	;wreg free
 17022                           
 17023                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17024  005936  0100               	movlb	0	; () banked
 17025  005938  51C1               	movf	(_V+97)& (0+255),w,b	;volatile
 17026  00593A  6E5A               	movwf	??_TMR5_ISR& (0+255),c
 17027  00593C  6A5B               	clrf	(??_TMR5_ISR+1)& (0+255),c
 17028  00593E  0E05               	movlw	5
 17029  005940  265A               	addwf	??_TMR5_ISR,f,c
 17030  005942  0E00               	movlw	0
 17031  005944  225B               	addwfc	??_TMR5_ISR+1,f,c
 17032  005946  4A23               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17033  005948  2A24               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17034  00594A  505A               	movf	??_TMR5_ISR,w,c
 17035  00594C  5C23               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17036  00594E  505B               	movf	??_TMR5_ISR+1,w,c
 17037  005950  5824               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17038  005952  A0D8               	btfss	status,0,c
 17039  005954  D004               	goto	i2l1145
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17043  005956  ECB7  F030         	call	_TMR5_CallBack	;wreg free
 17044                           
 17045                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17046  00595A  6A23               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17047  00595C  6A24               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17048  00595E                     i2l1145:
 17049  00595E  0060  F170  F044   	movff	??_TMR5_ISR+2,btemp+11
 17050  005964  0011               	retfie		f
 17051  005966                     __end_of_TMR5_ISR:
 17052                           	opt callstack 0
 17053                           
 17054 ;; *************** function _TMR5_WriteTimer *****************
 17055 ;; Defined at:
 17056 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;  timerVal        2  [STACK] unsigned short 
 17059 ;; Auto vars:     Size  Location     Type
 17060 ;;		None
 17061 ;; Return value:  Size  Location     Type
 17062 ;;                  1  [STACK] void 
 17063 ;; Registers used:
 17064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17065 ;; Tracked objects:
 17066 ;;		On entry : 3F/39
 17067 ;;		On exit  : 0/0
 17068 ;;		Unchanged: 0/0
 17069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17074 ;;Total ram usage:        0 bytes
 17075 ;; Hardware stack levels used:    1
 17076 ;; This function calls:
 17077 ;;		Nothing
 17078 ;; This function is called by:
 17079 ;;		_TMR5_ISR
 17080 ;; This function uses a reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text110
 17084  005B10                     __ptext110:
 17085                           	opt callstack 0
 17086  005B10                     _TMR5_WriteTimer:
 17087                           	opt callstack 18
 17088                           
 17089                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17090                           
 17091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17092                           ;incstack = 0
 17093  005B10  A49A               	btfss	16282,2,c	;volatile
 17094  005B12  D00F               	goto	l6739
 17095                           
 17096                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17097  005B14  909A               	bcf	16282,0,c	;volatile
 17098                           
 17099                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17100                           ;stkvar	_timerVal @ sp[(0)+-2]
 17101  005B16  0EFF               	movlw	255
 17102  005B18  24E1               	addwf	fsr1l,w,c
 17103  005B1A  6ED9               	movwf	fsr2l,c
 17104  005B1C  0EFF               	movlw	255
 17105  005B1E  20E2               	addwfc	fsr1h,w,c
 17106  005B20  6EDA               	movwf	fsr2h,c
 17107  005B22  50DF               	movf	indf2,w,c
 17108  005B24  6E99               	movwf	16281,c	;volatile
 17109                           
 17110                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17111                           ;stkvar	_timerVal @ sp[(0)+-2]
 17112  005B26  0EFE               	movlw	-2
 17113  005B28  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17114                           
 17115                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17116  005B2E  809A               	bsf	16282,0,c	;volatile
 17117                           
 17118                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17119  005B30  D00C               	goto	l1128
 17120  005B32                     l6739:
 17121                           
 17122                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17123                           ;stkvar	_timerVal @ sp[(0)+-2]
 17124  005B32  0EFF               	movlw	255
 17125  005B34  24E1               	addwf	fsr1l,w,c
 17126  005B36  6ED9               	movwf	fsr2l,c
 17127  005B38  0EFF               	movlw	255
 17128  005B3A  20E2               	addwfc	fsr1h,w,c
 17129  005B3C  6EDA               	movwf	fsr2h,c
 17130  005B3E  50DF               	movf	indf2,w,c
 17131  005B40  6E99               	movwf	16281,c	;volatile
 17132                           
 17133                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17134                           ;stkvar	_timerVal @ sp[(0)+-2]
 17135  005B42  0EFE               	movlw	-2
 17136  005B44  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17137  005B4A                     l1128:
 17138                           
 17139                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17140  005B4A  52E5               	movf	postdec1,f,c
 17141  005B4C  52E5               	movf	postdec1,f,c
 17142  005B4E  0012               	return		;funcret
 17143  005B50                     __end_of_TMR5_WriteTimer:
 17144                           	opt callstack 0
 17145                           
 17146 ;; *************** function _TMR5_CallBack *****************
 17147 ;; Defined at:
 17148 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;		None
 17151 ;; Auto vars:     Size  Location     Type
 17152 ;;		None
 17153 ;; Return value:  Size  Location     Type
 17154 ;;                  1  [STACK] void 
 17155 ;; Registers used:
 17156 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17157 ;; Tracked objects:
 17158 ;;		On entry : 3F/0
 17159 ;;		On exit  : 0/0
 17160 ;;		Unchanged: 0/0
 17161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17166 ;;Total ram usage:        0 bytes
 17167 ;; Hardware stack levels used:    1
 17168 ;; Hardware stack levels required when called:    1
 17169 ;; This function calls:
 17170 ;;		Absolute function
 17171 ;;		_TMR5_DefaultInterruptHandler
 17172 ;; This function is called by:
 17173 ;;		_TMR5_ISR
 17174 ;; This function uses a reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text111
 17178  00616E                     __ptext111:
 17179                           	opt callstack 0
 17180  00616E                     _TMR5_CallBack:
 17181                           	opt callstack 17
 17182                           
 17183                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17184                           
 17185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17186                           ;incstack = 0
 17187  00616E  0100               	movlb	0	; () banked
 17188  006170  51F2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17189  006172  11F3               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17190  006174  11F4               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17191  006176  B4D8               	btfsc	status,2,c
 17192  006178  0012               	return	
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17196  00617A  D801               	call	u366_48
 17197  00617C  0012               	return	
 17198  00617E                     u366_48:
 17199  00617E  0005               	push	
 17200  006180  6EFA               	movwf	pclath,c
 17201  006182  51F2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17202  006184  6EFD               	movwf	tosl,c
 17203  006186  51F3               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17204  006188  6EFE               	movwf	tosh,c
 17205  00618A  51F4               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17206  00618C  6EFF               	movwf	tosu,c
 17207  00618E  50FA               	movf	pclath,w,c
 17208  006190  0012               	return		;indir
 17209  006192                     __end_of_TMR5_CallBack:
 17210                           	opt callstack 0
 17211                           
 17212 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17213 ;; Defined at:
 17214 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;		None
 17217 ;; Auto vars:     Size  Location     Type
 17218 ;;		None
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1  [STACK] void 
 17221 ;; Registers used:
 17222 ;;		wreg, status,2, status,0, btemp+11
 17223 ;; Tracked objects:
 17224 ;;		On entry : 3F/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17232 ;;Total ram usage:        0 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; This function calls:
 17235 ;;		Nothing
 17236 ;; This function is called by:
 17237 ;;		_TMR5_Initialize
 17238 ;;		_TMR5_CallBack
 17239 ;; This function uses a reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text112
 17243  006302                     __ptext112:
 17244                           	opt callstack 0
 17245  006302                     _TMR5_DefaultInterruptHandler:
 17246                           	opt callstack 17
 17247                           
 17248                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17249                           
 17250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17251                           ;incstack = 0
 17252  006302  A0BE               	btfss	16318,0,c	;volatile
 17253  006304  D002               	goto	u340_40
 17254  006306  0E01               	movlw	1
 17255  006308  D001               	goto	u340_46
 17256  00630A                     u340_40:
 17257  00630A  0E00               	movlw	0
 17258  00630C                     u340_46:
 17259  00630C  0AFF               	xorlw	255
 17260  00630E  6E44               	movwf	btemp+11,c
 17261  006310  50BE               	movf	16318,w,c	;volatile
 17262  006312  1844               	xorwf	btemp+11,w,c
 17263  006314  0BFE               	andlw	-2
 17264  006316  1844               	xorwf	btemp+11,w,c
 17265  006318  6EBE               	movwf	16318,c	;volatile
 17266                           
 17267                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17268  00631A  0012               	return		;funcret
 17269  00631C                     __end_of_TMR5_DefaultInterruptHandler:
 17270                           	opt callstack 0
 17271                           
 17272                           ;
 17273                           ; Interrupt Vector Table @ 0x8
 17274                           ;
 17275                           
 17276                           	psect	ivt0x8
 17277  000008                     __pivt0x8:
 17278                           	opt callstack 0
 17279  000008                     ivt0x8_base:
 17280                           	opt callstack 0
 17281                           
 17282                           ; Vector 0 : SWINT
 17283  000008  1901               	dw	_Default_ISR shr (0+2)
 17284                           
 17285                           ; Vector 1 : HLVD
 17286  00000A  1901               	dw	_Default_ISR shr (0+2)
 17287                           
 17288                           ; Vector 2 : OSF
 17289  00000C  1901               	dw	_Default_ISR shr (0+2)
 17290                           
 17291                           ; Vector 3 : CSW
 17292  00000E  1901               	dw	_Default_ISR shr (0+2)
 17293                           
 17294                           ; Vector 4 : NVM
 17295  000010  1901               	dw	_Default_ISR shr (0+2)
 17296                           
 17297                           ; Vector 5 : SCAN
 17298  000012  1901               	dw	_Default_ISR shr (0+2)
 17299                           
 17300                           ; Vector 6 : CRC
 17301  000014  1901               	dw	_Default_ISR shr (0+2)
 17302                           
 17303                           ; Vector 7 : IOC
 17304  000016  1901               	dw	_Default_ISR shr (0+2)
 17305                           
 17306                           ; Vector 8 : INT0
 17307  000018  18DF               	dw	_INT0_ISR shr (0+2)
 17308                           
 17309                           ; Vector 9 : ZCD
 17310  00001A  1901               	dw	_Default_ISR shr (0+2)
 17311                           
 17312                           ; Vector 10 : AD
 17313  00001C  1760               	dw	_ADCC_ISR shr (0+2)
 17314                           
 17315                           ; Vector 11 : ADT
 17316  00001E  1901               	dw	_Default_ISR shr (0+2)
 17317                           
 17318                           ; Vector 12 : CMP1
 17319  000020  1901               	dw	_Default_ISR shr (0+2)
 17320                           
 17321                           ; Vector 13 : SMT1
 17322  000022  1901               	dw	_Default_ISR shr (0+2)
 17323                           
 17324                           ; Vector 14 : SMT1PRA
 17325  000024  1901               	dw	_Default_ISR shr (0+2)
 17326                           
 17327                           ; Vector 15 : SMT1PRW
 17328  000026  1901               	dw	_Default_ISR shr (0+2)
 17329                           
 17330                           ; Vector 16 : DMA1SCNT
 17331  000028  18D7               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17332                           
 17333                           ; Vector 17 : DMA1DCNT
 17334  00002A  18ED               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17335                           
 17336                           ; Vector 18 : DMA1OR
 17337  00002C  18F3               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17338                           
 17339                           ; Vector 19 : DMA1A
 17340  00002E  18F0               	dw	_DMA1_DMAA_ISR shr (0+2)
 17341                           
 17342                           ; Vector 20 : SPI1RX
 17343  000030  1901               	dw	_Default_ISR shr (0+2)
 17344                           
 17345                           ; Vector 21 : SPI1TX
 17346  000032  1901               	dw	_Default_ISR shr (0+2)
 17347                           
 17348                           ; Vector 22 : SPI1
 17349  000034  1901               	dw	_Default_ISR shr (0+2)
 17350                           
 17351                           ; Vector 23 : I2C1RX
 17352  000036  1901               	dw	_Default_ISR shr (0+2)
 17353                           
 17354                           ; Vector 24 : I2C1TX
 17355  000038  1901               	dw	_Default_ISR shr (0+2)
 17356                           
 17357                           ; Vector 25 : I2C1
 17358  00003A  1901               	dw	_Default_ISR shr (0+2)
 17359                           
 17360                           ; Vector 26 : I2C1E
 17361  00003C  1901               	dw	_Default_ISR shr (0+2)
 17362                           
 17363                           ; Vector 27 : U1RX
 17364  00003E  182C               	dw	_UART1_rx_vect_isr shr (0+2)
 17365                           
 17366                           ; Vector 28 : U1TX
 17367  000040  1822               	dw	_UART1_tx_vect_isr shr (0+2)
 17368                           
 17369                           ; Vector 29 : U1E
 17370  000042  1901               	dw	_Default_ISR shr (0+2)
 17371                           
 17372                           ; Vector 30 : U1
 17373  000044  1901               	dw	_Default_ISR shr (0+2)
 17374                           
 17375                           ; Vector 31 : TMR0
 17376  000046  1901               	dw	_Default_ISR shr (0+2)
 17377                           
 17378                           ; Vector 32 : TMR1
 17379  000048  1901               	dw	_Default_ISR shr (0+2)
 17380                           
 17381                           ; Vector 33 : TMR1G
 17382  00004A  1901               	dw	_Default_ISR shr (0+2)
 17383                           
 17384                           ; Vector 34 : TMR2
 17385  00004C  1901               	dw	_Default_ISR shr (0+2)
 17386                           
 17387                           ; Vector 35 : CCP1
 17388  00004E  1901               	dw	_Default_ISR shr (0+2)
 17389                           
 17390                           ; Vector 36 : Undefined
 17391  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17392                           
 17393                           ; Vector 37 : NCO1
 17394  000052  1901               	dw	_Default_ISR shr (0+2)
 17395                           
 17396                           ; Vector 38 : CWG1
 17397  000054  1901               	dw	_Default_ISR shr (0+2)
 17398                           
 17399                           ; Vector 39 : CLC1
 17400  000056  1901               	dw	_Default_ISR shr (0+2)
 17401                           
 17402                           ; Vector 40 : INT1
 17403  000058  18E3               	dw	_INT1_ISR shr (0+2)
 17404                           
 17405                           ; Vector 41 : CMP2
 17406  00005A  1901               	dw	_Default_ISR shr (0+2)
 17407                           
 17408                           ; Vector 42 : DMA2SCNT
 17409  00005C  1901               	dw	_Default_ISR shr (0+2)
 17410                           
 17411                           ; Vector 43 : DMA2DCNT
 17412  00005E  1901               	dw	_Default_ISR shr (0+2)
 17413                           
 17414                           ; Vector 44 : DMA2OR
 17415  000060  1901               	dw	_Default_ISR shr (0+2)
 17416                           
 17417                           ; Vector 45 : DMA2A
 17418  000062  1901               	dw	_Default_ISR shr (0+2)
 17419                           
 17420                           ; Vector 46 : I2C2RX
 17421  000064  1901               	dw	_Default_ISR shr (0+2)
 17422                           
 17423                           ; Vector 47 : I2C2TX
 17424  000066  1901               	dw	_Default_ISR shr (0+2)
 17425                           
 17426                           ; Vector 48 : I2C2
 17427  000068  1901               	dw	_Default_ISR shr (0+2)
 17428                           
 17429                           ; Vector 49 : I2C2E
 17430  00006A  1901               	dw	_Default_ISR shr (0+2)
 17431                           
 17432                           ; Vector 50 : U2RX
 17433  00006C  1840               	dw	_UART2_rx_vect_isr shr (0+2)
 17434                           
 17435                           ; Vector 51 : U2TX
 17436  00006E  1836               	dw	_UART2_tx_vect_isr shr (0+2)
 17437                           
 17438                           ; Vector 52 : U2E
 17439  000070  1901               	dw	_Default_ISR shr (0+2)
 17440                           
 17441                           ; Vector 53 : U2
 17442  000072  1901               	dw	_Default_ISR shr (0+2)
 17443                           
 17444                           ; Vector 54 : TMR3
 17445  000074  1901               	dw	_Default_ISR shr (0+2)
 17446                           
 17447                           ; Vector 55 : TMR3G
 17448  000076  1901               	dw	_Default_ISR shr (0+2)
 17449                           
 17450                           ; Vector 56 : TMR4
 17451  000078  1901               	dw	_Default_ISR shr (0+2)
 17452                           
 17453                           ; Vector 57 : CCP2
 17454  00007A  1901               	dw	_Default_ISR shr (0+2)
 17455                           
 17456                           ; Vector 58 : Undefined
 17457  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17458                           
 17459                           ; Vector 59 : CWG2
 17460  00007E  1901               	dw	_Default_ISR shr (0+2)
 17461                           
 17462                           ; Vector 60 : CLC2
 17463  000080  1901               	dw	_Default_ISR shr (0+2)
 17464                           
 17465                           ; Vector 61 : INT2
 17466  000082  18E7               	dw	_INT2_ISR shr (0+2)
 17467                           
 17468                           ; Vector 62 : Undefined
 17469  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17470                           
 17471                           ; Vector 63 : Undefined
 17472  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17473                           
 17474                           ; Vector 64 : Undefined
 17475  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17476                           
 17477                           ; Vector 65 : Undefined
 17478  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17479                           
 17480                           ; Vector 66 : Undefined
 17481  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17482                           
 17483                           ; Vector 67 : Undefined
 17484  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17485                           
 17486                           ; Vector 68 : Undefined
 17487  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17488                           
 17489                           ; Vector 69 : Undefined
 17490  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17491                           
 17492                           ; Vector 70 : TMR5
 17493  000094  1646               	dw	_TMR5_ISR shr (0+2)
 17494                           
 17495                           ; Vector 71 : TMR5G
 17496  000096  1901               	dw	_Default_ISR shr (0+2)
 17497                           
 17498                           ; Vector 72 : TMR6
 17499  000098  18BA               	dw	_TMR6_ISR shr (0+2)
 17500                           
 17501                           ; Vector 73 : CCP3
 17502  00009A  1901               	dw	_Default_ISR shr (0+2)
 17503                           
 17504                           ; Vector 74 : CWG3
 17505  00009C  1901               	dw	_Default_ISR shr (0+2)
 17506                           
 17507                           ; Vector 75 : CLC3
 17508  00009E  1901               	dw	_Default_ISR shr (0+2)
 17509                           
 17510                           ; Vector 76 : Undefined
 17511  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17512                           
 17513                           ; Vector 77 : Undefined
 17514  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17515                           
 17516                           ; Vector 78 : Undefined
 17517  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17518                           
 17519                           ; Vector 79 : Undefined
 17520  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17521                           
 17522                           ; Vector 80 : CCP4
 17523  0000A8  1901               	dw	_Default_ISR shr (0+2)
 17524                           
 17525                           ; Vector 81 : CLC4
 17526  0000AA  1901               	dw	_Default_ISR shr (0+2)
 17527  0000AC                     ivt0x8_undefint:
 17528                           	opt callstack 0
 17529  0000AC  00FF               	reset	
 17530                           
 17531                           	psect	text113
 17532  000000                     __ptext113:
 17533                           	opt callstack 0
 17534                           
 17535                           	psect	rparam
 17536  0000                     
 17537                           	psect	temp
 17538  000039                     btemp:
 17539                           	opt callstack 0
 17540  000039                     	ds	32
 17541  0000                     wtemp0	set	btemp
 17542  0000                     wtemp1	set	btemp+2
 17543  0000                     wtemp2	set	btemp+4
 17544  0000                     wtemp3	set	btemp+6
 17545  0000                     wtemp4	set	btemp+8
 17546  0000                     wtemp5	set	btemp+10
 17547  0000                     wtemp8	set	btemp+1
 17548  0000                     ttemp0	set	btemp
 17549  0000                     ttemp1	set	btemp+3
 17550  0000                     ttemp2	set	btemp+6
 17551  0000                     ttemp3	set	btemp+9
 17552  0000                     ttemp5	set	btemp+1
 17553  0000                     ttemp6	set	btemp+4
 17554  0000                     ttemp7	set	btemp+8
 17555  0000                     ltemp0	set	btemp
 17556  0000                     ltemp1	set	btemp+4
 17557  0000                     ltemp2	set	btemp+8
 17558  0000                     lltemp0	set	btemp
 17559  0000                     lltemp1	set	btemp+8
 17560  0000                     lltemp2	set	btemp+16
 17561  0000                     lltemp3	set	btemp+24
 17562                           tosu	equ	0x3FFF
 17563                           tosh	equ	0x3FFE
 17564                           tosl	equ	0x3FFD
 17565                           stkptr	equ	0x3FFC
 17566                           pclatu	equ	0x3FFB
 17567                           pclath	equ	0x3FFA
 17568                           pcl	equ	0x3FF9
 17569                           tblptru	equ	0x3FF8
 17570                           tblptrh	equ	0x3FF7
 17571                           tblptrl	equ	0x3FF6
 17572                           tablat	equ	0x3FF5
 17573                           prodh	equ	0x3FF4
 17574                           prodl	equ	0x3FF3
 17575                           indf0	equ	0x3FEF
 17576                           postinc0	equ	0x3FEE
 17577                           postdec0	equ	0x3FED
 17578                           preinc0	equ	0x3FEC
 17579                           plusw0	equ	0x3FEB
 17580                           fsr0h	equ	0x3FEA
 17581                           fsr0l	equ	0x3FE9
 17582                           wreg	equ	0x3FE8
 17583                           indf1	equ	0x3FE7
 17584                           postinc1	equ	0x3FE6
 17585                           postdec1	equ	0x3FE5
 17586                           preinc1	equ	0x3FE4
 17587                           plusw1	equ	0x3FE3
 17588                           fsr1h	equ	0x3FE2
 17589                           fsr1l	equ	0x3FE1
 17590                           bsr	equ	0x3FE0
 17591                           indf2	equ	0x3FDF
 17592                           postinc2	equ	0x3FDE
 17593                           postdec2	equ	0x3FDD
 17594                           preinc2	equ	0x3FDC
 17595                           plusw2	equ	0x3FDB
 17596                           fsr2h	equ	0x3FDA
 17597                           fsr2l	equ	0x3FD9
 17598                           status	equ	0x3FD8


Data Sizes:
    Strings     195
    Constant    0
    Data        363
    BSS         547
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      4      61
    BANK0           160      0     159
    BANK1           256      0     248
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    a	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_15(CODE[26]), STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4419_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16639.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16639.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    S3729response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16627.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3729response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16627.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    m_link	PTR enum E16173 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42738
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1978
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8432
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     939
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    1083
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   19158
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9633
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9463
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9432
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8207
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8108
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7869
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     252
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      31
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              1 COMRAM     3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9F       5       99.4%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      4      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     392      58        0.0%
DATA                 0      0     392       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 22 04:34:12 2019

                    _SPI1_Exchange8bit 625A                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 5FE8              __end_of_UART2_is_rx_ready 63EE  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 63DE                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 01C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H53 0386                                    l194 6342  
                                  l572 5C34                                    l717 5DFE  
                                  l851 6268                                    l579 5BA4  
                                  l692 5BF6                                    l597 5DD2  
                                  l699 5B66                                    _GIE 01FE97  
                                  _abs 59FC                                    _pad 4A4A  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 61B4  
                         _run_checksum 5D26                     _UART1_Transmit_ISR 5DAC  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 61D6  
                         __CFG_ZCD$OFF 000000                                   l1128 5B4A  
                                 l1252 2304                                   l1228 2102  
                                 l1254 2308                                   l1238 21BE  
                                 l1351 5878                                   l1264 24FE  
                                 l1249 22B6                                   l1258 23FA  
                                 l1268 256C                                   l1269 2598  
                                 l1630 3444                                   l1278 25B8  
                                 l2600 5A3C                                   l1288 25D0  
                                 l1705 442C                                   l1491 5586  
                                 l2622 4C60                                   l1487 51E6  
                                 l1808 5CD4                                   l1905 2AEA  
                                 l1577 2B94                                   l1684 40BC  
                                 l2662 4A40                                   l1839 4AA6  
                                 l5411 46D8                                   l1859 3066  
                                 l6205 5C0C                                   l1886 3AFA  
                                 l5427 480C                                   l5419 4760  
                                 l5355 5A2C                                   l6411 4488  
                                 l5373 3D84                                   l6229 5BCE  
                                 l6325 5D34                                   l6333 5090  
                                 l6255 5A8E                                   l5391 3E9C  
                                 l5367 3D30                                   l6343 50A6  
                                 l6431 44E0                                   l8105 55AC  
                                 l6353 50B2                                   l6337 509A  
                                 l6441 4502                                   l6417 44A6  
                                 l5801 5B86                                   l6259 5AB8  
                                 l8107 55D8                                   l5379 3DCA  
                                 l8131 3056                                   l6267 5CDE  
                                 l6371 5100                                   l6363 50F0  
                                 l6355 50DE                                   l6347 50AA  
                                 l6339 50A2                                   l6443 4528  
                                 l6531 4662                                   l5803 5B88  
                                 l6701 6236                                   l8053 4B8E  
                                 l8213 3B9C                                   l8205 3B30  
                                 l8301 2A9C                                   l9005 2E5E  
                                 l6517 4616                                   l6461 454C  
                                 l8063 5214                                   l8143 30BE  
                                 l8223 3C52                                   l5583 494E  
                                 l9007 2E62                                   l6463 4566  
                                 l5815 5E26                                   l6713 5DFA  
                                 l8073 5474                                   l8065 5236  
                                 l8153 32D0                                   l8209 3B6C  
                                 l6377 5112                                   l9041 2F0C  
                                 l5761 5BC4                                   l6529 4630  
                                 l6723 6256                                   l8083 4A76  
                                 l8139 30A0                                   l8227 3C8E  
                                 l8219 3C26                                   l5579 491E  
                                 l8251 2724                                   l8323 37BC  
                                 l5675 588A                                   l6379 5138  
                                 l9043 2F14                                   l9019 2E8A  
                                 l5763 5BC6                                   l6491 459E  
                                 l8077 54B2                                   l8093 4AEC  
                                 l8173 3382                                   l9045 2F18  
                                 l9037 2EFA                                   l9053 2F34  
                                 l6493 45DC                                   l6397 444A  
                                 l8501 440C                                   l9213 2454  
                                 l9133 2222                                   l8087 4A9E  
                                 l8263 285A                                   l8343 3992  
                                 l8335 38E4                                   l9047 2F20  
                                 l9039 2F08                                   l9055 2F76  
                                 l6479 4584                                   l5775 5E50  
                                 l9151 2286                                   l8097 4B36  
                                 l8089 4AB0                                   l8177 33BE  
                                 l8329 387A                                   l8433 52DE  
                                 l5873 6142                                   l9049 2F26  
                                 l9225 24C0                                   l9241 252E  
                                 l6739 5B32                                   l6691 5DCE  
                                 l8291 2A7C                                   l8275 2980  
                                 l8259 2808                                   l8355 53E6  
                                 l9155 228E                                   l9251 2570  
                                 l8189 3A7C                                   l8285 2A28  
                                 l8357 5428                                   l8701 35FE  
                                 l9229 24D0                                   l9173 22EC  
                                 l9149 2282                                   l9085 20EC  
                                 l8295 2A80                                   l8623 340C  
                                 l8383 4DE0                                   l8463 4308  
                                 l8455 4258                                   l9239 2502  
                                 l9159 22A6                                   l9191 239C  
                                 l9087 20F4                                   l8713 3626  
                                 l8481 438A                                   l9257 25BC  
                                 l9169 22D6                                   l9089 2108  
                                 l8651 34AA                                   l8379 4D6E  
                                 l8475 435C                                   l8467 4322  
                                 l8811 408E                                   l8803 4052  
                                 l9259 25D4                                   l8733 36A2  
                                 l8493 43DE                                   l8485 43A4  
                                 l8477 4384                                   l8821 40DC  
                                 l9269 2642                                   l9197 23E0  
                                 l9189 236A                                   l8743 36C8  
                                 l8671 350C                                   l8663 34DE  
                                 l8639 346A                                   l8751 3712  
                                 l8495 4406                                   l8737 36B8  
                                 l8649 349E                                   l8825 40F2  
                                 l8931 2C1A                                   l8739 36BC  
                                 l8691 35AC                                   l8683 3550  
                                 l8675 351C                                   l8667 34FC  
                                 l8851 4156                                   l8771 3F80  
                                 l8763 3F52                                   l8909 2BBA  
                                 l8749 36D0                                   l8853 415A  
                                 l8829 40FA                                   l8781 3FB4  
                                 l8861 4178                                   l8943 2C88  
                                 l8935 2C38                                   l8919 2BE6  
                                 l8687 357C                                   l8679 352C  
                                 l8855 4162                                   l8839 411A  
                                 l8783 3FC6                                   l8863 41BA  
                                 l8857 416A                                   l8849 4148  
                                 l8793 4008                                   l8955 2D06  
                                 l8947 2CB8                                   l8939 2C5C  
                                 l8875 2AF8                                   l8699 35FA  
                                 l8981 2D72                                   l8957 2D0A  
                                 l8797 4020                                   l8799 402C  
                                 STR_1 206F                                   STR_2 209D  
                                 l8993 2DE0                                   l8985 2D90  
                                 l8969 2D3E                                   l8889 2B46  
                                 STR_3 20B5                                   STR_4 2080  
                                 STR_5 2035                                   STR_6 208F  
                                 l8997 2E10                                   l8989 2DB4  
                                 STR_7 20AF                                   STR_8 20A9  
                                 STR_9 205D                                   u3010 49F6  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u3300 568E                                   u2501 3D8A  
                                 u2510 3DC4                                   u2520 3DF6  
                                 u5000 2774                                   u2610 4728  
                                 u2450 5A10                                   u2540 3ED4  
                                 u2620 475A                                   u5020 28B2  
                                 u3325 56C2                                   u3326 56C4  
                                 u3318 5690                                   u2470 3D2A  
                                 u2630 478C                                   u2560 3F26  
                                 u2490 3D80                                   u2650 4844  
                                 u5130 52CE                                   u3450 50EC  
                                 u5140 4252                                   u2670 4896  
                                 u2590 46D2                                   u4610 4BFE  
                                 u5090 3A06                                   _T6PR 003F93  
                                 u4620 5264                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   u4710 2FB8  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4720 2FBA                                   _PMD4 0039C4  
                                 u4801 3314                                   _PMD5 0039C5  
                                 u4810 332A                                   _PMD6 0039C6  
                                 u4627 5256                                   u4811 3328  
                                 _PMD7 0039C7                                   u4820 333E  
                                 u4740 302A                                   u4590 4B82  
                                 u4830 3342                                   u5375 3650  
                                 u5471 4046                                   u4760 303C  
                                 u4920 3B92                                   u5385 3660  
                                 u5377 3654                                   u4850 3358  
                                 u4930 3BD8                                   u5395 3670  
                                 u5387 3664                                   u4780 308C  
                                 u5805 2EC4                                   u5397 3674  
                                 u4790 32E4                                   u5815 2ED4  
                                 u5807 2EC8                                   u4960 3CB4  
                                 u4937 3BCA                                   u5817 2ED8  
                                 u5795 2EB4                                   u5797 2EB8  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 61F8  
                     __end_of_ADCC_ISR 5DAC                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01D0                                   _ctoa 558E  
                                 _main 20C6                                   _dtoa 2F88  
                                 _seed 01F0                                   _prec 001F  
                                 _nout 00FB                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3A10                                   btemp 0039  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0025  
            __end_of_SPI1_Exchange8bit 6278                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 60B0                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 0059  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 638A  
                     __end_of_INT1_ISR 639A                       __end_of_INT2_ISR 63AA  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 51EE  
        __end_of_OSCILLATOR_Initialize 6348                                  PRLOCK 0039EF  
                      __end_of___aodiv 3F4E                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 48BA                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2035  
                                STR_11 2001                                  STR_12 204A  
                                STR_13 20A9                                  STR_21 20BB  
                                STR_14 2001                                  STR_23 20BE  
                                STR_15 201B                                  STR_16 20A6  
                                STR_25 20BE                                  STR_17 20C1  
                        __CFG_WDTE$OFF 000000                                  STR_19 20BB  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 0059  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 6404      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 6088                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5966                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 6302                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002A                                  _flags 0021  
                                _fputc 4B5E             __size_of_send_lcd_cmd_long 0028  
                                _fputs 5464                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0059                                  _srand 5CF2  
                                _width 001D                                  _putch 62CC  
             _INT1_SetInterruptHandler 6010                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 0039                                  ltemp1 003D  
                                ltemp2 0041               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 0039                                  ttemp1 003C  
                                ttemp2 003F                                  ttemp3 0042  
                                ttemp5 003A                                  ttemp6 003D  
                                ttemp7 0041                         _secs_gem_state 508E  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5F70  
          _UART1_SetRxInterruptHandler 5F48                                  wtemp0 0039  
                                wtemp1 003B                                  wtemp2 003D  
                                wtemp3 003F                                  wtemp4 0041  
                                wtemp5 0043                                  wtemp8 003A  
                      __end_of_sprintf 508E                        __end_of_strncmp 4A4A  
                  ??_UART1_tx_vect_isr 0059              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 60D6               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5A42                  __end_of_ringBufS_init 5ED0  
                      __initialization 4EF6                      _UART2_rx_vect_isr 6100  
                         __end_of_ctoa 5616                           __end_of_main 2646  
                         __end_of_dtoa 3408                           __end_of_stoa 3CCE  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 0059             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 5FC0                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 0010   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 0059              __end_of_UART1_tx_vect_isr 60AE  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5F70  
                     _UART1_Initialize 56E6                      _UART2_tx_vect_isr 60D8  
                   _UART2_Transmit_ISR 5DD8                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 0059  
                               _MD1SRC 003CFC                 __end_of_secs_gem_state 5144  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1145 595E                         __CFG_WDTCCS$SC 000000  
                               u125_48 61C2                                 u127_48 61E4  
                               u129_48 6206                                 u340_40 630A  
                               u340_46 630C                                 _SCANPR 0039F7  
                               u363_48 615A                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u366_48 617E           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 5918  
                  ??_UART2_tx_vect_isr 0059              __end_of_UART2_rx_vect_isr 6126  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 63AA  
                     _UART2_Initialize 580E                                 _WaitMs 5CBC  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 54FC                                 _memset 3724  
                               clear_0 4F76                                 clear_1 4F84  
                               clear_2 4F96                                 clear_3 4FA2  
                               clear_4 4FAE                                 _printf 57AC  
                   _eaDogM_WriteString 5290                              ?_ADCC_ISR 0059  
                               _strlen 51EE                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 59B2                         _PMD_Initialize 6348  
 __end_of_INT2_DefaultInterruptHandler 6410  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 640E                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 60FE                                 lltemp0 0039  
                               lltemp1 0041                                 lltemp2 0049  
                               lltemp3 0051                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 58C8  
                     __end_of_vfprintf 5464                             _StartTimer 5C48  
                      _CLC1_Initialize 6192          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5A88                      _SYSTEM_Initialize 5ACE  
                           __accesstop 0060                __end_of__initialization 4FC0  
                            ?_INT0_ISR 0059                              ?_INT1_ISR 0059  
                            ?_INT2_ISR 0059              __end_of_CLKREF_Initialize 63B4  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5B10                 __end_of_ringBufS_flush 558E  
                       __pcstackCOMRAM 0059                             ___inthi_sp 0D2A  
                         __pidataBANK0 574A                           __pidataBANK1 4E26  
                         __pidataBANK3 5C84                              ?_TMR5_ISR 0059  
                            ?_TMR6_ISR 0059                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4C6A                          __end_of_fputs 54FC  
                        __end_of_srand 5D26                  __end_of_TMR5_CallBack 6192  
                        __end_of_putch 62E6                __end_of_TMR6_Initialize 5F98  
               __end_of_PMD_Initialize 635C                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 0059                  __end_of_TMR6_CallBack 616E  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 63C0       __end_of_INT2_SetInterruptHandler 6010  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 5B10  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 62B0                             __pbssBANK0 00C2  
                           __pbssBANK1 01D0                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 0059                             ??_INT1_ISR 0059  
                           ??_INT2_ISR 0059                      __end_of_TimerDone 614A  
                     _DMA1_DMADCNT_ISR 63B4              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 6294                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5FC0                __end_of_ADCC_Initialize 59FC  
                           ??_TMR5_ISR 005A                             ??_TMR6_ISR 0059  
                   __size_of_secs_send 026A                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 621A  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 0059  
                     _DMA1_DMASCNT_ISR 635C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 61B4                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 0059  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 62CC                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5B50                     __end_of_UART1_Read 5C48  
                   __end_of_UART2_Read 5C0A      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 574A                        __size_of_WaitMs 0036  
                              ___aodiv 3CCE                                ___aomod 467A  
                           _m_protocol 2AF4              __end_of_UART1_Receive_ISR 623A  
                         __psmallconst 2000                   __end_of_init_display 4D54  
                              __pcinit 4EF6                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 636C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20C6                                __ptext1 3F4E  
                              __ptext2 41CC                                __ptext3 4D54  
                              __ptext4 5E04                                __ptext5 63D6  
                              __ptext6 5B50                                __ptext7 5E2E  
                              __ptext8 63DE                                __ptext9 4436  
                    _UART2_Receive_ISR 623A                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us257999 3F38                  _OSCILLATOR_Initialize 6332  
                              us268999 48A8                                us348999 466C  
                              us470999 2FA2                           __size_of_abs 0046  
                              _r_block 00C2                           __size_of_pad 0114  
                              us487999 3A22                                _mode_sw 002C  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 586C                     m_protocol@rxData_l 002B  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 4FC6  
                              _strncmp 48BA                   end_of_initialization 4FC0  
                    __end_of_secs_send 4436               _INT2_SetInterruptHandler 5FE8  
             __size_of_secs_II_message 0244                             _r_protocol 3408  
  __end_of_UART1_SetTxInterruptHandler 5F48            _UART1_SetTxInterruptHandler 5F20  
  __end_of_UART2_SetRxInterruptHandler 5F20            _UART2_SetRxInterruptHandler 5EF8  
                           _t_protocol 3F4E                      __end_of_vfpfcnvrt 2AF4  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 6402  
            __end_of_UART2_Receive_ISR 625A                         wdtdelay@dcount 00EE  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005A  
                       _block_checksum 4D54                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 5F98  
                _TMR5_InterruptHandler 00F2   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 6088  
          _ADCC_SetADIInterruptHandler 6060                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 5616  
                      _SPI1_Initialize 631C                       _UART1_put_buffer 5E2E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                         __end_of_WaitMs 5CF2  
         __end_of_INTERRUPT_Initialize 56E6                 __end_of_block_checksum 4E26  
 __end_of_INT0_DefaultInterruptHandler 640C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 640A             __size_of_UART1_Receive_ISR 0020  
                        __pidataCOMRAM 6412                      __size_of_TMR5_ISR 004E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3A10                         __end_of_printf 580E  
             __end_of_DMA1_DMADCNT_ISR 63BE                       _UART2_put_buffer 5E04  
                __end_of_INT0_CallBack 61D6                         __end_of_strlen 5290  
                  start_initialization 4EF6   __end_of_TMR5_DefaultInterruptHandler 631C  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 6302  
      __size_of_PIN_MANAGER_Initialize 009E                            __end_of_abs 5A42  
                __end_of_INT1_CallBack 61F8                            __end_of_pad 4B5E  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5EA8  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 621A  
                 secs_II_message@block 0001                          _uart1RxBuffer 0280  
                        _uart1TxBuffer 02C0                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 636C                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 63CC                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009E  
                            _TimerDone 6126                          _ringBufS_init 5EA8  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                          __pdataBANK3 0386             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 59B2                        run_checksum@sum 00FD  
      __end_of_eaDogM_WriteStringAtPos 5D7E                __end_of_DMA1_Initialize 5680  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 6060  
              __end_of_SPI1_Initialize 6332               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 0494  
            __size_of_ringBufS_put_dma 00AA                           _init_display 4C6A  
               __end_of_DMA1_DMAOR_ISR 63D6                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00F5  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 532E  
                 __end_of_wait_lcd_set 63FC                              __ptext100 6100  
                            __ptext101 623A                              __ptext110 5B10  
                            __ptext102 62E8                              __ptext111 616E  
                            __ptext103 614A                              __ptext112 6302  
                            __ptext104 5A88                              __ptext113 0000  
                            __ptext105 635C                              __ptext106 63B4  
                            __ptext107 63C0                              __ptext108 63CC  
                            __ptext109 5918                     __end_of_StartTimer 5C84  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5D80                    __size_of_r_protocol 031C  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 027E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                         __size_of_srand 0034  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5680                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 0059  
                             _INT0_ISR 637C                               _INT1_ISR 638C  
                             _INT2_ISR 639C                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 41CC  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00DB  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u431_48 609A                               _PIR1bits 0039A1  
                             i2u433_48 60C2                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u435_48 60EA  
                             i2u437_48 6112                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
                             i2u585_48 5D98               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5DD8                               _TMR5_ISR 5918  
                             _TMR6_ISR 62E8                              _vfpfcnvrt 2646  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 616E  
                            _start_lcd 63FC              __size_of_send_lcd_cmd_dma 0050  
                        _TMR6_CallBack 614A               __end_of_UART1_put_buffer 5E58  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5BCC                    __end_of_UART2_Write 5B8E  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4F0A                              copy_data1 4F2C  
                            copy_data2 4F4E               _INT0_SetInterruptHandler 6038  
               _uart1TxBufferRemaining 0036    __end_of_UART2_SetTxInterruptHandler 5EF8  
          _UART2_SetTxInterruptHandler 5ED0                           _uart1RxCount 0033  
             __end_of_UART2_put_buffer 5E2E                           _uart2RxCount 002D  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5D52  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 6278                           _send_lcd_cmd 5E80  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 6294                  __end_of_DMA1_DMAA_ISR 63CA  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 0059  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 637A  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005A  
                             __ptext10 5CF2                               __ptext11 4FC6  
                             __ptext20 63E6                               __ptext12 3408  
                             __ptext21 5BCC                               __ptext13 5B8E  
                             __ptext30 5290                               __ptext22 63EE  
                             __ptext14 2AF4                               __ptext31 636C  
                             __ptext23 5C0A                               __ptext15 508E  
                             __ptext40 53CC                               __ptext32 58C8  
                             __ptext24 4C6A                               __ptext16 5D26  
                             __ptext41 2646                               __ptext33 63F6  
                             __ptext25 5E58                               __ptext17 5CBC  
                             __ptext50 51EE                               __ptext42 48BA  
                             __ptext34 6278                               __ptext26 5E80  
                             __ptext18 6126                               __ptext51 5464  
                             __ptext43 3A10                               __ptext35 586C  
                             __ptext27 625A                               __ptext19 5C48  
                             __ptext60 5F20                               __ptext52 4B5E  
                             __ptext44 2F88                               __ptext36 63FC  
                             __ptext28 5EA8                               __ptext61 5F48  
                             __ptext53 62CC                               __ptext45 59FC  
                             __ptext37 54FC                               __ptext29 5D52  
                             __ptext70 6294                               __ptext62 5F70  
                             __ptext54 5144                               __ptext46 467A  
                             __ptext38 3724                               __ptext71 5680  
                             __ptext63 5F98                               __ptext55 5ACE  
                             __ptext47 3CCE                               __ptext39 57AC  
                             __ptext80 59B2                               __ptext72 5966  
                             __ptext64 5A42                               __ptext56 580E  
                             __ptext48 558E                               __ptext81 6060  
                             __ptext73 5FE8                               __ptext65 5FC0  
                             __ptext57 5ED0                               __ptext49 4A4A  
                             __ptext90 640E                               __ptext82 637C  
                             __ptext74 6010                               __ptext66 631C  
                             __ptext58 5EF8                               __ptext91 6404  
                             __ptext83 61B4                               __ptext75 6038  
                             __ptext67 6348                               __ptext59 56E6  
                             __ptext92 5D80                               __ptext84 640A  
                             __ptext76 62B0                               __ptext68 532E  
                             __ptext93 6410                               __ptext85 638C  
                             __ptext77 5616                               __ptext69 6332  
                             __ptext94 6088                               __ptext86 61D6  
                             __ptext78 63AA                               __ptext95 5DAC  
                             __ptext87 640C                               __ptext79 6192  
                             __ptext96 60B0                               __ptext88 639C  
                             __ptext97 621A                               __ptext89 61F8  
                             __ptext98 60D8                               __ptext99 5DD8  
                      _secs_II_message 4436               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 5144                     __end_of_m_protocol 2F88  
                        __size_of_ctoa 0088                          __size_of_main 0580  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 0059                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00F8  
                            stoa@F1144 0100                     ??_DMA1_DMASCNT_ISR 005A  
                             _spi_link 00CF                               _wdtdelay 586C  
           __end_of_UART2_Transmit_ISR 5E04                               _vfprintf 53CC  
                  secs_gem_state@block 0027                      _UART1_is_rx_ready 63EE  
                          _UART1_Write 5B8E   __end_of_INT1_DefaultInterruptHandler 640E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 640C  
                          _UART2_Write 5B50                      _UART1_is_tx_ready 63DE  
                      r_protocol@retry 005D                      t_protocol@requeue 0028  
                        ??_Default_ISR 0059                     __end_of_r_protocol 3724  
                          _uart1RxHead 0035                            _uart1TxHead 0038  
                          _uart2RxHead 002F                            _uart1RxTail 0034  
                          _uart2TxHead 0032                            _uart1TxTail 0037  
                          _uart2RxTail 002E                            _uart2TxTail 0031  
                         _wait_lcd_set 63F6                     _EXT_INT_Initialize 5966  
 __end_of_TMR6_DefaultInterruptHandler 5ACE  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5A88                     __end_of_t_protocol 41CC  
 __end_of_ADCC_DefaultInterruptHandler 6412  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6410                               intlevel2 0000  
                    _send_lcd_cmd_long 5E58                __size_of_secs_gem_state 00B6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 532E  
              __end_of_NCO1_Initialize 62B0                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 63F6                             _UART1_Read 5C0A  
               __size_of_INT1_CallBack 0022                             _UART2_Read 5BCC  
            __end_of_UART1_is_tx_ready 63E6                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 63E6                 _uart2TxBufferRemaining 0030  
                    _UART2_is_tx_ready 63D6                       _send_lcd_cmd_dma 58C8  
                TMR5_ISR@CountCallBack 0023                __end_of_secs_II_message 467A  
     __end_of_INT1_SetInterruptHandler 6038              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00E7                       ??_DMA1_DMAOR_ISR 005A  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 0029  
            __end_of_send_lcd_cmd_long 5E80                    __end_of_Default_ISR 640A  
       __end_of_PIN_MANAGER_Initialize 53CC                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 5D52              __size_of_UART2_Initialize 005E  
